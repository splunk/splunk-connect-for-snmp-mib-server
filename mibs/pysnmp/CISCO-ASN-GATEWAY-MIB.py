#
# PySNMP MIB module CISCO-ASN-GATEWAY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ASN-GATEWAY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:32:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoAlarmSeverity, EntPhysicalIndexOrZero = mibBuilder.importSymbols("CISCO-TC", "CiscoAlarmSeverity", "EntPhysicalIndexOrZero")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, Bits, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, NotificationType, iso, MibIdentifier, Counter32, Counter64, ModuleIdentity, IpAddress, TimeTicks, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Bits", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "NotificationType", "iso", "MibIdentifier", "Counter32", "Counter64", "ModuleIdentity", "IpAddress", "TimeTicks", "ObjectIdentity")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
ciscoAgwMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 638))
ciscoAgwMIB.setRevisions(('2009-05-26 00:00', '2008-04-22 00:00', '2008-03-24 00:00', '2007-09-26 00:00',))
if mibBuilder.loadTexts: ciscoAgwMIB.setLastUpdated('200905260000Z')
if mibBuilder.loadTexts: ciscoAgwMIB.setOrganization('Cisco Systems, Inc.')
ciscoAgwMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 638, 0))
ciscoAgwMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 638, 1))
ciscoAgwMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 638, 2))
cagwInstances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 1))
cagwState = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2))
cagwStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3))
cagwNotifMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4))
cagwNotifInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 5))
cagwGlobalStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1))
cagwDhcpStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2))
cagwMessageStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 3))
cagwUserGrpStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4))
cagwPathStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5))
cagwArpStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 6))
cagwInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 1, 1), )
if mibBuilder.loadTexts: cagwInstanceTable.setStatus('current')
cagwInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-ASN-GATEWAY-MIB", "cagwInstanceIndex"))
if mibBuilder.loadTexts: cagwInstanceEntry.setStatus('current')
cagwInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cagwInstanceIndex.setStatus('current')
cagwInstancePhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 1, 1, 1, 2), EntPhysicalIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwInstancePhysicalIndex.setStatus('current')
cagwInstanceDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 1, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwInstanceDescription.setStatus('current')
cagwInstanceVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 1, 1, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwInstanceVersion.setStatus('current')
cagwInstanceOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwInstanceOperState.setStatus('current')
cagwInstanceSessionRedundancyAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwInstanceSessionRedundancyAdmin.setStatus('current')
cagwStateTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1), )
if mibBuilder.loadTexts: cagwStateTable.setStatus('current')
cagwStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-ASN-GATEWAY-MIB", "cagwInstanceIndex"))
if mibBuilder.loadTexts: cagwStateEntry.setStatus('current')
cagwMaximumBaseStations = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1, 1, 1), Integer32()).setUnits('base stations').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cagwMaximumBaseStations.setStatus('current')
cagwMaximumSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1, 1, 2), Integer32()).setUnits('subscribers').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cagwMaximumSubscribers.setStatus('current')
cagwMaximumFlowsPerSession = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1, 1, 3), Integer32()).setUnits('flows').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cagwMaximumFlowsPerSession.setStatus('current')
cagwCurrentBaseStations = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1, 1, 4), Gauge32()).setUnits('paths').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCurrentBaseStations.setStatus('current')
cagwCurrentDataPaths = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1, 1, 5), Gauge32()).setUnits('paths').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCurrentDataPaths.setStatus('current')
cagwCurrentSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1, 1, 6), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCurrentSubscribers.setStatus('current')
cagwCurrentSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1, 1, 7), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCurrentSessions.setStatus('current')
cagwCurrentFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1, 1, 8), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCurrentFlows.setStatus('current')
cagwCurrentHosts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1, 1, 9), Gauge32()).setUnits('hosts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCurrentHosts.setStatus('current')
cagwNetworkBehindMs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1, 1, 10), Gauge32()).setUnits('mobile stations').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwNetworkBehindMs.setStatus('current')
cagwPendingSignalingPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1, 1, 11), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPendingSignalingPkts.setStatus('current')
cagwCurrentFramedRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1, 1, 12), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCurrentFramedRoutes.setStatus('current')
cagwCurrentFramedRouteSubs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1, 1, 13), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCurrentFramedRouteSubs.setStatus('current')
cagwCurrentAutoProvSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1, 1, 14), Gauge32()).setUnits('Sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCurrentAutoProvSessions.setStatus('current')
cagwCurrentSessionsWithIpPktsRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1, 1, 15), Gauge32()).setUnits('Sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCurrentSessionsWithIpPktsRedir.setStatus('current')
cagwCurrentPmipEnabledSubs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 2, 1, 1, 16), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCurrentPmipEnabledSubs.setStatus('current')
cagwGlobalStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1), )
if mibBuilder.loadTexts: cagwGlobalStatisticsTable.setStatus('current')
cagwGlobalStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1), ).setIndexNames((0, "CISCO-ASN-GATEWAY-MIB", "cagwInstanceIndex"))
if mibBuilder.loadTexts: cagwGlobalStatisticsEntry.setStatus('current')
cagwCreatedSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 1), Counter32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCreatedSubscribers.setStatus('current')
cagwDeletedSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 2), Counter32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDeletedSubscribers.setStatus('current')
cagwCreatedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 3), Counter32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCreatedSessions.setStatus('current')
cagwDeletedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 4), Counter32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDeletedSessions.setStatus('current')
cagwCreatedFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 5), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCreatedFlows.setStatus('current')
cagwDeletedFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 6), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDeletedFlows.setStatus('current')
cagwCreatedHosts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 7), Counter32()).setUnits('hosts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCreatedHosts.setStatus('current')
cagwDeletedHosts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 8), Counter32()).setUnits('hosts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDeletedHosts.setStatus('current')
cagwCreatedBaseStations = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 9), Counter32()).setUnits('paths').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCreatedBaseStations.setStatus('current')
cagwDeletedBaseStations = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 10), Counter32()).setUnits('paths').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDeletedBaseStations.setStatus('current')
cagwCreatedDataPaths = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 11), Counter32()).setUnits('paths').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCreatedDataPaths.setStatus('current')
cagwDeletedDataPaths = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 12), Counter32()).setUnits('paths').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDeletedDataPaths.setStatus('current')
cagwProcessedSignalingPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwProcessedSignalingPkts.setStatus('current')
cagwRequeuedSignalingPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 14), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwRequeuedSignalingPkts.setStatus('current')
cagwCongestionSignalingPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 15), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCongestionSignalingPktsDrops.setStatus('current')
cagwServiceDisabledSignalingPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwServiceDisabledSignalingPktsDrops.setStatus('current')
cagwServiceNotReadySignalingPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 17), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwServiceNotReadySignalingPktsDrops.setStatus('current')
cagwEncapErrorSignalingPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 18), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwEncapErrorSignalingPktsDrops.setStatus('current')
cagwDisposedSignalingPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 19), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDisposedSignalingPktsDrops.setStatus('current')
cagwEncapErrorDataPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 41), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwEncapErrorDataPktsDrops.setStatus('current')
cagwInvalidAddressDataPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 42), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwInvalidAddressDataPktsDrops.setStatus('current')
cagwServiceDisabledDataPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 43), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwServiceDisabledDataPktsDrops.setStatus('current')
cagwInvalidProtocolTypeDataPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 44), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwInvalidProtocolTypeDataPktsDrops.setStatus('current')
cagwLengthErrorDataPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 45), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwLengthErrorDataPktsDrops.setStatus('current')
cagwAbsentKeyDataPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 46), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwAbsentKeyDataPktsDrops.setStatus('current')
cagwFlowNotFoundDataPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 47), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwFlowNotFoundDataPktsDrops.setStatus('current')
cagwFlowPathNotFoundDataPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 48), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwFlowPathNotFoundDataPktsDrops.setStatus('current')
cagwFlowPathInvalidSourceDataPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 49), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwFlowPathInvalidSourceDataPktsDrops.setStatus('current')
cagwSessionNotFoundDataPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 50), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwSessionNotFoundDataPktsDrops.setStatus('current')
cagwSubscriberNotFoundDataPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 51), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwSubscriberNotFoundDataPktsDrops.setStatus('current')
cagwChecksumErrorDataPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 52), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwChecksumErrorDataPktsDrops.setStatus('current')
cagwIngressFilteringDataPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 53), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIngressFilteringDataPktsDrops.setStatus('current')
cagwSequenceNumberErrorDataPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 54), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwSequenceNumberErrorDataPktsDrops.setStatus('current')
cagwFragmentedDataPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 55), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwFragmentedDataPktsDrops.setStatus('current')
cagwFramedRouteInserted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 56), Counter32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwFramedRouteInserted.setStatus('obsolete')
cagwFramedRouteInsertFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 57), Counter32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwFramedRouteInsertFailed.setStatus('obsolete')
cagwFramedRouteDeleted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 58), Counter32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwFramedRouteDeleted.setStatus('obsolete')
cagwServiceFlowProfileNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 59), Counter32()).setUnits('service flow profiles').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwServiceFlowProfileNotFound.setStatus('current')
cagwQosProfileNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 60), Counter32()).setUnits('qos profiles').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwQosProfileNotFound.setStatus('current')
cagwClassifierProfileNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 61), Counter32()).setUnits('classifier profiles').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwClassifierProfileNotFound.setStatus('current')
cagwReceivedDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 62), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwReceivedDataPkts.setStatus('deprecated')
cagwReceivedDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 63), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwReceivedDataBytes.setStatus('deprecated')
cagwSentDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 64), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwSentDataPkts.setStatus('deprecated')
cagwSentDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 65), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwSentDataBytes.setStatus('deprecated')
cagwRejectedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 66), Counter32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwRejectedSessions.setStatus('current')
cagwRejectedFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 67), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwRejectedFlows.setStatus('current')
cagwRejectedBaseStations = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 68), Counter32()).setUnits('paths').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwRejectedBaseStations.setStatus('current')
cagwSessionsDeletedByAgw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 69), Counter32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwSessionsDeletedByAgw.setStatus('current')
cagwIpGreReceivedDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 70), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIpGreReceivedDataPkts.setStatus('current')
cagwIpGreReceivedDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 71), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIpGreReceivedDataBytes.setStatus('current')
cagwIpGreSentDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 72), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIpGreSentDataPkts.setStatus('current')
cagwIpGreSentDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 73), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIpGreSentDataBytes.setStatus('current')
cagwEthGreReceivedDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 74), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwEthGreReceivedDataPkts.setStatus('current')
cagwEthGreReceivedDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 75), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwEthGreReceivedDataBytes.setStatus('current')
cagwEthGreSentDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 76), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwEthGreSentDataPkts.setStatus('current')
cagwEthGreSentDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 77), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwEthGreSentDataBytes.setStatus('current')
cagwRejectedHosts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 78), Counter32()).setUnits('hosts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwRejectedHosts.setStatus('current')
cagwAgedOutStaticHosts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 79), Counter32()).setUnits('hosts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwAgedOutStaticHosts.setStatus('current')
cagwSuccessfulHandoff = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 80), Counter32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwSuccessfulHandoff.setStatus('current')
cagwFailedHandoff = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 81), Counter32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwFailedHandoff.setStatus('current')
cagwSuccessfulCMACKeyUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 82), Counter32()).setUnits('CMACKeyUpdates').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwSuccessfulCMACKeyUpdate.setStatus('current')
cagwFailedCMACKeyUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 83), Counter32()).setUnits('CMACKeyUpdates').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwFailedCMACKeyUpdate.setStatus('current')
cagwSuccessfulSecurityKeyExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 84), Counter32()).setUnits('SecurityKeyExchange').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwSuccessfulSecurityKeyExchange.setStatus('current')
cagwFailedSecurityKeyExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 85), Counter32()).setUnits('SecurityKeyExchange').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwFailedSecurityKeyExchange.setStatus('current')
cagwIpGreReceivedRedirectedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 86), Counter64()).setUnits('IpDataPktsRedirected').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIpGreReceivedRedirectedPkts.setStatus('current')
cagwIpGreReceivedRedirectedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 87), Counter64()).setUnits('IpDataBytesRedirected').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIpGreReceivedRedirectedBytes.setStatus('current')
cagwEthGreReceivedRedirectedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 88), Counter64()).setUnits('EthDataPktsRedirected').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwEthGreReceivedRedirectedPkts.setStatus('current')
cagwEthGreReceivedRedirectedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 89), Counter64()).setUnits('EthDataBytesRedirected').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwEthGreReceivedRedirectedBytes.setStatus('current')
cagwThrottlingOfPuntsDataPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 90), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwThrottlingOfPuntsDataPktsDrops.setStatus('current')
cagwLearningUpstreamDataPktsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 91), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwLearningUpstreamDataPktsDrops.setStatus('current')
cagwPuntedDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 92), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPuntedDataPkts.setStatus('current')
cagwRejectedSessionUnapprovedBs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 93), Counter32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwRejectedSessionUnapprovedBs.setStatus('current')
cagwPktsDroppedStaticIpHostNotAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 94), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPktsDroppedStaticIpHostNotAllowed.setStatus('current')
cagwPktsDroppedMulticastBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 95), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPktsDroppedMulticastBroadcast.setStatus('current')
cagwSlaProfileNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 96), Counter32()).setUnits('SLA profile').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwSlaProfileNotFound.setStatus('current')
cagwPktsDroppedMipIncomplete = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 97), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPktsDroppedMipIncomplete.setStatus('current')
cagwCreatedPmipEnabledSubs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 98), Counter32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCreatedPmipEnabledSubs.setStatus('current')
cagwDeletedPmipEnabledSubs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 99), Counter32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDeletedPmipEnabledSubs.setStatus('current')
cagwPktsDropPmipStaticIpHost = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 100), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPktsDropPmipStaticIpHost.setStatus('current')
cagwIdleModeEntryMsBsInitiated = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 101), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModeEntryMsBsInitiated.setStatus('current')
cagwIdleModeEntryBwgInitiated = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 102), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModeEntryBwgInitiated.setStatus('current')
cagwIdleModeEntryFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 103), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModeEntryFailures.setStatus('current')
cagwIdleModeExitMsBsInitiated = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 104), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModeExitMsBsInitiated.setStatus('current')
cagwIdleModeExitBwgInitiated = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 105), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModeExitBwgInitiated.setStatus('current')
cagwIdleModeExitFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 106), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModeExitFailures.setStatus('current')
cagwIdleModeLocUpdtPgidChange = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 107), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModeLocUpdtPgidChange.setStatus('current')
cagwIdleModeLocUpdtPowerDown = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 108), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModeLocUpdtPowerDown.setStatus('current')
cagwIdleModeLocUpdtPeriodic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 109), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModeLocUpdtPeriodic.setStatus('current')
cagwIdleModeLocUpdtFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 110), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModeLocUpdtFailures.setStatus('current')
cagwIdleModePageAttemptsDwnlnkData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 111), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModePageAttemptsDwnlnkData.setStatus('current')
cagwIdleModePageFailuresDwnlnkData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 112), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModePageFailuresDwnlnkData.setStatus('current')
cagwIdleModePageAttemptsLocUpdt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 113), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModePageAttemptsLocUpdt.setStatus('current')
cagwIdleModePageFailuresLocUpdt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 114), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModePageFailuresLocUpdt.setStatus('current')
cagwIdleModeDirectedPagingSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 115), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModeDirectedPagingSuccess.setStatus('current')
cagwIdleModeDirectedPagingRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 116), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModeDirectedPagingRetries.setStatus('current')
cagwIdleModeFloodPagingSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 117), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModeFloodPagingSuccess.setStatus('current')
cagwIdleModeFloodPagingRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 118), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIdleModeFloodPagingRetries.setStatus('current')
cagwPodRequestsRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 119), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPodRequestsRecv.setStatus('current')
cagwPodSuccessNotifsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 120), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPodSuccessNotifsSent.setStatus('current')
cagwPodFailureNotifsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 121), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPodFailureNotifsSent.setStatus('current')
cagwCoaReqRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 122), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCoaReqRecv.setStatus('current')
cagwCoaSuccessNotifsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 123), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCoaSuccessNotifsSent.setStatus('current')
cagwCoaFailureNotifsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 124), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwCoaFailureNotifsSent.setStatus('current')
cagwHotlineUplinkPktDropAclDeny = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 125), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwHotlineUplinkPktDropAclDeny.setStatus('current')
cagwHotlineDownlinkPktDropAclDeny = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 126), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwHotlineDownlinkPktDropAclDeny.setStatus('current')
cagwUplinkPktDropUsrgrpAclDeny = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 127), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUplinkPktDropUsrgrpAclDeny.setStatus('current')
cagwDownlinkPktDropUsrgrpAclDeny = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 128), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDownlinkPktDropUsrgrpAclDeny.setStatus('current')
cagwDownlinkPktDropPagingAclDeny = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 1, 1, 1, 129), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDownlinkPktDropPagingAclDeny.setStatus('current')
cagwDhcpStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1), )
if mibBuilder.loadTexts: cagwDhcpStatisticsTable.setStatus('current')
cagwDhcpStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1), ).setIndexNames((0, "CISCO-ASN-GATEWAY-MIB", "cagwInstanceIndex"))
if mibBuilder.loadTexts: cagwDhcpStatisticsEntry.setStatus('current')
cagwDhcpDiscoverPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 1), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpDiscoverPackets.setStatus('current')
cagwDhcpOfferPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpOfferPackets.setStatus('current')
cagwDhcpRequestPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpRequestPackets.setStatus('current')
cagwDhcpDeclinePackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpDeclinePackets.setStatus('current')
cagwDhcpAckPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpAckPackets.setStatus('current')
cagwDhcpNakPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpNakPackets.setStatus('current')
cagwDhcpReleasePackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpReleasePackets.setStatus('current')
cagwDhcpInformPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpInformPackets.setStatus('current')
cagwDhcpLeaseQueryPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpLeaseQueryPackets.setStatus('current')
cagwDhcpUnknownPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpUnknownPackets.setStatus('current')
cagwDhcpProxyDiscoverPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 11), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpProxyDiscoverPackets.setStatus('current')
cagwDhcpProxyOfferPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpProxyOfferPackets.setStatus('current')
cagwDhcpProxyRequestPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpProxyRequestPackets.setStatus('current')
cagwDhcpProxyDeclinePackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 14), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpProxyDeclinePackets.setStatus('current')
cagwDhcpProxyAckPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 15), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpProxyAckPackets.setStatus('current')
cagwDhcpProxyNakPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpProxyNakPackets.setStatus('current')
cagwDhcpProxyReleasePackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 17), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpProxyReleasePackets.setStatus('current')
cagwDhcpProxyInformPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 18), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpProxyInformPackets.setStatus('current')
cagwDhcpProxyLeaseQueryPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 19), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpProxyLeaseQueryPackets.setStatus('current')
cagwDhcpProxyUnknownPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 2, 1, 1, 20), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwDhcpProxyUnknownPackets.setStatus('current')
cagwMsgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 3, 1), )
if mibBuilder.loadTexts: cagwMsgTable.setStatus('current')
cagwMsgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 3, 1, 1), ).setIndexNames((0, "CISCO-ASN-GATEWAY-MIB", "cagwInstanceIndex"), (0, "CISCO-ASN-GATEWAY-MIB", "cagwMsgType"))
if mibBuilder.loadTexts: cagwMsgEntry.setStatus('current')
cagwMsgType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 11, 12, 21, 22, 23, 31, 32, 33, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 61, 62, 71, 72, 73, 74, 75, 76, 77))).clone(namedValues=NamedValues(("preAttachmentRequest", 1), ("preAttachmentResponse", 2), ("preAttachmentAck", 3), ("authRelayEapStart", 11), ("authRelayEapTransfer", 12), ("keyChangeDirective", 21), ("keyChangeConfirm", 22), ("keyChangeAck", 23), ("attachmentRequest", 31), ("attachmentResponse", 32), ("attachmentAck", 33), ("datapathRegRequest", 41), ("datapathRegResponse", 42), ("datapathRegAck", 43), ("datapathModifyRequest", 44), ("datapathModifyResponse", 45), ("datapathModifyAck", 46), ("datapathDeregRequest", 47), ("datapathDeregResponse", 48), ("datapathDeregAck", 49), ("contextDeliveryRequest", 51), ("contextDeliveryReport", 52), ("contextDeliveryAck", 53), ("keepaliveRequest", 61), ("keepaliveResponse", 62), ("handoffRegRequest", 71), ("handoffRegResponse", 72), ("handoffRegAck", 73), ("handoffDeregRequest", 74), ("handoffDeregResponse", 75), ("handoffDeregAck", 76), ("handoffSuccessful", 77))))
if mibBuilder.loadTexts: cagwMsgType.setStatus('current')
cagwMsgSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 3, 1, 1, 2), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwMsgSent.setStatus('current')
cagwMsgReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 3, 1, 1, 3), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwMsgReceived.setStatus('current')
cagwMsgResent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 3, 1, 1, 4), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwMsgResent.setStatus('current')
cagwUserGrpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1), )
if mibBuilder.loadTexts: cagwUserGrpTable.setStatus('current')
cagwUserGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1), ).setIndexNames((0, "CISCO-ASN-GATEWAY-MIB", "cagwInstanceIndex"), (0, "CISCO-ASN-GATEWAY-MIB", "cagwUserGrpDomainName"))
if mibBuilder.loadTexts: cagwUserGrpEntry.setStatus('current')
cagwUserGrpDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64)))
if mibBuilder.loadTexts: cagwUserGrpDomainName.setStatus('current')
cagwUserGrpServiceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("operational", 0), ("disable", 1), ("maintenance", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpServiceMode.setStatus('current')
cagwUserGrpCreatedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 3), Counter32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpCreatedSessions.setStatus('current')
cagwUserGrpDeletedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 4), Counter32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpDeletedSessions.setStatus('current')
cagwUserGrpCurrentSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 5), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpCurrentSessions.setStatus('current')
cagwUserGrpCreatedFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 6), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpCreatedFlows.setStatus('current')
cagwUserGrpDeletedFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 7), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpDeletedFlows.setStatus('current')
cagwUserGrpCurrentFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 8), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpCurrentFlows.setStatus('current')
cagwUserGrpPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpPacketsSent.setStatus('deprecated')
cagwUserGrpBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 10), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpBytesSent.setStatus('deprecated')
cagwUserGrpPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 11), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpPacketsReceived.setStatus('deprecated')
cagwUserGrpBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 12), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpBytesReceived.setStatus('deprecated')
cagwUserGrpInvalidSourcePacketsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpInvalidSourcePacketsDrops.setStatus('current')
cagwUserGrpInvalidSourceBytesDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 14), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpInvalidSourceBytesDrops.setStatus('current')
cagwUserGrpIpGrePacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 15), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpIpGrePacketsSent.setStatus('current')
cagwUserGrpIpGreBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 16), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpIpGreBytesSent.setStatus('current')
cagwUserGrpIpGrePacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 17), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpIpGrePacketsReceived.setStatus('current')
cagwUserGrpIpGreBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 18), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpIpGreBytesReceived.setStatus('current')
cagwUserGrpEthGrePacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 19), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpEthGrePacketsSent.setStatus('current')
cagwUserGrpEthGreBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 20), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpEthGreBytesSent.setStatus('current')
cagwUserGrpEthGrePacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 21), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpEthGrePacketsReceived.setStatus('current')
cagwUserGrpEthGreBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 22), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpEthGreBytesReceived.setStatus('current')
cagwUserGrpOverwritten = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 23), Counter32()).setUnits('number').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpOverwritten.setStatus('current')
cagwUserGrpPodReqRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 24), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpPodReqRecv.setStatus('current')
cagwUserGrpPodSuccessNotifsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 25), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpPodSuccessNotifsSent.setStatus('current')
cagwUserGrpPodFailureNotifsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 26), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpPodFailureNotifsSent.setStatus('current')
cagwUserGrpCoaReqRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 27), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpCoaReqRecv.setStatus('current')
cagwUserGrpCoaSuccessNotifsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 28), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpCoaSuccessNotifsSent.setStatus('current')
cagwUserGrpCoaFailureNotifsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 29), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpCoaFailureNotifsSent.setStatus('current')
cagwUserGrpRejSession = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 4, 1, 1, 30), Counter32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwUserGrpRejSession.setStatus('current')
cagwPathTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 1), )
if mibBuilder.loadTexts: cagwPathTable.setStatus('obsolete')
cagwPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 1, 1), ).setIndexNames((0, "CISCO-ASN-GATEWAY-MIB", "cagwInstanceIndex"), (0, "CISCO-ASN-GATEWAY-MIB", "cagwPathRemoteIpType"), (0, "CISCO-ASN-GATEWAY-MIB", "cagwPathRemoteIp"), (0, "CISCO-ASN-GATEWAY-MIB", "cagwPathType"))
if mibBuilder.loadTexts: cagwPathEntry.setStatus('obsolete')
cagwPathRemoteIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cagwPathRemoteIpType.setStatus('obsolete')
cagwPathRemoteIp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 1, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(4, 20)))
if mibBuilder.loadTexts: cagwPathRemoteIp.setStatus('obsolete')
cagwPathType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("signaling", 1), ("data", 2))))
if mibBuilder.loadTexts: cagwPathType.setStatus('obsolete')
cagwPathLocalIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 1, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathLocalIpType.setStatus('obsolete')
cagwPathLocalIp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 1, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathLocalIp.setStatus('obsolete')
cagwPathCurrentSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 1, 1, 6), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathCurrentSessions.setStatus('obsolete')
cagwPathCurrentFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 1, 1, 7), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathCurrentFlows.setStatus('obsolete')
cagwPathPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 1, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathPacketsSent.setStatus('obsolete')
cagwPathBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 1, 1, 9), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathBytesSent.setStatus('obsolete')
cagwPathPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 1, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathPacketsReceived.setStatus('obsolete')
cagwPathBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 1, 1, 11), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathBytesReceived.setStatus('obsolete')
cagwPathRev1Table = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 2), )
if mibBuilder.loadTexts: cagwPathRev1Table.setStatus('current')
cagwPathRev1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 2, 1), ).setIndexNames((0, "CISCO-ASN-GATEWAY-MIB", "cagwInstanceIndex"), (0, "CISCO-ASN-GATEWAY-MIB", "cagwPathTypeRev1"), (0, "CISCO-ASN-GATEWAY-MIB", "cagwPathRemoteIpTypeRev1"), (0, "CISCO-ASN-GATEWAY-MIB", "cagwPathRemoteIpRev1"))
if mibBuilder.loadTexts: cagwPathRev1Entry.setStatus('current')
cagwPathTypeRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("signaling", 1), ("data", 2))))
if mibBuilder.loadTexts: cagwPathTypeRev1.setStatus('current')
cagwPathRemoteIpTypeRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 2, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cagwPathRemoteIpTypeRev1.setStatus('current')
cagwPathRemoteIpRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 2, 1, 3), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(4, 20)))
if mibBuilder.loadTexts: cagwPathRemoteIpRev1.setStatus('current')
cagwPathLocalIpTypeRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 2, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathLocalIpTypeRev1.setStatus('current')
cagwPathLocalIpRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 2, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathLocalIpRev1.setStatus('current')
cagwPathCurrentSessionsRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 2, 1, 6), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathCurrentSessionsRev1.setStatus('current')
cagwPathCurrentFlowsRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 2, 1, 7), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathCurrentFlowsRev1.setStatus('current')
cagwPathIpGrePacketsSentRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 2, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathIpGrePacketsSentRev1.setStatus('current')
cagwPathIpGreBytesSentRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 2, 1, 9), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathIpGreBytesSentRev1.setStatus('current')
cagwPathIpGrePacketsReceivedRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 2, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathIpGrePacketsReceivedRev1.setStatus('current')
cagwPathIpGreBytesReceivedRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 2, 1, 11), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathIpGreBytesReceivedRev1.setStatus('current')
cagwPathEthGrePacketsSentRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 2, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathEthGrePacketsSentRev1.setStatus('current')
cagwPathEthGreBytesSentRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 2, 1, 13), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathEthGreBytesSentRev1.setStatus('current')
cagwPathEthGrePacketsReceivedRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 2, 1, 14), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathEthGrePacketsReceivedRev1.setStatus('current')
cagwPathEthGreBytesReceivedRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 5, 2, 1, 15), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwPathEthGreBytesReceivedRev1.setStatus('current')
cagwArpStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 6, 1), )
if mibBuilder.loadTexts: cagwArpStatisticsTable.setStatus('current')
cagwArpStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 6, 1, 1), ).setIndexNames((0, "CISCO-ASN-GATEWAY-MIB", "cagwInstanceIndex"))
if mibBuilder.loadTexts: cagwArpStatisticsEntry.setStatus('current')
cagwArpReqReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 6, 1, 1, 1), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwArpReqReceived.setStatus('current')
cagwArpReplySent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 6, 1, 1, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwArpReplySent.setStatus('current')
cagwArpPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 3, 6, 1, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwArpPacketsDropped.setStatus('current')
cagwNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cagwNotifEnabled.setStatus('current')
cagwNotifSeverityLevel = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 2), CiscoAlarmSeverity().clone('info')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cagwNotifSeverityLevel.setStatus('current')
cagwRepeatNotifInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(60, 3600), )).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cagwRepeatNotifInterval.setStatus('current')
cagwGeneratedNotifs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 4), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwGeneratedNotifs.setStatus('current')
cagwIgnoredNotifs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 5), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIgnoredNotifs.setStatus('current')
cagwServiceNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 11), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cagwServiceNotifEnabled.setStatus('current')
cagwServiceNotifSeverity = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 12), CiscoAlarmSeverity().clone('critical')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cagwServiceNotifSeverity.setStatus('current')
cagwGeneratedServiceNotifs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 13), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwGeneratedServiceNotifs.setStatus('current')
cagwIgnoredServiceNotifs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 14), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIgnoredServiceNotifs.setStatus('current')
cagwMaxBaseStationExceededNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 21), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cagwMaxBaseStationExceededNotifEnabled.setStatus('current')
cagwMaxBaseStationExceededNotifSeverity = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 22), CiscoAlarmSeverity().clone('major')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cagwMaxBaseStationExceededNotifSeverity.setStatus('current')
cagwMaxBaseStationExceededNotifThreshold = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(25, 100)).clone(90)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cagwMaxBaseStationExceededNotifThreshold.setStatus('current')
cagwGeneratedMaxBsNotifs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 24), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwGeneratedMaxBsNotifs.setStatus('current')
cagwIgnoredMaxBsNotifs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 25), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIgnoredMaxBsNotifs.setStatus('current')
cagwMaxSubscribersExceededNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 31), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cagwMaxSubscribersExceededNotifEnabled.setStatus('current')
cagwMaxSubscribersExceededNotifSeverity = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 32), CiscoAlarmSeverity().clone('major')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cagwMaxSubscribersExceededNotifSeverity.setStatus('current')
cagwMaxSubscribersExceededNotifThreshold = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(25, 100)).clone(90)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cagwMaxSubscribersExceededNotifThreshold.setStatus('current')
cagwGeneratedMaxSubscNotifs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 34), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwGeneratedMaxSubscNotifs.setStatus('current')
cagwIgnoredMaxSubscNotifs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 4, 35), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwIgnoredMaxSubscNotifs.setStatus('current')
cagwImpactedIpType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 5, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwImpactedIpType.setStatus('current')
cagwImpactedIp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 5, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwImpactedIp.setStatus('current')
cagwImpactedReason = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unknown", 0), ("limit", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwImpactedReason.setStatus('current')
cagwImpactedInfo = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 638, 1, 5, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cagwImpactedInfo.setStatus('current')
ciscoAgwServiceDownNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 638, 0, 1)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwInstanceDescription"), ("CISCO-ASN-GATEWAY-MIB", "cagwServiceNotifSeverity"))
if mibBuilder.loadTexts: ciscoAgwServiceDownNotif.setStatus('current')
ciscoAgwServiceUpNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 638, 0, 2)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwInstanceDescription"), ("CISCO-ASN-GATEWAY-MIB", "cagwServiceNotifSeverity"))
if mibBuilder.loadTexts: ciscoAgwServiceUpNotif.setStatus('current')
ciscoAgwMaxBaseStationExceededOnsetNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 638, 0, 3)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwInstanceDescription"), ("CISCO-ASN-GATEWAY-MIB", "cagwMaxBaseStationExceededNotifSeverity"), ("CISCO-ASN-GATEWAY-MIB", "cagwMaximumBaseStations"), ("CISCO-ASN-GATEWAY-MIB", "cagwCurrentBaseStations"), ("CISCO-ASN-GATEWAY-MIB", "cagwRejectedBaseStations"), ("CISCO-ASN-GATEWAY-MIB", "cagwImpactedIpType"), ("CISCO-ASN-GATEWAY-MIB", "cagwImpactedIp"))
if mibBuilder.loadTexts: ciscoAgwMaxBaseStationExceededOnsetNotif.setStatus('current')
ciscoAgwMaxBaseStationExceededAbateNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 638, 0, 4)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwInstanceDescription"), ("CISCO-ASN-GATEWAY-MIB", "cagwMaxBaseStationExceededNotifSeverity"), ("CISCO-ASN-GATEWAY-MIB", "cagwMaximumBaseStations"), ("CISCO-ASN-GATEWAY-MIB", "cagwCurrentBaseStations"), ("CISCO-ASN-GATEWAY-MIB", "cagwRejectedBaseStations"))
if mibBuilder.loadTexts: ciscoAgwMaxBaseStationExceededAbateNotif.setStatus('current')
ciscoAgwMaxSubscribersExceededOnsetNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 638, 0, 5)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwInstanceDescription"), ("CISCO-ASN-GATEWAY-MIB", "cagwMaxSubscribersExceededNotifSeverity"), ("CISCO-ASN-GATEWAY-MIB", "cagwMaximumSubscribers"), ("CISCO-ASN-GATEWAY-MIB", "cagwCurrentSubscribers"), ("CISCO-ASN-GATEWAY-MIB", "cagwRejectedSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwImpactedIpType"), ("CISCO-ASN-GATEWAY-MIB", "cagwImpactedIp"), ("CISCO-ASN-GATEWAY-MIB", "cagwImpactedInfo"))
if mibBuilder.loadTexts: ciscoAgwMaxSubscribersExceededOnsetNotif.setStatus('current')
ciscoAgwMaxSubscribersExceededAbateNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 638, 0, 6)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwInstanceDescription"), ("CISCO-ASN-GATEWAY-MIB", "cagwMaxSubscribersExceededNotifSeverity"), ("CISCO-ASN-GATEWAY-MIB", "cagwMaximumSubscribers"), ("CISCO-ASN-GATEWAY-MIB", "cagwCurrentSubscribers"), ("CISCO-ASN-GATEWAY-MIB", "cagwRejectedSessions"))
if mibBuilder.loadTexts: ciscoAgwMaxSubscribersExceededAbateNotif.setStatus('current')
ciscoAgwMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 1))
ciscoAgwMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2))
ciscoAgwMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 1, 1)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwInstanceGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwStateGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwGlobalStatisticsGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpStatisticsGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwMessageStatisticsGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwNotifInfoGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwNotifMgmtGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAgwMIBCompliance = ciscoAgwMIBCompliance.setStatus('obsolete')
ciscoAgwMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 1, 2)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwInstanceGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwStateGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpStatisticsGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwMessageStatisticsGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwNotifInfoGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwNotifMgmtGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwNotifGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwGlobalStatisticsGroupRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpGroupRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathGroupRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwArpStatisticsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAgwMIBComplianceRev1 = ciscoAgwMIBComplianceRev1.setStatus('obsolete')
ciscoAgwMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 1, 3)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwInstanceGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwStateGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpStatisticsGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwMessageStatisticsGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwNotifInfoGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwNotifMgmtGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwNotifGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpGroupRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathGroupRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwArpStatisticsGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwStateGroupSup1"), ("CISCO-ASN-GATEWAY-MIB", "cagwGlobalStatisticsGroupRev2"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpGroupRev1Sup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAgwMIBComplianceRev2 = ciscoAgwMIBComplianceRev2.setStatus('deprecated')
ciscoAgwMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 1, 4)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwInstanceGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwStateGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpStatisticsGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwMessageStatisticsGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwNotifInfoGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwNotifMgmtGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwNotifGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpGroupRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathGroupRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwArpStatisticsGroup"), ("CISCO-ASN-GATEWAY-MIB", "cagwStateGroupSup1"), ("CISCO-ASN-GATEWAY-MIB", "cagwGlobalStatisticsGroupRev2"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpGroupRev1Sup1"), ("CISCO-ASN-GATEWAY-MIB", "cagwStateGroupSup2"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpGroupRev1Sup2"), ("CISCO-ASN-GATEWAY-MIB", "cagwGlobalStatisticsGroupRev2Sup1"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpProxyStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAgwMIBComplianceRev3 = ciscoAgwMIBComplianceRev3.setStatus('current')
cagwInstanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 1)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwInstancePhysicalIndex"), ("CISCO-ASN-GATEWAY-MIB", "cagwInstanceDescription"), ("CISCO-ASN-GATEWAY-MIB", "cagwInstanceVersion"), ("CISCO-ASN-GATEWAY-MIB", "cagwInstanceOperState"), ("CISCO-ASN-GATEWAY-MIB", "cagwInstanceSessionRedundancyAdmin"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwInstanceGroup = cagwInstanceGroup.setStatus('current')
cagwStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 2)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwMaximumBaseStations"), ("CISCO-ASN-GATEWAY-MIB", "cagwMaximumSubscribers"), ("CISCO-ASN-GATEWAY-MIB", "cagwMaximumFlowsPerSession"), ("CISCO-ASN-GATEWAY-MIB", "cagwCurrentBaseStations"), ("CISCO-ASN-GATEWAY-MIB", "cagwCurrentDataPaths"), ("CISCO-ASN-GATEWAY-MIB", "cagwCurrentSubscribers"), ("CISCO-ASN-GATEWAY-MIB", "cagwCurrentSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwCurrentFlows"), ("CISCO-ASN-GATEWAY-MIB", "cagwCurrentHosts"), ("CISCO-ASN-GATEWAY-MIB", "cagwNetworkBehindMs"), ("CISCO-ASN-GATEWAY-MIB", "cagwPendingSignalingPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwStateGroup = cagwStateGroup.setStatus('current')
cagwGlobalStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 3)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwCreatedSubscribers"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedSubscribers"), ("CISCO-ASN-GATEWAY-MIB", "cagwCreatedSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwCreatedFlows"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedFlows"), ("CISCO-ASN-GATEWAY-MIB", "cagwCreatedHosts"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedHosts"), ("CISCO-ASN-GATEWAY-MIB", "cagwCreatedBaseStations"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedBaseStations"), ("CISCO-ASN-GATEWAY-MIB", "cagwCreatedDataPaths"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedDataPaths"), ("CISCO-ASN-GATEWAY-MIB", "cagwProcessedSignalingPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwRequeuedSignalingPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwCongestionSignalingPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwServiceDisabledSignalingPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwServiceNotReadySignalingPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwEncapErrorSignalingPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwDisposedSignalingPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwEncapErrorDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwInvalidAddressDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwServiceDisabledDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwInvalidProtocolTypeDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwLengthErrorDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwAbsentKeyDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwFlowNotFoundDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwFlowPathNotFoundDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwFlowPathInvalidSourceDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwSessionNotFoundDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwSubscriberNotFoundDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwChecksumErrorDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwIngressFilteringDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwSequenceNumberErrorDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwFragmentedDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwFramedRouteInserted"), ("CISCO-ASN-GATEWAY-MIB", "cagwFramedRouteInsertFailed"), ("CISCO-ASN-GATEWAY-MIB", "cagwFramedRouteDeleted"), ("CISCO-ASN-GATEWAY-MIB", "cagwServiceFlowProfileNotFound"), ("CISCO-ASN-GATEWAY-MIB", "cagwQosProfileNotFound"), ("CISCO-ASN-GATEWAY-MIB", "cagwClassifierProfileNotFound"), ("CISCO-ASN-GATEWAY-MIB", "cagwReceivedDataPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwReceivedDataBytes"), ("CISCO-ASN-GATEWAY-MIB", "cagwSentDataPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwSentDataBytes"), ("CISCO-ASN-GATEWAY-MIB", "cagwRejectedBaseStations"), ("CISCO-ASN-GATEWAY-MIB", "cagwRejectedSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwRejectedFlows"), ("CISCO-ASN-GATEWAY-MIB", "cagwSessionsDeletedByAgw"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwGlobalStatisticsGroup = cagwGlobalStatisticsGroup.setStatus('obsolete')
cagwDhcpStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 4)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwDhcpDiscoverPackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpOfferPackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpRequestPackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpDeclinePackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpAckPackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpNakPackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpReleasePackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpInformPackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpLeaseQueryPackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpUnknownPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwDhcpStatisticsGroup = cagwDhcpStatisticsGroup.setStatus('current')
cagwMessageStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 5)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwMsgSent"), ("CISCO-ASN-GATEWAY-MIB", "cagwMsgReceived"), ("CISCO-ASN-GATEWAY-MIB", "cagwMsgResent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwMessageStatisticsGroup = cagwMessageStatisticsGroup.setStatus('current')
cagwUserGrpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 6)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpServiceMode"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpCreatedSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpDeletedSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpCurrentSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpCreatedFlows"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpDeletedFlows"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpCurrentFlows"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpPacketsSent"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpBytesSent"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpPacketsReceived"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpBytesReceived"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpInvalidSourcePacketsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpInvalidSourceBytesDrops"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwUserGrpGroup = cagwUserGrpGroup.setStatus('deprecated')
cagwPathGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 7)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwPathLocalIpType"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathLocalIp"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathCurrentSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathCurrentFlows"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathPacketsSent"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathBytesSent"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathPacketsReceived"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathBytesReceived"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwPathGroup = cagwPathGroup.setStatus('obsolete')
cagwNotifInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 8)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwImpactedIpType"), ("CISCO-ASN-GATEWAY-MIB", "cagwImpactedIp"), ("CISCO-ASN-GATEWAY-MIB", "cagwImpactedReason"), ("CISCO-ASN-GATEWAY-MIB", "cagwImpactedInfo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwNotifInfoGroup = cagwNotifInfoGroup.setStatus('current')
cagwNotifMgmtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 9)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwNotifEnabled"), ("CISCO-ASN-GATEWAY-MIB", "cagwNotifSeverityLevel"), ("CISCO-ASN-GATEWAY-MIB", "cagwRepeatNotifInterval"), ("CISCO-ASN-GATEWAY-MIB", "cagwGeneratedNotifs"), ("CISCO-ASN-GATEWAY-MIB", "cagwIgnoredNotifs"), ("CISCO-ASN-GATEWAY-MIB", "cagwServiceNotifEnabled"), ("CISCO-ASN-GATEWAY-MIB", "cagwServiceNotifSeverity"), ("CISCO-ASN-GATEWAY-MIB", "cagwGeneratedServiceNotifs"), ("CISCO-ASN-GATEWAY-MIB", "cagwIgnoredServiceNotifs"), ("CISCO-ASN-GATEWAY-MIB", "cagwMaxBaseStationExceededNotifEnabled"), ("CISCO-ASN-GATEWAY-MIB", "cagwMaxBaseStationExceededNotifSeverity"), ("CISCO-ASN-GATEWAY-MIB", "cagwMaxBaseStationExceededNotifThreshold"), ("CISCO-ASN-GATEWAY-MIB", "cagwGeneratedMaxBsNotifs"), ("CISCO-ASN-GATEWAY-MIB", "cagwIgnoredMaxBsNotifs"), ("CISCO-ASN-GATEWAY-MIB", "cagwMaxSubscribersExceededNotifEnabled"), ("CISCO-ASN-GATEWAY-MIB", "cagwMaxSubscribersExceededNotifSeverity"), ("CISCO-ASN-GATEWAY-MIB", "cagwMaxSubscribersExceededNotifThreshold"), ("CISCO-ASN-GATEWAY-MIB", "cagwGeneratedMaxSubscNotifs"), ("CISCO-ASN-GATEWAY-MIB", "cagwIgnoredMaxSubscNotifs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwNotifMgmtGroup = cagwNotifMgmtGroup.setStatus('current')
cagwNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 10)).setObjects(("CISCO-ASN-GATEWAY-MIB", "ciscoAgwServiceDownNotif"), ("CISCO-ASN-GATEWAY-MIB", "ciscoAgwServiceUpNotif"), ("CISCO-ASN-GATEWAY-MIB", "ciscoAgwMaxBaseStationExceededOnsetNotif"), ("CISCO-ASN-GATEWAY-MIB", "ciscoAgwMaxBaseStationExceededAbateNotif"), ("CISCO-ASN-GATEWAY-MIB", "ciscoAgwMaxSubscribersExceededOnsetNotif"), ("CISCO-ASN-GATEWAY-MIB", "ciscoAgwMaxSubscribersExceededAbateNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwNotifGroup = cagwNotifGroup.setStatus('current')
cagwGlobalStatisticsGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 11)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwCreatedSubscribers"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedSubscribers"), ("CISCO-ASN-GATEWAY-MIB", "cagwCreatedSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwCreatedFlows"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedFlows"), ("CISCO-ASN-GATEWAY-MIB", "cagwCreatedHosts"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedHosts"), ("CISCO-ASN-GATEWAY-MIB", "cagwCreatedBaseStations"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedBaseStations"), ("CISCO-ASN-GATEWAY-MIB", "cagwCreatedDataPaths"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedDataPaths"), ("CISCO-ASN-GATEWAY-MIB", "cagwProcessedSignalingPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwRequeuedSignalingPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwCongestionSignalingPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwServiceDisabledSignalingPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwServiceNotReadySignalingPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwEncapErrorSignalingPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwDisposedSignalingPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwEncapErrorDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwInvalidAddressDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwServiceDisabledDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwInvalidProtocolTypeDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwLengthErrorDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwAbsentKeyDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwFlowNotFoundDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwFlowPathNotFoundDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwFlowPathInvalidSourceDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwSessionNotFoundDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwSubscriberNotFoundDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwChecksumErrorDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwIngressFilteringDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwSequenceNumberErrorDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwFragmentedDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwFramedRouteInserted"), ("CISCO-ASN-GATEWAY-MIB", "cagwFramedRouteInsertFailed"), ("CISCO-ASN-GATEWAY-MIB", "cagwFramedRouteDeleted"), ("CISCO-ASN-GATEWAY-MIB", "cagwServiceFlowProfileNotFound"), ("CISCO-ASN-GATEWAY-MIB", "cagwQosProfileNotFound"), ("CISCO-ASN-GATEWAY-MIB", "cagwClassifierProfileNotFound"), ("CISCO-ASN-GATEWAY-MIB", "cagwRejectedBaseStations"), ("CISCO-ASN-GATEWAY-MIB", "cagwRejectedSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwRejectedFlows"), ("CISCO-ASN-GATEWAY-MIB", "cagwSessionsDeletedByAgw"), ("CISCO-ASN-GATEWAY-MIB", "cagwIpGreReceivedDataPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwIpGreReceivedDataBytes"), ("CISCO-ASN-GATEWAY-MIB", "cagwIpGreSentDataPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwIpGreSentDataBytes"), ("CISCO-ASN-GATEWAY-MIB", "cagwEthGreReceivedDataPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwEthGreReceivedDataBytes"), ("CISCO-ASN-GATEWAY-MIB", "cagwEthGreSentDataPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwEthGreSentDataBytes"), ("CISCO-ASN-GATEWAY-MIB", "cagwRejectedHosts"), ("CISCO-ASN-GATEWAY-MIB", "cagwAgedOutStaticHosts"), ("CISCO-ASN-GATEWAY-MIB", "cagwSuccessfulHandoff"), ("CISCO-ASN-GATEWAY-MIB", "cagwFailedHandoff"), ("CISCO-ASN-GATEWAY-MIB", "cagwSuccessfulCMACKeyUpdate"), ("CISCO-ASN-GATEWAY-MIB", "cagwFailedCMACKeyUpdate"), ("CISCO-ASN-GATEWAY-MIB", "cagwSuccessfulSecurityKeyExchange"), ("CISCO-ASN-GATEWAY-MIB", "cagwFailedSecurityKeyExchange"), ("CISCO-ASN-GATEWAY-MIB", "cagwIpGreReceivedRedirectedPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwIpGreReceivedRedirectedBytes"), ("CISCO-ASN-GATEWAY-MIB", "cagwEthGreReceivedRedirectedPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwEthGreReceivedRedirectedBytes"), ("CISCO-ASN-GATEWAY-MIB", "cagwThrottlingOfPuntsDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwLearningUpstreamDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwPuntedDataPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwGlobalStatisticsGroupRev1 = cagwGlobalStatisticsGroupRev1.setStatus('obsolete')
cagwUserGrpGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 12)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpServiceMode"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpCreatedSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpDeletedSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpCurrentSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpCreatedFlows"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpDeletedFlows"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpCurrentFlows"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpInvalidSourcePacketsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpInvalidSourceBytesDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpIpGrePacketsSent"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpIpGreBytesSent"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpIpGrePacketsReceived"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpIpGreBytesReceived"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpEthGrePacketsSent"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpEthGreBytesSent"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpEthGrePacketsReceived"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpEthGreBytesReceived"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwUserGrpGroupRev1 = cagwUserGrpGroupRev1.setStatus('current')
cagwPathGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 13)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwPathLocalIpTypeRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathLocalIpRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathCurrentSessionsRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathCurrentFlowsRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathIpGrePacketsSentRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathIpGreBytesSentRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathIpGrePacketsReceivedRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathIpGreBytesReceivedRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathEthGrePacketsSentRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathEthGreBytesSentRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathEthGrePacketsReceivedRev1"), ("CISCO-ASN-GATEWAY-MIB", "cagwPathEthGreBytesReceivedRev1"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwPathGroupRev1 = cagwPathGroupRev1.setStatus('current')
cagwArpStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 14)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwArpReqReceived"), ("CISCO-ASN-GATEWAY-MIB", "cagwArpReplySent"), ("CISCO-ASN-GATEWAY-MIB", "cagwArpPacketsDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwArpStatisticsGroup = cagwArpStatisticsGroup.setStatus('current')
cagwStateGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 15)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwCurrentFramedRoutes"), ("CISCO-ASN-GATEWAY-MIB", "cagwCurrentFramedRouteSubs"), ("CISCO-ASN-GATEWAY-MIB", "cagwCurrentAutoProvSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwCurrentSessionsWithIpPktsRedir"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwStateGroupSup1 = cagwStateGroupSup1.setStatus('current')
cagwGlobalStatisticsGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 16)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwCreatedSubscribers"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedSubscribers"), ("CISCO-ASN-GATEWAY-MIB", "cagwCreatedSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwCreatedFlows"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedFlows"), ("CISCO-ASN-GATEWAY-MIB", "cagwCreatedHosts"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedHosts"), ("CISCO-ASN-GATEWAY-MIB", "cagwCreatedBaseStations"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedBaseStations"), ("CISCO-ASN-GATEWAY-MIB", "cagwCreatedDataPaths"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedDataPaths"), ("CISCO-ASN-GATEWAY-MIB", "cagwProcessedSignalingPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwRequeuedSignalingPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwCongestionSignalingPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwServiceDisabledSignalingPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwServiceNotReadySignalingPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwEncapErrorSignalingPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwDisposedSignalingPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwEncapErrorDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwInvalidAddressDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwServiceDisabledDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwInvalidProtocolTypeDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwLengthErrorDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwAbsentKeyDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwFlowNotFoundDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwFlowPathNotFoundDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwFlowPathInvalidSourceDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwSessionNotFoundDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwSubscriberNotFoundDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwChecksumErrorDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwIngressFilteringDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwSequenceNumberErrorDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwFragmentedDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwServiceFlowProfileNotFound"), ("CISCO-ASN-GATEWAY-MIB", "cagwQosProfileNotFound"), ("CISCO-ASN-GATEWAY-MIB", "cagwClassifierProfileNotFound"), ("CISCO-ASN-GATEWAY-MIB", "cagwRejectedBaseStations"), ("CISCO-ASN-GATEWAY-MIB", "cagwRejectedSessions"), ("CISCO-ASN-GATEWAY-MIB", "cagwRejectedFlows"), ("CISCO-ASN-GATEWAY-MIB", "cagwSessionsDeletedByAgw"), ("CISCO-ASN-GATEWAY-MIB", "cagwIpGreReceivedDataPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwIpGreReceivedDataBytes"), ("CISCO-ASN-GATEWAY-MIB", "cagwIpGreSentDataPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwIpGreSentDataBytes"), ("CISCO-ASN-GATEWAY-MIB", "cagwEthGreReceivedDataPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwEthGreReceivedDataBytes"), ("CISCO-ASN-GATEWAY-MIB", "cagwEthGreSentDataPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwEthGreSentDataBytes"), ("CISCO-ASN-GATEWAY-MIB", "cagwRejectedHosts"), ("CISCO-ASN-GATEWAY-MIB", "cagwAgedOutStaticHosts"), ("CISCO-ASN-GATEWAY-MIB", "cagwSuccessfulHandoff"), ("CISCO-ASN-GATEWAY-MIB", "cagwFailedHandoff"), ("CISCO-ASN-GATEWAY-MIB", "cagwSuccessfulCMACKeyUpdate"), ("CISCO-ASN-GATEWAY-MIB", "cagwFailedCMACKeyUpdate"), ("CISCO-ASN-GATEWAY-MIB", "cagwSuccessfulSecurityKeyExchange"), ("CISCO-ASN-GATEWAY-MIB", "cagwFailedSecurityKeyExchange"), ("CISCO-ASN-GATEWAY-MIB", "cagwIpGreReceivedRedirectedPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwIpGreReceivedRedirectedBytes"), ("CISCO-ASN-GATEWAY-MIB", "cagwEthGreReceivedRedirectedPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwEthGreReceivedRedirectedBytes"), ("CISCO-ASN-GATEWAY-MIB", "cagwThrottlingOfPuntsDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwLearningUpstreamDataPktsDrops"), ("CISCO-ASN-GATEWAY-MIB", "cagwPuntedDataPkts"), ("CISCO-ASN-GATEWAY-MIB", "cagwRejectedSessionUnapprovedBs"), ("CISCO-ASN-GATEWAY-MIB", "cagwPktsDroppedStaticIpHostNotAllowed"), ("CISCO-ASN-GATEWAY-MIB", "cagwPktsDroppedMulticastBroadcast"), ("CISCO-ASN-GATEWAY-MIB", "cagwSlaProfileNotFound"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwGlobalStatisticsGroupRev2 = cagwGlobalStatisticsGroupRev2.setStatus('current')
cagwUserGrpGroupRev1Sup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 17)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpOverwritten"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwUserGrpGroupRev1Sup1 = cagwUserGrpGroupRev1Sup1.setStatus('current')
cagwStateGroupSup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 18)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwCurrentPmipEnabledSubs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwStateGroupSup2 = cagwStateGroupSup2.setStatus('current')
cagwUserGrpGroupRev1Sup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 19)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpPodReqRecv"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpPodSuccessNotifsSent"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpPodFailureNotifsSent"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpCoaReqRecv"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpCoaSuccessNotifsSent"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpCoaFailureNotifsSent"), ("CISCO-ASN-GATEWAY-MIB", "cagwUserGrpRejSession"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwUserGrpGroupRev1Sup2 = cagwUserGrpGroupRev1Sup2.setStatus('current')
cagwGlobalStatisticsGroupRev2Sup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 20)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwPktsDroppedMipIncomplete"), ("CISCO-ASN-GATEWAY-MIB", "cagwCreatedPmipEnabledSubs"), ("CISCO-ASN-GATEWAY-MIB", "cagwDeletedPmipEnabledSubs"), ("CISCO-ASN-GATEWAY-MIB", "cagwPktsDropPmipStaticIpHost"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModeEntryMsBsInitiated"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModeEntryBwgInitiated"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModeEntryFailures"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModeExitMsBsInitiated"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModeExitBwgInitiated"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModeExitFailures"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModeLocUpdtPgidChange"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModeLocUpdtPowerDown"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModeLocUpdtPeriodic"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModeLocUpdtFailures"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModePageAttemptsDwnlnkData"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModePageFailuresDwnlnkData"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModePageAttemptsLocUpdt"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModePageFailuresLocUpdt"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModeDirectedPagingSuccess"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModeDirectedPagingRetries"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModeFloodPagingSuccess"), ("CISCO-ASN-GATEWAY-MIB", "cagwIdleModeFloodPagingRetries"), ("CISCO-ASN-GATEWAY-MIB", "cagwPodRequestsRecv"), ("CISCO-ASN-GATEWAY-MIB", "cagwPodSuccessNotifsSent"), ("CISCO-ASN-GATEWAY-MIB", "cagwPodFailureNotifsSent"), ("CISCO-ASN-GATEWAY-MIB", "cagwCoaReqRecv"), ("CISCO-ASN-GATEWAY-MIB", "cagwCoaSuccessNotifsSent"), ("CISCO-ASN-GATEWAY-MIB", "cagwCoaFailureNotifsSent"), ("CISCO-ASN-GATEWAY-MIB", "cagwHotlineUplinkPktDropAclDeny"), ("CISCO-ASN-GATEWAY-MIB", "cagwHotlineDownlinkPktDropAclDeny"), ("CISCO-ASN-GATEWAY-MIB", "cagwUplinkPktDropUsrgrpAclDeny"), ("CISCO-ASN-GATEWAY-MIB", "cagwDownlinkPktDropUsrgrpAclDeny"), ("CISCO-ASN-GATEWAY-MIB", "cagwDownlinkPktDropPagingAclDeny"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwGlobalStatisticsGroupRev2Sup1 = cagwGlobalStatisticsGroupRev2Sup1.setStatus('current')
cagwDhcpProxyStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 638, 2, 2, 21)).setObjects(("CISCO-ASN-GATEWAY-MIB", "cagwDhcpProxyDiscoverPackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpProxyOfferPackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpProxyRequestPackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpProxyDeclinePackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpProxyAckPackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpProxyNakPackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpProxyReleasePackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpProxyInformPackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpProxyLeaseQueryPackets"), ("CISCO-ASN-GATEWAY-MIB", "cagwDhcpProxyUnknownPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cagwDhcpProxyStatsGroup = cagwDhcpProxyStatsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-ASN-GATEWAY-MIB", cagwPathRev1Entry=cagwPathRev1Entry, cagwInstancePhysicalIndex=cagwInstancePhysicalIndex, cagwIngressFilteringDataPktsDrops=cagwIngressFilteringDataPktsDrops, cagwIpGreSentDataBytes=cagwIpGreSentDataBytes, cagwUserGrpEthGrePacketsSent=cagwUserGrpEthGrePacketsSent, cagwUserGrpEthGreBytesReceived=cagwUserGrpEthGreBytesReceived, cagwServiceNotifEnabled=cagwServiceNotifEnabled, cagwInstanceVersion=cagwInstanceVersion, ciscoAgwMIBComplianceRev2=ciscoAgwMIBComplianceRev2, cagwSessionsDeletedByAgw=cagwSessionsDeletedByAgw, cagwPathLocalIpRev1=cagwPathLocalIpRev1, cagwDhcpLeaseQueryPackets=cagwDhcpLeaseQueryPackets, cagwCreatedFlows=cagwCreatedFlows, cagwGlobalStatisticsGroupRev2=cagwGlobalStatisticsGroupRev2, cagwDhcpProxyOfferPackets=cagwDhcpProxyOfferPackets, cagwStateEntry=cagwStateEntry, cagwServiceDisabledSignalingPktsDrops=cagwServiceDisabledSignalingPktsDrops, cagwPendingSignalingPkts=cagwPendingSignalingPkts, cagwCurrentAutoProvSessions=cagwCurrentAutoProvSessions, cagwStateGroup=cagwStateGroup, cagwUserGrpCreatedSessions=cagwUserGrpCreatedSessions, cagwEthGreReceivedRedirectedPkts=cagwEthGreReceivedRedirectedPkts, cagwArpPacketsDropped=cagwArpPacketsDropped, cagwLearningUpstreamDataPktsDrops=cagwLearningUpstreamDataPktsDrops, cagwThrottlingOfPuntsDataPktsDrops=cagwThrottlingOfPuntsDataPktsDrops, cagwIdleModePageAttemptsDwnlnkData=cagwIdleModePageAttemptsDwnlnkData, cagwInstanceSessionRedundancyAdmin=cagwInstanceSessionRedundancyAdmin, cagwPathRemoteIp=cagwPathRemoteIp, cagwArpReplySent=cagwArpReplySent, PYSNMP_MODULE_ID=ciscoAgwMIB, cagwInstanceEntry=cagwInstanceEntry, cagwUserGrpInvalidSourcePacketsDrops=cagwUserGrpInvalidSourcePacketsDrops, cagwGeneratedNotifs=cagwGeneratedNotifs, cagwDhcpUnknownPackets=cagwDhcpUnknownPackets, cagwCreatedPmipEnabledSubs=cagwCreatedPmipEnabledSubs, cagwNotifGroup=cagwNotifGroup, cagwDeletedSubscribers=cagwDeletedSubscribers, cagwUserGrpRejSession=cagwUserGrpRejSession, cagwInstanceDescription=cagwInstanceDescription, cagwPktsDropPmipStaticIpHost=cagwPktsDropPmipStaticIpHost, cagwIdleModeExitMsBsInitiated=cagwIdleModeExitMsBsInitiated, cagwIdleModeExitBwgInitiated=cagwIdleModeExitBwgInitiated, cagwCurrentHosts=cagwCurrentHosts, cagwDeletedHosts=cagwDeletedHosts, cagwPathIpGrePacketsSentRev1=cagwPathIpGrePacketsSentRev1, ciscoAgwMaxSubscribersExceededAbateNotif=ciscoAgwMaxSubscribersExceededAbateNotif, ciscoAgwMIBCompliances=ciscoAgwMIBCompliances, cagwCoaSuccessNotifsSent=cagwCoaSuccessNotifsSent, ciscoAgwServiceUpNotif=ciscoAgwServiceUpNotif, cagwPathEthGrePacketsReceivedRev1=cagwPathEthGrePacketsReceivedRev1, cagwUserGrpGroupRev1Sup1=cagwUserGrpGroupRev1Sup1, cagwUserGrpDeletedSessions=cagwUserGrpDeletedSessions, cagwRejectedBaseStations=cagwRejectedBaseStations, cagwUserGrpBytesSent=cagwUserGrpBytesSent, cagwDhcpRequestPackets=cagwDhcpRequestPackets, cagwDhcpProxyUnknownPackets=cagwDhcpProxyUnknownPackets, cagwUserGrpCurrentFlows=cagwUserGrpCurrentFlows, cagwChecksumErrorDataPktsDrops=cagwChecksumErrorDataPktsDrops, cagwMaximumSubscribers=cagwMaximumSubscribers, cagwGlobalStatisticsTable=cagwGlobalStatisticsTable, cagwImpactedIpType=cagwImpactedIpType, cagwServiceNotReadySignalingPktsDrops=cagwServiceNotReadySignalingPktsDrops, cagwPathPacketsReceived=cagwPathPacketsReceived, cagwNetworkBehindMs=cagwNetworkBehindMs, cagwGlobalStatisticsGroupRev2Sup1=cagwGlobalStatisticsGroupRev2Sup1, cagwIdleModeLocUpdtPgidChange=cagwIdleModeLocUpdtPgidChange, cagwIdleModeEntryBwgInitiated=cagwIdleModeEntryBwgInitiated, cagwIdleModePageFailuresLocUpdt=cagwIdleModePageFailuresLocUpdt, cagwInvalidAddressDataPktsDrops=cagwInvalidAddressDataPktsDrops, cagwSentDataBytes=cagwSentDataBytes, cagwUserGrpIpGreBytesReceived=cagwUserGrpIpGreBytesReceived, cagwLengthErrorDataPktsDrops=cagwLengthErrorDataPktsDrops, ciscoAgwServiceDownNotif=ciscoAgwServiceDownNotif, ciscoAgwMIB=ciscoAgwMIB, cagwGlobalStatistics=cagwGlobalStatistics, cagwEthGreReceivedRedirectedBytes=cagwEthGreReceivedRedirectedBytes, cagwEthGreSentDataPkts=cagwEthGreSentDataPkts, cagwDownlinkPktDropPagingAclDeny=cagwDownlinkPktDropPagingAclDeny, cagwUserGrpDeletedFlows=cagwUserGrpDeletedFlows, ciscoAgwMIBGroups=ciscoAgwMIBGroups, cagwInstanceTable=cagwInstanceTable, cagwCurrentFramedRouteSubs=cagwCurrentFramedRouteSubs, cagwFramedRouteInserted=cagwFramedRouteInserted, cagwPathIpGrePacketsReceivedRev1=cagwPathIpGrePacketsReceivedRev1, cagwPathCurrentSessionsRev1=cagwPathCurrentSessionsRev1, cagwIpGreReceivedRedirectedPkts=cagwIpGreReceivedRedirectedPkts, cagwFlowPathInvalidSourceDataPktsDrops=cagwFlowPathInvalidSourceDataPktsDrops, cagwIdleModeEntryMsBsInitiated=cagwIdleModeEntryMsBsInitiated, cagwUserGrpCurrentSessions=cagwUserGrpCurrentSessions, cagwPathLocalIpType=cagwPathLocalIpType, cagwMaxBaseStationExceededNotifThreshold=cagwMaxBaseStationExceededNotifThreshold, cagwPodRequestsRecv=cagwPodRequestsRecv, cagwStateGroupSup1=cagwStateGroupSup1, cagwFlowPathNotFoundDataPktsDrops=cagwFlowPathNotFoundDataPktsDrops, cagwCoaFailureNotifsSent=cagwCoaFailureNotifsSent, cagwMsgReceived=cagwMsgReceived, cagwDhcpDiscoverPackets=cagwDhcpDiscoverPackets, cagwDeletedBaseStations=cagwDeletedBaseStations, cagwPathIpGreBytesReceivedRev1=cagwPathIpGreBytesReceivedRev1, cagwDhcpProxyDeclinePackets=cagwDhcpProxyDeclinePackets, cagwUserGrpCoaSuccessNotifsSent=cagwUserGrpCoaSuccessNotifsSent, cagwEncapErrorSignalingPktsDrops=cagwEncapErrorSignalingPktsDrops, cagwFailedSecurityKeyExchange=cagwFailedSecurityKeyExchange, cagwPathBytesReceived=cagwPathBytesReceived, ciscoAgwMaxSubscribersExceededOnsetNotif=ciscoAgwMaxSubscribersExceededOnsetNotif, cagwUserGrpPodReqRecv=cagwUserGrpPodReqRecv, cagwPathRemoteIpTypeRev1=cagwPathRemoteIpTypeRev1, cagwGlobalStatisticsGroup=cagwGlobalStatisticsGroup, cagwDhcpReleasePackets=cagwDhcpReleasePackets, cagwDhcpProxyDiscoverPackets=cagwDhcpProxyDiscoverPackets, cagwUserGrpCoaReqRecv=cagwUserGrpCoaReqRecv, cagwUserGrpBytesReceived=cagwUserGrpBytesReceived, cagwRepeatNotifInterval=cagwRepeatNotifInterval, ciscoAgwMaxBaseStationExceededOnsetNotif=ciscoAgwMaxBaseStationExceededOnsetNotif, cagwIpGreReceivedDataBytes=cagwIpGreReceivedDataBytes, cagwMaxBaseStationExceededNotifEnabled=cagwMaxBaseStationExceededNotifEnabled, cagwImpactedIp=cagwImpactedIp, cagwAgedOutStaticHosts=cagwAgedOutStaticHosts, cagwCurrentSessions=cagwCurrentSessions, cagwImpactedReason=cagwImpactedReason, cagwSuccessfulHandoff=cagwSuccessfulHandoff, cagwDhcpProxyAckPackets=cagwDhcpProxyAckPackets, cagwCreatedBaseStations=cagwCreatedBaseStations, cagwPathEntry=cagwPathEntry, cagwPathRev1Table=cagwPathRev1Table, cagwIdleModePageAttemptsLocUpdt=cagwIdleModePageAttemptsLocUpdt, cagwMaxBaseStationExceededNotifSeverity=cagwMaxBaseStationExceededNotifSeverity, cagwNotifEnabled=cagwNotifEnabled, cagwMaxSubscribersExceededNotifEnabled=cagwMaxSubscribersExceededNotifEnabled, cagwDhcpProxyLeaseQueryPackets=cagwDhcpProxyLeaseQueryPackets, ciscoAgwMIBComplianceRev1=ciscoAgwMIBComplianceRev1, cagwDhcpDeclinePackets=cagwDhcpDeclinePackets, cagwArpStatistics=cagwArpStatistics, cagwCurrentFlows=cagwCurrentFlows, cagwPathCurrentSessions=cagwPathCurrentSessions, cagwUserGrpPacketsSent=cagwUserGrpPacketsSent, cagwIpGreReceivedDataPkts=cagwIpGreReceivedDataPkts, cagwMsgSent=cagwMsgSent, cagwIgnoredMaxBsNotifs=cagwIgnoredMaxBsNotifs, cagwClassifierProfileNotFound=cagwClassifierProfileNotFound, cagwPathTypeRev1=cagwPathTypeRev1, cagwIdleModeDirectedPagingRetries=cagwIdleModeDirectedPagingRetries, cagwGeneratedServiceNotifs=cagwGeneratedServiceNotifs, cagwDownlinkPktDropUsrgrpAclDeny=cagwDownlinkPktDropUsrgrpAclDeny, cagwPathCurrentFlows=cagwPathCurrentFlows, cagwSubscriberNotFoundDataPktsDrops=cagwSubscriberNotFoundDataPktsDrops, cagwMsgResent=cagwMsgResent, cagwUserGrpPodSuccessNotifsSent=cagwUserGrpPodSuccessNotifsSent, cagwMessageStatistics=cagwMessageStatistics, cagwPathTable=cagwPathTable, cagwIdleModeLocUpdtPowerDown=cagwIdleModeLocUpdtPowerDown, cagwMaxSubscribersExceededNotifThreshold=cagwMaxSubscribersExceededNotifThreshold, cagwDhcpOfferPackets=cagwDhcpOfferPackets, ciscoAgwMaxBaseStationExceededAbateNotif=ciscoAgwMaxBaseStationExceededAbateNotif, cagwFramedRouteDeleted=cagwFramedRouteDeleted, cagwQosProfileNotFound=cagwQosProfileNotFound, cagwRejectedSessionUnapprovedBs=cagwRejectedSessionUnapprovedBs, cagwDhcpProxyInformPackets=cagwDhcpProxyInformPackets, cagwIgnoredServiceNotifs=cagwIgnoredServiceNotifs, cagwUserGrpOverwritten=cagwUserGrpOverwritten, cagwCurrentSessionsWithIpPktsRedir=cagwCurrentSessionsWithIpPktsRedir, cagwIpGreReceivedRedirectedBytes=cagwIpGreReceivedRedirectedBytes, cagwEthGreReceivedDataPkts=cagwEthGreReceivedDataPkts, cagwPodSuccessNotifsSent=cagwPodSuccessNotifsSent, cagwPathType=cagwPathType, cagwPathPacketsSent=cagwPathPacketsSent, cagwDhcpProxyRequestPackets=cagwDhcpProxyRequestPackets, cagwPktsDroppedMipIncomplete=cagwPktsDroppedMipIncomplete, cagwPathCurrentFlowsRev1=cagwPathCurrentFlowsRev1, cagwNotifInfoGroup=cagwNotifInfoGroup, cagwStateTable=cagwStateTable, cagwDeletedSessions=cagwDeletedSessions, cagwFragmentedDataPktsDrops=cagwFragmentedDataPktsDrops, cagwEthGreReceivedDataBytes=cagwEthGreReceivedDataBytes, cagwPuntedDataPkts=cagwPuntedDataPkts, cagwMsgType=cagwMsgType, cagwInstanceIndex=cagwInstanceIndex, cagwInstanceOperState=cagwInstanceOperState, cagwSlaProfileNotFound=cagwSlaProfileNotFound, cagwDhcpNakPackets=cagwDhcpNakPackets, ciscoAgwMIBComplianceRev3=ciscoAgwMIBComplianceRev3, cagwDhcpStatisticsTable=cagwDhcpStatisticsTable, cagwMaximumFlowsPerSession=cagwMaximumFlowsPerSession, cagwUserGrpEntry=cagwUserGrpEntry, cagwRequeuedSignalingPkts=cagwRequeuedSignalingPkts, cagwUserGrpServiceMode=cagwUserGrpServiceMode, cagwStatistics=cagwStatistics, cagwEthGreSentDataBytes=cagwEthGreSentDataBytes, cagwHotlineUplinkPktDropAclDeny=cagwHotlineUplinkPktDropAclDeny, cagwDhcpProxyStatsGroup=cagwDhcpProxyStatsGroup, cagwUplinkPktDropUsrgrpAclDeny=cagwUplinkPktDropUsrgrpAclDeny, cagwCoaReqRecv=cagwCoaReqRecv, cagwCurrentBaseStations=cagwCurrentBaseStations, cagwFailedCMACKeyUpdate=cagwFailedCMACKeyUpdate, cagwDhcpStatisticsEntry=cagwDhcpStatisticsEntry, cagwHotlineDownlinkPktDropAclDeny=cagwHotlineDownlinkPktDropAclDeny, cagwSentDataPkts=cagwSentDataPkts, cagwPathRemoteIpType=cagwPathRemoteIpType, cagwUserGrpEthGreBytesSent=cagwUserGrpEthGreBytesSent, cagwIdleModeExitFailures=cagwIdleModeExitFailures, cagwUserGrpCreatedFlows=cagwUserGrpCreatedFlows, cagwDhcpProxyNakPackets=cagwDhcpProxyNakPackets, cagwPathBytesSent=cagwPathBytesSent, cagwGeneratedMaxBsNotifs=cagwGeneratedMaxBsNotifs, cagwUserGrpIpGreBytesSent=cagwUserGrpIpGreBytesSent, cagwPktsDroppedStaticIpHostNotAllowed=cagwPktsDroppedStaticIpHostNotAllowed, cagwUserGrpGroupRev1=cagwUserGrpGroupRev1, ciscoAgwMIBObjects=ciscoAgwMIBObjects, cagwPathEthGrePacketsSentRev1=cagwPathEthGrePacketsSentRev1, cagwProcessedSignalingPkts=cagwProcessedSignalingPkts, cagwNotifSeverityLevel=cagwNotifSeverityLevel, cagwDhcpStatistics=cagwDhcpStatistics, cagwCurrentFramedRoutes=cagwCurrentFramedRoutes, cagwPathEthGreBytesSentRev1=cagwPathEthGreBytesSentRev1, cagwPodFailureNotifsSent=cagwPodFailureNotifsSent, cagwIgnoredNotifs=cagwIgnoredNotifs, cagwUserGrpStatistics=cagwUserGrpStatistics, cagwArpStatisticsGroup=cagwArpStatisticsGroup, cagwCreatedHosts=cagwCreatedHosts, cagwInvalidProtocolTypeDataPktsDrops=cagwInvalidProtocolTypeDataPktsDrops, cagwDhcpProxyReleasePackets=cagwDhcpProxyReleasePackets, cagwIdleModeFloodPagingRetries=cagwIdleModeFloodPagingRetries, cagwPathEthGreBytesReceivedRev1=cagwPathEthGreBytesReceivedRev1, cagwPktsDroppedMulticastBroadcast=cagwPktsDroppedMulticastBroadcast, cagwDhcpAckPackets=cagwDhcpAckPackets, cagwMsgEntry=cagwMsgEntry, cagwFlowNotFoundDataPktsDrops=cagwFlowNotFoundDataPktsDrops, cagwDeletedDataPaths=cagwDeletedDataPaths, cagwCreatedDataPaths=cagwCreatedDataPaths, cagwUserGrpGroup=cagwUserGrpGroup, cagwCreatedSessions=cagwCreatedSessions, cagwPathGroupRev1=cagwPathGroupRev1, cagwIdleModeDirectedPagingSuccess=cagwIdleModeDirectedPagingSuccess, cagwNotifInfo=cagwNotifInfo, cagwPathLocalIpTypeRev1=cagwPathLocalIpTypeRev1, cagwServiceNotifSeverity=cagwServiceNotifSeverity, cagwInstances=cagwInstances, cagwIdleModeFloodPagingSuccess=cagwIdleModeFloodPagingSuccess, cagwPathGroup=cagwPathGroup, cagwGlobalStatisticsGroupRev1=cagwGlobalStatisticsGroupRev1, cagwUserGrpPodFailureNotifsSent=cagwUserGrpPodFailureNotifsSent, cagwUserGrpIpGrePacketsReceived=cagwUserGrpIpGrePacketsReceived, cagwIdleModeLocUpdtFailures=cagwIdleModeLocUpdtFailures, cagwPathRemoteIpRev1=cagwPathRemoteIpRev1, cagwPathIpGreBytesSentRev1=cagwPathIpGreBytesSentRev1, cagwNotifMgmtGroup=cagwNotifMgmtGroup, cagwReceivedDataBytes=cagwReceivedDataBytes, cagwDeletedFlows=cagwDeletedFlows, cagwReceivedDataPkts=cagwReceivedDataPkts, cagwSuccessfulCMACKeyUpdate=cagwSuccessfulCMACKeyUpdate, cagwIdleModePageFailuresDwnlnkData=cagwIdleModePageFailuresDwnlnkData, cagwRejectedFlows=cagwRejectedFlows, cagwArpStatisticsTable=cagwArpStatisticsTable, cagwUserGrpCoaFailureNotifsSent=cagwUserGrpCoaFailureNotifsSent)
mibBuilder.exportSymbols("CISCO-ASN-GATEWAY-MIB", cagwGeneratedMaxSubscNotifs=cagwGeneratedMaxSubscNotifs, cagwStateGroupSup2=cagwStateGroupSup2, cagwRejectedHosts=cagwRejectedHosts, cagwDeletedPmipEnabledSubs=cagwDeletedPmipEnabledSubs, cagwUserGrpDomainName=cagwUserGrpDomainName, cagwAbsentKeyDataPktsDrops=cagwAbsentKeyDataPktsDrops, cagwServiceFlowProfileNotFound=cagwServiceFlowProfileNotFound, cagwCurrentPmipEnabledSubs=cagwCurrentPmipEnabledSubs, cagwUserGrpTable=cagwUserGrpTable, cagwUserGrpPacketsReceived=cagwUserGrpPacketsReceived, cagwPathStatistics=cagwPathStatistics, cagwCurrentSubscribers=cagwCurrentSubscribers, cagwCurrentDataPaths=cagwCurrentDataPaths, cagwSessionNotFoundDataPktsDrops=cagwSessionNotFoundDataPktsDrops, cagwMsgTable=cagwMsgTable, cagwMessageStatisticsGroup=cagwMessageStatisticsGroup, cagwMaximumBaseStations=cagwMaximumBaseStations, cagwPathLocalIp=cagwPathLocalIp, cagwUserGrpInvalidSourceBytesDrops=cagwUserGrpInvalidSourceBytesDrops, cagwIdleModeEntryFailures=cagwIdleModeEntryFailures, cagwServiceDisabledDataPktsDrops=cagwServiceDisabledDataPktsDrops, cagwRejectedSessions=cagwRejectedSessions, cagwSequenceNumberErrorDataPktsDrops=cagwSequenceNumberErrorDataPktsDrops, cagwUserGrpIpGrePacketsSent=cagwUserGrpIpGrePacketsSent, cagwArpStatisticsEntry=cagwArpStatisticsEntry, cagwMaxSubscribersExceededNotifSeverity=cagwMaxSubscribersExceededNotifSeverity, cagwIgnoredMaxSubscNotifs=cagwIgnoredMaxSubscNotifs, cagwUserGrpEthGrePacketsReceived=cagwUserGrpEthGrePacketsReceived, cagwNotifMgmt=cagwNotifMgmt, cagwIdleModeLocUpdtPeriodic=cagwIdleModeLocUpdtPeriodic, ciscoAgwMIBNotifs=ciscoAgwMIBNotifs, cagwCongestionSignalingPktsDrops=cagwCongestionSignalingPktsDrops, cagwFailedHandoff=cagwFailedHandoff, cagwDhcpStatisticsGroup=cagwDhcpStatisticsGroup, cagwState=cagwState, cagwInstanceGroup=cagwInstanceGroup, cagwUserGrpGroupRev1Sup2=cagwUserGrpGroupRev1Sup2, cagwDisposedSignalingPktsDrops=cagwDisposedSignalingPktsDrops, cagwSuccessfulSecurityKeyExchange=cagwSuccessfulSecurityKeyExchange, cagwIpGreSentDataPkts=cagwIpGreSentDataPkts, cagwImpactedInfo=cagwImpactedInfo, cagwDhcpInformPackets=cagwDhcpInformPackets, cagwCreatedSubscribers=cagwCreatedSubscribers, ciscoAgwMIBConform=ciscoAgwMIBConform, cagwFramedRouteInsertFailed=cagwFramedRouteInsertFailed, ciscoAgwMIBCompliance=ciscoAgwMIBCompliance, cagwEncapErrorDataPktsDrops=cagwEncapErrorDataPktsDrops, cagwArpReqReceived=cagwArpReqReceived, cagwGlobalStatisticsEntry=cagwGlobalStatisticsEntry)
