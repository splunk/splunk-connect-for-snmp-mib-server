#
# PySNMP MIB module HUAWEI-ENTITY-EXTENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-ENTITY-EXTENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:32:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
entPhysicalVendorType, PhysicalIndex, entPhysicalIndex, PhysicalClass = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalVendorType", "PhysicalIndex", "entPhysicalIndex", "PhysicalClass")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ObjectIdentity, Counter32, MibIdentifier, Bits, Bits, IpAddress, Unsigned32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType, iso, Integer32, TimeTicks, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter32", "MibIdentifier", "Bits", "Bits", "IpAddress", "Unsigned32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType", "iso", "Integer32", "TimeTicks", "ModuleIdentity")
DisplayString, RowStatus, TextualConvention, DateAndTime, AutonomousType = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "DateAndTime", "AutonomousType")
hwEntityExtentMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31))
if mibBuilder.loadTexts: hwEntityExtentMIB.setLastUpdated('201107151641Z')
if mibBuilder.loadTexts: hwEntityExtentMIB.setOrganization('Huawei Technologies co.,Ltd.')
class HwAdminState(TextualConvention, Integer32):
    reference = "ITU Recommendation X.731, 'Information Technology - Open Systems Interconnection - System Management: State Management Function', 1992"
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 11, 12, 13))
    namedValues = NamedValues(("notSupported", 1), ("locked", 2), ("shuttingDown", 3), ("unlocked", 4), ("up", 11), ("down", 12), ("loopback", 13))

class HwOperState(TextualConvention, Integer32):
    reference = "ITU Recommendation X.731, 'Information Technology - Open Systems Interconnection - System Management: State Management Function', 1992"
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 11, 12, 13, 15, 16, 17))
    namedValues = NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3), ("offline", 4), ("up", 11), ("down", 12), ("connect", 13), ("protocolUp", 15), ("linkUp", 16), ("linkDown", 17))

class HwStandbyStatus(TextualConvention, Integer32):
    reference = "ITU Recommendation X.731, 'Information Technology - Open Systems Interconnection - System Management: State Management Function', 1992"
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("notSupported", 1), ("hotStandby", 2), ("coldStandby", 3), ("providingService", 4))

class HwAlarmStatus(TextualConvention, Bits):
    reference = "ITU Recommendation X.731, 'Information Technology - Open Systems Interconnection - System Management: State Management Function', 1992"
    status = 'current'
    namedValues = NamedValues(("notSupported", 0), ("underRepair", 1), ("critical", 2), ("major", 3), ("minor", 4), ("alarmOutstanding", 5), ("warning", 6), ("indeterminate", 7))

class HWLevelState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("lowLevel", 1), ("highLevel", 2))

hwEntityExtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1))
hwEntityState = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1))
hwEntityStateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1), )
if mibBuilder.loadTexts: hwEntityStateTable.setStatus('current')
hwEntityStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hwEntityStateEntry.setStatus('current')
hwEntityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 1), HwAdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityAdminStatus.setStatus('current')
hwEntityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 2), HwOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOperStatus.setStatus('current')
hwEntityStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 3), HwStandbyStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityStandbyStatus.setStatus('current')
hwEntityAlarmLight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 4), HwAlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityAlarmLight.setStatus('current')
hwEntityCpuUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityCpuUsage.setStatus('current')
hwEntityCpuUsageThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityCpuUsageThreshold.setStatus('current')
hwEntityMemUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityMemUsage.setStatus('current')
hwEntityMemUsageThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityMemUsageThreshold.setStatus('current')
hwEntityMemSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 9), Integer32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityMemSize.setStatus('current')
hwEntityUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 10), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityUpTime.setStatus('current')
hwEntityTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityTemperature.setStatus('current')
hwEntityTemperatureThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityTemperatureThreshold.setStatus('current')
hwEntityVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityVoltage.setStatus('current')
hwEntityVoltageLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityVoltageLowThreshold.setStatus('current')
hwEntityVoltageHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityVoltageHighThreshold.setStatus('current')
hwEntityTemperatureLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityTemperatureLowThreshold.setStatus('current')
hwEntityOpticalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalPower.setStatus('current')
hwEntityCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 18), Integer32()).setUnits('A').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityCurrent.setStatus('current')
hwEntityMemSizeMega = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 19), Integer32()).setUnits('M bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityMemSizeMega.setStatus('current')
hwEntityPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notSupported", 1), ("copper", 2), ("fiber100", 3), ("fiber1000", 4), ("fiber10000", 5), ("opticalnotExist", 6), ("optical", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityPortType.setStatus('current')
hwEntityDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("full", 2), ("half", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityDuplex.setStatus('current')
hwEntityOpticalPowerRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalPowerRx.setStatus('current')
hwEntityCpuUsageLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityCpuUsageLowThreshold.setStatus('current')
hwEntityBoardPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityBoardPower.setStatus('current')
hwEntityCpuFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 25), Integer32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityCpuFrequency.setStatus('current')
hwEntitySupportFlexCard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("flexible", 2), ("unflexible", 3), ("dummy", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntitySupportFlexCard.setStatus('current')
hwEntityBoardClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("notSupported", 1), ("mpu", 2), ("lpu", 3), ("sfu", 4), ("icu", 5), ("ecu", 6), ("fan", 7), ("power", 8), ("lcd", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityBoardClass.setStatus('current')
hwNseOpmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNseOpmStatus.setStatus('current')
hwEntityCpuMaxUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityCpuMaxUsage.setStatus('current')
hwEntityCPUType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 30), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityCPUType.setStatus('current')
hwEntityMemoryType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 31), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityMemoryType.setStatus('current')
hwEntityFlashSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityFlashSize.setStatus('current')
hwEntityIfUpTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityIfUpTimes.setStatus('current')
hwEntityIfDownTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityIfDownTimes.setStatus('current')
hwEntityCPUAvgUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityCPUAvgUsage.setStatus('current')
hwEntityMemoryAvgUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityMemoryAvgUsage.setStatus('current')
hwRUModuleInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 2), )
if mibBuilder.loadTexts: hwRUModuleInfoTable.setStatus('current')
hwRUModuleInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hwRUModuleInfoEntry.setStatus('current')
hwEntityBomId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 2, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityBomId.setStatus('current')
hwEntityBomEnDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 2, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityBomEnDesc.setStatus('current')
hwEntityBomLocalDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityBomLocalDesc.setStatus('obsolete')
hwEntityManufacturedDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 2, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityManufacturedDate.setStatus('current')
hwEntityManufactureCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityManufactureCode.setStatus('obsolete')
hwEntityCLEICode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 2, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityCLEICode.setStatus('current')
hwEntityUpdateLog = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 2, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityUpdateLog.setStatus('obsolete')
hwEntityArchivesInfoVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 2, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityArchivesInfoVersion.setStatus('current')
hwEntityOpenBomId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 2, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpenBomId.setStatus('current')
hwEntityIssueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 2, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityIssueNum.setStatus('current')
hwEntityBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 2, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityBoardType.setStatus('current')
hwOpticalModuleInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3), )
if mibBuilder.loadTexts: hwOpticalModuleInfoTable.setStatus('current')
hwOpticalModuleInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hwOpticalModuleInfoEntry.setStatus('current')
hwEntityOpticalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSupported", 1), ("singleMode", 2), ("multiMode5", 3), ("multiMode6", 4), ("noValue", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalMode.setStatus('current')
hwEntityOpticalWaveLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalWaveLength.setStatus('current')
hwEntityOpticalTransDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalTransDistance.setStatus('current')
hwEntityOpticalVendorSn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalVendorSn.setStatus('current')
hwEntityOpticalTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalTemperature.setStatus('current')
hwEntityOpticalVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalVoltage.setStatus('current')
hwEntityOpticalBiasCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalBiasCurrent.setStatus('current')
hwEntityOpticalRxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalRxPower.setStatus('current')
hwEntityOpticalTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalTxPower.setStatus('current')
hwEntityOpticalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 0), ("sc", 1), ("gbic", 2), ("sfp", 3), ("esfp", 4), ("copper", 5), ("xfp", 6), ("xenpak", 7), ("transponder", 8), ("cfp", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalType.setStatus('current')
hwEntityOpticalTransBW = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalTransBW.setStatus('current')
hwEntityOpticalFiberType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 20, 21))).clone(namedValues=NamedValues(("unknown", 0), ("sc", 1), ("style-1-copper-connector", 2), ("style-2-copper-connector", 3), ("bnc-tnc", 4), ("coaxial-headers", 5), ("fiberJack", 6), ("lc", 7), ("mt-rj", 8), ("mu", 9), ("sg", 10), ("optical-pigtail", 11), ("hssdcII", 20), ("copper-pigtail", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalFiberType.setStatus('current')
hwEntityOpticalRxLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalRxLowThreshold.setStatus('current')
hwEntityOpticalRxHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalRxHighThreshold.setStatus('current')
hwEntityOpticalTxLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalTxLowThreshold.setStatus('current')
hwEntityOpticalTxHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalTxHighThreshold.setStatus('current')
hwEntityOpticalPlug = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notSupported", 0), ("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalPlug.setStatus('current')
hwEntityOpticalDirectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("twoFiberBidirection", 2), ("oneFiberBidirection", 3), ("twoFiberTwoPortBidirection", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalDirectionType.setStatus('current')
hwEntityOpticalUserEeprom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalUserEeprom.setStatus('current')
hwEntityOpticalRxLowWarnThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalRxLowWarnThreshold.setStatus('current')
hwEntityOpticalRxHighWarnThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalRxHighWarnThreshold.setStatus('current')
hwEntityOpticalTxLowWarnThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalTxLowWarnThreshold.setStatus('current')
hwEntityOpticalTxHighWarnThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 3, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityOpticalTxHighWarnThreshold.setStatus('current')
hwMonitorInputTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 4), )
if mibBuilder.loadTexts: hwMonitorInputTable.setStatus('current')
hwMonitorInputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 4, 1), ).setIndexNames((0, "HUAWEI-ENTITY-EXTENT-MIB", "hwMonitorInputIndex"))
if mibBuilder.loadTexts: hwMonitorInputEntry.setStatus('current')
hwMonitorInputIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: hwMonitorInputIndex.setStatus('current')
hwMonitorInputName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 4, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMonitorInputName.setStatus('current')
hwMonitorInputState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 4, 1, 3), HWLevelState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMonitorInputState.setStatus('current')
hwMonitorInputStateEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 4, 1, 4), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMonitorInputStateEnable.setStatus('current')
hwMonitorInputRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMonitorInputRowStatus.setStatus('current')
hwMonitorOutputTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 5), )
if mibBuilder.loadTexts: hwMonitorOutputTable.setStatus('current')
hwMonitorOutputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 5, 1), ).setIndexNames((0, "HUAWEI-ENTITY-EXTENT-MIB", "hwMonitorOutputIndex"), (0, "HUAWEI-ENTITY-EXTENT-MIB", "hwMonitorOutputRuleIndex"))
if mibBuilder.loadTexts: hwMonitorOutputEntry.setStatus('current')
hwMonitorOutputIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)))
if mibBuilder.loadTexts: hwMonitorOutputIndex.setStatus('current')
hwMonitorOutputRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: hwMonitorOutputRuleIndex.setStatus('current')
hwMonitorOutputMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 5, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMonitorOutputMask.setStatus('current')
hwMonitorOutputKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 5, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMonitorOutputKey.setStatus('current')
hwMonitorOutputRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMonitorOutputRowStatus.setStatus('current')
hwEntPowerUsedInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 6), )
if mibBuilder.loadTexts: hwEntPowerUsedInfoTable.setStatus('current')
hwEntPowerUsedInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 6, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hwEntPowerUsedInfoEntry.setStatus('current')
hwEntPowerUsedInfoBoardName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 6, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntPowerUsedInfoBoardName.setStatus('current')
hwEntPowerUsedInfoBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 6, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntPowerUsedInfoBoardType.setStatus('current')
hwEntPowerUsedInfoBoardSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntPowerUsedInfoBoardSlot.setStatus('current')
hwEntPowerUsedInfoPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntPowerUsedInfoPower.setStatus('current')
hwVirtualCableTestTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 7), )
if mibBuilder.loadTexts: hwVirtualCableTestTable.setStatus('current')
hwVirtualCableTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 7, 1), ).setIndexNames((0, "HUAWEI-ENTITY-EXTENT-MIB", "hwVirtualCableTestIfIndex"))
if mibBuilder.loadTexts: hwVirtualCableTestEntry.setStatus('current')
hwVirtualCableTestIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 7, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwVirtualCableTestIfIndex.setStatus('current')
hwVirtualCableTestPairStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("normal", 1), ("abnormalOpen", 2), ("abnormalShort", 3), ("abnormalOpenShort", 4), ("abnormalCrossTalk", 5), ("unknown", 6), ("notSupport", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVirtualCableTestPairStatus.setStatus('current')
hwVirtualCableTestPairLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVirtualCableTestPairLength.setStatus('current')
hwVirtualCableTestOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("startTest", 1), ("resetTestValue", 2), ("readyStartTest", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVirtualCableTestOperation.setStatus('current')
hwVirtualCableTestLastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVirtualCableTestLastTime.setStatus('current')
hwVirtualCableTestPairAStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("normal", 1), ("abnormalOpen", 2), ("abnormalShort", 3), ("abnormalOpenShort", 4), ("abnormalCrossTalk", 5), ("unknown", 6), ("notSupport", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVirtualCableTestPairAStatus.setStatus('current')
hwVirtualCableTestPairBStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("normal", 1), ("abnormalOpen", 2), ("abnormalShort", 3), ("abnormalOpenShort", 4), ("abnormalCrossTalk", 5), ("unknown", 6), ("notSupport", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVirtualCableTestPairBStatus.setStatus('current')
hwVirtualCableTestPairCStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("normal", 1), ("abnormalOpen", 2), ("abnormalShort", 3), ("abnormalOpenShort", 4), ("abnormalCrossTalk", 5), ("unknown", 6), ("notSupport", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVirtualCableTestPairCStatus.setStatus('current')
hwVirtualCableTestPairDStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("normal", 1), ("abnormalOpen", 2), ("abnormalShort", 3), ("abnormalOpenShort", 4), ("abnormalCrossTalk", 5), ("unknown", 6), ("notSupport", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVirtualCableTestPairDStatus.setStatus('current')
hwVirtualCableTestPairALength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 7, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVirtualCableTestPairALength.setStatus('current')
hwVirtualCableTestPairBLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 7, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVirtualCableTestPairBLength.setStatus('current')
hwVirtualCableTestPairCLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 7, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVirtualCableTestPairCLength.setStatus('current')
hwVirtualCableTestPairDLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 7, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVirtualCableTestPairDLength.setStatus('current')
hwTemperatureThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 8), )
if mibBuilder.loadTexts: hwTemperatureThresholdTable.setStatus('current')
hwTemperatureThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 8, 1), ).setIndexNames((0, "HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTempSlotId"), (0, "HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTempI2CId"), (0, "HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTempAddr"), (0, "HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTempChannel"))
if mibBuilder.loadTexts: hwTemperatureThresholdEntry.setStatus('current')
hwEntityTempSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityTempSlotId.setStatus('current')
hwEntityTempI2CId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityTempI2CId.setStatus('current')
hwEntityTempAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityTempAddr.setStatus('current')
hwEntityTempChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityTempChannel.setStatus('current')
hwEntityTempStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("minor", 2), ("major", 3), ("fatal", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityTempStatus.setStatus('current')
hwEntityTempValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityTempValue.setStatus('current')
hwEntityTempMinorAlmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 8, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityTempMinorAlmThreshold.setStatus('current')
hwEntityTempMajorAlmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 8, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityTempMajorAlmThreshold.setStatus('current')
hwEntityTempFatalAlmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 8, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityTempFatalAlmThreshold.setStatus('current')
hwVoltageInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 9), )
if mibBuilder.loadTexts: hwVoltageInfoTable.setStatus('current')
hwVoltageInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 9, 1), ).setIndexNames((0, "HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVolSlot"), (0, "HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVolI2CId"), (0, "HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVolAddr"), (0, "HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVolChannel"))
if mibBuilder.loadTexts: hwVoltageInfoEntry.setStatus('current')
hwEntityVolSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityVolSlot.setStatus('current')
hwEntityVolI2CId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityVolI2CId.setStatus('current')
hwEntityVolAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityVolAddr.setStatus('current')
hwEntityVolChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityVolChannel.setStatus('current')
hwEntityVolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("major", 2), ("fatal", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityVolStatus.setStatus('current')
hwEntityVolRequired = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityVolRequired.setStatus('current')
hwEntityVolCurValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityVolCurValue.setStatus('current')
hwEntityVolRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 9, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityVolRatio.setStatus('current')
hwEntityVolLowAlmMajor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 9, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityVolLowAlmMajor.setStatus('current')
hwEntityVolLowAlmFatal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 9, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityVolLowAlmFatal.setStatus('current')
hwEntityVolHighAlmMajor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 9, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityVolHighAlmMajor.setStatus('current')
hwEntityVolHighAlmFatal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 9, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityVolHighAlmFatal.setStatus('current')
hwFanStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 10), )
if mibBuilder.loadTexts: hwFanStatusTable.setStatus('current')
hwFanStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 10, 1), ).setIndexNames((0, "HUAWEI-ENTITY-EXTENT-MIB", "hwEntityFanSlot"), (0, "HUAWEI-ENTITY-EXTENT-MIB", "hwEntityFanSn"))
if mibBuilder.loadTexts: hwFanStatusEntry.setStatus('current')
hwEntityFanSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityFanSlot.setStatus('current')
hwEntityFanSn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityFanSn.setStatus('current')
hwEntityFanReg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityFanReg.setStatus('current')
hwEntityFanSpdAdjMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("manual", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityFanSpdAdjMode.setStatus('current')
hwEntityFanSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityFanSpeed.setStatus('current')
hwEntityFanPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("present", 1), ("absent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityFanPresent.setStatus('current')
hwEntityFanState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("abnormal", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityFanState.setStatus('current')
hwEntityGlobalPara = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 11))
hwEntityServiceType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("sslvpn", 1), ("firewall", 2), ("load-balance", 3), ("ipsec", 4), ("netstream", 5), ("wlan", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityServiceType.setStatus('current')
hwPortBip8StatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 12), )
if mibBuilder.loadTexts: hwPortBip8StatisticsTable.setStatus('current')
hwPortBip8StatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 12, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hwPortBip8StatisticsEntry.setStatus('current')
hwPhysicalPortBip8StatisticsEB = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 12, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPhysicalPortBip8StatisticsEB.setStatus('current')
hwPhysicalPortBip8StatisticsES = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 12, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPhysicalPortBip8StatisticsES.setStatus('current')
hwPhysicalPortBip8StatisticsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 12, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPhysicalPortBip8StatisticsSES.setStatus('current')
hwPhysicalPortBip8StatisticsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 12, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPhysicalPortBip8StatisticsUAS.setStatus('current')
hwPhysicalPortBip8StatisticsBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 12, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPhysicalPortBip8StatisticsBBE.setStatus('current')
hwPhysicalPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 1, 1, 12, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPhysicalPortSpeed.setStatus('current')
hwEntityExtTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 2))
hwEntityExtTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 2, 0))
hwEntityExtTemperatureThresholdNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 2, 0, 1)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTemperature"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTemperatureThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAdminStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAlarmLight"))
if mibBuilder.loadTexts: hwEntityExtTemperatureThresholdNotification.setStatus('current')
hwEntityExtVoltageLowThresholdNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 2, 0, 2)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVoltage"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVoltageLowThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAdminStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAlarmLight"))
if mibBuilder.loadTexts: hwEntityExtVoltageLowThresholdNotification.setStatus('current')
hwEntityExtVoltageHighThresholdNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 2, 0, 3)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVoltage"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVoltageHighThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAdminStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAlarmLight"))
if mibBuilder.loadTexts: hwEntityExtVoltageHighThresholdNotification.setStatus('current')
hwEntityExtCpuUsageThresholdNotfication = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 2, 0, 4)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityCpuUsage"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityCpuUsageThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTemperature"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTemperatureThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAdminStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAlarmLight"))
if mibBuilder.loadTexts: hwEntityExtCpuUsageThresholdNotfication.setStatus('current')
hwEntityExtMemUsageThresholdNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 2, 0, 5)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityMemUsage"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityMemUsageThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityMemSize"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAdminStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAlarmLight"))
if mibBuilder.loadTexts: hwEntityExtMemUsageThresholdNotification.setStatus('current')
hwEntityExtOperEnabled = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 2, 0, 6)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAdminStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAlarmLight"))
if mibBuilder.loadTexts: hwEntityExtOperEnabled.setStatus('current')
hwEntityExtOperDisabled = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 2, 0, 7)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAdminStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAlarmLight"))
if mibBuilder.loadTexts: hwEntityExtOperDisabled.setStatus('current')
hwEntityExtMonitorBoardAbnormalNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 2, 0, 8))
if mibBuilder.loadTexts: hwEntityExtMonitorBoardAbnormalNotification.setStatus('current')
hwEntityExtMonitorBoardNormalNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 2, 0, 9))
if mibBuilder.loadTexts: hwEntityExtMonitorBoardNormalNotification.setStatus('current')
hwEntityExtMonitorPortAbnormalNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 2, 0, 10)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwMonitorInputState"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwMonitorInputName"))
if mibBuilder.loadTexts: hwEntityExtMonitorPortAbnormalNotification.setStatus('current')
hwEntityExtMonitorPortNormalNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 2, 0, 11)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwMonitorInputState"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwMonitorInputName"))
if mibBuilder.loadTexts: hwEntityExtMonitorPortNormalNotification.setStatus('current')
hwEntityExtCpuUsageLowThresholdNotfication = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 2, 0, 12)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityCpuUsage"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityCpuUsageThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTemperature"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTemperatureThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAdminStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAlarmLight"))
if mibBuilder.loadTexts: hwEntityExtCpuUsageLowThresholdNotfication.setStatus('current')
hwDevicePowerInfoObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 3))
hwDevicePowerInfoTotalPower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDevicePowerInfoTotalPower.setStatus('current')
hwDevicePowerInfoUsedPower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDevicePowerInfoUsedPower.setStatus('current')
hwEntityExtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4))
hwEntityExtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 1))
hwEntityExtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 1, 1)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityExtGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEntityExtCompliance = hwEntityExtCompliance.setStatus('current')
hwEntityExtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2))
hwEntityExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 1)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAdminStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOperStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityStandbyStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityAlarmLight"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityCpuUsage"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityCpuUsageThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityMemUsage"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityMemUsageThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityMemSize"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityUpTime"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTemperature"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTemperatureThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVoltage"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVoltageLowThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVoltageHighThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTemperatureLowThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalPower"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityCurrent"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityMemSizeMega"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityPortType"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityDuplex"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalPowerRx"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityCpuUsageLowThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityBoardPower"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityCpuFrequency"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntitySupportFlexCard"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityBoardClass"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwNseOpmStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityCpuMaxUsage"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityServiceType"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityCPUType"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityMemoryType"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityFlashSize"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityIfUpTimes"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityIfDownTimes"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityCPUAvgUsage"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityMemoryAvgUsage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEntityExtGroup = hwEntityExtGroup.setStatus('current')
hwEntityExtNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 2)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityExtTemperatureThresholdNotification"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityExtVoltageLowThresholdNotification"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityExtVoltageHighThresholdNotification"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityExtCpuUsageThresholdNotfication"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityExtMemUsageThresholdNotification"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityExtOperEnabled"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityExtOperDisabled"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityExtMonitorBoardAbnormalNotification"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityExtMonitorBoardNormalNotification"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityExtMonitorPortAbnormalNotification"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityExtMonitorPortNormalNotification"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityExtCpuUsageLowThresholdNotfication"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEntityExtNotificationGroup = hwEntityExtNotificationGroup.setStatus('current')
hwRUModuleInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 3)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityBomId"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityBomEnDesc"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityManufacturedDate"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityCLEICode"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityArchivesInfoVersion"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpenBomId"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityIssueNum"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityBoardType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRUModuleInfoGroup = hwRUModuleInfoGroup.setStatus('current')
hwEntityExtOldObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 4)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityBomLocalDesc"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityManufactureCode"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityUpdateLog"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEntityExtOldObjectsGroup = hwEntityExtOldObjectsGroup.setStatus('obsolete')
hwOpticalModuleInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 5)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalMode"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalWaveLength"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalTransDistance"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalVendorSn"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalTemperature"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalVoltage"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalBiasCurrent"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalRxPower"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalTxPower"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalType"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalTransBW"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalFiberType"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalRxLowThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalRxHighThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalTxLowThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalTxHighThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalPlug"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalDirectionType"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityOpticalUserEeprom"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwOpticalModuleInfoGroup = hwOpticalModuleInfoGroup.setStatus('current')
hwMonitorInputGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 6)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwMonitorInputName"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwMonitorInputState"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwMonitorInputStateEnable"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwMonitorInputRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMonitorInputGroup = hwMonitorInputGroup.setStatus('current')
hwMonitorOutputGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 7)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwMonitorOutputMask"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwMonitorOutputKey"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwMonitorOutputRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMonitorOutputGroup = hwMonitorOutputGroup.setStatus('current')
hwEntPowerUsedInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 8)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntPowerUsedInfoBoardName"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntPowerUsedInfoBoardType"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntPowerUsedInfoBoardSlot"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntPowerUsedInfoPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEntPowerUsedInfoGroup = hwEntPowerUsedInfoGroup.setStatus('current')
hwDevicePowerInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 9)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwDevicePowerInfoTotalPower"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwDevicePowerInfoUsedPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDevicePowerInfoGroup = hwDevicePowerInfoGroup.setStatus('current')
hwVirtualCableTestGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 10)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwVirtualCableTestPairStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwVirtualCableTestPairLength"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwVirtualCableTestOperation"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwVirtualCableTestLastTime"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwVirtualCableTestPairAStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwVirtualCableTestPairBStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwVirtualCableTestPairCStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwVirtualCableTestPairDStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwVirtualCableTestPairALength"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwVirtualCableTestPairBLength"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwVirtualCableTestPairCLength"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwVirtualCableTestPairDLength"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVirtualCableTestGroup = hwVirtualCableTestGroup.setStatus('current')
hwTemperatureThresholdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 11)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTempSlotId"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTempI2CId"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTempAddr"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTempChannel"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTempStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTempValue"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTempMinorAlmThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTempMajorAlmThreshold"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityTempFatalAlmThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTemperatureThresholdGroup = hwTemperatureThresholdGroup.setStatus('current')
hwVoltageInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 12)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVolSlot"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVolI2CId"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVolAddr"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVolChannel"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVolStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVolRequired"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVolLowAlmMajor"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVolLowAlmFatal"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVolHighAlmMajor"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVolHighAlmFatal"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVolCurValue"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityVolRatio"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVoltageInfoGroup = hwVoltageInfoGroup.setStatus('current')
hwFanStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 13)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityFanSlot"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityFanSn"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityFanReg"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityFanSpdAdjMode"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityFanSpeed"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityFanPresent"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityFanState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwFanStatusGroup = hwFanStatusGroup.setStatus('current')
hwPnpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 14)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwHardwareCapaSequenceNo"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwFileGeneIndex"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwFileGeneResourceType"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwFileGeneResourceID"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwFileGeneDestinationFile"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwFileGeneOperState"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwFileGeneRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPnpGroup = hwPnpGroup.setStatus('current')
hwSystemGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 15)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntitySystemNetID"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntitySoftwareName"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntitySoftwareVersion"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntitySoftwareVendor"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntitySystemModel"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntitySystemTime"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntitySystemMacAddress"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntitySystemReset"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntitySystemHealthInterval"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntitySystemNEId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSystemGlobalGroup = hwSystemGlobalGroup.setStatus('current')
hwHeartbeatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 16)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityHeartbeatOnOff"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityHeartbeatPeriod"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwEntityHeartbeatTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwHeartbeatGroup = hwHeartbeatGroup.setStatus('current')
hwPortBip8StatisticsObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 17)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwPhysicalPortBip8StatisticsEB"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwPhysicalPortBip8StatisticsES"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwPhysicalPortBip8StatisticsSES"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwPhysicalPortBip8StatisticsUAS"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwPhysicalPortBip8StatisticsBBE"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPortBip8StatisticsObjectGroup = hwPortBip8StatisticsObjectGroup.setStatus('current')
hwPredisposeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 4, 2, 18)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwPreDisposeSequenceNo"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwDisposeSlot"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwDisposeCardId"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwDisposeSbom"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwDisposeRowStatus"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwDisposeOperState"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwDisposeEntPhysicalIndex"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwDisposeEntPhysicalDescr"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwDisposeEntPhysicalVendorType"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwDisposeEntPhysicalContainedIn"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwDisposeEntPhysicalClass"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwDisposeEntPhysicalParentRelPos"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwDisposeEntPhysicalName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPredisposeGroup = hwPredisposeGroup.setStatus('current')
hwPnpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 5))
hwPnpInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 5, 1))
hwHardwareCapaSequenceNo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 5, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwHardwareCapaSequenceNo.setStatus('current')
hwPnpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 5, 2))
hwHardwareCapaChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 5, 2, 1)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwHardwareCapaSequenceNo"))
if mibBuilder.loadTexts: hwHardwareCapaChangeNotification.setStatus('current')
hwPnpOperateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 5, 3), )
if mibBuilder.loadTexts: hwPnpOperateTable.setStatus('current')
hwPnpOperateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 5, 3, 1), ).setIndexNames((0, "HUAWEI-ENTITY-EXTENT-MIB", "hwFileGeneIndex"))
if mibBuilder.loadTexts: hwPnpOperateEntry.setStatus('current')
hwFileGeneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwFileGeneIndex.setStatus('current')
hwFileGeneOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("opInProgress", 1), ("opSuccess", 2), ("opGetFileError", 3), ("opInvalidDestName", 4), ("opNoFlashSpace", 5), ("opWriteFileError", 6), ("opDestoryError", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFileGeneOperState.setStatus('current')
hwFileGeneResourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 5, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("pnpcard", 1), ("pnpsubcard", 2), ("pnphardcapability", 3), ("pnpPreDisposeCapability", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFileGeneResourceType.setStatus('current')
hwFileGeneResourceID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 5, 3, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFileGeneResourceID.setStatus('current')
hwFileGeneDestinationFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 5, 3, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFileGeneDestinationFile.setStatus('current')
hwFileGeneRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 5, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFileGeneRowStatus.setStatus('current')
hwSystemGlobalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 6))
hwEntitySystemNetID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 6, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntitySystemNetID.setStatus('current')
hwEntitySoftwareName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 6, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntitySoftwareName.setStatus('current')
hwEntitySoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 6, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntitySoftwareVersion.setStatus('current')
hwEntitySoftwareVendor = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 6, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntitySoftwareVendor.setStatus('current')
hwEntitySystemModel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 6, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntitySystemModel.setStatus('current')
hwEntitySystemTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 6, 6), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntitySystemTime.setStatus('current')
hwEntitySystemMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 6, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntitySystemMacAddress.setStatus('current')
hwEntitySystemReset = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 6, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("restart", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntitySystemReset.setStatus('current')
hwEntitySystemHealthInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 6, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntitySystemHealthInterval.setStatus('current')
hwEntitySystemNEId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 6, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntitySystemNEId.setStatus('current')
hwHeartbeatObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 7))
hwHeartbeatConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 7, 1))
hwEntityHeartbeatOnOff = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityHeartbeatOnOff.setStatus('current')
hwEntityHeartbeatPeriod = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityHeartbeatPeriod.setStatus('current')
hwHeartbeatTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 7, 2))
hwEntityHeartbeatTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 7, 2, 1))
if mibBuilder.loadTexts: hwEntityHeartbeatTrap.setStatus('current')
hwPreDisposeObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8))
hwPreDisposeInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 1))
hwPreDisposeSequenceNo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPreDisposeSequenceNo.setStatus('current')
hwPreDisposedTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 2))
hwInsertDiffFromPreDisposed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 2, 1)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwDisposeEntPhysicalIndex"), ("HUAWEI-ENTITY-EXTENT-MIB", "hwDisposeEntPhysicalVendorType"), ("ENTITY-MIB", "entPhysicalVendorType"))
if mibBuilder.loadTexts: hwInsertDiffFromPreDisposed.setStatus('current')
hwPreDisposedChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 2, 2)).setObjects(("HUAWEI-ENTITY-EXTENT-MIB", "hwPreDisposeSequenceNo"))
if mibBuilder.loadTexts: hwPreDisposedChangeNotification.setStatus('current')
hwPreDisposeConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 3), )
if mibBuilder.loadTexts: hwPreDisposeConfigTable.setStatus('current')
hwPreDisposeConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 3, 1), ).setIndexNames((0, "HUAWEI-ENTITY-EXTENT-MIB", "hwDisposeSlot"), (0, "HUAWEI-ENTITY-EXTENT-MIB", "hwDisposeCardId"))
if mibBuilder.loadTexts: hwPreDisposeConfigEntry.setStatus('current')
hwDisposeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 3, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDisposeSlot.setStatus('current')
hwDisposeCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDisposeCardId.setStatus('current')
hwDisposeSbom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 3, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDisposeSbom.setStatus('current')
hwDisposeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDisposeRowStatus.setStatus('current')
hwDisposeOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("opSuccess", 1), ("opInProgress", 2), ("opDevNotSupportPredispose", 3), ("opCardNotSupportPredispose", 4), ("opAlreadyPredispose", 5), ("opCardConflict", 6), ("opDevOperationError", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDisposeOperState.setStatus('current')
hwPreDisposeEntInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 4), )
if mibBuilder.loadTexts: hwPreDisposeEntInfoTable.setStatus('current')
hwPreDisposeEntInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 4, 1), ).setIndexNames((0, "HUAWEI-ENTITY-EXTENT-MIB", "hwDisposeEntPhysicalIndex"))
if mibBuilder.loadTexts: hwPreDisposeEntInfoEntry.setStatus('current')
hwDisposeEntPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 4, 1, 1), PhysicalIndex())
if mibBuilder.loadTexts: hwDisposeEntPhysicalIndex.setStatus('current')
hwDisposeEntPhysicalDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 4, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDisposeEntPhysicalDescr.setStatus('current')
hwDisposeEntPhysicalVendorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 4, 1, 3), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDisposeEntPhysicalVendorType.setStatus('current')
hwDisposeEntPhysicalContainedIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDisposeEntPhysicalContainedIn.setStatus('current')
hwDisposeEntPhysicalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 4, 1, 5), PhysicalClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDisposeEntPhysicalClass.setStatus('current')
hwDisposeEntPhysicalParentRelPos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDisposeEntPhysicalParentRelPos.setStatus('current')
hwDisposeEntPhysicalName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 31, 8, 4, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDisposeEntPhysicalName.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-ENTITY-EXTENT-MIB", hwVirtualCableTestPairALength=hwVirtualCableTestPairALength, hwMonitorInputRowStatus=hwMonitorInputRowStatus, hwFanStatusTable=hwFanStatusTable, hwTemperatureThresholdGroup=hwTemperatureThresholdGroup, hwEntityHeartbeatPeriod=hwEntityHeartbeatPeriod, hwEntityBoardClass=hwEntityBoardClass, hwEntityFanState=hwEntityFanState, hwEntityAdminStatus=hwEntityAdminStatus, hwEntityExtOldObjectsGroup=hwEntityExtOldObjectsGroup, HwAlarmStatus=HwAlarmStatus, hwDisposeRowStatus=hwDisposeRowStatus, hwEntityExtentMIB=hwEntityExtentMIB, hwEntityOpticalTemperature=hwEntityOpticalTemperature, hwEntityOpticalTxHighThreshold=hwEntityOpticalTxHighThreshold, hwEntitySoftwareName=hwEntitySoftwareName, hwEntityExtMonitorPortAbnormalNotification=hwEntityExtMonitorPortAbnormalNotification, hwEntityFanSpeed=hwEntityFanSpeed, hwDevicePowerInfoTotalPower=hwDevicePowerInfoTotalPower, hwEntityOperStatus=hwEntityOperStatus, hwEntityVolLowAlmMajor=hwEntityVolLowAlmMajor, hwFileGeneResourceType=hwFileGeneResourceType, hwPreDisposeSequenceNo=hwPreDisposeSequenceNo, hwTemperatureThresholdTable=hwTemperatureThresholdTable, HwAdminState=HwAdminState, hwDisposeSbom=hwDisposeSbom, hwEntityVolChannel=hwEntityVolChannel, hwEntityExtMemUsageThresholdNotification=hwEntityExtMemUsageThresholdNotification, hwOpticalModuleInfoGroup=hwOpticalModuleInfoGroup, hwEntityCPUAvgUsage=hwEntityCPUAvgUsage, hwEntityOpticalType=hwEntityOpticalType, hwEntitySystemNEId=hwEntitySystemNEId, hwEntityOpticalWaveLength=hwEntityOpticalWaveLength, hwEntityTemperatureThreshold=hwEntityTemperatureThreshold, hwVirtualCableTestPairCLength=hwVirtualCableTestPairCLength, hwTemperatureThresholdEntry=hwTemperatureThresholdEntry, hwHeartbeatTrapPrefix=hwHeartbeatTrapPrefix, hwPreDisposeObjects=hwPreDisposeObjects, hwFanStatusGroup=hwFanStatusGroup, hwVirtualCableTestTable=hwVirtualCableTestTable, hwEntityVolCurValue=hwEntityVolCurValue, hwEntPowerUsedInfoEntry=hwEntPowerUsedInfoEntry, hwDisposeEntPhysicalContainedIn=hwDisposeEntPhysicalContainedIn, hwEntPowerUsedInfoBoardType=hwEntPowerUsedInfoBoardType, hwEntityExtGroups=hwEntityExtGroups, hwEntityTempMajorAlmThreshold=hwEntityTempMajorAlmThreshold, hwEntityGlobalPara=hwEntityGlobalPara, hwPhysicalPortBip8StatisticsES=hwPhysicalPortBip8StatisticsES, hwDevicePowerInfoUsedPower=hwDevicePowerInfoUsedPower, hwEntityCPUType=hwEntityCPUType, hwEntityOpticalTxHighWarnThreshold=hwEntityOpticalTxHighWarnThreshold, hwMonitorOutputEntry=hwMonitorOutputEntry, hwDevicePowerInfoGroup=hwDevicePowerInfoGroup, hwPnpGroup=hwPnpGroup, hwPreDisposeEntInfoTable=hwPreDisposeEntInfoTable, hwMonitorOutputTable=hwMonitorOutputTable, hwEntityCurrent=hwEntityCurrent, hwEntityExtCompliance=hwEntityExtCompliance, hwHeartbeatConfig=hwHeartbeatConfig, hwPreDisposeInfo=hwPreDisposeInfo, hwEntityMemSizeMega=hwEntityMemSizeMega, hwVirtualCableTestPairDLength=hwVirtualCableTestPairDLength, hwEntityTemperature=hwEntityTemperature, hwMonitorInputName=hwMonitorInputName, hwEntityOpticalMode=hwEntityOpticalMode, hwEntityTempFatalAlmThreshold=hwEntityTempFatalAlmThreshold, hwEntityVolHighAlmMajor=hwEntityVolHighAlmMajor, hwEntPowerUsedInfoBoardName=hwEntPowerUsedInfoBoardName, hwEntityExtVoltageHighThresholdNotification=hwEntityExtVoltageHighThresholdNotification, hwEntitySystemTime=hwEntitySystemTime, hwRUModuleInfoEntry=hwRUModuleInfoEntry, hwPreDisposedChangeNotification=hwPreDisposedChangeNotification, hwEntityExtOperEnabled=hwEntityExtOperEnabled, hwEntityOpticalBiasCurrent=hwEntityOpticalBiasCurrent, hwEntityTempAddr=hwEntityTempAddr, hwVirtualCableTestLastTime=hwVirtualCableTestLastTime, hwEntityCpuUsage=hwEntityCpuUsage, hwEntityOpticalTxPower=hwEntityOpticalTxPower, hwMonitorOutputRowStatus=hwMonitorOutputRowStatus, hwEntityExtMonitorBoardAbnormalNotification=hwEntityExtMonitorBoardAbnormalNotification, hwMonitorOutputKey=hwMonitorOutputKey, hwEntityHeartbeatTrap=hwEntityHeartbeatTrap, hwVirtualCableTestGroup=hwVirtualCableTestGroup, hwEntitySystemMacAddress=hwEntitySystemMacAddress, hwEntityManufacturedDate=hwEntityManufacturedDate, hwEntityExtNotificationGroup=hwEntityExtNotificationGroup, hwEntityStateEntry=hwEntityStateEntry, hwEntityTempSlotId=hwEntityTempSlotId, hwEntityCpuFrequency=hwEntityCpuFrequency, hwEntityBoardType=hwEntityBoardType, hwMonitorOutputIndex=hwMonitorOutputIndex, hwEntityOpticalDirectionType=hwEntityOpticalDirectionType, hwEntityOpticalRxLowThreshold=hwEntityOpticalRxLowThreshold, hwEntityOpticalPowerRx=hwEntityOpticalPowerRx, hwEntityVolRequired=hwEntityVolRequired, hwPhysicalPortBip8StatisticsUAS=hwPhysicalPortBip8StatisticsUAS, hwEntityOpticalRxPower=hwEntityOpticalRxPower, hwPredisposeGroup=hwPredisposeGroup, hwEntitySupportFlexCard=hwEntitySupportFlexCard, hwEntityOpticalPlug=hwEntityOpticalPlug, hwEntityTempChannel=hwEntityTempChannel, hwDisposeSlot=hwDisposeSlot, hwEntityCpuUsageLowThreshold=hwEntityCpuUsageLowThreshold, hwEntityDuplex=hwEntityDuplex, hwEntityFanPresent=hwEntityFanPresent, hwEntityMemoryType=hwEntityMemoryType, hwOpticalModuleInfoEntry=hwOpticalModuleInfoEntry, hwEntityVoltageHighThreshold=hwEntityVoltageHighThreshold, hwEntityCpuMaxUsage=hwEntityCpuMaxUsage, hwMonitorInputState=hwMonitorInputState, hwEntityExtVoltageLowThresholdNotification=hwEntityExtVoltageLowThresholdNotification, hwEntitySoftwareVendor=hwEntitySoftwareVendor, hwFileGeneRowStatus=hwFileGeneRowStatus, hwEntityExtTrapsPrefix=hwEntityExtTrapsPrefix, hwPreDisposeConfigTable=hwPreDisposeConfigTable, hwEntityBomId=hwEntityBomId, hwHardwareCapaSequenceNo=hwHardwareCapaSequenceNo, hwPnpTraps=hwPnpTraps, hwPreDisposedTraps=hwPreDisposedTraps, hwFanStatusEntry=hwFanStatusEntry, hwPnpObjects=hwPnpObjects, hwVoltageInfoEntry=hwVoltageInfoEntry, hwEntityFanSpdAdjMode=hwEntityFanSpdAdjMode, hwEntityExtOperDisabled=hwEntityExtOperDisabled, hwEntityExtGroup=hwEntityExtGroup, hwEntityStateTable=hwEntityStateTable, hwVirtualCableTestIfIndex=hwVirtualCableTestIfIndex, hwVirtualCableTestPairBLength=hwVirtualCableTestPairBLength, hwEntityExtMonitorBoardNormalNotification=hwEntityExtMonitorBoardNormalNotification, hwVirtualCableTestPairLength=hwVirtualCableTestPairLength, hwPhysicalPortBip8StatisticsEB=hwPhysicalPortBip8StatisticsEB, hwEntityVolAddr=hwEntityVolAddr, hwPnpOperateEntry=hwPnpOperateEntry, hwEntityIfUpTimes=hwEntityIfUpTimes, hwPreDisposeEntInfoEntry=hwPreDisposeEntInfoEntry, hwDisposeEntPhysicalDescr=hwDisposeEntPhysicalDescr, hwFileGeneIndex=hwFileGeneIndex, hwPreDisposeConfigEntry=hwPreDisposeConfigEntry, hwVirtualCableTestPairStatus=hwVirtualCableTestPairStatus, hwEntityOpticalTransDistance=hwEntityOpticalTransDistance, hwHeartbeatObjects=hwHeartbeatObjects, hwDisposeEntPhysicalIndex=hwDisposeEntPhysicalIndex, hwEntityOpticalRxLowWarnThreshold=hwEntityOpticalRxLowWarnThreshold, hwEntitySoftwareVersion=hwEntitySoftwareVersion, hwEntityVoltageLowThreshold=hwEntityVoltageLowThreshold, hwEntityTempI2CId=hwEntityTempI2CId, hwEntityMemUsage=hwEntityMemUsage, hwEntityMemSize=hwEntityMemSize, hwNseOpmStatus=hwNseOpmStatus, hwEntPowerUsedInfoGroup=hwEntPowerUsedInfoGroup, hwEntityFanSn=hwEntityFanSn, HwOperState=HwOperState, hwEntityExtConformance=hwEntityExtConformance, hwEntityMemoryAvgUsage=hwEntityMemoryAvgUsage, HWLevelState=HWLevelState, hwEntityOpticalVendorSn=hwEntityOpticalVendorSn, hwEntityBomEnDesc=hwEntityBomEnDesc, hwEntityOpticalTxLowWarnThreshold=hwEntityOpticalTxLowWarnThreshold, hwMonitorInputTable=hwMonitorInputTable, hwMonitorOutputRuleIndex=hwMonitorOutputRuleIndex, hwVirtualCableTestPairCStatus=hwVirtualCableTestPairCStatus, hwEntityVolSlot=hwEntityVolSlot, hwEntityExtObjects=hwEntityExtObjects, hwEntityOpticalPower=hwEntityOpticalPower, hwPhysicalPortBip8StatisticsSES=hwPhysicalPortBip8StatisticsSES, hwEntityVolRatio=hwEntityVolRatio, hwInsertDiffFromPreDisposed=hwInsertDiffFromPreDisposed, hwOpticalModuleInfoTable=hwOpticalModuleInfoTable, hwEntityOpticalTransBW=hwEntityOpticalTransBW, hwVirtualCableTestOperation=hwVirtualCableTestOperation, hwEntityStandbyStatus=hwEntityStandbyStatus, hwEntPowerUsedInfoBoardSlot=hwEntPowerUsedInfoBoardSlot, hwEntPowerUsedInfoPower=hwEntPowerUsedInfoPower, hwMonitorInputStateEnable=hwMonitorInputStateEnable, hwEntityHeartbeatOnOff=hwEntityHeartbeatOnOff, hwEntityCLEICode=hwEntityCLEICode, hwEntityCpuUsageThreshold=hwEntityCpuUsageThreshold, hwEntityExtCompliances=hwEntityExtCompliances, hwEntityTemperatureLowThreshold=hwEntityTemperatureLowThreshold, hwEntityExtMonitorPortNormalNotification=hwEntityExtMonitorPortNormalNotification, hwEntityOpticalRxHighWarnThreshold=hwEntityOpticalRxHighWarnThreshold, hwDisposeOperState=hwDisposeOperState, hwPhysicalPortBip8StatisticsBBE=hwPhysicalPortBip8StatisticsBBE, hwEntityOpticalVoltage=hwEntityOpticalVoltage, hwMonitorOutputMask=hwMonitorOutputMask, hwPnpInfo=hwPnpInfo, hwEntityManufactureCode=hwEntityManufactureCode, hwEntityOpticalUserEeprom=hwEntityOpticalUserEeprom, hwDisposeEntPhysicalParentRelPos=hwDisposeEntPhysicalParentRelPos, hwEntityServiceType=hwEntityServiceType, hwDisposeEntPhysicalName=hwDisposeEntPhysicalName, hwVoltageInfoGroup=hwVoltageInfoGroup, hwEntityTempStatus=hwEntityTempStatus, hwSystemGlobalObjects=hwSystemGlobalObjects, hwEntityBoardPower=hwEntityBoardPower, hwEntitySystemHealthInterval=hwEntitySystemHealthInterval, hwEntityExtCpuUsageThresholdNotfication=hwEntityExtCpuUsageThresholdNotfication, hwPortBip8StatisticsTable=hwPortBip8StatisticsTable, hwPnpOperateTable=hwPnpOperateTable, HwStandbyStatus=HwStandbyStatus, hwMonitorInputEntry=hwMonitorInputEntry, hwEntityArchivesInfoVersion=hwEntityArchivesInfoVersion, hwMonitorInputGroup=hwMonitorInputGroup, hwSystemGlobalGroup=hwSystemGlobalGroup, hwPortBip8StatisticsObjectGroup=hwPortBip8StatisticsObjectGroup, hwDisposeEntPhysicalVendorType=hwDisposeEntPhysicalVendorType, hwEntityOpenBomId=hwEntityOpenBomId, hwEntityIfDownTimes=hwEntityIfDownTimes, hwEntityTempValue=hwEntityTempValue, hwEntityVolI2CId=hwEntityVolI2CId, hwFileGeneOperState=hwFileGeneOperState, hwFileGeneDestinationFile=hwFileGeneDestinationFile, hwEntityVolStatus=hwEntityVolStatus, hwEntityBomLocalDesc=hwEntityBomLocalDesc, hwEntityMemUsageThreshold=hwEntityMemUsageThreshold, hwHeartbeatGroup=hwHeartbeatGroup, hwDisposeEntPhysicalClass=hwDisposeEntPhysicalClass, hwEntityExtCpuUsageLowThresholdNotfication=hwEntityExtCpuUsageLowThresholdNotfication, hwEntPowerUsedInfoTable=hwEntPowerUsedInfoTable, hwEntitySystemModel=hwEntitySystemModel, hwEntityTempMinorAlmThreshold=hwEntityTempMinorAlmThreshold, hwEntityIssueNum=hwEntityIssueNum, hwEntityFanSlot=hwEntityFanSlot, hwVirtualCableTestPairBStatus=hwVirtualCableTestPairBStatus, hwFileGeneResourceID=hwFileGeneResourceID, hwEntityVoltage=hwEntityVoltage, hwEntitySystemNetID=hwEntitySystemNetID, hwEntitySystemReset=hwEntitySystemReset, hwVoltageInfoTable=hwVoltageInfoTable, hwEntityOpticalTxLowThreshold=hwEntityOpticalTxLowThreshold, hwEntityExtTemperatureThresholdNotification=hwEntityExtTemperatureThresholdNotification, hwEntityUpTime=hwEntityUpTime, hwMonitorInputIndex=hwMonitorInputIndex, hwEntityVolHighAlmFatal=hwEntityVolHighAlmFatal, hwDisposeCardId=hwDisposeCardId, hwEntityAlarmLight=hwEntityAlarmLight, hwEntityPortType=hwEntityPortType, hwVirtualCableTestPairAStatus=hwVirtualCableTestPairAStatus, hwEntityOpticalRxHighThreshold=hwEntityOpticalRxHighThreshold, hwVirtualCableTestPairDStatus=hwVirtualCableTestPairDStatus, hwEntityExtTraps=hwEntityExtTraps, hwEntityVolLowAlmFatal=hwEntityVolLowAlmFatal, hwHardwareCapaChangeNotification=hwHardwareCapaChangeNotification, hwEntityFanReg=hwEntityFanReg, hwRUModuleInfoTable=hwRUModuleInfoTable, hwRUModuleInfoGroup=hwRUModuleInfoGroup, hwEntityUpdateLog=hwEntityUpdateLog, PYSNMP_MODULE_ID=hwEntityExtentMIB, hwDevicePowerInfoObjects=hwDevicePowerInfoObjects, hwPhysicalPortSpeed=hwPhysicalPortSpeed, hwPortBip8StatisticsEntry=hwPortBip8StatisticsEntry, hwEntityState=hwEntityState, hwEntityOpticalFiberType=hwEntityOpticalFiberType, hwEntityFlashSize=hwEntityFlashSize, hwVirtualCableTestEntry=hwVirtualCableTestEntry)
mibBuilder.exportSymbols("HUAWEI-ENTITY-EXTENT-MIB", hwMonitorOutputGroup=hwMonitorOutputGroup)
