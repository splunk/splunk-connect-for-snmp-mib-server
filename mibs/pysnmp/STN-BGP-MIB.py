#
# PySNMP MIB module STN-BGP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STN-BGP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:03:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
bgp4PathAttrEntry, = mibBuilder.importSymbols("BGP4-MIB", "bgp4PathAttrEntry")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, MibIdentifier, TimeTicks, NotificationType, Unsigned32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, iso, ModuleIdentity, Bits, ObjectIdentity, Counter64, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibIdentifier", "TimeTicks", "NotificationType", "Unsigned32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "iso", "ModuleIdentity", "Bits", "ObjectIdentity", "Counter64", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
stnNotification, = mibBuilder.importSymbols("SPRING-TIDE-NETWORKS-SMI", "stnNotification")
stnIpRouting, = mibBuilder.importSymbols("STN-IPROUTING-MIB", "stnIpRouting")
stnBgp = ModuleIdentity((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5))
if mibBuilder.loadTexts: stnBgp.setLastUpdated('0004060000Z')
if mibBuilder.loadTexts: stnBgp.setOrganization('Spring Tide Networks')
stnBgpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1))
stnBgpRouteAttrTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 1), )
if mibBuilder.loadTexts: stnBgpRouteAttrTable.setStatus('current')
stnBgpRouteAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 1, 1), ).setIndexNames((0, "STN-BGP-MIB", "stnBgpRouteAttrId"))
if mibBuilder.loadTexts: stnBgpRouteAttrEntry.setStatus('current')
stnBgpRouteAttrId = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgpRouteAttrId.setStatus('current')
stnBgpRouteAttrASPathSegment = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgpRouteAttrASPathSegment.setStatus('current')
stnBgpRouteAttrRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgpRouteAttrRefCount.setStatus('current')
stnBgpRouteAttrLocPref = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgpRouteAttrLocPref.setStatus('current')
stnBgpRouteAttrMultiExitDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgpRouteAttrMultiExitDisc.setStatus('current')
stnBgpRouteAttrOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("incomplete", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgpRouteAttrOrigin.setStatus('current')
stnBgpRouteAttrNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 1, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgpRouteAttrNextHop.setStatus('current')
stnBgpRouteAttrAtomicAggregate = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lessSpecificRouteNotSelected", 1), ("lessSpecificRouteSelected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgpRouteAttrAtomicAggregate.setStatus('current')
stnBgpRouteAttrAggregatorAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgpRouteAttrAggregatorAS.setStatus('current')
stnBgpRouteAttrAggregatorAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 1, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgpRouteAttrAggregatorAddr.setStatus('current')
stnBgpPrefixCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgpPrefixCount.setStatus('current')
stnBgpPathCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgpPathCount.setStatus('current')
stnBgpSelectedPathCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgpSelectedPathCount.setStatus('current')
stnBgpPathAttributeCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgpPathAttributeCount.setStatus('current')
stnBgpPathAttributeTlvLength = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgpPathAttributeTlvLength.setStatus('current')
stnBgp4PathAttrTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 7), )
if mibBuilder.loadTexts: stnBgp4PathAttrTable.setStatus('current')
stnBgp4PathAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 7, 1), )
bgp4PathAttrEntry.registerAugmentions(("STN-BGP-MIB", "stnBgp4PathAttrEntry"))
stnBgp4PathAttrEntry.setIndexNames(*bgp4PathAttrEntry.getIndexNames())
if mibBuilder.loadTexts: stnBgp4PathAttrEntry.setStatus('current')
stnBgp4PathAttrCommunities = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 7, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgp4PathAttrCommunities.setStatus('current')
stnBgp4PathAttrWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgp4PathAttrWeight.setStatus('current')
stnBgp4PathAttrImported = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 12, 5, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnBgp4PathAttrImported.setStatus('current')
mibBuilder.exportSymbols("STN-BGP-MIB", stnBgp4PathAttrEntry=stnBgp4PathAttrEntry, stnBgpRouteAttrNextHop=stnBgpRouteAttrNextHop, stnBgpRouteAttrMultiExitDisc=stnBgpRouteAttrMultiExitDisc, stnBgpRouteAttrRefCount=stnBgpRouteAttrRefCount, PYSNMP_MODULE_ID=stnBgp, stnBgp4PathAttrCommunities=stnBgp4PathAttrCommunities, stnBgpSelectedPathCount=stnBgpSelectedPathCount, stnBgp4PathAttrImported=stnBgp4PathAttrImported, stnBgpRouteAttrLocPref=stnBgpRouteAttrLocPref, stnBgpRouteAttrAggregatorAddr=stnBgpRouteAttrAggregatorAddr, stnBgpRouteAttrASPathSegment=stnBgpRouteAttrASPathSegment, stnBgpPrefixCount=stnBgpPrefixCount, stnBgpObjects=stnBgpObjects, stnBgpPathAttributeTlvLength=stnBgpPathAttributeTlvLength, stnBgpRouteAttrId=stnBgpRouteAttrId, stnBgp4PathAttrWeight=stnBgp4PathAttrWeight, stnBgpRouteAttrEntry=stnBgpRouteAttrEntry, stnBgp4PathAttrTable=stnBgp4PathAttrTable, stnBgpPathAttributeCount=stnBgpPathAttributeCount, stnBgp=stnBgp, stnBgpRouteAttrAggregatorAS=stnBgpRouteAttrAggregatorAS, stnBgpPathCount=stnBgpPathCount, stnBgpRouteAttrAtomicAggregate=stnBgpRouteAttrAtomicAggregate, stnBgpRouteAttrOrigin=stnBgpRouteAttrOrigin, stnBgpRouteAttrTable=stnBgpRouteAttrTable)
