#
# PySNMP MIB module Nortel-Magellan-Passport-VncsCallServerMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-VncsCallServerMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
StorageType, Integer32, RowPointer, Counter32, RowStatus, DisplayString, Unsigned32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "StorageType", "Integer32", "RowPointer", "Counter32", "RowStatus", "DisplayString", "Unsigned32")
Link, FixedPoint1, WildcardedDigitString, AsciiString, DigitString = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "Link", "FixedPoint1", "WildcardedDigitString", "AsciiString", "DigitString")
passportMIBs, components = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs", "components")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Integer32, Counter64, Counter32, Gauge32, Unsigned32, NotificationType, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, IpAddress, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Integer32", "Counter64", "Counter32", "Gauge32", "Unsigned32", "NotificationType", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "IpAddress", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
vncsCallServerMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 66))
vncs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44))
vncsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 1), )
if mibBuilder.loadTexts: vncsRowStatusTable.setStatus('mandatory')
vncsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"))
if mibBuilder.loadTexts: vncsRowStatusEntry.setStatus('mandatory')
vncsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsRowStatus.setStatus('mandatory')
vncsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vncsComponentName.setStatus('mandatory')
vncsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vncsStorageType.setStatus('mandatory')
vncsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: vncsIndex.setStatus('mandatory')
vncsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 10), )
if mibBuilder.loadTexts: vncsProvTable.setStatus('mandatory')
vncsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"))
if mibBuilder.loadTexts: vncsProvEntry.setStatus('mandatory')
vncsCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsCommentText.setStatus('mandatory')
vncsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 11), )
if mibBuilder.loadTexts: vncsStatsTable.setStatus('mandatory')
vncsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"))
if mibBuilder.loadTexts: vncsStatsEntry.setStatus('mandatory')
vncsTotalTranslations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vncsTotalTranslations.setStatus('mandatory')
vncsVRoutesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 305), )
if mibBuilder.loadTexts: vncsVRoutesTable.setStatus('mandatory')
vncsVRoutesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 305, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVRoutesValue"))
if mibBuilder.loadTexts: vncsVRoutesEntry.setStatus('mandatory')
vncsVRoutesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 305, 1, 1), Link()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vncsVRoutesValue.setStatus('mandatory')
vncsDP = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2))
vncsDPRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 1), )
if mibBuilder.loadTexts: vncsDPRowStatusTable.setStatus('mandatory')
vncsDPRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsDPIndex"))
if mibBuilder.loadTexts: vncsDPRowStatusEntry.setStatus('mandatory')
vncsDPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsDPRowStatus.setStatus('mandatory')
vncsDPComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vncsDPComponentName.setStatus('mandatory')
vncsDPStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vncsDPStorageType.setStatus('mandatory')
vncsDPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: vncsDPIndex.setStatus('mandatory')
vncsDPStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 10), )
if mibBuilder.loadTexts: vncsDPStatsTable.setStatus('mandatory')
vncsDPStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsDPIndex"))
if mibBuilder.loadTexts: vncsDPStatsEntry.setStatus('mandatory')
vncsDPCompleteTranslations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vncsDPCompleteTranslations.setStatus('mandatory')
vncsDPIncompleteTranslations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vncsDPIncompleteTranslations.setStatus('mandatory')
vncsDPFailedTranslations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vncsDPFailedTranslations.setStatus('mandatory')
vncsDPDn = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 2))
vncsDPDnRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 2, 1), )
if mibBuilder.loadTexts: vncsDPDnRowStatusTable.setStatus('mandatory')
vncsDPDnRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsDPIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsDPDnIndex"))
if mibBuilder.loadTexts: vncsDPDnRowStatusEntry.setStatus('mandatory')
vncsDPDnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsDPDnRowStatus.setStatus('mandatory')
vncsDPDnComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vncsDPDnComponentName.setStatus('mandatory')
vncsDPDnStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vncsDPDnStorageType.setStatus('mandatory')
vncsDPDnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 2, 1, 1, 10), WildcardedDigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: vncsDPDnIndex.setStatus('mandatory')
vncsDPDnProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 2, 10), )
if mibBuilder.loadTexts: vncsDPDnProvTable.setStatus('mandatory')
vncsDPDnProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsDPIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsDPDnIndex"))
if mibBuilder.loadTexts: vncsDPDnProvEntry.setStatus('mandatory')
vncsDPDnDestinationNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsDPDnDestinationNodeId.setStatus('mandatory')
vncsDPDnDestinationComponentId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 2, 10, 1, 2), RowPointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsDPDnDestinationComponentId.setStatus('mandatory')
vncsDPDnVoiceProfileNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsDPDnVoiceProfileNumber.setStatus('mandatory')
vncsDPDnNumberingPlanIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('e164')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsDPDnNumberingPlanIndicator.setStatus('mandatory')
vncsDPDnDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 2, 2, 10, 1, 5), DigitString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsDPDnDataNetworkAddress.setStatus('mandatory')
vncsVp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3))
vncsVpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 1), )
if mibBuilder.loadTexts: vncsVpRowStatusTable.setStatus('mandatory')
vncsVpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpIndex"))
if mibBuilder.loadTexts: vncsVpRowStatusEntry.setStatus('mandatory')
vncsVpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpRowStatus.setStatus('mandatory')
vncsVpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vncsVpComponentName.setStatus('mandatory')
vncsVpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vncsVpStorageType.setStatus('mandatory')
vncsVpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: vncsVpIndex.setStatus('mandatory')
vncsVpLCOpsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 2), )
if mibBuilder.loadTexts: vncsVpLCOpsTable.setStatus('mandatory')
vncsVpLCOpsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 2, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpIndex"))
if mibBuilder.loadTexts: vncsVpLCOpsEntry.setStatus('mandatory')
vncsVpSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpSetupPriority.setStatus('mandatory')
vncsVpHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpHoldingPriority.setStatus('mandatory')
vncsVpBumpPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bumpWhenNecessary", 0), ("bumpToObtainBestRoute", 1))).clone('bumpWhenNecessary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpBumpPreference.setStatus('mandatory')
vncsVpRequiredTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("voice", 0), ("data", 1), ("video", 2), ("trafficType1", 3), ("trafficType2", 4), ("trafficType3", 5), ("trafficType4", 6), ("trafficType5", 7))).clone('voice')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpRequiredTrafficType.setStatus('mandatory')
vncsVpPermittedTrunkTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="f8")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpPermittedTrunkTypes.setStatus('mandatory')
vncsVpRequiredSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpRequiredSecurity.setStatus('mandatory')
vncsVpRequiredCustomerParm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpRequiredCustomerParm.setStatus('mandatory')
vncsVpPathAttributeToMinimize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("cost", 0), ("delay", 1))).clone('cost')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpPathAttributeToMinimize.setStatus('mandatory')
vncsVpMaximumAcceptableCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1280)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpMaximumAcceptableCost.setStatus('mandatory')
vncsVpMaximumAcceptableDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000)).clone(100000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpMaximumAcceptableDelay.setStatus('mandatory')
vncsVpEmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpEmissionPriority.setStatus('mandatory')
vncsVpDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpDiscardPriority.setStatus('mandatory')
vncsVpPathFailureAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disconnectConnection", 0), ("reRoutePath", 1))).clone('reRoutePath')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpPathFailureAction.setStatus('mandatory')
vncsVpOptimization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpOptimization.setStatus('mandatory')
vncsVpFrOpsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 3), )
if mibBuilder.loadTexts: vncsVpFrOpsTable.setStatus('mandatory')
vncsVpFrOpsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 3, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpIndex"))
if mibBuilder.loadTexts: vncsVpFrOpsEntry.setStatus('mandatory')
vncsVpMaxVoiceBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("n64", 0), ("n32", 1), ("n24", 2), ("n16", 3))).clone('n64')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpMaxVoiceBitRate.setStatus('obsolete')
vncsVpMinVoiceBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("n64", 0), ("n32", 1), ("n24", 2), ("n16", 3))).clone('n16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpMinVoiceBitRate.setStatus('obsolete')
vncsVpMaxModemBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("n64", 0), ("n32", 1), ("n24", 2), ("n16", 3))).clone('n64')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpMaxModemBitRate.setStatus('obsolete')
vncsVpMinModemBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("n64", 0), ("n32", 1), ("n24", 2), ("n16", 3))).clone('n32')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpMinModemBitRate.setStatus('obsolete')
vncsVpAudioGain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("minus6", 0), ("minus4", 1), ("minus2", 2), ("n0", 3), ("n2", 4), ("n4", 5), ("n6", 6))).clone('n0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpAudioGain.setStatus('obsolete')
vncsVpSilenceSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("congested", 2), ("slow", 3), ("slowAndCongested", 4))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpSilenceSuppression.setStatus('mandatory')
vncsVpEchoCancellation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpEchoCancellation.setStatus('obsolete')
vncsVpSilenceSuppressionFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 3, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpSilenceSuppressionFactor.setStatus('mandatory')
vncsVpDataCallsAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpDataCallsAccepted.setStatus('mandatory')
vncsVpFaxIdleSuppressionG711G726 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpFaxIdleSuppressionG711G726.setStatus('mandatory')
vncsVpInsertedOutputDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 15, 22, 30, 35, 40, 45, 50, 75, 100, 125, 150))).clone(namedValues=NamedValues(("n5", 5), ("n15", 15), ("n22", 22), ("n30", 30), ("n35", 35), ("n40", 40), ("n45", 45), ("n50", 50), ("n75", 75), ("n100", 100), ("n125", 125), ("n150", 150))).clone('n22')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpInsertedOutputDelay.setStatus('mandatory')
vncsVpVoiceTrafficOptimization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bandwidth", 0), ("delay", 1))).clone('bandwidth')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpVoiceTrafficOptimization.setStatus('obsolete')
vncsVpDtmfRegeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpDtmfRegeneration.setStatus('mandatory')
vncsVpV17EncodedAsG711G726 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpV17EncodedAsG711G726.setStatus('mandatory')
vncsVpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 4), )
if mibBuilder.loadTexts: vncsVpStatsTable.setStatus('mandatory')
vncsVpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 4, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpIndex"))
if mibBuilder.loadTexts: vncsVpStatsEntry.setStatus('mandatory')
vncsVpUsageCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vncsVpUsageCount.setStatus('mandatory')
vncsVpVoiceRatesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 322), )
if mibBuilder.loadTexts: vncsVpVoiceRatesTable.setStatus('obsolete')
vncsVpVoiceRatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 322, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpVoiceRatesEncodingIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpVoiceRatesRateIndex"))
if mibBuilder.loadTexts: vncsVpVoiceRatesEntry.setStatus('obsolete')
vncsVpVoiceRatesEncodingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 322, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("g711Only", 0), ("g711G726", 1), ("g728Only", 2), ("g729Only", 3))))
if mibBuilder.loadTexts: vncsVpVoiceRatesEncodingIndex.setStatus('obsolete')
vncsVpVoiceRatesRateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 322, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("min", 0), ("max", 1))))
if mibBuilder.loadTexts: vncsVpVoiceRatesRateIndex.setStatus('obsolete')
vncsVpVoiceRatesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 322, 1, 3), FixedPoint1().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(80, 80), ValueRangeConstraint(160, 160), ValueRangeConstraint(240, 240), ValueRangeConstraint(320, 320), ValueRangeConstraint(640, 640), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpVoiceRatesValue.setStatus('obsolete')
vncsVpVoiceEncodingChoiceTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 323), )
if mibBuilder.loadTexts: vncsVpVoiceEncodingChoiceTable.setStatus('obsolete')
vncsVpVoiceEncodingChoiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 323, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpVoiceEncodingChoiceIndex"))
if mibBuilder.loadTexts: vncsVpVoiceEncodingChoiceEntry.setStatus('obsolete')
vncsVpVoiceEncodingChoiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 323, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("first", 0), ("second", 1), ("third", 2))))
if mibBuilder.loadTexts: vncsVpVoiceEncodingChoiceIndex.setStatus('obsolete')
vncsVpVoiceEncodingChoiceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 323, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("g711Only", 0), ("g711G726", 1), ("g728Only", 2), ("g729Only", 3), ("none", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpVoiceEncodingChoiceValue.setStatus('obsolete')
vncsVpModemFaxRatesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 324), )
if mibBuilder.loadTexts: vncsVpModemFaxRatesTable.setStatus('obsolete')
vncsVpModemFaxRatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 324, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpModemFaxRatesEncodingIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpModemFaxRatesRateIndex"))
if mibBuilder.loadTexts: vncsVpModemFaxRatesEntry.setStatus('obsolete')
vncsVpModemFaxRatesEncodingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 324, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("g711Only", 0), ("g711G726", 1), ("relay", 2))))
if mibBuilder.loadTexts: vncsVpModemFaxRatesEncodingIndex.setStatus('obsolete')
vncsVpModemFaxRatesRateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 324, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("min", 0), ("max", 1))))
if mibBuilder.loadTexts: vncsVpModemFaxRatesRateIndex.setStatus('obsolete')
vncsVpModemFaxRatesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 324, 1, 3), FixedPoint1().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(3, 3), ValueRangeConstraint(12, 12), ValueRangeConstraint(24, 24), ValueRangeConstraint(48, 48), ValueRangeConstraint(72, 72), ValueRangeConstraint(96, 96), ValueRangeConstraint(120, 120), ValueRangeConstraint(144, 144), ValueRangeConstraint(160, 160), ValueRangeConstraint(240, 240), ValueRangeConstraint(320, 320), ValueRangeConstraint(640, 640), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpModemFaxRatesValue.setStatus('obsolete')
vncsVpModemFaxEncodingChoiceTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 325), )
if mibBuilder.loadTexts: vncsVpModemFaxEncodingChoiceTable.setStatus('obsolete')
vncsVpModemFaxEncodingChoiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 325, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpModemFaxEncodingChoiceIndex"))
if mibBuilder.loadTexts: vncsVpModemFaxEncodingChoiceEntry.setStatus('obsolete')
vncsVpModemFaxEncodingChoiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 325, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("first", 0), ("second", 1), ("third", 2))))
if mibBuilder.loadTexts: vncsVpModemFaxEncodingChoiceIndex.setStatus('obsolete')
vncsVpModemFaxEncodingChoiceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 325, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("g711Only", 0), ("g711G726", 1), ("relay", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpModemFaxEncodingChoiceValue.setStatus('obsolete')
vncsVpNewVoiceRatesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 381), )
if mibBuilder.loadTexts: vncsVpNewVoiceRatesTable.setStatus('mandatory')
vncsVpNewVoiceRatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 381, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpNewVoiceRatesEncodingIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpNewVoiceRatesRateIndex"))
if mibBuilder.loadTexts: vncsVpNewVoiceRatesEntry.setStatus('mandatory')
vncsVpNewVoiceRatesEncodingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 381, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("g711Only", 0), ("g711G726", 1), ("g728Only", 2), ("g729Only", 3))))
if mibBuilder.loadTexts: vncsVpNewVoiceRatesEncodingIndex.setStatus('mandatory')
vncsVpNewVoiceRatesRateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 381, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("min", 0), ("max", 1))))
if mibBuilder.loadTexts: vncsVpNewVoiceRatesRateIndex.setStatus('mandatory')
vncsVpNewVoiceRatesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 381, 1, 3), FixedPoint1().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(80, 80), ValueRangeConstraint(160, 160), ValueRangeConstraint(240, 240), ValueRangeConstraint(320, 320), ValueRangeConstraint(640, 640), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpNewVoiceRatesValue.setStatus('mandatory')
vncsVpNewVoiceEncodingChoiceTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 382), )
if mibBuilder.loadTexts: vncsVpNewVoiceEncodingChoiceTable.setStatus('mandatory')
vncsVpNewVoiceEncodingChoiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 382, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpNewVoiceEncodingChoiceIndex"))
if mibBuilder.loadTexts: vncsVpNewVoiceEncodingChoiceEntry.setStatus('mandatory')
vncsVpNewVoiceEncodingChoiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 382, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("first", 0), ("second", 1), ("third", 2))))
if mibBuilder.loadTexts: vncsVpNewVoiceEncodingChoiceIndex.setStatus('mandatory')
vncsVpNewVoiceEncodingChoiceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 382, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("g711Only", 0), ("g711G726", 1), ("g728Only", 2), ("g729Only", 3), ("none", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpNewVoiceEncodingChoiceValue.setStatus('mandatory')
vncsVpNewModemFaxRatesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 383), )
if mibBuilder.loadTexts: vncsVpNewModemFaxRatesTable.setStatus('mandatory')
vncsVpNewModemFaxRatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 383, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpNewModemFaxRatesEncodingIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpNewModemFaxRatesRateIndex"))
if mibBuilder.loadTexts: vncsVpNewModemFaxRatesEntry.setStatus('mandatory')
vncsVpNewModemFaxRatesEncodingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 383, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("g711Only", 0), ("g711G726", 1), ("relay", 2))))
if mibBuilder.loadTexts: vncsVpNewModemFaxRatesEncodingIndex.setStatus('mandatory')
vncsVpNewModemFaxRatesRateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 383, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("min", 0), ("max", 1))))
if mibBuilder.loadTexts: vncsVpNewModemFaxRatesRateIndex.setStatus('mandatory')
vncsVpNewModemFaxRatesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 383, 1, 3), FixedPoint1().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 3), ValueRangeConstraint(12, 12), ValueRangeConstraint(24, 24), ValueRangeConstraint(48, 48), ValueRangeConstraint(72, 72), ValueRangeConstraint(96, 96), ValueRangeConstraint(120, 120), ValueRangeConstraint(144, 144), ValueRangeConstraint(160, 160), ValueRangeConstraint(240, 240), ValueRangeConstraint(320, 320), ValueRangeConstraint(640, 640), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpNewModemFaxRatesValue.setStatus('mandatory')
vncsVpNewModemFaxEncodingChoiceTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 384), )
if mibBuilder.loadTexts: vncsVpNewModemFaxEncodingChoiceTable.setStatus('mandatory')
vncsVpNewModemFaxEncodingChoiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 384, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpIndex"), (0, "Nortel-Magellan-Passport-VncsCallServerMIB", "vncsVpNewModemFaxEncodingChoiceIndex"))
if mibBuilder.loadTexts: vncsVpNewModemFaxEncodingChoiceEntry.setStatus('mandatory')
vncsVpNewModemFaxEncodingChoiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 384, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("first", 0), ("second", 1), ("third", 2))))
if mibBuilder.loadTexts: vncsVpNewModemFaxEncodingChoiceIndex.setStatus('mandatory')
vncsVpNewModemFaxEncodingChoiceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 44, 3, 384, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("g711Only", 0), ("g711G726", 1), ("relay", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vncsVpNewModemFaxEncodingChoiceValue.setStatus('mandatory')
vncsCallServerGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 66, 1))
vncsCallServerGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 66, 1, 5))
vncsCallServerGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 66, 1, 5, 2))
vncsCallServerGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 66, 1, 5, 2, 2))
vncsCallServerCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 66, 3))
vncsCallServerCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 66, 3, 5))
vncsCallServerCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 66, 3, 5, 2))
vncsCallServerCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 66, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-VncsCallServerMIB", vncsDPRowStatus=vncsDPRowStatus, vncsVpUsageCount=vncsVpUsageCount, vncsVpFaxIdleSuppressionG711G726=vncsVpFaxIdleSuppressionG711G726, vncsDP=vncsDP, vncsStatsEntry=vncsStatsEntry, vncsVpLCOpsEntry=vncsVpLCOpsEntry, vncsVpNewVoiceEncodingChoiceValue=vncsVpNewVoiceEncodingChoiceValue, vncsVpModemFaxEncodingChoiceTable=vncsVpModemFaxEncodingChoiceTable, vncsVpVoiceRatesEntry=vncsVpVoiceRatesEntry, vncsCallServerGroupBE=vncsCallServerGroupBE, vncsCallServerCapabilitiesBE01=vncsCallServerCapabilitiesBE01, vncsProvEntry=vncsProvEntry, vncsDPDnProvEntry=vncsDPDnProvEntry, vncsVpModemFaxRatesTable=vncsVpModemFaxRatesTable, vncsVpModemFaxEncodingChoiceValue=vncsVpModemFaxEncodingChoiceValue, vncsCallServerCapabilitiesBE=vncsCallServerCapabilitiesBE, vncsVpFrOpsEntry=vncsVpFrOpsEntry, vncsVpNewModemFaxEncodingChoiceValue=vncsVpNewModemFaxEncodingChoiceValue, vncsTotalTranslations=vncsTotalTranslations, vncsVpOptimization=vncsVpOptimization, vncsVpRequiredSecurity=vncsVpRequiredSecurity, vncsVpRowStatusTable=vncsVpRowStatusTable, vncsDPStatsEntry=vncsDPStatsEntry, vncsVpStatsEntry=vncsVpStatsEntry, vncsVpMinModemBitRate=vncsVpMinModemBitRate, vncsDPStatsTable=vncsDPStatsTable, vncsDPDnRowStatusEntry=vncsDPDnRowStatusEntry, vncsVpPathFailureAction=vncsVpPathFailureAction, vncsDPDnRowStatusTable=vncsDPDnRowStatusTable, vncsVpMaximumAcceptableCost=vncsVpMaximumAcceptableCost, vncsVpHoldingPriority=vncsVpHoldingPriority, vncsDPDnDataNetworkAddress=vncsDPDnDataNetworkAddress, vncsVpNewVoiceRatesEncodingIndex=vncsVpNewVoiceRatesEncodingIndex, vncsRowStatus=vncsRowStatus, vncsVpNewVoiceRatesEntry=vncsVpNewVoiceRatesEntry, vncsVpNewModemFaxRatesTable=vncsVpNewModemFaxRatesTable, vncsVpSetupPriority=vncsVpSetupPriority, vncsDPIncompleteTranslations=vncsDPIncompleteTranslations, vncsVpRowStatusEntry=vncsVpRowStatusEntry, vncsVRoutesValue=vncsVRoutesValue, vncsVpNewVoiceEncodingChoiceEntry=vncsVpNewVoiceEncodingChoiceEntry, vncsVRoutesTable=vncsVRoutesTable, vncsVpDtmfRegeneration=vncsVpDtmfRegeneration, vncsIndex=vncsIndex, vncsVpNewVoiceRatesTable=vncsVpNewVoiceRatesTable, vncsVpMaxModemBitRate=vncsVpMaxModemBitRate, vncsDPCompleteTranslations=vncsDPCompleteTranslations, vncsVpModemFaxEncodingChoiceIndex=vncsVpModemFaxEncodingChoiceIndex, vncsRowStatusTable=vncsRowStatusTable, vncsCallServerGroupBE01A=vncsCallServerGroupBE01A, vncsCallServerMIB=vncsCallServerMIB, vncsVpLCOpsTable=vncsVpLCOpsTable, vncsVRoutesEntry=vncsVRoutesEntry, vncsVpPathAttributeToMinimize=vncsVpPathAttributeToMinimize, vncsVpRequiredCustomerParm=vncsVpRequiredCustomerParm, vncsVpNewModemFaxEncodingChoiceEntry=vncsVpNewModemFaxEncodingChoiceEntry, vncsVpSilenceSuppression=vncsVpSilenceSuppression, vncsVpVoiceRatesValue=vncsVpVoiceRatesValue, vncsVpV17EncodedAsG711G726=vncsVpV17EncodedAsG711G726, vncsVpNewModemFaxRatesValue=vncsVpNewModemFaxRatesValue, vncsDPDnVoiceProfileNumber=vncsDPDnVoiceProfileNumber, vncsDPDnRowStatus=vncsDPDnRowStatus, vncsDPDnIndex=vncsDPDnIndex, vncsDPDnNumberingPlanIndicator=vncsDPDnNumberingPlanIndicator, vncsVpVoiceEncodingChoiceEntry=vncsVpVoiceEncodingChoiceEntry, vncsCallServerCapabilities=vncsCallServerCapabilities, vncsVpVoiceEncodingChoiceValue=vncsVpVoiceEncodingChoiceValue, vncsVpModemFaxRatesValue=vncsVpModemFaxRatesValue, vncsVpRowStatus=vncsVpRowStatus, vncsVpSilenceSuppressionFactor=vncsVpSilenceSuppressionFactor, vncsVpRequiredTrafficType=vncsVpRequiredTrafficType, vncsVpInsertedOutputDelay=vncsVpInsertedOutputDelay, vncsVpStatsTable=vncsVpStatsTable, vncsDPDnComponentName=vncsDPDnComponentName, vncsDPDnDestinationNodeId=vncsDPDnDestinationNodeId, vncsVpEmissionPriority=vncsVpEmissionPriority, vncsDPFailedTranslations=vncsDPFailedTranslations, vncsVpNewModemFaxRatesEncodingIndex=vncsVpNewModemFaxRatesEncodingIndex, vncsVpVoiceEncodingChoiceIndex=vncsVpVoiceEncodingChoiceIndex, vncsDPDnDestinationComponentId=vncsDPDnDestinationComponentId, vncsVpDataCallsAccepted=vncsVpDataCallsAccepted, vncsVpStorageType=vncsVpStorageType, vncsProvTable=vncsProvTable, vncsVpModemFaxRatesRateIndex=vncsVpModemFaxRatesRateIndex, vncsVpFrOpsTable=vncsVpFrOpsTable, vncsDPComponentName=vncsDPComponentName, vncsVpDiscardPriority=vncsVpDiscardPriority, vncsVpIndex=vncsVpIndex, vncsVpVoiceRatesTable=vncsVpVoiceRatesTable, vncsVpNewModemFaxEncodingChoiceTable=vncsVpNewModemFaxEncodingChoiceTable, vncsVpVoiceEncodingChoiceTable=vncsVpVoiceEncodingChoiceTable, vncsStatsTable=vncsStatsTable, vncsCallServerGroup=vncsCallServerGroup, vncsVpModemFaxEncodingChoiceEntry=vncsVpModemFaxEncodingChoiceEntry, vncs=vncs, vncsDPStorageType=vncsDPStorageType, vncsVpPermittedTrunkTypes=vncsVpPermittedTrunkTypes, vncsVpMaxVoiceBitRate=vncsVpMaxVoiceBitRate, vncsVpAudioGain=vncsVpAudioGain, vncsVpNewModemFaxEncodingChoiceIndex=vncsVpNewModemFaxEncodingChoiceIndex, vncsDPDnProvTable=vncsDPDnProvTable, vncsVpNewModemFaxRatesEntry=vncsVpNewModemFaxRatesEntry, vncsCallServerCapabilitiesBE01A=vncsCallServerCapabilitiesBE01A, vncsDPRowStatusEntry=vncsDPRowStatusEntry, vncsVpBumpPreference=vncsVpBumpPreference, vncsDPDnStorageType=vncsDPDnStorageType, vncsVpVoiceRatesRateIndex=vncsVpVoiceRatesRateIndex, vncsVpNewVoiceRatesRateIndex=vncsVpNewVoiceRatesRateIndex, vncsStorageType=vncsStorageType, vncsVpMaximumAcceptableDelay=vncsVpMaximumAcceptableDelay, vncsVpComponentName=vncsVpComponentName, vncsVpNewVoiceRatesValue=vncsVpNewVoiceRatesValue, vncsDPDn=vncsDPDn, vncsRowStatusEntry=vncsRowStatusEntry, vncsCallServerGroupBE01=vncsCallServerGroupBE01, vncsDPIndex=vncsDPIndex, vncsVpVoiceTrafficOptimization=vncsVpVoiceTrafficOptimization, vncsVp=vncsVp, vncsVpNewVoiceEncodingChoiceTable=vncsVpNewVoiceEncodingChoiceTable, vncsVpNewVoiceEncodingChoiceIndex=vncsVpNewVoiceEncodingChoiceIndex, vncsVpNewModemFaxRatesRateIndex=vncsVpNewModemFaxRatesRateIndex, vncsCommentText=vncsCommentText, vncsVpMinVoiceBitRate=vncsVpMinVoiceBitRate, vncsVpModemFaxRatesEncodingIndex=vncsVpModemFaxRatesEncodingIndex, vncsVpModemFaxRatesEntry=vncsVpModemFaxRatesEntry, vncsDPRowStatusTable=vncsDPRowStatusTable, vncsVpEchoCancellation=vncsVpEchoCancellation, vncsVpVoiceRatesEncodingIndex=vncsVpVoiceRatesEncodingIndex, vncsComponentName=vncsComponentName)
