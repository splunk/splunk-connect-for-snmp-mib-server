#
# PySNMP MIB module A3COM-HUAWEI-IPX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-IPX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:50:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cCommon")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, TimeTicks, Integer32, Counter64, Unsigned32, Bits, ObjectIdentity, MibIdentifier, ModuleIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, NotificationType, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "TimeTicks", "Integer32", "Counter64", "Unsigned32", "Bits", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "NotificationType", "IpAddress")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
h3cIpx = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34))
if mibBuilder.loadTexts: h3cIpx.setLastUpdated('200412241036Z')
if mibBuilder.loadTexts: h3cIpx.setOrganization('Huawei 3Com Technologies Co.,Ltd.')
class EnabledStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

h3cIpxConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 1))
h3cIpxRip = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2))
h3cIpxSap = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3))
h3cIpxStat = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4))
h3cIpxStatus = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 1, 1), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIpxStatus.setStatus('current')
h3cIpxIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 1, 2), )
if mibBuilder.loadTexts: h3cIpxIfConfigTable.setStatus('current')
h3cIpxIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 1, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-IPX-MIB", "h3cIpxIfIndex"))
if mibBuilder.loadTexts: h3cIpxIfConfigEntry.setStatus('current')
h3cIpxIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: h3cIpxIfIndex.setStatus('current')
h3cIpxIfNetId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxIfNetId.setStatus('current')
h3cIpxIfNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfNodeId.setStatus('current')
h3cIpxIfSplitHorizon = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 1, 2, 1, 4), EnabledStatus().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxIfSplitHorizon.setStatus('current')
h3cIPxIfTick = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIPxIfTick.setStatus('current')
h3cIpxIfUpdateChangeOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 1, 2, 1, 6), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxIfUpdateChangeOnly.setStatus('current')
h3cIpxIfRipMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(432, 1500)).clone(432)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxIfRipMtu.setStatus('current')
h3cIpxIfEncapsuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("dot2", 1), ("dot3", 2), ("ethernet-2", 3), ("snap", 4), ("unkown", 5))).clone('dot3')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxIfEncapsuleType.setStatus('current')
h3cIpxIfNetbiosPropagation = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 1, 2, 1, 9), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxIfNetbiosPropagation.setStatus('current')
h3cIpxIfSapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 1, 2, 1, 10), EnabledStatus().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxIfSapStatus.setStatus('current')
h3cIpxIfSapMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(480, 1500)).clone(480)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxIfSapMtu.setStatus('current')
h3cIpxIfGnsReply = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 1, 2, 1, 12), EnabledStatus().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxIfGnsReply.setStatus('current')
h3cIpxIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 1, 2, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxIfRowStatus.setStatus('current')
h3cIpxRouteMultiplier = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIpxRouteMultiplier.setStatus('current')
h3cIpxRouteUpdateTimer = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 60000)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIpxRouteUpdateTimer.setStatus('current')
h3cIpxRouteImpRouteStatic = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 3), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIpxRouteImpRouteStatic.setStatus('current')
h3cIpxRouteLoadBalancePaths = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIpxRouteLoadBalancePaths.setStatus('current')
h3cIpxRouteMaxResPaths = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIpxRouteMaxResPaths.setStatus('current')
h3cIpxRouteTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 6), )
if mibBuilder.loadTexts: h3cIpxRouteTable.setStatus('current')
h3cIpxRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-IPX-MIB", "h3cIpxRouteIndex"))
if mibBuilder.loadTexts: h3cIpxRouteEntry.setStatus('current')
h3cIpxRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cIpxRouteIndex.setStatus('current')
h3cIpxRouteDestNetId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxRouteDestNetId.setStatus('current')
h3cIpxRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxRouteNextHop.setStatus('current')
h3cIpxRoutePro = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("direct", 1), ("rip", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxRoutePro.setStatus('current')
h3cIpxRoutePre = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxRoutePre.setStatus('current')
h3cIpxRouteTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxRouteTicks.setStatus('current')
h3cIpxRouteHops = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxRouteHops.setStatus('current')
h3cIpxRouteTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxRouteTime.setStatus('current')
h3cIpxRouteOutInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 6, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxRouteOutInterface.setStatus('current')
h3cIpxStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 7), )
if mibBuilder.loadTexts: h3cIpxStaticRouteTable.setStatus('current')
h3cIpxStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 7, 1), ).setIndexNames((0, "A3COM-HUAWEI-IPX-MIB", "h3cIpxStaticRouteDestNetId"), (0, "A3COM-HUAWEI-IPX-MIB", "h3cIpxStaticRouteNextHop"))
if mibBuilder.loadTexts: h3cIpxStaticRouteEntry.setStatus('current')
h3cIpxStaticRouteDestNetId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 7, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4))
if mibBuilder.loadTexts: h3cIpxStaticRouteDestNetId.setStatus('current')
h3cIpxStaticRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10))
if mibBuilder.loadTexts: h3cIpxStaticRouteNextHop.setStatus('current')
h3cIpxStaticRoutePre = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxStaticRoutePre.setStatus('current')
h3cIpxStaticRouteOutIf = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 7, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxStaticRouteOutIf.setStatus('current')
h3cIpxStaticRouteTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxStaticRouteTicks.setStatus('current')
h3cIpxStaticRouteHops = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxStaticRouteHops.setStatus('current')
h3cIpxStaticRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxStaticRouteStatus.setStatus('current')
h3cIpxStaticRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 7, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxStaticRouteRowStatus.setStatus('current')
h3cIpxRouteStatTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 8), )
if mibBuilder.loadTexts: h3cIpxRouteStatTable.setStatus('current')
h3cIpxRouteStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 8, 1), ).setIndexNames((0, "A3COM-HUAWEI-IPX-MIB", "h3cIpxRouteStatPro"))
if mibBuilder.loadTexts: h3cIpxRouteStatEntry.setStatus('current')
h3cIpxRouteStatPro = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("direct", 1), ("static", 2), ("rip", 3), ("default", 4), ("total", 5))))
if mibBuilder.loadTexts: h3cIpxRouteStatPro.setStatus('current')
h3cIpxRouteStatRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 8, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxRouteStatRoutes.setStatus('current')
h3cIpxRouteStatActives = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 8, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxRouteStatActives.setStatus('current')
h3cIpxRouteStatAddeds = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxRouteStatAddeds.setStatus('current')
h3cIpxRouteStatDeleteds = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 8, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxRouteStatDeleteds.setStatus('current')
h3cIpxRouteStatFreeds = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 2, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxRouteStatFreeds.setStatus('current')
h3cIpxSapMultiplier = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIpxSapMultiplier.setStatus('current')
h3cIpxSapUpdateTimer = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 60000)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIpxSapUpdateTimer.setStatus('current')
h3cIpxSapGnsLoadBalance = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 3), EnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIpxSapGnsLoadBalance.setStatus('current')
h3cIpxSapMaxResServers = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048)).clone(2048)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIpxSapMaxResServers.setStatus('current')
h3cIpxServiceTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 5), )
if mibBuilder.loadTexts: h3cIpxServiceTable.setStatus('current')
h3cIpxServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-IPX-MIB", "h3cIpxServiceIndex"))
if mibBuilder.loadTexts: h3cIpxServiceEntry.setStatus('current')
h3cIpxServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cIpxServiceIndex.setStatus('current')
h3cIpxServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 47))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxServiceName.setStatus('current')
h3cIpxServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxServiceType.setStatus('current')
h3cIpxServiceNetId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxServiceNetId.setStatus('current')
h3cIpxServiceNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxServiceNodeId.setStatus('current')
h3cIpxServiceSocketNo = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 5, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxServiceSocketNo.setStatus('current')
h3cIpxServicePreference = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxServicePreference.setStatus('current')
h3cIpxServiceHops = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxServiceHops.setStatus('current')
h3cIpxServiceRecvIf = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 5, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxServiceRecvIf.setStatus('current')
h3cIpxStaticServiceTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 6), )
if mibBuilder.loadTexts: h3cIpxStaticServiceTable.setStatus('current')
h3cIpxStaticServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-IPX-MIB", "h3cIpxStaticServiceType"), (0, "A3COM-HUAWEI-IPX-MIB", "h3cIpxStaticServiceName"), (0, "A3COM-HUAWEI-IPX-MIB", "h3cIpxStaticServiceNetId"))
if mibBuilder.loadTexts: h3cIpxStaticServiceEntry.setStatus('current')
h3cIpxStaticServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 6, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2))
if mibBuilder.loadTexts: h3cIpxStaticServiceType.setStatus('current')
h3cIpxStaticServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 47)))
if mibBuilder.loadTexts: h3cIpxStaticServiceName.setStatus('current')
h3cIpxStaticServiceNetId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4))
if mibBuilder.loadTexts: h3cIpxStaticServiceNetId.setStatus('current')
h3cIpxStaticServiceNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 6, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxStaticServiceNodeId.setStatus('current')
h3cIpxStatciServiceSocketNo = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxStatciServiceSocketNo.setStatus('current')
h3cIpxStaticServicePreference = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxStaticServicePreference.setStatus('current')
h3cIpxStaticServiceHops = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxStaticServiceHops.setStatus('current')
h3cIpxStaticServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxStaticServiceStatus.setStatus('current')
h3cIpxStaticServiceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 3, 6, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpxStaticServiceRowStatus.setStatus('current')
h3cIpxStatGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1))
h3cIpxStatInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2))
h3cIpxStatTotalReceives = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatTotalReceives.setStatus('current')
h3cIpxStatPitchs = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatPitchs.setStatus('current')
h3cIpxStatLenErrors = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatLenErrors.setStatus('current')
h3cIpxStatFormatErrors = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatFormatErrors.setStatus('current')
h3cIpxStatBadHops = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatBadHops.setStatus('current')
h3cIpxStatHopsDiscards = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatHopsDiscards.setStatus('current')
h3cIpxStatOtherErrors = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatOtherErrors.setStatus('current')
h3cIpxStatLocalDests = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatLocalDests.setStatus('current')
h3cIpxStatCantDeals = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatCantDeals.setStatus('current')
h3cIpxStatForwards = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatForwards.setStatus('current')
h3cIpxStatGenerates = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatGenerates.setStatus('current')
h3cIpxStatNoRoutes = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatNoRoutes.setStatus('current')
h3cIpxStatOutDiscards = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatOutDiscards.setStatus('current')
h3cIpxStatRipSends = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatRipSends.setStatus('current')
h3cIpxStatRipReceives = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatRipReceives.setStatus('current')
h3cIpxStaRipRspSends = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStaRipRspSends.setStatus('current')
h3cIpxStaRipRspReceives = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStaRipRspReceives.setStatus('current')
h3cIpxStatRipReqReceives = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatRipReqReceives.setStatus('current')
h3cIpxStatRipReqDeals = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatRipReqDeals.setStatus('current')
h3cIpxStatRipReqSends = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatRipReqSends.setStatus('current')
h3cIpxStatRipPeriUpdates = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatRipPeriUpdates.setStatus('current')
h3cIpxStatSapGenReqReceives = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatSapGenReqReceives.setStatus('current')
h3cIpxStatSapSpecReqReceives = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatSapSpecReqReceives.setStatus('current')
h3cIpxStatSapGnsReqReceives = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatSapGnsReqReceives.setStatus('current')
h3cIpxStatSapGenRspSends = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatSapGenRspSends.setStatus('current')
h3cIpxStatSapSpecRspSends = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatSapSpecRspSends.setStatus('current')
h3cIpxStatSapGnsRspSends = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatSapGnsRspSends.setStatus('current')
h3cIpxStatSapPeriUpdates = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatSapPeriUpdates.setStatus('current')
h3cIpxStatSapInPktErrors = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxStatSapInPktErrors.setStatus('current')
h3cIpxIfStatTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1), )
if mibBuilder.loadTexts: h3cIpxIfStatTable.setStatus('current')
h3cIpxIfStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-IPX-MIB", "h3cIpxIfStatIndex"))
if mibBuilder.loadTexts: h3cIpxIfStatEntry.setStatus('current')
h3cIpxIfStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: h3cIpxIfStatIndex.setStatus('current')
h3cIpxIfStatNetId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatNetId.setStatus('current')
h3cIpxIfStatNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatNodeId.setStatus('current')
h3cIpxIfStatIpxReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatIpxReceives.setStatus('current')
h3cIpxIfStatIpxSends = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatIpxSends.setStatus('current')
h3cIpxIfStatIpxRecvBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatIpxRecvBytes.setStatus('current')
h3cIpxIfStatIpxSendBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatIpxSendBytes.setStatus('current')
h3cIpxIfStatRipReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatRipReceives.setStatus('current')
h3cIpxIfStatRipSends = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatRipSends.setStatus('current')
h3cIpxIfStatRipDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatRipDiscards.setStatus('current')
h3cIpxIfStatRipSpecReqReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatRipSpecReqReceives.setStatus('current')
h3cIpxIfStatRipSpecRspSends = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatRipSpecRspSends.setStatus('current')
h3cIpxIfStatRipGenReqReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatRipGenReqReceives.setStatus('current')
h3cIpxIfStatRipGenRspSends = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatRipGenRspSends.setStatus('current')
h3cIpxIfStatSapReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatSapReceives.setStatus('current')
h3cIpxIfStatSapSends = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatSapSends.setStatus('current')
h3cIpxIfStatSapDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatSapDiscards.setStatus('current')
h3cIpxIfStatSapGnsReqReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatSapGnsReqReceives.setStatus('current')
h3cIpxIfStatSapGnsRspSends = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 34, 4, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpxIfStatSapGnsRspSends.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-IPX-MIB", h3cIpxIfConfigTable=h3cIpxIfConfigTable, h3cIpxStatLenErrors=h3cIpxStatLenErrors, h3cIpxIfStatSapReceives=h3cIpxIfStatSapReceives, h3cIpxStaticServiceNetId=h3cIpxStaticServiceNetId, h3cIpxStatNoRoutes=h3cIpxStatNoRoutes, h3cIpxStatRipReqReceives=h3cIpxStatRipReqReceives, h3cIpxStatOtherErrors=h3cIpxStatOtherErrors, h3cIpxStatciServiceSocketNo=h3cIpxStatciServiceSocketNo, h3cIpxStaticRoutePre=h3cIpxStaticRoutePre, PYSNMP_MODULE_ID=h3cIpx, h3cIpxStaRipRspSends=h3cIpxStaRipRspSends, h3cIpxStaticRouteHops=h3cIpxStaticRouteHops, h3cIpxRouteUpdateTimer=h3cIpxRouteUpdateTimer, h3cIpxServiceTable=h3cIpxServiceTable, h3cIpxRouteStatFreeds=h3cIpxRouteStatFreeds, h3cIpxStaticServiceTable=h3cIpxStaticServiceTable, h3cIpxStaticServiceStatus=h3cIpxStaticServiceStatus, h3cIpxSapUpdateTimer=h3cIpxSapUpdateTimer, h3cIpxIfGnsReply=h3cIpxIfGnsReply, h3cIpxStaticServiceType=h3cIpxStaticServiceType, h3cIpxStaticServiceNodeId=h3cIpxStaticServiceNodeId, h3cIpxRouteStatEntry=h3cIpxRouteStatEntry, h3cIpxStatGenerates=h3cIpxStatGenerates, h3cIpxRouteLoadBalancePaths=h3cIpxRouteLoadBalancePaths, h3cIpxIfStatIpxSendBytes=h3cIpxIfStatIpxSendBytes, h3cIpxSapMultiplier=h3cIpxSapMultiplier, h3cIpxIfRipMtu=h3cIpxIfRipMtu, h3cIpxStaticServicePreference=h3cIpxStaticServicePreference, h3cIpxIfStatRipDiscards=h3cIpxIfStatRipDiscards, h3cIpxRouteStatRoutes=h3cIpxRouteStatRoutes, h3cIpxIfNetbiosPropagation=h3cIpxIfNetbiosPropagation, h3cIpxStaticRouteRowStatus=h3cIpxStaticRouteRowStatus, h3cIpxRouteStatActives=h3cIpxRouteStatActives, h3cIpxStatRipReqDeals=h3cIpxStatRipReqDeals, h3cIpxIfRowStatus=h3cIpxIfRowStatus, h3cIpxStaticRouteOutIf=h3cIpxStaticRouteOutIf, h3cIpxStatSapGnsRspSends=h3cIpxStatSapGnsRspSends, h3cIpxStatHopsDiscards=h3cIpxStatHopsDiscards, h3cIpxStaRipRspReceives=h3cIpxStaRipRspReceives, h3cIpxServiceName=h3cIpxServiceName, h3cIpxRouteDestNetId=h3cIpxRouteDestNetId, h3cIpxStatRipReceives=h3cIpxStatRipReceives, h3cIpxStatSapSpecReqReceives=h3cIpxStatSapSpecReqReceives, h3cIpxRoutePro=h3cIpxRoutePro, h3cIpxConfig=h3cIpxConfig, h3cIpxRouteImpRouteStatic=h3cIpxRouteImpRouteStatic, h3cIpxIfStatIpxReceives=h3cIpxIfStatIpxReceives, h3cIpxRouteOutInterface=h3cIpxRouteOutInterface, h3cIpxIfStatRipGenRspSends=h3cIpxIfStatRipGenRspSends, h3cIpxStaticServiceRowStatus=h3cIpxStaticServiceRowStatus, h3cIpxIfSapMtu=h3cIpxIfSapMtu, h3cIpxRouteStatDeleteds=h3cIpxRouteStatDeleteds, h3cIpxStatTotalReceives=h3cIpxStatTotalReceives, h3cIPxIfTick=h3cIPxIfTick, h3cIpxIfIndex=h3cIpxIfIndex, h3cIpxIfSapStatus=h3cIpxIfSapStatus, h3cIpxStatSapGenReqReceives=h3cIpxStatSapGenReqReceives, h3cIpxStatCantDeals=h3cIpxStatCantDeals, h3cIpxIfStatRipSends=h3cIpxIfStatRipSends, h3cIpxRouteTable=h3cIpxRouteTable, h3cIpxStaticServiceHops=h3cIpxStaticServiceHops, h3cIpxIfStatIpxRecvBytes=h3cIpxIfStatIpxRecvBytes, h3cIpxStat=h3cIpxStat, h3cIpxStatForwards=h3cIpxStatForwards, h3cIpxRouteEntry=h3cIpxRouteEntry, h3cIpxStaticRouteTicks=h3cIpxStaticRouteTicks, h3cIpxStaticRouteEntry=h3cIpxStaticRouteEntry, h3cIpxStatRipReqSends=h3cIpxStatRipReqSends, h3cIpxIfStatRipSpecRspSends=h3cIpxIfStatRipSpecRspSends, h3cIpxRoutePre=h3cIpxRoutePre, h3cIpxServicePreference=h3cIpxServicePreference, h3cIpxIfStatNetId=h3cIpxIfStatNetId, h3cIpxIfStatRipReceives=h3cIpxIfStatRipReceives, h3cIpxIfStatSapGnsReqReceives=h3cIpxIfStatSapGnsReqReceives, h3cIpxIfStatSapSends=h3cIpxIfStatSapSends, h3cIpxIfStatIpxSends=h3cIpxIfStatIpxSends, h3cIpxSapMaxResServers=h3cIpxSapMaxResServers, h3cIpxIfNodeId=h3cIpxIfNodeId, h3cIpxStatGlobal=h3cIpxStatGlobal, h3cIpxIfSplitHorizon=h3cIpxIfSplitHorizon, h3cIpxRouteHops=h3cIpxRouteHops, h3cIpxStaticRouteDestNetId=h3cIpxStaticRouteDestNetId, h3cIpxIfStatRipGenReqReceives=h3cIpxIfStatRipGenReqReceives, h3cIpxIfStatSapDiscards=h3cIpxIfStatSapDiscards, h3cIpxSapGnsLoadBalance=h3cIpxSapGnsLoadBalance, h3cIpxRouteStatTable=h3cIpxRouteStatTable, h3cIpxServiceNetId=h3cIpxServiceNetId, h3cIpxStatRipPeriUpdates=h3cIpxStatRipPeriUpdates, h3cIpxStatSapInPktErrors=h3cIpxStatSapInPktErrors, h3cIpxServiceRecvIf=h3cIpxServiceRecvIf, h3cIpxRip=h3cIpxRip, h3cIpxStaticRouteTable=h3cIpxStaticRouteTable, h3cIpxIfStatTable=h3cIpxIfStatTable, h3cIpxIfStatSapGnsRspSends=h3cIpxIfStatSapGnsRspSends, h3cIpxServiceEntry=h3cIpxServiceEntry, h3cIpxRouteNextHop=h3cIpxRouteNextHop, h3cIpxIfUpdateChangeOnly=h3cIpxIfUpdateChangeOnly, h3cIpxIfStatEntry=h3cIpxIfStatEntry, h3cIpxRouteTicks=h3cIpxRouteTicks, h3cIpxStaticServiceEntry=h3cIpxStaticServiceEntry, h3cIpxServiceSocketNo=h3cIpxServiceSocketNo, h3cIpxStatPitchs=h3cIpxStatPitchs, h3cIpxStatSapPeriUpdates=h3cIpxStatSapPeriUpdates, h3cIpxStaticServiceName=h3cIpxStaticServiceName, h3cIpxIfStatRipSpecReqReceives=h3cIpxIfStatRipSpecReqReceives, h3cIpxStatRipSends=h3cIpxStatRipSends, h3cIpxStatFormatErrors=h3cIpxStatFormatErrors, h3cIpxRouteStatPro=h3cIpxRouteStatPro, h3cIpxRouteMaxResPaths=h3cIpxRouteMaxResPaths, h3cIpxStatSapSpecRspSends=h3cIpxStatSapSpecRspSends, h3cIpxStaticRouteNextHop=h3cIpxStaticRouteNextHop, EnabledStatus=EnabledStatus, h3cIpxStatInterface=h3cIpxStatInterface, h3cIpxIfStatNodeId=h3cIpxIfStatNodeId, h3cIpxStatus=h3cIpxStatus, h3cIpxServiceNodeId=h3cIpxServiceNodeId, h3cIpxStatBadHops=h3cIpxStatBadHops, h3cIpxStatSapGnsReqReceives=h3cIpxStatSapGnsReqReceives, h3cIpxSap=h3cIpxSap, h3cIpxIfConfigEntry=h3cIpxIfConfigEntry, h3cIpxRouteTime=h3cIpxRouteTime, h3cIpxRouteStatAddeds=h3cIpxRouteStatAddeds, h3cIpxStatSapGenRspSends=h3cIpxStatSapGenRspSends, h3cIpxRouteMultiplier=h3cIpxRouteMultiplier, h3cIpxServiceIndex=h3cIpxServiceIndex, h3cIpxStatOutDiscards=h3cIpxStatOutDiscards, h3cIpxRouteIndex=h3cIpxRouteIndex, h3cIpxServiceType=h3cIpxServiceType, h3cIpxServiceHops=h3cIpxServiceHops, h3cIpxStatLocalDests=h3cIpxStatLocalDests, h3cIpxIfEncapsuleType=h3cIpxIfEncapsuleType, h3cIpxIfStatIndex=h3cIpxIfStatIndex, h3cIpx=h3cIpx, h3cIpxStaticRouteStatus=h3cIpxStaticRouteStatus, h3cIpxIfNetId=h3cIpxIfNetId)
