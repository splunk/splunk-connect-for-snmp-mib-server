#
# PySNMP MIB module INTEL-ES480-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTEL-ES480-VLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:42:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
es480tAgent, = mibBuilder.importSymbols("INTEL-ES480-MIB", "es480tAgent")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, ObjectIdentity, Bits, iso, NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Integer32, MibIdentifier, Gauge32, Counter32, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ObjectIdentity", "Bits", "iso", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Integer32", "MibIdentifier", "Gauge32", "Counter32", "IpAddress", "Counter64")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
es480tVlan = ModuleIdentity((1, 3, 6, 1, 4, 1, 343, 6, 60, 2))
if mibBuilder.loadTexts: es480tVlan.setLastUpdated('0003170000Z')
if mibBuilder.loadTexts: es480tVlan.setOrganization('Intel Corp.')
es480tVlanGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 1))
es480tVirtualGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 2))
es480tEncapsulationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 3))
es480tProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 5))
class Es480tSwitchVlanType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("vlanLayer2", 1))

es480tVlanIfTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 1, 2), )
if mibBuilder.loadTexts: es480tVlanIfTable.setStatus('mandatory')
es480tVlanIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 1, 2, 1), ).setIndexNames((0, "INTEL-ES480-VLAN-MIB", "es480tVlanIfIndex"))
if mibBuilder.loadTexts: es480tVlanIfEntry.setStatus('mandatory')
es480tVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 1, 2, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanIfIndex.setStatus('mandatory')
es480tVlanIfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanIfDescr.setStatus('mandatory')
es480tVlanIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 1, 2, 1, 3), Es480tSwitchVlanType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanIfType.setStatus('mandatory')
es480tVlanIfGlobalIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanIfGlobalIdentifier.setStatus('mandatory')
es480tVlanIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 1, 2, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanIfStatus.setStatus('mandatory')
class Es480tSwitchVlanEncapsType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2))
    namedValues = NamedValues(("vlanEncaps8021q", 2))

es480tVlanEncapsIfTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 3, 1), )
if mibBuilder.loadTexts: es480tVlanEncapsIfTable.setStatus('mandatory')
es480tVlanEncapsIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 3, 1, 1), ).setIndexNames((0, "INTEL-ES480-VLAN-MIB", "es480tVlanEncapsIfIndex"))
if mibBuilder.loadTexts: es480tVlanEncapsIfEntry.setStatus('mandatory')
es480tVlanEncapsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 3, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanEncapsIfIndex.setStatus('mandatory')
es480tVlanEncapsIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 3, 1, 1, 2), Es480tSwitchVlanEncapsType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanEncapsIfType.setStatus('mandatory')
es480tVlanEncapsIfTag = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 3, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanEncapsIfTag.setStatus('mandatory')
es480tVlanEncapsIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 3, 1, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanEncapsIfStatus.setStatus('mandatory')
es480tNextAvailableVirtIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tNextAvailableVirtIfIndex.setStatus('mandatory')
es480tVlanProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 5, 1), )
if mibBuilder.loadTexts: es480tVlanProtocolTable.setStatus('mandatory')
es480tVlanProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 5, 1, 1), ).setIndexNames((0, "INTEL-ES480-VLAN-MIB", "es480tVlanProtocolIndex"), (0, "INTEL-ES480-VLAN-MIB", "es480tVlanProtocolIdIndex"))
if mibBuilder.loadTexts: es480tVlanProtocolEntry.setStatus('mandatory')
es480tVlanProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanProtocolIndex.setStatus('mandatory')
es480tVlanProtocolIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanProtocolIdIndex.setStatus('mandatory')
es480tVlanProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 5, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanProtocolName.setStatus('mandatory')
es480tVlanProtocolDllEncapsType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("any", 1), ("ethertype", 2), ("llc", 3), ("llcSnapEthertype", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanProtocolDllEncapsType.setStatus('mandatory')
es480tVlanProtocolId = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanProtocolId.setStatus('mandatory')
es480tVlanProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 5, 1, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanProtocolStatus.setStatus('mandatory')
es480tVlanProtocolVlanTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 5, 2), )
if mibBuilder.loadTexts: es480tVlanProtocolVlanTable.setStatus('mandatory')
es480tVlanProtocolVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 5, 2, 1), ).setIndexNames((0, "INTEL-ES480-VLAN-MIB", "es480tVlanProtocolVlanIfIndex"), (0, "INTEL-ES480-VLAN-MIB", "es480tVlanProtocolVlanProtocolIndex"))
if mibBuilder.loadTexts: es480tVlanProtocolVlanEntry.setStatus('mandatory')
es480tVlanProtocolVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 5, 2, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanProtocolVlanIfIndex.setStatus('mandatory')
es480tVlanProtocolVlanProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 5, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanProtocolVlanProtocolIndex.setStatus('mandatory')
es480tVlanProtocolVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 2, 5, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tVlanProtocolVlanStatus.setStatus('mandatory')
mibBuilder.exportSymbols("INTEL-ES480-VLAN-MIB", es480tVlanIfStatus=es480tVlanIfStatus, es480tVlanProtocolTable=es480tVlanProtocolTable, es480tVlanIfIndex=es480tVlanIfIndex, es480tVlanEncapsIfStatus=es480tVlanEncapsIfStatus, Es480tSwitchVlanEncapsType=Es480tSwitchVlanEncapsType, es480tVlanIfEntry=es480tVlanIfEntry, es480tNextAvailableVirtIfIndex=es480tNextAvailableVirtIfIndex, es480tVlanEncapsIfTable=es480tVlanEncapsIfTable, es480tVlanProtocolName=es480tVlanProtocolName, PYSNMP_MODULE_ID=es480tVlan, es480tVlanProtocolVlanEntry=es480tVlanProtocolVlanEntry, Es480tSwitchVlanType=Es480tSwitchVlanType, es480tVlanIfDescr=es480tVlanIfDescr, es480tEncapsulationGroup=es480tEncapsulationGroup, es480tVlanProtocolVlanProtocolIndex=es480tVlanProtocolVlanProtocolIndex, es480tVlanProtocolVlanStatus=es480tVlanProtocolVlanStatus, es480tVlanGroup=es480tVlanGroup, es480tVlanIfTable=es480tVlanIfTable, es480tVlanProtocolVlanTable=es480tVlanProtocolVlanTable, es480tVlan=es480tVlan, es480tVlanProtocolDllEncapsType=es480tVlanProtocolDllEncapsType, es480tVlanEncapsIfTag=es480tVlanEncapsIfTag, es480tVlanProtocolIdIndex=es480tVlanProtocolIdIndex, es480tVlanProtocolIndex=es480tVlanProtocolIndex, es480tVlanIfGlobalIdentifier=es480tVlanIfGlobalIdentifier, es480tVlanProtocolEntry=es480tVlanProtocolEntry, es480tVlanProtocolVlanIfIndex=es480tVlanProtocolVlanIfIndex, es480tVlanProtocolStatus=es480tVlanProtocolStatus, es480tVlanEncapsIfIndex=es480tVlanEncapsIfIndex, es480tVlanEncapsIfEntry=es480tVlanEncapsIfEntry, es480tVlanIfType=es480tVlanIfType, es480tProtocolGroup=es480tProtocolGroup, es480tVlanEncapsIfType=es480tVlanEncapsIfType, es480tVlanProtocolId=es480tVlanProtocolId, es480tVirtualGroup=es480tVirtualGroup)
