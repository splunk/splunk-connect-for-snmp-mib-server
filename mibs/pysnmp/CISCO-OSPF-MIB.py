#
# PySNMP MIB module CISCO-OSPF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-OSPF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:52:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ospfIfEntry, RouterID, ospfLsdbRouterId, PositiveInteger, ospfLsdbLsid, ospfVirtIfEntry, Metric, AreaID, HelloRange, UpToMaxAge, ospfAreaEntry, ospfLsdbAreaId = mibBuilder.importSymbols("OSPF-MIB", "ospfIfEntry", "RouterID", "ospfLsdbRouterId", "PositiveInteger", "ospfLsdbLsid", "ospfVirtIfEntry", "Metric", "AreaID", "HelloRange", "UpToMaxAge", "ospfAreaEntry", "ospfLsdbAreaId")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
iso, IpAddress, Bits, Counter64, Integer32, MibIdentifier, NotificationType, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ObjectIdentity, ModuleIdentity, Unsigned32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "IpAddress", "Bits", "Counter64", "Integer32", "MibIdentifier", "NotificationType", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ObjectIdentity", "ModuleIdentity", "Unsigned32", "Counter32")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
cospf = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 99))
cospf.setRevisions(('2003-07-18 00:00', '2003-01-28 00:00',))
if mibBuilder.loadTexts: cospf.setLastUpdated('200307180000Z')
if mibBuilder.loadTexts: cospf.setOrganization('Cisco Systems, Inc.')
cospfGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 99, 1))
cospfRFC1583Compatibility = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 99, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfRFC1583Compatibility.setStatus('current')
cospfOpaqueLsaSupport = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 99, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfOpaqueLsaSupport.setStatus('current')
cospfTrafficEngineeringSupport = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 99, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfTrafficEngineeringSupport.setStatus('current')
cospfOpaqueASLsaCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 99, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfOpaqueASLsaCount.setStatus('current')
cospfOpaqueASLsaCksumSum = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 99, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfOpaqueASLsaCksumSum.setStatus('current')
cospfAreaTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 99, 2), )
if mibBuilder.loadTexts: cospfAreaTable.setStatus('current')
cospfAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 99, 2, 1), )
ospfAreaEntry.registerAugmentions(("CISCO-OSPF-MIB", "cospfAreaEntry"))
cospfAreaEntry.setIndexNames(*ospfAreaEntry.getIndexNames())
if mibBuilder.loadTexts: cospfAreaEntry.setStatus('current')
cospfOpaqueAreaLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfOpaqueAreaLsaCount.setStatus('current')
cospfOpaqueAreaLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfOpaqueAreaLsaCksumSum.setStatus('current')
cospfAreaNssaTranslatorRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("always", 1), ("candidate", 2))).clone('candidate')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfAreaNssaTranslatorRole.setStatus('current')
cospfAreaNssaTranslatorState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("elected", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfAreaNssaTranslatorState.setStatus('current')
cospfAreaNssaTranslatorEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfAreaNssaTranslatorEvents.setStatus('current')
cospfLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 99, 3), )
if mibBuilder.loadTexts: cospfLsdbTable.setStatus('current')
cospfLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 99, 3, 1), ).setIndexNames((0, "OSPF-MIB", "ospfLsdbAreaId"), (0, "CISCO-OSPF-MIB", "cospfLsdbType"), (0, "OSPF-MIB", "ospfLsdbLsid"), (0, "OSPF-MIB", "ospfLsdbRouterId"))
if mibBuilder.loadTexts: cospfLsdbEntry.setStatus('current')
cospfLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(10, 11))).clone(namedValues=NamedValues(("areaOpaqueLink", 10), ("asOpaqueLink", 11))))
if mibBuilder.loadTexts: cospfLsdbType.setStatus('current')
cospfLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfLsdbSequence.setStatus('current')
cospfLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfLsdbAge.setStatus('current')
cospfLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfLsdbChecksum.setStatus('current')
cospfLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfLsdbAdvertisement.setStatus('current')
cospfIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 99, 4), )
if mibBuilder.loadTexts: cospfIfTable.setStatus('current')
cospfIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 99, 4, 1), )
ospfIfEntry.registerAugmentions(("CISCO-OSPF-MIB", "cospfIfEntry"))
cospfIfEntry.setIndexNames(*ospfIfEntry.getIndexNames())
if mibBuilder.loadTexts: cospfIfEntry.setStatus('current')
cospfIfLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 4, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfIfLsaCount.setStatus('current')
cospfIfLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfIfLsaCksumSum.setStatus('current')
cospfVirtIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 99, 5), )
if mibBuilder.loadTexts: cospfVirtIfTable.setStatus('current')
cospfVirtIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 99, 5, 1), )
ospfVirtIfEntry.registerAugmentions(("CISCO-OSPF-MIB", "cospfVirtIfEntry"))
cospfVirtIfEntry.setIndexNames(*ospfVirtIfEntry.getIndexNames())
if mibBuilder.loadTexts: cospfVirtIfEntry.setStatus('current')
cospfVirtIfLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 5, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfVirtIfLsaCount.setStatus('current')
cospfVirtIfLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfVirtIfLsaCksumSum.setStatus('current')
cospfShamLinkTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 99, 6), )
if mibBuilder.loadTexts: cospfShamLinkTable.setStatus('deprecated')
cospfShamLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 99, 6, 1), ).setIndexNames((0, "CISCO-OSPF-MIB", "cospfShamLinkAreaId"), (0, "CISCO-OSPF-MIB", "cospfShamLinkLocalIpAddress"), (0, "CISCO-OSPF-MIB", "cospfShamLinkNeighborId"))
if mibBuilder.loadTexts: cospfShamLinkEntry.setStatus('deprecated')
cospfShamLinkAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 6, 1, 1), AreaID())
if mibBuilder.loadTexts: cospfShamLinkAreaId.setStatus('deprecated')
cospfShamLinkLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 6, 1, 2), IpAddress())
if mibBuilder.loadTexts: cospfShamLinkLocalIpAddress.setStatus('deprecated')
cospfShamLinkNeighborId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 6, 1, 3), RouterID())
if mibBuilder.loadTexts: cospfShamLinkNeighborId.setStatus('deprecated')
cospfShamLinkRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 6, 1, 4), UpToMaxAge().clone(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinkRetransInterval.setStatus('deprecated')
cospfShamLinkHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 6, 1, 5), HelloRange().clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinkHelloInterval.setStatus('deprecated')
cospfShamLinkRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 6, 1, 6), PositiveInteger().clone(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinkRtrDeadInterval.setStatus('deprecated')
cospfShamLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("down", 1), ("pointToPoint", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinkState.setStatus('deprecated')
cospfShamLinkEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinkEvents.setStatus('deprecated')
cospfShamLinkMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 6, 1, 9), Metric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinkMetric.setStatus('deprecated')
cospfShamLinksTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 99, 11), )
if mibBuilder.loadTexts: cospfShamLinksTable.setStatus('current')
cospfShamLinksEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 99, 11, 1), ).setIndexNames((0, "CISCO-OSPF-MIB", "cospfShamLinksAreaId"), (0, "CISCO-OSPF-MIB", "cospfShamLinksLocalIpAddrType"), (0, "CISCO-OSPF-MIB", "cospfShamLinksLocalIpAddr"), (0, "CISCO-OSPF-MIB", "cospfShamLinksRemoteIpAddrType"), (0, "CISCO-OSPF-MIB", "cospfShamLinksRemoteIpAddr"))
if mibBuilder.loadTexts: cospfShamLinksEntry.setStatus('current')
cospfShamLinksAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 11, 1, 1), AreaID())
if mibBuilder.loadTexts: cospfShamLinksAreaId.setStatus('current')
cospfShamLinksLocalIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 11, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cospfShamLinksLocalIpAddrType.setStatus('current')
cospfShamLinksLocalIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 11, 1, 3), InetAddress())
if mibBuilder.loadTexts: cospfShamLinksLocalIpAddr.setStatus('current')
cospfShamLinksRemoteIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 11, 1, 4), InetAddressType())
if mibBuilder.loadTexts: cospfShamLinksRemoteIpAddrType.setStatus('current')
cospfShamLinksRemoteIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 11, 1, 5), InetAddress())
if mibBuilder.loadTexts: cospfShamLinksRemoteIpAddr.setStatus('current')
cospfShamLinksRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 11, 1, 6), UpToMaxAge().clone(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinksRetransInterval.setStatus('current')
cospfShamLinksHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 11, 1, 7), HelloRange().clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinksHelloInterval.setStatus('current')
cospfShamLinksRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 11, 1, 8), PositiveInteger().clone(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinksRtrDeadInterval.setStatus('current')
cospfShamLinksState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("down", 1), ("pointToPoint", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinksState.setStatus('current')
cospfShamLinksEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinksEvents.setStatus('current')
cospfShamLinksMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 11, 1, 11), Metric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinksMetric.setStatus('current')
cospfShamLinkNbrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 99, 10), )
if mibBuilder.loadTexts: cospfShamLinkNbrTable.setStatus('current')
cospfShamLinkNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 99, 10, 1), ).setIndexNames((0, "CISCO-OSPF-MIB", "cospfShamLinksLocalIpAddrType"), (0, "CISCO-OSPF-MIB", "cospfShamLinksLocalIpAddr"), (0, "CISCO-OSPF-MIB", "cospfShamLinkNbrArea"), (0, "CISCO-OSPF-MIB", "cospfShamLinkNbrIpAddrType"), (0, "CISCO-OSPF-MIB", "cospfShamLinkNbrIpAddr"))
if mibBuilder.loadTexts: cospfShamLinkNbrEntry.setStatus('current')
cospfShamLinkNbrArea = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 10, 1, 1), AreaID())
if mibBuilder.loadTexts: cospfShamLinkNbrArea.setStatus('current')
cospfShamLinkNbrIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 10, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cospfShamLinkNbrIpAddrType.setStatus('current')
cospfShamLinkNbrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 10, 1, 3), InetAddress())
if mibBuilder.loadTexts: cospfShamLinkNbrIpAddr.setStatus('current')
cospfShamLinkNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 10, 1, 4), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinkNbrRtrId.setStatus('current')
cospfShamLinkNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinkNbrOptions.setStatus('current')
cospfShamLinkNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoWay", 4), ("exchangeStart", 5), ("exchange", 6), ("loading", 7), ("full", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinkNbrState.setStatus('current')
cospfShamLinkNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinkNbrEvents.setStatus('current')
cospfShamLinkNbrLsRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 10, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinkNbrLsRetransQLen.setStatus('current')
cospfShamLinkNbrHelloSuppressed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 10, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfShamLinkNbrHelloSuppressed.setStatus('current')
cospfLocalLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 99, 7), )
if mibBuilder.loadTexts: cospfLocalLsdbTable.setStatus('current')
cospfLocalLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 99, 7, 1), ).setIndexNames((0, "CISCO-OSPF-MIB", "cospfLocalLsdbIpAddress"), (0, "CISCO-OSPF-MIB", "cospfLocalLsdbAddressLessIf"), (0, "CISCO-OSPF-MIB", "cospfLocalLsdbType"), (0, "CISCO-OSPF-MIB", "cospfLocalLsdbLsid"), (0, "CISCO-OSPF-MIB", "cospfLocalLsdbRouterId"))
if mibBuilder.loadTexts: cospfLocalLsdbEntry.setStatus('current')
cospfLocalLsdbIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 7, 1, 1), IpAddress())
if mibBuilder.loadTexts: cospfLocalLsdbIpAddress.setStatus('current')
cospfLocalLsdbAddressLessIf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 7, 1, 2), InterfaceIndexOrZero())
if mibBuilder.loadTexts: cospfLocalLsdbAddressLessIf.setStatus('current')
cospfLocalLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(9))).clone(namedValues=NamedValues(("localOpaqueLink", 9))))
if mibBuilder.loadTexts: cospfLocalLsdbType.setStatus('current')
cospfLocalLsdbLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 7, 1, 4), IpAddress())
if mibBuilder.loadTexts: cospfLocalLsdbLsid.setStatus('current')
cospfLocalLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 7, 1, 5), RouterID())
if mibBuilder.loadTexts: cospfLocalLsdbRouterId.setStatus('current')
cospfLocalLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483647, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfLocalLsdbSequence.setStatus('current')
cospfLocalLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfLocalLsdbAge.setStatus('current')
cospfLocalLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 7, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfLocalLsdbChecksum.setStatus('current')
cospfLocalLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 7, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfLocalLsdbAdvertisement.setStatus('current')
cospfVirtLocalLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 99, 8), )
if mibBuilder.loadTexts: cospfVirtLocalLsdbTable.setStatus('current')
cospfVirtLocalLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 99, 8, 1), ).setIndexNames((0, "CISCO-OSPF-MIB", "cospfVirtLocalLsdbTransitArea"), (0, "CISCO-OSPF-MIB", "cospfVirtLocalLsdbNeighbor"), (0, "CISCO-OSPF-MIB", "cospfVirtLocalLsdbType"), (0, "CISCO-OSPF-MIB", "cospfVirtLocalLsdbLsid"), (0, "CISCO-OSPF-MIB", "cospfVirtLocalLsdbRouterId"))
if mibBuilder.loadTexts: cospfVirtLocalLsdbEntry.setStatus('current')
cospfVirtLocalLsdbTransitArea = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 8, 1, 1), AreaID())
if mibBuilder.loadTexts: cospfVirtLocalLsdbTransitArea.setStatus('current')
cospfVirtLocalLsdbNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 8, 1, 2), RouterID())
if mibBuilder.loadTexts: cospfVirtLocalLsdbNeighbor.setStatus('current')
cospfVirtLocalLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(9))).clone(namedValues=NamedValues(("localOpaqueLink", 9))))
if mibBuilder.loadTexts: cospfVirtLocalLsdbType.setStatus('current')
cospfVirtLocalLsdbLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 8, 1, 4), IpAddress())
if mibBuilder.loadTexts: cospfVirtLocalLsdbLsid.setStatus('current')
cospfVirtLocalLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 8, 1, 5), RouterID())
if mibBuilder.loadTexts: cospfVirtLocalLsdbRouterId.setStatus('current')
cospfVirtLocalLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483647, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfVirtLocalLsdbSequence.setStatus('current')
cospfVirtLocalLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfVirtLocalLsdbAge.setStatus('current')
cospfVirtLocalLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 8, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfVirtLocalLsdbChecksum.setStatus('current')
cospfVirtLocalLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 99, 8, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfVirtLocalLsdbAdvertisement.setStatus('current')
cospfConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 99, 9))
cospfGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 99, 9, 1))
cospfCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 99, 9, 2))
cospfCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 99, 9, 2, 1)).setObjects(("CISCO-OSPF-MIB", "cospfBasicGroup"), ("CISCO-OSPF-MIB", "cospfAreaGroup"), ("CISCO-OSPF-MIB", "cospfIfGroup"), ("CISCO-OSPF-MIB", "cospfVirtIfGroup"), ("CISCO-OSPF-MIB", "cospfShamLinkGroup"), ("CISCO-OSPF-MIB", "cospfLsdbGroup"), ("CISCO-OSPF-MIB", "cospfLocalLsdbGroup"), ("CISCO-OSPF-MIB", "cospfVirtLocalLsdbGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cospfCompliance = cospfCompliance.setStatus('deprecated')
cospfComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 99, 9, 2, 2)).setObjects(("CISCO-OSPF-MIB", "cospfBasicGroup"), ("CISCO-OSPF-MIB", "cospfAreaGroup"), ("CISCO-OSPF-MIB", "cospfIfGroup"), ("CISCO-OSPF-MIB", "cospfVirtIfGroup"), ("CISCO-OSPF-MIB", "cospfShamLinksGroup"), ("CISCO-OSPF-MIB", "cospfShamLinkNbrGroup"), ("CISCO-OSPF-MIB", "cospfLsdbGroup"), ("CISCO-OSPF-MIB", "cospfLocalLsdbGroup"), ("CISCO-OSPF-MIB", "cospfVirtLocalLsdbGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cospfComplianceRev1 = cospfComplianceRev1.setStatus('current')
cospfLsdbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 99, 9, 1, 1)).setObjects(("CISCO-OSPF-MIB", "cospfLsdbSequence"), ("CISCO-OSPF-MIB", "cospfLsdbAge"), ("CISCO-OSPF-MIB", "cospfLsdbChecksum"), ("CISCO-OSPF-MIB", "cospfLsdbAdvertisement"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cospfLsdbGroup = cospfLsdbGroup.setStatus('current')
cospfLocalLsdbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 99, 9, 1, 2)).setObjects(("CISCO-OSPF-MIB", "cospfLocalLsdbSequence"), ("CISCO-OSPF-MIB", "cospfLocalLsdbAge"), ("CISCO-OSPF-MIB", "cospfLocalLsdbChecksum"), ("CISCO-OSPF-MIB", "cospfLocalLsdbAdvertisement"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cospfLocalLsdbGroup = cospfLocalLsdbGroup.setStatus('current')
cospfVirtLocalLsdbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 99, 9, 1, 3)).setObjects(("CISCO-OSPF-MIB", "cospfVirtLocalLsdbSequence"), ("CISCO-OSPF-MIB", "cospfVirtLocalLsdbAge"), ("CISCO-OSPF-MIB", "cospfVirtLocalLsdbChecksum"), ("CISCO-OSPF-MIB", "cospfVirtLocalLsdbAdvertisement"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cospfVirtLocalLsdbGroup = cospfVirtLocalLsdbGroup.setStatus('current')
cospfBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 99, 9, 1, 4)).setObjects(("CISCO-OSPF-MIB", "cospfRFC1583Compatibility"), ("CISCO-OSPF-MIB", "cospfOpaqueLsaSupport"), ("CISCO-OSPF-MIB", "cospfTrafficEngineeringSupport"), ("CISCO-OSPF-MIB", "cospfOpaqueASLsaCount"), ("CISCO-OSPF-MIB", "cospfOpaqueASLsaCksumSum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cospfBasicGroup = cospfBasicGroup.setStatus('current')
cospfAreaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 99, 9, 1, 5)).setObjects(("CISCO-OSPF-MIB", "cospfOpaqueAreaLsaCount"), ("CISCO-OSPF-MIB", "cospfOpaqueAreaLsaCksumSum"), ("CISCO-OSPF-MIB", "cospfAreaNssaTranslatorRole"), ("CISCO-OSPF-MIB", "cospfAreaNssaTranslatorState"), ("CISCO-OSPF-MIB", "cospfAreaNssaTranslatorEvents"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cospfAreaGroup = cospfAreaGroup.setStatus('current')
cospfIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 99, 9, 1, 6)).setObjects(("CISCO-OSPF-MIB", "cospfIfLsaCount"), ("CISCO-OSPF-MIB", "cospfIfLsaCksumSum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cospfIfGroup = cospfIfGroup.setStatus('current')
cospfVirtIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 99, 9, 1, 7)).setObjects(("CISCO-OSPF-MIB", "cospfVirtIfLsaCount"), ("CISCO-OSPF-MIB", "cospfVirtIfLsaCksumSum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cospfVirtIfGroup = cospfVirtIfGroup.setStatus('current')
cospfShamLinkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 99, 9, 1, 8)).setObjects(("CISCO-OSPF-MIB", "cospfShamLinkRetransInterval"), ("CISCO-OSPF-MIB", "cospfShamLinkHelloInterval"), ("CISCO-OSPF-MIB", "cospfShamLinkRtrDeadInterval"), ("CISCO-OSPF-MIB", "cospfShamLinkState"), ("CISCO-OSPF-MIB", "cospfShamLinkEvents"), ("CISCO-OSPF-MIB", "cospfShamLinkMetric"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cospfShamLinkGroup = cospfShamLinkGroup.setStatus('deprecated')
cospfShamLinkNbrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 99, 9, 1, 9)).setObjects(("CISCO-OSPF-MIB", "cospfShamLinkNbrRtrId"), ("CISCO-OSPF-MIB", "cospfShamLinkNbrOptions"), ("CISCO-OSPF-MIB", "cospfShamLinkNbrState"), ("CISCO-OSPF-MIB", "cospfShamLinkNbrEvents"), ("CISCO-OSPF-MIB", "cospfShamLinkNbrLsRetransQLen"), ("CISCO-OSPF-MIB", "cospfShamLinkNbrHelloSuppressed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cospfShamLinkNbrGroup = cospfShamLinkNbrGroup.setStatus('current')
cospfShamLinksGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 99, 9, 1, 10)).setObjects(("CISCO-OSPF-MIB", "cospfShamLinksRetransInterval"), ("CISCO-OSPF-MIB", "cospfShamLinksHelloInterval"), ("CISCO-OSPF-MIB", "cospfShamLinksRtrDeadInterval"), ("CISCO-OSPF-MIB", "cospfShamLinksState"), ("CISCO-OSPF-MIB", "cospfShamLinksEvents"), ("CISCO-OSPF-MIB", "cospfShamLinksMetric"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cospfShamLinksGroup = cospfShamLinksGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-OSPF-MIB", cospfShamLinksMetric=cospfShamLinksMetric, cospfShamLinkRtrDeadInterval=cospfShamLinkRtrDeadInterval, cospfLsdbSequence=cospfLsdbSequence, cospfIfLsaCount=cospfIfLsaCount, cospfShamLinksState=cospfShamLinksState, cospfLsdbGroup=cospfLsdbGroup, cospfAreaGroup=cospfAreaGroup, cospfTrafficEngineeringSupport=cospfTrafficEngineeringSupport, cospfShamLinkNbrEvents=cospfShamLinkNbrEvents, cospfShamLinksEvents=cospfShamLinksEvents, cospfLocalLsdbAge=cospfLocalLsdbAge, cospfVirtIfEntry=cospfVirtIfEntry, cospfVirtIfGroup=cospfVirtIfGroup, cospfShamLinksLocalIpAddr=cospfShamLinksLocalIpAddr, cospfShamLinkEvents=cospfShamLinkEvents, cospfLocalLsdbSequence=cospfLocalLsdbSequence, cospfVirtLocalLsdbRouterId=cospfVirtLocalLsdbRouterId, PYSNMP_MODULE_ID=cospf, cospfShamLinksRtrDeadInterval=cospfShamLinksRtrDeadInterval, cospfRFC1583Compatibility=cospfRFC1583Compatibility, cospfShamLinkMetric=cospfShamLinkMetric, cospfOpaqueASLsaCksumSum=cospfOpaqueASLsaCksumSum, cospfAreaEntry=cospfAreaEntry, cospfBasicGroup=cospfBasicGroup, cospfLocalLsdbLsid=cospfLocalLsdbLsid, cospfShamLinkNbrEntry=cospfShamLinkNbrEntry, cospfOpaqueLsaSupport=cospfOpaqueLsaSupport, cospfLocalLsdbGroup=cospfLocalLsdbGroup, cospfShamLinkNbrRtrId=cospfShamLinkNbrRtrId, cospfShamLinkNbrArea=cospfShamLinkNbrArea, cospfShamLinksRemoteIpAddr=cospfShamLinksRemoteIpAddr, cospfLsdbTable=cospfLsdbTable, cospfShamLinksTable=cospfShamLinksTable, cospfVirtIfLsaCount=cospfVirtIfLsaCount, cospfVirtLocalLsdbType=cospfVirtLocalLsdbType, cospfVirtIfTable=cospfVirtIfTable, cospfShamLinkNeighborId=cospfShamLinkNeighborId, cospfShamLinksHelloInterval=cospfShamLinksHelloInterval, cospfVirtLocalLsdbSequence=cospfVirtLocalLsdbSequence, cospfCompliances=cospfCompliances, cospfAreaNssaTranslatorState=cospfAreaNssaTranslatorState, cospfLsdbType=cospfLsdbType, cospf=cospf, cospfAreaNssaTranslatorRole=cospfAreaNssaTranslatorRole, cospfLocalLsdbAddressLessIf=cospfLocalLsdbAddressLessIf, cospfVirtIfLsaCksumSum=cospfVirtIfLsaCksumSum, cospfVirtLocalLsdbLsid=cospfVirtLocalLsdbLsid, cospfShamLinksAreaId=cospfShamLinksAreaId, cospfShamLinkNbrTable=cospfShamLinkNbrTable, cospfLocalLsdbType=cospfLocalLsdbType, cospfLocalLsdbRouterId=cospfLocalLsdbRouterId, cospfLsdbAge=cospfLsdbAge, cospfConformance=cospfConformance, cospfGeneralGroup=cospfGeneralGroup, cospfLsdbAdvertisement=cospfLsdbAdvertisement, cospfVirtLocalLsdbTable=cospfVirtLocalLsdbTable, cospfAreaTable=cospfAreaTable, cospfShamLinksGroup=cospfShamLinksGroup, cospfVirtLocalLsdbAdvertisement=cospfVirtLocalLsdbAdvertisement, cospfLocalLsdbIpAddress=cospfLocalLsdbIpAddress, cospfLocalLsdbAdvertisement=cospfLocalLsdbAdvertisement, cospfLsdbEntry=cospfLsdbEntry, cospfShamLinksRemoteIpAddrType=cospfShamLinksRemoteIpAddrType, cospfVirtLocalLsdbChecksum=cospfVirtLocalLsdbChecksum, cospfShamLinkAreaId=cospfShamLinkAreaId, cospfIfGroup=cospfIfGroup, cospfShamLinkEntry=cospfShamLinkEntry, cospfShamLinkNbrOptions=cospfShamLinkNbrOptions, cospfShamLinkNbrIpAddrType=cospfShamLinkNbrIpAddrType, cospfLsdbChecksum=cospfLsdbChecksum, cospfShamLinkHelloInterval=cospfShamLinkHelloInterval, cospfShamLinkTable=cospfShamLinkTable, cospfVirtLocalLsdbTransitArea=cospfVirtLocalLsdbTransitArea, cospfShamLinksRetransInterval=cospfShamLinksRetransInterval, cospfShamLinkNbrState=cospfShamLinkNbrState, cospfGroups=cospfGroups, cospfShamLinkNbrIpAddr=cospfShamLinkNbrIpAddr, cospfLocalLsdbChecksum=cospfLocalLsdbChecksum, cospfShamLinkNbrGroup=cospfShamLinkNbrGroup, cospfAreaNssaTranslatorEvents=cospfAreaNssaTranslatorEvents, cospfIfEntry=cospfIfEntry, cospfVirtLocalLsdbGroup=cospfVirtLocalLsdbGroup, cospfShamLinkNbrHelloSuppressed=cospfShamLinkNbrHelloSuppressed, cospfOpaqueAreaLsaCount=cospfOpaqueAreaLsaCount, cospfOpaqueASLsaCount=cospfOpaqueASLsaCount, cospfVirtLocalLsdbEntry=cospfVirtLocalLsdbEntry, cospfIfLsaCksumSum=cospfIfLsaCksumSum, cospfIfTable=cospfIfTable, cospfOpaqueAreaLsaCksumSum=cospfOpaqueAreaLsaCksumSum, cospfCompliance=cospfCompliance, cospfShamLinkLocalIpAddress=cospfShamLinkLocalIpAddress, cospfComplianceRev1=cospfComplianceRev1, cospfVirtLocalLsdbNeighbor=cospfVirtLocalLsdbNeighbor, cospfShamLinksLocalIpAddrType=cospfShamLinksLocalIpAddrType, cospfShamLinksEntry=cospfShamLinksEntry, cospfLocalLsdbEntry=cospfLocalLsdbEntry, cospfShamLinkNbrLsRetransQLen=cospfShamLinkNbrLsRetransQLen, cospfShamLinkState=cospfShamLinkState, cospfVirtLocalLsdbAge=cospfVirtLocalLsdbAge, cospfShamLinkGroup=cospfShamLinkGroup, cospfShamLinkRetransInterval=cospfShamLinkRetransInterval, cospfLocalLsdbTable=cospfLocalLsdbTable)
