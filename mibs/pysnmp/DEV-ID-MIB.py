#
# PySNMP MIB module DEV-ID-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DEV-ID-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:26:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter64, Unsigned32, Bits, ModuleIdentity, enterprises, NotificationType, iso, Counter32, ObjectIdentity, Gauge32, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Unsigned32", "Bits", "ModuleIdentity", "enterprises", "NotificationType", "iso", "Counter32", "ObjectIdentity", "Gauge32", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nbDevId = ModuleIdentity((1, 3, 6, 1, 4, 1, 629, 1, 50, 16))
nbDevId.setRevisions(('2006-02-22 00:00',))
if mibBuilder.loadTexts: nbDevId.setLastUpdated('200602220000Z')
if mibBuilder.loadTexts: nbDevId.setOrganization('MRV Communications, Inc.')
nbase = MibIdentifier((1, 3, 6, 1, 4, 1, 629))
nbSwitchG1 = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1))
nbSwitchG1Il = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50))
nbDevIdHardware = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 4))
nbDevIdSoftware = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 5))
nbDevIdConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 101))
nbDevIdHardwareSerial = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 4, 3))
nbDevIdTypeName = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbDevIdTypeName.setStatus('current')
nbDevIdSysName = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbDevIdSysName.setStatus('current')
nbDevIdBaseMAC = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbDevIdBaseMAC.setStatus('current')
nbDevIdHardwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbDevIdHardwareVersion.setStatus('current')
nbDevIdHardwareSerialBoard = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 4, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbDevIdHardwareSerialBoard.setStatus('current')
nbDevIdHardwareSerialUnit = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 4, 3, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbDevIdHardwareSerialUnit.setStatus('current')
nbDevIdHardwareCpuNumber = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbDevIdHardwareCpuNumber.setStatus('current')
nbDevIdCpuTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 4, 5), )
if mibBuilder.loadTexts: nbDevIdCpuTable.setStatus('current')
nbDevIdCpuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 4, 5, 1), ).setIndexNames((0, "DEV-ID-MIB", "nbDevIdCpuIndex"))
if mibBuilder.loadTexts: nbDevIdCpuEntry.setStatus('current')
nbDevIdCpuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nbDevIdCpuIndex.setStatus('current')
nbDevIdCpuSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 4, 5, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbDevIdCpuSerial.setStatus('current')
nbDevIdCpuDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 4, 5, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbDevIdCpuDescr.setStatus('current')
nbDevIdSoftwareMasterOSVers = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 5, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbDevIdSoftwareMasterOSVers.setStatus('current')
nbDevIdSoftwareBuildTime = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 5, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbDevIdSoftwareBuildTime.setStatus('current')
nbDevIdMibTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 5, 3), )
if mibBuilder.loadTexts: nbDevIdMibTable.setStatus('current')
nbDevIdMibEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 5, 3, 1), ).setIndexNames((0, "DEV-ID-MIB", "nbDevIdMibStdName"))
if mibBuilder.loadTexts: nbDevIdMibEntry.setStatus('current')
nbDevIdMibStdName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 5, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 32)))
if mibBuilder.loadTexts: nbDevIdMibStdName.setStatus('current')
nbDevIdMibName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 5, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbDevIdMibName.setStatus('current')
nbDevIdMibTitle = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 5, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbDevIdMibTitle.setStatus('current')
nbDevIdMibNote = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 5, 3, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbDevIdMibNote.setStatus('current')
nbDevIdFirmware = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbDevIdFirmware.setStatus('current')
nbDevIdMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 101, 1))
nbDevIdMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 101, 2))
nbDevIdMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 101, 1, 1)).setObjects(("DEV-ID-MIB", "nbDevIdGroup"), ("DEV-ID-MIB", "nbDevIOptionaldGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nbDevIdMIBCompliance = nbDevIdMIBCompliance.setStatus('current')
nbDevIdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 101, 2, 1)).setObjects(("DEV-ID-MIB", "nbDevIdTypeName"), ("DEV-ID-MIB", "nbDevIdSysName"), ("DEV-ID-MIB", "nbDevIdBaseMAC"), ("DEV-ID-MIB", "nbDevIdHardwareVersion"), ("DEV-ID-MIB", "nbDevIdHardwareSerialBoard"), ("DEV-ID-MIB", "nbDevIdHardwareSerialUnit"), ("DEV-ID-MIB", "nbDevIdSoftwareMasterOSVers"), ("DEV-ID-MIB", "nbDevIdSoftwareBuildTime"), ("DEV-ID-MIB", "nbDevIdHardwareCpuNumber"), ("DEV-ID-MIB", "nbDevIdCpuSerial"), ("DEV-ID-MIB", "nbDevIdCpuDescr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nbDevIdGroup = nbDevIdGroup.setStatus('current')
nbDevIOptionaldGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 629, 1, 50, 16, 101, 2, 2)).setObjects(("DEV-ID-MIB", "nbDevIdMibName"), ("DEV-ID-MIB", "nbDevIdMibTitle"), ("DEV-ID-MIB", "nbDevIdMibNote"), ("DEV-ID-MIB", "nbDevIdFirmware"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nbDevIOptionaldGroup = nbDevIOptionaldGroup.setStatus('current')
mibBuilder.exportSymbols("DEV-ID-MIB", nbDevIdMibStdName=nbDevIdMibStdName, nbDevIdMIBGroups=nbDevIdMIBGroups, nbDevIdSysName=nbDevIdSysName, nbDevIdHardwareSerialBoard=nbDevIdHardwareSerialBoard, nbDevIdMibTable=nbDevIdMibTable, nbDevIdMIBCompliance=nbDevIdMIBCompliance, nbDevIdMibNote=nbDevIdMibNote, nbDevIdGroup=nbDevIdGroup, nbDevIdHardwareVersion=nbDevIdHardwareVersion, nbSwitchG1Il=nbSwitchG1Il, nbDevIdHardwareSerial=nbDevIdHardwareSerial, nbDevIdConformance=nbDevIdConformance, nbDevIdHardwareSerialUnit=nbDevIdHardwareSerialUnit, nbDevIdFirmware=nbDevIdFirmware, nbDevIdTypeName=nbDevIdTypeName, nbDevIdHardwareCpuNumber=nbDevIdHardwareCpuNumber, nbDevIOptionaldGroup=nbDevIOptionaldGroup, nbDevIdSoftware=nbDevIdSoftware, nbDevIdCpuDescr=nbDevIdCpuDescr, nbDevIdCpuSerial=nbDevIdCpuSerial, nbDevIdHardware=nbDevIdHardware, nbDevIdMIBCompliances=nbDevIdMIBCompliances, nbase=nbase, nbDevIdSoftwareMasterOSVers=nbDevIdSoftwareMasterOSVers, nbDevIdCpuIndex=nbDevIdCpuIndex, nbDevIdMibName=nbDevIdMibName, nbDevIdMibEntry=nbDevIdMibEntry, nbDevId=nbDevId, nbDevIdBaseMAC=nbDevIdBaseMAC, PYSNMP_MODULE_ID=nbDevId, nbSwitchG1=nbSwitchG1, nbDevIdCpuEntry=nbDevIdCpuEntry, nbDevIdMibTitle=nbDevIdMibTitle, nbDevIdSoftwareBuildTime=nbDevIdSoftwareBuildTime, nbDevIdCpuTable=nbDevIdCpuTable)
