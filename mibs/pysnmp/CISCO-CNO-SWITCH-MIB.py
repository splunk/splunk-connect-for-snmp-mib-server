#
# PySNMP MIB module CISCO-CNO-SWITCH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CNO-SWITCH-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:36:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Integer32, TimeTicks, Counter64, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter32, MibIdentifier, Unsigned32, ModuleIdentity, IpAddress, ObjectIdentity, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "TimeTicks", "Counter64", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter32", "MibIdentifier", "Unsigned32", "ModuleIdentity", "IpAddress", "ObjectIdentity", "Bits", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoCNOSwitchMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 43))
ciscoCNOSwitchMIB.setRevisions(('1998-10-23 00:00',))
if mibBuilder.loadTexts: ciscoCNOSwitchMIB.setLastUpdated('9810230000Z')
if mibBuilder.loadTexts: ciscoCNOSwitchMIB.setOrganization('Cisco System Inc.')
ciscoCNOSwitchMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 43, 1))
cnosSysInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 1))
cnosSysConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 2))
cnosPort = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3))
cnosVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 4))
cnosSysInfoSerialNo = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnosSysInfoSerialNo.setStatus('current')
cnosSysInfoBoardRevision = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnosSysInfoBoardRevision.setStatus('current')
cnosSysInfoBootVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnosSysInfoBootVersion.setStatus('current')
cnosSysInfoAddrCapacity = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnosSysInfoAddrCapacity.setStatus('current')
cnosSysConfigReset = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noReset", 1), ("reset", 2))).clone('noReset')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnosSysConfigReset.setStatus('current')
cnosSysConfigDefaultReset = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noReset", 1), ("reset", 2))).clone('noReset')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnosSysConfigDefaultReset.setStatus('current')
cnosSysConfigMonitor = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnosSysConfigMonitor.setStatus('current')
cnosSysConfigMonitorPort = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnosSysConfigMonitorPort.setStatus('current')
cnosPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1), )
if mibBuilder.loadTexts: cnosPortTable.setStatus('current')
cnosPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cnosPortEntry.setStatus('current')
cnosPortControllerRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnosPortControllerRevision.setStatus('current')
cnosPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnosPortName.setStatus('current')
cnosPortDuplexAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fullDuplex", 1), ("halfDuplex", 2), ("autoNegotiate", 3))).clone('autoNegotiate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnosPortDuplexAdmin.setStatus('current')
cnosPortDuplexStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fullDuplex", 1), ("halfDuplex", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnosPortDuplexStatus.setStatus('current')
cnosPortSpeedAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tenMbps", 1), ("oneHundredMbps", 2), ("autoNegotiate", 3))).clone('autoNegotiate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnosPortSpeedAdmin.setStatus('current')
cnosPortSpeedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tenMbps", 1), ("oneHundredMbps", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnosPortSpeedStatus.setStatus('current')
cnosPortMonitoring = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnosPortMonitoring.setStatus('current')
cnosPortLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("link", 1), ("noLink", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnosPortLinkStatus.setStatus('current')
cnosPortSTPPortFastMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnosPortSTPPortFastMode.setStatus('current')
cnosPortVlanMember = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("vlan1", 1), ("vlan2", 2), ("vlan3", 3), ("vlan4", 4), ("all", 5))).clone('vlan1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnosPortVlanMember.setStatus('current')
cnosVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 4, 1), )
if mibBuilder.loadTexts: cnosVlanTable.setStatus('current')
cnosVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-CNO-SWITCH-MIB", "cnosVlanIndex"))
if mibBuilder.loadTexts: cnosVlanEntry.setStatus('current')
cnosVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: cnosVlanIndex.setStatus('current')
cnosVlanSTPState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 43, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnosVlanSTPState.setStatus('current')
ciscoCNOSwitchNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 43, 2))
ciscoCNOSwitchNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 43, 2, 0))
ciscoCNOSwitchMIBComformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 43, 3))
ciscoCNOSwitchMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 43, 3, 1))
ciscoCNOSwitchMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 43, 3, 2))
ciscoCNOSwitchCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 43, 3, 1, 1)).setObjects(("CISCO-CNO-SWITCH-MIB", "ciscoCNOSwitchSysInfoGroup"), ("CISCO-CNO-SWITCH-MIB", "ciscoCNOSwitchConfigGroup"), ("CISCO-CNO-SWITCH-MIB", "ciscoCNOSwitchPortGroup"), ("CISCO-CNO-SWITCH-MIB", "ciscoCNOSwitchMonitorPortGroup"), ("CISCO-CNO-SWITCH-MIB", "ciscoCNOSwitchVlanGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCNOSwitchCompliance = ciscoCNOSwitchCompliance.setStatus('current')
ciscoCNOSwitchSysInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 43, 3, 2, 1)).setObjects(("CISCO-CNO-SWITCH-MIB", "cnosSysInfoSerialNo"), ("CISCO-CNO-SWITCH-MIB", "cnosSysInfoBoardRevision"), ("CISCO-CNO-SWITCH-MIB", "cnosSysInfoBootVersion"), ("CISCO-CNO-SWITCH-MIB", "cnosSysInfoAddrCapacity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCNOSwitchSysInfoGroup = ciscoCNOSwitchSysInfoGroup.setStatus('current')
ciscoCNOSwitchConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 43, 3, 2, 2)).setObjects(("CISCO-CNO-SWITCH-MIB", "cnosSysConfigReset"), ("CISCO-CNO-SWITCH-MIB", "cnosSysConfigDefaultReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCNOSwitchConfigGroup = ciscoCNOSwitchConfigGroup.setStatus('current')
ciscoCNOSwitchPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 43, 3, 2, 3)).setObjects(("CISCO-CNO-SWITCH-MIB", "cnosPortName"), ("CISCO-CNO-SWITCH-MIB", "cnosPortControllerRevision"), ("CISCO-CNO-SWITCH-MIB", "cnosPortDuplexAdmin"), ("CISCO-CNO-SWITCH-MIB", "cnosPortDuplexStatus"), ("CISCO-CNO-SWITCH-MIB", "cnosPortSpeedAdmin"), ("CISCO-CNO-SWITCH-MIB", "cnosPortSpeedStatus"), ("CISCO-CNO-SWITCH-MIB", "cnosPortLinkStatus"), ("CISCO-CNO-SWITCH-MIB", "cnosPortSTPPortFastMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCNOSwitchPortGroup = ciscoCNOSwitchPortGroup.setStatus('current')
ciscoCNOSwitchMonitorPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 43, 3, 2, 4)).setObjects(("CISCO-CNO-SWITCH-MIB", "cnosSysConfigMonitor"), ("CISCO-CNO-SWITCH-MIB", "cnosSysConfigMonitorPort"), ("CISCO-CNO-SWITCH-MIB", "cnosPortMonitoring"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCNOSwitchMonitorPortGroup = ciscoCNOSwitchMonitorPortGroup.setStatus('current')
ciscoCNOSwitchVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 43, 3, 2, 5)).setObjects(("CISCO-CNO-SWITCH-MIB", "cnosPortVlanMember"), ("CISCO-CNO-SWITCH-MIB", "cnosVlanSTPState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCNOSwitchVlanGroup = ciscoCNOSwitchVlanGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-CNO-SWITCH-MIB", cnosSysInfoSerialNo=cnosSysInfoSerialNo, cnosPortSTPPortFastMode=cnosPortSTPPortFastMode, cnosSysConfigMonitorPort=cnosSysConfigMonitorPort, ciscoCNOSwitchMIBComformance=ciscoCNOSwitchMIBComformance, ciscoCNOSwitchMonitorPortGroup=ciscoCNOSwitchMonitorPortGroup, ciscoCNOSwitchMIB=ciscoCNOSwitchMIB, ciscoCNOSwitchNotifications=ciscoCNOSwitchNotifications, cnosSysInfoBootVersion=cnosSysInfoBootVersion, cnosPortSpeedStatus=cnosPortSpeedStatus, cnosPortTable=cnosPortTable, cnosVlanSTPState=cnosVlanSTPState, cnosPort=cnosPort, ciscoCNOSwitchMIBObjects=ciscoCNOSwitchMIBObjects, ciscoCNOSwitchConfigGroup=ciscoCNOSwitchConfigGroup, cnosSysConfigMonitor=cnosSysConfigMonitor, cnosVlanTable=cnosVlanTable, cnosSysInfo=cnosSysInfo, cnosPortName=cnosPortName, ciscoCNOSwitchMIBCompliances=ciscoCNOSwitchMIBCompliances, cnosVlan=cnosVlan, cnosSysInfoBoardRevision=cnosSysInfoBoardRevision, cnosVlanIndex=cnosVlanIndex, cnosSysConfigReset=cnosSysConfigReset, ciscoCNOSwitchNotificationsPrefix=ciscoCNOSwitchNotificationsPrefix, cnosSysConfig=cnosSysConfig, ciscoCNOSwitchSysInfoGroup=ciscoCNOSwitchSysInfoGroup, PYSNMP_MODULE_ID=ciscoCNOSwitchMIB, cnosPortMonitoring=cnosPortMonitoring, cnosPortDuplexStatus=cnosPortDuplexStatus, cnosPortEntry=cnosPortEntry, ciscoCNOSwitchMIBGroups=ciscoCNOSwitchMIBGroups, cnosPortLinkStatus=cnosPortLinkStatus, cnosPortControllerRevision=cnosPortControllerRevision, ciscoCNOSwitchCompliance=ciscoCNOSwitchCompliance, cnosSysConfigDefaultReset=cnosSysConfigDefaultReset, cnosPortDuplexAdmin=cnosPortDuplexAdmin, cnosPortSpeedAdmin=cnosPortSpeedAdmin, cnosVlanEntry=cnosVlanEntry, cnosPortVlanMember=cnosPortVlanMember, ciscoCNOSwitchVlanGroup=ciscoCNOSwitchVlanGroup, cnosSysInfoAddrCapacity=cnosSysInfoAddrCapacity, ciscoCNOSwitchPortGroup=ciscoCNOSwitchPortGroup)
