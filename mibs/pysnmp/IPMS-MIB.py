#
# PySNMP MIB module IPMS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IPMS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:44:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, NotificationType, Unsigned32, iso, MibIdentifier, IpAddress, TimeTicks, Gauge32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter32, Bits, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "NotificationType", "Unsigned32", "iso", "MibIdentifier", "IpAddress", "TimeTicks", "Gauge32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter32", "Bits", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
xylanIpmsArch, = mibBuilder.importSymbols("XYLAN-BASE-MIB", "xylanIpmsArch")
ipmsMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 14, 1))
ipmsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1))
class DisplayString(OctetString):
    pass

ipmsGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 1))
ipmsVersion = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsVersion.setStatus('mandatory')
ipmsState = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmsState.setStatus('mandatory')
ipmsDIPAddressPortTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 2), )
if mibBuilder.loadTexts: ipmsDIPAddressPortTable.setStatus('mandatory')
ipmsDIPAddressPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 2, 1), ).setIndexNames((0, "IPMS-MIB", "ipmsDIPAddress"), (0, "IPMS-MIB", "ipmsDIPDstVlan"), (0, "IPMS-MIB", "ipmsDIPSlotNumber"), (0, "IPMS-MIB", "ipmsDIPPortNumber"), (0, "IPMS-MIB", "ipmsDIPPortInstance"), (0, "IPMS-MIB", "ipmsDIPPortService"))
if mibBuilder.loadTexts: ipmsDIPAddressPortEntry.setStatus('mandatory')
ipmsDIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsDIPAddress.setStatus('mandatory')
ipmsDIPDstVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsDIPDstVlan.setStatus('mandatory')
ipmsDIPDstVlanMask = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsDIPDstVlanMask.setStatus('mandatory')
ipmsDIPSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsDIPSlotNumber.setStatus('mandatory')
ipmsDIPPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsDIPPortNumber.setStatus('mandatory')
ipmsDIPPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsDIPPortType.setStatus('mandatory')
ipmsDIPPortInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsDIPPortInstance.setStatus('mandatory')
ipmsDIPPortService = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsDIPPortService.setStatus('mandatory')
ipmsDIPSrcIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 2, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsDIPSrcIPAddr.setStatus('mandatory')
ipmsDIPPortTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsDIPPortTimeout.setStatus('mandatory')
ipmsNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 3), )
if mibBuilder.loadTexts: ipmsNeighborTable.setStatus('mandatory')
ipmsNeighborTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 3, 1), ).setIndexNames((0, "IPMS-MIB", "ipmsNbrVlanID"), (0, "IPMS-MIB", "ipmsNbrSIPAddress"))
if mibBuilder.loadTexts: ipmsNeighborTableEntry.setStatus('mandatory')
ipmsNbrVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsNbrVlanID.setStatus('mandatory')
ipmsNbrVlanMask = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsNbrVlanMask.setStatus('mandatory')
ipmsNbrSIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsNbrSIPAddress.setStatus('mandatory')
ipmsNbrSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsNbrSlotNumber.setStatus('mandatory')
ipmsNbrPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsNbrPortNumber.setStatus('mandatory')
ipmsNbrPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsNbrPortType.setStatus('mandatory')
ipmsNbrPortInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsNbrPortInstance.setStatus('mandatory')
ipmsNbrPortService = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsNbrPortService.setStatus('mandatory')
ipmsNbrPortTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsNbrPortTimeout.setStatus('mandatory')
ipmsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 4), )
if mibBuilder.loadTexts: ipmsStatsTable.setStatus('mandatory')
ipmsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 4, 1), ).setIndexNames((0, "IPMS-MIB", "ipmsStatsDIPAddress"), (0, "IPMS-MIB", "ipmsStatsSIPAddress"), (0, "IPMS-MIB", "ipmsStatsVlanID"))
if mibBuilder.loadTexts: ipmsStatsEntry.setStatus('mandatory')
ipmsStatsDIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsStatsDIPAddress.setStatus('mandatory')
ipmsStatsSIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsStatsSIPAddress.setStatus('mandatory')
ipmsStatsVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsStatsVlanID.setStatus('mandatory')
ipmsStatsVlanMask = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsStatsVlanMask.setStatus('mandatory')
ipmsStatsPacketsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsStatsPacketsOut.setStatus('mandatory')
ipmsStatsSecsSinceZeroed = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsStatsSecsSinceZeroed.setStatus('mandatory')
ipmsStatsAveragePPS = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsStatsAveragePPS.setStatus('mandatory')
ipmsZeroStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 5))
ipmsZeroStatsFlag = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("zeroStats", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmsZeroStatsFlag.setStatus('mandatory')
ipmsForwardingTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6), )
if mibBuilder.loadTexts: ipmsForwardingTable.setStatus('mandatory')
ipmsFwdTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1), ).setIndexNames((0, "IPMS-MIB", "ipmsFwdDestIP"), (0, "IPMS-MIB", "ipmsFwdSourceIP"), (0, "IPMS-MIB", "ipmsFwdEntryType"), (0, "IPMS-MIB", "ipmsFwdSrcVlan"), (0, "IPMS-MIB", "ipmsFwdDstSlotNumber"), (0, "IPMS-MIB", "ipmsFwdDstPortNumber"), (0, "IPMS-MIB", "ipmsFwdDstPortInstance"), (0, "IPMS-MIB", "ipmsFwdDstPortService"))
if mibBuilder.loadTexts: ipmsFwdTableEntry.setStatus('mandatory')
ipmsFwdDestIP = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdDestIP.setStatus('mandatory')
ipmsFwdSourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdSourceIP.setStatus('mandatory')
ipmsFwdEntryType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("switched", 1), ("switchedError", 2), ("switchedPrimary", 3), ("routed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdEntryType.setStatus('mandatory')
ipmsFwdSrcVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdSrcVlan.setStatus('mandatory')
ipmsFwdSrcVlanMask = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdSrcVlanMask.setStatus('mandatory')
ipmsFwdSrcSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdSrcSlotNumber.setStatus('mandatory')
ipmsFwdSrcPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdSrcPortNumber.setStatus('mandatory')
ipmsFwdSrcPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdSrcPortType.setStatus('mandatory')
ipmsFwdSrcPortInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdSrcPortInstance.setStatus('mandatory')
ipmsFwdSrcPortService = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdSrcPortService.setStatus('mandatory')
ipmsFwdDstVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdDstVlan.setStatus('mandatory')
ipmsFwdDstVlanMask = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdDstVlanMask.setStatus('mandatory')
ipmsFwdDstSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdDstSlotNumber.setStatus('mandatory')
ipmsFwdDstPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdDstPortNumber.setStatus('mandatory')
ipmsFwdDstPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdDstPortType.setStatus('mandatory')
ipmsFwdDstPortInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdDstPortInstance.setStatus('mandatory')
ipmsFwdDstPortService = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdDstPortService.setStatus('mandatory')
ipmsFwdDstPortMbrFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("membershipRequested", 1), ("membershipNotRequested", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdDstPortMbrFlag.setStatus('mandatory')
ipmsFwdDstPortNbrFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("portIsNeighbor", 1), ("portIsNotNeighbor", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdDstPortNbrFlag.setStatus('mandatory')
ipmsFwdDstPortRteFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 6, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("portIsRouted", 1), ("portIsNotRouted", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsFwdDstPortRteFlag.setStatus('mandatory')
ipmsPolManParameters = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 7))
ipmsPolManDefaultPolicy = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permitted", 1), ("denied", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmsPolManDefaultPolicy.setStatus('mandatory')
ipmsPolManActiveTimer = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 7, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmsPolManActiveTimer.setStatus('mandatory')
ipmsPolManDeleteTimer = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 7, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmsPolManDeleteTimer.setStatus('mandatory')
ipmsPolManCacheTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 8), )
if mibBuilder.loadTexts: ipmsPolManCacheTable.setStatus('mandatory')
ipmsPolManCacheTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 8, 1), ).setIndexNames((0, "IPMS-MIB", "ipmsPolManMCGroup"), (0, "IPMS-MIB", "ipmsPolManSlot"), (0, "IPMS-MIB", "ipmsPolManPort"), (0, "IPMS-MIB", "ipmsPolManType"), (0, "IPMS-MIB", "ipmsPolManInstance"), (0, "IPMS-MIB", "ipmsPolManService"))
if mibBuilder.loadTexts: ipmsPolManCacheTableEntry.setStatus('mandatory')
ipmsPolManMCGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsPolManMCGroup.setStatus('mandatory')
ipmsPolManSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsPolManSlot.setStatus('mandatory')
ipmsPolManPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsPolManPort.setStatus('mandatory')
ipmsPolManType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsPolManType.setStatus('mandatory')
ipmsPolManInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsPolManInstance.setStatus('mandatory')
ipmsPolManService = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsPolManService.setStatus('mandatory')
ipmsPolManVlanGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 8, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsPolManVlanGroup.setStatus('mandatory')
ipmsPolManStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 8, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permitted", 1), ("denied", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsPolManStatus.setStatus('mandatory')
ipmsPolManState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("stale", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsPolManState.setStatus('mandatory')
ipmsPolManTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 14, 1, 1, 8, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmsPolManTimeout.setStatus('mandatory')
mibBuilder.exportSymbols("IPMS-MIB", ipmsFwdSrcVlanMask=ipmsFwdSrcVlanMask, ipmsDIPPortInstance=ipmsDIPPortInstance, ipmsDIPPortType=ipmsDIPPortType, ipmsStatsTable=ipmsStatsTable, ipmsState=ipmsState, ipmsDIPAddress=ipmsDIPAddress, ipmsPolManVlanGroup=ipmsPolManVlanGroup, ipmsDIPPortTimeout=ipmsDIPPortTimeout, ipmsNbrPortService=ipmsNbrPortService, ipmsStatsDIPAddress=ipmsStatsDIPAddress, ipmsFwdSrcVlan=ipmsFwdSrcVlan, ipmsPolManPort=ipmsPolManPort, ipmsDIPAddressPortEntry=ipmsDIPAddressPortEntry, ipmsStatsAveragePPS=ipmsStatsAveragePPS, ipmsDIPDstVlanMask=ipmsDIPDstVlanMask, ipmsDIPDstVlan=ipmsDIPDstVlan, ipmsFwdSrcSlotNumber=ipmsFwdSrcSlotNumber, ipmsPolManType=ipmsPolManType, ipmsFwdDstPortInstance=ipmsFwdDstPortInstance, ipmsFwdDstVlan=ipmsFwdDstVlan, ipmsPolManDefaultPolicy=ipmsPolManDefaultPolicy, ipmsFwdTableEntry=ipmsFwdTableEntry, ipmsStatsEntry=ipmsStatsEntry, ipmsPolManActiveTimer=ipmsPolManActiveTimer, ipmsPolManState=ipmsPolManState, ipmsStatsVlanID=ipmsStatsVlanID, ipmsPolManInstance=ipmsPolManInstance, ipmsDIPAddressPortTable=ipmsDIPAddressPortTable, ipmsFwdSourceIP=ipmsFwdSourceIP, ipmsDIPPortService=ipmsDIPPortService, ipmsZeroStatsFlag=ipmsZeroStatsFlag, ipmsFwdDstPortMbrFlag=ipmsFwdDstPortMbrFlag, ipmsFwdSrcPortInstance=ipmsFwdSrcPortInstance, ipmsPolManSlot=ipmsPolManSlot, ipmsNbrPortType=ipmsNbrPortType, ipmsPolManDeleteTimer=ipmsPolManDeleteTimer, ipmsMIB=ipmsMIB, ipmsDIPPortNumber=ipmsDIPPortNumber, ipmsDIPSlotNumber=ipmsDIPSlotNumber, ipmsFwdDstPortType=ipmsFwdDstPortType, ipmsStatsSIPAddress=ipmsStatsSIPAddress, ipmsFwdDstVlanMask=ipmsFwdDstVlanMask, ipmsFwdDstPortNbrFlag=ipmsFwdDstPortNbrFlag, ipmsStatsPacketsOut=ipmsStatsPacketsOut, ipmsFwdDstPortService=ipmsFwdDstPortService, ipmsPolManTimeout=ipmsPolManTimeout, ipmsNbrPortTimeout=ipmsNbrPortTimeout, ipmsPolManStatus=ipmsPolManStatus, ipmsForwardingTable=ipmsForwardingTable, ipmsNbrSlotNumber=ipmsNbrSlotNumber, ipmsPolManCacheTableEntry=ipmsPolManCacheTableEntry, ipmsFwdDstPortNumber=ipmsFwdDstPortNumber, ipmsGeneralGroup=ipmsGeneralGroup, ipmsNbrPortNumber=ipmsNbrPortNumber, ipmsFwdSrcPortType=ipmsFwdSrcPortType, ipmsFwdDestIP=ipmsFwdDestIP, ipmsNbrVlanMask=ipmsNbrVlanMask, ipmsPolManMCGroup=ipmsPolManMCGroup, DisplayString=DisplayString, ipmsFwdSrcPortService=ipmsFwdSrcPortService, ipmsVersion=ipmsVersion, ipmsNbrPortInstance=ipmsNbrPortInstance, ipmsFwdDstSlotNumber=ipmsFwdDstSlotNumber, ipmsNbrSIPAddress=ipmsNbrSIPAddress, ipmsNeighborTable=ipmsNeighborTable, ipmsStatsVlanMask=ipmsStatsVlanMask, ipmsFwdDstPortRteFlag=ipmsFwdDstPortRteFlag, ipmsFwdSrcPortNumber=ipmsFwdSrcPortNumber, ipmsNbrVlanID=ipmsNbrVlanID, ipmsFwdEntryType=ipmsFwdEntryType, ipmsPolManParameters=ipmsPolManParameters, ipmsZeroStatsGroup=ipmsZeroStatsGroup, ipmsNeighborTableEntry=ipmsNeighborTableEntry, ipmsMIBObjects=ipmsMIBObjects, ipmsStatsSecsSinceZeroed=ipmsStatsSecsSinceZeroed, ipmsDIPSrcIPAddr=ipmsDIPSrcIPAddr, ipmsPolManCacheTable=ipmsPolManCacheTable, ipmsPolManService=ipmsPolManService)
