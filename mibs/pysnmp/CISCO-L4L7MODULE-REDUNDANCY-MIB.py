#
# PySNMP MIB module CISCO-L4L7MODULE-REDUNDANCY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-L4L7MODULE-REDUNDANCY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:47:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter32, ModuleIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ObjectIdentity, Bits, Counter64, iso, Integer32, NotificationType, IpAddress, Gauge32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ModuleIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ObjectIdentity", "Bits", "Counter64", "iso", "Integer32", "NotificationType", "IpAddress", "Gauge32", "MibIdentifier")
TextualConvention, TimeStamp, TruthValue, DisplayString, RowStatus, StorageType = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "TruthValue", "DisplayString", "RowStatus", "StorageType")
ciscoL4L7moduleRedundancyMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 650))
ciscoL4L7moduleRedundancyMIB.setRevisions(('2008-04-04 00:00', '2008-03-13 00:00',))
if mibBuilder.loadTexts: ciscoL4L7moduleRedundancyMIB.setLastUpdated('200804040000Z')
if mibBuilder.loadTexts: ciscoL4L7moduleRedundancyMIB.setOrganization('Cisco Systems, Inc.')
ciscoLmRedundancyMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 650, 0))
ciscoLmRedundancyMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 650, 1))
ciscoLmRedundancyMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 650, 2))
clrConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1))
clrStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2))
clrNotifObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 3))
class CiscoL4L7RedState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("other", 1), ("nonRedundant", 2), ("initializing", 3), ("negotiation", 4), ("active", 5), ("standbyCold", 6), ("standbyConfig", 7), ("standbyBulk", 8), ("standbyHot", 9), ("standbyWarm", 10))

clrPeerConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 1), )
if mibBuilder.loadTexts: clrPeerConfigTable.setStatus('current')
clrPeerConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrPeerId"))
if mibBuilder.loadTexts: clrPeerConfigEntry.setStatus('current')
clrPeerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: clrPeerId.setStatus('current')
clrPeerInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 1, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clrPeerInterface.setStatus('current')
clrPeerBackupInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 1, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clrPeerBackupInterface.setStatus('current')
clrPeerHeartBeatTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 1, 1, 4), Unsigned32().clone(1)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: clrPeerHeartBeatTime.setStatus('current')
clrPeerHeartBeatCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 1, 1, 5), Unsigned32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clrPeerHeartBeatCount.setStatus('current')
clrPeerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 1, 1, 6), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clrPeerStorageType.setStatus('current')
clrPeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clrPeerRowStatus.setStatus('current')
clrPeerInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 2), )
if mibBuilder.loadTexts: clrPeerInfoTable.setStatus('current')
clrPeerInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrPeerId"))
if mibBuilder.loadTexts: clrPeerInfoEntry.setStatus('current')
clrPeerOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("init", 1), ("localIPaddr", 2), ("peerIPAddr", 3), ("startHB", 4), ("tcpSetup", 5), ("srgCheck", 6), ("licCheck", 7), ("compatible", 8), ("peerInterfaceDown", 9), ("down", 10), ("error", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrPeerOperStatus.setStatus('current')
clrPeerIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrPeerIpAddressType.setStatus('current')
clrPeerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrPeerIpAddress.setStatus('current')
clrPeerSoftwareCompatibilty = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("init", 1), ("compatible", 2), ("inCompatible", 3), ("warmCompatible", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrPeerSoftwareCompatibilty.setStatus('current')
clrPeerLicenseCompatibility = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("init", 1), ("compatible", 2), ("inCompatible", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrPeerLicenseCompatibility.setStatus('current')
clrPeerRedGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrPeerRedGroups.setStatus('current')
clrRedundancyConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 3), )
if mibBuilder.loadTexts: clrRedundancyConfigTable.setStatus('current')
clrRedundancyConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedGroupId"))
if mibBuilder.loadTexts: clrRedundancyConfigEntry.setStatus('current')
clrRedGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: clrRedGroupId.setStatus('current')
clrRedPeerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clrRedPeerId.setStatus('current')
clrRedPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clrRedPriority.setStatus('current')
clrRedPreempt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 3, 1, 4), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clrRedPreempt.setStatus('current')
clrRedFailOverTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 3, 1, 5), Unsigned32().clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clrRedFailOverTime.setStatus('current')
clrRedState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 3, 1, 6), CiscoL4L7RedState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrRedState.setStatus('current')
clrRedStateChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 3, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrRedStateChangeTime.setStatus('current')
clrRedContext = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 3, 1, 8), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clrRedContext.setStatus('current')
clrRedStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 3, 1, 9), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clrRedStorageType.setStatus('current')
clrRedRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 3, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clrRedRowStatus.setStatus('current')
clrRedundancyInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 4), )
if mibBuilder.loadTexts: clrRedundancyInfoTable.setStatus('current')
clrRedundancyInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 4, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedGroupId"))
if mibBuilder.loadTexts: clrRedundancyInfoEntry.setStatus('current')
clrRedundancyPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrRedundancyPriority.setStatus('current')
clrRedundancyState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 4, 1, 2), CiscoL4L7RedState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrRedundancyState.setStatus('current')
clrRedundancyStateChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 4, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrRedundancyStateChangeTime.setStatus('current')
clrRedundancyIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 4, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrRedundancyIpAddressType.setStatus('current')
clrRedundancyIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 1, 4, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrRedundancyIpAddress.setStatus('current')
clrLBStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2, 1), )
if mibBuilder.loadTexts: clrLBStatsTable.setStatus('current')
clrLBStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedGroupId"))
if mibBuilder.loadTexts: clrLBStatsEntry.setStatus('current')
clrLBStatsSharedStickyEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrLBStatsSharedStickyEntries.setStatus('current')
clrLBStatsSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrLBStatsSentPackets.setStatus('current')
clrLBStatsSendFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrLBStatsSendFailures.setStatus('current')
clrLBStatsDroppedEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrLBStatsDroppedEntries.setStatus('current')
clrLBStatsReceivedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrLBStatsReceivedPackets.setStatus('current')
clrLBStatsReceiveFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrLBStatsReceiveFailures.setStatus('current')
clrHAStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2, 2), )
if mibBuilder.loadTexts: clrHAStatsTable.setStatus('current')
clrHAStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrPeerId"))
if mibBuilder.loadTexts: clrHAStatsEntry.setStatus('current')
clrHAStatsTxHeartBeatMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrHAStatsTxHeartBeatMsgs.setStatus('current')
clrHAStatsRxHeartBeatMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrHAStatsRxHeartBeatMsgs.setStatus('current')
clrHAStatsMissedHeartBeatMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrHAStatsMissedHeartBeatMsgs.setStatus('current')
clrHAStatsRxUniDirectionalHeartBeatMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrHAStatsRxUniDirectionalHeartBeatMsgs.setStatus('current')
clrHAStatsHeartBeatTimeoutMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrHAStatsHeartBeatTimeoutMismatches.setStatus('current')
clrHAStatsPeerUpEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrHAStatsPeerUpEvents.setStatus('current')
clrHAStatsPeerDownEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 2, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrHAStatsPeerDownEvents.setStatus('current')
clrStateChangeNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 650, 1, 3, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clrStateChangeNotifEnabled.setStatus('current')
clrRedundancyStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 650, 0, 1)).setObjects(("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedState"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedStateChangeTime"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedPeerId"))
if mibBuilder.loadTexts: clrRedundancyStateChange.setStatus('current')
ciscoLmRedundancyMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 650, 2, 1))
ciscoLmRedundancyMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 650, 2, 2))
ciscoLmRedundancyMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 650, 2, 1, 1)).setObjects(("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrPeerConfigGroup"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedConfigGroup"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedundancyStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLmRedundancyMIBCompliance = ciscoLmRedundancyMIBCompliance.setStatus('current')
clrPeerConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 650, 2, 2, 1)).setObjects(("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrPeerInterface"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrPeerBackupInterface"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrPeerHeartBeatTime"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrPeerHeartBeatCount"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrPeerOperStatus"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrPeerIpAddressType"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrPeerIpAddress"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrPeerStorageType"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrPeerRowStatus"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrPeerSoftwareCompatibilty"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrPeerLicenseCompatibility"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrPeerRedGroups"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clrPeerConfigGroup = clrPeerConfigGroup.setStatus('current')
clrRedConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 650, 2, 2, 2)).setObjects(("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedPeerId"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedPriority"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedPreempt"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedFailOverTime"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedState"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedStateChangeTime"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedStorageType"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedRowStatus"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedContext"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clrRedConfigGroup = clrRedConfigGroup.setStatus('current')
clrRedInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 650, 2, 2, 3)).setObjects(("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedundancyPriority"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedundancyState"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedundancyStateChangeTime"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedundancyIpAddressType"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedundancyIpAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clrRedInfoGroup = clrRedInfoGroup.setStatus('current')
cslbxNotifControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 650, 2, 2, 4)).setObjects(("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrStateChangeNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cslbxNotifControlGroup = cslbxNotifControlGroup.setStatus('current')
cslbxNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 650, 2, 2, 5)).setObjects(("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrRedundancyStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cslbxNotifGroup = cslbxNotifGroup.setStatus('current')
clrRedundancyStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 650, 2, 2, 6)).setObjects(("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrHAStatsTxHeartBeatMsgs"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrHAStatsRxHeartBeatMsgs"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrHAStatsMissedHeartBeatMsgs"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrHAStatsRxUniDirectionalHeartBeatMsgs"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrHAStatsHeartBeatTimeoutMismatches"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrHAStatsPeerUpEvents"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrHAStatsPeerDownEvents"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrLBStatsSharedStickyEntries"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrLBStatsSentPackets"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrLBStatsSendFailures"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrLBStatsDroppedEntries"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrLBStatsReceivedPackets"), ("CISCO-L4L7MODULE-REDUNDANCY-MIB", "clrLBStatsReceiveFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clrRedundancyStatsGroup = clrRedundancyStatsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-L4L7MODULE-REDUNDANCY-MIB", clrRedundancyConfigEntry=clrRedundancyConfigEntry, clrPeerLicenseCompatibility=clrPeerLicenseCompatibility, clrPeerInterface=clrPeerInterface, ciscoL4L7moduleRedundancyMIB=ciscoL4L7moduleRedundancyMIB, clrNotifObjects=clrNotifObjects, clrPeerIpAddress=clrPeerIpAddress, clrLBStatsEntry=clrLBStatsEntry, clrHAStatsTable=clrHAStatsTable, clrHAStatsRxHeartBeatMsgs=clrHAStatsRxHeartBeatMsgs, clrRedState=clrRedState, ciscoLmRedundancyMIBNotifs=ciscoLmRedundancyMIBNotifs, clrRedundancyInfoEntry=clrRedundancyInfoEntry, clrRedConfigGroup=clrRedConfigGroup, clrPeerBackupInterface=clrPeerBackupInterface, clrLBStatsReceivedPackets=clrLBStatsReceivedPackets, clrStats=clrStats, ciscoLmRedundancyMIBCompliance=ciscoLmRedundancyMIBCompliance, clrRedFailOverTime=clrRedFailOverTime, PYSNMP_MODULE_ID=ciscoL4L7moduleRedundancyMIB, clrPeerIpAddressType=clrPeerIpAddressType, clrConfig=clrConfig, clrRedStateChangeTime=clrRedStateChangeTime, clrLBStatsDroppedEntries=clrLBStatsDroppedEntries, clrRedInfoGroup=clrRedInfoGroup, cslbxNotifGroup=cslbxNotifGroup, clrRedRowStatus=clrRedRowStatus, clrHAStatsEntry=clrHAStatsEntry, clrPeerInfoEntry=clrPeerInfoEntry, clrPeerHeartBeatTime=clrPeerHeartBeatTime, clrPeerStorageType=clrPeerStorageType, clrPeerOperStatus=clrPeerOperStatus, clrRedPreempt=clrRedPreempt, clrRedStorageType=clrRedStorageType, clrPeerConfigEntry=clrPeerConfigEntry, clrRedundancyState=clrRedundancyState, clrHAStatsPeerDownEvents=clrHAStatsPeerDownEvents, CiscoL4L7RedState=CiscoL4L7RedState, clrRedundancyIpAddress=clrRedundancyIpAddress, clrHAStatsTxHeartBeatMsgs=clrHAStatsTxHeartBeatMsgs, clrPeerRowStatus=clrPeerRowStatus, clrPeerConfigTable=clrPeerConfigTable, clrPeerRedGroups=clrPeerRedGroups, ciscoLmRedundancyMIBObjects=ciscoLmRedundancyMIBObjects, clrRedGroupId=clrRedGroupId, clrHAStatsRxUniDirectionalHeartBeatMsgs=clrHAStatsRxUniDirectionalHeartBeatMsgs, clrHAStatsPeerUpEvents=clrHAStatsPeerUpEvents, clrLBStatsSentPackets=clrLBStatsSentPackets, clrRedundancyConfigTable=clrRedundancyConfigTable, clrRedContext=clrRedContext, clrRedPriority=clrRedPriority, clrLBStatsSharedStickyEntries=clrLBStatsSharedStickyEntries, clrRedundancyInfoTable=clrRedundancyInfoTable, clrLBStatsTable=clrLBStatsTable, clrHAStatsHeartBeatTimeoutMismatches=clrHAStatsHeartBeatTimeoutMismatches, clrLBStatsReceiveFailures=clrLBStatsReceiveFailures, clrRedundancyPriority=clrRedundancyPriority, ciscoLmRedundancyMIBCompliances=ciscoLmRedundancyMIBCompliances, clrPeerSoftwareCompatibilty=clrPeerSoftwareCompatibilty, clrRedundancyStateChange=clrRedundancyStateChange, clrPeerId=clrPeerId, clrRedundancyStatsGroup=clrRedundancyStatsGroup, clrRedundancyStateChangeTime=clrRedundancyStateChangeTime, clrPeerHeartBeatCount=clrPeerHeartBeatCount, clrPeerInfoTable=clrPeerInfoTable, clrHAStatsMissedHeartBeatMsgs=clrHAStatsMissedHeartBeatMsgs, clrPeerConfigGroup=clrPeerConfigGroup, cslbxNotifControlGroup=cslbxNotifControlGroup, ciscoLmRedundancyMIBConformance=ciscoLmRedundancyMIBConformance, clrLBStatsSendFailures=clrLBStatsSendFailures, clrRedundancyIpAddressType=clrRedundancyIpAddressType, clrRedPeerId=clrRedPeerId, clrStateChangeNotifEnabled=clrStateChangeNotifEnabled, ciscoLmRedundancyMIBGroups=ciscoLmRedundancyMIBGroups)
