#
# PySNMP MIB module CADANT-DQOS-GATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CADANT-DQOS-GATE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:28:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
cadPCMibObjects, = mibBuilder.importSymbols("CADANT-CMTS-PACKETCABLE-MIB", "cadPCMibObjects")
InetAddressIPv4or6, = mibBuilder.importSymbols("CADANT-TC", "InetAddressIPv4or6")
docsQosIfDirection, = mibBuilder.importSymbols("DOCS-QOS3-MIB", "docsQosIfDirection")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ModuleIdentity, MibIdentifier, IpAddress, Unsigned32, Integer32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, TimeTicks, Counter32, Counter64, iso, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibIdentifier", "IpAddress", "Unsigned32", "Integer32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "TimeTicks", "Counter32", "Counter64", "iso", "Bits", "Gauge32")
TextualConvention, RowStatus, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TruthValue", "DisplayString")
cadDQoSMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2))
cadDQoSMib.setRevisions(('2001-08-09 00:00', '2003-01-07 00:00', '2003-03-21 00:00', '2003-05-23 00:00', '2004-01-19 00:00', '2004-02-11 00:00', '2005-09-30 00:00', '2007-10-24 00:00',))
if mibBuilder.loadTexts: cadDQoSMib.setLastUpdated('200710250000Z')
if mibBuilder.loadTexts: cadDQoSMib.setOrganization('Arris International, Inc.')
class CadDQoSSource(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("snmp", 1), ("configurationFile", 2), ("externalDatabase", 3), ("other", 4), ("policyServer", 5), ("compiledIntoCode", 6))

class PCReasonCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 127))
    namedValues = NamedValues(("noReason", -1), ("normal", 0), ("resourceReassignment", 1), ("reservationMaintFail", 2), ("deregistration", 3), ("timerT0Expiry", 4), ("timerT1Expiry", 5), ("timerT7Expiry", 6), ("timerT8Expiry", 7), ("newGateForFlows", 8), ("unspecified", 127))

class SDPString(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1024a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 1024)

cadDQoSMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1))
cadDQoSConfigBase = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1))
cadDQoSGateTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1), )
if mibBuilder.loadTexts: cadDQoSGateTable.setStatus('current')
cadDQoSGateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1), ).setIndexNames((0, "DOCS-QOS3-MIB", "docsQosIfDirection"), (0, "CADANT-DQOS-GATE-MIB", "cadDQoSGateId"))
if mibBuilder.loadTexts: cadDQoSGateEntry.setStatus('current')
cadDQoSGateId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cadDQoSGateId.setStatus('current')
cadDQoSGateSubscriberID = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 2), InetAddressIPv4or6()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateSubscriberID.setStatus('current')
cadDQoSGateClassifierProtoID = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateClassifierProtoID.setStatus('current')
cadDQoSGateClassifierSrcIP = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 4), InetAddressIPv4or6()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateClassifierSrcIP.setStatus('current')
cadDQoSGateClassifierDestIP = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 5), InetAddressIPv4or6()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateClassifierDestIP.setStatus('current')
cadDQoSGateClassifierSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateClassifierSrcPort.setStatus('current')
cadDQoSGateClassifierDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateClassifierDestPort.setStatus('current')
cadDQoSMgmtGateCommitNotAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateCommitNotAllowed.setStatus('current')
cadDQoSGateAutoCommit = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateAutoCommit.setStatus('current')
cadDQoSGateResourceID = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 17), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateResourceID.setStatus('current')
cadDQoSGateSessionClass = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unspecified", 0), ("normalVoIP", 1), ("emergency", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateSessionClass.setStatus('current')
cadDQoSGateDSField = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateDSField.setStatus('current')
cadDQoSGateTimerT7 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000)).clone(200)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateTimerT7.setStatus('current')
cadDQoSGateTimerT8 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateTimerT8.setStatus('current')
cadDQoSGateReserveRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 22), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateReserveRequest.setStatus('current')
cadDQoSGateCommited = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 23), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateCommited.setStatus('current')
cadDQoSTearFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 24), PCReasonCode().clone('noReason')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSTearFlows.setStatus('current')
cadDQoSGateESPDupContent = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 25), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateESPDupContent.setStatus('current')
cadDQoSGateESPDfCCCIp = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 26), InetAddressIPv4or6()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateESPDfCCCIp.setStatus('current')
cadDQoSGateESPDfCCCPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 27), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateESPDfCCCPort.setStatus('current')
cadDQoSSFID = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 28), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSSFID.setStatus('current')
cadDQoSGateESPCCCId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 29), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateESPCCCId.setStatus('current')
cadDQoSGateESPSrcCCCIp = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 30), InetAddressIPv4or6()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateESPSrcCCCIp.setStatus('current')
cadDQoSGateServiceClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateServiceClassName.setStatus('current')
cadDQoSGateUsSFSchedType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 32), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateUsSFSchedType.setStatus('current')
cadDQoSGateUsNomGrantInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 33), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateUsNomGrantInterval.setStatus('current')
cadDQoSGateUsTolGrantJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 34), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateUsTolGrantJitter.setStatus('current')
cadDQoSGateUsGrantsPerInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 35), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateUsGrantsPerInterval.setStatus('current')
cadDQoSGateUsUnsolitedGrantSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 36), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateUsUnsolitedGrantSize.setStatus('current')
cadDQoSGateUsReqTransPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 37), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateUsReqTransPolicy.setStatus('current')
cadDQoSGateUsNomPollingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 38), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateUsNomPollingInterval.setStatus('current')
cadDQoSGateUsTolPollJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 39), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateUsTolPollJitter.setStatus('current')
cadDQoSGateUsIpToSOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 40), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateUsIpToSOverride.setStatus('current')
cadDQoSGateUsMaxConcatBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 41), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateUsMaxConcatBurst.setStatus('current')
cadDQoSGateDsTrafficPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 42), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateDsTrafficPriority.setStatus('current')
cadDQoSGateDsMaxSustainedRate = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 43), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateDsMaxSustainedRate.setStatus('current')
cadDQoSGateDsMaxTrafBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 44), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateDsMaxTrafBurst.setStatus('current')
cadDQoSGateDsMinReservedTrafRate = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 45), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateDsMinReservedTrafRate.setStatus('current')
cadDQoSGateDsMinPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 46), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateDsMinPacketSize.setStatus('current')
cadDQoSGateDsMaxLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 1, 1, 47), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSGateDsMaxLatency.setStatus('current')
cadDQoSMgmtGateTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2), )
if mibBuilder.loadTexts: cadDQoSMgmtGateTable.setStatus('current')
cadDQoSMgmtGateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1), ).setIndexNames((0, "DOCS-QOS3-MIB", "docsQosIfDirection"), (0, "CADANT-DQOS-GATE-MIB", "cadDQoSGateId"))
if mibBuilder.loadTexts: cadDQoSMgmtGateEntry.setStatus('current')
cadDQoSMgmtGateControllerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 1), InetAddressIPv4or6()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateControllerIP.setStatus('current')
cadDQoSMgmtGateRemoteGateIP = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 2), InetAddressIPv4or6()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateRemoteGateIP.setStatus('current')
cadDQoSMgmtGateRemoteGatePort = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateRemoteGatePort.setStatus('current')
cadDQoSMgmtGateRemoteGateNoRequireGateOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateRemoteGateNoRequireGateOpen.setStatus('current')
cadDQoSMgmtGateRemoteGateNoSendGateOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateRemoteGateNoSendGateOpen.setStatus('current')
cadDQoSMgmtGateRemoteGateID = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateRemoteGateID.setStatus('current')
cadDQoSMgmtGateRemoteGateAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(100))).clone(namedValues=NamedValues(("md5BasedMac", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateRemoteGateAlgorithm.setStatus('current')
cadDQoSMgmtGateRemoteGateSecurityKey = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateRemoteGateSecurityKey.setStatus('current')
cadDQoSMgmtGateEventGenPriRKSIP = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 9), InetAddressIPv4or6()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateEventGenPriRKSIP.setStatus('current')
cadDQoSMgmtGateEventGenPriRKSPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateEventGenPriRKSPort.setStatus('current')
cadDQoSMgmtGateEventGenBatchIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateEventGenBatchIndicator.setStatus('current')
cadDQoSMgmtGateEventGenSecRKSIP = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 12), InetAddressIPv4or6()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateEventGenSecRKSIP.setStatus('current')
cadDQoSMgmtGateEventGenSecRKSPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 13), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateEventGenSecRKSPort.setStatus('current')
cadDQoSMgmtGateEventGenBillCorrID = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 14), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateEventGenBillCorrID.setStatus('current')
cadDQoSMgmtGateMediaConnCalledParty = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateMediaConnCalledParty.setStatus('current')
cadDQoSMgmtGateMediaConnRoutingNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateMediaConnRoutingNum.setStatus('current')
cadDQoSMgmtGateMediaConnChargeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateMediaConnChargeNum.setStatus('current')
cadDQoSMgmtGateMediaConnLocRouteNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateMediaConnLocRouteNum.setStatus('current')
cadDQoSMgmtGateESPDfCDCIP = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 19), InetAddressIPv4or6()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateESPDfCDCIP.setStatus('current')
cadDQoSMgmtGateESPDfCDCPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 20), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateESPDfCDCPort.setStatus('current')
cadDQoSMgmtGateESPDupEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 21), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateESPDupEvent.setStatus('current')
cadDQoSMgmtGateSDPStrings = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 25), SDPString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateSDPStrings.setStatus('current')
cadDQoSMgmtGateState = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("allocated", 1), ("authorized", 2), ("reserved", 3), ("remoteCommitted", 4), ("localCommitted", 5), ("committed", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateState.setStatus('current')
cadDQoSMgmtGateSource = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 2, 1, 27), CadDQoSSource()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSMgmtGateSource.setStatus('current')
cadDQoSAuthFlowSpecTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 3), )
if mibBuilder.loadTexts: cadDQoSAuthFlowSpecTable.setStatus('current')
cadDQoSAuthFlowSpecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 3, 1), ).setIndexNames((0, "DOCS-QOS3-MIB", "docsQosIfDirection"), (0, "CADANT-DQOS-GATE-MIB", "cadDQoSGateId"), (0, "CADANT-DQOS-GATE-MIB", "cadDQoSAuthFlowSpecIdx"))
if mibBuilder.loadTexts: cadDQoSAuthFlowSpecEntry.setStatus('current')
cadDQoSAuthFlowSpecIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cadDQoSAuthFlowSpecIdx.setStatus('current')
cadDQoSAuthFlowSpecBucketDepthb = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 3, 1, 2), Unsigned32()).setUnits('octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSAuthFlowSpecBucketDepthb.setStatus('current')
cadDQoSAuthFlowSpecBucketRater = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 3, 1, 3), Unsigned32()).setUnits('bits per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSAuthFlowSpecBucketRater.setStatus('current')
cadDQoSAuthFlowSpecPeakRatep = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 3, 1, 4), Unsigned32()).setUnits('bits per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSAuthFlowSpecPeakRatep.setStatus('current')
cadDQoSAuthFlowSpecMinPolicedUnitm = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 3, 1, 5), Unsigned32()).setUnits('octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSAuthFlowSpecMinPolicedUnitm.setStatus('current')
cadDQoSAuthFlowSpecMaxPktSizeM = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 3, 1, 6), Unsigned32()).setUnits('octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSAuthFlowSpecMaxPktSizeM.setStatus('current')
cadDQoSAuthFlowSpecReservedRateR = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 3, 1, 7), Unsigned32()).setUnits('bits per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSAuthFlowSpecReservedRateR.setStatus('current')
cadDQoSAuthFlowSpecSlackTermS = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 3, 1, 8), Unsigned32()).setUnits('microseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSAuthFlowSpecSlackTermS.setStatus('current')
cadDQoSAuthFlowSpecSubscriberID = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 3, 1, 9), InetAddressIPv4or6()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSAuthFlowSpecSubscriberID.setStatus('current')
cadDQoSTimerT0 = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSTimerT0.setStatus('current')
cadDQoSTimerT1 = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600)).clone(250)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSTimerT1.setStatus('current')
cadDQoSTimerT2 = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60)).clone(2)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSTimerT2.setStatus('current')
cadDQoSTimerT3 = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 50)).clone(40)).setUnits('tenths of a second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSTimerT3.setStatus('current')
cadDQoSTimerT4 = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(5)).setUnits('tenths of a second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSTimerT4.setStatus('current')
cadDQoSTimerT5 = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(5)).setUnits('tenths of a second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSTimerT5.setStatus('current')
cadDQoSTimerT6 = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 2, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(5)).setUnits('tenths of a second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDQoSTimerT6.setStatus('current')
mibBuilder.exportSymbols("CADANT-DQOS-GATE-MIB", cadDQoSGateUsGrantsPerInterval=cadDQoSGateUsGrantsPerInterval, cadDQoSTimerT6=cadDQoSTimerT6, cadDQoSGateResourceID=cadDQoSGateResourceID, cadDQoSMgmtGateSource=cadDQoSMgmtGateSource, cadDQoSGateDsMaxLatency=cadDQoSGateDsMaxLatency, cadDQoSGateClassifierDestPort=cadDQoSGateClassifierDestPort, cadDQoSAuthFlowSpecEntry=cadDQoSAuthFlowSpecEntry, cadDQoSMgmtGateESPDupEvent=cadDQoSMgmtGateESPDupEvent, cadDQoSGateServiceClassName=cadDQoSGateServiceClassName, cadDQoSTimerT4=cadDQoSTimerT4, cadDQoSMgmtGateRemoteGateID=cadDQoSMgmtGateRemoteGateID, cadDQoSMgmtGateRemoteGateSecurityKey=cadDQoSMgmtGateRemoteGateSecurityKey, cadDQoSMgmtGateESPDfCDCPort=cadDQoSMgmtGateESPDfCDCPort, cadDQoSGateDSField=cadDQoSGateDSField, cadDQoSMgmtGateEventGenPriRKSPort=cadDQoSMgmtGateEventGenPriRKSPort, cadDQoSMgmtGateTable=cadDQoSMgmtGateTable, cadDQoSGateClassifierSrcPort=cadDQoSGateClassifierSrcPort, cadDQoSGateESPDupContent=cadDQoSGateESPDupContent, cadDQoSGateDsTrafficPriority=cadDQoSGateDsTrafficPriority, cadDQoSAuthFlowSpecSlackTermS=cadDQoSAuthFlowSpecSlackTermS, cadDQoSTimerT3=cadDQoSTimerT3, cadDQoSMgmtGateRemoteGatePort=cadDQoSMgmtGateRemoteGatePort, SDPString=SDPString, cadDQoSAuthFlowSpecTable=cadDQoSAuthFlowSpecTable, cadDQoSGateDsMinPacketSize=cadDQoSGateDsMinPacketSize, cadDQoSGateUsNomPollingInterval=cadDQoSGateUsNomPollingInterval, cadDQoSGateUsUnsolitedGrantSize=cadDQoSGateUsUnsolitedGrantSize, cadDQoSGateESPDfCCCPort=cadDQoSGateESPDfCCCPort, cadDQoSMgmtGateRemoteGateNoSendGateOpen=cadDQoSMgmtGateRemoteGateNoSendGateOpen, cadDQoSMgmtGateEntry=cadDQoSMgmtGateEntry, cadDQoSMib=cadDQoSMib, cadDQoSGateESPSrcCCCIp=cadDQoSGateESPSrcCCCIp, cadDQoSMgmtGateEventGenBillCorrID=cadDQoSMgmtGateEventGenBillCorrID, cadDQoSGateTimerT7=cadDQoSGateTimerT7, cadDQoSAuthFlowSpecIdx=cadDQoSAuthFlowSpecIdx, CadDQoSSource=CadDQoSSource, cadDQoSMgmtGateMediaConnCalledParty=cadDQoSMgmtGateMediaConnCalledParty, cadDQoSMgmtGateESPDfCDCIP=cadDQoSMgmtGateESPDfCDCIP, cadDQoSMgmtGateControllerIP=cadDQoSMgmtGateControllerIP, cadDQoSMgmtGateCommitNotAllowed=cadDQoSMgmtGateCommitNotAllowed, cadDQoSGateEntry=cadDQoSGateEntry, cadDQoSAuthFlowSpecBucketDepthb=cadDQoSAuthFlowSpecBucketDepthb, cadDQoSAuthFlowSpecMaxPktSizeM=cadDQoSAuthFlowSpecMaxPktSizeM, cadDQoSGateUsSFSchedType=cadDQoSGateUsSFSchedType, cadDQoSGateClassifierDestIP=cadDQoSGateClassifierDestIP, cadDQoSGateUsTolGrantJitter=cadDQoSGateUsTolGrantJitter, PYSNMP_MODULE_ID=cadDQoSMib, cadDQoSTimerT2=cadDQoSTimerT2, cadDQoSMgmtGateEventGenBatchIndicator=cadDQoSMgmtGateEventGenBatchIndicator, cadDQoSMibObjects=cadDQoSMibObjects, cadDQoSSFID=cadDQoSSFID, cadDQoSMgmtGateEventGenPriRKSIP=cadDQoSMgmtGateEventGenPriRKSIP, cadDQoSMgmtGateSDPStrings=cadDQoSMgmtGateSDPStrings, cadDQoSGateESPDfCCCIp=cadDQoSGateESPDfCCCIp, cadDQoSGateAutoCommit=cadDQoSGateAutoCommit, cadDQoSGateUsNomGrantInterval=cadDQoSGateUsNomGrantInterval, cadDQoSGateTimerT8=cadDQoSGateTimerT8, cadDQoSGateClassifierProtoID=cadDQoSGateClassifierProtoID, cadDQoSGateUsReqTransPolicy=cadDQoSGateUsReqTransPolicy, cadDQoSGateCommited=cadDQoSGateCommited, cadDQoSGateId=cadDQoSGateId, cadDQoSGateUsMaxConcatBurst=cadDQoSGateUsMaxConcatBurst, cadDQoSMgmtGateMediaConnLocRouteNum=cadDQoSMgmtGateMediaConnLocRouteNum, cadDQoSGateClassifierSrcIP=cadDQoSGateClassifierSrcIP, cadDQoSAuthFlowSpecBucketRater=cadDQoSAuthFlowSpecBucketRater, cadDQoSTimerT5=cadDQoSTimerT5, cadDQoSTearFlows=cadDQoSTearFlows, cadDQoSGateDsMaxSustainedRate=cadDQoSGateDsMaxSustainedRate, cadDQoSGateSessionClass=cadDQoSGateSessionClass, cadDQoSAuthFlowSpecPeakRatep=cadDQoSAuthFlowSpecPeakRatep, cadDQoSMgmtGateMediaConnChargeNum=cadDQoSMgmtGateMediaConnChargeNum, cadDQoSMgmtGateState=cadDQoSMgmtGateState, cadDQoSGateSubscriberID=cadDQoSGateSubscriberID, cadDQoSMgmtGateMediaConnRoutingNum=cadDQoSMgmtGateMediaConnRoutingNum, cadDQoSGateReserveRequest=cadDQoSGateReserveRequest, cadDQoSMgmtGateRemoteGateNoRequireGateOpen=cadDQoSMgmtGateRemoteGateNoRequireGateOpen, cadDQoSTimerT0=cadDQoSTimerT0, cadDQoSTimerT1=cadDQoSTimerT1, cadDQoSGateUsTolPollJitter=cadDQoSGateUsTolPollJitter, cadDQoSMgmtGateEventGenSecRKSPort=cadDQoSMgmtGateEventGenSecRKSPort, cadDQoSGateDsMaxTrafBurst=cadDQoSGateDsMaxTrafBurst, cadDQoSAuthFlowSpecMinPolicedUnitm=cadDQoSAuthFlowSpecMinPolicedUnitm, cadDQoSGateTable=cadDQoSGateTable, cadDQoSAuthFlowSpecReservedRateR=cadDQoSAuthFlowSpecReservedRateR, cadDQoSGateUsIpToSOverride=cadDQoSGateUsIpToSOverride, PCReasonCode=PCReasonCode, cadDQoSMgmtGateEventGenSecRKSIP=cadDQoSMgmtGateEventGenSecRKSIP, cadDQoSConfigBase=cadDQoSConfigBase, cadDQoSGateESPCCCId=cadDQoSGateESPCCCId, cadDQoSAuthFlowSpecSubscriberID=cadDQoSAuthFlowSpecSubscriberID, cadDQoSGateDsMinReservedTrafRate=cadDQoSGateDsMinReservedTrafRate, cadDQoSMgmtGateRemoteGateAlgorithm=cadDQoSMgmtGateRemoteGateAlgorithm, cadDQoSMgmtGateRemoteGateIP=cadDQoSMgmtGateRemoteGateIP)
