#
# PySNMP MIB module NETSCREEN-CERTIFICATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-CERTIFICATE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
netscreenVpn, netscreenVpnMibModule = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenVpn", "netscreenVpnMibModule")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, iso, NotificationType, ModuleIdentity, Counter64, Unsigned32, ObjectIdentity, Bits, Counter32, MibIdentifier, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "NotificationType", "ModuleIdentity", "Counter64", "Unsigned32", "ObjectIdentity", "Bits", "Counter32", "MibIdentifier", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
netscreenCertificateMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 4, 0, 7))
netscreenCertificateMibModule.setRevisions(('2004-05-03 00:00', '2004-03-03 00:00', '2003-11-12 00:00', '2001-09-28 00:00', '2001-05-15 00:00',))
if mibBuilder.loadTexts: netscreenCertificateMibModule.setLastUpdated('200405032022Z')
if mibBuilder.loadTexts: netscreenCertificateMibModule.setOrganization('Juniper Networks, Inc.')
nsVpnCert = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 4, 7))
nsVpnCertDefTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 4, 7, 1), )
if mibBuilder.loadTexts: nsVpnCertDefTable.setStatus('current')
nsVpnCertDefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 4, 7, 1, 1), ).setIndexNames((0, "NETSCREEN-CERTIFICATE-MIB", "nsVpnCertDefIndex"))
if mibBuilder.loadTexts: nsVpnCertDefEntry.setStatus('current')
nsVpnCertDefIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnCertDefIndex.setStatus('current')
nsVpnCertDefLdap = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 7, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnCertDefLdap.setStatus('current')
nsVpnCertDefCrlUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 7, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnCertDefCrlUrl.setStatus('current')
nsVpnCertDefRefresh = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 7, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnCertDefRefresh.setStatus('current')
nsVpnCertDefX509 = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("partial", 0), ("full", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnCertDefX509.setStatus('current')
nsVpnCertDefVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 7, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnCertDefVsys.setStatus('current')
nsVpnCertCfgTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 4, 7, 2), )
if mibBuilder.loadTexts: nsVpnCertCfgTable.setStatus('current')
nsVpnCertCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 4, 7, 2, 1), ).setIndexNames((0, "NETSCREEN-CERTIFICATE-MIB", "nsVpnCertCfgIndex"))
if mibBuilder.loadTexts: nsVpnCertCfgEntry.setStatus('current')
nsVpnCertCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnCertCfgIndex.setStatus('current')
nsVpnCertCfgType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ca", 0), ("local", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnCertCfgType.setStatus('current')
nsVpnCertCfgSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 7, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnCertCfgSubject.setStatus('current')
nsVpnCertCfgExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 7, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnCertCfgExpire.setStatus('current')
nsVpnCertCfgIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 7, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnCertCfgIssuer.setStatus('current')
nsVpnCertCfgVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 7, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnCertCfgVsys.setStatus('current')
mibBuilder.exportSymbols("NETSCREEN-CERTIFICATE-MIB", PYSNMP_MODULE_ID=netscreenCertificateMibModule, netscreenCertificateMibModule=netscreenCertificateMibModule, nsVpnCertCfgExpire=nsVpnCertCfgExpire, nsVpnCertDefLdap=nsVpnCertDefLdap, nsVpnCertCfgIndex=nsVpnCertCfgIndex, nsVpnCertCfgSubject=nsVpnCertCfgSubject, nsVpnCertDefX509=nsVpnCertDefX509, nsVpnCertCfgEntry=nsVpnCertCfgEntry, nsVpnCertCfgIssuer=nsVpnCertCfgIssuer, nsVpnCertDefCrlUrl=nsVpnCertDefCrlUrl, nsVpnCert=nsVpnCert, nsVpnCertDefEntry=nsVpnCertDefEntry, nsVpnCertDefIndex=nsVpnCertDefIndex, nsVpnCertDefTable=nsVpnCertDefTable, nsVpnCertCfgType=nsVpnCertCfgType, nsVpnCertDefRefresh=nsVpnCertDefRefresh, nsVpnCertDefVsys=nsVpnCertDefVsys, nsVpnCertCfgTable=nsVpnCertCfgTable, nsVpnCertCfgVsys=nsVpnCertCfgVsys)
