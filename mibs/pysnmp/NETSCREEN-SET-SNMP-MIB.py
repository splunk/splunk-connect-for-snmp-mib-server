#
# PySNMP MIB module NETSCREEN-SET-SNMP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-SET-SNMP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
netscreenSetting, netscreenSettingMibModule = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenSetting", "netscreenSettingMibModule")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, NotificationType, Unsigned32, IpAddress, Bits, iso, ModuleIdentity, Counter32, ObjectIdentity, MibIdentifier, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "NotificationType", "Unsigned32", "IpAddress", "Bits", "iso", "ModuleIdentity", "Counter32", "ObjectIdentity", "MibIdentifier", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
netscreenSetSnmpMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 7, 0, 9))
netscreenSetSnmpMibModule.setRevisions(('2004-05-03 00:00', '2004-03-03 00:00', '2003-11-10 00:00', '2001-09-28 00:00', '2001-05-27 00:00',))
if mibBuilder.loadTexts: netscreenSetSnmpMibModule.setLastUpdated('200405032022Z')
if mibBuilder.loadTexts: netscreenSetSnmpMibModule.setOrganization('Juniper Networks, Inc.')
nsSetSNMP = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 7, 9))
nsSetSnmpSysName = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 9, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetSnmpSysName.setStatus('current')
nsSetSnmpContact = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 9, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetSnmpContact.setStatus('current')
nsSetSnmpLocation = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 9, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetSnmpLocation.setStatus('current')
nsSetSnmpVPNEnable = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 9, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetSnmpVPNEnable.setStatus('current')
nsSetSnmpCommHostTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 7, 9, 5), )
if mibBuilder.loadTexts: nsSetSnmpCommHostTable.setStatus('current')
nsSetSnmpCommHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 7, 9, 5, 1), ).setIndexNames((0, "NETSCREEN-SET-SNMP-MIB", "nsSetSnmpCommHostIndex"))
if mibBuilder.loadTexts: nsSetSnmpCommHostEntry.setStatus('current')
nsSetSnmpCommHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 9, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetSnmpCommHostIndex.setStatus('current')
nsSetSnmpCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 9, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetSnmpCommunity.setStatus('current')
nsSetSnmpHostInComm = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 9, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetSnmpHostInComm.setStatus('current')
nsSetSnmpWritePermit = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 9, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetSnmpWritePermit.setStatus('current')
nsSetSnmpTrapPermit = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 9, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetSnmpTrapPermit.setStatus('current')
nsSetSnmpTrafficAlarmPermit = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 9, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetSnmpTrafficAlarmPermit.setStatus('current')
mibBuilder.exportSymbols("NETSCREEN-SET-SNMP-MIB", nsSetSnmpCommHostIndex=nsSetSnmpCommHostIndex, nsSetSnmpTrapPermit=nsSetSnmpTrapPermit, nsSetSnmpWritePermit=nsSetSnmpWritePermit, nsSetSnmpHostInComm=nsSetSnmpHostInComm, PYSNMP_MODULE_ID=netscreenSetSnmpMibModule, nsSetSnmpTrafficAlarmPermit=nsSetSnmpTrafficAlarmPermit, nsSetSnmpContact=nsSetSnmpContact, nsSetSnmpLocation=nsSetSnmpLocation, nsSetSnmpSysName=nsSetSnmpSysName, nsSetSnmpCommHostTable=nsSetSnmpCommHostTable, nsSetSnmpCommunity=nsSetSnmpCommunity, nsSetSnmpVPNEnable=nsSetSnmpVPNEnable, netscreenSetSnmpMibModule=netscreenSetSnmpMibModule, nsSetSnmpCommHostEntry=nsSetSnmpCommHostEntry, nsSetSNMP=nsSetSNMP)
