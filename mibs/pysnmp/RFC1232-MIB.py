#
# PySNMP MIB module RFC1232-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RFC1232-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:48:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, ObjectIdentity, transmission, Counter64, IpAddress, Bits, iso, TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, NotificationType, Integer32, Counter32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ObjectIdentity", "transmission", "Counter64", "IpAddress", "Bits", "iso", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "NotificationType", "Integer32", "Counter32", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ds1 = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 18))
ds1ConfigTable = MibTable((1, 3, 6, 1, 2, 1, 10, 18, 1), )
if mibBuilder.loadTexts: ds1ConfigTable.setStatus('mandatory')
ds1ConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 18, 1, 1), ).setIndexNames((0, "RFC1232-MIB", "ds1CSUIndex"))
if mibBuilder.loadTexts: ds1ConfigEntry.setStatus('mandatory')
ds1CSUIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1CSUIndex.setStatus('mandatory')
ds1Index = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1Index.setStatus('mandatory')
ds1TimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1TimeElapsed.setStatus('mandatory')
ds1ValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1ValidIntervals.setStatus('mandatory')
ds1LineType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("ds1ESF", 2), ("ds1D4", 3), ("ds1ANSI-ESF", 4), ("ds1G704", 5), ("ds1G704-CRC", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1LineType.setStatus('mandatory')
ds1ZeroCoding = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ds1JammedBit", 1), ("ds1B8ZS", 2), ("ds1InvertedHDLC", 3), ("ds1HDB3", 4), ("ds1ZBTSI", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1ZeroCoding.setStatus('mandatory')
ds1Loopback = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ds1NoLoop", 1), ("ds1LocalLoopbackLocalSide", 2), ("ds1LocalLoopbackRemoteSide", 3), ("ds1RemoteLoopbackLocalSide", 4), ("ds1RemoteLoopbackRemoteSide", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1Loopback.setStatus('mandatory')
ds1SendCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ds1OtherTest", 1), ("ds1SendNoCode", 2), ("ds1SendSetCode", 3), ("ds1SendResetCode", 4), ("ds1SendQRSS", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1SendCode.setStatus('mandatory')
ds1YellowAlarm = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ds1NoYellowAlarm", 1), ("ds1YellowAlarm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1YellowAlarm.setStatus('mandatory')
ds1RedAlarm = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ds1NoRedAlarm", 1), ("ds1RedAlarm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1RedAlarm.setStatus('mandatory')
ds1CircuitIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1CircuitIdentifier.setStatus('mandatory')
ds1IntervalTable = MibTable((1, 3, 6, 1, 2, 1, 10, 18, 2), )
if mibBuilder.loadTexts: ds1IntervalTable.setStatus('mandatory')
ds1IntervalEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 18, 2, 1), ).setIndexNames((0, "RFC1232-MIB", "ds1IntervalIndex"), (0, "RFC1232-MIB", "ds1IntervalNumber"))
if mibBuilder.loadTexts: ds1IntervalEntry.setStatus('mandatory')
ds1IntervalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1IntervalIndex.setStatus('mandatory')
ds1IntervalNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1IntervalNumber.setStatus('mandatory')
ds1IntervalESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1IntervalESs.setStatus('mandatory')
ds1IntervalSESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1IntervalSESs.setStatus('mandatory')
ds1IntervalSEFSs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1IntervalSEFSs.setStatus('mandatory')
ds1IntervalUASs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1IntervalUASs.setStatus('mandatory')
ds1IntervalCSSs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1IntervalCSSs.setStatus('mandatory')
ds1IntervalBPVs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1IntervalBPVs.setStatus('mandatory')
ds1IntervalCVs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1IntervalCVs.setStatus('mandatory')
ds1CurrentTable = MibTable((1, 3, 6, 1, 2, 1, 10, 18, 3), )
if mibBuilder.loadTexts: ds1CurrentTable.setStatus('mandatory')
ds1CurrentEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 18, 3, 1), ).setIndexNames((0, "RFC1232-MIB", "ds1CurrentIndex"))
if mibBuilder.loadTexts: ds1CurrentEntry.setStatus('mandatory')
ds1CurrentIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1CurrentIndex.setStatus('mandatory')
ds1CurrentESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1CurrentESs.setStatus('mandatory')
ds1CurrentSESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1CurrentSESs.setStatus('mandatory')
ds1CurrentSEFSs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1CurrentSEFSs.setStatus('mandatory')
ds1CurrentUASs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1CurrentUASs.setStatus('mandatory')
ds1CurrentCSSs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1CurrentCSSs.setStatus('mandatory')
ds1CurrentBPVs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1CurrentBPVs.setStatus('mandatory')
ds1CurrentCVs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1CurrentCVs.setStatus('mandatory')
ds1TotalTable = MibTable((1, 3, 6, 1, 2, 1, 10, 18, 4), )
if mibBuilder.loadTexts: ds1TotalTable.setStatus('mandatory')
ds1TotalEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 18, 4, 1), ).setIndexNames((0, "RFC1232-MIB", "ds1TotalIndex"))
if mibBuilder.loadTexts: ds1TotalEntry.setStatus('mandatory')
ds1TotalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1TotalIndex.setStatus('mandatory')
ds1TotalESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1TotalESs.setStatus('mandatory')
ds1TotalSESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1TotalSESs.setStatus('mandatory')
ds1TotalSEFSs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1TotalSEFSs.setStatus('mandatory')
ds1TotalUASs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1TotalUASs.setStatus('mandatory')
ds1TotalCSSs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1TotalCSSs.setStatus('mandatory')
ds1TotalBPVs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1TotalBPVs.setStatus('mandatory')
ds1TotalCVs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1TotalCVs.setStatus('mandatory')
ds1FracTable = MibTable((1, 3, 6, 1, 2, 1, 10, 18, 5), )
if mibBuilder.loadTexts: ds1FracTable.setStatus('mandatory')
ds1FracEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 18, 5, 1), ).setIndexNames((0, "RFC1232-MIB", "ds1FracIndex"), (0, "RFC1232-MIB", "ds1FracNumber"))
if mibBuilder.loadTexts: ds1FracEntry.setStatus('mandatory')
ds1FracIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1FracIndex.setStatus('mandatory')
ds1FracNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1FracNumber.setStatus('mandatory')
ds1FracIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 18, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1FracIfIndex.setStatus('mandatory')
mibBuilder.exportSymbols("RFC1232-MIB", ds1Index=ds1Index, ds1TotalEntry=ds1TotalEntry, ds1IntervalEntry=ds1IntervalEntry, ds1IntervalNumber=ds1IntervalNumber, ds1CurrentTable=ds1CurrentTable, ds1CurrentEntry=ds1CurrentEntry, ds1FracTable=ds1FracTable, ds1CurrentUASs=ds1CurrentUASs, ds1FracNumber=ds1FracNumber, ds1YellowAlarm=ds1YellowAlarm, ds1IntervalCVs=ds1IntervalCVs, ds1TimeElapsed=ds1TimeElapsed, ds1IntervalBPVs=ds1IntervalBPVs, ds1ConfigEntry=ds1ConfigEntry, ds1=ds1, ds1ConfigTable=ds1ConfigTable, ds1CircuitIdentifier=ds1CircuitIdentifier, ds1ZeroCoding=ds1ZeroCoding, ds1CurrentSESs=ds1CurrentSESs, ds1SendCode=ds1SendCode, ds1FracIfIndex=ds1FracIfIndex, ds1FracIndex=ds1FracIndex, ds1CurrentIndex=ds1CurrentIndex, ds1TotalIndex=ds1TotalIndex, ds1TotalSEFSs=ds1TotalSEFSs, ds1FracEntry=ds1FracEntry, ds1TotalSESs=ds1TotalSESs, ds1CurrentBPVs=ds1CurrentBPVs, ds1TotalTable=ds1TotalTable, ds1IntervalCSSs=ds1IntervalCSSs, ds1TotalBPVs=ds1TotalBPVs, ds1IntervalSEFSs=ds1IntervalSEFSs, ds1IntervalSESs=ds1IntervalSESs, ds1TotalCSSs=ds1TotalCSSs, ds1IntervalESs=ds1IntervalESs, ds1CurrentESs=ds1CurrentESs, ds1CurrentCSSs=ds1CurrentCSSs, ds1CSUIndex=ds1CSUIndex, ds1IntervalTable=ds1IntervalTable, ds1CurrentSEFSs=ds1CurrentSEFSs, ds1CurrentCVs=ds1CurrentCVs, ds1TotalUASs=ds1TotalUASs, ds1TotalCVs=ds1TotalCVs, ds1TotalESs=ds1TotalESs, ds1Loopback=ds1Loopback, ds1IntervalUASs=ds1IntervalUASs, ds1LineType=ds1LineType, ds1ValidIntervals=ds1ValidIntervals, ds1RedAlarm=ds1RedAlarm, ds1IntervalIndex=ds1IntervalIndex)
