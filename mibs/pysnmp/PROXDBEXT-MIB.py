#
# PySNMP MIB module PROXDBEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PROXDBEXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:33:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
proxDbExt, = mibBuilder.importSymbols("APENT-MIB", "proxDbExt")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Gauge32, IpAddress, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, TimeTicks, NotificationType, Unsigned32, ObjectIdentity, Integer32, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Gauge32", "IpAddress", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "TimeTicks", "NotificationType", "Unsigned32", "ObjectIdentity", "Integer32", "Counter64", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
apProxDbExtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2467, 1, 54, 1))
if mibBuilder.loadTexts: apProxDbExtMib.setLastUpdated('9707202000Z')
if mibBuilder.loadTexts: apProxDbExtMib.setOrganization('ArrowPoint Communications Inc.')
apProxDbTTLProbed = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 54, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apProxDbTTLProbed.setStatus('current')
apProxDbTTLAssigned = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 54, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apProxDbTTLAssigned.setStatus('current')
apProxDb8StatTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 54, 6), )
if mibBuilder.loadTexts: apProxDb8StatTable.setStatus('current')
apProxDb8StatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 54, 6, 1), ).setIndexNames((0, "PROXDBEXT-MIB", "apProx8StatIpAddress"))
if mibBuilder.loadTexts: apProxDb8StatEntry.setStatus('current')
apProx8StatIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx8StatIpAddress.setStatus('current')
apProx8StatHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx8StatHitCount.setStatus('current')
apProx8StatAdvMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx8StatAdvMask.setStatus('current')
apProxDb16StatTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 54, 7), )
if mibBuilder.loadTexts: apProxDb16StatTable.setStatus('current')
apProxDb16StatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 54, 7, 1), ).setIndexNames((0, "PROXDBEXT-MIB", "apProx16StatIpAddress"))
if mibBuilder.loadTexts: apProxDb16StatEntry.setStatus('current')
apProx16StatIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx16StatIpAddress.setStatus('current')
apProx16StatHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx16StatHitCount.setStatus('current')
apProx16StatAdvMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx16StatAdvMask.setStatus('current')
apProxDb24StatTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 54, 8), )
if mibBuilder.loadTexts: apProxDb24StatTable.setStatus('current')
apProxDb24StatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 54, 8, 1), ).setIndexNames((0, "PROXDBEXT-MIB", "apProx24StatIpAddress"))
if mibBuilder.loadTexts: apProxDb24StatEntry.setStatus('current')
apProx24StatIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx24StatIpAddress.setStatus('current')
apProx24StatHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx24StatHitCount.setStatus('current')
apProx24StatAdvMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx24StatAdvMask.setStatus('current')
apProxDbVplStatTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 54, 9), )
if mibBuilder.loadTexts: apProxDbVplStatTable.setStatus('current')
apProxDbVplStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 54, 9, 1), ).setIndexNames((0, "PROXDBEXT-MIB", "apProxVplStatIpAddress"), (0, "PROXDBEXT-MIB", "apProxVplStatIpPrefix"))
if mibBuilder.loadTexts: apProxDbVplStatEntry.setStatus('current')
apProxVplStatIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 9, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProxVplStatIpAddress.setStatus('current')
apProxVplStatIpPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProxVplStatIpPrefix.setStatus('current')
apProxVplStatHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProxVplStatHitCount.setStatus('current')
apProxVplStatAdvMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProxVplStatAdvMask.setStatus('current')
apProxDb8MetricTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 54, 10), )
if mibBuilder.loadTexts: apProxDb8MetricTable.setStatus('current')
apProxDb8MetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 54, 10, 1), ).setIndexNames((0, "PROXDBEXT-MIB", "apProx8MetricIpAddress"), (0, "PROXDBEXT-MIB", "apProx8MetricZoneIndex"))
if mibBuilder.loadTexts: apProxDb8MetricEntry.setStatus('current')
apProx8MetricIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 10, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx8MetricIpAddress.setStatus('current')
apProx8MetricZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx8MetricZoneIndex.setStatus('current')
apProx8MetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx8MetricValue.setStatus('current')
apProxDb16MetricTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 54, 11), )
if mibBuilder.loadTexts: apProxDb16MetricTable.setStatus('current')
apProxDb16MetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 54, 11, 1), ).setIndexNames((0, "PROXDBEXT-MIB", "apProx16MetricIpAddress"), (0, "PROXDBEXT-MIB", "apProx16MetricZoneIndex"))
if mibBuilder.loadTexts: apProxDb16MetricEntry.setStatus('current')
apProx16MetricIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 11, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx16MetricIpAddress.setStatus('current')
apProx16MetricZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx16MetricZoneIndex.setStatus('current')
apProx16MetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx16MetricValue.setStatus('current')
apProxDb24MetricTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 54, 12), )
if mibBuilder.loadTexts: apProxDb24MetricTable.setStatus('current')
apProxDb24MetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 54, 12, 1), ).setIndexNames((0, "PROXDBEXT-MIB", "apProx24MetricIpAddress"), (0, "PROXDBEXT-MIB", "apProx24MetricZoneIndex"))
if mibBuilder.loadTexts: apProxDb24MetricEntry.setStatus('current')
apProx24MetricIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 12, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx24MetricIpAddress.setStatus('current')
apProx24MetricZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx24MetricZoneIndex.setStatus('current')
apProx24MetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProx24MetricValue.setStatus('current')
apProxDbVplMetricTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 54, 13), )
if mibBuilder.loadTexts: apProxDbVplMetricTable.setStatus('current')
apProxDbVplMetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 54, 13, 1), ).setIndexNames((0, "PROXDBEXT-MIB", "apProxVplMetricIpAddress"), (0, "PROXDBEXT-MIB", "apProxVplMetricIpPrefix"), (0, "PROXDBEXT-MIB", "apProxVplMetricZoneIndex"))
if mibBuilder.loadTexts: apProxDbVplMetricEntry.setStatus('current')
apProxVplMetricIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 13, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProxVplMetricIpAddress.setStatus('current')
apProxVplMetricIpPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProxVplMetricIpPrefix.setStatus('current')
apProxVplMetricZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProxVplMetricZoneIndex.setStatus('current')
apProxVplMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 54, 13, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apProxVplMetricValue.setStatus('current')
mibBuilder.exportSymbols("PROXDBEXT-MIB", apProxDb24MetricTable=apProxDb24MetricTable, apProx8MetricValue=apProx8MetricValue, apProxDbExtMib=apProxDbExtMib, apProxDb16StatEntry=apProxDb16StatEntry, PYSNMP_MODULE_ID=apProxDbExtMib, apProxDbTTLProbed=apProxDbTTLProbed, apProx16StatHitCount=apProx16StatHitCount, apProxDb8MetricEntry=apProxDb8MetricEntry, apProx16MetricValue=apProx16MetricValue, apProx24MetricZoneIndex=apProx24MetricZoneIndex, apProxDb24StatTable=apProxDb24StatTable, apProx16StatIpAddress=apProx16StatIpAddress, apProxVplMetricIpPrefix=apProxVplMetricIpPrefix, apProx16StatAdvMask=apProx16StatAdvMask, apProx24MetricValue=apProx24MetricValue, apProxVplMetricValue=apProxVplMetricValue, apProx24StatHitCount=apProx24StatHitCount, apProxDbVplMetricEntry=apProxDbVplMetricEntry, apProx8MetricIpAddress=apProx8MetricIpAddress, apProxDb24MetricEntry=apProxDb24MetricEntry, apProxDbVplStatEntry=apProxDbVplStatEntry, apProxVplStatIpPrefix=apProxVplStatIpPrefix, apProxDb16StatTable=apProxDb16StatTable, apProxVplStatAdvMask=apProxVplStatAdvMask, apProxDb8StatTable=apProxDb8StatTable, apProxDb16MetricTable=apProxDb16MetricTable, apProxDb8StatEntry=apProxDb8StatEntry, apProxVplStatHitCount=apProxVplStatHitCount, apProx24MetricIpAddress=apProx24MetricIpAddress, apProxVplStatIpAddress=apProxVplStatIpAddress, apProx8MetricZoneIndex=apProx8MetricZoneIndex, apProxVplMetricZoneIndex=apProxVplMetricZoneIndex, apProx24StatAdvMask=apProx24StatAdvMask, apProx8StatHitCount=apProx8StatHitCount, apProxDb16MetricEntry=apProxDb16MetricEntry, apProxVplMetricIpAddress=apProxVplMetricIpAddress, apProxDbVplStatTable=apProxDbVplStatTable, apProx8StatIpAddress=apProx8StatIpAddress, apProx24StatIpAddress=apProx24StatIpAddress, apProxDb8MetricTable=apProxDb8MetricTable, apProx16MetricIpAddress=apProx16MetricIpAddress, apProxDbTTLAssigned=apProxDbTTLAssigned, apProx8StatAdvMask=apProx8StatAdvMask, apProxDbVplMetricTable=apProxDbVplMetricTable, apProxDb24StatEntry=apProxDb24StatEntry, apProx16MetricZoneIndex=apProx16MetricZoneIndex)
