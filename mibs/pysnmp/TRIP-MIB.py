#
# PySNMP MIB module TRIP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TRIP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:20:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
InetAddress, InetPortNumber, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetPortNumber", "InetAddressType")
applRFC2788Group, applIndex = mibBuilder.importSymbols("NETWORK-SERVICES-MIB", "applRFC2788Group", "applIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, mib_2, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Integer32, ModuleIdentity, Counter32, iso, Counter64, Gauge32, ObjectIdentity, TimeTicks, IpAddress, MibIdentifier, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "mib-2", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Integer32", "ModuleIdentity", "Counter32", "iso", "Counter64", "Gauge32", "ObjectIdentity", "TimeTicks", "IpAddress", "MibIdentifier", "Unsigned32")
DisplayString, StorageType, TimeStamp, RowStatus, TextualConvention, TruthValue, TimeInterval, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "StorageType", "TimeStamp", "RowStatus", "TextualConvention", "TruthValue", "TimeInterval", "DateAndTime")
TripId, TripAppProtocol, TripAddressFamily, TripProtocolVersion, TripCommunityId, TripSendReceiveMode, TripItad = mibBuilder.importSymbols("TRIP-TC-MIB", "TripId", "TripAppProtocol", "TripAddressFamily", "TripProtocolVersion", "TripCommunityId", "TripSendReceiveMode", "TripItad")
tripMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 116))
tripMIB.setRevisions(('2004-09-02 00:00',))
if mibBuilder.loadTexts: tripMIB.setLastUpdated('200409020000Z')
if mibBuilder.loadTexts: tripMIB.setOrganization('IETF IPTel Working Group. Mailing list: iptel@lists.bell-labs.com')
tripMIBNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 116, 0))
tripMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 116, 1))
tripMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 116, 2))
tripMIBNotifObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 116, 3))
tripMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 116, 2, 1))
tripMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 116, 2, 2))
tripCfgTable = MibTable((1, 3, 6, 1, 2, 1, 116, 1, 1), )
if mibBuilder.loadTexts: tripCfgTable.setStatus('current')
tripCfgEntry = MibTableRow((1, 3, 6, 1, 2, 1, 116, 1, 1, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"))
if mibBuilder.loadTexts: tripCfgEntry.setStatus('current')
tripCfgProtocolVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 1), TripProtocolVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripCfgProtocolVersion.setStatus('current')
tripCfgItad = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 2), TripItad()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tripCfgItad.setStatus('current')
tripCfgIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 3), TripId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripCfgIdentifier.setStatus('current')
tripCfgAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tripCfgAdminStatus.setStatus('current')
tripCfgOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("up", 1), ("down", 2), ("faulty", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripCfgOperStatus.setStatus('current')
tripCfgAddrIAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripCfgAddrIAddrType.setStatus('current')
tripCfgAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripCfgAddr.setStatus('current')
tripCfgPort = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 8), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tripCfgPort.setStatus('current')
tripCfgMinItadOriginationInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(30)).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tripCfgMinItadOriginationInterval.setStatus('current')
tripCfgMinRouteAdvertisementInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(30)).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tripCfgMinRouteAdvertisementInterval.setStatus('current')
tripCfgMaxPurgeTime = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(10)).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tripCfgMaxPurgeTime.setStatus('current')
tripCfgDisableTime = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(180)).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tripCfgDisableTime.setStatus('current')
tripCfgSendReceiveMode = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 13), TripSendReceiveMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripCfgSendReceiveMode.setStatus('current')
tripCfgStorage = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 1, 1, 14), StorageType().clone('nonVolatile')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tripCfgStorage.setStatus('current')
tripRouteTypeTable = MibTable((1, 3, 6, 1, 2, 1, 116, 1, 2), )
if mibBuilder.loadTexts: tripRouteTypeTable.setStatus('current')
tripRouteTypeEntry = MibTableRow((1, 3, 6, 1, 2, 1, 116, 1, 2, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"), (0, "TRIP-MIB", "tripRouteTypeAddrInetType"), (0, "TRIP-MIB", "tripRouteTypeAddr"), (0, "TRIP-MIB", "tripRouteTypePort"), (0, "TRIP-MIB", "tripRouteTypeProtocolId"), (0, "TRIP-MIB", "tripRouteTypeAddrFamilyId"))
if mibBuilder.loadTexts: tripRouteTypeEntry.setStatus('current')
tripRouteTypeAddrInetType = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tripRouteTypeAddrInetType.setStatus('current')
tripRouteTypeAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: tripRouteTypeAddr.setStatus('current')
tripRouteTypePort = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 2, 1, 3), InetPortNumber())
if mibBuilder.loadTexts: tripRouteTypePort.setStatus('current')
tripRouteTypeProtocolId = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 2, 1, 4), TripAppProtocol())
if mibBuilder.loadTexts: tripRouteTypeProtocolId.setStatus('current')
tripRouteTypeAddrFamilyId = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 2, 1, 5), TripAddressFamily())
if mibBuilder.loadTexts: tripRouteTypeAddrFamilyId.setStatus('current')
tripRouteTypePeer = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteTypePeer.setStatus('current')
tripSupportedCommunityTable = MibTable((1, 3, 6, 1, 2, 1, 116, 1, 3), )
if mibBuilder.loadTexts: tripSupportedCommunityTable.setStatus('current')
tripSupportedCommunityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 116, 1, 3, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"), (0, "TRIP-MIB", "tripSupportedCommunityId"))
if mibBuilder.loadTexts: tripSupportedCommunityEntry.setStatus('current')
tripSupportedCommunityId = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 3, 1, 1), TripCommunityId())
if mibBuilder.loadTexts: tripSupportedCommunityId.setStatus('current')
tripSupportedCommunityItad = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 3, 1, 2), TripItad()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tripSupportedCommunityItad.setStatus('current')
tripSupportedCommunityStorage = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 3, 1, 3), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tripSupportedCommunityStorage.setStatus('current')
tripSupportedCommunityRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tripSupportedCommunityRowStatus.setStatus('current')
tripPeerTable = MibTable((1, 3, 6, 1, 2, 1, 116, 1, 4), )
if mibBuilder.loadTexts: tripPeerTable.setStatus('current')
tripPeerEntry = MibTableRow((1, 3, 6, 1, 2, 1, 116, 1, 4, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"), (0, "TRIP-MIB", "tripPeerRemoteAddrInetType"), (0, "TRIP-MIB", "tripPeerRemoteAddr"), (0, "TRIP-MIB", "tripPeerRemotePort"))
if mibBuilder.loadTexts: tripPeerEntry.setStatus('current')
tripPeerRemoteAddrInetType = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tripPeerRemoteAddrInetType.setStatus('current')
tripPeerRemoteAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 2), InetAddress())
if mibBuilder.loadTexts: tripPeerRemoteAddr.setStatus('current')
tripPeerRemotePort = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 3), InetPortNumber())
if mibBuilder.loadTexts: tripPeerRemotePort.setStatus('current')
tripPeerIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 4), TripId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripPeerIdentifier.setStatus('current')
tripPeerState = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("idle", 1), ("connect", 2), ("active", 3), ("openSent", 4), ("openConfirm", 5), ("established", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripPeerState.setStatus('current')
tripPeerAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tripPeerAdminStatus.setStatus('current')
tripPeerNegotiatedVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 7), TripProtocolVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripPeerNegotiatedVersion.setStatus('current')
tripPeerSendReceiveMode = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 8), TripSendReceiveMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripPeerSendReceiveMode.setStatus('current')
tripPeerRemoteItad = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 9), TripItad()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripPeerRemoteItad.setStatus('current')
tripPeerConnectRetryInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(120)).setUnits('Seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tripPeerConnectRetryInterval.setStatus('current')
tripPeerMaxRetryInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(360)).setUnits('Seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tripPeerMaxRetryInterval.setStatus('current')
tripPeerHoldTime = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tripPeerHoldTime.setStatus('current')
tripPeerKeepAlive = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tripPeerKeepAlive.setStatus('current')
tripPeerHoldTimeConfigured = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 14), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), )).clone(240)).setUnits('Seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tripPeerHoldTimeConfigured.setStatus('current')
tripPeerKeepAliveConfigured = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(30)).setUnits('Seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tripPeerKeepAliveConfigured.setStatus('current')
tripPeerMaxPurgeTime = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setUnits('Seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tripPeerMaxPurgeTime.setStatus('current')
tripPeerDisableTime = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(180)).setUnits('Seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tripPeerDisableTime.setStatus('current')
tripPeerLearned = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 18), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripPeerLearned.setStatus('current')
tripPeerStorage = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 19), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tripPeerStorage.setStatus('current')
tripPeerRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 4, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tripPeerRowStatus.setStatus('current')
tripPeerStatisticsTable = MibTable((1, 3, 6, 1, 2, 1, 116, 1, 5), )
if mibBuilder.loadTexts: tripPeerStatisticsTable.setStatus('current')
tripPeerStatisticsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 116, 1, 5, 1), )
tripPeerEntry.registerAugmentions(("TRIP-MIB", "tripPeerStatisticsEntry"))
tripPeerStatisticsEntry.setIndexNames(*tripPeerEntry.getIndexNames())
if mibBuilder.loadTexts: tripPeerStatisticsEntry.setStatus('current')
tripPeerInUpdates = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripPeerInUpdates.setStatus('current')
tripPeerOutUpdates = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripPeerOutUpdates.setStatus('current')
tripPeerInTotalMessages = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripPeerInTotalMessages.setStatus('current')
tripPeerOutTotalMessages = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripPeerOutTotalMessages.setStatus('current')
tripPeerFsmEstablishedTransitions = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripPeerFsmEstablishedTransitions.setStatus('current')
tripPeerFsmEstablishedTime = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 5, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripPeerFsmEstablishedTime.setStatus('current')
tripPeerInUpdateElapsedTime = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 5, 1, 7), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripPeerInUpdateElapsedTime.setStatus('current')
tripPeerStateChangeTime = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 5, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripPeerStateChangeTime.setStatus('current')
tripRouteTable = MibTable((1, 3, 6, 1, 2, 1, 116, 1, 6), )
if mibBuilder.loadTexts: tripRouteTable.setStatus('current')
tripRouteEntry = MibTableRow((1, 3, 6, 1, 2, 1, 116, 1, 6, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"), (0, "TRIP-MIB", "tripRouteAppProtocol"), (0, "TRIP-MIB", "tripRouteAddressFamily"), (0, "TRIP-MIB", "tripRouteAddress"), (0, "TRIP-MIB", "tripRoutePeer"))
if mibBuilder.loadTexts: tripRouteEntry.setStatus('current')
tripRouteAppProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 1), TripAppProtocol())
if mibBuilder.loadTexts: tripRouteAppProtocol.setStatus('current')
tripRouteAddressFamily = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 2), TripAddressFamily())
if mibBuilder.loadTexts: tripRouteAddressFamily.setStatus('current')
tripRouteAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 105)))
if mibBuilder.loadTexts: tripRouteAddress.setStatus('current')
tripRoutePeer = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 4), TripId())
if mibBuilder.loadTexts: tripRoutePeer.setStatus('current')
tripRouteTRIBMask = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 5), Bits().clone(namedValues=NamedValues(("adjTribIns", 0), ("extTrib", 1), ("locTrib", 2), ("adjTribOut", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteTRIBMask.setStatus('current')
tripRouteAddressSequenceNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteAddressSequenceNumber.setStatus('current')
tripRouteAddressOriginatorId = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 7), TripId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteAddressOriginatorId.setStatus('current')
tripRouteNextHopServerIAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteNextHopServerIAddrType.setStatus('current')
tripRouteNextHopServer = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 9), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteNextHopServer.setStatus('current')
tripRouteNextHopServerPort = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 10), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteNextHopServerPort.setStatus('current')
tripRouteNextHopServerItad = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 11), TripItad()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteNextHopServerItad.setStatus('current')
tripRouteMultiExitDisc = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteMultiExitDisc.setStatus('current')
tripRouteLocalPref = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteLocalPref.setStatus('current')
tripRouteAdvertisementPath = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 252))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteAdvertisementPath.setStatus('current')
tripRouteRoutedPath = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 252))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteRoutedPath.setStatus('current')
tripRouteAtomicAggregate = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteAtomicAggregate.setStatus('current')
tripRouteUnknown = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteUnknown.setStatus('current')
tripRouteWithdrawn = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteWithdrawn.setStatus('current')
tripRouteConverted = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteConverted.setStatus('current')
tripRouteReceivedTime = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 6, 1, 20), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteReceivedTime.setStatus('current')
tripRouteCommunityTable = MibTable((1, 3, 6, 1, 2, 1, 116, 1, 7), )
if mibBuilder.loadTexts: tripRouteCommunityTable.setStatus('current')
tripRouteCommunityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 116, 1, 7, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"), (0, "TRIP-MIB", "tripRouteAppProtocol"), (0, "TRIP-MIB", "tripRouteAddressFamily"), (0, "TRIP-MIB", "tripRouteAddress"), (0, "TRIP-MIB", "tripRoutePeer"), (0, "TRIP-MIB", "tripRouteCommunityId"))
if mibBuilder.loadTexts: tripRouteCommunityEntry.setStatus('current')
tripRouteCommunityId = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 7, 1, 1), TripCommunityId())
if mibBuilder.loadTexts: tripRouteCommunityId.setStatus('current')
tripRouteCommunityItad = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 7, 1, 2), TripItad()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripRouteCommunityItad.setStatus('current')
tripItadTopologyTable = MibTable((1, 3, 6, 1, 2, 1, 116, 1, 8), )
if mibBuilder.loadTexts: tripItadTopologyTable.setStatus('current')
tripItadTopologyEntry = MibTableRow((1, 3, 6, 1, 2, 1, 116, 1, 8, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"), (0, "TRIP-MIB", "tripItadTopologyOrigId"))
if mibBuilder.loadTexts: tripItadTopologyEntry.setStatus('current')
tripItadTopologyOrigId = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 8, 1, 1), TripId())
if mibBuilder.loadTexts: tripItadTopologyOrigId.setStatus('current')
tripItadTopologySeqNum = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 8, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripItadTopologySeqNum.setStatus('current')
tripItadTopologyIdTable = MibTable((1, 3, 6, 1, 2, 1, 116, 1, 9), )
if mibBuilder.loadTexts: tripItadTopologyIdTable.setStatus('current')
tripItadTopologyIdEntry = MibTableRow((1, 3, 6, 1, 2, 1, 116, 1, 9, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"), (0, "TRIP-MIB", "tripItadTopologyOrigId"), (0, "TRIP-MIB", "tripItadTopologyId"))
if mibBuilder.loadTexts: tripItadTopologyIdEntry.setStatus('current')
tripItadTopologyId = MibTableColumn((1, 3, 6, 1, 2, 1, 116, 1, 9, 1, 1), TripId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tripItadTopologyId.setStatus('current')
tripNotifApplIndex = MibScalar((1, 3, 6, 1, 2, 1, 116, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tripNotifApplIndex.setStatus('current')
tripNotifPeerAddrInetType = MibScalar((1, 3, 6, 1, 2, 1, 116, 3, 2), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tripNotifPeerAddrInetType.setStatus('current')
tripNotifPeerAddr = MibScalar((1, 3, 6, 1, 2, 1, 116, 3, 3), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tripNotifPeerAddr.setStatus('current')
tripNotifPeerErrCode = MibScalar((1, 3, 6, 1, 2, 1, 116, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("messageHeader", 1), ("openMessage", 2), ("updateMessage", 3), ("holdTimerExpired", 4), ("finiteStateMachine", 5), ("cease", 6), ("tripNotification", 7)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tripNotifPeerErrCode.setStatus('current')
tripNotifPeerErrSubcode = MibScalar((1, 3, 6, 1, 2, 1, 116, 3, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tripNotifPeerErrSubcode.setStatus('current')
tripConnectionEstablished = NotificationType((1, 3, 6, 1, 2, 1, 116, 0, 1)).setObjects(("TRIP-MIB", "tripNotifApplIndex"), ("TRIP-MIB", "tripNotifPeerAddrInetType"), ("TRIP-MIB", "tripNotifPeerAddr"))
if mibBuilder.loadTexts: tripConnectionEstablished.setStatus('current')
tripConnectionDropped = NotificationType((1, 3, 6, 1, 2, 1, 116, 0, 2)).setObjects(("TRIP-MIB", "tripNotifApplIndex"), ("TRIP-MIB", "tripNotifPeerAddrInetType"), ("TRIP-MIB", "tripNotifPeerAddr"))
if mibBuilder.loadTexts: tripConnectionDropped.setStatus('current')
tripFSM = NotificationType((1, 3, 6, 1, 2, 1, 116, 0, 3)).setObjects(("TRIP-MIB", "tripNotifApplIndex"), ("TRIP-MIB", "tripNotifPeerAddrInetType"), ("TRIP-MIB", "tripNotifPeerAddr"), ("TRIP-MIB", "tripNotifPeerErrCode"), ("TRIP-MIB", "tripNotifPeerErrSubcode"), ("TRIP-MIB", "tripPeerState"))
if mibBuilder.loadTexts: tripFSM.setStatus('current')
tripOpenMessageError = NotificationType((1, 3, 6, 1, 2, 1, 116, 0, 4)).setObjects(("TRIP-MIB", "tripNotifApplIndex"), ("TRIP-MIB", "tripNotifPeerAddrInetType"), ("TRIP-MIB", "tripNotifPeerAddr"), ("TRIP-MIB", "tripNotifPeerErrCode"), ("TRIP-MIB", "tripNotifPeerErrSubcode"), ("TRIP-MIB", "tripPeerState"))
if mibBuilder.loadTexts: tripOpenMessageError.setStatus('current')
tripUpdateMessageError = NotificationType((1, 3, 6, 1, 2, 1, 116, 0, 5)).setObjects(("TRIP-MIB", "tripNotifApplIndex"), ("TRIP-MIB", "tripNotifPeerAddrInetType"), ("TRIP-MIB", "tripNotifPeerAddr"), ("TRIP-MIB", "tripNotifPeerErrCode"), ("TRIP-MIB", "tripNotifPeerErrSubcode"), ("TRIP-MIB", "tripPeerState"))
if mibBuilder.loadTexts: tripUpdateMessageError.setStatus('current')
tripHoldTimerExpired = NotificationType((1, 3, 6, 1, 2, 1, 116, 0, 6)).setObjects(("TRIP-MIB", "tripNotifApplIndex"), ("TRIP-MIB", "tripNotifPeerAddrInetType"), ("TRIP-MIB", "tripNotifPeerAddr"), ("TRIP-MIB", "tripNotifPeerErrCode"), ("TRIP-MIB", "tripNotifPeerErrSubcode"), ("TRIP-MIB", "tripPeerState"))
if mibBuilder.loadTexts: tripHoldTimerExpired.setStatus('current')
tripConnectionCollision = NotificationType((1, 3, 6, 1, 2, 1, 116, 0, 7)).setObjects(("TRIP-MIB", "tripNotifApplIndex"))
if mibBuilder.loadTexts: tripConnectionCollision.setStatus('current')
tripCease = NotificationType((1, 3, 6, 1, 2, 1, 116, 0, 8)).setObjects(("TRIP-MIB", "tripNotifApplIndex"), ("TRIP-MIB", "tripNotifPeerAddrInetType"), ("TRIP-MIB", "tripNotifPeerAddr"), ("TRIP-MIB", "tripNotifPeerErrCode"), ("TRIP-MIB", "tripNotifPeerErrSubcode"), ("TRIP-MIB", "tripPeerState"))
if mibBuilder.loadTexts: tripCease.setStatus('current')
tripNotificationErr = NotificationType((1, 3, 6, 1, 2, 1, 116, 0, 9)).setObjects(("TRIP-MIB", "tripNotifApplIndex"))
if mibBuilder.loadTexts: tripNotificationErr.setStatus('current')
tripMIBFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 116, 2, 1, 1)).setObjects(("TRIP-MIB", "tripConfigGroup"), ("TRIP-MIB", "tripPeerTableConfigGroup"), ("TRIP-MIB", "tripRouteGroup"), ("TRIP-MIB", "tripItadTopologyGroup"), ("TRIP-MIB", "tripPeerTableStatsGroup"), ("TRIP-MIB", "tripNotificationGroup"), ("TRIP-MIB", "tripNotifObjectGroup"), ("NETWORK-SERVICES-MIB", "applRFC2788Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tripMIBFullCompliance = tripMIBFullCompliance.setStatus('current')
tripMIBReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 116, 2, 1, 2)).setObjects(("TRIP-MIB", "tripConfigGroup"), ("TRIP-MIB", "tripPeerTableConfigGroup"), ("TRIP-MIB", "tripRouteGroup"), ("TRIP-MIB", "tripItadTopologyGroup"), ("TRIP-MIB", "tripPeerTableStatsGroup"), ("TRIP-MIB", "tripNotificationGroup"), ("TRIP-MIB", "tripNotifObjectGroup"), ("NETWORK-SERVICES-MIB", "applRFC2788Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tripMIBReadOnlyCompliance = tripMIBReadOnlyCompliance.setStatus('current')
tripConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 116, 2, 2, 1)).setObjects(("TRIP-MIB", "tripCfgProtocolVersion"), ("TRIP-MIB", "tripCfgItad"), ("TRIP-MIB", "tripCfgIdentifier"), ("TRIP-MIB", "tripCfgOperStatus"), ("TRIP-MIB", "tripCfgAdminStatus"), ("TRIP-MIB", "tripCfgAddrIAddrType"), ("TRIP-MIB", "tripCfgAddr"), ("TRIP-MIB", "tripCfgPort"), ("TRIP-MIB", "tripCfgMinItadOriginationInterval"), ("TRIP-MIB", "tripCfgMinRouteAdvertisementInterval"), ("TRIP-MIB", "tripCfgMaxPurgeTime"), ("TRIP-MIB", "tripCfgDisableTime"), ("TRIP-MIB", "tripCfgSendReceiveMode"), ("TRIP-MIB", "tripCfgStorage"), ("TRIP-MIB", "tripSupportedCommunityItad"), ("TRIP-MIB", "tripSupportedCommunityStorage"), ("TRIP-MIB", "tripRouteTypePeer"), ("TRIP-MIB", "tripSupportedCommunityRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tripConfigGroup = tripConfigGroup.setStatus('current')
tripPeerTableConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 116, 2, 2, 2)).setObjects(("TRIP-MIB", "tripPeerIdentifier"), ("TRIP-MIB", "tripPeerState"), ("TRIP-MIB", "tripPeerAdminStatus"), ("TRIP-MIB", "tripPeerNegotiatedVersion"), ("TRIP-MIB", "tripPeerSendReceiveMode"), ("TRIP-MIB", "tripPeerRemoteItad"), ("TRIP-MIB", "tripPeerConnectRetryInterval"), ("TRIP-MIB", "tripPeerMaxRetryInterval"), ("TRIP-MIB", "tripPeerHoldTime"), ("TRIP-MIB", "tripPeerKeepAlive"), ("TRIP-MIB", "tripPeerHoldTimeConfigured"), ("TRIP-MIB", "tripPeerKeepAliveConfigured"), ("TRIP-MIB", "tripPeerMaxPurgeTime"), ("TRIP-MIB", "tripPeerDisableTime"), ("TRIP-MIB", "tripPeerLearned"), ("TRIP-MIB", "tripPeerStorage"), ("TRIP-MIB", "tripPeerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tripPeerTableConfigGroup = tripPeerTableConfigGroup.setStatus('current')
tripPeerTableStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 116, 2, 2, 3)).setObjects(("TRIP-MIB", "tripPeerInUpdates"), ("TRIP-MIB", "tripPeerOutUpdates"), ("TRIP-MIB", "tripPeerInTotalMessages"), ("TRIP-MIB", "tripPeerOutTotalMessages"), ("TRIP-MIB", "tripPeerFsmEstablishedTransitions"), ("TRIP-MIB", "tripPeerFsmEstablishedTime"), ("TRIP-MIB", "tripPeerInUpdateElapsedTime"), ("TRIP-MIB", "tripPeerStateChangeTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tripPeerTableStatsGroup = tripPeerTableStatsGroup.setStatus('current')
tripRouteGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 116, 2, 2, 4)).setObjects(("TRIP-MIB", "tripRouteTRIBMask"), ("TRIP-MIB", "tripRouteAddressSequenceNumber"), ("TRIP-MIB", "tripRouteAddressOriginatorId"), ("TRIP-MIB", "tripRouteNextHopServerIAddrType"), ("TRIP-MIB", "tripRouteNextHopServer"), ("TRIP-MIB", "tripRouteNextHopServerPort"), ("TRIP-MIB", "tripRouteNextHopServerItad"), ("TRIP-MIB", "tripRouteMultiExitDisc"), ("TRIP-MIB", "tripRouteLocalPref"), ("TRIP-MIB", "tripRouteAdvertisementPath"), ("TRIP-MIB", "tripRouteRoutedPath"), ("TRIP-MIB", "tripRouteAtomicAggregate"), ("TRIP-MIB", "tripRouteUnknown"), ("TRIP-MIB", "tripRouteWithdrawn"), ("TRIP-MIB", "tripRouteConverted"), ("TRIP-MIB", "tripRouteReceivedTime"), ("TRIP-MIB", "tripRouteCommunityItad"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tripRouteGroup = tripRouteGroup.setStatus('current')
tripItadTopologyGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 116, 2, 2, 5)).setObjects(("TRIP-MIB", "tripItadTopologySeqNum"), ("TRIP-MIB", "tripItadTopologyId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tripItadTopologyGroup = tripItadTopologyGroup.setStatus('current')
tripNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 116, 2, 2, 6)).setObjects(("TRIP-MIB", "tripConnectionEstablished"), ("TRIP-MIB", "tripConnectionDropped"), ("TRIP-MIB", "tripFSM"), ("TRIP-MIB", "tripOpenMessageError"), ("TRIP-MIB", "tripUpdateMessageError"), ("TRIP-MIB", "tripHoldTimerExpired"), ("TRIP-MIB", "tripConnectionCollision"), ("TRIP-MIB", "tripCease"), ("TRIP-MIB", "tripNotificationErr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tripNotificationGroup = tripNotificationGroup.setStatus('current')
tripNotifObjectGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 116, 2, 2, 7)).setObjects(("TRIP-MIB", "tripNotifApplIndex"), ("TRIP-MIB", "tripNotifPeerAddrInetType"), ("TRIP-MIB", "tripNotifPeerAddr"), ("TRIP-MIB", "tripNotifPeerErrCode"), ("TRIP-MIB", "tripNotifPeerErrSubcode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tripNotifObjectGroup = tripNotifObjectGroup.setStatus('current')
mibBuilder.exportSymbols("TRIP-MIB", tripPeerKeepAlive=tripPeerKeepAlive, tripCfgProtocolVersion=tripCfgProtocolVersion, tripCfgMinRouteAdvertisementInterval=tripCfgMinRouteAdvertisementInterval, tripNotificationErr=tripNotificationErr, tripSupportedCommunityTable=tripSupportedCommunityTable, tripRouteConverted=tripRouteConverted, tripRouteUnknown=tripRouteUnknown, tripItadTopologyGroup=tripItadTopologyGroup, tripMIBFullCompliance=tripMIBFullCompliance, tripPeerIdentifier=tripPeerIdentifier, tripUpdateMessageError=tripUpdateMessageError, tripPeerFsmEstablishedTime=tripPeerFsmEstablishedTime, tripPeerStateChangeTime=tripPeerStateChangeTime, tripRouteWithdrawn=tripRouteWithdrawn, tripPeerStatisticsTable=tripPeerStatisticsTable, tripHoldTimerExpired=tripHoldTimerExpired, tripCfgAdminStatus=tripCfgAdminStatus, tripConfigGroup=tripConfigGroup, tripCfgOperStatus=tripCfgOperStatus, tripPeerOutUpdates=tripPeerOutUpdates, tripPeerConnectRetryInterval=tripPeerConnectRetryInterval, tripCfgPort=tripCfgPort, tripPeerLearned=tripPeerLearned, tripRouteAddress=tripRouteAddress, tripNotifApplIndex=tripNotifApplIndex, tripRouteTable=tripRouteTable, tripPeerAdminStatus=tripPeerAdminStatus, tripCfgEntry=tripCfgEntry, tripRouteCommunityItad=tripRouteCommunityItad, tripPeerOutTotalMessages=tripPeerOutTotalMessages, tripPeerHoldTime=tripPeerHoldTime, tripCfgMaxPurgeTime=tripCfgMaxPurgeTime, tripItadTopologyId=tripItadTopologyId, tripPeerTableConfigGroup=tripPeerTableConfigGroup, tripCfgDisableTime=tripCfgDisableTime, tripPeerKeepAliveConfigured=tripPeerKeepAliveConfigured, tripRouteAdvertisementPath=tripRouteAdvertisementPath, tripPeerInTotalMessages=tripPeerInTotalMessages, tripPeerInUpdateElapsedTime=tripPeerInUpdateElapsedTime, tripCfgTable=tripCfgTable, tripRouteTRIBMask=tripRouteTRIBMask, tripRouteTypeProtocolId=tripRouteTypeProtocolId, tripRouteTypeEntry=tripRouteTypeEntry, tripNotifPeerAddrInetType=tripNotifPeerAddrInetType, tripRouteTypePort=tripRouteTypePort, tripPeerStorage=tripPeerStorage, tripNotifPeerErrSubcode=tripNotifPeerErrSubcode, tripConnectionDropped=tripConnectionDropped, tripRouteAddressFamily=tripRouteAddressFamily, tripRouteTypePeer=tripRouteTypePeer, PYSNMP_MODULE_ID=tripMIB, tripPeerRemotePort=tripPeerRemotePort, tripSupportedCommunityItad=tripSupportedCommunityItad, tripMIBConformance=tripMIBConformance, tripCfgStorage=tripCfgStorage, tripConnectionCollision=tripConnectionCollision, tripRoutePeer=tripRoutePeer, tripRouteNextHopServerPort=tripRouteNextHopServerPort, tripNotificationGroup=tripNotificationGroup, tripMIBCompliances=tripMIBCompliances, tripRouteGroup=tripRouteGroup, tripRouteLocalPref=tripRouteLocalPref, tripCease=tripCease, tripPeerDisableTime=tripPeerDisableTime, tripPeerTableStatsGroup=tripPeerTableStatsGroup, tripRouteRoutedPath=tripRouteRoutedPath, tripRouteTypeAddrInetType=tripRouteTypeAddrInetType, tripItadTopologyEntry=tripItadTopologyEntry, tripPeerMaxRetryInterval=tripPeerMaxRetryInterval, tripRouteTypeAddr=tripRouteTypeAddr, tripCfgSendReceiveMode=tripCfgSendReceiveMode, tripPeerState=tripPeerState, tripOpenMessageError=tripOpenMessageError, tripPeerRemoteAddrInetType=tripPeerRemoteAddrInetType, tripRouteAddressSequenceNumber=tripRouteAddressSequenceNumber, tripCfgIdentifier=tripCfgIdentifier, tripPeerFsmEstablishedTransitions=tripPeerFsmEstablishedTransitions, tripPeerTable=tripPeerTable, tripPeerHoldTimeConfigured=tripPeerHoldTimeConfigured, tripMIBNotifications=tripMIBNotifications, tripSupportedCommunityRowStatus=tripSupportedCommunityRowStatus, tripPeerEntry=tripPeerEntry, tripRouteCommunityEntry=tripRouteCommunityEntry, tripPeerInUpdates=tripPeerInUpdates, tripPeerSendReceiveMode=tripPeerSendReceiveMode, tripSupportedCommunityEntry=tripSupportedCommunityEntry, tripMIBNotifObjects=tripMIBNotifObjects, tripSupportedCommunityId=tripSupportedCommunityId, tripPeerRemoteAddr=tripPeerRemoteAddr, tripRouteNextHopServerIAddrType=tripRouteNextHopServerIAddrType, tripPeerRowStatus=tripPeerRowStatus, tripPeerStatisticsEntry=tripPeerStatisticsEntry, tripRouteNextHopServerItad=tripRouteNextHopServerItad, tripCfgAddrIAddrType=tripCfgAddrIAddrType, tripNotifObjectGroup=tripNotifObjectGroup, tripPeerMaxPurgeTime=tripPeerMaxPurgeTime, tripItadTopologySeqNum=tripItadTopologySeqNum, tripPeerRemoteItad=tripPeerRemoteItad, tripCfgMinItadOriginationInterval=tripCfgMinItadOriginationInterval, tripRouteAppProtocol=tripRouteAppProtocol, tripItadTopologyIdEntry=tripItadTopologyIdEntry, tripNotifPeerErrCode=tripNotifPeerErrCode, tripNotifPeerAddr=tripNotifPeerAddr, tripRouteAtomicAggregate=tripRouteAtomicAggregate, tripMIB=tripMIB, tripCfgItad=tripCfgItad, tripRouteCommunityTable=tripRouteCommunityTable, tripItadTopologyOrigId=tripItadTopologyOrigId, tripConnectionEstablished=tripConnectionEstablished, tripMIBReadOnlyCompliance=tripMIBReadOnlyCompliance, tripRouteEntry=tripRouteEntry, tripRouteAddressOriginatorId=tripRouteAddressOriginatorId, tripRouteMultiExitDisc=tripRouteMultiExitDisc, tripMIBObjects=tripMIBObjects, tripRouteTypeAddrFamilyId=tripRouteTypeAddrFamilyId, tripItadTopologyIdTable=tripItadTopologyIdTable, tripItadTopologyTable=tripItadTopologyTable, tripRouteCommunityId=tripRouteCommunityId, tripRouteTypeTable=tripRouteTypeTable, tripRouteNextHopServer=tripRouteNextHopServer, tripRouteReceivedTime=tripRouteReceivedTime, tripSupportedCommunityStorage=tripSupportedCommunityStorage, tripPeerNegotiatedVersion=tripPeerNegotiatedVersion, tripCfgAddr=tripCfgAddr, tripFSM=tripFSM, tripMIBGroups=tripMIBGroups)
