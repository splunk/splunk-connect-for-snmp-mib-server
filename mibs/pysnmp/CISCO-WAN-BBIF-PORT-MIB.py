#
# PySNMP MIB module CISCO-WAN-BBIF-PORT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-WAN-BBIF-PORT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:03:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
bbIfCnt, bbIfStateGrp, bbIfCnf = mibBuilder.importSymbols("BASIS-MIB", "bbIfCnt", "bbIfStateGrp", "bbIfCnf")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
IpAddress, TimeTicks, MibIdentifier, iso, Counter32, ModuleIdentity, Gauge32, ObjectIdentity, Unsigned32, Bits, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "TimeTicks", "MibIdentifier", "iso", "Counter32", "ModuleIdentity", "Gauge32", "ObjectIdentity", "Unsigned32", "Bits", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoWanBbifPortMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 32))
ciscoWanBbifPortMIB.setRevisions(('2002-08-30 00:00',))
if mibBuilder.loadTexts: ciscoWanBbifPortMIB.setLastUpdated('200208300000Z')
if mibBuilder.loadTexts: ciscoWanBbifPortMIB.setOrganization('Cisco Systems, Inc.')
bbIfCnfPortGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 1, 1))
bbIfCnfPortGrpTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 1, 1, 1), )
if mibBuilder.loadTexts: bbIfCnfPortGrpTable.setStatus('current')
bbIfCnfPortGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-WAN-BBIF-PORT-MIB", "bbIfNum"))
if mibBuilder.loadTexts: bbIfCnfPortGrpEntry.setStatus('current')
bbIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfNum.setStatus('current')
bbIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("add", 1), ("del", 2), ("mod", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bbIfRowStatus.setStatus('current')
bbIfAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("writeOnly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bbIfAdmin.setStatus('current')
bbIfLineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bbIfLineNum.setStatus('current')
bbIfIngrPctBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bbIfIngrPctBandwidth.setStatus('current')
bbIfEgrPctBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bbIfEgrPctBandwidth.setStatus('current')
bbIfMinVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bbIfMinVpi.setStatus('current')
bbIfMaxVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bbIfMaxVpi.setStatus('current')
bbIfSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfSpeed.setStatus('current')
bbIfMaxCellRatePct = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bbIfMaxCellRatePct.setStatus('current')
nextBbIfNumAvailable = MibScalar((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nextBbIfNumAvailable.setStatus('current')
bbIfStateGrpTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 3, 1), )
if mibBuilder.loadTexts: bbIfStateGrpTable.setStatus('current')
bbIfStateGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 3, 1, 1), ).setIndexNames((0, "CISCO-WAN-BBIF-PORT-MIB", "bbStateIfNum"))
if mibBuilder.loadTexts: bbIfStateGrpEntry.setStatus('current')
bbStateIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbStateIfNum.setStatus('current')
bbIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notConfigured", 1), ("active", 2), ("linefailure", 4), ("signallingfailure", 5), ("inactive", 6), ("lineinloopback", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfState.setStatus('current')
bbIfOversubscribed = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfOversubscribed.setStatus('current')
bbIfIngrPercentUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfIngrPercentUtil.setStatus('current')
bbIfEgrPercentUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfEgrPercentUtil.setStatus('current')
bbIfCntGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4, 1))
bbIfCntGrpTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4, 1, 1), )
if mibBuilder.loadTexts: bbIfCntGrpTable.setStatus('current')
bbIfCntGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4, 1, 1, 1), ).setIndexNames((0, "CISCO-WAN-BBIF-PORT-MIB", "bbCntIfNum"))
if mibBuilder.loadTexts: bbIfCntGrpEntry.setStatus('current')
bbCntIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbCntIfNum.setStatus('current')
bbIfTotalCells = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfTotalCells.setStatus('current')
bbIfRcvValidOAMCells = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfRcvValidOAMCells.setStatus('current')
bbIfRcvRmCells = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfRcvRmCells.setStatus('current')
bbIfRcvClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfRcvClp0Cells.setStatus('current')
bbIfRcvClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfRcvClp1Cells.setStatus('current')
bbIfRcvClp0DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfRcvClp0DiscCells.setStatus('current')
bbIfRcvClp1DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfRcvClp1DiscCells.setStatus('current')
bbIfXmtOAMCells = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfXmtOAMCells.setStatus('current')
bbIfXmtRmCells = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfXmtRmCells.setStatus('current')
bbIfXmtClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfXmtClp0Cells.setStatus('current')
bbIfXmtClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfXmtClp1Cells.setStatus('current')
bbIfCntClrButton = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("resetCounter32s", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bbIfCntClrButton.setStatus('current')
bbIfRcvErroredCells = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbIfRcvErroredCells.setStatus('current')
cwbPortMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 32, 2))
cwbPortMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 32, 2, 1))
cwbPortMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 32, 2, 2))
cwbPortCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 32, 2, 2, 1)).setObjects(("CISCO-WAN-BBIF-PORT-MIB", "cwbPortConfGroup"), ("CISCO-WAN-BBIF-PORT-MIB", "cwbPortStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwbPortCompliance = cwbPortCompliance.setStatus('current')
cwbPortGenearlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 32, 2, 1, 1)).setObjects(("CISCO-WAN-BBIF-PORT-MIB", "nextBbIfNumAvailable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwbPortGenearlGroup = cwbPortGenearlGroup.setStatus('current')
cwbPortConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 32, 2, 1, 2)).setObjects(("CISCO-WAN-BBIF-PORT-MIB", "bbIfNum"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfRowStatus"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfAdmin"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfLineNum"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfIngrPctBandwidth"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfEgrPctBandwidth"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfMinVpi"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfMaxVpi"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfSpeed"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfMaxCellRatePct"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwbPortConfGroup = cwbPortConfGroup.setStatus('current')
cwbPortStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 32, 2, 1, 3)).setObjects(("CISCO-WAN-BBIF-PORT-MIB", "bbStateIfNum"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfState"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfOversubscribed"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfIngrPercentUtil"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfEgrPercentUtil"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwbPortStateGroup = cwbPortStateGroup.setStatus('current')
cwbPortStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 32, 2, 1, 4)).setObjects(("CISCO-WAN-BBIF-PORT-MIB", "bbCntIfNum"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfTotalCells"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfRcvValidOAMCells"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfRcvRmCells"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfRcvClp0Cells"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfRcvClp1Cells"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfRcvClp0DiscCells"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfRcvClp1DiscCells"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfXmtOAMCells"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfXmtRmCells"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfXmtClp0Cells"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfXmtClp1Cells"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfCntClrButton"), ("CISCO-WAN-BBIF-PORT-MIB", "bbIfRcvErroredCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwbPortStatsGroup = cwbPortStatsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-WAN-BBIF-PORT-MIB", bbIfRcvValidOAMCells=bbIfRcvValidOAMCells, bbIfCntGrp=bbIfCntGrp, bbIfRcvClp1DiscCells=bbIfRcvClp1DiscCells, bbIfXmtClp0Cells=bbIfXmtClp0Cells, bbIfCntGrpTable=bbIfCntGrpTable, bbIfSpeed=bbIfSpeed, nextBbIfNumAvailable=nextBbIfNumAvailable, cwbPortCompliance=cwbPortCompliance, bbIfCnfPortGrpTable=bbIfCnfPortGrpTable, bbIfXmtRmCells=bbIfXmtRmCells, cwbPortGenearlGroup=cwbPortGenearlGroup, bbIfEgrPercentUtil=bbIfEgrPercentUtil, bbIfCntGrpEntry=bbIfCntGrpEntry, bbIfCntClrButton=bbIfCntClrButton, bbIfXmtClp1Cells=bbIfXmtClp1Cells, bbIfRcvErroredCells=bbIfRcvErroredCells, bbIfMinVpi=bbIfMinVpi, PYSNMP_MODULE_ID=ciscoWanBbifPortMIB, bbIfRcvClp0Cells=bbIfRcvClp0Cells, bbIfMaxCellRatePct=bbIfMaxCellRatePct, bbIfCnfPortGrpEntry=bbIfCnfPortGrpEntry, bbCntIfNum=bbCntIfNum, bbStateIfNum=bbStateIfNum, bbIfState=bbIfState, bbIfLineNum=bbIfLineNum, bbIfMaxVpi=bbIfMaxVpi, bbIfIngrPercentUtil=bbIfIngrPercentUtil, bbIfXmtOAMCells=bbIfXmtOAMCells, bbIfNum=bbIfNum, bbIfEgrPctBandwidth=bbIfEgrPctBandwidth, bbIfStateGrpTable=bbIfStateGrpTable, bbIfRcvClp0DiscCells=bbIfRcvClp0DiscCells, cwbPortMIBGroups=cwbPortMIBGroups, bbIfIngrPctBandwidth=bbIfIngrPctBandwidth, cwbPortStatsGroup=cwbPortStatsGroup, bbIfRcvClp1Cells=bbIfRcvClp1Cells, cwbPortConfGroup=cwbPortConfGroup, bbIfOversubscribed=bbIfOversubscribed, bbIfRowStatus=bbIfRowStatus, bbIfRcvRmCells=bbIfRcvRmCells, cwbPortMIBCompliances=cwbPortMIBCompliances, bbIfStateGrpEntry=bbIfStateGrpEntry, bbIfTotalCells=bbIfTotalCells, cwbPortStateGroup=cwbPortStateGroup, ciscoWanBbifPortMIB=ciscoWanBbifPortMIB, bbIfAdmin=bbIfAdmin, cwbPortMIBConformance=cwbPortMIBConformance, bbIfCnfPortGrp=bbIfCnfPortGrp)
