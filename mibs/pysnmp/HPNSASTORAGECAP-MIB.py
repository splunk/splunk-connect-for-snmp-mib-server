#
# PySNMP MIB module HPNSASTORAGECAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPNSASTORAGECAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:30:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, iso, Gauge32, Bits, Unsigned32, MibIdentifier, enterprises, IpAddress, Integer32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, NotificationType, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "iso", "Gauge32", "Bits", "Unsigned32", "MibIdentifier", "enterprises", "IpAddress", "Integer32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "NotificationType", "ModuleIdentity", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hp = MibIdentifier((1, 3, 6, 1, 4, 1, 11))
nm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2))
hpnsa = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23))
hpnsaStorageCap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 15))
hpnsaSCMibRev = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 1))
hpnsaSCAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 2))
hpnsaSCDrv = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3))
hpnsaSCHist = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 4))
hpnsaSCMibRevMajor = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaSCMibRevMajor.setStatus('mandatory')
hpnsaSCMibRevMinor = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaSCMibRevMinor.setStatus('mandatory')
hpnsaSCAgentTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 2, 1), )
if mibBuilder.loadTexts: hpnsaSCAgentTable.setStatus('mandatory')
hpnsaSCAgentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 2, 1, 1), ).setIndexNames((0, "HPNSASTORAGECAP-MIB", "hpnsaSCAgentIndex"))
if mibBuilder.loadTexts: hpnsaSCAgentEntry.setStatus('mandatory')
hpnsaSCAgentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaSCAgentIndex.setStatus('mandatory')
hpnsaSCAgentName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaSCAgentName.setStatus('mandatory')
hpnsaSCAgentVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaSCAgentVersion.setStatus('mandatory')
hpnsaSCAgentDate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaSCAgentDate.setStatus('mandatory')
hpnsaSCDrvNumOfDrives = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaSCDrvNumOfDrives.setStatus('mandatory')
hpnsaSCDrvTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3, 2), )
if mibBuilder.loadTexts: hpnsaSCDrvTable.setStatus('mandatory')
hpnsaSCDrvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3, 2, 1), ).setIndexNames((0, "HPNSASTORAGECAP-MIB", "hpnsaSCDrvIndex"))
if mibBuilder.loadTexts: hpnsaSCDrvEntry.setStatus('mandatory')
hpnsaSCDrvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaSCDrvIndex.setStatus('mandatory')
hpnsaSCDrvName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaSCDrvName.setStatus('mandatory')
hpnsaSCDrvTrapsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaSCDrvTrapsEnabled.setStatus('mandatory')
hpnsaSCDrvTrapsPollTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaSCDrvTrapsPollTime.setStatus('mandatory')
hpnsaSCDrvHistSampleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaSCDrvHistSampleTime.setStatus('mandatory')
hpnsaSCDrvLoThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaSCDrvLoThreshold.setStatus('mandatory')
hpnsaSCDrvWarnThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaSCDrvWarnThreshold.setStatus('mandatory')
hpnsaSCDrvCritThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaSCDrvCritThreshold.setStatus('mandatory')
hpnsaSCDrvTotalNumDirEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaSCDrvTotalNumDirEntries.setStatus('optional')
hpnsaSCDrvTotalNumDirEntriesUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaSCDrvTotalNumDirEntriesUsed.setStatus('optional')
hpnsaSCDrvCurrentTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaSCDrvCurrentTotal.setStatus('mandatory')
hpnsaSCDrvCurrentAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaSCDrvCurrentAvailable.setStatus('mandatory')
hpnsaSCDrvNumOfSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaSCDrvNumOfSamples.setStatus('mandatory')
hpnsaSCDrvClearHist = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 3, 2, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaSCDrvClearHist.setStatus('mandatory')
hpnsaSCHistTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 4, 1), )
if mibBuilder.loadTexts: hpnsaSCHistTable.setStatus('mandatory')
hpnsaSCHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 4, 1, 1), ).setIndexNames((0, "HPNSASTORAGECAP-MIB", "hpnsaSCHistDriveIndex"), (0, "HPNSASTORAGECAP-MIB", "hpnsaSCHistIndex"))
if mibBuilder.loadTexts: hpnsaSCHistEntry.setStatus('mandatory')
hpnsaSCHistDriveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaSCHistDriveIndex.setStatus('mandatory')
hpnsaSCHistIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaSCHistIndex.setStatus('mandatory')
hpnsaSCHistSample = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 15, 4, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(14, 14)).setFixedLength(14)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaSCHistSample.setStatus('mandatory')
mibBuilder.exportSymbols("HPNSASTORAGECAP-MIB", hpnsaSCAgentEntry=hpnsaSCAgentEntry, hpnsaSCMibRevMinor=hpnsaSCMibRevMinor, hpnsaSCDrvClearHist=hpnsaSCDrvClearHist, hpnsaSCHistTable=hpnsaSCHistTable, hpnsaSCMibRev=hpnsaSCMibRev, hpnsaSCDrvEntry=hpnsaSCDrvEntry, hpnsaSCDrvHistSampleTime=hpnsaSCDrvHistSampleTime, hpnsaSCDrvCurrentAvailable=hpnsaSCDrvCurrentAvailable, hpnsaSCAgent=hpnsaSCAgent, nm=nm, hpnsaStorageCap=hpnsaStorageCap, hpnsaSCHistDriveIndex=hpnsaSCHistDriveIndex, hpnsaSCDrvName=hpnsaSCDrvName, hpnsaSCHistSample=hpnsaSCHistSample, hpnsaSCHist=hpnsaSCHist, hpnsa=hpnsa, hpnsaSCMibRevMajor=hpnsaSCMibRevMajor, hpnsaSCAgentName=hpnsaSCAgentName, hpnsaSCDrvTable=hpnsaSCDrvTable, hpnsaSCDrvLoThreshold=hpnsaSCDrvLoThreshold, hpnsaSCAgentDate=hpnsaSCAgentDate, hpnsaSCDrvCurrentTotal=hpnsaSCDrvCurrentTotal, hpnsaSCDrvNumOfSamples=hpnsaSCDrvNumOfSamples, hpnsaSCAgentVersion=hpnsaSCAgentVersion, hpnsaSCDrvTotalNumDirEntries=hpnsaSCDrvTotalNumDirEntries, hp=hp, hpnsaSCDrvIndex=hpnsaSCDrvIndex, hpnsaSCDrv=hpnsaSCDrv, hpnsaSCDrvTrapsEnabled=hpnsaSCDrvTrapsEnabled, hpnsaSCDrvTrapsPollTime=hpnsaSCDrvTrapsPollTime, hpnsaSCDrvNumOfDrives=hpnsaSCDrvNumOfDrives, hpnsaSCAgentIndex=hpnsaSCAgentIndex, hpnsaSCDrvCritThreshold=hpnsaSCDrvCritThreshold, hpnsaSCHistIndex=hpnsaSCHistIndex, hpnsaSCDrvTotalNumDirEntriesUsed=hpnsaSCDrvTotalNumDirEntriesUsed, hpnsaSCHistEntry=hpnsaSCHistEntry, hpnsaSCDrvWarnThreshold=hpnsaSCDrvWarnThreshold, hpnsaSCAgentTable=hpnsaSCAgentTable)
