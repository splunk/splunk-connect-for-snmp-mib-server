#
# PySNMP MIB module HH3C-MPLSOAM-PS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-MPLSOAM-PS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:15:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, iso, Gauge32, NotificationType, Integer32, TimeTicks, Counter64, IpAddress, ModuleIdentity, MibIdentifier, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "iso", "Gauge32", "NotificationType", "Integer32", "TimeTicks", "Counter64", "IpAddress", "ModuleIdentity", "MibIdentifier", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Bits")
RowStatus, DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TruthValue", "TextualConvention")
hh3cMplsOamPs = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 80))
if mibBuilder.loadTexts: hh3cMplsOamPs.setLastUpdated('200703310000Z')
if mibBuilder.loadTexts: hh3cMplsOamPs.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cMplsOamPsScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 80, 1))
hh3cMplsOamPsTrapOpen = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 80, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsOamPsTrapOpen.setStatus('current')
hh3cMplsOamPsTable = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 80, 2))
hh3cMplsPsTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 80, 2, 1), )
if mibBuilder.loadTexts: hh3cMplsPsTable.setStatus('current')
hh3cMplsPsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 80, 2, 1, 1), ).setIndexNames((0, "HH3C-MPLSOAM-PS-MIB", "hh3cMplsPsIndex"))
if mibBuilder.loadTexts: hh3cMplsPsEntry.setStatus('current')
hh3cMplsPsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 80, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cMplsPsIndex.setStatus('current')
hh3cMplsPsGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 80, 2, 1, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsPsGroupID.setStatus('current')
hh3cMplsPsWorkLspName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 80, 2, 1, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsPsWorkLspName.setStatus('current')
hh3cMplsPsProtectLspName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 80, 2, 1, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsPsProtectLspName.setStatus('current')
hh3cMplsPsRevertiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 80, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsPsRevertiveMode.setStatus('current')
hh3cMplsPsWTR = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 80, 2, 1, 1, 6), Integer32()).setUnits('30s').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsPsWTR.setStatus('current')
hh3cMplsPsHoldOff = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 80, 2, 1, 1, 7), Integer32()).setUnits('100ms').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsPsHoldOff.setStatus('current')
hh3cMplsPsSwitchCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 80, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsPsSwitchCondition.setStatus('current')
hh3cMplsPsWorkLspDetectState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 80, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsPsWorkLspDetectState.setStatus('current')
hh3cMplsPsWorkLspUpDownState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 80, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsPsWorkLspUpDownState.setStatus('current')
hh3cMplsPsProtLspDetectState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 80, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsPsProtLspDetectState.setStatus('current')
hh3cMplsPsProtLspUpDownState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 80, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsPsProtLspUpDownState.setStatus('current')
hh3cMplsPsSwitchResult = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 80, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsPsSwitchResult.setStatus('current')
hh3cMplsPsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 80, 2, 1, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsPsRowStatus.setStatus('current')
hh3cMplsOamPsNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 80, 3))
hh3cMplsPsSwitchPtoW = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 80, 3, 1)).setObjects(("HH3C-MPLSOAM-PS-MIB", "hh3cMplsPsWorkLspName"), ("HH3C-MPLSOAM-PS-MIB", "hh3cMplsPsProtectLspName"), ("HH3C-MPLSOAM-PS-MIB", "hh3cMplsPsSwitchResult"))
if mibBuilder.loadTexts: hh3cMplsPsSwitchPtoW.setStatus('current')
hh3cMplsPsSwitchWtoP = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 80, 3, 2)).setObjects(("HH3C-MPLSOAM-PS-MIB", "hh3cMplsPsWorkLspName"), ("HH3C-MPLSOAM-PS-MIB", "hh3cMplsPsProtectLspName"), ("HH3C-MPLSOAM-PS-MIB", "hh3cMplsPsSwitchResult"))
if mibBuilder.loadTexts: hh3cMplsPsSwitchWtoP.setStatus('current')
mibBuilder.exportSymbols("HH3C-MPLSOAM-PS-MIB", hh3cMplsPsProtLspDetectState=hh3cMplsPsProtLspDetectState, hh3cMplsPsTable=hh3cMplsPsTable, hh3cMplsOamPs=hh3cMplsOamPs, PYSNMP_MODULE_ID=hh3cMplsOamPs, hh3cMplsPsProtLspUpDownState=hh3cMplsPsProtLspUpDownState, hh3cMplsPsRevertiveMode=hh3cMplsPsRevertiveMode, hh3cMplsPsProtectLspName=hh3cMplsPsProtectLspName, hh3cMplsOamPsNotifications=hh3cMplsOamPsNotifications, hh3cMplsOamPsScalarGroup=hh3cMplsOamPsScalarGroup, hh3cMplsPsIndex=hh3cMplsPsIndex, hh3cMplsPsSwitchCondition=hh3cMplsPsSwitchCondition, hh3cMplsPsSwitchResult=hh3cMplsPsSwitchResult, hh3cMplsOamPsTrapOpen=hh3cMplsOamPsTrapOpen, hh3cMplsPsWorkLspUpDownState=hh3cMplsPsWorkLspUpDownState, hh3cMplsPsSwitchPtoW=hh3cMplsPsSwitchPtoW, hh3cMplsPsWorkLspDetectState=hh3cMplsPsWorkLspDetectState, hh3cMplsPsSwitchWtoP=hh3cMplsPsSwitchWtoP, hh3cMplsPsRowStatus=hh3cMplsPsRowStatus, hh3cMplsPsWTR=hh3cMplsPsWTR, hh3cMplsPsWorkLspName=hh3cMplsPsWorkLspName, hh3cMplsPsGroupID=hh3cMplsPsGroupID, hh3cMplsPsHoldOff=hh3cMplsPsHoldOff, hh3cMplsOamPsTable=hh3cMplsOamPsTable, hh3cMplsPsEntry=hh3cMplsPsEntry)
