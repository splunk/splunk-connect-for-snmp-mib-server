#
# PySNMP MIB module RUCKUS-RADIO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RUCKUS-RADIO-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:50:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
ruckusCommonRadioModule, = mibBuilder.importSymbols("RUCKUS-ROOT-MIB", "ruckusCommonRadioModule")
RuckusRadioMode, RuckusCountryCode, RuckusRate = mibBuilder.importSymbols("RUCKUS-TC-MIB", "RuckusRadioMode", "RuckusCountryCode", "RuckusRate")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, NotificationType, Gauge32, MibIdentifier, TimeTicks, Integer32, Counter32, Counter64, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "NotificationType", "Gauge32", "MibIdentifier", "TimeTicks", "Integer32", "Counter32", "Counter64", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ruckusRadioMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1))
if mibBuilder.loadTexts: ruckusRadioMIB.setLastUpdated('201010150800Z')
if mibBuilder.loadTexts: ruckusRadioMIB.setOrganization('Ruckus Wireless, Inc.')
ruckusRadioObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1))
ruckusRadioInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1))
ruckusRadioNumber = MibScalar((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioNumber.setStatus('current')
ruckusRadioTable = MibTable((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 2), )
if mibBuilder.loadTexts: ruckusRadioTable.setStatus('current')
ruckusRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ruckusRadioEntry.setStatus('current')
ruckusRadioMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 0), ("ieee802dot11g-only", 1), ("ieee802dot11b-only", 2), ("ieee802dot11ng", 3), ("ieee802dot11na", 4), ("ieee802dot11a-only", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusRadioMode.setStatus('current')
ruckusRadioCountry = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 2, 1, 2), RuckusCountryCode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusRadioCountry.setStatus('current')
ruckusRadioBSSType = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("station", 1), ("master", 2), ("independent", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioBSSType.setStatus('current')
ruckusRadioChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusRadioChannel.setStatus('current')
ruckusRadioDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioDataRate.setStatus('current')
ruckusRadioTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("full", 0), ("half", 1), ("quarter", 2), ("eighth", 3), ("minimum", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusRadioTxPower.setStatus('current')
ruckusRadioProtectionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("ctsOnly", 1), ("ctsRts", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusRadioProtectionMode.setStatus('current')
ruckusRadioStatsTable = MibTable((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3), )
if mibBuilder.loadTexts: ruckusRadioStatsTable.setStatus('current')
ruckusRadioStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ruckusRadioStatsEntry.setStatus('current')
ruckusRadioStatsMaxSta = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsMaxSta.setStatus('current')
ruckusRadioStatsNumSta = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsNumSta.setStatus('current')
ruckusRadioStatsNumAuthSta = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsNumAuthSta.setStatus('current')
ruckusRadioStatsNumAuthReq = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsNumAuthReq.setStatus('current')
ruckusRadioStatsNumAuthResp = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsNumAuthResp.setStatus('current')
ruckusRadioStatsNumAuthSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsNumAuthSuccess.setStatus('current')
ruckusRadioStatsNumAuthFail = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsNumAuthFail.setStatus('current')
ruckusRadioStatsNumAssocReq = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsNumAssocReq.setStatus('current')
ruckusRadioStatsNumAssocResp = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsNumAssocResp.setStatus('current')
ruckusRadioStatsNumAssocSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsNumAssocSuccess.setStatus('current')
ruckusRadioStatsNumAssocFail = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsNumAssocFail.setStatus('current')
ruckusRadioStatsAssocFailRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsAssocFailRate.setStatus('current')
ruckusRadioStatsAuthFailRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsAuthFailRate.setStatus('current')
ruckusRadioStatsAssocSuccessRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsAssocSuccessRate.setStatus('current')
ruckusRadioStatsResourceUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsResourceUtil.setStatus('current')
ruckusRadioStatsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsRxBytes.setStatus('current')
ruckusRadioStatsRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsRxFrames.setStatus('current')
ruckusRadioStatsRxWEPFail = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsRxWEPFail.setStatus('current')
ruckusRadioStatsRxDecryptCRCError = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsRxDecryptCRCError.setStatus('current')
ruckusRadioStatsRxMICError = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsRxMICError.setStatus('current')
ruckusRadioStatsRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsRxErrors.setStatus('current')
ruckusRadioStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsTxBytes.setStatus('current')
ruckusRadioStatsTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 12, 1, 1, 1, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusRadioStatsTxFrames.setStatus('current')
mibBuilder.exportSymbols("RUCKUS-RADIO-MIB", ruckusRadioStatsNumSta=ruckusRadioStatsNumSta, ruckusRadioStatsRxDecryptCRCError=ruckusRadioStatsRxDecryptCRCError, ruckusRadioObjects=ruckusRadioObjects, ruckusRadioMIB=ruckusRadioMIB, ruckusRadioProtectionMode=ruckusRadioProtectionMode, PYSNMP_MODULE_ID=ruckusRadioMIB, ruckusRadioStatsAuthFailRate=ruckusRadioStatsAuthFailRate, ruckusRadioStatsNumAuthSta=ruckusRadioStatsNumAuthSta, ruckusRadioStatsNumAuthFail=ruckusRadioStatsNumAuthFail, ruckusRadioCountry=ruckusRadioCountry, ruckusRadioStatsNumAssocFail=ruckusRadioStatsNumAssocFail, ruckusRadioStatsEntry=ruckusRadioStatsEntry, ruckusRadioNumber=ruckusRadioNumber, ruckusRadioStatsNumAuthResp=ruckusRadioStatsNumAuthResp, ruckusRadioChannel=ruckusRadioChannel, ruckusRadioStatsNumAuthReq=ruckusRadioStatsNumAuthReq, ruckusRadioStatsRxBytes=ruckusRadioStatsRxBytes, ruckusRadioMode=ruckusRadioMode, ruckusRadioTxPower=ruckusRadioTxPower, ruckusRadioInfo=ruckusRadioInfo, ruckusRadioEntry=ruckusRadioEntry, ruckusRadioStatsAssocSuccessRate=ruckusRadioStatsAssocSuccessRate, ruckusRadioStatsNumAssocReq=ruckusRadioStatsNumAssocReq, ruckusRadioTable=ruckusRadioTable, ruckusRadioStatsRxFrames=ruckusRadioStatsRxFrames, ruckusRadioStatsRxWEPFail=ruckusRadioStatsRxWEPFail, ruckusRadioStatsMaxSta=ruckusRadioStatsMaxSta, ruckusRadioStatsResourceUtil=ruckusRadioStatsResourceUtil, ruckusRadioStatsNumAssocSuccess=ruckusRadioStatsNumAssocSuccess, ruckusRadioStatsRxErrors=ruckusRadioStatsRxErrors, ruckusRadioStatsAssocFailRate=ruckusRadioStatsAssocFailRate, ruckusRadioDataRate=ruckusRadioDataRate, ruckusRadioStatsNumAssocResp=ruckusRadioStatsNumAssocResp, ruckusRadioStatsTable=ruckusRadioStatsTable, ruckusRadioStatsRxMICError=ruckusRadioStatsRxMICError, ruckusRadioStatsTxFrames=ruckusRadioStatsTxFrames, ruckusRadioStatsNumAuthSuccess=ruckusRadioStatsNumAuthSuccess, ruckusRadioBSSType=ruckusRadioBSSType, ruckusRadioStatsTxBytes=ruckusRadioStatsTxBytes)
