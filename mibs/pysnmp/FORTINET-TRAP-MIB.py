#
# PySNMP MIB module FORTINET-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FORTINET-TRAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:01:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
fortinet, fortinetTrap = mibBuilder.importSymbols("FORTINET-MIB", "fortinet", "fortinetTrap")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, ObjectIdentity, ModuleIdentity, Counter64, Unsigned32, Counter32, Integer32, Gauge32, NotificationType, MibIdentifier, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "ObjectIdentity", "ModuleIdentity", "Counter64", "Unsigned32", "Counter32", "Integer32", "Gauge32", "NotificationType", "MibIdentifier", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
fnTrapSysSn = MibScalar((1, 3, 6, 1, 4, 1, 12356, 10, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fnTrapSysSn.setStatus('mandatory')
fnTrapIfName = MibScalar((1, 3, 6, 1, 4, 1, 12356, 10, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fnTrapIfName.setStatus('mandatory')
fnTrapIfIp = MibScalar((1, 3, 6, 1, 4, 1, 12356, 10, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fnTrapIfIp.setStatus('mandatory')
fnTrapIfNetmask = MibScalar((1, 3, 6, 1, 4, 1, 12356, 10, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fnTrapIfNetmask.setStatus('mandatory')
fnTrapType = MibScalar((1, 3, 6, 1, 4, 1, 12356, 10, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(51, 52, 101, 102, 103, 104, 105, 106, 107, 301, 401, 402, 501, 502, 601, 901))).clone(namedValues=NamedValues(("link-up", 51), ("link-down", 52), ("cpu-usage-high", 101), ("memory-low", 102), ("disk-low", 103), ("interface-ip-change", 104), ("system-dead", 105), ("ha-swtich", 106), ("hardware-problem", 107), ("auth-srv-unreachable", 301), ("vpn-tunnel-up", 401), ("vpn-tunnel-down", 402), ("syn-flood-attack", 501), ("port-scan-attack", 502), ("virus-detected", 601), ("log-full", 901)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fnTrapType.setStatus('mandatory')
fnTrapDesc = MibScalar((1, 3, 6, 1, 4, 1, 12356, 10, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fnTrapDesc.setStatus('mandatory')
fnTrapColdStart = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,0))
fnTrapSystemDown = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,10))
fnTrapAgentDown = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,11))
fnTrapAgentUp = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,12))
fnTrapInfChg = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,100)).setObjects(("FORTINET-TRAP-MIB", "fnTrapSysSn"), ("FORTINET-TRAP-MIB", "fnTrapIfName"), ("FORTINET-TRAP-MIB", "fnTrapIfNetmask"), ("FORTINET-TRAP-MIB", "fnTrapSysSn"))
fnTrapSystem = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,101)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
fnTrapFirewall = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,200)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
fnTrapUser = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,300)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
fnTrapVpn = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,400)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
fnTrapNids = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,500)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
fnTrapAntiVirus = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,600)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
fnTrapWebFilter = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,700)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
fnTrapEmailFilter = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,800)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
fnTrapLog = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,900)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
fnTrapMisc = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,1000)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
fnTrapDemoUpdateConfig = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,10000)).setObjects(("FORTINET-TRAP-MIB", "fnTrapSysSn"), ("FORTINET-TRAP-MIB", "fnTrapIfName"), ("FORTINET-TRAP-MIB", "fnTrapIfNetmask"), ("FORTINET-TRAP-MIB", "fnTrapSysSn"))
mibBuilder.exportSymbols("FORTINET-TRAP-MIB", fnTrapIfIp=fnTrapIfIp, fnTrapFirewall=fnTrapFirewall, fnTrapAgentDown=fnTrapAgentDown, fnTrapAntiVirus=fnTrapAntiVirus, fnTrapUser=fnTrapUser, fnTrapIfName=fnTrapIfName, fnTrapAgentUp=fnTrapAgentUp, fnTrapSystem=fnTrapSystem, fnTrapDesc=fnTrapDesc, fnTrapInfChg=fnTrapInfChg, fnTrapSystemDown=fnTrapSystemDown, fnTrapNids=fnTrapNids, fnTrapWebFilter=fnTrapWebFilter, fnTrapSysSn=fnTrapSysSn, fnTrapVpn=fnTrapVpn, fnTrapDemoUpdateConfig=fnTrapDemoUpdateConfig, fnTrapType=fnTrapType, fnTrapLog=fnTrapLog, fnTrapIfNetmask=fnTrapIfNetmask, fnTrapMisc=fnTrapMisc, fnTrapEmailFilter=fnTrapEmailFilter, fnTrapColdStart=fnTrapColdStart)
