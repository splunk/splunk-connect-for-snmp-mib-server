#
# PySNMP MIB module CISCO-MOBILE-IP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-MOBILE-IP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:50:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
ifIndex, InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex", "InterfaceIndexOrZero")
InetAddress, InetAddressType, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType", "InetAddressPrefixLength")
mnRegistrationEntry, haMobilityBindingEntry, mnHAEntry, mnRegCOA, mnRegAgentAddress, RegistrationFlags, faCOAEntry, mnState = mibBuilder.importSymbols("MIP-MIB", "mnRegistrationEntry", "haMobilityBindingEntry", "mnHAEntry", "mnRegCOA", "mnRegAgentAddress", "RegistrationFlags", "faCOAEntry", "mnState")
ZeroBasedCounter32, = mibBuilder.importSymbols("RMON2-MIB", "ZeroBasedCounter32")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Bits, ModuleIdentity, Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, NotificationType, Counter32, iso, IpAddress, Counter64, ObjectIdentity, TimeTicks, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "NotificationType", "Counter32", "iso", "IpAddress", "Counter64", "ObjectIdentity", "TimeTicks", "Integer32")
TimeInterval, TruthValue, DateAndTime, MacAddress, TimeStamp, TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval", "TruthValue", "DateAndTime", "MacAddress", "TimeStamp", "TextualConvention", "DisplayString", "RowStatus")
ciscoMobileIpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 174))
ciscoMobileIpMIB.setRevisions(('2009-06-26 00:00', '2009-01-22 00:00', '2008-12-11 00:00', '2005-05-31 00:00', '2004-05-28 00:00', '2004-01-23 00:00', '2003-11-27 00:00', '2003-09-05 00:00', '2003-06-30 00:00', '2003-01-23 00:00', '2002-11-18 00:00', '2002-05-17 00:00', '2001-07-06 00:00', '2001-01-25 00:00',))
if mibBuilder.loadTexts: ciscoMobileIpMIB.setLastUpdated('200906260000Z')
if mibBuilder.loadTexts: ciscoMobileIpMIB.setOrganization('Cisco Systems, Inc.')
ciscoMobileIpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1))
cmiFa = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1))
cmiHa = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2))
cmiSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3))
cmiMa = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4))
cmiMn = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5))
cmiTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 6))
cmiFaReg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1))
cmiFaAdvertisement = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 2))
cmiFaSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 3))
cmiHaReg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1))
cmiHaRedun = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2))
cmiHaMobNet = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 3))
cmiHaSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 4))
cmiMaReg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 1))
cmiMaAdvertisement = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 2))
cmiMnDiscovery = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 1))
cmiMnRecentAdvReceived = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 1, 1))
cmiMnRegistration = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 2))
cmiMrSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3))
cmiMrDiscovery = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 4))
cmiMrRegistration = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 5))
class CmiRegistrationFlags(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("reverseTunnel", 0), ("gre", 1), ("minEnc", 2), ("decapsulationbyMN", 3), ("broadcastDatagram", 4), ("simultaneousBindings", 5))

class CmiEntityIdentifierType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("ipaddress", 2), ("nai", 3))

class CmiEntityIdentifier(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 255)

class CmiSpi(TextualConvention, Unsigned32):
    reference = 'RFC-2002 - IP Mobility Support, section 3.5.1'
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(256, 4294967295)

class CmiMultiPathMetricType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("hopcount", 1), ("bandwidth", 2))

class CmiTunnelType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("ipinip", 1), ("gre", 2))

cmiFaRegTotalVisitors = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaRegTotalVisitors.setStatus('current')
cmiFaRegVisitorTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 2), )
if mibBuilder.loadTexts: cmiFaRegVisitorTable.setStatus('current')
cmiFaRegVisitorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorIdentifierType"), (0, "CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorIdentifier"))
if mibBuilder.loadTexts: cmiFaRegVisitorEntry.setStatus('current')
cmiFaRegVisitorIdentifierType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 2, 1, 1), CmiEntityIdentifierType())
if mibBuilder.loadTexts: cmiFaRegVisitorIdentifierType.setStatus('current')
cmiFaRegVisitorIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 2, 1, 2), CmiEntityIdentifier())
if mibBuilder.loadTexts: cmiFaRegVisitorIdentifier.setStatus('current')
cmiFaRegVisitorHomeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaRegVisitorHomeAddress.setStatus('current')
cmiFaRegVisitorHomeAgentAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaRegVisitorHomeAgentAddress.setStatus('current')
cmiFaRegVisitorTimeGranted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 2, 1, 5), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaRegVisitorTimeGranted.setStatus('current')
cmiFaRegVisitorTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 2, 1, 6), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaRegVisitorTimeRemaining.setStatus('current')
cmiFaRegVisitorRegFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 2, 1, 7), RegistrationFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaRegVisitorRegFlags.setStatus('deprecated')
cmiFaRegVisitorRegIDLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaRegVisitorRegIDLow.setStatus('current')
cmiFaRegVisitorRegIDHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaRegVisitorRegIDHigh.setStatus('current')
cmiFaRegVisitorRegIsAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 2, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaRegVisitorRegIsAccepted.setStatus('current')
cmiFaRegVisitorRegFlagsRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 2, 1, 11), CmiRegistrationFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaRegVisitorRegFlagsRev1.setStatus('current')
cmiFaRegVisitorChallengeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 2, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaRegVisitorChallengeValue.setStatus('current')
cmiFaInitRegRequestsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaInitRegRequestsReceived.setStatus('current')
cmiFaInitRegRequestsRelayed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaInitRegRequestsRelayed.setStatus('current')
cmiFaInitRegRequestsDenied = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaInitRegRequestsDenied.setStatus('current')
cmiFaInitRegRequestsDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaInitRegRequestsDiscarded.setStatus('current')
cmiFaInitRegRepliesValidFromHA = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaInitRegRepliesValidFromHA.setStatus('current')
cmiFaInitRegRepliesValidRelayMN = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaInitRegRepliesValidRelayMN.setStatus('current')
cmiFaReRegRequestsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaReRegRequestsReceived.setStatus('current')
cmiFaReRegRequestsRelayed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaReRegRequestsRelayed.setStatus('current')
cmiFaReRegRequestsDenied = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaReRegRequestsDenied.setStatus('current')
cmiFaReRegRequestsDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaReRegRequestsDiscarded.setStatus('current')
cmiFaReRegRepliesValidFromHA = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaReRegRepliesValidFromHA.setStatus('current')
cmiFaReRegRepliesValidRelayToMN = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaReRegRepliesValidRelayToMN.setStatus('current')
cmiFaDeRegRequestsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaDeRegRequestsReceived.setStatus('current')
cmiFaDeRegRequestsRelayed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaDeRegRequestsRelayed.setStatus('current')
cmiFaDeRegRequestsDenied = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaDeRegRequestsDenied.setStatus('current')
cmiFaDeRegRequestsDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaDeRegRequestsDiscarded.setStatus('current')
cmiFaDeRegRepliesValidFromHA = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaDeRegRepliesValidFromHA.setStatus('current')
cmiFaDeRegRepliesValidRelayToMN = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaDeRegRepliesValidRelayToMN.setStatus('current')
cmiFaReverseTunnelUnavailable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaReverseTunnelUnavailable.setStatus('current')
cmiFaReverseTunnelBitNotSet = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaReverseTunnelBitNotSet.setStatus('current')
cmiFaMnTooDistant = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaMnTooDistant.setStatus('current')
cmiFaDeliveryStyleUnsupported = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaDeliveryStyleUnsupported.setStatus('current')
cmiFaUnknownChallenge = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaUnknownChallenge.setStatus('current')
cmiFaMissingChallenge = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaMissingChallenge.setStatus('current')
cmiFaStaleChallenge = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaStaleChallenge.setStatus('current')
cmiFaCvsesFromMnRejected = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaCvsesFromMnRejected.setStatus('current')
cmiFaCvsesFromHaRejected = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaCvsesFromHaRejected.setStatus('current')
cmiFaNvsesFromMnNeglected = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaNvsesFromMnNeglected.setStatus('current')
cmiFaNvsesFromHaNeglected = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaNvsesFromHaNeglected.setStatus('current')
cmiFaTotalRegRequests = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaTotalRegRequests.setStatus('current')
cmiFaTotalRegReplies = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaTotalRegReplies.setStatus('current')
cmiFaMnFaAuthFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaMnFaAuthFailures.setStatus('current')
cmiFaMnAAAAuthFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaMnAAAAuthFailures.setStatus('current')
cmiFaAdvertConfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 2, 1), )
if mibBuilder.loadTexts: cmiFaAdvertConfTable.setStatus('current')
cmiFaAdvertConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cmiFaAdvertConfEntry.setStatus('current')
cmiFaAdvertIsBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 2, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaAdvertIsBusy.setStatus('current')
cmiFaAdvertRegRequired = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 2, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiFaAdvertRegRequired.setStatus('current')
cmiFaAdvertChallengeWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiFaAdvertChallengeWindow.setStatus('current')
cmiFaAdvertChallengeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 2, 2), )
if mibBuilder.loadTexts: cmiFaAdvertChallengeTable.setStatus('current')
cmiFaAdvertChallengeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-MOBILE-IP-MIB", "cmiFaAdvertChallengeIndex"))
if mibBuilder.loadTexts: cmiFaAdvertChallengeEntry.setStatus('current')
cmiFaAdvertChallengeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: cmiFaAdvertChallengeIndex.setStatus('current')
cmiFaAdvertChallengeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaAdvertChallengeValue.setStatus('current')
cmiFaRevTunnelSupported = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 3, 1), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaRevTunnelSupported.setStatus('current')
cmiFaChallengeSupported = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 3, 2), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaChallengeSupported.setStatus('current')
cmiFaEncapDeliveryStyleSupported = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 3, 3), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaEncapDeliveryStyleSupported.setStatus('current')
cmiFaInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 3, 4), )
if mibBuilder.loadTexts: cmiFaInterfaceTable.setStatus('current')
cmiFaInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 3, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cmiFaInterfaceEntry.setStatus('current')
cmiFaReverseTunnelEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 3, 4, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiFaReverseTunnelEnable.setStatus('current')
cmiFaChallengeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 3, 4, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiFaChallengeEnable.setStatus('current')
cmiFaAdvertChallengeChapSPI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 3, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiFaAdvertChallengeChapSPI.setStatus('current')
cmiFaCoaTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 3, 5), )
if mibBuilder.loadTexts: cmiFaCoaTable.setStatus('current')
cmiFaCoaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 3, 5, 1), )
faCOAEntry.registerAugmentions(("CISCO-MOBILE-IP-MIB", "cmiFaCoaEntry"))
cmiFaCoaEntry.setIndexNames(*faCOAEntry.getIndexNames())
if mibBuilder.loadTexts: cmiFaCoaEntry.setStatus('current')
cmiFaCoaInterfaceOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 3, 5, 1, 1), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiFaCoaInterfaceOnly.setStatus('current')
cmiFaCoaTransmitOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 3, 5, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiFaCoaTransmitOnly.setStatus('current')
cmiFaCoaRegAsymLink = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 1, 3, 5, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiFaCoaRegAsymLink.setStatus('current')
cmiHaRegTotalMobilityBindings = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegTotalMobilityBindings.setStatus('current')
cmiHaRegMobilityBindingTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 2), )
if mibBuilder.loadTexts: cmiHaRegMobilityBindingTable.setStatus('current')
cmiHaRegMobilityBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 2, 1), )
haMobilityBindingEntry.registerAugmentions(("CISCO-MOBILE-IP-MIB", "cmiHaRegMobilityBindingEntry"))
cmiHaRegMobilityBindingEntry.setIndexNames(*haMobilityBindingEntry.getIndexNames())
if mibBuilder.loadTexts: cmiHaRegMobilityBindingEntry.setStatus('current')
cmiHaRegMnIdentifierType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 2, 1, 1), CmiEntityIdentifierType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegMnIdentifierType.setStatus('current')
cmiHaRegMnIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 2, 1, 2), CmiEntityIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegMnIdentifier.setStatus('current')
cmiHaRegMobilityBindingRegFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 2, 1, 3), CmiRegistrationFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegMobilityBindingRegFlags.setStatus('current')
cmiHaRegMnIfDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 2, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegMnIfDescription.setStatus('current')
cmiHaRegMnIfBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 2, 1, 5), Unsigned32()).setUnits('kilobits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegMnIfBandwidth.setStatus('current')
cmiHaRegMnIfID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegMnIfID.setStatus('current')
cmiHaRegMnIfPathMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 2, 1, 7), CmiMultiPathMetricType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegMnIfPathMetricType.setStatus('current')
cmiHaRegMobilityBindingMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 2, 1, 8), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegMobilityBindingMacAddress.setStatus('current')
cmiHaRegCounterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 3), )
if mibBuilder.loadTexts: cmiHaRegCounterTable.setStatus('current')
cmiHaRegCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 3, 1), ).setIndexNames((0, "CISCO-MOBILE-IP-MIB", "cmiHaRegMnIdType"), (0, "CISCO-MOBILE-IP-MIB", "cmiHaRegMnId"))
if mibBuilder.loadTexts: cmiHaRegCounterEntry.setStatus('current')
cmiHaRegMnIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 3, 1, 1), CmiEntityIdentifierType())
if mibBuilder.loadTexts: cmiHaRegMnIdType.setStatus('current')
cmiHaRegMnId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 3, 1, 2), CmiEntityIdentifier())
if mibBuilder.loadTexts: cmiHaRegMnId.setStatus('current')
cmiHaRegServAcceptedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegServAcceptedRequests.setStatus('current')
cmiHaRegServDeniedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegServDeniedRequests.setStatus('current')
cmiHaRegOverallServTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 3, 1, 5), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegOverallServTime.setStatus('current')
cmiHaRegRecentServAcceptedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 3, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegRecentServAcceptedTime.setStatus('current')
cmiHaRegRecentServDeniedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 3, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegRecentServDeniedTime.setStatus('current')
cmiHaRegRecentServDeniedCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139))).clone(namedValues=NamedValues(("reasonUnspecified", 128), ("admProhibited", 129), ("insufficientResource", 130), ("mnAuthenticationFailure", 131), ("faAuthenticationFailure", 132), ("idMismatch", 133), ("poorlyFormedRequest", 134), ("tooManyBindings", 135), ("unknownHA", 136), ("reverseTunnelUnavailable", 137), ("reverseTunnelBitNotSet", 138), ("encapsulationUnavailable", 139)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegRecentServDeniedCode.setStatus('current')
cmiHaRegTotalProcLocRegs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegTotalProcLocRegs.setStatus('current')
cmiHaRegMaxProcLocInMinRegs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegMaxProcLocInMinRegs.setStatus('current')
cmiHaRegDateMaxRegsProcLoc = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegDateMaxRegsProcLoc.setStatus('current')
cmiHaRegProcLocInLastMinRegs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegProcLocInLastMinRegs.setStatus('current')
cmiHaRegTotalProcByAAARegs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegTotalProcByAAARegs.setStatus('current')
cmiHaRegMaxProcByAAAInMinRegs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegMaxProcByAAAInMinRegs.setStatus('current')
cmiHaRegDateMaxRegsProcByAAA = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegDateMaxRegsProcByAAA.setStatus('current')
cmiHaRegProcAAAInLastByMinRegs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegProcAAAInLastByMinRegs.setStatus('current')
cmiHaRegAvgTimeRegsProcByAAA = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('milli seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegAvgTimeRegsProcByAAA.setStatus('current')
cmiHaRegMaxTimeRegsProcByAAA = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('milli seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegMaxTimeRegsProcByAAA.setStatus('current')
cmiHaRegRequestsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegRequestsReceived.setStatus('current')
cmiHaRegRequestsDenied = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegRequestsDenied.setStatus('current')
cmiHaRegRequestsDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegRequestsDiscarded.setStatus('current')
cmiHaEncapUnavailable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaEncapUnavailable.setStatus('current')
cmiHaNAICheckFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaNAICheckFailures.setStatus('current')
cmiHaInitRegRequestsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaInitRegRequestsReceived.setStatus('current')
cmiHaInitRegRequestsAccepted = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaInitRegRequestsAccepted.setStatus('current')
cmiHaInitRegRequestsDenied = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaInitRegRequestsDenied.setStatus('current')
cmiHaInitRegRequestsDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaInitRegRequestsDiscarded.setStatus('current')
cmiHaReRegRequestsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaReRegRequestsReceived.setStatus('current')
cmiHaReRegRequestsAccepted = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaReRegRequestsAccepted.setStatus('current')
cmiHaReRegRequestsDenied = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaReRegRequestsDenied.setStatus('current')
cmiHaReRegRequestsDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaReRegRequestsDiscarded.setStatus('current')
cmiHaDeRegRequestsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaDeRegRequestsReceived.setStatus('current')
cmiHaDeRegRequestsAccepted = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaDeRegRequestsAccepted.setStatus('current')
cmiHaDeRegRequestsDenied = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaDeRegRequestsDenied.setStatus('current')
cmiHaDeRegRequestsDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaDeRegRequestsDiscarded.setStatus('current')
cmiHaReverseTunnelUnavailable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaReverseTunnelUnavailable.setStatus('current')
cmiHaReverseTunnelBitNotSet = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaReverseTunnelBitNotSet.setStatus('current')
cmiHaEncapsulationUnavailable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaEncapsulationUnavailable.setStatus('current')
cmiHaCvsesFromMnRejected = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaCvsesFromMnRejected.setStatus('current')
cmiHaCvsesFromFaRejected = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaCvsesFromFaRejected.setStatus('current')
cmiHaNvsesFromMnNeglected = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaNvsesFromMnNeglected.setStatus('current')
cmiHaNvsesFromFaNeglected = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaNvsesFromFaNeglected.setStatus('current')
cmiHaMnHaAuthFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaMnHaAuthFailures.setStatus('current')
cmiHaMnAAAAuthFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaMnAAAAuthFailures.setStatus('current')
cmiHaMaximumBindings = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 40), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 500000)).clone(235000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiHaMaximumBindings.setStatus('current')
cmiHaRegIntervalSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 41), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(15, 300)).clone(30)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiHaRegIntervalSize.setStatus('current')
cmiHaRegIntervalMaxActiveBindings = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 42), Gauge32()).setUnits('MIP call per interval').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegIntervalMaxActiveBindings.setStatus('current')
cmiHaRegInterval3gpp2MaxActiveBindings = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 43), Gauge32()).setUnits('MIP call per interval').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegInterval3gpp2MaxActiveBindings.setStatus('current')
cmiHaRegIntervalWimaxMaxActiveBindings = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 44), Gauge32()).setUnits('MIP call per interval').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegIntervalWimaxMaxActiveBindings.setStatus('current')
cmiHaRegTunnelStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 45), )
if mibBuilder.loadTexts: cmiHaRegTunnelStatsTable.setStatus('current')
cmiHaRegTunnelStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 45, 1), ).setIndexNames((0, "CISCO-MOBILE-IP-MIB", "cmiHaRegTunnelStatsSrcAddrType"), (0, "CISCO-MOBILE-IP-MIB", "cmiHaRegTunnelStatsSrcAddr"), (0, "CISCO-MOBILE-IP-MIB", "cmiHaRegTunnelStatsDestAddrType"), (0, "CISCO-MOBILE-IP-MIB", "cmiHaRegTunnelStatsDestAddr"))
if mibBuilder.loadTexts: cmiHaRegTunnelStatsEntry.setStatus('current')
cmiHaRegTunnelStatsSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 45, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cmiHaRegTunnelStatsSrcAddrType.setStatus('current')
cmiHaRegTunnelStatsSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 45, 1, 2), InetAddress())
if mibBuilder.loadTexts: cmiHaRegTunnelStatsSrcAddr.setStatus('current')
cmiHaRegTunnelStatsDestAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 45, 1, 3), InetAddressType())
if mibBuilder.loadTexts: cmiHaRegTunnelStatsDestAddrType.setStatus('current')
cmiHaRegTunnelStatsDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 45, 1, 4), InetAddress())
if mibBuilder.loadTexts: cmiHaRegTunnelStatsDestAddr.setStatus('current')
cmiHaRegTunnelStatsTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 45, 1, 5), CmiTunnelType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegTunnelStatsTunnelType.setStatus('current')
cmiHaRegTunnelStatsNumUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 45, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegTunnelStatsNumUsers.setStatus('current')
cmiHaRegTunnelStatsDataRateInt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 45, 1, 7), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegTunnelStatsDataRateInt.setStatus('current')
cmiHaRegTunnelStatsInBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 45, 1, 8), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegTunnelStatsInBitRate.setStatus('current')
cmiHaRegTunnelStatsInPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 45, 1, 9), CounterBasedGauge64()).setUnits('packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegTunnelStatsInPktRate.setStatus('current')
cmiHaRegTunnelStatsInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 45, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegTunnelStatsInBytes.setStatus('current')
cmiHaRegTunnelStatsInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 45, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegTunnelStatsInPkts.setStatus('current')
cmiHaRegTunnelStatsOutBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 45, 1, 12), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegTunnelStatsOutBitRate.setStatus('current')
cmiHaRegTunnelStatsOutPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 45, 1, 13), CounterBasedGauge64()).setUnits('packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegTunnelStatsOutPktRate.setStatus('current')
cmiHaRegTunnelStatsOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 45, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegTunnelStatsOutBytes.setStatus('current')
cmiHaRegTunnelStatsOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 1, 45, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRegTunnelStatsOutPkts.setStatus('current')
cmiHaRedunSentBUs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunSentBUs.setStatus('current')
cmiHaRedunFailedBUs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunFailedBUs.setStatus('current')
cmiHaRedunReceivedBUAcks = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunReceivedBUAcks.setStatus('current')
cmiHaRedunTotalSentBUs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunTotalSentBUs.setStatus('current')
cmiHaRedunReceivedBUs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunReceivedBUs.setStatus('current')
cmiHaRedunSentBUAcks = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunSentBUAcks.setStatus('current')
cmiHaRedunSentBIReqs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunSentBIReqs.setStatus('current')
cmiHaRedunFailedBIReqs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunFailedBIReqs.setStatus('current')
cmiHaRedunTotalSentBIReqs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunTotalSentBIReqs.setStatus('current')
cmiHaRedunReceivedBIReps = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunReceivedBIReps.setStatus('current')
cmiHaRedunDroppedBIReps = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunDroppedBIReps.setStatus('current')
cmiHaRedunSentBIAcks = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunSentBIAcks.setStatus('current')
cmiHaRedunReceivedBIReqs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunReceivedBIReqs.setStatus('current')
cmiHaRedunSentBIReps = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunSentBIReps.setStatus('current')
cmiHaRedunFailedBIReps = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunFailedBIReps.setStatus('current')
cmiHaRedunTotalSentBIReps = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunTotalSentBIReps.setStatus('current')
cmiHaRedunReceivedBIAcks = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunReceivedBIAcks.setStatus('current')
cmiHaRedunDroppedBIAcks = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunDroppedBIAcks.setStatus('current')
cmiHaRedunSecViolations = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 2, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaRedunSecViolations.setStatus('current')
cmiHaMrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 3, 1), )
if mibBuilder.loadTexts: cmiHaMrTable.setStatus('current')
cmiHaMrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 3, 1, 1), ).setIndexNames((0, "CISCO-MOBILE-IP-MIB", "cmiHaMrAddrType"), (0, "CISCO-MOBILE-IP-MIB", "cmiHaMrAddr"))
if mibBuilder.loadTexts: cmiHaMrEntry.setStatus('current')
cmiHaMrAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 3, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cmiHaMrAddrType.setStatus('current')
cmiHaMrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 3, 1, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: cmiHaMrAddr.setStatus('current')
cmiHaMrDynamic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 3, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiHaMrDynamic.setStatus('current')
cmiHaMrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 3, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiHaMrStatus.setStatus('current')
cmiHaMrMultiPath = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 3, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiHaMrMultiPath.setStatus('current')
cmiHaMrMultiPathMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 3, 1, 1, 6), CmiMultiPathMetricType().clone('bandwidth')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiHaMrMultiPathMetricType.setStatus('current')
cmiHaMobNetTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 3, 2), )
if mibBuilder.loadTexts: cmiHaMobNetTable.setStatus('current')
cmiHaMobNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 3, 2, 1), ).setIndexNames((0, "CISCO-MOBILE-IP-MIB", "cmiHaMrAddrType"), (0, "CISCO-MOBILE-IP-MIB", "cmiHaMrAddr"), (0, "CISCO-MOBILE-IP-MIB", "cmiHaMobNetAddressType"), (0, "CISCO-MOBILE-IP-MIB", "cmiHaMobNetAddress"), (0, "CISCO-MOBILE-IP-MIB", "cmiHaMobNetPfxLen"))
if mibBuilder.loadTexts: cmiHaMobNetEntry.setStatus('current')
cmiHaMobNetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 3, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cmiHaMobNetAddressType.setStatus('current')
cmiHaMobNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 3, 2, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: cmiHaMobNetAddress.setStatus('current')
cmiHaMobNetPfxLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 3, 2, 1, 3), InetAddressPrefixLength())
if mibBuilder.loadTexts: cmiHaMobNetPfxLen.setStatus('current')
cmiHaMobNetDynamic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 3, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaMobNetDynamic.setStatus('current')
cmiHaMobNetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 3, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiHaMobNetStatus.setStatus('current')
cmiSecAssocsCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiSecAssocsCount.setStatus('current')
cmiSecAssocTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 2), )
if mibBuilder.loadTexts: cmiSecAssocTable.setStatus('current')
cmiSecAssocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-MOBILE-IP-MIB", "cmiSecPeerIdentifierType"), (0, "CISCO-MOBILE-IP-MIB", "cmiSecPeerIdentifier"), (0, "CISCO-MOBILE-IP-MIB", "cmiSecSPI"))
if mibBuilder.loadTexts: cmiSecAssocEntry.setStatus('current')
cmiSecPeerIdentifierType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 2, 1, 1), CmiEntityIdentifierType())
if mibBuilder.loadTexts: cmiSecPeerIdentifierType.setStatus('current')
cmiSecPeerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 2, 1, 2), CmiEntityIdentifier())
if mibBuilder.loadTexts: cmiSecPeerIdentifier.setStatus('current')
cmiSecSPI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 2, 1, 3), CmiSpi())
if mibBuilder.loadTexts: cmiSecSPI.setStatus('current')
cmiSecAlgorithmType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("md5", 2), ("hmacMD5", 3))).clone('md5')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiSecAlgorithmType.setStatus('current')
cmiSecAlgorithmMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("prefixSuffix", 2))).clone('prefixSuffix')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiSecAlgorithmMode.setStatus('current')
cmiSecKey = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiSecKey.setStatus('deprecated')
cmiSecReplayMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("timestamps", 2), ("nonces", 3))).clone('timestamps')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiSecReplayMethod.setStatus('current')
cmiSecStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiSecStatus.setStatus('current')
cmiSecKey2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiSecKey2.setStatus('current')
cmiHaSystemVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 2, 4, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiHaSystemVersion.setStatus('current')
cmiSecViolationTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 3), )
if mibBuilder.loadTexts: cmiSecViolationTable.setStatus('current')
cmiSecViolationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 3, 1), ).setIndexNames((0, "CISCO-MOBILE-IP-MIB", "cmiSecViolatorIdentifierType"), (0, "CISCO-MOBILE-IP-MIB", "cmiSecViolatorIdentifier"))
if mibBuilder.loadTexts: cmiSecViolationEntry.setStatus('current')
cmiSecViolatorIdentifierType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 3, 1, 1), CmiEntityIdentifierType())
if mibBuilder.loadTexts: cmiSecViolatorIdentifierType.setStatus('current')
cmiSecViolatorIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 3, 1, 2), CmiEntityIdentifier())
if mibBuilder.loadTexts: cmiSecViolatorIdentifier.setStatus('current')
cmiSecTotalViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiSecTotalViolations.setStatus('current')
cmiSecRecentViolationSPI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 3, 1, 4), CmiSpi()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiSecRecentViolationSPI.setStatus('current')
cmiSecRecentViolationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 3, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiSecRecentViolationTime.setStatus('current')
cmiSecRecentViolationIDLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiSecRecentViolationIDLow.setStatus('current')
cmiSecRecentViolationIDHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiSecRecentViolationIDHigh.setStatus('current')
cmiSecRecentViolationReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noMobilitySecurityAssociation", 1), ("badAuthenticator", 2), ("badIdentifier", 3), ("badSPI", 4), ("missingSecurityExtension", 5), ("other", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiSecRecentViolationReason.setStatus('current')
cmiMaRegMaxInMinuteRegs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMaRegMaxInMinuteRegs.setStatus('current')
cmiMaRegDateMaxRegsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMaRegDateMaxRegsReceived.setStatus('current')
cmiMaRegInLastMinuteRegs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMaRegInLastMinuteRegs.setStatus('current')
cmiMnAdvFlags = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 1, 1, 1), Bits().clone(namedValues=NamedValues(("gre", 0), ("minEnc", 1), ("foreignAgent", 2), ("homeAgent", 3), ("busy", 4), ("regRequired", 5), ("reverseTunnel", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMnAdvFlags.setStatus('current')
cmiMnRegistrationTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 2, 1), )
if mibBuilder.loadTexts: cmiMnRegistrationTable.setStatus('current')
cmiMnRegistrationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 2, 1, 1), )
mnRegistrationEntry.registerAugmentions(("CISCO-MOBILE-IP-MIB", "cmiMnRegistrationEntry"))
cmiMnRegistrationEntry.setIndexNames(*mnRegistrationEntry.getIndexNames())
if mibBuilder.loadTexts: cmiMnRegistrationEntry.setStatus('current')
cmiMnRegFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 2, 1, 1, 1), CmiRegistrationFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMnRegFlags.setStatus('current')
cmiMrReverseTunnel = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiMrReverseTunnel.setStatus('current')
cmiMrRedundancyGroup = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 2), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiMrRedundancyGroup.setStatus('current')
cmiMrMobNetTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 3), )
if mibBuilder.loadTexts: cmiMrMobNetTable.setStatus('current')
cmiMrMobNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 3, 1), ).setIndexNames((0, "CISCO-MOBILE-IP-MIB", "cmiMrMobNetIfIndex"))
if mibBuilder.loadTexts: cmiMrMobNetEntry.setStatus('current')
cmiMrMobNetIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cmiMrMobNetIfIndex.setStatus('current')
cmiMrMobNetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 3, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrMobNetAddrType.setStatus('current')
cmiMrMobNetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 3, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrMobNetAddr.setStatus('current')
cmiMrMobNetPfxLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 3, 1, 4), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrMobNetPfxLen.setStatus('current')
cmiMrMobNetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMrMobNetStatus.setStatus('current')
cmiMrHaTunnelIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 4), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrHaTunnelIfIndex.setStatus('current')
cmiMrHATable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 5), )
if mibBuilder.loadTexts: cmiMrHATable.setStatus('current')
cmiMrHAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 5, 1), )
mnHAEntry.registerAugmentions(("CISCO-MOBILE-IP-MIB", "cmiMrHAEntry"))
cmiMrHAEntry.setIndexNames(*mnHAEntry.getIndexNames())
if mibBuilder.loadTexts: cmiMrHAEntry.setStatus('current')
cmiMrHAPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMrHAPriority.setStatus('current')
cmiMrHABest = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 5, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrHABest.setStatus('current')
cmiMrIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6), )
if mibBuilder.loadTexts: cmiMrIfTable.setStatus('current')
cmiMrIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1), ).setIndexNames((0, "CISCO-MOBILE-IP-MIB", "cmiMrIfIndex"))
if mibBuilder.loadTexts: cmiMrIfEntry.setStatus('current')
cmiMrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cmiMrIfIndex.setStatus('current')
cmiMRIfDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 2), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMRIfDescription.setStatus('current')
cmiMrIfHoldDown = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMrIfHoldDown.setStatus('current')
cmiMrIfRoamPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMrIfRoamPriority.setStatus('current')
cmiMrIfSolicitPeriodic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMrIfSolicitPeriodic.setStatus('current')
cmiMrIfSolicitInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMrIfSolicitInterval.setStatus('current')
cmiMrIfSolicitRetransInitial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 10000)).clone(1000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMrIfSolicitRetransInitial.setStatus('current')
cmiMrIfSolicitRetransMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 10000)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMrIfSolicitRetransMax.setStatus('current')
cmiMrIfSolicitRetransLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMrIfSolicitRetransLimit.setStatus('current')
cmiMrIfSolicitRetransCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 10000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrIfSolicitRetransCurrent.setStatus('current')
cmiMrIfSolicitRetransRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 11), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrIfSolicitRetransRemaining.setStatus('current')
cmiMrIfSolicitRetransCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrIfSolicitRetransCount.setStatus('current')
cmiMrIfCCoaAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 13), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrIfCCoaAddressType.setStatus('current')
cmiMrIfCCoaAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 14), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrIfCCoaAddress.setStatus('current')
cmiMrIfCCoaDefaultGwType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 15), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMrIfCCoaDefaultGwType.setStatus('current')
cmiMrIfCCoaDefaultGw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 16), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMrIfCCoaDefaultGw.setStatus('current')
cmiMrIfCCoaRegRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMrIfCCoaRegRetry.setStatus('current')
cmiMrIfCCoaRegRetryRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 18), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrIfCCoaRegRetryRemaining.setStatus('current')
cmiMrIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 19), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMrIfStatus.setStatus('current')
cmiMrIfCCoaRegistration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrIfCCoaRegistration.setStatus('current')
cmiMrIfCCoaOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 21), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMrIfCCoaOnly.setStatus('current')
cmiMrIfCCoaEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 22), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMrIfCCoaEnable.setStatus('current')
cmiMrIfRoamStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrIfRoamStatus.setStatus('current')
cmiMrIfRegisteredCoAType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 24), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrIfRegisteredCoAType.setStatus('current')
cmiMrIfRegisteredCoA = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 25), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrIfRegisteredCoA.setStatus('current')
cmiMrIfRegisteredMaAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 26), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrIfRegisteredMaAddrType.setStatus('current')
cmiMrIfRegisteredMaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 27), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrIfRegisteredMaAddr.setStatus('current')
cmiMrIfHaTunnelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 28), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrIfHaTunnelIfIndex.setStatus('current')
cmiMrIfID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 6, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrIfID.setStatus('current')
cmiMrBetterIfDetected = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrBetterIfDetected.setStatus('current')
cmiMrTunnelPktsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrTunnelPktsRcvd.setStatus('current')
cmiMrTunnelPktsSent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrTunnelPktsSent.setStatus('current')
cmiMrTunnelBytesRcvd = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrTunnelBytesRcvd.setStatus('current')
cmiMrTunnelBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrTunnelBytesSent.setStatus('current')
cmiMrRedStateActive = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrRedStateActive.setStatus('current')
cmiMrRedStatePassive = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrRedStatePassive.setStatus('current')
cmiMrCollocatedTunnel = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("single", 1), ("double", 2))).clone('single')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiMrCollocatedTunnel.setStatus('current')
cmiMrMultiPath = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 15), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiMrMultiPath.setStatus('current')
cmiMrMultiPathMetricType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 3, 16), CmiMultiPathMetricType().clone('bandwidth')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiMrMultiPathMetricType.setStatus('current')
cmiMrMaAdvTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 4, 1), )
if mibBuilder.loadTexts: cmiMrMaAdvTable.setStatus('current')
cmiMrMaAdvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 4, 1, 1), ).setIndexNames((0, "CISCO-MOBILE-IP-MIB", "cmiMrMaAddressType"), (0, "CISCO-MOBILE-IP-MIB", "cmiMrMaAddress"))
if mibBuilder.loadTexts: cmiMrMaAdvEntry.setStatus('current')
cmiMrMaAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 4, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cmiMrMaAddressType.setStatus('current')
cmiMrMaAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 4, 1, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: cmiMrMaAddress.setStatus('current')
cmiMrMaIsHa = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 4, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrMaIsHa.setStatus('current')
cmiMrMaAdvRcvIf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 4, 1, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrMaAdvRcvIf.setStatus('current')
cmiMrMaIfMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 4, 1, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrMaIfMacAddress.setStatus('current')
cmiMrMaAdvSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 4, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrMaAdvSequence.setStatus('current')
cmiMrMaAdvFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 4, 1, 1, 7), Bits().clone(namedValues=NamedValues(("reverseTunnel", 0), ("gre", 1), ("minEnc", 2), ("foreignAgent", 3), ("homeAgent", 4), ("busy", 5), ("regRequired", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrMaAdvFlags.setStatus('current')
cmiMrMaAdvMaxRegLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 4, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrMaAdvMaxRegLifetime.setStatus('current')
cmiMrMaAdvMaxLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 4, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrMaAdvMaxLifetime.setStatus('current')
cmiMrMaAdvLifetimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 4, 1, 1, 10), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrMaAdvLifetimeRemaining.setStatus('current')
cmiMrMaAdvTimeReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 4, 1, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrMaAdvTimeReceived.setStatus('current')
cmiMrMaAdvTimeFirstHeard = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 4, 1, 1, 12), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrMaAdvTimeFirstHeard.setStatus('current')
cmiMrMaHoldDownRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 4, 1, 1, 13), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrMaHoldDownRemaining.setStatus('current')
cmiMrRegExtendExpire = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 5, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiMrRegExtendExpire.setStatus('current')
cmiMrRegExtendRetry = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 5, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiMrRegExtendRetry.setStatus('current')
cmiMrRegExtendInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 5, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiMrRegExtendInterval.setStatus('current')
cmiMrRegLifetime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 5, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiMrRegLifetime.setStatus('current')
cmiMrRegRetransInitial = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 5, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 10000))).setUnits('milli-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiMrRegRetransInitial.setStatus('current')
cmiMrRegRetransMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 5, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 10000))).setUnits('milli-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiMrRegRetransMax.setStatus('current')
cmiMrRegRetransLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 5, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiMrRegRetransLimit.setStatus('current')
cmiMrRegNewHa = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 5, 5, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMrRegNewHa.setStatus('current')
cmiTrapControl = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 6, 1), Bits().clone(namedValues=NamedValues(("cmiMrStateChangeTrap", 0), ("cmiMrCoaChangeTrap", 1), ("cmiMrNewMATrap", 2), ("cmiHaMnRegFailedTrap", 3), ("cmiHaMaxBindingsNotif", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmiTrapControl.setStatus('current')
cmiNtRegCOAType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 6, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiNtRegCOAType.setStatus('current')
cmiNtRegCOA = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 6, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiNtRegCOA.setStatus('current')
cmiNtRegHAAddrType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 6, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiNtRegHAAddrType.setStatus('current')
cmiNtRegHomeAgent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 6, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiNtRegHomeAgent.setStatus('current')
cmiNtRegHomeAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 6, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiNtRegHomeAddressType.setStatus('current')
cmiNtRegHomeAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 6, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiNtRegHomeAddress.setStatus('current')
cmiNtRegNAI = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 6, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiNtRegNAI.setStatus('current')
cmiNtRegDeniedCode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 6, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139))).clone(namedValues=NamedValues(("reasonUnspecified", 128), ("admProhibited", 129), ("insufficientResource", 130), ("mnAuthenticationFailure", 131), ("faAuthenticationFailure", 132), ("idMismatch", 133), ("poorlyFormedRequest", 134), ("tooManyBindings", 135), ("unknownHA", 136), ("reverseTunnelUnavailable", 137), ("reverseTunnelBitNotSet", 138), ("encapsulationUnavailable", 139)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiNtRegDeniedCode.setStatus('current')
ciscoMobileIpMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 0))
cmiMrStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 174, 0, 1)).setObjects(("MIP-MIB", "mnState"))
if mibBuilder.loadTexts: cmiMrStateChange.setStatus('current')
cmiMrCoaChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 174, 0, 2)).setObjects(("MIP-MIB", "mnRegCOA"), ("MIP-MIB", "mnRegAgentAddress"))
if mibBuilder.loadTexts: cmiMrCoaChange.setStatus('current')
cmiMrNewMA = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 174, 0, 3)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiMrMaIsHa"), ("CISCO-MOBILE-IP-MIB", "cmiMrMaAdvFlags"), ("CISCO-MOBILE-IP-MIB", "cmiMrMaAdvRcvIf"))
if mibBuilder.loadTexts: cmiMrNewMA.setStatus('current')
cmiHaMnRegReqFailed = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 174, 0, 4)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiNtRegCOAType"), ("CISCO-MOBILE-IP-MIB", "cmiNtRegCOA"), ("CISCO-MOBILE-IP-MIB", "cmiNtRegHAAddrType"), ("CISCO-MOBILE-IP-MIB", "cmiNtRegHomeAgent"), ("CISCO-MOBILE-IP-MIB", "cmiNtRegHomeAddressType"), ("CISCO-MOBILE-IP-MIB", "cmiNtRegHomeAddress"), ("CISCO-MOBILE-IP-MIB", "cmiNtRegNAI"), ("CISCO-MOBILE-IP-MIB", "cmiNtRegDeniedCode"))
if mibBuilder.loadTexts: cmiHaMnRegReqFailed.setStatus('current')
cmiHaMaxBindingsNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 174, 0, 5)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiHaRegTotalMobilityBindings"), ("CISCO-MOBILE-IP-MIB", "cmiHaMaximumBindings"))
if mibBuilder.loadTexts: cmiHaMaxBindingsNotif.setStatus('current')
cmiMaAdvConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 2, 1), )
if mibBuilder.loadTexts: cmiMaAdvConfigTable.setStatus('current')
cmiMaAdvConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 2, 1, 1), ).setIndexNames((0, "CISCO-MOBILE-IP-MIB", "cmiMaAdvInterfaceIndex"))
if mibBuilder.loadTexts: cmiMaAdvConfigEntry.setStatus('current')
cmiMaAdvInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 2, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cmiMaAdvInterfaceIndex.setStatus('current')
cmiMaInterfaceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 2, 1, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMaInterfaceAddressType.setStatus('current')
cmiMaInterfaceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 2, 1, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmiMaInterfaceAddress.setStatus('current')
cmiMaAdvMaxRegLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 65535)).clone(36000)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMaAdvMaxRegLifetime.setStatus('current')
cmiMaAdvPrefixLengthInclusion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 2, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMaAdvPrefixLengthInclusion.setStatus('current')
cmiMaAdvAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 2, 1, 1, 6), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMaAdvAddressType.setStatus('current')
cmiMaAdvAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 2, 1, 1, 7), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMaAdvAddress.setStatus('current')
cmiMaAdvMaxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 2, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4, 1800), ))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMaAdvMaxInterval.setStatus('current')
cmiMaAdvMinInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 2, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 1800), ))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMaAdvMinInterval.setStatus('current')
cmiMaAdvMaxAdvLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 2, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4, 9000), ))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMaAdvMaxAdvLifetime.setStatus('current')
cmiMaAdvResponseSolicitationOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 2, 1, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMaAdvResponseSolicitationOnly.setStatus('current')
cmiMaAdvStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 174, 1, 4, 2, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmiMaAdvStatus.setStatus('current')
ciscoMobileIpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 3))
ciscoMobileIpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 1))
ciscoMobileIpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2))
ciscoMobileIpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 1, 1)).setObjects(("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaRegGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpCompliance = ciscoMobileIpCompliance.setStatus('obsolete')
ciscoMobileIpComplianceV12R02 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 1, 2)).setObjects(("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaRegGroupV12R02"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R02"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRedunGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecAssocGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecViolationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMaRegGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpComplianceV12R02 = ciscoMobileIpComplianceV12R02.setStatus('deprecated')
ciscoMobileIpComplianceV12R03 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 1, 3)).setObjects(("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaRegGroupV12R03"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRedunGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecAssocGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecViolationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMaRegGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpComplianceV12R03 = ciscoMobileIpComplianceV12R03.setStatus('deprecated')
ciscoMobileIpComplianceV12R03r1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 1, 4)).setObjects(("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaRegGroupV12R03r1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRedunGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecAssocGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecViolationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMaRegGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaAdvertisementGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaSystemGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaMobNetGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrSystemGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpTrapObjectsGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpComplianceV12R03r1 = ciscoMobileIpComplianceV12R03r1.setStatus('deprecated')
ciscoMobileIpComplianceV12R04 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 1, 5)).setObjects(("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaRegGroupV12R03r1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRedunGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecAssocGroupV12R02"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecViolationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMaRegGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaAdvertisementGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaSystemGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaMobNetGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrSystemGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpTrapObjectsGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrNotificationGroup"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvertisementGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpComplianceV12R04 = ciscoMobileIpComplianceV12R04.setStatus('deprecated')
ciscoMobileIpComplianceV12R05 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 1, 6)).setObjects(("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaRegGroupV12R03r1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRedunGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecAssocGroupV12R02"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecViolationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMaRegGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaAdvertisementGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaSystemGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaMobNetGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrSystemGroupV1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpTrapObjectsGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrNotificationGroup"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvertisementGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpComplianceV12R05 = ciscoMobileIpComplianceV12R05.setStatus('deprecated')
ciscoMobileIpComplianceV12R06 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 1, 7)).setObjects(("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaRegGroupV12R03r1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRedunGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecAssocGroupV12R02"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecViolationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMaRegGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaAdvertisementGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaSystemGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaMobNetGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrSystemGroupV2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpTrapObjectsGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrNotificationGroup"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvertisementGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpComplianceV12R06 = ciscoMobileIpComplianceV12R06.setStatus('deprecated')
ciscoMobileIpComplianceV12R07 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 1, 8)).setObjects(("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaRegGroupV12R03r2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRedunGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecAssocGroupV12R02"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecViolationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMaRegGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaAdvertisementGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaSystemGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaMobNetGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrSystemGroupV2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpTrapObjectsGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrNotificationGroup"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvertisementGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpComplianceV12R07 = ciscoMobileIpComplianceV12R07.setStatus('deprecated')
ciscoMobileIpComplianceV12R08 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 1, 9)).setObjects(("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaRegGroupV12R03r2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRedunGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecAssocGroupV12R02"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecViolationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMaRegGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaAdvertisementGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaSystemGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaMobNetGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrSystemGroupV2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpTrapObjectsGroupV2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrNotificationGroupV2"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvertisementGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpComplianceV12R08 = ciscoMobileIpComplianceV12R08.setStatus('deprecated')
ciscoMobileIpComplianceV12R09 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 1, 10)).setObjects(("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaRegGroupV12R03r2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRedunGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecAssocGroupV12R02"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecViolationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMaRegGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaAdvertisementGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaSystemGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaMobNetGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrSystemGroupV3"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpTrapObjectsGroupV2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrNotificationGroupV2"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvertisementGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpComplianceV12R09 = ciscoMobileIpComplianceV12R09.setStatus('deprecated')
ciscoMobileIpComplianceV12R10 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 1, 11)).setObjects(("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaRegGroupV12R03r2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r2Sup1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRedunGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecAssocGroupV12R02"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecViolationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMaRegGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaAdvertisementGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaSystemGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaMobNetGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaMobNetGroupSup1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrSystemGroupV3"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrSystemGroupV3Sup1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpTrapObjectsGroupV2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrNotificationGroupV2"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvertisementGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpComplianceV12R10 = ciscoMobileIpComplianceV12R10.setStatus('deprecated')
ciscoMobileIpComplianceV12R11 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 1, 12)).setObjects(("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaRegGroupV12R03r2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r2Sup1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRedunGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecAssocGroupV12R02"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecViolationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMaRegGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaAdvertisementGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaSystemGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaMobNetGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaMobNetGroupSup1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrSystemGroupV3"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrSystemGroupV3Sup1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpTrapObjectsGroupV2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrNotificationGroupV2"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvertisementGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r2Sup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpComplianceV12R11 = ciscoMobileIpComplianceV12R11.setStatus('deprecated')
ciscoMobileIpComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 1, 13)).setObjects(("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaSystemGroupV1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrNotificationGroupV3"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaRegGroupV12R03r2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r2Sup1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRedunGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecAssocGroupV12R02"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecViolationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMaRegGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaAdvertisementGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaSystemGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaMobNetGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaMobNetGroupSup1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrSystemGroupV3"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrSystemGroupV3Sup1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpTrapObjectsGroupV2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrNotificationGroupV2"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvertisementGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r2Sup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpComplianceRev1 = ciscoMobileIpComplianceRev1.setStatus('deprecated')
ciscoMobileIpComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 1, 14)).setObjects(("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaSystemGroupV1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrNotificationGroupV3"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaRegGroupV12R03r2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r2Sup1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRedunGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecAssocGroupV12R02"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpSecViolationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMaRegGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaAdvertisementGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpFaSystemGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMnRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaMobNetGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaMobNetGroupSup1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrSystemGroupV3"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrSystemGroupV3Sup1"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrDiscoveryGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrRegistrationGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpTrapObjectsGroupV2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpMrNotificationGroupV2"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvertisementGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegGroupV12R03r2Sup2"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegIntervalStatsGroup"), ("CISCO-MOBILE-IP-MIB", "ciscoMobileIpHaRegTunnelStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpComplianceRev2 = ciscoMobileIpComplianceRev2.setStatus('current')
ciscoMobileIpFaRegGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 1)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiFaRegTotalVisitors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpFaRegGroup = ciscoMobileIpFaRegGroup.setStatus('obsolete')
ciscoMobileIpHaRegGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 2)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiHaRegTotalMobilityBindings"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpHaRegGroup = ciscoMobileIpHaRegGroup.setStatus('obsolete')
ciscoMobileIpFaRegGroupV12R02 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 3)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiFaRegTotalVisitors"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorHomeAddress"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorHomeAgentAddress"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorTimeGranted"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorTimeRemaining"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorRegFlags"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorRegIDLow"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorRegIDHigh"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorRegIsAccepted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpFaRegGroupV12R02 = ciscoMobileIpFaRegGroupV12R02.setStatus('deprecated')
ciscoMobileIpHaRegGroupV12R02 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 4)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiHaRegTotalMobilityBindings"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMnIdentifierType"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMnIdentifier"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegServAcceptedRequests"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegServDeniedRequests"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegOverallServTime"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRecentServAcceptedTime"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRecentServDeniedTime"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRecentServDeniedCode"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTotalProcLocRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMaxProcLocInMinRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegDateMaxRegsProcLoc"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegProcLocInLastMinRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTotalProcByAAARegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMaxProcByAAAInMinRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegDateMaxRegsProcByAAA"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegProcAAAInLastByMinRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegAvgTimeRegsProcByAAA"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMaxTimeRegsProcByAAA"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpHaRegGroupV12R02 = ciscoMobileIpHaRegGroupV12R02.setStatus('deprecated')
ciscoMobileIpFaRegGroupV12R03 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 9)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiFaRegTotalVisitors"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorHomeAddress"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorHomeAgentAddress"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorTimeGranted"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorTimeRemaining"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorRegFlags"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorRegIDLow"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorRegIDHigh"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorRegIsAccepted"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRequestsRelayed"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRepliesValidFromHA"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRepliesValidRelayMN"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRequestsRelayed"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRepliesValidFromHA"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRepliesValidRelayToMN"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRequestsRelayed"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRepliesValidFromHA"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRepliesValidRelayToMN"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpFaRegGroupV12R03 = ciscoMobileIpFaRegGroupV12R03.setStatus('deprecated')
ciscoMobileIpHaRegGroupV12R03 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 10)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiHaRegTotalMobilityBindings"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMnIdentifierType"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMnIdentifier"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegServAcceptedRequests"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegServDeniedRequests"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegOverallServTime"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRecentServAcceptedTime"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRecentServDeniedTime"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRecentServDeniedCode"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTotalProcLocRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMaxProcLocInMinRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegDateMaxRegsProcLoc"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegProcLocInLastMinRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTotalProcByAAARegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMaxProcByAAAInMinRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegDateMaxRegsProcByAAA"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegProcAAAInLastByMinRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegAvgTimeRegsProcByAAA"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMaxTimeRegsProcByAAA"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiHaEncapUnavailable"), ("CISCO-MOBILE-IP-MIB", "cmiHaNAICheckFailures"), ("CISCO-MOBILE-IP-MIB", "cmiHaInitRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiHaInitRegRequestsAccepted"), ("CISCO-MOBILE-IP-MIB", "cmiHaInitRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiHaInitRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiHaReRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiHaReRegRequestsAccepted"), ("CISCO-MOBILE-IP-MIB", "cmiHaReRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiHaReRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiHaDeRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiHaDeRegRequestsAccepted"), ("CISCO-MOBILE-IP-MIB", "cmiHaDeRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiHaDeRegRequestsDiscarded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpHaRegGroupV12R03 = ciscoMobileIpHaRegGroupV12R03.setStatus('deprecated')
ciscoMobileIpSecAssocGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 6)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiSecAssocsCount"), ("CISCO-MOBILE-IP-MIB", "cmiSecAlgorithmType"), ("CISCO-MOBILE-IP-MIB", "cmiSecAlgorithmMode"), ("CISCO-MOBILE-IP-MIB", "cmiSecKey"), ("CISCO-MOBILE-IP-MIB", "cmiSecReplayMethod"), ("CISCO-MOBILE-IP-MIB", "cmiSecStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpSecAssocGroup = ciscoMobileIpSecAssocGroup.setStatus('deprecated')
ciscoMobileIpHaRedunGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 5)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiHaRedunSentBUs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunFailedBUs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunReceivedBUAcks"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunTotalSentBUs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunReceivedBUs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunSentBUAcks"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunSentBIReqs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunFailedBIReqs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunTotalSentBIReqs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunReceivedBIReps"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunDroppedBIReps"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunSentBIAcks"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunReceivedBIReqs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunSentBIReps"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunFailedBIReps"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunTotalSentBIReps"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunReceivedBIAcks"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunDroppedBIAcks"), ("CISCO-MOBILE-IP-MIB", "cmiHaRedunSecViolations"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpHaRedunGroup = ciscoMobileIpHaRedunGroup.setStatus('current')
ciscoMobileIpSecViolationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 7)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiSecTotalViolations"), ("CISCO-MOBILE-IP-MIB", "cmiSecRecentViolationSPI"), ("CISCO-MOBILE-IP-MIB", "cmiSecRecentViolationTime"), ("CISCO-MOBILE-IP-MIB", "cmiSecRecentViolationIDLow"), ("CISCO-MOBILE-IP-MIB", "cmiSecRecentViolationIDHigh"), ("CISCO-MOBILE-IP-MIB", "cmiSecRecentViolationReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpSecViolationGroup = ciscoMobileIpSecViolationGroup.setStatus('current')
ciscoMobileIpMaRegGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 8)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiMaRegMaxInMinuteRegs"), ("CISCO-MOBILE-IP-MIB", "cmiMaRegDateMaxRegsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiMaRegInLastMinuteRegs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpMaRegGroup = ciscoMobileIpMaRegGroup.setStatus('current')
ciscoMobileIpFaRegGroupV12R03r1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 11)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiFaRegTotalVisitors"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorHomeAddress"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorHomeAgentAddress"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorTimeGranted"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorTimeRemaining"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorRegIDLow"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorRegIDHigh"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorRegIsAccepted"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorRegFlagsRev1"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorChallengeValue"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRequestsRelayed"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRepliesValidFromHA"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRepliesValidRelayMN"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRequestsRelayed"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRepliesValidFromHA"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRepliesValidRelayToMN"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRequestsRelayed"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRepliesValidFromHA"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRepliesValidRelayToMN"), ("CISCO-MOBILE-IP-MIB", "cmiFaReverseTunnelUnavailable"), ("CISCO-MOBILE-IP-MIB", "cmiFaReverseTunnelBitNotSet"), ("CISCO-MOBILE-IP-MIB", "cmiFaMnTooDistant"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeliveryStyleUnsupported"), ("CISCO-MOBILE-IP-MIB", "cmiFaUnknownChallenge"), ("CISCO-MOBILE-IP-MIB", "cmiFaMissingChallenge"), ("CISCO-MOBILE-IP-MIB", "cmiFaStaleChallenge"), ("CISCO-MOBILE-IP-MIB", "cmiFaCvsesFromMnRejected"), ("CISCO-MOBILE-IP-MIB", "cmiFaCvsesFromHaRejected"), ("CISCO-MOBILE-IP-MIB", "cmiFaNvsesFromMnNeglected"), ("CISCO-MOBILE-IP-MIB", "cmiFaNvsesFromHaNeglected"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpFaRegGroupV12R03r1 = ciscoMobileIpFaRegGroupV12R03r1.setStatus('deprecated')
ciscoMobileIpHaRegGroupV12R03r1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 12)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiHaRegTotalMobilityBindings"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMnIdentifierType"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMnIdentifier"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMobilityBindingRegFlags"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegServAcceptedRequests"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegServDeniedRequests"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegOverallServTime"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRecentServAcceptedTime"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRecentServDeniedTime"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRecentServDeniedCode"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTotalProcLocRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMaxProcLocInMinRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegDateMaxRegsProcLoc"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegProcLocInLastMinRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTotalProcByAAARegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMaxProcByAAAInMinRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegDateMaxRegsProcByAAA"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegProcAAAInLastByMinRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegAvgTimeRegsProcByAAA"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMaxTimeRegsProcByAAA"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiHaEncapUnavailable"), ("CISCO-MOBILE-IP-MIB", "cmiHaNAICheckFailures"), ("CISCO-MOBILE-IP-MIB", "cmiHaInitRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiHaInitRegRequestsAccepted"), ("CISCO-MOBILE-IP-MIB", "cmiHaInitRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiHaInitRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiHaReRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiHaReRegRequestsAccepted"), ("CISCO-MOBILE-IP-MIB", "cmiHaReRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiHaReRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiHaDeRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiHaDeRegRequestsAccepted"), ("CISCO-MOBILE-IP-MIB", "cmiHaDeRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiHaDeRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiHaReverseTunnelUnavailable"), ("CISCO-MOBILE-IP-MIB", "cmiHaReverseTunnelBitNotSet"), ("CISCO-MOBILE-IP-MIB", "cmiHaEncapsulationUnavailable"), ("CISCO-MOBILE-IP-MIB", "cmiHaCvsesFromMnRejected"), ("CISCO-MOBILE-IP-MIB", "cmiHaCvsesFromFaRejected"), ("CISCO-MOBILE-IP-MIB", "cmiHaNvsesFromMnNeglected"), ("CISCO-MOBILE-IP-MIB", "cmiHaNvsesFromFaNeglected"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpHaRegGroupV12R03r1 = ciscoMobileIpHaRegGroupV12R03r1.setStatus('deprecated')
ciscoMobileIpFaAdvertisementGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 13)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiFaAdvertIsBusy"), ("CISCO-MOBILE-IP-MIB", "cmiFaAdvertRegRequired"), ("CISCO-MOBILE-IP-MIB", "cmiFaAdvertChallengeWindow"), ("CISCO-MOBILE-IP-MIB", "cmiFaAdvertChallengeValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpFaAdvertisementGroup = ciscoMobileIpFaAdvertisementGroup.setStatus('current')
ciscoMobileIpFaSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 14)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiFaRevTunnelSupported"), ("CISCO-MOBILE-IP-MIB", "cmiFaChallengeSupported"), ("CISCO-MOBILE-IP-MIB", "cmiFaEncapDeliveryStyleSupported"), ("CISCO-MOBILE-IP-MIB", "cmiFaReverseTunnelEnable"), ("CISCO-MOBILE-IP-MIB", "cmiFaChallengeEnable"), ("CISCO-MOBILE-IP-MIB", "cmiFaAdvertChallengeChapSPI"), ("CISCO-MOBILE-IP-MIB", "cmiFaCoaInterfaceOnly"), ("CISCO-MOBILE-IP-MIB", "cmiFaCoaTransmitOnly"), ("CISCO-MOBILE-IP-MIB", "cmiFaCoaRegAsymLink"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpFaSystemGroup = ciscoMobileIpFaSystemGroup.setStatus('current')
ciscoMobileIpMnDiscoveryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 15)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiMnAdvFlags"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpMnDiscoveryGroup = ciscoMobileIpMnDiscoveryGroup.setStatus('current')
ciscoMobileIpMnRegistrationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 16)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiMnRegFlags"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpMnRegistrationGroup = ciscoMobileIpMnRegistrationGroup.setStatus('current')
ciscoMobileIpHaMobNetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 17)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiHaMrDynamic"), ("CISCO-MOBILE-IP-MIB", "cmiHaMrStatus"), ("CISCO-MOBILE-IP-MIB", "cmiHaMobNetDynamic"), ("CISCO-MOBILE-IP-MIB", "cmiHaMobNetStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpHaMobNetGroup = ciscoMobileIpHaMobNetGroup.setStatus('current')
ciscoMobileIpMrSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 18)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiMrReverseTunnel"), ("CISCO-MOBILE-IP-MIB", "cmiMrRedundancyGroup"), ("CISCO-MOBILE-IP-MIB", "cmiMrMobNetAddrType"), ("CISCO-MOBILE-IP-MIB", "cmiMrMobNetAddr"), ("CISCO-MOBILE-IP-MIB", "cmiMrMobNetPfxLen"), ("CISCO-MOBILE-IP-MIB", "cmiMrMobNetStatus"), ("CISCO-MOBILE-IP-MIB", "cmiMrHaTunnelIfIndex"), ("CISCO-MOBILE-IP-MIB", "cmiMrHAPriority"), ("CISCO-MOBILE-IP-MIB", "cmiMrHABest"), ("CISCO-MOBILE-IP-MIB", "cmiMRIfDescription"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfHoldDown"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfRoamPriority"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitPeriodic"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitInterval"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransInitial"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransMax"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransLimit"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransCurrent"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransRemaining"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransCount"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaAddressType"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaAddress"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaDefaultGwType"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaDefaultGw"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaRegRetry"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaRegRetryRemaining"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfStatus"), ("CISCO-MOBILE-IP-MIB", "cmiMrBetterIfDetected"), ("CISCO-MOBILE-IP-MIB", "cmiMrTunnelPktsRcvd"), ("CISCO-MOBILE-IP-MIB", "cmiMrTunnelPktsSent"), ("CISCO-MOBILE-IP-MIB", "cmiMrTunnelBytesRcvd"), ("CISCO-MOBILE-IP-MIB", "cmiMrTunnelBytesSent"), ("CISCO-MOBILE-IP-MIB", "cmiMrRedStateActive"), ("CISCO-MOBILE-IP-MIB", "cmiMrRedStatePassive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpMrSystemGroup = ciscoMobileIpMrSystemGroup.setStatus('deprecated')
ciscoMobileIpMrDiscoveryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 19)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiMrMaIsHa"), ("CISCO-MOBILE-IP-MIB", "cmiMrMaAdvRcvIf"), ("CISCO-MOBILE-IP-MIB", "cmiMrMaIfMacAddress"), ("CISCO-MOBILE-IP-MIB", "cmiMrMaAdvSequence"), ("CISCO-MOBILE-IP-MIB", "cmiMrMaAdvFlags"), ("CISCO-MOBILE-IP-MIB", "cmiMrMaAdvMaxRegLifetime"), ("CISCO-MOBILE-IP-MIB", "cmiMrMaAdvMaxLifetime"), ("CISCO-MOBILE-IP-MIB", "cmiMrMaAdvLifetimeRemaining"), ("CISCO-MOBILE-IP-MIB", "cmiMrMaAdvTimeReceived"), ("CISCO-MOBILE-IP-MIB", "cmiMrMaAdvTimeFirstHeard"), ("CISCO-MOBILE-IP-MIB", "cmiMrMaHoldDownRemaining"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpMrDiscoveryGroup = ciscoMobileIpMrDiscoveryGroup.setStatus('current')
ciscoMobileIpMrRegistrationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 20)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiMrRegExtendExpire"), ("CISCO-MOBILE-IP-MIB", "cmiMrRegExtendRetry"), ("CISCO-MOBILE-IP-MIB", "cmiMrRegExtendInterval"), ("CISCO-MOBILE-IP-MIB", "cmiMrRegLifetime"), ("CISCO-MOBILE-IP-MIB", "cmiMrRegRetransInitial"), ("CISCO-MOBILE-IP-MIB", "cmiMrRegRetransMax"), ("CISCO-MOBILE-IP-MIB", "cmiMrRegRetransLimit"), ("CISCO-MOBILE-IP-MIB", "cmiMrRegNewHa"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpMrRegistrationGroup = ciscoMobileIpMrRegistrationGroup.setStatus('current')
ciscoMobileIpTrapObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 21)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiTrapControl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpTrapObjectsGroup = ciscoMobileIpTrapObjectsGroup.setStatus('deprecated')
ciscoMobileIpMrNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 22)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiMrStateChange"), ("CISCO-MOBILE-IP-MIB", "cmiMrCoaChange"), ("CISCO-MOBILE-IP-MIB", "cmiMrNewMA"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpMrNotificationGroup = ciscoMobileIpMrNotificationGroup.setStatus('deprecated')
ciscoMobileIpSecAssocGroupV12R02 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 23)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiSecAssocsCount"), ("CISCO-MOBILE-IP-MIB", "cmiSecAlgorithmType"), ("CISCO-MOBILE-IP-MIB", "cmiSecAlgorithmMode"), ("CISCO-MOBILE-IP-MIB", "cmiSecReplayMethod"), ("CISCO-MOBILE-IP-MIB", "cmiSecStatus"), ("CISCO-MOBILE-IP-MIB", "cmiSecKey2"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpSecAssocGroupV12R02 = ciscoMobileIpSecAssocGroupV12R02.setStatus('current')
cmiMaAdvertisementGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 24)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiMaInterfaceAddressType"), ("CISCO-MOBILE-IP-MIB", "cmiMaInterfaceAddress"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvMaxRegLifetime"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvPrefixLengthInclusion"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvAddress"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvAddressType"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvMaxInterval"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvMinInterval"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvMaxAdvLifetime"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvResponseSolicitationOnly"), ("CISCO-MOBILE-IP-MIB", "cmiMaAdvStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmiMaAdvertisementGroup = cmiMaAdvertisementGroup.setStatus('current')
ciscoMobileIpMrSystemGroupV1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 25)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiMrReverseTunnel"), ("CISCO-MOBILE-IP-MIB", "cmiMrRedundancyGroup"), ("CISCO-MOBILE-IP-MIB", "cmiMrMobNetAddrType"), ("CISCO-MOBILE-IP-MIB", "cmiMrMobNetAddr"), ("CISCO-MOBILE-IP-MIB", "cmiMrMobNetPfxLen"), ("CISCO-MOBILE-IP-MIB", "cmiMrMobNetStatus"), ("CISCO-MOBILE-IP-MIB", "cmiMrHaTunnelIfIndex"), ("CISCO-MOBILE-IP-MIB", "cmiMrHAPriority"), ("CISCO-MOBILE-IP-MIB", "cmiMrHABest"), ("CISCO-MOBILE-IP-MIB", "cmiMRIfDescription"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfHoldDown"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfRoamPriority"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitPeriodic"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitInterval"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransInitial"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransMax"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransLimit"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransCurrent"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransRemaining"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransCount"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaAddressType"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaAddress"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaDefaultGwType"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaDefaultGw"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaRegRetry"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaRegRetryRemaining"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfStatus"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaRegistration"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaOnly"), ("CISCO-MOBILE-IP-MIB", "cmiMrBetterIfDetected"), ("CISCO-MOBILE-IP-MIB", "cmiMrTunnelPktsRcvd"), ("CISCO-MOBILE-IP-MIB", "cmiMrTunnelPktsSent"), ("CISCO-MOBILE-IP-MIB", "cmiMrTunnelBytesRcvd"), ("CISCO-MOBILE-IP-MIB", "cmiMrTunnelBytesSent"), ("CISCO-MOBILE-IP-MIB", "cmiMrRedStateActive"), ("CISCO-MOBILE-IP-MIB", "cmiMrRedStatePassive"), ("CISCO-MOBILE-IP-MIB", "cmiMrCollocatedTunnel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpMrSystemGroupV1 = ciscoMobileIpMrSystemGroupV1.setStatus('deprecated')
ciscoMobileIpMrSystemGroupV2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 26)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiMrReverseTunnel"), ("CISCO-MOBILE-IP-MIB", "cmiMrRedundancyGroup"), ("CISCO-MOBILE-IP-MIB", "cmiMrMobNetAddrType"), ("CISCO-MOBILE-IP-MIB", "cmiMrMobNetAddr"), ("CISCO-MOBILE-IP-MIB", "cmiMrMobNetPfxLen"), ("CISCO-MOBILE-IP-MIB", "cmiMrMobNetStatus"), ("CISCO-MOBILE-IP-MIB", "cmiMrHaTunnelIfIndex"), ("CISCO-MOBILE-IP-MIB", "cmiMrHAPriority"), ("CISCO-MOBILE-IP-MIB", "cmiMrHABest"), ("CISCO-MOBILE-IP-MIB", "cmiMRIfDescription"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfHoldDown"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfRoamPriority"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitPeriodic"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitInterval"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransInitial"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransMax"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransLimit"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransCurrent"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransRemaining"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransCount"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaAddressType"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaAddress"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaDefaultGwType"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaDefaultGw"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaRegRetry"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaRegRetryRemaining"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfStatus"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaRegistration"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaOnly"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaEnable"), ("CISCO-MOBILE-IP-MIB", "cmiMrBetterIfDetected"), ("CISCO-MOBILE-IP-MIB", "cmiMrTunnelPktsRcvd"), ("CISCO-MOBILE-IP-MIB", "cmiMrTunnelPktsSent"), ("CISCO-MOBILE-IP-MIB", "cmiMrTunnelBytesRcvd"), ("CISCO-MOBILE-IP-MIB", "cmiMrTunnelBytesSent"), ("CISCO-MOBILE-IP-MIB", "cmiMrRedStateActive"), ("CISCO-MOBILE-IP-MIB", "cmiMrRedStatePassive"), ("CISCO-MOBILE-IP-MIB", "cmiMrCollocatedTunnel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpMrSystemGroupV2 = ciscoMobileIpMrSystemGroupV2.setStatus('deprecated')
ciscoMobileIpFaRegGroupV12R03r2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 27)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiFaRegTotalVisitors"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorHomeAddress"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorHomeAgentAddress"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorTimeGranted"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorTimeRemaining"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorRegIDLow"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorRegIDHigh"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorRegIsAccepted"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorRegFlagsRev1"), ("CISCO-MOBILE-IP-MIB", "cmiFaRegVisitorChallengeValue"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRequestsRelayed"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRepliesValidFromHA"), ("CISCO-MOBILE-IP-MIB", "cmiFaInitRegRepliesValidRelayMN"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRequestsRelayed"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRepliesValidFromHA"), ("CISCO-MOBILE-IP-MIB", "cmiFaReRegRepliesValidRelayToMN"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRequestsRelayed"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRepliesValidFromHA"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeRegRepliesValidRelayToMN"), ("CISCO-MOBILE-IP-MIB", "cmiFaReverseTunnelUnavailable"), ("CISCO-MOBILE-IP-MIB", "cmiFaReverseTunnelBitNotSet"), ("CISCO-MOBILE-IP-MIB", "cmiFaMnTooDistant"), ("CISCO-MOBILE-IP-MIB", "cmiFaDeliveryStyleUnsupported"), ("CISCO-MOBILE-IP-MIB", "cmiFaUnknownChallenge"), ("CISCO-MOBILE-IP-MIB", "cmiFaMissingChallenge"), ("CISCO-MOBILE-IP-MIB", "cmiFaStaleChallenge"), ("CISCO-MOBILE-IP-MIB", "cmiFaCvsesFromMnRejected"), ("CISCO-MOBILE-IP-MIB", "cmiFaCvsesFromHaRejected"), ("CISCO-MOBILE-IP-MIB", "cmiFaNvsesFromMnNeglected"), ("CISCO-MOBILE-IP-MIB", "cmiFaNvsesFromHaNeglected"), ("CISCO-MOBILE-IP-MIB", "cmiFaTotalRegRequests"), ("CISCO-MOBILE-IP-MIB", "cmiFaTotalRegReplies"), ("CISCO-MOBILE-IP-MIB", "cmiFaMnFaAuthFailures"), ("CISCO-MOBILE-IP-MIB", "cmiFaMnAAAAuthFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpFaRegGroupV12R03r2 = ciscoMobileIpFaRegGroupV12R03r2.setStatus('current')
ciscoMobileIpHaRegGroupV12R03r2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 28)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiHaRegTotalMobilityBindings"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMnIdentifierType"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMnIdentifier"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMobilityBindingRegFlags"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegServAcceptedRequests"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegServDeniedRequests"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegOverallServTime"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRecentServAcceptedTime"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRecentServDeniedTime"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRecentServDeniedCode"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTotalProcLocRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMaxProcLocInMinRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegDateMaxRegsProcLoc"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegProcLocInLastMinRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTotalProcByAAARegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMaxProcByAAAInMinRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegDateMaxRegsProcByAAA"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegProcAAAInLastByMinRegs"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegAvgTimeRegsProcByAAA"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMaxTimeRegsProcByAAA"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiHaEncapUnavailable"), ("CISCO-MOBILE-IP-MIB", "cmiHaNAICheckFailures"), ("CISCO-MOBILE-IP-MIB", "cmiHaInitRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiHaInitRegRequestsAccepted"), ("CISCO-MOBILE-IP-MIB", "cmiHaInitRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiHaInitRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiHaReRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiHaReRegRequestsAccepted"), ("CISCO-MOBILE-IP-MIB", "cmiHaReRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiHaReRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiHaDeRegRequestsReceived"), ("CISCO-MOBILE-IP-MIB", "cmiHaDeRegRequestsAccepted"), ("CISCO-MOBILE-IP-MIB", "cmiHaDeRegRequestsDenied"), ("CISCO-MOBILE-IP-MIB", "cmiHaDeRegRequestsDiscarded"), ("CISCO-MOBILE-IP-MIB", "cmiHaReverseTunnelUnavailable"), ("CISCO-MOBILE-IP-MIB", "cmiHaReverseTunnelBitNotSet"), ("CISCO-MOBILE-IP-MIB", "cmiHaEncapsulationUnavailable"), ("CISCO-MOBILE-IP-MIB", "cmiHaCvsesFromMnRejected"), ("CISCO-MOBILE-IP-MIB", "cmiHaCvsesFromFaRejected"), ("CISCO-MOBILE-IP-MIB", "cmiHaNvsesFromMnNeglected"), ("CISCO-MOBILE-IP-MIB", "cmiHaNvsesFromFaNeglected"), ("CISCO-MOBILE-IP-MIB", "cmiHaMnHaAuthFailures"), ("CISCO-MOBILE-IP-MIB", "cmiHaMnAAAAuthFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpHaRegGroupV12R03r2 = ciscoMobileIpHaRegGroupV12R03r2.setStatus('current')
ciscoMobileIpTrapObjectsGroupV2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 29)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiTrapControl"), ("CISCO-MOBILE-IP-MIB", "cmiNtRegCOA"), ("CISCO-MOBILE-IP-MIB", "cmiNtRegCOAType"), ("CISCO-MOBILE-IP-MIB", "cmiNtRegHAAddrType"), ("CISCO-MOBILE-IP-MIB", "cmiNtRegHomeAgent"), ("CISCO-MOBILE-IP-MIB", "cmiNtRegHomeAddressType"), ("CISCO-MOBILE-IP-MIB", "cmiNtRegHomeAddress"), ("CISCO-MOBILE-IP-MIB", "cmiNtRegNAI"), ("CISCO-MOBILE-IP-MIB", "cmiNtRegDeniedCode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpTrapObjectsGroupV2 = ciscoMobileIpTrapObjectsGroupV2.setStatus('current')
ciscoMobileIpMrNotificationGroupV2 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 30)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiMrStateChange"), ("CISCO-MOBILE-IP-MIB", "cmiMrCoaChange"), ("CISCO-MOBILE-IP-MIB", "cmiMrNewMA"), ("CISCO-MOBILE-IP-MIB", "cmiHaMnRegReqFailed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpMrNotificationGroupV2 = ciscoMobileIpMrNotificationGroupV2.setStatus('current')
ciscoMobileIpMrSystemGroupV3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 31)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiMrReverseTunnel"), ("CISCO-MOBILE-IP-MIB", "cmiMrRedundancyGroup"), ("CISCO-MOBILE-IP-MIB", "cmiMrMobNetAddrType"), ("CISCO-MOBILE-IP-MIB", "cmiMrMobNetAddr"), ("CISCO-MOBILE-IP-MIB", "cmiMrMobNetPfxLen"), ("CISCO-MOBILE-IP-MIB", "cmiMrMobNetStatus"), ("CISCO-MOBILE-IP-MIB", "cmiMrHaTunnelIfIndex"), ("CISCO-MOBILE-IP-MIB", "cmiMrHAPriority"), ("CISCO-MOBILE-IP-MIB", "cmiMrHABest"), ("CISCO-MOBILE-IP-MIB", "cmiMRIfDescription"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfHoldDown"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfRoamPriority"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitPeriodic"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitInterval"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransInitial"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransMax"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransLimit"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransCurrent"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransRemaining"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfSolicitRetransCount"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaAddressType"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaAddress"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaDefaultGwType"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaDefaultGw"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaRegRetry"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaRegRetryRemaining"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfStatus"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaRegistration"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaOnly"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfCCoaEnable"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfRoamStatus"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfRegisteredCoAType"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfRegisteredCoA"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfRegisteredMaAddrType"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfRegisteredMaAddr"), ("CISCO-MOBILE-IP-MIB", "cmiMrBetterIfDetected"), ("CISCO-MOBILE-IP-MIB", "cmiMrTunnelPktsRcvd"), ("CISCO-MOBILE-IP-MIB", "cmiMrTunnelPktsSent"), ("CISCO-MOBILE-IP-MIB", "cmiMrTunnelBytesRcvd"), ("CISCO-MOBILE-IP-MIB", "cmiMrTunnelBytesSent"), ("CISCO-MOBILE-IP-MIB", "cmiMrRedStateActive"), ("CISCO-MOBILE-IP-MIB", "cmiMrRedStatePassive"), ("CISCO-MOBILE-IP-MIB", "cmiMrCollocatedTunnel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpMrSystemGroupV3 = ciscoMobileIpMrSystemGroupV3.setStatus('current')
ciscoMobileIpHaRegGroupV12R03r2Sup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 32)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiHaRegMnIfDescription"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMnIfBandwidth"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMnIfID"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegMnIfPathMetricType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpHaRegGroupV12R03r2Sup1 = ciscoMobileIpHaRegGroupV12R03r2Sup1.setStatus('current')
ciscoMobileIpHaMobNetGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 33)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiHaMrMultiPath"), ("CISCO-MOBILE-IP-MIB", "cmiHaMrMultiPathMetricType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpHaMobNetGroupSup1 = ciscoMobileIpHaMobNetGroupSup1.setStatus('current')
ciscoMobileIpMrSystemGroupV3Sup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 34)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiMrIfHaTunnelIfIndex"), ("CISCO-MOBILE-IP-MIB", "cmiMrIfID"), ("CISCO-MOBILE-IP-MIB", "cmiMrMultiPath"), ("CISCO-MOBILE-IP-MIB", "cmiMrMultiPathMetricType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpMrSystemGroupV3Sup1 = ciscoMobileIpMrSystemGroupV3Sup1.setStatus('current')
ciscoMobileIpHaRegGroupV12R03r2Sup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 35)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiHaRegMobilityBindingMacAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpHaRegGroupV12R03r2Sup2 = ciscoMobileIpHaRegGroupV12R03r2Sup2.setStatus('current')
ciscoMobileIpHaSystemGroupV1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 36)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiHaSystemVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpHaSystemGroupV1 = ciscoMobileIpHaSystemGroupV1.setStatus('current')
ciscoMobileIpMrNotificationGroupV3 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 37)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiHaMaxBindingsNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpMrNotificationGroupV3 = ciscoMobileIpMrNotificationGroupV3.setStatus('current')
ciscoMobileIpHaRegGroupV1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 38)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiHaMaximumBindings"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpHaRegGroupV1 = ciscoMobileIpHaRegGroupV1.setStatus('current')
ciscoMobileIpHaRegIntervalStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 39)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiHaRegIntervalSize"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegIntervalMaxActiveBindings"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegInterval3gpp2MaxActiveBindings"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegIntervalWimaxMaxActiveBindings"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpHaRegIntervalStatsGroup = ciscoMobileIpHaRegIntervalStatsGroup.setStatus('current')
ciscoMobileIpHaRegTunnelStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 174, 3, 2, 40)).setObjects(("CISCO-MOBILE-IP-MIB", "cmiHaRegTunnelStatsTunnelType"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTunnelStatsNumUsers"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTunnelStatsDataRateInt"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTunnelStatsInBitRate"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTunnelStatsInPktRate"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTunnelStatsInBytes"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTunnelStatsInPkts"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTunnelStatsOutBitRate"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTunnelStatsOutPktRate"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTunnelStatsOutBytes"), ("CISCO-MOBILE-IP-MIB", "cmiHaRegTunnelStatsOutPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMobileIpHaRegTunnelStatsGroup = ciscoMobileIpHaRegTunnelStatsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-MOBILE-IP-MIB", cmiFaReRegRequestsRelayed=cmiFaReRegRequestsRelayed, cmiMrIfRoamStatus=cmiMrIfRoamStatus, cmiHaRegTunnelStatsDataRateInt=cmiHaRegTunnelStatsDataRateInt, cmiMrStateChange=cmiMrStateChange, cmiHaRegRecentServAcceptedTime=cmiHaRegRecentServAcceptedTime, ciscoMobileIpComplianceV12R09=ciscoMobileIpComplianceV12R09, ciscoMobileIpFaAdvertisementGroup=ciscoMobileIpFaAdvertisementGroup, ciscoMobileIpMIBObjects=ciscoMobileIpMIBObjects, cmiHaRegMaxTimeRegsProcByAAA=cmiHaRegMaxTimeRegsProcByAAA, cmiMaRegInLastMinuteRegs=cmiMaRegInLastMinuteRegs, ciscoMobileIpSecAssocGroup=ciscoMobileIpSecAssocGroup, cmiHaNvsesFromMnNeglected=cmiHaNvsesFromMnNeglected, cmiMrRedStatePassive=cmiMrRedStatePassive, cmiHaRegRequestsDiscarded=cmiHaRegRequestsDiscarded, cmiFaRegVisitorTimeRemaining=cmiFaRegVisitorTimeRemaining, cmiHaRegMaxProcLocInMinRegs=cmiHaRegMaxProcLocInMinRegs, cmiMrRedStateActive=cmiMrRedStateActive, cmiFaUnknownChallenge=cmiFaUnknownChallenge, ciscoMobileIpHaMobNetGroupSup1=ciscoMobileIpHaMobNetGroupSup1, cmiSecurity=cmiSecurity, cmiHaReRegRequestsDenied=cmiHaReRegRequestsDenied, cmiHaNvsesFromFaNeglected=cmiHaNvsesFromFaNeglected, cmiHaMrDynamic=cmiHaMrDynamic, cmiHaDeRegRequestsDenied=cmiHaDeRegRequestsDenied, cmiMrRedundancyGroup=cmiMrRedundancyGroup, cmiMnDiscovery=cmiMnDiscovery, cmiMrIfCCoaOnly=cmiMrIfCCoaOnly, cmiHaRedunDroppedBIAcks=cmiHaRedunDroppedBIAcks, ciscoMobileIpFaRegGroupV12R03r2=ciscoMobileIpFaRegGroupV12R03r2, cmiHaRegMobilityBindingMacAddress=cmiHaRegMobilityBindingMacAddress, cmiMaAdvResponseSolicitationOnly=cmiMaAdvResponseSolicitationOnly, cmiFa=cmiFa, cmiHaInitRegRequestsAccepted=cmiHaInitRegRequestsAccepted, cmiFaReverseTunnelUnavailable=cmiFaReverseTunnelUnavailable, CmiEntityIdentifier=CmiEntityIdentifier, cmiHaRegRequestsDenied=cmiHaRegRequestsDenied, cmiFaNvsesFromHaNeglected=cmiFaNvsesFromHaNeglected, ciscoMobileIpComplianceV12R03=ciscoMobileIpComplianceV12R03, cmiSecAssocTable=cmiSecAssocTable, cmiMrRegRetransInitial=cmiMrRegRetransInitial, cmiHaMrMultiPath=cmiHaMrMultiPath, cmiHaRedunSecViolations=cmiHaRedunSecViolations, cmiHaRedun=cmiHaRedun, cmiFaRegVisitorEntry=cmiFaRegVisitorEntry, cmiMaAdvAddressType=cmiMaAdvAddressType, cmiSecViolationEntry=cmiSecViolationEntry, cmiMaAdvConfigEntry=cmiMaAdvConfigEntry, cmiFaReRegRepliesValidRelayToMN=cmiFaReRegRepliesValidRelayToMN, cmiMaAdvInterfaceIndex=cmiMaAdvInterfaceIndex, cmiHaMrAddr=cmiHaMrAddr, cmiMrIfCCoaEnable=cmiMrIfCCoaEnable, cmiMaRegDateMaxRegsReceived=cmiMaRegDateMaxRegsReceived, cmiHaRegTunnelStatsTunnelType=cmiHaRegTunnelStatsTunnelType, cmiMrMobNetAddrType=cmiMrMobNetAddrType, cmiFaRegVisitorRegIDLow=cmiFaRegVisitorRegIDLow, cmiMrCoaChange=cmiMrCoaChange, cmiHaRegTunnelStatsInBitRate=cmiHaRegTunnelStatsInBitRate, cmiHaRegIntervalWimaxMaxActiveBindings=cmiHaRegIntervalWimaxMaxActiveBindings, cmiHaReRegRequestsReceived=cmiHaReRegRequestsReceived, ciscoMobileIpMnDiscoveryGroup=ciscoMobileIpMnDiscoveryGroup, cmiFaInitRegRepliesValidRelayMN=cmiFaInitRegRepliesValidRelayMN, cmiMrIfEntry=cmiMrIfEntry, ciscoMobileIpMrNotificationGroup=ciscoMobileIpMrNotificationGroup, cmiHaRegOverallServTime=cmiHaRegOverallServTime, cmiHaRegTunnelStatsOutBitRate=cmiHaRegTunnelStatsOutBitRate, cmiFaAdvertChallengeWindow=cmiFaAdvertChallengeWindow, cmiMrRegRetransMax=cmiMrRegRetransMax, cmiMrHABest=cmiMrHABest, cmiMaAdvAddress=cmiMaAdvAddress, cmiFaMnTooDistant=cmiFaMnTooDistant, cmiHaRegTunnelStatsNumUsers=cmiHaRegTunnelStatsNumUsers, cmiMnRegistrationTable=cmiMnRegistrationTable, cmiFaRegVisitorIdentifierType=cmiFaRegVisitorIdentifierType, cmiHaRegMobilityBindingTable=cmiHaRegMobilityBindingTable, ciscoMobileIpHaRegGroupV1=ciscoMobileIpHaRegGroupV1, cmiFaAdvertRegRequired=cmiFaAdvertRegRequired, cmiHaRedunFailedBIReps=cmiHaRedunFailedBIReps, cmiMrTunnelBytesRcvd=cmiMrTunnelBytesRcvd, ciscoMobileIpMrSystemGroupV3Sup1=ciscoMobileIpMrSystemGroupV3Sup1, cmiHaMrEntry=cmiHaMrEntry, cmiFaMissingChallenge=cmiFaMissingChallenge, cmiMaAdvMinInterval=cmiMaAdvMinInterval, cmiFaReverseTunnelEnable=cmiFaReverseTunnelEnable, cmiHaMrMultiPathMetricType=cmiHaMrMultiPathMetricType, cmiMrRegExtendRetry=cmiMrRegExtendRetry, cmiMaAdvStatus=cmiMaAdvStatus, ciscoMobileIpHaRegGroupV12R03r2Sup1=ciscoMobileIpHaRegGroupV12R03r2Sup1, ciscoMobileIpHaRegGroupV12R03r2=ciscoMobileIpHaRegGroupV12R03r2, cmiFaDeRegRequestsDiscarded=cmiFaDeRegRequestsDiscarded, cmiFaAdvertChallengeEntry=cmiFaAdvertChallengeEntry, cmiFaChallengeEnable=cmiFaChallengeEnable, cmiMnRegistrationEntry=cmiMnRegistrationEntry, CmiEntityIdentifierType=CmiEntityIdentifierType, ciscoMobileIpMIBNotifications=ciscoMobileIpMIBNotifications, cmiMnRegistration=cmiMnRegistration, cmiFaAdvertisement=cmiFaAdvertisement, cmiMrIfCCoaRegistration=cmiMrIfCCoaRegistration, ciscoMobileIpComplianceV12R06=ciscoMobileIpComplianceV12R06, ciscoMobileIpComplianceV12R07=ciscoMobileIpComplianceV12R07, cmiHaRedunTotalSentBUs=cmiHaRedunTotalSentBUs, cmiHaRegMnIfPathMetricType=cmiHaRegMnIfPathMetricType, cmiSecRecentViolationTime=cmiSecRecentViolationTime, cmiHaRedunSentBIReqs=cmiHaRedunSentBIReqs, cmiFaCoaEntry=cmiFaCoaEntry, cmiNtRegHAAddrType=cmiNtRegHAAddrType, ciscoMobileIpHaRegGroupV12R03r2Sup2=ciscoMobileIpHaRegGroupV12R03r2Sup2, cmiFaDeliveryStyleUnsupported=cmiFaDeliveryStyleUnsupported, cmiMnRecentAdvReceived=cmiMnRecentAdvReceived, cmiHaEncapUnavailable=cmiHaEncapUnavailable, cmiMrIfHoldDown=cmiMrIfHoldDown, cmiMrCollocatedTunnel=cmiMrCollocatedTunnel, cmiMrMaIsHa=cmiMrMaIsHa, cmiFaMnFaAuthFailures=cmiFaMnFaAuthFailures, cmiMrMultiPathMetricType=cmiMrMultiPathMetricType, ciscoMobileIpHaRedunGroup=ciscoMobileIpHaRedunGroup, PYSNMP_MODULE_ID=ciscoMobileIpMIB, cmiNtRegHomeAddressType=cmiNtRegHomeAddressType, ciscoMobileIpComplianceRev1=ciscoMobileIpComplianceRev1, cmiFaInitRegRequestsDiscarded=cmiFaInitRegRequestsDiscarded, ciscoMobileIpMaRegGroup=ciscoMobileIpMaRegGroup, cmiNtRegNAI=cmiNtRegNAI, cmiHa=cmiHa, cmiHaRegTotalProcLocRegs=cmiHaRegTotalProcLocRegs, cmiMrMaAdvSequence=cmiMrMaAdvSequence, cmiHaRegMaxProcByAAAInMinRegs=cmiHaRegMaxProcByAAAInMinRegs, cmiHaRedunReceivedBIReqs=cmiHaRedunReceivedBIReqs, ciscoMobileIpComplianceV12R05=ciscoMobileIpComplianceV12R05, cmiHaRegAvgTimeRegsProcByAAA=cmiHaRegAvgTimeRegsProcByAAA, ciscoMobileIpHaMobNetGroup=ciscoMobileIpHaMobNetGroup, CmiRegistrationFlags=CmiRegistrationFlags, cmiMrIfSolicitPeriodic=cmiMrIfSolicitPeriodic, cmiMrIfStatus=cmiMrIfStatus, cmiSecAssocEntry=cmiSecAssocEntry, ciscoMobileIpHaSystemGroupV1=ciscoMobileIpHaSystemGroupV1, cmiHaRegProcAAAInLastByMinRegs=cmiHaRegProcAAAInLastByMinRegs, cmiFaReRegRepliesValidFromHA=cmiFaReRegRepliesValidFromHA, cmiSecViolatorIdentifierType=cmiSecViolatorIdentifierType, cmiFaRegVisitorRegFlagsRev1=cmiFaRegVisitorRegFlagsRev1, cmiNtRegDeniedCode=cmiNtRegDeniedCode, cmiMrMaAdvFlags=cmiMrMaAdvFlags, ciscoMobileIpSecViolationGroup=ciscoMobileIpSecViolationGroup, cmiHaRegDateMaxRegsProcByAAA=cmiHaRegDateMaxRegsProcByAAA, cmiMaAdvMaxRegLifetime=cmiMaAdvMaxRegLifetime, ciscoMobileIpComplianceRev2=ciscoMobileIpComplianceRev2, ciscoMobileIpHaRegGroup=ciscoMobileIpHaRegGroup, cmiMrRegExtendExpire=cmiMrRegExtendExpire, cmiMrRegistration=cmiMrRegistration, cmiHaMnAAAAuthFailures=cmiHaMnAAAAuthFailures, cmiHaRegCounterTable=cmiHaRegCounterTable, cmiMaAdvMaxAdvLifetime=cmiMaAdvMaxAdvLifetime, cmiHaRegMnIdentifier=cmiHaRegMnIdentifier, cmiHaRedunSentBIAcks=cmiHaRedunSentBIAcks, ciscoMobileIpCompliance=ciscoMobileIpCompliance, cmiSecPeerIdentifier=cmiSecPeerIdentifier, cmiHaRegTotalProcByAAARegs=cmiHaRegTotalProcByAAARegs, cmiNtRegHomeAgent=cmiNtRegHomeAgent, cmiHaMrAddrType=cmiHaMrAddrType, cmiMRIfDescription=cmiMRIfDescription, cmiMrIfRegisteredCoA=cmiMrIfRegisteredCoA, cmiHaRedunFailedBIReqs=cmiHaRedunFailedBIReqs, cmiHaRegMnIfID=cmiHaRegMnIfID, cmiMrIfCCoaRegRetryRemaining=cmiMrIfCCoaRegRetryRemaining, cmiHaRegTunnelStatsInPkts=cmiHaRegTunnelStatsInPkts, cmiMrIfCCoaAddress=cmiMrIfCCoaAddress, cmiFaChallengeSupported=cmiFaChallengeSupported, cmiHaRedunReceivedBIReps=cmiHaRedunReceivedBIReps, ciscoMobileIpComplianceV12R02=ciscoMobileIpComplianceV12R02, cmiFaDeRegRequestsDenied=cmiFaDeRegRequestsDenied, ciscoMobileIpSecAssocGroupV12R02=ciscoMobileIpSecAssocGroupV12R02, cmiFaInitRegRequestsDenied=cmiFaInitRegRequestsDenied, cmiSecViolationTable=cmiSecViolationTable, cmiFaInitRegRequestsReceived=cmiFaInitRegRequestsReceived, cmiMaAdvMaxInterval=cmiMaAdvMaxInterval, CmiMultiPathMetricType=CmiMultiPathMetricType, cmiMrMaAdvEntry=cmiMrMaAdvEntry, cmiFaInitRegRequestsRelayed=cmiFaInitRegRequestsRelayed, cmiFaReRegRequestsDiscarded=cmiFaReRegRequestsDiscarded, cmiHaRegMnId=cmiHaRegMnId, cmiFaDeRegRepliesValidFromHA=cmiFaDeRegRepliesValidFromHA, cmiHaRedunSentBIReps=cmiHaRedunSentBIReps, cmiFaRegVisitorHomeAgentAddress=cmiFaRegVisitorHomeAgentAddress, cmiHaRedunSentBUs=cmiHaRedunSentBUs, cmiMrTunnelPktsRcvd=cmiMrTunnelPktsRcvd, cmiMrIfRoamPriority=cmiMrIfRoamPriority, ciscoMobileIpFaRegGroupV12R03r1=ciscoMobileIpFaRegGroupV12R03r1, cmiHaRegTunnelStatsOutPktRate=cmiHaRegTunnelStatsOutPktRate, cmiFaDeRegRequestsReceived=cmiFaDeRegRequestsReceived, cmiHaMobNetPfxLen=cmiHaMobNetPfxLen, cmiHaRegCounterEntry=cmiHaRegCounterEntry, cmiHaRegTunnelStatsTable=cmiHaRegTunnelStatsTable, cmiFaSystem=cmiFaSystem, cmiMrIfCCoaAddressType=cmiMrIfCCoaAddressType, cmiMrTunnelPktsSent=cmiMrTunnelPktsSent, ciscoMobileIpMrNotificationGroupV3=ciscoMobileIpMrNotificationGroupV3, cmiHaRegRecentServDeniedCode=cmiHaRegRecentServDeniedCode, cmiHaRegMobilityBindingEntry=cmiHaRegMobilityBindingEntry, cmiMrMobNetStatus=cmiMrMobNetStatus, cmiMrIfTable=cmiMrIfTable, cmiFaInterfaceEntry=cmiFaInterfaceEntry, cmiMaInterfaceAddressType=cmiMaInterfaceAddressType, cmiMrRegNewHa=cmiMrRegNewHa, cmiHaRegRecentServDeniedTime=cmiHaRegRecentServDeniedTime, cmiMrIfSolicitRetransLimit=cmiMrIfSolicitRetransLimit, cmiHaReverseTunnelUnavailable=cmiHaReverseTunnelUnavailable, cmiFaRegVisitorRegIsAccepted=cmiFaRegVisitorRegIsAccepted, cmiMn=cmiMn, cmiMrIfRegisteredCoAType=cmiMrIfRegisteredCoAType, cmiMrHAEntry=cmiMrHAEntry, ciscoMobileIpMIBConformance=ciscoMobileIpMIBConformance, cmiMrMobNetEntry=cmiMrMobNetEntry, cmiFaTotalRegReplies=cmiFaTotalRegReplies, cmiHaRedunFailedBUs=cmiHaRedunFailedBUs, cmiHaRedunReceivedBUAcks=cmiHaRedunReceivedBUAcks, cmiHaRegMnIfDescription=cmiHaRegMnIfDescription, cmiHaDeRegRequestsAccepted=cmiHaDeRegRequestsAccepted, cmiMrIfSolicitInterval=cmiMrIfSolicitInterval, cmiMrMaAdvMaxRegLifetime=cmiMrMaAdvMaxRegLifetime, ciscoMobileIpFaRegGroupV12R02=ciscoMobileIpFaRegGroupV12R02, cmiFaAdvertChallengeIndex=cmiFaAdvertChallengeIndex, cmiMaRegMaxInMinuteRegs=cmiMaRegMaxInMinuteRegs, cmiSecAlgorithmType=cmiSecAlgorithmType, cmiHaMnRegReqFailed=cmiHaMnRegReqFailed, cmiMrMaAdvTimeFirstHeard=cmiMrMaAdvTimeFirstHeard, cmiHaRegTunnelStatsInBytes=cmiHaRegTunnelStatsInBytes, cmiMrMaAdvLifetimeRemaining=cmiMrMaAdvLifetimeRemaining, cmiFaCoaTable=cmiFaCoaTable, cmiMrIfCCoaDefaultGw=cmiMrIfCCoaDefaultGw, cmiMrMobNetPfxLen=cmiMrMobNetPfxLen, ciscoMobileIpFaSystemGroup=ciscoMobileIpFaSystemGroup, cmiSecStatus=cmiSecStatus, cmiHaRegTunnelStatsSrcAddr=cmiHaRegTunnelStatsSrcAddr, cmiMrIfCCoaDefaultGwType=cmiMrIfCCoaDefaultGwType, ciscoMobileIpComplianceV12R03r1=ciscoMobileIpComplianceV12R03r1, cmiMrBetterIfDetected=cmiMrBetterIfDetected, cmiMrDiscovery=cmiMrDiscovery, cmiHaInitRegRequestsDenied=cmiHaInitRegRequestsDenied, cmiHaRegInterval3gpp2MaxActiveBindings=cmiHaRegInterval3gpp2MaxActiveBindings, cmiHaMobNetEntry=cmiHaMobNetEntry, cmiHaRegMnIdentifierType=cmiHaRegMnIdentifierType, cmiHaInitRegRequestsDiscarded=cmiHaInitRegRequestsDiscarded, cmiHaSystem=cmiHaSystem, cmiHaMobNet=cmiHaMobNet, cmiFaInitRegRepliesValidFromHA=cmiFaInitRegRepliesValidFromHA, cmiMrRegLifetime=cmiMrRegLifetime, cmiFaStaleChallenge=cmiFaStaleChallenge, cmiHaRedunReceivedBUs=cmiHaRedunReceivedBUs, cmiFaAdvertConfEntry=cmiFaAdvertConfEntry, ciscoMobileIpMIB=ciscoMobileIpMIB, ciscoMobileIpHaRegGroupV12R03=ciscoMobileIpHaRegGroupV12R03, cmiHaRedunSentBUAcks=cmiHaRedunSentBUAcks, cmiHaRegMobilityBindingRegFlags=cmiHaRegMobilityBindingRegFlags, ciscoMobileIpCompliances=ciscoMobileIpCompliances, cmiMrMobNetTable=cmiMrMobNetTable, cmiHaReRegRequestsAccepted=cmiHaReRegRequestsAccepted)
mibBuilder.exportSymbols("CISCO-MOBILE-IP-MIB", cmiMrIfID=cmiMrIfID, cmiMrRegRetransLimit=cmiMrRegRetransLimit, cmiFaRegVisitorRegIDHigh=cmiFaRegVisitorRegIDHigh, cmiFaCoaTransmitOnly=cmiFaCoaTransmitOnly, cmiHaMobNetAddress=cmiHaMobNetAddress, cmiMrTunnelBytesSent=cmiMrTunnelBytesSent, cmiHaMaxBindingsNotif=cmiHaMaxBindingsNotif, ciscoMobileIpComplianceV12R10=ciscoMobileIpComplianceV12R10, cmiHaCvsesFromMnRejected=cmiHaCvsesFromMnRejected, cmiMrIfRegisteredMaAddrType=cmiMrIfRegisteredMaAddrType, cmiFaCoaInterfaceOnly=cmiFaCoaInterfaceOnly, cmiMrMobNetAddr=cmiMrMobNetAddr, cmiSecSPI=cmiSecSPI, cmiHaRegServDeniedRequests=cmiHaRegServDeniedRequests, ciscoMobileIpMnRegistrationGroup=ciscoMobileIpMnRegistrationGroup, cmiMaInterfaceAddress=cmiMaInterfaceAddress, cmiSecKey2=cmiSecKey2, cmiHaEncapsulationUnavailable=cmiHaEncapsulationUnavailable, cmiMaAdvertisementGroup=cmiMaAdvertisementGroup, cmiMrIfSolicitRetransCount=cmiMrIfSolicitRetransCount, cmiNtRegCOA=cmiNtRegCOA, cmiFaDeRegRequestsRelayed=cmiFaDeRegRequestsRelayed, cmiHaRedunTotalSentBIReps=cmiHaRedunTotalSentBIReps, cmiSecAssocsCount=cmiSecAssocsCount, CmiTunnelType=CmiTunnelType, cmiMa=cmiMa, cmiFaDeRegRepliesValidRelayToMN=cmiFaDeRegRepliesValidRelayToMN, cmiHaDeRegRequestsReceived=cmiHaDeRegRequestsReceived, ciscoMobileIpHaRegGroupV12R02=ciscoMobileIpHaRegGroupV12R02, cmiMaReg=cmiMaReg, ciscoMobileIpHaRegTunnelStatsGroup=ciscoMobileIpHaRegTunnelStatsGroup, ciscoMobileIpMrSystemGroupV1=ciscoMobileIpMrSystemGroupV1, cmiMrHAPriority=cmiMrHAPriority, cmiMnAdvFlags=cmiMnAdvFlags, cmiMrMaAddressType=cmiMrMaAddressType, cmiMaAdvConfigTable=cmiMaAdvConfigTable, cmiMrMobNetIfIndex=cmiMrMobNetIfIndex, cmiMrIfCCoaRegRetry=cmiMrIfCCoaRegRetry, cmiFaAdvertChallengeValue=cmiFaAdvertChallengeValue, cmiHaRegDateMaxRegsProcLoc=cmiHaRegDateMaxRegsProcLoc, cmiSecReplayMethod=cmiSecReplayMethod, cmiHaRegTunnelStatsDestAddr=cmiHaRegTunnelStatsDestAddr, cmiFaAdvertConfTable=cmiFaAdvertConfTable, cmiFaReverseTunnelBitNotSet=cmiFaReverseTunnelBitNotSet, cmiMaAdvPrefixLengthInclusion=cmiMaAdvPrefixLengthInclusion, cmiMrReverseTunnel=cmiMrReverseTunnel, cmiHaRegIntervalMaxActiveBindings=cmiHaRegIntervalMaxActiveBindings, cmiMrIfIndex=cmiMrIfIndex, cmiSecRecentViolationIDHigh=cmiSecRecentViolationIDHigh, cmiFaRevTunnelSupported=cmiFaRevTunnelSupported, cmiHaRegServAcceptedRequests=cmiHaRegServAcceptedRequests, cmiFaCvsesFromHaRejected=cmiFaCvsesFromHaRejected, cmiHaMobNetTable=cmiHaMobNetTable, cmiHaDeRegRequestsDiscarded=cmiHaDeRegRequestsDiscarded, cmiFaRegTotalVisitors=cmiFaRegTotalVisitors, cmiMrIfSolicitRetransMax=cmiMrIfSolicitRetransMax, ciscoMobileIpHaRegIntervalStatsGroup=ciscoMobileIpHaRegIntervalStatsGroup, cmiMrRegExtendInterval=cmiMrRegExtendInterval, cmiFaTotalRegRequests=cmiFaTotalRegRequests, cmiMrSystem=cmiMrSystem, cmiFaReRegRequestsReceived=cmiFaReRegRequestsReceived, ciscoMobileIpGroups=ciscoMobileIpGroups, cmiMrNewMA=cmiMrNewMA, ciscoMobileIpMrDiscoveryGroup=ciscoMobileIpMrDiscoveryGroup, cmiHaRegTunnelStatsDestAddrType=cmiHaRegTunnelStatsDestAddrType, cmiFaEncapDeliveryStyleSupported=cmiFaEncapDeliveryStyleSupported, cmiSecRecentViolationReason=cmiSecRecentViolationReason, ciscoMobileIpMrSystemGroup=ciscoMobileIpMrSystemGroup, cmiHaCvsesFromFaRejected=cmiHaCvsesFromFaRejected, cmiMrMaHoldDownRemaining=cmiMrMaHoldDownRemaining, ciscoMobileIpFaRegGroupV12R03=ciscoMobileIpFaRegGroupV12R03, cmiHaInitRegRequestsReceived=cmiHaInitRegRequestsReceived, cmiSecPeerIdentifierType=cmiSecPeerIdentifierType, ciscoMobileIpTrapObjectsGroup=ciscoMobileIpTrapObjectsGroup, cmiFaAdvertChallengeChapSPI=cmiFaAdvertChallengeChapSPI, ciscoMobileIpMrSystemGroupV3=ciscoMobileIpMrSystemGroupV3, cmiFaRegVisitorRegFlags=cmiFaRegVisitorRegFlags, cmiHaRegTunnelStatsEntry=cmiHaRegTunnelStatsEntry, ciscoMobileIpMrRegistrationGroup=ciscoMobileIpMrRegistrationGroup, cmiMrIfHaTunnelIfIndex=cmiMrIfHaTunnelIfIndex, ciscoMobileIpComplianceV12R04=ciscoMobileIpComplianceV12R04, cmiHaRegMnIdType=cmiHaRegMnIdType, cmiHaNAICheckFailures=cmiHaNAICheckFailures, cmiHaReverseTunnelBitNotSet=cmiHaReverseTunnelBitNotSet, cmiHaMaximumBindings=cmiHaMaximumBindings, CmiSpi=CmiSpi, cmiTrapControl=cmiTrapControl, ciscoMobileIpMrNotificationGroupV2=ciscoMobileIpMrNotificationGroupV2, cmiFaNvsesFromMnNeglected=cmiFaNvsesFromMnNeglected, cmiFaInterfaceTable=cmiFaInterfaceTable, cmiMrMaAdvTimeReceived=cmiMrMaAdvTimeReceived, cmiMrMaIfMacAddress=cmiMrMaIfMacAddress, cmiHaRegTunnelStatsOutPkts=cmiHaRegTunnelStatsOutPkts, cmiSecRecentViolationIDLow=cmiSecRecentViolationIDLow, cmiNtRegCOAType=cmiNtRegCOAType, cmiMrMultiPath=cmiMrMultiPath, cmiMrHATable=cmiMrHATable, cmiMrMaAdvRcvIf=cmiMrMaAdvRcvIf, cmiMaAdvertisement=cmiMaAdvertisement, cmiFaMnAAAAuthFailures=cmiFaMnAAAAuthFailures, cmiHaRedunTotalSentBIReqs=cmiHaRedunTotalSentBIReqs, ciscoMobileIpMrSystemGroupV2=ciscoMobileIpMrSystemGroupV2, cmiSecKey=cmiSecKey, cmiSecTotalViolations=cmiSecTotalViolations, cmiFaReg=cmiFaReg, cmiFaRegVisitorTimeGranted=cmiFaRegVisitorTimeGranted, cmiMrMaAdvTable=cmiMrMaAdvTable, cmiHaMnHaAuthFailures=cmiHaMnHaAuthFailures, cmiMrMaAddress=cmiMrMaAddress, cmiHaRegRequestsReceived=cmiHaRegRequestsReceived, cmiHaRegTunnelStatsSrcAddrType=cmiHaRegTunnelStatsSrcAddrType, cmiFaRegVisitorChallengeValue=cmiFaRegVisitorChallengeValue, cmiHaMrTable=cmiHaMrTable, cmiMrIfSolicitRetransCurrent=cmiMrIfSolicitRetransCurrent, cmiMrIfSolicitRetransInitial=cmiMrIfSolicitRetransInitial, cmiHaMrStatus=cmiHaMrStatus, cmiMnRegFlags=cmiMnRegFlags, cmiMrIfRegisteredMaAddr=cmiMrIfRegisteredMaAddr, ciscoMobileIpComplianceV12R08=ciscoMobileIpComplianceV12R08, cmiFaRegVisitorHomeAddress=cmiFaRegVisitorHomeAddress, cmiHaRedunReceivedBIAcks=cmiHaRedunReceivedBIAcks, cmiSecRecentViolationSPI=cmiSecRecentViolationSPI, cmiHaMobNetAddressType=cmiHaMobNetAddressType, cmiHaRegTunnelStatsOutBytes=cmiHaRegTunnelStatsOutBytes, cmiHaMobNetDynamic=cmiHaMobNetDynamic, cmiMrHaTunnelIfIndex=cmiMrHaTunnelIfIndex, ciscoMobileIpComplianceV12R11=ciscoMobileIpComplianceV12R11, cmiHaRegTotalMobilityBindings=cmiHaRegTotalMobilityBindings, cmiNtRegHomeAddress=cmiNtRegHomeAddress, cmiFaCvsesFromMnRejected=cmiFaCvsesFromMnRejected, ciscoMobileIpHaRegGroupV12R03r1=ciscoMobileIpHaRegGroupV12R03r1, cmiFaAdvertChallengeTable=cmiFaAdvertChallengeTable, cmiHaRedunDroppedBIReps=cmiHaRedunDroppedBIReps, ciscoMobileIpFaRegGroup=ciscoMobileIpFaRegGroup, cmiMrIfSolicitRetransRemaining=cmiMrIfSolicitRetransRemaining, cmiHaRegProcLocInLastMinRegs=cmiHaRegProcLocInLastMinRegs, cmiFaRegVisitorTable=cmiFaRegVisitorTable, cmiFaReRegRequestsDenied=cmiFaReRegRequestsDenied, cmiTrapObjects=cmiTrapObjects, cmiHaRegMnIfBandwidth=cmiHaRegMnIfBandwidth, cmiHaRegIntervalSize=cmiHaRegIntervalSize, cmiSecViolatorIdentifier=cmiSecViolatorIdentifier, cmiHaReg=cmiHaReg, cmiHaMobNetStatus=cmiHaMobNetStatus, cmiFaRegVisitorIdentifier=cmiFaRegVisitorIdentifier, cmiHaReRegRequestsDiscarded=cmiHaReRegRequestsDiscarded, cmiSecAlgorithmMode=cmiSecAlgorithmMode, cmiHaRegTunnelStatsInPktRate=cmiHaRegTunnelStatsInPktRate, cmiFaCoaRegAsymLink=cmiFaCoaRegAsymLink, cmiHaSystemVersion=cmiHaSystemVersion, cmiFaAdvertIsBusy=cmiFaAdvertIsBusy, ciscoMobileIpTrapObjectsGroupV2=ciscoMobileIpTrapObjectsGroupV2, cmiMrMaAdvMaxLifetime=cmiMrMaAdvMaxLifetime)
