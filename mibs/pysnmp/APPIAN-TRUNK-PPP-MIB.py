#
# PySNMP MIB module APPIAN-TRUNK-PPP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APPIAN-TRUNK-PPP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:08:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
acTrunks, = mibBuilder.importSymbols("APPIAN-SMI-MIB", "acTrunks")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, NotificationType, ObjectIdentity, Bits, Counter64, iso, MibIdentifier, Counter32, IpAddress, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "NotificationType", "ObjectIdentity", "Bits", "Counter64", "iso", "MibIdentifier", "Counter32", "IpAddress", "ModuleIdentity", "Gauge32")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
acPppTrunk = ModuleIdentity((1, 3, 6, 1, 4, 1, 2785, 2, 6, 3))
acPppTrunk.setRevisions(('1900-03-20 00:00',))
if mibBuilder.loadTexts: acPppTrunk.setLastUpdated('0003200000Z')
if mibBuilder.loadTexts: acPppTrunk.setOrganization('Appian Communications, Inc.')
acPppTrunkTable = MibTable((1, 3, 6, 1, 4, 1, 2785, 2, 6, 3, 1), )
if mibBuilder.loadTexts: acPppTrunkTable.setStatus('current')
acPppTrunkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2785, 2, 6, 3, 1, 1), ).setIndexNames((0, "APPIAN-TRUNK-PPP-MIB", "acPppTrunkIndex"))
if mibBuilder.loadTexts: acPppTrunkEntry.setStatus('current')
acPppTrunkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: acPppTrunkIndex.setStatus('current')
acPppTrunkMru = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 2048)).clone(1520)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPppTrunkMru.setStatus('deprecated')
acPppTrunkMrru = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 2048)).clone(1520)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPppTrunkMrru.setStatus('deprecated')
acPppTrunkSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("long", 0), ("short", 1))).clone('long')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPppTrunkSeqNum.setStatus('current')
acPppTrunkMagicNumberEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 3, 1, 1, 5), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPppTrunkMagicNumberEnable.setStatus('current')
acPppTrunkLCPEchoEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 3, 1, 1, 6), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPppTrunkLCPEchoEnable.setStatus('current')
acPppTrunkLCPEchoInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPppTrunkLCPEchoInterval.setStatus('current')
acPppTrunkMgmtAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 3, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPppTrunkMgmtAccess.setStatus('current')
acPppTrunkIPCPAddressEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 3, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPppTrunkIPCPAddressEnable.setStatus('current')
acPppTrunkMaxTerminate = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 3, 1, 1, 10), Integer32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPppTrunkMaxTerminate.setStatus('current')
acPppTrunkMaxConfigure = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 3, 1, 1, 11), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPppTrunkMaxConfigure.setStatus('current')
acPppTrunkMaxFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 3, 1, 1, 12), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPppTrunkMaxFailure.setStatus('current')
mibBuilder.exportSymbols("APPIAN-TRUNK-PPP-MIB", acPppTrunkEntry=acPppTrunkEntry, acPppTrunkMaxFailure=acPppTrunkMaxFailure, acPppTrunk=acPppTrunk, acPppTrunkLCPEchoEnable=acPppTrunkLCPEchoEnable, acPppTrunkMaxTerminate=acPppTrunkMaxTerminate, acPppTrunkMaxConfigure=acPppTrunkMaxConfigure, acPppTrunkMrru=acPppTrunkMrru, PYSNMP_MODULE_ID=acPppTrunk, acPppTrunkIPCPAddressEnable=acPppTrunkIPCPAddressEnable, acPppTrunkLCPEchoInterval=acPppTrunkLCPEchoInterval, acPppTrunkSeqNum=acPppTrunkSeqNum, acPppTrunkTable=acPppTrunkTable, acPppTrunkMru=acPppTrunkMru, acPppTrunkMagicNumberEnable=acPppTrunkMagicNumberEnable, acPppTrunkMgmtAccess=acPppTrunkMgmtAccess, acPppTrunkIndex=acPppTrunkIndex)
