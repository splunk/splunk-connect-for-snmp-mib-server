#
# PySNMP MIB module CISCO-GSLB-HEALTH-MON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-GSLB-HEALTH-MON-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:42:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
cgdAnswerId, = mibBuilder.importSymbols("CISCO-GSLB-DNS-MIB", "cgdAnswerId")
CiscoGslbTerminationMethod, CiscoGslbKeepaliveStatus, CiscoGslbKeepaliveMethod, CiscoGslbKeepaliveRate, CiscoGslbKalapType, CiscoGslbKeepaliveTargetType = mibBuilder.importSymbols("CISCO-GSLB-TC-MIB", "CiscoGslbTerminationMethod", "CiscoGslbKeepaliveStatus", "CiscoGslbKeepaliveMethod", "CiscoGslbKeepaliveRate", "CiscoGslbKalapType", "CiscoGslbKeepaliveTargetType")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetAddress, InetAddressType, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType", "InetPortNumber")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
sysName, = mibBuilder.importSymbols("SNMPv2-MIB", "sysName")
Bits, Gauge32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Unsigned32, Counter64, MibIdentifier, NotificationType, TimeTicks, ModuleIdentity, IpAddress, Integer32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Gauge32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Unsigned32", "Counter64", "MibIdentifier", "NotificationType", "TimeTicks", "ModuleIdentity", "IpAddress", "Integer32", "iso")
StorageType, TruthValue, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "TruthValue", "RowStatus", "DisplayString", "TextualConvention")
ciscoGslbHealthMonMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 600))
ciscoGslbHealthMonMIB.setRevisions(('2007-04-09 00:00', '2006-12-04 00:00',))
if mibBuilder.loadTexts: ciscoGslbHealthMonMIB.setLastUpdated('200704090000Z')
if mibBuilder.loadTexts: ciscoGslbHealthMonMIB.setOrganization('Cisco Systems, Inc.')
ciscoGslbHealthMonMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 600, 0))
ciscoGslbHealthMonMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 600, 1))
ciscoGslbHealthMonMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 600, 2))
cghMonNotifControl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 1))
cghMonNotifObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 2))
cghMonKalGeneralConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3))
cghMonKal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4))
cghMonNsQueryDomainName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 1), SnmpAdminString().clone('.')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cghMonNsQueryDomainName.setStatus('current')
cghMonCappHash = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 2), SnmpAdminString().clone('hash-not-set')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cghMonCappHash.setStatus('current')
cghMonHttpHeadPath = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 3), SnmpAdminString().clone('/')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cghMonHttpHeadPath.setStatus('current')
cghMonHttpHeadConnTermMethod = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 4), CiscoGslbTerminationMethod().clone('reset')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cghMonHttpHeadConnTermMethod.setStatus('current')
cghMonTcpConnTermMethod = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 5), CiscoGslbTerminationMethod().clone('reset')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cghMonTcpConnTermMethod.setStatus('current')
cghMonCraDecay = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cghMonCraDecay.setStatus('current')
cghMonTotalConfiguredProbes = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cghMonTotalConfiguredProbes.setStatus('current')
cghMonDroppedKalNotifs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 8), Unsigned32()).setUnits('traps').setMaxAccess("readonly")
if mibBuilder.loadTexts: cghMonDroppedKalNotifs.setStatus('current')
cghMonKalTrapRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(25)).setUnits('traps per minute').setMaxAccess("readonly")
if mibBuilder.loadTexts: cghMonKalTrapRateLimit.setStatus('current')
cghMonKalParameterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 10), )
if mibBuilder.loadTexts: cghMonKalParameterTable.setStatus('current')
cghMonKalParameterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 10, 1), ).setIndexNames((0, "CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalParameterMethod"))
if mibBuilder.loadTexts: cghMonKalParameterEntry.setStatus('current')
cghMonKalParameterMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 10, 1, 1), CiscoGslbKeepaliveMethod())
if mibBuilder.loadTexts: cghMonKalParameterMethod.setStatus('current')
cghMonKalParameterRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 10, 1, 2), CiscoGslbKeepaliveRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalParameterRate.setStatus('current')
cghMonKalParameterMinimumFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalParameterMinimumFrequency.setStatus('current')
cghMonKalParameterResponseTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalParameterResponseTimeout.setStatus('current')
cghMonKalParameterFastRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('retries').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalParameterFastRetries.setStatus('current')
cghMonKalParameterFastSuccessfulProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('probes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalParameterFastSuccessfulProbes.setStatus('current')
cghMonKalParameterDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 10, 1, 7), InetPortNumber().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalParameterDestPort.setStatus('current')
cghMonKalParameterStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 10, 1, 8), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalParameterStorageType.setStatus('current')
cghMonKalParameterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 3, 10, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalParameterRowStatus.setStatus('current')
cghMonKalConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1), )
if mibBuilder.loadTexts: cghMonKalConfigTable.setStatus('current')
cghMonKalConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalId"))
if mibBuilder.loadTexts: cghMonKalConfigEntry.setStatus('current')
cghMonKalId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cghMonKalId.setStatus('current')
cghMonKalTargetType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 2), CiscoGslbKeepaliveTargetType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalTargetType.setStatus('current')
cghMonKalMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 3), CiscoGslbKeepaliveMethod()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalMethod.setStatus('current')
cghMonKalAnswerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalAnswerId.setStatus('current')
cghMonKalPrimaryTargetType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 5), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalPrimaryTargetType.setStatus('current')
cghMonKalPrimaryTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalPrimaryTarget.setStatus('current')
cghMonKalEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalEnable.setStatus('current')
cghMonKalDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 8), Unsigned32()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalDelay.setStatus('current')
cghMonKalKalapType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 9), CiscoGslbKalapType().clone('kalapByVip')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalKalapType.setStatus('current')
cghMonKalTagName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 10), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalTagName.setStatus('current')
cghMonKalDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 11), InetPortNumber().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalDestPort.setStatus('current')
cghMonKalCappSecure = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalCappSecure.setStatus('current')
cghMonKalCappHash = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 13), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalCappHash.setStatus('current')
cghMonKalQueryDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 14), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalQueryDomainName.setStatus('current')
cghMonKalPath = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 15), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalPath.setStatus('current')
cghMonKalHostTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 16), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalHostTag.setStatus('current')
cghMonKalSecondaryTargetType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 17), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalSecondaryTargetType.setStatus('current')
cghMonKalSecondaryTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 18), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalSecondaryTarget.setStatus('current')
cghMonKalFastRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 19), Unsigned32()).setUnits('retries').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalFastRetries.setStatus('current')
cghMonKalFastSuccessfulProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 20), Unsigned32()).setUnits('probes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalFastSuccessfulProbes.setStatus('current')
cghMonKalStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 21), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalStorageType.setStatus('current')
cghMonKalRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 1, 1, 22), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalRowStatus.setStatus('current')
cghMonKalSharedAnswerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 2), )
if mibBuilder.loadTexts: cghMonKalSharedAnswerTable.setStatus('current')
cghMonKalSharedAnswerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-GSLB-DNS-MIB", "cgdAnswerId"), (0, "CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalId"))
if mibBuilder.loadTexts: cghMonKalSharedAnswerEntry.setStatus('current')
cghMonKalShAnsStoragetype = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 2, 1, 1), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalShAnsStoragetype.setStatus('current')
cghMonKalShAnsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cghMonKalShAnsRowStatus.setStatus('current')
cghMonKalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 3), )
if mibBuilder.loadTexts: cghMonKalStatsTable.setStatus('current')
cghMonKalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 3, 1), )
cghMonKalConfigEntry.registerAugmentions(("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalStatsEntry"))
cghMonKalStatsEntry.setIndexNames(*cghMonKalConfigEntry.getIndexNames())
if mibBuilder.loadTexts: cghMonKalStatsEntry.setStatus('current')
cghMonKalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 3, 1, 1), CiscoGslbKeepaliveStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cghMonKalStatus.setStatus('current')
cghMonKalSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 3, 1, 2), Counter32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cghMonKalSentProbes.setStatus('current')
cghMonKalReceivedProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 3, 1, 3), Counter32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cghMonKalReceivedProbes.setStatus('current')
cghMonKalPositiveProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 3, 1, 4), Counter32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cghMonKalPositiveProbes.setStatus('current')
cghMonKalNegativeProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 3, 1, 5), Counter32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cghMonKalNegativeProbes.setStatus('current')
cghMonKalStatusTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cghMonKalStatusTransitions.setStatus('current')
cghMonKalDynamicLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cghMonKalDynamicLoad.setStatus('current')
cghMonKalVIPFailovers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 4, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cghMonKalVIPFailovers.setStatus('current')
cghMonKalNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cghMonKalNotifEnable.setStatus('current')
cghMonKalPrevStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 600, 1, 2, 1), CiscoGslbKeepaliveStatus()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cghMonKalPrevStatus.setStatus('current')
ciscoGslbKalEventStatus = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 600, 0, 1)).setObjects(("SNMPv2-MIB", "sysName"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalPrimaryTargetType"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalPrimaryTarget"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalMethod"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalPrevStatus"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalStatus"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonDroppedKalNotifs"))
if mibBuilder.loadTexts: ciscoGslbKalEventStatus.setStatus('current')
ciscoGslbHealthMonMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 600, 2, 1))
ciscoGslbHealthMonMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 600, 2, 2))
ciscoGslbHealthMonMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 600, 2, 1, 1)).setObjects(("CISCO-GSLB-HEALTH-MON-MIB", "ciscoGslbGeneralConfigGroup"), ("CISCO-GSLB-HEALTH-MON-MIB", "ciscoGslbKalParameterGroup"), ("CISCO-GSLB-HEALTH-MON-MIB", "ciscoGslbKalConfigGroup"), ("CISCO-GSLB-HEALTH-MON-MIB", "ciscoGslbKalStatsGroup"), ("CISCO-GSLB-HEALTH-MON-MIB", "ciscoGslbKalNotifControlGroup"), ("CISCO-GSLB-HEALTH-MON-MIB", "ciscoGslbKalNotifObjectsGroup"), ("CISCO-GSLB-HEALTH-MON-MIB", "ciscoGslbKalNotificationGroup"), ("CISCO-GSLB-HEALTH-MON-MIB", "ciscoGslbGeneralConfigRateLimitGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbHealthMonMIBCompliance = ciscoGslbHealthMonMIBCompliance.setStatus('deprecated')
ciscoGslbGeneralConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 600, 2, 2, 1)).setObjects(("CISCO-GSLB-HEALTH-MON-MIB", "cghMonNsQueryDomainName"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonCappHash"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonHttpHeadPath"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonHttpHeadConnTermMethod"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonCraDecay"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonTcpConnTermMethod"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonTotalConfiguredProbes"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonDroppedKalNotifs"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalTrapRateLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbGeneralConfigGroup = ciscoGslbGeneralConfigGroup.setStatus('current')
ciscoGslbKalParameterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 600, 2, 2, 2)).setObjects(("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalParameterRate"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalParameterMinimumFrequency"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalParameterResponseTimeout"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalParameterFastRetries"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalParameterFastSuccessfulProbes"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalParameterDestPort"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalParameterStorageType"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalParameterRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbKalParameterGroup = ciscoGslbKalParameterGroup.setStatus('current')
ciscoGslbKalConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 600, 2, 2, 3)).setObjects(("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalTargetType"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalMethod"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalAnswerId"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalPrimaryTargetType"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalPrimaryTarget"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalEnable"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalDelay"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalKalapType"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalTagName"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalDestPort"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalCappSecure"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalCappHash"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalQueryDomainName"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalPath"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalHostTag"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalSecondaryTargetType"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalSecondaryTarget"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalFastRetries"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalFastSuccessfulProbes"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalStorageType"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalRowStatus"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalShAnsStoragetype"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalShAnsRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbKalConfigGroup = ciscoGslbKalConfigGroup.setStatus('current')
ciscoGslbKalStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 600, 2, 2, 4)).setObjects(("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalStatus"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalSentProbes"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalReceivedProbes"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalPositiveProbes"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalNegativeProbes"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalStatusTransitions"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalDynamicLoad"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalVIPFailovers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbKalStatsGroup = ciscoGslbKalStatsGroup.setStatus('current')
ciscoGslbKalNotifControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 600, 2, 2, 5)).setObjects(("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbKalNotifControlGroup = ciscoGslbKalNotifControlGroup.setStatus('current')
ciscoGslbKalNotifObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 600, 2, 2, 6)).setObjects(("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalPrevStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbKalNotifObjectsGroup = ciscoGslbKalNotifObjectsGroup.setStatus('current')
ciscoGslbKalNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 600, 2, 2, 7)).setObjects(("CISCO-GSLB-HEALTH-MON-MIB", "ciscoGslbKalEventStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbKalNotificationGroup = ciscoGslbKalNotificationGroup.setStatus('current')
ciscoGslbGeneralConfigRateLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 600, 2, 2, 8)).setObjects(("CISCO-GSLB-HEALTH-MON-MIB", "cghMonDroppedKalNotifs"), ("CISCO-GSLB-HEALTH-MON-MIB", "cghMonKalTrapRateLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbGeneralConfigRateLimitGroup = ciscoGslbGeneralConfigRateLimitGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-GSLB-HEALTH-MON-MIB", cghMonKalPrimaryTargetType=cghMonKalPrimaryTargetType, cghMonKal=cghMonKal, cghMonKalStatus=cghMonKalStatus, cghMonKalDelay=cghMonKalDelay, cghMonKalShAnsStoragetype=cghMonKalShAnsStoragetype, cghMonKalPath=cghMonKalPath, cghMonKalHostTag=cghMonKalHostTag, cghMonKalAnswerId=cghMonKalAnswerId, ciscoGslbKalNotifControlGroup=ciscoGslbKalNotifControlGroup, cghMonNsQueryDomainName=cghMonNsQueryDomainName, cghMonKalParameterFastRetries=cghMonKalParameterFastRetries, ciscoGslbKalConfigGroup=ciscoGslbKalConfigGroup, cghMonHttpHeadConnTermMethod=cghMonHttpHeadConnTermMethod, cghMonKalNegativeProbes=cghMonKalNegativeProbes, cghMonKalConfigEntry=cghMonKalConfigEntry, ciscoGslbKalEventStatus=ciscoGslbKalEventStatus, cghMonKalStatusTransitions=cghMonKalStatusTransitions, cghMonNotifControl=cghMonNotifControl, cghMonKalEnable=cghMonKalEnable, cghMonKalParameterResponseTimeout=cghMonKalParameterResponseTimeout, cghMonKalCappHash=cghMonKalCappHash, ciscoGslbGeneralConfigGroup=ciscoGslbGeneralConfigGroup, cghMonKalDynamicLoad=cghMonKalDynamicLoad, cghMonKalDestPort=cghMonKalDestPort, cghMonKalGeneralConfig=cghMonKalGeneralConfig, cghMonKalSharedAnswerEntry=cghMonKalSharedAnswerEntry, cghMonKalCappSecure=cghMonKalCappSecure, cghMonKalParameterTable=cghMonKalParameterTable, cghMonHttpHeadPath=cghMonHttpHeadPath, cghMonCappHash=cghMonCappHash, cghMonKalTagName=cghMonKalTagName, cghMonKalRowStatus=cghMonKalRowStatus, ciscoGslbHealthMonMIBGroups=ciscoGslbHealthMonMIBGroups, cghMonKalParameterMethod=cghMonKalParameterMethod, cghMonKalParameterMinimumFrequency=cghMonKalParameterMinimumFrequency, cghMonKalParameterRate=cghMonKalParameterRate, cghMonKalKalapType=cghMonKalKalapType, ciscoGslbHealthMonMIBConform=ciscoGslbHealthMonMIBConform, cghMonKalParameterStorageType=cghMonKalParameterStorageType, cghMonDroppedKalNotifs=cghMonDroppedKalNotifs, cghMonKalTargetType=cghMonKalTargetType, cghMonKalNotifEnable=cghMonKalNotifEnable, cghMonCraDecay=cghMonCraDecay, cghMonKalTrapRateLimit=cghMonKalTrapRateLimit, cghMonKalSecondaryTargetType=cghMonKalSecondaryTargetType, cghMonKalQueryDomainName=cghMonKalQueryDomainName, cghMonKalFastRetries=cghMonKalFastRetries, cghMonTcpConnTermMethod=cghMonTcpConnTermMethod, cghMonKalPositiveProbes=cghMonKalPositiveProbes, cghMonKalParameterFastSuccessfulProbes=cghMonKalParameterFastSuccessfulProbes, ciscoGslbHealthMonMIBCompliances=ciscoGslbHealthMonMIBCompliances, cghMonKalStatsEntry=cghMonKalStatsEntry, ciscoGslbHealthMonMIB=ciscoGslbHealthMonMIB, cghMonKalMethod=cghMonKalMethod, cghMonKalSecondaryTarget=cghMonKalSecondaryTarget, ciscoGslbKalNotifObjectsGroup=ciscoGslbKalNotifObjectsGroup, PYSNMP_MODULE_ID=ciscoGslbHealthMonMIB, ciscoGslbHealthMonMIBObjects=ciscoGslbHealthMonMIBObjects, ciscoGslbHealthMonMIBCompliance=ciscoGslbHealthMonMIBCompliance, cghMonKalConfigTable=cghMonKalConfigTable, cghMonKalParameterEntry=cghMonKalParameterEntry, cghMonKalStorageType=cghMonKalStorageType, cghMonKalId=cghMonKalId, cghMonKalPrevStatus=cghMonKalPrevStatus, ciscoGslbHealthMonMIBNotifs=ciscoGslbHealthMonMIBNotifs, cghMonTotalConfiguredProbes=cghMonTotalConfiguredProbes, cghMonNotifObjects=cghMonNotifObjects, cghMonKalStatsTable=cghMonKalStatsTable, cghMonKalSentProbes=cghMonKalSentProbes, cghMonKalReceivedProbes=cghMonKalReceivedProbes, cghMonKalPrimaryTarget=cghMonKalPrimaryTarget, ciscoGslbKalParameterGroup=ciscoGslbKalParameterGroup, ciscoGslbGeneralConfigRateLimitGroup=ciscoGslbGeneralConfigRateLimitGroup, cghMonKalParameterDestPort=cghMonKalParameterDestPort, ciscoGslbKalNotificationGroup=ciscoGslbKalNotificationGroup, cghMonKalParameterRowStatus=cghMonKalParameterRowStatus, cghMonKalFastSuccessfulProbes=cghMonKalFastSuccessfulProbes, cghMonKalShAnsRowStatus=cghMonKalShAnsRowStatus, cghMonKalSharedAnswerTable=cghMonKalSharedAnswerTable, cghMonKalVIPFailovers=cghMonKalVIPFailovers, ciscoGslbKalStatsGroup=ciscoGslbKalStatsGroup)
