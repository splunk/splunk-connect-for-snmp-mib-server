#
# PySNMP MIB module HPN-ICF-RDDC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-RDDC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, ifDescr = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifDescr")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Counter32, Integer32, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, ModuleIdentity, iso, Bits, Counter64, ObjectIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter32", "Integer32", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "ModuleIdentity", "iso", "Bits", "Counter64", "ObjectIdentity", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hpnicfRddc = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151))
hpnicfRddc.setRevisions(('2014-01-03 00:00',))
if mibBuilder.loadTexts: hpnicfRddc.setLastUpdated('201401030000Z')
if mibBuilder.loadTexts: hpnicfRddc.setOrganization('')
hpnicfRddcNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 0))
hpnicfRddcObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1))
hpnicfRddcInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1))
hpnicfRddcTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 2))
hpnicfRddcTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1, 1), )
if mibBuilder.loadTexts: hpnicfRddcTable.setStatus('current')
hpnicfRddcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-RDDC-MIB", "hpnicfRddcGroupIdx"))
if mibBuilder.loadTexts: hpnicfRddcEntry.setStatus('current')
hpnicfRddcGroupIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1, 1, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfRddcGroupIdx.setStatus('current')
hpnicfRddcGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRddcGroupName.setStatus('current')
hpnicfRddcPreempTimeRemain = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1, 1, 1, 3), Unsigned32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRddcPreempTimeRemain.setStatus('current')
hpnicfRddcPreempTimeConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1, 1, 1, 4), Unsigned32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRddcPreempTimeConfig.setStatus('current')
hpnicfRddcHoldTimeRemain = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1, 1, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRddcHoldTimeRemain.setStatus('current')
hpnicfRddcHoldTimeConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1, 1, 1, 6), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRddcHoldTimeConfig.setStatus('current')
hpnicfRddcNodeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1, 2), )
if mibBuilder.loadTexts: hpnicfRddcNodeTable.setStatus('current')
hpnicfRddcNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-RDDC-MIB", "hpnicfRddcNodeGroupIdx"), (0, "HPN-ICF-RDDC-MIB", "hpnicfRddcNodeId"))
if mibBuilder.loadTexts: hpnicfRddcNodeEntry.setStatus('current')
hpnicfRddcNodeGroupIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hpnicfRddcNodeGroupIdx.setStatus('current')
hpnicfRddcNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hpnicfRddcNodeId.setStatus('current')
hpnicfRddcNodeBindType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("invalid", 1), ("chassis", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRddcNodeBindType.setStatus('current')
hpnicfRddcNodeBindInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRddcNodeBindInfo.setStatus('current')
hpnicfRddcNodePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRddcNodePriority.setStatus('current')
hpnicfRddcNodeWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRddcNodeWeight.setStatus('current')
hpnicfRddcNodeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("master", 2), ("standby", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRddcNodeStatus.setStatus('current')
hpnicfRddcNodeInfo = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfRddcNodeInfo.setStatus('current')
hpnicfRddcSwitchReason = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 1, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfRddcSwitchReason.setStatus('current')
hpnicfRddcSwitchoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 0, 1)).setObjects(("HPN-ICF-RDDC-MIB", "hpnicfRddcGroupIdx"), ("HPN-ICF-RDDC-MIB", "hpnicfRddcGroupName"), ("HPN-ICF-RDDC-MIB", "hpnicfRddcNodeInfo"), ("HPN-ICF-RDDC-MIB", "hpnicfRddcSwitchReason"))
if mibBuilder.loadTexts: hpnicfRddcSwitchoverTrap.setStatus('current')
hpnicfRddcFailIfRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 0, 2)).setObjects(("HPN-ICF-RDDC-MIB", "hpnicfRddcGroupIdx"), ("HPN-ICF-RDDC-MIB", "hpnicfRddcGroupName"), ("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfRddcFailIfRecoverTrap.setStatus('current')
hpnicfRddcFailIfGenerateTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 151, 0, 3)).setObjects(("HPN-ICF-RDDC-MIB", "hpnicfRddcGroupIdx"), ("HPN-ICF-RDDC-MIB", "hpnicfRddcGroupName"), ("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfRddcFailIfGenerateTrap.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-RDDC-MIB", hpnicfRddcSwitchoverTrap=hpnicfRddcSwitchoverTrap, hpnicfRddcTrapObjects=hpnicfRddcTrapObjects, hpnicfRddcFailIfRecoverTrap=hpnicfRddcFailIfRecoverTrap, hpnicfRddcPreempTimeConfig=hpnicfRddcPreempTimeConfig, hpnicfRddcNodeId=hpnicfRddcNodeId, hpnicfRddcNodeBindType=hpnicfRddcNodeBindType, hpnicfRddcEntry=hpnicfRddcEntry, hpnicfRddcNotifications=hpnicfRddcNotifications, hpnicfRddcNodeWeight=hpnicfRddcNodeWeight, hpnicfRddcPreempTimeRemain=hpnicfRddcPreempTimeRemain, hpnicfRddcNodeInfo=hpnicfRddcNodeInfo, hpnicfRddcInfo=hpnicfRddcInfo, hpnicfRddcHoldTimeConfig=hpnicfRddcHoldTimeConfig, hpnicfRddcFailIfGenerateTrap=hpnicfRddcFailIfGenerateTrap, hpnicfRddcNodeGroupIdx=hpnicfRddcNodeGroupIdx, hpnicfRddcNodePriority=hpnicfRddcNodePriority, PYSNMP_MODULE_ID=hpnicfRddc, hpnicfRddcSwitchReason=hpnicfRddcSwitchReason, hpnicfRddcNodeBindInfo=hpnicfRddcNodeBindInfo, hpnicfRddcTable=hpnicfRddcTable, hpnicfRddcObjects=hpnicfRddcObjects, hpnicfRddcGroupIdx=hpnicfRddcGroupIdx, hpnicfRddcNodeTable=hpnicfRddcNodeTable, hpnicfRddcHoldTimeRemain=hpnicfRddcHoldTimeRemain, hpnicfRddcGroupName=hpnicfRddcGroupName, hpnicfRddcNodeEntry=hpnicfRddcNodeEntry, hpnicfRddc=hpnicfRddc, hpnicfRddcNodeStatus=hpnicfRddcNodeStatus)
