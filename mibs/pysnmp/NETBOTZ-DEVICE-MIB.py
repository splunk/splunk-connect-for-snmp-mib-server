#
# PySNMP MIB module NETBOTZ-DEVICE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETBOTZ-DEVICE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:08:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
netBotz_device, = mibBuilder.importSymbols("NETBOTZ-MIB", "netBotz-device")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Integer32, IpAddress, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ObjectIdentity, ModuleIdentity, Gauge32, Counter32, NotificationType, Counter64, iso, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "IpAddress", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ObjectIdentity", "ModuleIdentity", "Gauge32", "Counter32", "NotificationType", "Counter64", "iso", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
netBotz_dev_host = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 1), DisplayString()).setLabel("netBotz-dev-host").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_dev_host.setStatus('mandatory')
netBotz_dev_domain = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 2), DisplayString()).setLabel("netBotz-dev-domain").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_dev_domain.setStatus('mandatory')
netBotz_dev_ip = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 3), IpAddress()).setLabel("netBotz-dev-ip").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_dev_ip.setStatus('mandatory')
netBotz_dev_netmask = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 4), IpAddress()).setLabel("netBotz-dev-netmask").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_dev_netmask.setStatus('mandatory')
netBotz_dev_gateway = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 5), IpAddress()).setLabel("netBotz-dev-gateway").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_dev_gateway.setStatus('mandatory')
netBotz_dev_primarydns = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 6), IpAddress()).setLabel("netBotz-dev-primarydns").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_dev_primarydns.setStatus('mandatory')
netBotz_dev_secondarydns = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 7), IpAddress()).setLabel("netBotz-dev-secondarydns").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_dev_secondarydns.setStatus('mandatory')
netBotz_dev_smtp = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 8), DisplayString()).setLabel("netBotz-dev-smtp").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_dev_smtp.setStatus('mandatory')
netBotz_dev_smtpport = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 9), Integer32()).setLabel("netBotz-dev-smtpport").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_dev_smtpport.setStatus('mandatory')
netBotz_dev_popport = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 10), Integer32()).setLabel("netBotz-dev-popport").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_dev_popport.setStatus('mandatory')
netBotz_dev_loglevel = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 11), Integer32()).setLabel("netBotz-dev-loglevel").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_dev_loglevel.setStatus('mandatory')
netBotz_dev_logaddress = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 12), IpAddress()).setLabel("netBotz-dev-logaddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_dev_logaddress.setStatus('mandatory')
netBotz_dev_logport = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 13), Integer32()).setLabel("netBotz-dev-logport").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_dev_logport.setStatus('mandatory')
netBotz_dev_primaryemail = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 14), DisplayString()).setLabel("netBotz-dev-primaryemail").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_dev_primaryemail.setStatus('mandatory')
netBotz_dev_secondaryemail = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 15), DisplayString()).setLabel("netBotz-dev-secondaryemail").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_dev_secondaryemail.setStatus('mandatory')
netBotz_dev_pager = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 16), DisplayString()).setLabel("netBotz-dev-pager").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_dev_pager.setStatus('mandatory')
netBotz_dev_serialno = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 17), DisplayString()).setLabel("netBotz-dev-serialno").setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotz_dev_serialno.setStatus('mandatory')
netBotz_dev_pop = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 18), DisplayString()).setLabel("netBotz-dev-pop").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_dev_pop.setStatus('mandatory')
netBotz_dev_version = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 19), DisplayString()).setLabel("netBotz-dev-version").setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotz_dev_version.setStatus('mandatory')
netBotz_dev_registered = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 20), Integer32()).setLabel("netBotz-dev-registered").setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotz_dev_registered.setStatus('mandatory')
netBotz_default_applet = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 21), Integer32()).setLabel("netBotz-default-applet").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_default_applet.setStatus('mandatory')
netBotz_guibar_color = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 22), Integer32()).setLabel("netBotz-guibar-color").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_guibar_color.setStatus('mandatory')
netBotz_locale = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 23), DisplayString()).setLabel("netBotz-locale").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_locale.setStatus('mandatory')
netBotz_timezone = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 24), DisplayString()).setLabel("netBotz-timezone").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_timezone.setStatus('mandatory')
netBotz_24hourpreferred = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 25), Integer32()).setLabel("netBotz-24hourpreferred").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_24hourpreferred.setStatus('mandatory')
netBotz_utc_clock = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 26), Integer32()).setLabel("netBotz-utc-clock").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_utc_clock.setStatus('mandatory')
netBotz_ismetric = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 27), Integer32()).setLabel("netBotz-ismetric").setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotz_ismetric.setStatus('mandatory')
netBotz_alert_url = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 28), DisplayString()).setLabel("netBotz-alert-url").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_alert_url.setStatus('mandatory')
netBotz_picture_alert_url = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 29), DisplayString()).setLabel("netBotz-picture-alert-url").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_picture_alert_url.setStatus('mandatory')
netBotz_sensor_data_url = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 30), DisplayString()).setLabel("netBotz-sensor-data-url").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_sensor_data_url.setStatus('mandatory')
netBotz_alert_url_logon = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 31), DisplayString()).setLabel("netBotz-alert-url-logon").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_alert_url_logon.setStatus('mandatory')
netBotz_picture_alert_url_logon = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 32), DisplayString()).setLabel("netBotz-picture-alert-url-logon").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_picture_alert_url_logon.setStatus('mandatory')
netBotz_sensor_data_url_logon = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 33), DisplayString()).setLabel("netBotz-sensor-data-url-logon").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_sensor_data_url_logon.setStatus('mandatory')
netBotz_sensor_data_url_period = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 34), Integer32()).setLabel("netBotz-sensor-data-url-period").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_sensor_data_url_period.setStatus('mandatory')
netBotz_sensor_data_url_flags = MibScalar((1, 3, 6, 1, 4, 1, 5528, 50, 35), Integer32()).setLabel("netBotz-sensor-data-url-flags").setMaxAccess("readwrite")
if mibBuilder.loadTexts: netBotz_sensor_data_url_flags.setStatus('mandatory')
mibBuilder.exportSymbols("NETBOTZ-DEVICE-MIB", netBotz_picture_alert_url=netBotz_picture_alert_url, netBotz_dev_primarydns=netBotz_dev_primarydns, netBotz_dev_smtpport=netBotz_dev_smtpport, netBotz_dev_popport=netBotz_dev_popport, netBotz_alert_url=netBotz_alert_url, netBotz_dev_secondarydns=netBotz_dev_secondarydns, netBotz_locale=netBotz_locale, netBotz_dev_logaddress=netBotz_dev_logaddress, netBotz_dev_ip=netBotz_dev_ip, netBotz_dev_smtp=netBotz_dev_smtp, netBotz_timezone=netBotz_timezone, netBotz_dev_host=netBotz_dev_host, netBotz_dev_secondaryemail=netBotz_dev_secondaryemail, netBotz_dev_registered=netBotz_dev_registered, netBotz_dev_serialno=netBotz_dev_serialno, netBotz_dev_pop=netBotz_dev_pop, netBotz_dev_loglevel=netBotz_dev_loglevel, netBotz_dev_domain=netBotz_dev_domain, netBotz_alert_url_logon=netBotz_alert_url_logon, netBotz_sensor_data_url_logon=netBotz_sensor_data_url_logon, netBotz_dev_logport=netBotz_dev_logport, netBotz_dev_primaryemail=netBotz_dev_primaryemail, netBotz_guibar_color=netBotz_guibar_color, netBotz_ismetric=netBotz_ismetric, netBotz_default_applet=netBotz_default_applet, netBotz_picture_alert_url_logon=netBotz_picture_alert_url_logon, netBotz_sensor_data_url_flags=netBotz_sensor_data_url_flags, netBotz_24hourpreferred=netBotz_24hourpreferred, netBotz_dev_pager=netBotz_dev_pager, netBotz_utc_clock=netBotz_utc_clock, netBotz_dev_version=netBotz_dev_version, netBotz_sensor_data_url_period=netBotz_sensor_data_url_period, netBotz_dev_netmask=netBotz_dev_netmask, netBotz_dev_gateway=netBotz_dev_gateway, netBotz_sensor_data_url=netBotz_sensor_data_url)
