#
# PySNMP MIB module ROHC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ROHC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:49:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibIdentifier, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ModuleIdentity, mib_2, Gauge32, TimeTicks, Unsigned32, IpAddress, Counter64, NotificationType, ObjectIdentity, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ModuleIdentity", "mib-2", "Gauge32", "TimeTicks", "Unsigned32", "IpAddress", "Counter64", "NotificationType", "ObjectIdentity", "iso", "Integer32")
DateAndTime, TextualConvention, TruthValue, DisplayString, TimeInterval = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention", "TruthValue", "DisplayString", "TimeInterval")
rohcMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 112))
rohcMIB.setRevisions(('2004-06-03 00:00',))
if mibBuilder.loadTexts: rohcMIB.setLastUpdated('200406030000Z')
if mibBuilder.loadTexts: rohcMIB.setOrganization('IETF Robust Header Compression Working Group')
class RohcChannelIdentifier(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class RohcChannelIdentifierOrZero(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

class RohcCompressionRatio(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'

rohcObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 112, 1))
rohcConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 112, 2))
rohcInstanceObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 112, 1, 1))
rohcChannelTable = MibTable((1, 3, 6, 1, 2, 1, 112, 1, 1, 1), )
if mibBuilder.loadTexts: rohcChannelTable.setStatus('current')
rohcChannelEntry = MibTableRow((1, 3, 6, 1, 2, 1, 112, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ROHC-MIB", "rohcChannelID"))
if mibBuilder.loadTexts: rohcChannelEntry.setStatus('current')
rohcChannelID = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 1, 1, 2), RohcChannelIdentifier())
if mibBuilder.loadTexts: rohcChannelID.setStatus('current')
rohcChannelType = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notInUse", 1), ("rohc", 2), ("dedicatedFeedback", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcChannelType.setStatus('current')
rohcChannelFeedbackFor = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 1, 1, 4), RohcChannelIdentifierOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcChannelFeedbackFor.setStatus('current')
rohcChannelDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 1, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcChannelDescr.setStatus('current')
rohcChannelStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcChannelStatus.setStatus('current')
rohcInstanceTable = MibTable((1, 3, 6, 1, 2, 1, 112, 1, 1, 2), )
if mibBuilder.loadTexts: rohcInstanceTable.setStatus('current')
rohcInstanceEntry = MibTableRow((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ROHC-MIB", "rohcInstanceType"), (0, "ROHC-MIB", "rohcChannelID"))
if mibBuilder.loadTexts: rohcInstanceEntry.setStatus('current')
rohcInstanceType = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("compressor", 1), ("decompressor", 2))))
if mibBuilder.loadTexts: rohcInstanceType.setStatus('current')
rohcInstanceFBChannelID = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 4), RohcChannelIdentifierOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcInstanceFBChannelID.setStatus('current')
rohcInstanceVendor = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcInstanceVendor.setStatus('current')
rohcInstanceVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcInstanceVersion.setStatus('current')
rohcInstanceDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcInstanceDescr.setStatus('current')
rohcInstanceClockRes = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 8), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcInstanceClockRes.setStatus('current')
rohcInstanceMaxCID = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcInstanceMaxCID.setStatus('current')
rohcInstanceLargeCIDs = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcInstanceLargeCIDs.setStatus('current')
rohcInstanceMRRU = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcInstanceMRRU.setStatus('current')
rohcInstanceContextStorageTime = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 12), TimeInterval().clone(360000)).setUnits('centi-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rohcInstanceContextStorageTime.setStatus('current')
rohcInstanceStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcInstanceStatus.setStatus('current')
rohcInstanceContextsTotal = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcInstanceContextsTotal.setStatus('current')
rohcInstanceContextsCurrent = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcInstanceContextsCurrent.setStatus('current')
rohcInstancePackets = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcInstancePackets.setStatus('current')
rohcInstanceIRs = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcInstanceIRs.setStatus('current')
rohcInstanceIRDYNs = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcInstanceIRDYNs.setStatus('current')
rohcInstanceFeedbacks = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcInstanceFeedbacks.setStatus('current')
rohcInstanceCompressionRatio = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 2, 1, 20), RohcCompressionRatio()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcInstanceCompressionRatio.setStatus('current')
rohcProfileTable = MibTable((1, 3, 6, 1, 2, 1, 112, 1, 1, 3), )
if mibBuilder.loadTexts: rohcProfileTable.setStatus('current')
rohcProfileEntry = MibTableRow((1, 3, 6, 1, 2, 1, 112, 1, 1, 3, 1), ).setIndexNames((0, "ROHC-MIB", "rohcChannelID"), (0, "ROHC-MIB", "rohcProfile"))
if mibBuilder.loadTexts: rohcProfileEntry.setStatus('current')
rohcProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: rohcProfile.setStatus('current')
rohcProfileVendor = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 3, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcProfileVendor.setStatus('current')
rohcProfileVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 3, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcProfileVersion.setStatus('current')
rohcProfileDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 3, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcProfileDescr.setStatus('current')
rohcProfileNegotiated = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 1, 3, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcProfileNegotiated.setStatus('current')
rohcContextTable = MibTable((1, 3, 6, 1, 2, 1, 112, 1, 2), )
if mibBuilder.loadTexts: rohcContextTable.setStatus('current')
rohcContextEntry = MibTableRow((1, 3, 6, 1, 2, 1, 112, 1, 2, 1), ).setIndexNames((0, "ROHC-MIB", "rohcChannelID"), (0, "ROHC-MIB", "rohcContextCID"))
if mibBuilder.loadTexts: rohcContextEntry.setStatus('current')
rohcContextCID = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383)))
if mibBuilder.loadTexts: rohcContextCID.setStatus('current')
rohcContextCIDState = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unused", 1), ("active", 2), ("expired", 3), ("terminated", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextCIDState.setStatus('current')
rohcContextProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextProfile.setStatus('current')
rohcContextDecompressorDepth = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextDecompressorDepth.setStatus('current')
rohcContextStorageTime = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 6), TimeInterval()).setUnits('centi-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rohcContextStorageTime.setStatus('current')
rohcContextActivationTime = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 7), DateAndTime().clone(hexValue="0000000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextActivationTime.setStatus('current')
rohcContextDeactivationTime = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 8), DateAndTime().clone(hexValue="0000000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextDeactivationTime.setStatus('current')
rohcContextPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextPackets.setStatus('current')
rohcContextIRs = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextIRs.setStatus('current')
rohcContextIRDYNs = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextIRDYNs.setStatus('current')
rohcContextFeedbacks = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextFeedbacks.setStatus('current')
rohcContextDecompressorFailures = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextDecompressorFailures.setStatus('current')
rohcContextDecompressorRepairs = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextDecompressorRepairs.setStatus('current')
rohcContextAllPacketsRatio = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 15), RohcCompressionRatio()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextAllPacketsRatio.setStatus('current')
rohcContextAllHeadersRatio = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 16), RohcCompressionRatio()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextAllHeadersRatio.setStatus('current')
rohcContextAllPacketsMeanSize = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextAllPacketsMeanSize.setStatus('current')
rohcContextAllHeadersMeanSize = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextAllHeadersMeanSize.setStatus('current')
rohcContextLastPacketsRatio = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 19), RohcCompressionRatio()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextLastPacketsRatio.setStatus('current')
rohcContextLastHeadersRatio = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 20), RohcCompressionRatio()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextLastHeadersRatio.setStatus('current')
rohcContextLastPacketsMeanSize = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextLastPacketsMeanSize.setStatus('current')
rohcContextLastHeadersMeanSize = MibTableColumn((1, 3, 6, 1, 2, 1, 112, 1, 2, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcContextLastHeadersMeanSize.setStatus('current')
rohcCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 112, 2, 1))
rohcGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 112, 2, 2))
rohcCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 112, 2, 1, 1)).setObjects(("ROHC-MIB", "rohcInstanceGroup"), ("ROHC-MIB", "rohcContextGroup"), ("ROHC-MIB", "rohcStatisticsGroup"), ("ROHC-MIB", "rohcTimerGroup"), ("ROHC-MIB", "rohcContextStatisticsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rohcCompliance = rohcCompliance.setStatus('current')
rohcInstanceGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 112, 2, 2, 2)).setObjects(("ROHC-MIB", "rohcChannelType"), ("ROHC-MIB", "rohcChannelFeedbackFor"), ("ROHC-MIB", "rohcChannelDescr"), ("ROHC-MIB", "rohcChannelStatus"), ("ROHC-MIB", "rohcInstanceFBChannelID"), ("ROHC-MIB", "rohcInstanceVendor"), ("ROHC-MIB", "rohcInstanceVersion"), ("ROHC-MIB", "rohcInstanceDescr"), ("ROHC-MIB", "rohcInstanceClockRes"), ("ROHC-MIB", "rohcInstanceMaxCID"), ("ROHC-MIB", "rohcInstanceLargeCIDs"), ("ROHC-MIB", "rohcInstanceMRRU"), ("ROHC-MIB", "rohcInstanceStatus"), ("ROHC-MIB", "rohcProfileVendor"), ("ROHC-MIB", "rohcProfileVersion"), ("ROHC-MIB", "rohcProfileDescr"), ("ROHC-MIB", "rohcProfileNegotiated"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rohcInstanceGroup = rohcInstanceGroup.setStatus('current')
rohcStatisticsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 112, 2, 2, 4)).setObjects(("ROHC-MIB", "rohcInstanceContextsTotal"), ("ROHC-MIB", "rohcInstanceContextsCurrent"), ("ROHC-MIB", "rohcInstancePackets"), ("ROHC-MIB", "rohcInstanceIRs"), ("ROHC-MIB", "rohcInstanceIRDYNs"), ("ROHC-MIB", "rohcInstanceFeedbacks"), ("ROHC-MIB", "rohcInstanceCompressionRatio"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rohcStatisticsGroup = rohcStatisticsGroup.setStatus('current')
rohcContextGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 112, 2, 2, 5)).setObjects(("ROHC-MIB", "rohcContextCIDState"), ("ROHC-MIB", "rohcContextProfile"), ("ROHC-MIB", "rohcContextDecompressorDepth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rohcContextGroup = rohcContextGroup.setStatus('current')
rohcTimerGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 112, 2, 2, 6)).setObjects(("ROHC-MIB", "rohcInstanceContextStorageTime"), ("ROHC-MIB", "rohcContextStorageTime"), ("ROHC-MIB", "rohcContextActivationTime"), ("ROHC-MIB", "rohcContextDeactivationTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rohcTimerGroup = rohcTimerGroup.setStatus('current')
rohcContextStatisticsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 112, 2, 2, 7)).setObjects(("ROHC-MIB", "rohcContextPackets"), ("ROHC-MIB", "rohcContextIRs"), ("ROHC-MIB", "rohcContextIRDYNs"), ("ROHC-MIB", "rohcContextFeedbacks"), ("ROHC-MIB", "rohcContextDecompressorFailures"), ("ROHC-MIB", "rohcContextDecompressorRepairs"), ("ROHC-MIB", "rohcContextAllPacketsRatio"), ("ROHC-MIB", "rohcContextAllHeadersRatio"), ("ROHC-MIB", "rohcContextAllPacketsMeanSize"), ("ROHC-MIB", "rohcContextAllHeadersMeanSize"), ("ROHC-MIB", "rohcContextLastPacketsRatio"), ("ROHC-MIB", "rohcContextLastHeadersRatio"), ("ROHC-MIB", "rohcContextLastPacketsMeanSize"), ("ROHC-MIB", "rohcContextLastHeadersMeanSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rohcContextStatisticsGroup = rohcContextStatisticsGroup.setStatus('current')
mibBuilder.exportSymbols("ROHC-MIB", RohcChannelIdentifierOrZero=RohcChannelIdentifierOrZero, rohcProfile=rohcProfile, rohcInstanceFBChannelID=rohcInstanceFBChannelID, RohcChannelIdentifier=RohcChannelIdentifier, rohcGroups=rohcGroups, rohcInstanceObjects=rohcInstanceObjects, rohcChannelStatus=rohcChannelStatus, rohcContextDecompressorDepth=rohcContextDecompressorDepth, rohcCompliances=rohcCompliances, rohcInstanceContextsCurrent=rohcInstanceContextsCurrent, rohcContextActivationTime=rohcContextActivationTime, rohcInstanceType=rohcInstanceType, rohcInstanceClockRes=rohcInstanceClockRes, rohcContextStorageTime=rohcContextStorageTime, rohcInstanceMaxCID=rohcInstanceMaxCID, rohcInstanceContextStorageTime=rohcInstanceContextStorageTime, rohcTimerGroup=rohcTimerGroup, rohcChannelType=rohcChannelType, rohcProfileTable=rohcProfileTable, rohcInstanceMRRU=rohcInstanceMRRU, rohcContextLastHeadersMeanSize=rohcContextLastHeadersMeanSize, rohcMIB=rohcMIB, rohcContextAllHeadersMeanSize=rohcContextAllHeadersMeanSize, rohcChannelDescr=rohcChannelDescr, rohcInstanceTable=rohcInstanceTable, rohcInstanceCompressionRatio=rohcInstanceCompressionRatio, rohcProfileNegotiated=rohcProfileNegotiated, rohcContextAllPacketsMeanSize=rohcContextAllPacketsMeanSize, rohcContextLastPacketsMeanSize=rohcContextLastPacketsMeanSize, rohcContextDecompressorRepairs=rohcContextDecompressorRepairs, rohcStatisticsGroup=rohcStatisticsGroup, rohcChannelFeedbackFor=rohcChannelFeedbackFor, rohcInstanceVendor=rohcInstanceVendor, rohcInstanceLargeCIDs=rohcInstanceLargeCIDs, rohcInstanceIRs=rohcInstanceIRs, rohcProfileVendor=rohcProfileVendor, rohcObjects=rohcObjects, rohcConformance=rohcConformance, rohcContextLastPacketsRatio=rohcContextLastPacketsRatio, rohcProfileVersion=rohcProfileVersion, rohcChannelEntry=rohcChannelEntry, rohcChannelTable=rohcChannelTable, rohcChannelID=rohcChannelID, rohcInstanceDescr=rohcInstanceDescr, rohcContextDecompressorFailures=rohcContextDecompressorFailures, RohcCompressionRatio=RohcCompressionRatio, rohcInstanceStatus=rohcInstanceStatus, rohcInstanceContextsTotal=rohcInstanceContextsTotal, rohcContextIRs=rohcContextIRs, rohcInstanceGroup=rohcInstanceGroup, rohcContextIRDYNs=rohcContextIRDYNs, rohcContextGroup=rohcContextGroup, rohcContextDeactivationTime=rohcContextDeactivationTime, PYSNMP_MODULE_ID=rohcMIB, rohcInstanceIRDYNs=rohcInstanceIRDYNs, rohcContextTable=rohcContextTable, rohcContextStatisticsGroup=rohcContextStatisticsGroup, rohcContextPackets=rohcContextPackets, rohcContextProfile=rohcContextProfile, rohcContextLastHeadersRatio=rohcContextLastHeadersRatio, rohcProfileEntry=rohcProfileEntry, rohcInstanceVersion=rohcInstanceVersion, rohcInstanceFeedbacks=rohcInstanceFeedbacks, rohcProfileDescr=rohcProfileDescr, rohcContextEntry=rohcContextEntry, rohcContextCID=rohcContextCID, rohcContextAllHeadersRatio=rohcContextAllHeadersRatio, rohcContextAllPacketsRatio=rohcContextAllPacketsRatio, rohcContextCIDState=rohcContextCIDState, rohcContextFeedbacks=rohcContextFeedbacks, rohcInstancePackets=rohcInstancePackets, rohcInstanceEntry=rohcInstanceEntry, rohcCompliance=rohcCompliance)
