#
# PySNMP MIB module NV6000-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NV6000-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:16:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, MibIdentifier, Unsigned32, Gauge32, NotificationType, IpAddress, Counter32, ObjectIdentity, Counter64, iso, TimeTicks, Integer32, Bits, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibIdentifier", "Unsigned32", "Gauge32", "NotificationType", "IpAddress", "Counter32", "ObjectIdentity", "Counter64", "iso", "TimeTicks", "Integer32", "Bits", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ibm = MibIdentifier((1, 3, 6, 1, 4, 1, 2))
ibmProd = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6))
netView6000SubAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 4))
nv6saTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 4, 2))
nv6saIcmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 4, 3))
nv6saFileSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 4, 4))
nv6saComputerSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 4, 5))
nv6saTrapNum = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 4, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nv6saTrapNum.setStatus('optional')
nv6saTrapThrottleCount = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 4, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nv6saTrapThrottleCount.setStatus('optional')
nv6saTrapThrottleId = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 4, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nv6saTrapThrottleId.setStatus('optional')
nv6saTrapThrottleTime = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 4, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nv6saTrapThrottleTime.setStatus('optional')
nv6saIcmpEchoReq = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 4, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nv6saIcmpEchoReq.setStatus('mandatory')
nv6saFileSystemMounted = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 4, 4, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nv6saFileSystemMounted.setStatus('optional')
nv6saComputerSystemLoad = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 4, 5, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nv6saComputerSystemLoad.setStatus('mandatory')
mibBuilder.exportSymbols("NV6000-MIB", nv6saTrapThrottleId=nv6saTrapThrottleId, nv6saComputerSystemLoad=nv6saComputerSystemLoad, nv6saFileSystem=nv6saFileSystem, nv6saTrapThrottleTime=nv6saTrapThrottleTime, nv6saFileSystemMounted=nv6saFileSystemMounted, nv6saIcmpEchoReq=nv6saIcmpEchoReq, netView6000SubAgent=netView6000SubAgent, nv6saTrap=nv6saTrap, nv6saTrapNum=nv6saTrapNum, ibm=ibm, nv6saComputerSystem=nv6saComputerSystem, nv6saTrapThrottleCount=nv6saTrapThrottleCount, nv6saIcmp=nv6saIcmp, ibmProd=ibmProd)
