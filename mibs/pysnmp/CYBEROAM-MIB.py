#
# PySNMP MIB module CYBEROAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CYBEROAM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:18:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ModuleIdentity, MibIdentifier, enterprises, iso, IpAddress, Integer32, NotificationType, Bits, snmpModules, Counter32, Unsigned32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ModuleIdentity", "MibIdentifier", "enterprises", "iso", "IpAddress", "Integer32", "NotificationType", "Bits", "snmpModules", "Counter32", "Unsigned32", "ObjectIdentity")
DisplayString, TextualConvention, DateAndTime, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "DateAndTime", "TruthValue")
elitecore = ModuleIdentity((1, 3, 6, 1, 4, 1, 21067))
if mibBuilder.loadTexts: elitecore.setLastUpdated('200607140000Z')
if mibBuilder.loadTexts: elitecore.setOrganization('Elitecore Technologies')
cyberoam = ObjectIdentity((1, 3, 6, 1, 4, 1, 21067, 2))
if mibBuilder.loadTexts: cyberoam.setStatus('current')
class OpModeType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("bridge", 1), ("route", 2))

class HaModeType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("standalone", 1), ("active-passive", 2), ("active-active", 3))

class ServiceStatsType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("running", 1), ("stopped", 2), ("initializing", 3))

class RegistrationStatusType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("registered", 1), ("unregistered", 2))

class SubscriptionStatusType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("trial", 1), ("unsubscribed", 2), ("subscribed", 3), ("expired", 4))

class SupportStatusType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("support8x5", 1), ("support24x7", 2))

crSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1))
sysInstall = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 1))
sysStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2))
sysLicense = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3))
sysAlerts = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4))
applianceKey = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: applianceKey.setStatus('current')
applianceModel = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: applianceModel.setStatus('current')
cyberoamVersion = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyberoamVersion.setStatus('current')
webcatVersion = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: webcatVersion.setStatus('current')
avVersion = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avVersion.setStatus('current')
asVersion = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: asVersion.setStatus('current')
idpVersion = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idpVersion.setStatus('current')
cyberoamOpMode = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 1), OpModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyberoamOpMode.setStatus('current')
systemDate = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemDate.setStatus('current')
cpuStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 3))
cpuPercentUsage = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPercentUsage.setStatus('current')
diskStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 4))
diskCapacity = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskCapacity.setStatus('current')
diskPercentUsage = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskPercentUsage.setStatus('current')
memoryStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 5))
memoryCapacity = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 5, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCapacity.setStatus('current')
memoryPercentUsage = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 5, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPercentUsage.setStatus('current')
swapCapacity = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 5, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swapCapacity.setStatus('current')
swapPercentUsage = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 5, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swapPercentUsage.setStatus('current')
haMode = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 6), HaModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: haMode.setStatus('current')
liveUsers = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveUsers.setStatus('current')
httpHits = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpHits.setStatus('current')
ftpHits = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpHits.setStatus('current')
mailHits = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 10))
serviceStats = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11))
pop3Hits = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pop3Hits.setStatus('current')
imapHits = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imapHits.setStatus('current')
smtpHits = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpHits.setStatus('current')
pop3Service = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 1), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pop3Service.setStatus('current')
imap4Service = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 2), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imap4Service.setStatus('current')
smtpService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 3), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpService.setStatus('current')
ftpService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 4), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpService.setStatus('current')
httpService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 5), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpService.setStatus('current')
avService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 6), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avService.setStatus('current')
asService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 7), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: asService.setStatus('current')
dnsService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 8), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsService.setStatus('current')
haService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 9), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: haService.setStatus('current')
idpService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 10), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idpService.setStatus('current')
analyzerService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 11), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analyzerService.setStatus('current')
snmpService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 12), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpService.setStatus('current')
liAppliance = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 1))
liSupport = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 2))
liAntivirus = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 3))
liAntispam = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 4))
liIdp = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 5))
liWebcat = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 6))
appRegStatus = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 1, 1), RegistrationStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appRegStatus.setStatus('current')
appExpiryDate = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appExpiryDate.setStatus('current')
supportSubStatus = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 2, 1), SupportStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: supportSubStatus.setStatus('current')
supportExpiryDate = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 2, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: supportExpiryDate.setStatus('current')
avSubStatus = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 3, 1), SubscriptionStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avSubStatus.setStatus('current')
avExpiryDate = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 3, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avExpiryDate.setStatus('current')
asSubStatus = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 4, 1), SubscriptionStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: asSubStatus.setStatus('current')
asExpiryDate = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 4, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: asExpiryDate.setStatus('current')
idpSubStatus = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 5, 1), SubscriptionStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idpSubStatus.setStatus('current')
idpExpiryDate = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 5, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idpExpiryDate.setStatus('current')
webcatSubStatus = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 6, 1), SubscriptionStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webcatSubStatus.setStatus('current')
webcatExpiryDate = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 6, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webcatExpiryDate.setStatus('current')
highCpuUsage = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 1))
if mibBuilder.loadTexts: highCpuUsage.setStatus('current')
highDiskUsage = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 2))
if mibBuilder.loadTexts: highDiskUsage.setStatus('current')
highMemUsage = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 3))
if mibBuilder.loadTexts: highMemUsage.setStatus('current')
avAlerts = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 4))
dgdAlerts = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 5))
idpAlerts = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 6))
dosAlerts = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 7))
httpVirus = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 4, 1))
if mibBuilder.loadTexts: httpVirus.setStatus('current')
smtpVirus = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 4, 2))
if mibBuilder.loadTexts: smtpVirus.setStatus('current')
pop3Virus = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 4, 3))
if mibBuilder.loadTexts: pop3Virus.setStatus('current')
imap4Virus = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 4, 4))
if mibBuilder.loadTexts: imap4Virus.setStatus('current')
ftpVirus = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 4, 5))
if mibBuilder.loadTexts: ftpVirus.setStatus('current')
gwLiveDead = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 5, 1))
if mibBuilder.loadTexts: gwLiveDead.setStatus('current')
idpAlert = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 6, 1))
if mibBuilder.loadTexts: idpAlert.setStatus('current')
synFlood = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 7, 1))
if mibBuilder.loadTexts: synFlood.setStatus('current')
tcpFlood = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 7, 2))
if mibBuilder.loadTexts: tcpFlood.setStatus('current')
udpFlood = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 7, 3))
if mibBuilder.loadTexts: udpFlood.setStatus('current')
icmpFlood = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 7, 4))
if mibBuilder.loadTexts: icmpFlood.setStatus('current')
mibBuilder.exportSymbols("CYBEROAM-MIB", OpModeType=OpModeType, idpExpiryDate=idpExpiryDate, avVersion=avVersion, udpFlood=udpFlood, sysStatus=sysStatus, idpService=idpService, asExpiryDate=asExpiryDate, webcatSubStatus=webcatSubStatus, appRegStatus=appRegStatus, SubscriptionStatusType=SubscriptionStatusType, smtpHits=smtpHits, ServiceStatsType=ServiceStatsType, diskPercentUsage=diskPercentUsage, RegistrationStatusType=RegistrationStatusType, highCpuUsage=highCpuUsage, memoryStatus=memoryStatus, HaModeType=HaModeType, liSupport=liSupport, swapPercentUsage=swapPercentUsage, imapHits=imapHits, highMemUsage=highMemUsage, idpVersion=idpVersion, dnsService=dnsService, idpSubStatus=idpSubStatus, httpHits=httpHits, avAlerts=avAlerts, imap4Virus=imap4Virus, liIdp=liIdp, elitecore=elitecore, asVersion=asVersion, asSubStatus=asSubStatus, supportSubStatus=supportSubStatus, icmpFlood=icmpFlood, asService=asService, PYSNMP_MODULE_ID=elitecore, pop3Virus=pop3Virus, liveUsers=liveUsers, cyberoam=cyberoam, avSubStatus=avSubStatus, httpService=httpService, appExpiryDate=appExpiryDate, liWebcat=liWebcat, tcpFlood=tcpFlood, gwLiveDead=gwLiveDead, pop3Service=pop3Service, ftpHits=ftpHits, idpAlert=idpAlert, smtpVirus=smtpVirus, avService=avService, supportExpiryDate=supportExpiryDate, diskCapacity=diskCapacity, idpAlerts=idpAlerts, mailHits=mailHits, cyberoamOpMode=cyberoamOpMode, analyzerService=analyzerService, SupportStatusType=SupportStatusType, webcatExpiryDate=webcatExpiryDate, dosAlerts=dosAlerts, synFlood=synFlood, cpuStatus=cpuStatus, dgdAlerts=dgdAlerts, avExpiryDate=avExpiryDate, swapCapacity=swapCapacity, sysAlerts=sysAlerts, highDiskUsage=highDiskUsage, snmpService=snmpService, httpVirus=httpVirus, smtpService=smtpService, serviceStats=serviceStats, diskStatus=diskStatus, liAntispam=liAntispam, memoryPercentUsage=memoryPercentUsage, haMode=haMode, crSystem=crSystem, memoryCapacity=memoryCapacity, webcatVersion=webcatVersion, liAntivirus=liAntivirus, sysInstall=sysInstall, ftpVirus=ftpVirus, cyberoamVersion=cyberoamVersion, applianceKey=applianceKey, cpuPercentUsage=cpuPercentUsage, sysLicense=sysLicense, applianceModel=applianceModel, pop3Hits=pop3Hits, imap4Service=imap4Service, haService=haService, liAppliance=liAppliance, systemDate=systemDate, ftpService=ftpService)
