#
# PySNMP MIB module ENTERASYS-LICENSE-KEY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-LICENSE-KEY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:49:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibIdentifier, Integer32, IpAddress, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter32, iso, ModuleIdentity, Bits, TimeTicks, Counter64, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Integer32", "IpAddress", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter32", "iso", "ModuleIdentity", "Bits", "TimeTicks", "Counter64", "NotificationType", "Unsigned32")
DisplayString, TextualConvention, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "DateAndTime")
etsysLicenseKeyMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54))
etsysLicenseKeyMIB.setRevisions(('2009-09-02 18:59', '2004-11-03 19:52', '2004-08-30 14:52', '2004-08-17 16:35',))
if mibBuilder.loadTexts: etsysLicenseKeyMIB.setLastUpdated('200909021859Z')
if mibBuilder.loadTexts: etsysLicenseKeyMIB.setOrganization('Enterasys Networks, Inc')
class LicenseKeyStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("other", 1), ("active", 2), ("invalid", 3), ("expired", 4), ("restricted", 5), ("uninitialized", 6), ("validNotActive", 7))

etsysLicenseKeyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1))
etsysLicenseKeyConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1))
etsysLicenseKeyTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 1), )
if mibBuilder.loadTexts: etsysLicenseKeyTable.setStatus('obsolete')
etsysLicenseKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 1, 1), ).setIndexNames((0, "ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyIndex"))
if mibBuilder.loadTexts: etsysLicenseKeyEntry.setStatus('obsolete')
etsysLicenseKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: etsysLicenseKeyIndex.setStatus('obsolete')
etsysLicenseKeyIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLicenseKeyIdentifier.setStatus('obsolete')
etsysLicenseKeyDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLicenseKeyDescription.setStatus('obsolete')
etsysLicenseKeyString = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 1, 1, 4), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysLicenseKeyString.setStatus('obsolete')
etsysLicenseKeyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 1, 1, 5), LicenseKeyStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLicenseKeyStatus.setStatus('obsolete')
etsysLicenseKeyStatusText = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 1, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLicenseKeyStatusText.setStatus('obsolete')
etsysLicenseKeyLastModified = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 1, 1, 7), DateAndTime().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLicenseKeyLastModified.setStatus('obsolete')
etsysLicenseKeyExpiration = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 1, 1, 8), DateAndTime().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLicenseKeyExpiration.setStatus('obsolete')
etsysLicenseKeyPhysicalTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 2), )
if mibBuilder.loadTexts: etsysLicenseKeyPhysicalTable.setStatus('current')
etsysLicenseKeyPhysicalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyPhysicalIndex"))
if mibBuilder.loadTexts: etsysLicenseKeyPhysicalEntry.setStatus('current')
etsysLicenseKeyPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: etsysLicenseKeyPhysicalIndex.setStatus('current')
etsysLicenseKeyPhysicalIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 2, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLicenseKeyPhysicalIdentifier.setStatus('current')
etsysLicenseKeyPhysicalDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLicenseKeyPhysicalDescription.setStatus('current')
etsysLicenseKeyPhysicalString = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysLicenseKeyPhysicalString.setStatus('current')
etsysLicenseKeyPhysicalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 2, 1, 5), LicenseKeyStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLicenseKeyPhysicalStatus.setStatus('current')
etsysLicenseKeyPhysicalStatusText = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 2, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLicenseKeyPhysicalStatusText.setStatus('current')
etsysLicenseKeyPhysicalLastModified = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 2, 1, 7), DateAndTime().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLicenseKeyPhysicalLastModified.setStatus('current')
etsysLicenseKeyPhysicalExpiration = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 1, 1, 2, 1, 8), DateAndTime().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLicenseKeyPhysicalExpiration.setStatus('current')
etsysLicenseKeyConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 2))
etsysLicenseKeyGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 2, 1))
etsysLicenseKeyCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 2, 2))
etsysLicenseKeyConfigurationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 2, 1, 1)).setObjects(("ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyIdentifier"), ("ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyDescription"), ("ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyString"), ("ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyStatus"), ("ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyStatusText"), ("ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyLastModified"), ("ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyExpiration"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysLicenseKeyConfigurationGroup = etsysLicenseKeyConfigurationGroup.setStatus('obsolete')
etsysLicenseKeyPhysicalConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 2, 1, 2)).setObjects(("ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyPhysicalIdentifier"), ("ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyPhysicalDescription"), ("ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyPhysicalString"), ("ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyPhysicalStatus"), ("ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyPhysicalStatusText"), ("ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyPhysicalLastModified"), ("ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyPhysicalExpiration"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysLicenseKeyPhysicalConfigGroup = etsysLicenseKeyPhysicalConfigGroup.setStatus('current')
etsysLicenseKeyCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 2, 2, 1)).setObjects(("ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyConfigurationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysLicenseKeyCompliance = etsysLicenseKeyCompliance.setStatus('obsolete')
etsysLicenseKeyCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 54, 2, 2, 2)).setObjects(("ENTERASYS-LICENSE-KEY-MIB", "etsysLicenseKeyPhysicalConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysLicenseKeyCompliance2 = etsysLicenseKeyCompliance2.setStatus('current')
mibBuilder.exportSymbols("ENTERASYS-LICENSE-KEY-MIB", etsysLicenseKeyPhysicalLastModified=etsysLicenseKeyPhysicalLastModified, LicenseKeyStatus=LicenseKeyStatus, etsysLicenseKeyLastModified=etsysLicenseKeyLastModified, etsysLicenseKeyPhysicalIndex=etsysLicenseKeyPhysicalIndex, etsysLicenseKeyPhysicalDescription=etsysLicenseKeyPhysicalDescription, etsysLicenseKeyPhysicalStatus=etsysLicenseKeyPhysicalStatus, etsysLicenseKeyConfigurationGroup=etsysLicenseKeyConfigurationGroup, etsysLicenseKeyCompliance=etsysLicenseKeyCompliance, etsysLicenseKeyDescription=etsysLicenseKeyDescription, etsysLicenseKeyIdentifier=etsysLicenseKeyIdentifier, etsysLicenseKeyConfiguration=etsysLicenseKeyConfiguration, etsysLicenseKeyStatusText=etsysLicenseKeyStatusText, etsysLicenseKeyPhysicalIdentifier=etsysLicenseKeyPhysicalIdentifier, etsysLicenseKeyPhysicalString=etsysLicenseKeyPhysicalString, etsysLicenseKeyPhysicalStatusText=etsysLicenseKeyPhysicalStatusText, etsysLicenseKeyConformance=etsysLicenseKeyConformance, etsysLicenseKeyString=etsysLicenseKeyString, etsysLicenseKeyPhysicalEntry=etsysLicenseKeyPhysicalEntry, etsysLicenseKeyPhysicalTable=etsysLicenseKeyPhysicalTable, etsysLicenseKeyIndex=etsysLicenseKeyIndex, etsysLicenseKeyGroups=etsysLicenseKeyGroups, PYSNMP_MODULE_ID=etsysLicenseKeyMIB, etsysLicenseKeyObjects=etsysLicenseKeyObjects, etsysLicenseKeyPhysicalExpiration=etsysLicenseKeyPhysicalExpiration, etsysLicenseKeyExpiration=etsysLicenseKeyExpiration, etsysLicenseKeyMIB=etsysLicenseKeyMIB, etsysLicenseKeyStatus=etsysLicenseKeyStatus, etsysLicenseKeyTable=etsysLicenseKeyTable, etsysLicenseKeyPhysicalConfigGroup=etsysLicenseKeyPhysicalConfigGroup, etsysLicenseKeyEntry=etsysLicenseKeyEntry, etsysLicenseKeyCompliances=etsysLicenseKeyCompliances, etsysLicenseKeyCompliance2=etsysLicenseKeyCompliance2)
