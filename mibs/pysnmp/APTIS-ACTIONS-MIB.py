#
# PySNMP MIB module APTIS-ACTIONS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APTIS-ACTIONS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:08:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Boolean, aptis_actions = mibBuilder.importSymbols("APTIS-MIB", "Boolean", "aptis-actions")
aptis_modules, = mibBuilder.importSymbols("APTIS-REG-MIB", "aptis-modules")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, ModuleIdentity, Counter32, TimeTicks, Gauge32, Unsigned32, NotificationType, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ObjectIdentity, MibIdentifier, Integer32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "Counter32", "TimeTicks", "Gauge32", "Unsigned32", "NotificationType", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ObjectIdentity", "MibIdentifier", "Integer32", "Counter64")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
aptisActionsModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2637, 1, 1, 5))
if mibBuilder.loadTexts: aptisActionsModule.setLastUpdated('0004140000Z')
if mibBuilder.loadTexts: aptisActionsModule.setOrganization('Nortel Networks')
resetTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3510), )
if mibBuilder.loadTexts: resetTable.setStatus('current')
resetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3510, 1), ).setIndexNames((0, "APTIS-ACTIONS-MIB", "resetInstance"))
if mibBuilder.loadTexts: resetEntry.setStatus('current')
resetInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3510, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: resetInstance.setStatus('current')
resetStatusGeneral = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3510, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4))).clone(namedValues=NamedValues(("started", 0), ("succeeded", 1), ("failed", 2), ("errParam", 4))).clone('started')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: resetStatusGeneral.setStatus('current')
resetResetType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3510, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hard", 1), ("cold", 2), ("warm", 3))).clone('hard')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: resetResetType.setStatus('current')
flashWriteTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3501), )
if mibBuilder.loadTexts: flashWriteTable.setStatus('current')
flashWriteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3501, 1), ).setIndexNames((0, "APTIS-ACTIONS-MIB", "flashWriteInstance"))
if mibBuilder.loadTexts: flashWriteEntry.setStatus('current')
flashWriteInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3501, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: flashWriteInstance.setStatus('current')
flashWriteStatusGeneral = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3501, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4))).clone(namedValues=NamedValues(("started", 0), ("succeeded", 1), ("failed", 2), ("errParam", 4))).clone('started')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: flashWriteStatusGeneral.setStatus('current')
flashWriteStatusSpecific = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3501, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noError", 0), ("badArgs", 1), ("lackOfResources", 2), ("genFail", 3))).clone('noError')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: flashWriteStatusSpecific.setStatus('current')
flashWritePathString = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3501, 1, 11), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: flashWritePathString.setStatus('current')
flashWriteFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3501, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: flashWriteFileName.setStatus('current')
flashWriteBytesWritten = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3501, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: flashWriteBytesWritten.setStatus('current')
flashWriteVerboseMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3501, 1, 14), Boolean().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: flashWriteVerboseMode.setStatus('current')
flashReadTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3502), )
if mibBuilder.loadTexts: flashReadTable.setStatus('current')
flashReadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3502, 1), ).setIndexNames((0, "APTIS-ACTIONS-MIB", "flashReadInstance"))
if mibBuilder.loadTexts: flashReadEntry.setStatus('current')
flashReadInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3502, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: flashReadInstance.setStatus('current')
flashReadStatusGeneral = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3502, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 5))).clone(namedValues=NamedValues(("started", 0), ("succeeded", 1), ("failed", 2), ("badFile", 4), ("genFail", 5))).clone('started')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: flashReadStatusGeneral.setStatus('current')
flashReadFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3502, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: flashReadFileName.setStatus('current')
flashReadLinesRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3502, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: flashReadLinesRead.setStatus('current')
flashSaveTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3503), )
if mibBuilder.loadTexts: flashSaveTable.setStatus('current')
flashSaveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3503, 1), ).setIndexNames((0, "APTIS-ACTIONS-MIB", "flashSaveInstance"))
if mibBuilder.loadTexts: flashSaveEntry.setStatus('current')
flashSaveInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3503, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: flashSaveInstance.setStatus('current')
flashSaveStatusGeneral = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3503, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4))).clone(namedValues=NamedValues(("started", 0), ("succeeded", 1), ("failed", 2), ("errParam", 4))).clone('started')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: flashSaveStatusGeneral.setStatus('current')
flashSaveStatusSpecific = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 3503, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("noError", 0), ("lackOfResources", 2), ("genFail", 3))).clone('noError')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: flashSaveStatusSpecific.setStatus('current')
sessionTerminateTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 3, 230), )
if mibBuilder.loadTexts: sessionTerminateTable.setStatus('current')
sessionTerminateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 3, 230, 1), ).setIndexNames((0, "APTIS-ACTIONS-MIB", "sessionTerminateInstance"))
if mibBuilder.loadTexts: sessionTerminateEntry.setStatus('current')
sessionTerminateInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 230, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sessionTerminateInstance.setStatus('current')
sessionTerminateStatusGeneral = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 230, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4))).clone(namedValues=NamedValues(("started", 0), ("succeeded", 1), ("failed", 2), ("errParam", 4))).clone('started')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sessionTerminateStatusGeneral.setStatus('current')
sessionTerminateStatusSpecific = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 230, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noError", 0), ("badSignature", 1), ("badSession", 2), ("genFail", 3))).clone('noError')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sessionTerminateStatusSpecific.setStatus('current')
sessionTerminateBootEra = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 230, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sessionTerminateBootEra.setStatus('current')
sessionTerminateSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 230, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sessionTerminateSessionID.setStatus('current')
sessionTerminateSignature = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 230, 1, 13), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sessionTerminateSignature.setStatus('current')
slotControlTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 3, 203), )
if mibBuilder.loadTexts: slotControlTable.setStatus('current')
slotControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 3, 203, 1), ).setIndexNames((0, "APTIS-ACTIONS-MIB", "slotControlInstance"))
if mibBuilder.loadTexts: slotControlEntry.setStatus('current')
slotControlInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 203, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slotControlInstance.setStatus('current')
slotControlStatusGeneral = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 203, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4))).clone(namedValues=NamedValues(("started", 0), ("succeeded", 1), ("failed", 2), ("errParam", 4))).clone('started')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slotControlStatusGeneral.setStatus('current')
slotControlStatusSpecific = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 203, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("noCard", 1), ("notAllowed", 2), ("badSlot", 3), ("inUse", 4), ("inappropriate", 5))).clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slotControlStatusSpecific.setStatus('current')
slotControlSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 203, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slotControlSlotIndex.setStatus('current')
slotControlSlotAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 203, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("slotNoChange", 0), ("slotDown", 1), ("slotDownPend", 2), ("slotUp", 3), ("slotReset", 4), ("slotDownTimed", 5), ("slotAbortDry", 6))).clone('slotNoChange')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slotControlSlotAction.setStatus('current')
t1TestTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 3, 2106), )
if mibBuilder.loadTexts: t1TestTable.setStatus('current')
t1TestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 3, 2106, 1), ).setIndexNames((0, "APTIS-ACTIONS-MIB", "t1TestInstance"))
if mibBuilder.loadTexts: t1TestEntry.setStatus('current')
t1TestInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 2106, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t1TestInstance.setStatus('current')
t1TestTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 2106, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ones", 1), ("zeros", 2), ("fives", 3), ("qrss", 4))).clone('ones')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t1TestTestType.setStatus('current')
t1TestSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 2106, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("slot1", 1), ("slot2", 2), ("slot3", 3), ("slot4", 4), ("slot5", 5), ("slot6", 6), ("slot7", 7), ("slot8", 8), ("slot11", 11), ("slot12", 12), ("slot13", 13), ("slot14", 14), ("slot15", 15), ("slot16", 16), ("slot17", 17), ("slot18", 18))).clone('slot1')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t1TestSlotNumber.setStatus('current')
t1TestPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 2106, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56))).clone(namedValues=NamedValues(("ds11", 1), ("ds12", 2), ("ds13", 3), ("ds14", 4), ("ds15", 5), ("ds16", 6), ("ds17", 7), ("ds18", 8), ("ds19", 9), ("ds110", 10), ("ds111", 11), ("ds112", 12), ("ds113", 13), ("ds114", 14), ("ds115", 15), ("ds116", 16), ("ds117", 17), ("ds118", 18), ("ds119", 19), ("ds120", 20), ("ds121", 21), ("ds122", 22), ("ds123", 23), ("ds124", 24), ("ds125", 25), ("ds126", 26), ("ds127", 27), ("ds128", 28), ("ds129", 29), ("ds130", 30), ("ds131", 31), ("ds132", 32), ("ds133", 33), ("ds134", 34), ("ds135", 35), ("ds136", 36), ("ds137", 37), ("ds138", 38), ("ds139", 39), ("ds140", 40), ("ds141", 41), ("ds142", 42), ("ds143", 43), ("ds144", 44), ("ds145", 45), ("ds146", 46), ("ds147", 47), ("ds148", 48), ("ds149", 49), ("ds150", 50), ("ds151", 51), ("ds152", 52), ("ds153", 53), ("ds154", 54), ("ds155", 55), ("ds156", 56))).clone('ds11')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t1TestPortNumber.setStatus('current')
t1TestTestLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 2106, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30000)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t1TestTestLength.setStatus('current')
t1TestErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 2106, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t1TestErrorRate.setStatus('current')
t1TestState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 3, 2106, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("initializing", 1), ("loopingUp", 2), ("sendingData", 3), ("checkingResults", 4), ("loopingDown", 5), ("complete", 6), ("failed", 7), ("cancelled", 8))).clone('initializing')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t1TestState.setStatus('current')
mibBuilder.exportSymbols("APTIS-ACTIONS-MIB", resetInstance=resetInstance, flashSaveTable=flashSaveTable, flashWriteTable=flashWriteTable, slotControlEntry=slotControlEntry, t1TestErrorRate=t1TestErrorRate, t1TestInstance=t1TestInstance, flashReadStatusGeneral=flashReadStatusGeneral, sessionTerminateTable=sessionTerminateTable, flashWriteFileName=flashWriteFileName, flashSaveStatusSpecific=flashSaveStatusSpecific, flashWriteInstance=flashWriteInstance, resetStatusGeneral=resetStatusGeneral, t1TestPortNumber=t1TestPortNumber, slotControlSlotIndex=slotControlSlotIndex, resetEntry=resetEntry, PYSNMP_MODULE_ID=aptisActionsModule, sessionTerminateSessionID=sessionTerminateSessionID, flashWritePathString=flashWritePathString, slotControlInstance=slotControlInstance, flashReadEntry=flashReadEntry, t1TestTestLength=t1TestTestLength, sessionTerminateStatusSpecific=sessionTerminateStatusSpecific, sessionTerminateStatusGeneral=sessionTerminateStatusGeneral, sessionTerminateEntry=sessionTerminateEntry, flashSaveEntry=flashSaveEntry, slotControlSlotAction=slotControlSlotAction, flashSaveInstance=flashSaveInstance, flashWriteVerboseMode=flashWriteVerboseMode, t1TestTestType=t1TestTestType, flashReadFileName=flashReadFileName, t1TestEntry=t1TestEntry, sessionTerminateInstance=sessionTerminateInstance, t1TestState=t1TestState, flashSaveStatusGeneral=flashSaveStatusGeneral, flashWriteStatusGeneral=flashWriteStatusGeneral, t1TestSlotNumber=t1TestSlotNumber, slotControlTable=slotControlTable, flashWriteEntry=flashWriteEntry, sessionTerminateSignature=sessionTerminateSignature, flashWriteStatusSpecific=flashWriteStatusSpecific, resetResetType=resetResetType, flashReadTable=flashReadTable, slotControlStatusSpecific=slotControlStatusSpecific, resetTable=resetTable, flashWriteBytesWritten=flashWriteBytesWritten, flashReadLinesRead=flashReadLinesRead, t1TestTable=t1TestTable, flashReadInstance=flashReadInstance, aptisActionsModule=aptisActionsModule, sessionTerminateBootEra=sessionTerminateBootEra, slotControlStatusGeneral=slotControlStatusGeneral)
