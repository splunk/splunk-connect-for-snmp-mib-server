#
# PySNMP MIB module JUNIPER-RTM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-RTM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:50:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
jnxVoip, = mibBuilder.importSymbols("JUNIPER-JS-SMI", "jnxVoip")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, IpAddress, MibIdentifier, NotificationType, iso, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, ModuleIdentity, Unsigned32, ObjectIdentity, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "IpAddress", "MibIdentifier", "NotificationType", "iso", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "ModuleIdentity", "Unsigned32", "ObjectIdentity", "Integer32", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
jnxRtmMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1))
if mibBuilder.loadTexts: jnxRtmMIB.setLastUpdated('200905041935Z')
if mibBuilder.loadTexts: jnxRtmMIB.setOrganization('Juniper Networks, Inc.')
jnxRtmMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1))
jnxSipTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 1), )
if mibBuilder.loadTexts: jnxSipTemplateTable.setStatus('current')
jnxSipTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 1, 1), ).setIndexNames((0, "JUNIPER-RTM-MIB", "jnxSipTemplateName"))
if mibBuilder.loadTexts: jnxSipTemplateEntry.setStatus('current')
jnxSipTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 1, 1, 1), DisplayString())
if mibBuilder.loadTexts: jnxSipTemplateName.setStatus('current')
jnxDtmfMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rfc-2833", 1), ("sip-info", 2), ("inband", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxDtmfMethod.setStatus('current')
jnxCallerIdTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCallerIdTransmit.setStatus('current')
jnxInheritExtensionsFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxInheritExtensionsFrom.setStatus('current')
jnxInheritExtensionsTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxInheritExtensionsTo.setStatus('current')
jnxClassOfRestriction = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxClassOfRestriction.setStatus('current')
jnxCodecG711MU = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCodecG711MU.setStatus('current')
jnxCodecG711A = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCodecG711A.setStatus('current')
jnxCodecG729AB = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCodecG729AB.setStatus('current')
jnxAnalogTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 2), )
if mibBuilder.loadTexts: jnxAnalogTemplateTable.setStatus('current')
jnxAnalogTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 2, 1), ).setIndexNames((0, "JUNIPER-RTM-MIB", "jnxAnalogTemplateName"))
if mibBuilder.loadTexts: jnxAnalogTemplateEntry.setStatus('current')
jnxAnalogTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 2, 1, 1), DisplayString())
if mibBuilder.loadTexts: jnxAnalogTemplateName.setStatus('current')
jnxAanalogCallerIdTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxAanalogCallerIdTransmit.setStatus('current')
jnxAnalogVoiceActivityDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxAnalogVoiceActivityDetection.setStatus('current')
jnxAnalogComfortNoiseGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxAnalogComfortNoiseGeneration.setStatus('current')
jnxAnalogClassOfRestriction = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxAnalogClassOfRestriction.setStatus('current')
jnxPeerCallServerTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 7), )
if mibBuilder.loadTexts: jnxPeerCallServerTable.setStatus('current')
jnxPeerCallServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 7, 1), ).setIndexNames((0, "JUNIPER-RTM-MIB", "jnxPeerCallServerName"))
if mibBuilder.loadTexts: jnxPeerCallServerEntry.setStatus('current')
jnxPeerCallServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 7, 1, 1), DisplayString())
if mibBuilder.loadTexts: jnxPeerCallServerName.setStatus('current')
jnxPeerCallServerDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPeerCallServerDescription.setStatus('current')
jnxPeerCallServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 7, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPeerCallServerAddress.setStatus('current')
jnxPeerCallServerSipProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5060)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPeerCallServerSipProtocolPort.setStatus('current')
jnxPeerCallServerSipProtocolTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("tls", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPeerCallServerSipProtocolTransport.setStatus('current')
jnxPeerCallServerCodecG711MU = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPeerCallServerCodecG711MU.setStatus('current')
jnxPeerCallServerCodecG711A = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPeerCallServerCodecG711A.setStatus('current')
jnxPeerCallServerCodecG729AB = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPeerCallServerCodecG729AB.setStatus('current')
jnxPeerCallServerDtmfMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rfc-2833", 1), ("sip-info", 2), ("inband", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPeerCallServerDtmfMethod.setStatus('current')
jnxPeerCallServerPstnAccessNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 7, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPeerCallServerPstnAccessNumber.setStatus('current')
jnxPeerCallServerAuthId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 7, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPeerCallServerAuthId.setStatus('current')
jnxSurvivableCallServiceTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 4), )
if mibBuilder.loadTexts: jnxSurvivableCallServiceTable.setStatus('current')
jnxSurvivableCallServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 4, 1), ).setIndexNames((0, "JUNIPER-RTM-MIB", "jnxSurvivableCallServiceName"))
if mibBuilder.loadTexts: jnxSurvivableCallServiceEntry.setStatus('current')
jnxSurvivableCallServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 4, 1, 1), DisplayString())
if mibBuilder.loadTexts: jnxSurvivableCallServiceName.setStatus('current')
jnxSurvivableCallServicePeerCallServer = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableCallServicePeerCallServer.setStatus('current')
jnxSurvivableCallServiceSipProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5060)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableCallServiceSipProtocolPort.setStatus('current')
jnxSurvivableCallServiceSipProtocolTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("tls", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableCallServiceSipProtocolTransport.setStatus('current')
jnxSurvivableCallServiceHeartbeatNormalInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 8)).clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableCallServiceHeartbeatNormalInterval.setStatus('current')
jnxSurvivableCallServiceRegistrationExpiryTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableCallServiceRegistrationExpiryTimeout.setStatus('current')
jnxSurvivableCallServiceSipTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableCallServiceSipTimeout.setStatus('current')
jnxSurvivableCallServiceMonitorTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 20)).clone(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableCallServiceMonitorTimeout.setStatus('current')
jnxSurvivableCallServiceHeartbeatSurvivableInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000)).clone(500)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableCallServiceHeartbeatSurvivableInterval.setStatus('current')
jnxSurvivableCallServiceResponseThresholdMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableCallServiceResponseThresholdMinimum.setStatus('current')
jnxSurvivableCallServiceServicePointZone = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 4, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableCallServiceServicePointZone.setStatus('current')
jnxSurvivableCallServiceDialPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 4, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableCallServiceDialPlan.setStatus('current')
jnxTrunkConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 5), )
if mibBuilder.loadTexts: jnxTrunkConfigTable.setStatus('current')
jnxTrunkConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 5, 1), ).setIndexNames((0, "JUNIPER-RTM-MIB", "jnxTrunkConfigName"))
if mibBuilder.loadTexts: jnxTrunkConfigEntry.setStatus('current')
jnxTrunkConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 5, 1, 1), DisplayString())
if mibBuilder.loadTexts: jnxTrunkConfigName.setStatus('current')
jnxTrunkConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("fxs", 1), ("fxo", 2), ("t1", 3), ("e1", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxTrunkConfigType.setStatus('current')
jnxTrunkConfigTdmInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 5, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxTrunkConfigTdmInterface.setStatus('current')
jnxTrunkConfigT1CasGroupTimeSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 5, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxTrunkConfigT1CasGroupTimeSlots.setStatus('current')
jnxTrunkConfigT1CasGroupSignaling = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("fxo-loop-start", 1), ("fxo-ground-start", 2), ("fxs-loop-start", 3), ("fxs-ground-start", 4), ("em-wink-start", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxTrunkConfigT1CasGroupSignaling.setStatus('current')
jnxDigitManipulationTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 6), )
if mibBuilder.loadTexts: jnxDigitManipulationTable.setStatus('current')
jnxDigitManipulationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 6, 1), ).setIndexNames((0, "JUNIPER-RTM-MIB", "jnxDigitTransformName"))
if mibBuilder.loadTexts: jnxDigitManipulationEntry.setStatus('current')
jnxDigitTransformName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 6, 1, 1), DisplayString())
if mibBuilder.loadTexts: jnxDigitTransformName.setStatus('current')
jnxDigitTransformRegularExpression = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxDigitTransformRegularExpression.setStatus('current')
jnxFeatures = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 8))
jnxFeaturesLiveAttendantExtension = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 8, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFeaturesLiveAttendantExtension.setStatus('current')
jnxFeaturesLiveAttendantStartTime = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 8, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFeaturesLiveAttendantStartTime.setStatus('current')
jnxFeaturesLiveAttendantEndTime = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 8, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFeaturesLiveAttendantEndTime.setStatus('current')
jnxFeaturesAttendantRingCount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFeaturesAttendantRingCount.setStatus('current')
jnxFeaturesVoicemailExtension = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 8, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFeaturesVoicemailExtension.setStatus('current')
jnxFeaturesVoicemailRemoteAccessNumber = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 8, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFeaturesVoicemailRemoteAccessNumber.setStatus('current')
jnxStationTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 3), )
if mibBuilder.loadTexts: jnxStationTable.setStatus('current')
jnxStationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 3, 1), ).setIndexNames((0, "JUNIPER-RTM-MIB", "jnxStationName"))
if mibBuilder.loadTexts: jnxStationEntry.setStatus('current')
jnxStationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 3, 1, 1), DisplayString())
if mibBuilder.loadTexts: jnxStationName.setStatus('current')
jnxStationExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxStationExtension.setStatus('current')
jnxStationRestriction = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxStationRestriction.setStatus('current')
jnxStationCallerId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxStationCallerId.setStatus('current')
jnxStationDID = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxStationDID.setStatus('current')
jnxStationDILTdmInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxStationDILTdmInterface.setStatus('current')
jnxStationDILTimeSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxStationDILTimeSlotNumber.setStatus('current')
jnxStationAuthId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 3, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxStationAuthId.setStatus('current')
jnxStationType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sip", 1), ("analog", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxStationType.setStatus('current')
jnxStationTemplate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 3, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxStationTemplate.setStatus('current')
jnxStationTdmInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 3, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxStationTdmInterface.setStatus('current')
jnxStationTimeSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxStationTimeSlotNumber.setStatus('current')
jnxDialPlanTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 9), )
if mibBuilder.loadTexts: jnxDialPlanTable.setStatus('current')
jnxDialPlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 9, 1), ).setIndexNames((0, "JUNIPER-RTM-MIB", "jnxDialPlanName"), (0, "JUNIPER-RTM-MIB", "jnxDialPlanDigitPattern"))
if mibBuilder.loadTexts: jnxDialPlanEntry.setStatus('current')
jnxDialPlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 9, 1, 1), DisplayString())
if mibBuilder.loadTexts: jnxDialPlanName.setStatus('current')
jnxDialPlanDigitPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 9, 1, 2), DisplayString())
if mibBuilder.loadTexts: jnxDialPlanDigitPattern.setStatus('current')
jnxDialPlanCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 9, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxDialPlanCallType.setStatus('current')
jnxDialPlanTrunkGroupList = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 9, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxDialPlanTrunkGroupList.setStatus('current')
jnxClassOfRestrictionTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 11), )
if mibBuilder.loadTexts: jnxClassOfRestrictionTable.setStatus('current')
jnxClassOfRestrictionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 11, 1), ).setIndexNames((0, "JUNIPER-RTM-MIB", "jnxClassOfRestrictionName"), (0, "JUNIPER-RTM-MIB", "jnxRestrictionPolicyName"))
if mibBuilder.loadTexts: jnxClassOfRestrictionEntry.setStatus('current')
jnxClassOfRestrictionName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 11, 1, 1), DisplayString())
if mibBuilder.loadTexts: jnxClassOfRestrictionName.setStatus('current')
jnxRestrictionPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 11, 1, 2), DisplayString())
if mibBuilder.loadTexts: jnxRestrictionPolicyName.setStatus('current')
jnxRestrictionCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 11, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxRestrictionCallType.setStatus('current')
jnxRestrictionCallPermission = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxRestrictionCallPermission.setStatus('current')
jnxMediaGatewayTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 12), )
if mibBuilder.loadTexts: jnxMediaGatewayTable.setStatus('current')
jnxMediaGatewayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 12, 1), ).setIndexNames((0, "JUNIPER-RTM-MIB", "jnxMediaGatewayName"))
if mibBuilder.loadTexts: jnxMediaGatewayEntry.setStatus('current')
jnxMediaGatewayName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 12, 1, 1), DisplayString())
if mibBuilder.loadTexts: jnxMediaGatewayName.setStatus('current')
jnxMediaGatewayPeerCallServer = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 12, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMediaGatewayPeerCallServer.setStatus('current')
jnxMediaGatewaySipProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5060)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMediaGatewaySipProtocolPort.setStatus('current')
jnxMediaGatewaySipProtocolTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("tls", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMediaGatewaySipProtocolTransport.setStatus('current')
jnxMediaGatewayDialPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 12, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMediaGatewayDialPlan.setStatus('current')
jnxTrunkGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 13), )
if mibBuilder.loadTexts: jnxTrunkGroupTable.setStatus('current')
jnxTrunkGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 13, 1), ).setIndexNames((0, "JUNIPER-RTM-MIB", "jnxTrunkGroupName"))
if mibBuilder.loadTexts: jnxTrunkGroupEntry.setStatus('current')
jnxTrunkGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 13, 1, 1), DisplayString())
if mibBuilder.loadTexts: jnxTrunkGroupName.setStatus('current')
jnxTrunkGroupDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 13, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxTrunkGroupDescription.setStatus('current')
jnxTrunkGroupTrunkList = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 13, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxTrunkGroupTrunkList.setStatus('current')
jnxSurvivableStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 14), )
if mibBuilder.loadTexts: jnxSurvivableStatsTable.setStatus('current')
jnxSurvivableStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 14, 1), ).setIndexNames((0, "JUNIPER-RTM-MIB", "jnxSurvivableStatsAddress"), (0, "JUNIPER-RTM-MIB", "jnxSurvivableStatsPort"), (0, "JUNIPER-RTM-MIB", "jnxSurvivableStatsTransport"))
if mibBuilder.loadTexts: jnxSurvivableStatsEntry.setStatus('current')
jnxSurvivableStatsAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 14, 1, 1), IpAddress())
if mibBuilder.loadTexts: jnxSurvivableStatsAddress.setStatus('current')
jnxSurvivableStatsPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 14, 1, 2), Unsigned32())
if mibBuilder.loadTexts: jnxSurvivableStatsPort.setStatus('current')
jnxSurvivableStatsTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2))))
if mibBuilder.loadTexts: jnxSurvivableStatsTransport.setStatus('current')
jnxSurvivableStatsSCSName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 14, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableStatsSCSName.setStatus('current')
jnxSurvivableStatsPeerCallServer = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 14, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableStatsPeerCallServer.setStatus('current')
jnxSurvivableStatsCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 14, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("survivable", 2), ("monitor", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableStatsCurrentState.setStatus('current')
jnxSurvivableStatsPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 14, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableStatsPriority.setStatus('current')
jnxSurvivableStatsLastDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 14, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableStatsLastDownTime.setStatus('current')
jnxSurvivableStatsLastDownLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 14, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableStatsLastDownLen.setStatus('current')
jnxSurvivableStatsTotalDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 14, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableStatsTotalDownTime.setStatus('current')
jnxSurvivableStatsTimesDown = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 14, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableStatsTimesDown.setStatus('current')
jnxSurvivableStatsMinResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 14, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableStatsMinResponse.setStatus('current')
jnxSurvivableStatsMaxResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 14, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableStatsMaxResponse.setStatus('current')
jnxSurvivableStatsAvgResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 15, 1, 1, 14, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSurvivableStatsAvgResponse.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-RTM-MIB", jnxStationName=jnxStationName, jnxDialPlanEntry=jnxDialPlanEntry, jnxSurvivableStatsPriority=jnxSurvivableStatsPriority, jnxPeerCallServerEntry=jnxPeerCallServerEntry, jnxStationCallerId=jnxStationCallerId, jnxRestrictionCallType=jnxRestrictionCallType, jnxSurvivableStatsMinResponse=jnxSurvivableStatsMinResponse, jnxDialPlanCallType=jnxDialPlanCallType, jnxSurvivableStatsCurrentState=jnxSurvivableStatsCurrentState, jnxTrunkConfigT1CasGroupTimeSlots=jnxTrunkConfigT1CasGroupTimeSlots, jnxPeerCallServerDtmfMethod=jnxPeerCallServerDtmfMethod, jnxTrunkConfigTdmInterface=jnxTrunkConfigTdmInterface, jnxSurvivableCallServiceRegistrationExpiryTimeout=jnxSurvivableCallServiceRegistrationExpiryTimeout, jnxSurvivableStatsPort=jnxSurvivableStatsPort, jnxTrunkConfigName=jnxTrunkConfigName, jnxDialPlanDigitPattern=jnxDialPlanDigitPattern, jnxPeerCallServerDescription=jnxPeerCallServerDescription, jnxSurvivableStatsAddress=jnxSurvivableStatsAddress, jnxSurvivableCallServiceTable=jnxSurvivableCallServiceTable, jnxRtmMIB=jnxRtmMIB, jnxDigitTransformRegularExpression=jnxDigitTransformRegularExpression, jnxMediaGatewayEntry=jnxMediaGatewayEntry, jnxTrunkGroupDescription=jnxTrunkGroupDescription, jnxAnalogVoiceActivityDetection=jnxAnalogVoiceActivityDetection, jnxAnalogComfortNoiseGeneration=jnxAnalogComfortNoiseGeneration, jnxSurvivableStatsSCSName=jnxSurvivableStatsSCSName, jnxFeatures=jnxFeatures, jnxMediaGatewayName=jnxMediaGatewayName, jnxStationTable=jnxStationTable, jnxSurvivableStatsMaxResponse=jnxSurvivableStatsMaxResponse, jnxMediaGatewaySipProtocolTransport=jnxMediaGatewaySipProtocolTransport, jnxPeerCallServerAuthId=jnxPeerCallServerAuthId, jnxSipTemplateEntry=jnxSipTemplateEntry, jnxSurvivableStatsLastDownTime=jnxSurvivableStatsLastDownTime, jnxFeaturesLiveAttendantEndTime=jnxFeaturesLiveAttendantEndTime, jnxRestrictionPolicyName=jnxRestrictionPolicyName, jnxPeerCallServerTable=jnxPeerCallServerTable, jnxSurvivableStatsTransport=jnxSurvivableStatsTransport, jnxMediaGatewaySipProtocolPort=jnxMediaGatewaySipProtocolPort, jnxTrunkConfigType=jnxTrunkConfigType, jnxFeaturesLiveAttendantExtension=jnxFeaturesLiveAttendantExtension, jnxSurvivableCallServiceServicePointZone=jnxSurvivableCallServiceServicePointZone, jnxDtmfMethod=jnxDtmfMethod, jnxCodecG729AB=jnxCodecG729AB, jnxSipTemplateTable=jnxSipTemplateTable, jnxCodecG711A=jnxCodecG711A, jnxDialPlanTrunkGroupList=jnxDialPlanTrunkGroupList, jnxPeerCallServerName=jnxPeerCallServerName, jnxPeerCallServerPstnAccessNumber=jnxPeerCallServerPstnAccessNumber, jnxDigitTransformName=jnxDigitTransformName, jnxClassOfRestrictionTable=jnxClassOfRestrictionTable, jnxSurvivableStatsTimesDown=jnxSurvivableStatsTimesDown, jnxMediaGatewayPeerCallServer=jnxMediaGatewayPeerCallServer, jnxInheritExtensionsFrom=jnxInheritExtensionsFrom, PYSNMP_MODULE_ID=jnxRtmMIB, jnxPeerCallServerCodecG729AB=jnxPeerCallServerCodecG729AB, jnxMediaGatewayDialPlan=jnxMediaGatewayDialPlan, jnxClassOfRestrictionEntry=jnxClassOfRestrictionEntry, jnxTrunkGroupName=jnxTrunkGroupName, jnxInheritExtensionsTo=jnxInheritExtensionsTo, jnxSurvivableStatsEntry=jnxSurvivableStatsEntry, jnxSurvivableCallServiceSipTimeout=jnxSurvivableCallServiceSipTimeout, jnxSurvivableStatsTotalDownTime=jnxSurvivableStatsTotalDownTime, jnxAnalogTemplateName=jnxAnalogTemplateName, jnxSurvivableCallServiceSipProtocolPort=jnxSurvivableCallServiceSipProtocolPort, jnxRtmMIBObjects=jnxRtmMIBObjects, jnxSurvivableCallServicePeerCallServer=jnxSurvivableCallServicePeerCallServer, jnxStationDILTdmInterface=jnxStationDILTdmInterface, jnxSurvivableStatsAvgResponse=jnxSurvivableStatsAvgResponse, jnxDigitManipulationTable=jnxDigitManipulationTable, jnxPeerCallServerAddress=jnxPeerCallServerAddress, jnxAnalogClassOfRestriction=jnxAnalogClassOfRestriction, jnxFeaturesVoicemailRemoteAccessNumber=jnxFeaturesVoicemailRemoteAccessNumber, jnxTrunkConfigT1CasGroupSignaling=jnxTrunkConfigT1CasGroupSignaling, jnxDialPlanName=jnxDialPlanName, jnxPeerCallServerSipProtocolTransport=jnxPeerCallServerSipProtocolTransport, jnxStationAuthId=jnxStationAuthId, jnxSurvivableCallServiceSipProtocolTransport=jnxSurvivableCallServiceSipProtocolTransport, jnxPeerCallServerCodecG711MU=jnxPeerCallServerCodecG711MU, jnxTrunkGroupTable=jnxTrunkGroupTable, jnxCallerIdTransmit=jnxCallerIdTransmit, jnxStationDILTimeSlotNumber=jnxStationDILTimeSlotNumber, jnxStationRestriction=jnxStationRestriction, jnxFeaturesLiveAttendantStartTime=jnxFeaturesLiveAttendantStartTime, jnxStationTemplate=jnxStationTemplate, jnxDialPlanTable=jnxDialPlanTable, jnxSurvivableCallServiceHeartbeatSurvivableInterval=jnxSurvivableCallServiceHeartbeatSurvivableInterval, jnxSurvivableCallServiceEntry=jnxSurvivableCallServiceEntry, jnxSurvivableCallServiceMonitorTimeout=jnxSurvivableCallServiceMonitorTimeout, jnxFeaturesAttendantRingCount=jnxFeaturesAttendantRingCount, jnxSurvivableStatsTable=jnxSurvivableStatsTable, jnxSurvivableCallServiceName=jnxSurvivableCallServiceName, jnxRestrictionCallPermission=jnxRestrictionCallPermission, jnxSipTemplateName=jnxSipTemplateName, jnxTrunkGroupTrunkList=jnxTrunkGroupTrunkList, jnxSurvivableStatsPeerCallServer=jnxSurvivableStatsPeerCallServer, jnxTrunkGroupEntry=jnxTrunkGroupEntry, jnxAnalogTemplateEntry=jnxAnalogTemplateEntry, jnxStationEntry=jnxStationEntry, jnxMediaGatewayTable=jnxMediaGatewayTable, jnxSurvivableStatsLastDownLen=jnxSurvivableStatsLastDownLen, jnxAnalogTemplateTable=jnxAnalogTemplateTable, jnxStationTdmInterface=jnxStationTdmInterface, jnxClassOfRestrictionName=jnxClassOfRestrictionName, jnxSurvivableCallServiceHeartbeatNormalInterval=jnxSurvivableCallServiceHeartbeatNormalInterval, jnxSurvivableCallServiceDialPlan=jnxSurvivableCallServiceDialPlan, jnxSurvivableCallServiceResponseThresholdMinimum=jnxSurvivableCallServiceResponseThresholdMinimum, jnxPeerCallServerCodecG711A=jnxPeerCallServerCodecG711A, jnxAanalogCallerIdTransmit=jnxAanalogCallerIdTransmit, jnxTrunkConfigEntry=jnxTrunkConfigEntry, jnxStationType=jnxStationType, jnxPeerCallServerSipProtocolPort=jnxPeerCallServerSipProtocolPort, jnxFeaturesVoicemailExtension=jnxFeaturesVoicemailExtension, jnxCodecG711MU=jnxCodecG711MU, jnxClassOfRestriction=jnxClassOfRestriction, jnxDigitManipulationEntry=jnxDigitManipulationEntry, jnxStationTimeSlotNumber=jnxStationTimeSlotNumber, jnxStationExtension=jnxStationExtension, jnxStationDID=jnxStationDID, jnxTrunkConfigTable=jnxTrunkConfigTable)
