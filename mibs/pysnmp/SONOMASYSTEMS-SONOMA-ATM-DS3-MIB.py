#
# PySNMP MIB module SONOMASYSTEMS-SONOMA-ATM-DS3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONOMASYSTEMS-SONOMA-ATM-DS3-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:01:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Bits, iso, ModuleIdentity, IpAddress, Counter32, Gauge32, MibIdentifier, NotificationType, Counter64, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Bits", "iso", "ModuleIdentity", "IpAddress", "Counter32", "Gauge32", "MibIdentifier", "NotificationType", "Counter64", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sonomaATM, = mibBuilder.importSymbols("SONOMASYSTEMS-SONOMA-MIB", "sonomaATM")
sonomaDS3ATMAdapterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2))
atmDs3ConfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 1))
atmDs3StatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2))
atmDs3ConfPhyTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 1, 1), )
if mibBuilder.loadTexts: atmDs3ConfPhyTable.setStatus('mandatory')
atmDs3ConfPhyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 1, 1, 1), ).setIndexNames((0, "SONOMASYSTEMS-SONOMA-ATM-DS3-MIB", "atmDs3ConfPhysIndex"))
if mibBuilder.loadTexts: atmDs3ConfPhyEntry.setStatus('mandatory')
atmDs3ConfPhysIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3ConfPhysIndex.setStatus('mandatory')
atmDs3ConfFraming = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("framingDS3", 1), ("framingE3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3ConfFraming.setStatus('mandatory')
atmDs3ConfInsGFCBits = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmDs3ConfInsGFCBits.setStatus('mandatory')
atmDs3ConfSerBipolarIO = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmDs3ConfSerBipolarIO.setStatus('mandatory')
atmDs3ConfScramblePld = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmDs3ConfScramblePld.setStatus('mandatory')
atmDs3ConfOverheadPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmDs3ConfOverheadPLCP.setStatus('mandatory')
atmDs3ConfGenerateFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmDs3ConfGenerateFEBE.setStatus('mandatory')
atmDs3ConfGenerateFEAC = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmDs3ConfGenerateFEAC.setStatus('mandatory')
atmDs3ConfLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("internal", 2), ("external", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmDs3ConfLoopback.setStatus('mandatory')
atmDs3ConfCableLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notGreaterThan225Feet", 1), ("greaterThan225Feet", 2))).clone('notGreaterThan225Feet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmDs3ConfCableLength.setStatus('mandatory')
atmDs3ConfInternalEqualizer = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("use", 1), ("bypass", 2))).clone('use')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmDs3ConfInternalEqualizer.setStatus('mandatory')
atmDs3ConfFillerCells = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unassigned", 1), ("idle", 2))).clone('unassigned')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmDs3ConfFillerCells.setStatus('mandatory')
atmDs3ConfGenerateClock = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmDs3ConfGenerateClock.setStatus('mandatory')
atmDs3PhyStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1), )
if mibBuilder.loadTexts: atmDs3PhyStatsTable.setStatus('mandatory')
atmDs3PhyStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1), ).setIndexNames((0, "SONOMASYSTEMS-SONOMA-ATM-DS3-MIB", "atmDs3PhyStatsPhysIndex"))
if mibBuilder.loadTexts: atmDs3PhyStatsEntry.setStatus('mandatory')
atmDs3PhyStatsPhysIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3PhyStatsPhysIndex.setStatus('mandatory')
atmDs3StatsAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsAlarms.setStatus('mandatory')
atmDs3StatsNoSignals = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsNoSignals.setStatus('mandatory')
atmDs3StatsNoDs3Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsNoDs3Frames.setStatus('mandatory')
atmDs3StatsAisDetects = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsAisDetects.setStatus('mandatory')
atmDs3StatsFrameErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsFrameErrs.setStatus('mandatory')
atmDs3StatsParityErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsParityErrs.setStatus('mandatory')
atmDs3StatsCpErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsCpErrs.setStatus('mandatory')
atmDs3StatsFeBlockErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsFeBlockErrs.setStatus('mandatory')
atmDs3StatsBpvErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsBpvErrs.setStatus('mandatory')
atmDs3StatsRemoteAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsRemoteAlarms.setStatus('mandatory')
atmDs3StatsSignalLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsSignalLoss.setStatus('mandatory')
atmDs3StatsOutOfCell = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsOutOfCell.setStatus('mandatory')
atmDs3StatsFifoOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsFifoOverflow.setStatus('mandatory')
atmDs3StatsRemoteAlarmInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsRemoteAlarmInd.setStatus('mandatory')
atmDs3StatsFrameLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsFrameLoss.setStatus('mandatory')
atmDs3StatsSyncLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsSyncLoss.setStatus('mandatory')
atmDs3StatsPlcpAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsPlcpAlarmState.setStatus('mandatory')
atmDs3StatsAisState = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmDs3StatsAisState.setStatus('mandatory')
atmDs3StatsClearCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 2, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmDs3StatsClearCounters.setStatus('mandatory')
mibBuilder.exportSymbols("SONOMASYSTEMS-SONOMA-ATM-DS3-MIB", atmDs3ConfFraming=atmDs3ConfFraming, atmDs3ConfSerBipolarIO=atmDs3ConfSerBipolarIO, atmDs3StatsSignalLoss=atmDs3StatsSignalLoss, atmDs3StatsFifoOverflow=atmDs3StatsFifoOverflow, atmDs3ConfLoopback=atmDs3ConfLoopback, atmDs3StatsNoDs3Frames=atmDs3StatsNoDs3Frames, atmDs3StatsParityErrs=atmDs3StatsParityErrs, atmDs3PhyStatsTable=atmDs3PhyStatsTable, atmDs3ConfPhyTable=atmDs3ConfPhyTable, atmDs3StatsCpErrs=atmDs3StatsCpErrs, atmDs3ConfGenerateClock=atmDs3ConfGenerateClock, atmDs3StatsRemoteAlarmInd=atmDs3StatsRemoteAlarmInd, atmDs3StatsGroup=atmDs3StatsGroup, atmDs3ConfGroup=atmDs3ConfGroup, atmDs3ConfInternalEqualizer=atmDs3ConfInternalEqualizer, sonomaDS3ATMAdapterGroup=sonomaDS3ATMAdapterGroup, atmDs3StatsAlarms=atmDs3StatsAlarms, atmDs3StatsRemoteAlarms=atmDs3StatsRemoteAlarms, atmDs3StatsFrameErrs=atmDs3StatsFrameErrs, atmDs3StatsFeBlockErrs=atmDs3StatsFeBlockErrs, atmDs3StatsSyncLoss=atmDs3StatsSyncLoss, atmDs3ConfFillerCells=atmDs3ConfFillerCells, atmDs3StatsAisDetects=atmDs3StatsAisDetects, atmDs3ConfScramblePld=atmDs3ConfScramblePld, atmDs3PhyStatsEntry=atmDs3PhyStatsEntry, atmDs3ConfPhysIndex=atmDs3ConfPhysIndex, atmDs3ConfGenerateFEBE=atmDs3ConfGenerateFEBE, atmDs3StatsNoSignals=atmDs3StatsNoSignals, atmDs3StatsBpvErrs=atmDs3StatsBpvErrs, atmDs3ConfGenerateFEAC=atmDs3ConfGenerateFEAC, atmDs3PhyStatsPhysIndex=atmDs3PhyStatsPhysIndex, atmDs3ConfPhyEntry=atmDs3ConfPhyEntry, atmDs3StatsClearCounters=atmDs3StatsClearCounters, atmDs3StatsOutOfCell=atmDs3StatsOutOfCell, atmDs3StatsFrameLoss=atmDs3StatsFrameLoss, atmDs3ConfCableLength=atmDs3ConfCableLength, atmDs3ConfInsGFCBits=atmDs3ConfInsGFCBits, atmDs3StatsAisState=atmDs3StatsAisState, atmDs3ConfOverheadPLCP=atmDs3ConfOverheadPLCP, atmDs3StatsPlcpAlarmState=atmDs3StatsPlcpAlarmState)
