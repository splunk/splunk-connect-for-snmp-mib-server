#
# PySNMP MIB module Dell-rldot1q-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Dell-rldot1q-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:43:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
rlpBridgeMIBObjects, = mibBuilder.importSymbols("Dell-BRIDGEMIBOBJECTS-MIB", "rlpBridgeMIBObjects")
rnd, = mibBuilder.importSymbols("Dell-MIB", "rnd")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
PortList, dot1qTpFdbEntry, dot1qStaticUnicastEntry = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList", "dot1qTpFdbEntry", "dot1qStaticUnicastEntry")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, IpAddress, TimeTicks, MibIdentifier, NotificationType, ObjectIdentity, Bits, ModuleIdentity, iso, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "IpAddress", "TimeTicks", "MibIdentifier", "NotificationType", "ObjectIdentity", "Bits", "ModuleIdentity", "iso", "Integer32", "Gauge32")
TextualConvention, TruthValue, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowStatus", "DisplayString")
rlq_bridge_mib = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 57, 8)).setLabel("rlq-bridge-mib")
rlq_bridge_mib.setRevisions(('2008-11-25 00:00',))
if mibBuilder.loadTexts: rlq_bridge_mib.setLastUpdated('200811250000Z')
if mibBuilder.loadTexts: rlq_bridge_mib.setOrganization('Dell')
rldot1q = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 57, 8))
rldot1qStaticUnicastTable = MibTable((1, 3, 6, 1, 4, 1, 89, 57, 8, 1), )
if mibBuilder.loadTexts: rldot1qStaticUnicastTable.setStatus('current')
rldot1qStaticUnicastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 57, 8, 1, 1), )
dot1qStaticUnicastEntry.registerAugmentions(("Dell-rldot1q-MIB", "rldot1qStaticUnicastEntry"))
rldot1qStaticUnicastEntry.setIndexNames(*dot1qStaticUnicastEntry.getIndexNames())
if mibBuilder.loadTexts: rldot1qStaticUnicastEntry.setStatus('current')
rldot1qStaticUnicastAddressOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 57, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("learned", 2))).clone('static')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rldot1qStaticUnicastAddressOwner.setStatus('current')
rldot1qTpFdbTable = MibTable((1, 3, 6, 1, 4, 1, 89, 57, 8, 2), )
if mibBuilder.loadTexts: rldot1qTpFdbTable.setStatus('current')
rldot1qTpFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 57, 8, 2, 1), )
dot1qTpFdbEntry.registerAugmentions(("Dell-rldot1q-MIB", "rldot1qTpFdbEntry"))
rldot1qTpFdbEntry.setIndexNames(*dot1qTpFdbEntry.getIndexNames())
if mibBuilder.loadTexts: rldot1qTpFdbEntry.setStatus('current')
rldot1qTpFdbSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 57, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("dynamic-static", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rldot1qTpFdbSubStatus.setStatus('current')
rldot1qTpFdbCountTable = MibTable((1, 3, 6, 1, 4, 1, 89, 57, 8, 3), )
if mibBuilder.loadTexts: rldot1qTpFdbCountTable.setStatus('current')
rldot1qTpFdbCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 57, 8, 3, 1), ).setIndexNames((0, "Dell-rldot1q-MIB", "rldot1qTpFdbCountVlanTag"), (0, "Dell-rldot1q-MIB", "rldot1qTpFdbCountPort"), (0, "Dell-rldot1q-MIB", "rldot1qTpFdbCountType"))
if mibBuilder.loadTexts: rldot1qTpFdbCountEntry.setStatus('current')
rldot1qTpFdbCountVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 57, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rldot1qTpFdbCountVlanTag.setStatus('current')
rldot1qTpFdbCountPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 57, 8, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rldot1qTpFdbCountPort.setStatus('current')
rldot1qTpFdbCountType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 57, 8, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("learned", 3), ("self", 4), ("mgmt", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rldot1qTpFdbCountType.setStatus('current')
rldot1qTpFdbCountCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 57, 8, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rldot1qTpFdbCountCount.setStatus('current')
mibBuilder.exportSymbols("Dell-rldot1q-MIB", rldot1qTpFdbCountCount=rldot1qTpFdbCountCount, rldot1qTpFdbCountVlanTag=rldot1qTpFdbCountVlanTag, rldot1qStaticUnicastTable=rldot1qStaticUnicastTable, rldot1qStaticUnicastEntry=rldot1qStaticUnicastEntry, rldot1qStaticUnicastAddressOwner=rldot1qStaticUnicastAddressOwner, rldot1qTpFdbSubStatus=rldot1qTpFdbSubStatus, rldot1qTpFdbCountEntry=rldot1qTpFdbCountEntry, rlq_bridge_mib=rlq_bridge_mib, rldot1qTpFdbCountPort=rldot1qTpFdbCountPort, rldot1qTpFdbEntry=rldot1qTpFdbEntry, rldot1qTpFdbCountType=rldot1qTpFdbCountType, rldot1q=rldot1q, rldot1qTpFdbTable=rldot1qTpFdbTable, rldot1qTpFdbCountTable=rldot1qTpFdbCountTable, PYSNMP_MODULE_ID=rlq_bridge_mib)
