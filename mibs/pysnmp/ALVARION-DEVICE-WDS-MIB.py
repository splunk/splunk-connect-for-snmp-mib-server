#
# PySNMP MIB module ALVARION-DEVICE-WDS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALVARION-DEVICE-WDS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:06:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
coDevDisIndex, = mibBuilder.importSymbols("ALVARION-DEVICE-MIB", "coDevDisIndex")
alvarionMgmtV2, = mibBuilder.importSymbols("ALVARION-SMI", "alvarionMgmtV2")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Integer32, Bits, Counter32, Gauge32, ModuleIdentity, Unsigned32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, IpAddress, TimeTicks, MibIdentifier, ObjectIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "Counter32", "Gauge32", "ModuleIdentity", "Unsigned32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "IpAddress", "TimeTicks", "MibIdentifier", "ObjectIdentity", "iso")
DisplayString, MacAddress, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TruthValue", "TextualConvention")
alvarionDeviceWdsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34))
if mibBuilder.loadTexts: alvarionDeviceWdsMIB.setLastUpdated('200710310000Z')
if mibBuilder.loadTexts: alvarionDeviceWdsMIB.setOrganization('Alvarion Ltd.')
alvarionDeviceWdsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1))
coDeviceWDSInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 2))
coDeviceWDSRadioGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 3))
coDeviceWDSGroupGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 4))
coDeviceWDSLinkGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5))
coDeviceWDSNetworkScanGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 6))
coDeviceWdsInfoTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 2, 1), )
if mibBuilder.loadTexts: coDeviceWdsInfoTable.setStatus('current')
coDeviceWdsInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 2, 1, 1), ).setIndexNames((0, "ALVARION-DEVICE-MIB", "coDevDisIndex"))
if mibBuilder.loadTexts: coDeviceWdsInfoEntry.setStatus('current')
coDevWDSInfoMaxNumberOfGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSInfoMaxNumberOfGroup.setStatus('current')
coDeviceWDSRadioTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 3, 1), )
if mibBuilder.loadTexts: coDeviceWDSRadioTable.setStatus('current')
coDeviceWDSRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 3, 1, 1), ).setIndexNames((0, "ALVARION-DEVICE-MIB", "coDevDisIndex"), (0, "ALVARION-DEVICE-WDS-MIB", "coDevWDSRadioIndex"))
if mibBuilder.loadTexts: coDeviceWDSRadioEntry.setStatus('current')
coDevWDSRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)))
if mibBuilder.loadTexts: coDevWDSRadioIndex.setStatus('current')
coDevWDSRadioAckDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 3, 1, 1, 2), Unsigned32()).setUnits('km').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSRadioAckDistance.setStatus('current')
coDevWDSRadioQoS = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("disabled", 1), ("vlan", 2), ("veryHigh", 3), ("high", 4), ("normal", 5), ("low", 6), ("diffSrv", 7), ("tos", 8), ("ipQos", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSRadioQoS.setStatus('current')
coDeviceWDSGroupTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 4, 1), )
if mibBuilder.loadTexts: coDeviceWDSGroupTable.setStatus('current')
coDeviceWDSGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 4, 1, 1), ).setIndexNames((0, "ALVARION-DEVICE-MIB", "coDevDisIndex"), (0, "ALVARION-DEVICE-WDS-MIB", "coDevWDSGroupIndex"))
if mibBuilder.loadTexts: coDeviceWDSGroupEntry.setStatus('current')
coDevWDSGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6)))
if mibBuilder.loadTexts: coDevWDSGroupIndex.setStatus('current')
coDevWDSGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 4, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSGroupName.setStatus('current')
coDevWDSGroupState = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("discovery", 1), ("negotiation", 2), ("acquisition", 3), ("locked", 4), ("shutdown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSGroupState.setStatus('current')
coDevWDSGroupSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("wep", 2), ("tkip", 3), ("aes", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSGroupSecurity.setStatus('current')
coDevWDSGroupDynamicMode = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("master", 1), ("slave", 2), ("alternateMaster", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSGroupDynamicMode.setStatus('current')
coDevWDSGroupDynamicGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 4, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSGroupDynamicGroupId.setStatus('current')
coDeviceWDSLinkStatusTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 1), )
if mibBuilder.loadTexts: coDeviceWDSLinkStatusTable.setStatus('current')
coDeviceWDSLinkStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 1, 1), ).setIndexNames((0, "ALVARION-DEVICE-MIB", "coDevDisIndex"), (0, "ALVARION-DEVICE-WDS-MIB", "coDevWDSGroupIndex"), (0, "ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStaIndex"))
if mibBuilder.loadTexts: coDeviceWDSLinkStatusEntry.setStatus('current')
coDevWDSLinkStaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 54)))
if mibBuilder.loadTexts: coDevWDSLinkStaIndex.setStatus('current')
coDevWDSLinkStaState = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("down", 1), ("acquiring", 2), ("inactive", 3), ("active", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStaState.setStatus('current')
coDevWDSLinkStaRadio = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStaRadio.setStatus('current')
coDevWDSLinkStaPeerMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 1, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStaPeerMacAddress.setStatus('current')
coDevWDSLinkStaMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStaMaster.setStatus('current')
coDevWDSLinkStaAuthorized = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStaAuthorized.setStatus('current')
coDevWDSLinkStaEncryption = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("wep", 2), ("tkip", 3), ("aes", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStaEncryption.setStatus('current')
coDevWDSLinkStaIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 1, 1, 8), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStaIdleTime.setStatus('current')
coDevWDSLinkStaSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 92))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStaSNR.setStatus('current')
coDevWDSLinkStaTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 1, 1, 10), Unsigned32()).setUnits('500Kb/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStaTxRate.setStatus('current')
coDevWDSLinkStaRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 1, 1, 11), Unsigned32()).setUnits('500Kb/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStaRxRate.setStatus('current')
coDevWDSLinkStaIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStaIfIndex.setStatus('current')
coDeviceWDSLinkStatsRatesTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2), )
if mibBuilder.loadTexts: coDeviceWDSLinkStatsRatesTable.setStatus('current')
coDeviceWDSLinkStatsRatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1), )
coDeviceWDSLinkStatusEntry.registerAugmentions(("ALVARION-DEVICE-WDS-MIB", "coDeviceWDSLinkStatsRatesEntry"))
coDeviceWDSLinkStatsRatesEntry.setIndexNames(*coDeviceWDSLinkStatusEntry.getIndexNames())
if mibBuilder.loadTexts: coDeviceWDSLinkStatsRatesEntry.setStatus('current')
coDevWDSLinkStsPktsTxRate1 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsTxRate1.setStatus('current')
coDevWDSLinkStsPktsTxRate2 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsTxRate2.setStatus('current')
coDevWDSLinkStsPktsTxRate5dot5 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsTxRate5dot5.setStatus('current')
coDevWDSLinkStsPktsTxRate11 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsTxRate11.setStatus('current')
coDevWDSLinkStsPktsTxRate6 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsTxRate6.setStatus('current')
coDevWDSLinkStsPktsTxRate9 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsTxRate9.setStatus('current')
coDevWDSLinkStsPktsTxRate12 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsTxRate12.setStatus('current')
coDevWDSLinkStsPktsTxRate18 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsTxRate18.setStatus('current')
coDevWDSLinkStsPktsTxRate24 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsTxRate24.setStatus('current')
coDevWDSLinkStsPktsTxRate36 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsTxRate36.setStatus('current')
coDevWDSLinkStsPktsTxRate48 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsTxRate48.setStatus('current')
coDevWDSLinkStsPktsTxRate54 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsTxRate54.setStatus('current')
coDevWDSLinkStsPktsRxRate1 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsRxRate1.setStatus('current')
coDevWDSLinkStsPktsRxRate2 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsRxRate2.setStatus('current')
coDevWDSLinkStsPktsRxRate5dot5 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsRxRate5dot5.setStatus('current')
coDevWDSLinkStsPktsRxRate11 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsRxRate11.setStatus('current')
coDevWDSLinkStsPktsRxRate6 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsRxRate6.setStatus('current')
coDevWDSLinkStsPktsRxRate9 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsRxRate9.setStatus('current')
coDevWDSLinkStsPktsRxRate12 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsRxRate12.setStatus('current')
coDevWDSLinkStsPktsRxRate18 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsRxRate18.setStatus('current')
coDevWDSLinkStsPktsRxRate24 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsRxRate24.setStatus('current')
coDevWDSLinkStsPktsRxRate36 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsRxRate36.setStatus('current')
coDevWDSLinkStsPktsRxRate48 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsRxRate48.setStatus('current')
coDevWDSLinkStsPktsRxRate54 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 5, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSLinkStsPktsRxRate54.setStatus('current')
coDeviceWDSNetworkScanTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 6, 1), )
if mibBuilder.loadTexts: coDeviceWDSNetworkScanTable.setStatus('current')
coDeviceWDSNetworkScanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 6, 1, 1), ).setIndexNames((0, "ALVARION-DEVICE-MIB", "coDevDisIndex"), (0, "ALVARION-DEVICE-WDS-MIB", "coDevWDSScanRadioIndex"), (0, "ALVARION-DEVICE-WDS-MIB", "coDevWDSScanPeerIndex"))
if mibBuilder.loadTexts: coDeviceWDSNetworkScanEntry.setStatus('current')
coDevWDSScanRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)))
if mibBuilder.loadTexts: coDevWDSScanRadioIndex.setStatus('current')
coDevWDSScanPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: coDevWDSScanPeerIndex.setStatus('current')
coDevWDSScanGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 6, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSScanGroupId.setStatus('current')
coDevWDSScanPeerMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 6, 1, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSScanPeerMacAddress.setStatus('current')
coDevWDSScanChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 6, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 199))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSScanChannel.setStatus('current')
coDevWDSScanSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 92))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSScanSNR.setStatus('current')
coDevWDSScanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("master", 1), ("slave", 2), ("alternateMaster", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSScanMode.setStatus('current')
coDevWDSScanAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 1, 6, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWDSScanAvailable.setStatus('current')
alvarionDeviceWdsMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 2))
alvarionDeviceWdsMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 2, 0))
alvarionDeviceWdsMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 3))
alvarionDeviceWdsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 3, 1))
alvarionDeviceWdsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 3, 2))
alvarionDeviceWdsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 3, 1, 1)).setObjects(("ALVARION-DEVICE-WDS-MIB", "alvarionDeviceWdsInfoMIBGroup"), ("ALVARION-DEVICE-WDS-MIB", "alvarionDeviceWdsRadioMIBGroup"), ("ALVARION-DEVICE-WDS-MIB", "alvarionDeviceWdsGroupMIBGroup"), ("ALVARION-DEVICE-WDS-MIB", "alvarionDeviceWdsLinkMIBGroup"), ("ALVARION-DEVICE-WDS-MIB", "alvarionDeviceWdsNetworkScanMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceWdsMIBCompliance = alvarionDeviceWdsMIBCompliance.setStatus('current')
alvarionDeviceWdsInfoMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 3, 2, 1)).setObjects(("ALVARION-DEVICE-WDS-MIB", "coDevWDSInfoMaxNumberOfGroup"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceWdsInfoMIBGroup = alvarionDeviceWdsInfoMIBGroup.setStatus('current')
alvarionDeviceWdsRadioMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 3, 2, 2)).setObjects(("ALVARION-DEVICE-WDS-MIB", "coDevWDSRadioAckDistance"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSRadioQoS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceWdsRadioMIBGroup = alvarionDeviceWdsRadioMIBGroup.setStatus('current')
alvarionDeviceWdsGroupMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 3, 2, 3)).setObjects(("ALVARION-DEVICE-WDS-MIB", "coDevWDSGroupName"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSGroupState"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSGroupSecurity"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSGroupDynamicMode"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSGroupDynamicGroupId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceWdsGroupMIBGroup = alvarionDeviceWdsGroupMIBGroup.setStatus('current')
alvarionDeviceWdsLinkMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 3, 2, 4)).setObjects(("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStaState"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStaRadio"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStaPeerMacAddress"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStaMaster"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStaAuthorized"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStaEncryption"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStaIdleTime"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStaSNR"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStaTxRate"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStaRxRate"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStaIfIndex"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsTxRate1"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsTxRate2"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsTxRate5dot5"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsTxRate11"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsTxRate6"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsTxRate9"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsTxRate12"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsTxRate18"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsTxRate24"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsTxRate36"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsTxRate48"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsTxRate54"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsRxRate1"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsRxRate2"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsRxRate5dot5"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsRxRate11"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsRxRate6"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsRxRate9"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsRxRate12"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsRxRate18"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsRxRate24"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsRxRate36"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsRxRate48"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSLinkStsPktsRxRate54"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceWdsLinkMIBGroup = alvarionDeviceWdsLinkMIBGroup.setStatus('current')
alvarionDeviceWdsNetworkScanMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 34, 3, 2, 5)).setObjects(("ALVARION-DEVICE-WDS-MIB", "coDevWDSScanGroupId"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSScanPeerMacAddress"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSScanChannel"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSScanSNR"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSScanMode"), ("ALVARION-DEVICE-WDS-MIB", "coDevWDSScanAvailable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceWdsNetworkScanMIBGroup = alvarionDeviceWdsNetworkScanMIBGroup.setStatus('current')
mibBuilder.exportSymbols("ALVARION-DEVICE-WDS-MIB", coDevWDSLinkStsPktsTxRate5dot5=coDevWDSLinkStsPktsTxRate5dot5, coDevWDSLinkStaSNR=coDevWDSLinkStaSNR, coDeviceWDSLinkStatusTable=coDeviceWDSLinkStatusTable, coDevWDSScanPeerMacAddress=coDevWDSScanPeerMacAddress, coDevWDSLinkStsPktsTxRate48=coDevWDSLinkStsPktsTxRate48, PYSNMP_MODULE_ID=alvarionDeviceWdsMIB, coDevWDSLinkStsPktsRxRate5dot5=coDevWDSLinkStsPktsRxRate5dot5, coDevWDSScanPeerIndex=coDevWDSScanPeerIndex, coDeviceWDSNetworkScanEntry=coDeviceWDSNetworkScanEntry, coDevWDSLinkStaIndex=coDevWDSLinkStaIndex, coDevWDSLinkStsPktsRxRate18=coDevWDSLinkStsPktsRxRate18, coDeviceWDSLinkStatusEntry=coDeviceWDSLinkStatusEntry, coDeviceWDSLinkStatsRatesTable=coDeviceWDSLinkStatsRatesTable, coDevWDSLinkStaRxRate=coDevWDSLinkStaRxRate, alvarionDeviceWdsInfoMIBGroup=alvarionDeviceWdsInfoMIBGroup, coDevWDSGroupIndex=coDevWDSGroupIndex, alvarionDeviceWdsGroupMIBGroup=alvarionDeviceWdsGroupMIBGroup, alvarionDeviceWdsMIBCompliance=alvarionDeviceWdsMIBCompliance, coDevWDSLinkStaEncryption=coDevWDSLinkStaEncryption, coDevWDSLinkStaIfIndex=coDevWDSLinkStaIfIndex, coDevWDSLinkStsPktsTxRate9=coDevWDSLinkStsPktsTxRate9, coDeviceWDSRadioGroup=coDeviceWDSRadioGroup, coDeviceWDSInfoGroup=coDeviceWDSInfoGroup, coDevWDSGroupState=coDevWDSGroupState, coDevWDSLinkStsPktsRxRate2=coDevWDSLinkStsPktsRxRate2, coDevWDSScanChannel=coDevWDSScanChannel, coDevWDSRadioIndex=coDevWDSRadioIndex, coDevWDSGroupDynamicMode=coDevWDSGroupDynamicMode, coDeviceWDSLinkGroup=coDeviceWDSLinkGroup, coDevWDSRadioAckDistance=coDevWDSRadioAckDistance, coDevWDSLinkStsPktsRxRate1=coDevWDSLinkStsPktsRxRate1, coDevWDSLinkStsPktsTxRate2=coDevWDSLinkStsPktsTxRate2, coDevWDSLinkStsPktsTxRate11=coDevWDSLinkStsPktsTxRate11, coDevWDSLinkStaMaster=coDevWDSLinkStaMaster, coDevWDSLinkStsPktsRxRate36=coDevWDSLinkStsPktsRxRate36, coDevWDSLinkStsPktsRxRate6=coDevWDSLinkStsPktsRxRate6, coDeviceWdsInfoTable=coDeviceWdsInfoTable, alvarionDeviceWdsMIBNotifications=alvarionDeviceWdsMIBNotifications, coDevWDSInfoMaxNumberOfGroup=coDevWDSInfoMaxNumberOfGroup, coDevWDSLinkStaAuthorized=coDevWDSLinkStaAuthorized, coDevWDSLinkStsPktsTxRate12=coDevWDSLinkStsPktsTxRate12, coDeviceWDSLinkStatsRatesEntry=coDeviceWDSLinkStatsRatesEntry, coDevWDSRadioQoS=coDevWDSRadioQoS, coDevWDSGroupSecurity=coDevWDSGroupSecurity, coDevWDSLinkStsPktsTxRate54=coDevWDSLinkStsPktsTxRate54, coDevWDSScanAvailable=coDevWDSScanAvailable, coDevWDSLinkStsPktsRxRate12=coDevWDSLinkStsPktsRxRate12, coDeviceWDSGroupTable=coDeviceWDSGroupTable, coDeviceWDSGroupEntry=coDeviceWDSGroupEntry, alvarionDeviceWdsMIBNotificationPrefix=alvarionDeviceWdsMIBNotificationPrefix, alvarionDeviceWdsNetworkScanMIBGroup=alvarionDeviceWdsNetworkScanMIBGroup, coDevWDSLinkStsPktsRxRate54=coDevWDSLinkStsPktsRxRate54, coDeviceWDSRadioEntry=coDeviceWDSRadioEntry, alvarionDeviceWdsLinkMIBGroup=alvarionDeviceWdsLinkMIBGroup, alvarionDeviceWdsMIBCompliances=alvarionDeviceWdsMIBCompliances, alvarionDeviceWdsMIBGroups=alvarionDeviceWdsMIBGroups, coDevWDSLinkStsPktsTxRate24=coDevWDSLinkStsPktsTxRate24, coDeviceWDSNetworkScanGroup=coDeviceWDSNetworkScanGroup, coDevWDSScanSNR=coDevWDSScanSNR, alvarionDeviceWdsMIBConformance=alvarionDeviceWdsMIBConformance, coDevWDSLinkStsPktsRxRate24=coDevWDSLinkStsPktsRxRate24, alvarionDeviceWdsMIB=alvarionDeviceWdsMIB, coDevWDSLinkStsPktsTxRate6=coDevWDSLinkStsPktsTxRate6, coDevWDSScanRadioIndex=coDevWDSScanRadioIndex, coDevWDSLinkStsPktsTxRate18=coDevWDSLinkStsPktsTxRate18, coDevWDSLinkStaIdleTime=coDevWDSLinkStaIdleTime, coDevWDSLinkStaPeerMacAddress=coDevWDSLinkStaPeerMacAddress, coDevWDSLinkStsPktsTxRate36=coDevWDSLinkStsPktsTxRate36, coDevWDSGroupDynamicGroupId=coDevWDSGroupDynamicGroupId, coDevWDSLinkStsPktsRxRate48=coDevWDSLinkStsPktsRxRate48, coDevWDSGroupName=coDevWDSGroupName, coDevWDSLinkStsPktsRxRate9=coDevWDSLinkStsPktsRxRate9, alvarionDeviceWdsMIBObjects=alvarionDeviceWdsMIBObjects, coDevWDSLinkStsPktsTxRate1=coDevWDSLinkStsPktsTxRate1, coDevWDSLinkStaTxRate=coDevWDSLinkStaTxRate, coDeviceWDSGroupGroup=coDeviceWDSGroupGroup, alvarionDeviceWdsRadioMIBGroup=alvarionDeviceWdsRadioMIBGroup, coDeviceWDSNetworkScanTable=coDeviceWDSNetworkScanTable, coDeviceWDSRadioTable=coDeviceWDSRadioTable, coDevWDSLinkStaState=coDevWDSLinkStaState, coDevWDSLinkStsPktsRxRate11=coDevWDSLinkStsPktsRxRate11, coDeviceWdsInfoEntry=coDeviceWdsInfoEntry, coDevWDSScanGroupId=coDevWDSScanGroupId, coDevWDSLinkStaRadio=coDevWDSLinkStaRadio, coDevWDSScanMode=coDevWDSScanMode)
