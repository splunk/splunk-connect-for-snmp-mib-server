#
# PySNMP MIB module CISCO-IVR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IVR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:46:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
FcAddressId, FcNameId, DomainId, VsanIndex = mibBuilder.importSymbols("CISCO-ST-TC", "FcAddressId", "FcNameId", "DomainId", "VsanIndex")
vsanIndex, = mibBuilder.importSymbols("CISCO-VSAN-MIB", "vsanIndex")
ZoneQosPriorityLevel, FcList = mibBuilder.importSymbols("CISCO-ZS-MIB", "ZoneQosPriorityLevel", "FcList")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
TimeTicks, Bits, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity, Counter64, iso, IpAddress, ObjectIdentity, MibIdentifier, Unsigned32, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Bits", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity", "Counter64", "iso", "IpAddress", "ObjectIdentity", "MibIdentifier", "Unsigned32", "NotificationType", "Counter32")
TruthValue, DisplayString, RowStatus, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention", "TimeStamp")
ciscoIvrMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 371))
ciscoIvrMIB.setRevisions(('2005-03-03 00:00', '2004-10-27 00:00', '2003-11-03 00:00', '2003-10-20 00:00',))
if mibBuilder.loadTexts: ciscoIvrMIB.setLastUpdated('200503030000Z')
if mibBuilder.loadTexts: ciscoIvrMIB.setOrganization('Cisco Systems Inc.')
ciscoIvrMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 371, 0))
ciscoIvrMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 371, 1))
ciscoIvrMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 371, 2))
cimIvrConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1))
cimIvrStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2))
cimIvrGeneric = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 1))
cimIvrZoneset = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2))
cimIvrZone = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3))
cimIvrZoneMember = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4))
cimIvrTopology = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5))
cimIvrVirtualDomains = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 6))
class CIvrZoneMemberType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("pwwnVsan", 1))

class CIvrAutonomousFabricId(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 65535)

class CIvrChecksum(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 255)

civrFcidNatMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: civrFcidNatMode.setStatus('current')
civrVsanTopologyAutoDisc = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: civrVsanTopologyAutoDisc.setStatus('current')
civrZoneSetNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8388608))).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneSetNumber.setStatus('current')
civrZoneSetTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 2), )
if mibBuilder.loadTexts: civrZoneSetTable.setStatus('current')
civrZoneSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-IVR-MIB", "civrZoneSetIndex"))
if mibBuilder.loadTexts: civrZoneSetEntry.setStatus('current')
civrZoneSetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048)))
if mibBuilder.loadTexts: civrZoneSetIndex.setStatus('current')
civrZoneSetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrZoneSetName.setStatus('current')
civrZoneSetZoneList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 2, 1, 3), FcList().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrZoneSetZoneList.setStatus('current')
civrZoneSetLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 2, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneSetLastChange.setStatus('current')
civrZoneSetChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 2, 1, 5), CIvrChecksum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneSetChecksum.setStatus('current')
civrZoneSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrZoneSetRowStatus.setStatus('current')
civrZoneSetActivate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: civrZoneSetActivate.setStatus('current')
civrZoneSetActvatDeactvatResult = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("activateSuccess", 1), ("activateFailureNoMembers", 2), ("activateFailureZoneOneorLessMem", 3), ("activateFailureNoTopology", 4), ("activateFailureNoPerVsanSucc", 5), ("activateFailureNoZoneset", 6), ("activateFailureNoVsans", 7), ("activateFailureFabricUnstable", 8), ("deactivateSuccess", 9), ("deactivateFailureNoActiveZs", 10), ("deactivateFailureNoPerVsanSucc", 11), ("deactivateFailureFabricUnstable", 12), ("activating", 13), ("deactivating", 14), ("idle", 15), ("deactivateSuccessFcNatShutup13", 16), ("activateFailureFabric", 17), ("deactivateFailureFabric", 18), ("activatePartialSuccessFabric", 19), ("deactivatePartialSuccessFabric", 20), ("deviceCleanupInProgress", 21), ("activatingReadyToAdv", 22), ("activatingAdvertising", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneSetActvatDeactvatResult.setStatus('current')
civrZoneSetDeActivate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("deactivate", 1), ("noop", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: civrZoneSetDeActivate.setStatus('current')
civrZonesetDbChecksum = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 6), CIvrChecksum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZonesetDbChecksum.setStatus('current')
civrActiveZonesetChecksum = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 7), CIvrChecksum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrActiveZonesetChecksum.setStatus('current')
civrZoneNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneNumber.setStatus('current')
civrZoneTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 2), )
if mibBuilder.loadTexts: civrZoneTable.setStatus('current')
civrZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-IVR-MIB", "civrZoneIndex"))
if mibBuilder.loadTexts: civrZoneEntry.setStatus('current')
civrZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048)))
if mibBuilder.loadTexts: civrZoneIndex.setStatus('current')
civrZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 58))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrZoneName.setStatus('current')
civrZoneMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 2, 1, 3), FcList().clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneMemberList.setStatus('current')
civrZoneLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 2, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneLastChange.setStatus('current')
civrZoneRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrZoneRowStatus.setStatus('current')
civrZoneReadOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 2, 1, 7), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrZoneReadOnly.setStatus('current')
civrZoneQosPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 2, 1, 8), ZoneQosPriorityLevel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrZoneQosPriority.setStatus('current')
civrZoneMemberNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777216))).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneMemberNumber.setStatus('current')
civrZoneMemberTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 2), )
if mibBuilder.loadTexts: civrZoneMemberTable.setStatus('current')
civrZoneMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-IVR-MIB", "civrZoneMemberParentIndex"), (0, "CISCO-IVR-MIB", "civrZoneMemberIndex"))
if mibBuilder.loadTexts: civrZoneMemberEntry.setStatus('current')
civrZoneMemberParentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048)))
if mibBuilder.loadTexts: civrZoneMemberParentIndex.setStatus('current')
civrZoneMemberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048)))
if mibBuilder.loadTexts: civrZoneMemberIndex.setStatus('current')
civrZoneMemberType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 2, 1, 3), CIvrZoneMemberType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrZoneMemberType.setStatus('current')
civrZoneMemberID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 2, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrZoneMemberID.setStatus('current')
civrZoneMemberAFId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 2, 1, 5), CIvrAutonomousFabricId().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrZoneMemberAFId.setStatus('current')
civrZoneMemberVsan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 2, 1, 6), VsanIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrZoneMemberVsan.setStatus('current')
civrZoneMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrZoneMemberRowStatus.setStatus('current')
civrZoneMemberLunID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 2, 1, 8), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrZoneMemberLunID.setStatus('current')
civrZoneEnforcedZoneSetName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneEnforcedZoneSetName.setStatus('current')
civrZoneEnforcedZoneSetZoneList = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 9), FcList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneEnforcedZoneSetZoneList.setStatus('current')
civrZoneEnforcedZoneSetActvtTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneEnforcedZoneSetActvtTime.setStatus('current')
civrZoneCopyZoneSetEnforcdToFull = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("copy", 1), ("noOp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: civrZoneCopyZoneSetEnforcdToFull.setStatus('current')
civrZoneClearFullZoneDb = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("noOp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: civrZoneClearFullZoneDb.setStatus('current')
civrZonesetActivateForce = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: civrZonesetActivateForce.setStatus('current')
civrZoneSetTableNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 2, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneSetTableNextIndex.setStatus('current')
civrZoneEnforcedZoneNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8388608))).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneEnforcedZoneNumber.setStatus('current')
civrZoneEnforcedZoneTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 4), )
if mibBuilder.loadTexts: civrZoneEnforcedZoneTable.setStatus('current')
civrZoneEnforcedZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 4, 1), ).setIndexNames((0, "CISCO-IVR-MIB", "civrZoneIndex"))
if mibBuilder.loadTexts: civrZoneEnforcedZoneEntry.setStatus('current')
civrZoneEnforcedZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 4, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 58))).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneEnforcedZoneName.setStatus('current')
civrZoneEnforcedZoneMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 4, 1, 2), FcList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneEnforcedZoneMemberList.setStatus('current')
civrZoneEnforcedZoneReadOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 4, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneEnforcedZoneReadOnly.setStatus('current')
civrZoneEnforcedZoneQosPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 4, 1, 4), ZoneQosPriorityLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneEnforcedZoneQosPriority.setStatus('current')
civrZoneTableNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 3, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneTableNextIndex.setStatus('current')
civrZoneEnforcedZoneMemberNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777216))).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneEnforcedZoneMemberNumber.setStatus('current')
civrZoneEnforcedZoneMemberTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 4), )
if mibBuilder.loadTexts: civrZoneEnforcedZoneMemberTable.setStatus('current')
civrZoneEnforcedZoneMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 4, 1), ).setIndexNames((0, "CISCO-IVR-MIB", "civrZoneMemberParentIndex"), (0, "CISCO-IVR-MIB", "civrZoneMemberIndex"))
if mibBuilder.loadTexts: civrZoneEnforcedZoneMemberEntry.setStatus('current')
civrZoneEnforcedZoneMemberType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 4, 1, 2), CIvrZoneMemberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneEnforcedZoneMemberType.setStatus('current')
civrZoneEnforcedZoneMemberID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 4, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneEnforcedZoneMemberID.setStatus('current')
civrZoneEnforcedZoneMemberAFId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 4, 1, 4), CIvrAutonomousFabricId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneEnforcedZoneMemberAFId.setStatus('current')
civrZoneEnforcedZoneMemberVsan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 4, 1, 5), VsanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneEnforcedZoneMemberVsan.setStatus('current')
civrZoneEnforcedZoneMemberLunID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 4, 4, 1, 6), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneEnforcedZoneMemberLunID.setStatus('current')
civrZoneSetStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 1), )
if mibBuilder.loadTexts: civrZoneSetStatusTable.setStatus('current')
civrZoneSetStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-VSAN-MIB", "vsanIndex"))
if mibBuilder.loadTexts: civrZoneSetStatusEntry.setStatus('current')
civrZoneSetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("idle", 1), ("active", 2), ("deactive", 3), ("defaultZoneDeny", 4), ("activationFailed", 5), ("deactivationFailed", 6), ("activationNotInitiated", 7), ("activationFailedFabricChgFailed", 8), ("deactivationNotInitiated", 9), ("deactivationFailedFabChgFailed", 10), ("activating", 11), ("activatingWaitForLowestSwwn", 12), ("activatingFabricChanging", 13), ("deactivating", 14), ("deactivatingWaitForLowestSwwn", 15), ("deactivatingFabricChanging", 16), ("defaultZonePermit", 17), ("defaultZonePermitNoForce", 18), ("defaultZonePermitActZsNoForce", 19), ("denyNoActiveZoneset", 20), ("activationFailedLowestWwnWait", 21), ("deactivationFailedLowestWwnWait", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrZoneSetStatus.setStatus('current')
civrTopologyConfiguredChecksum = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 1), CIvrChecksum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrTopologyConfiguredChecksum.setStatus('current')
civrTopologyConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 2), )
if mibBuilder.loadTexts: civrTopologyConfigTable.setStatus('current')
civrTopologyConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 2, 1), ).setIndexNames((0, "CISCO-IVR-MIB", "civrTopologyConfigAutoFabricId"), (0, "CISCO-IVR-MIB", "civrTopologyConfigSwitchWwn"))
if mibBuilder.loadTexts: civrTopologyConfigEntry.setStatus('current')
civrTopologyConfigSwitchWwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 2, 1, 1), FcNameId())
if mibBuilder.loadTexts: civrTopologyConfigSwitchWwn.setStatus('current')
civrTopologyConfigAutoFabricId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 2, 1, 2), CIvrAutonomousFabricId())
if mibBuilder.loadTexts: civrTopologyConfigAutoFabricId.setStatus('current')
civrTopologyConfigSwitchVsan2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 2, 1, 3), FcList().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrTopologyConfigSwitchVsan2k.setStatus('current')
civrTopologyConfigSwitchVsan4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 2, 1, 4), FcList().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrTopologyConfigSwitchVsan4k.setStatus('current')
civrTopologyConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrTopologyConfigRowStatus.setStatus('current')
civrTopologyActivate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("activate", 1), ("noOp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: civrTopologyActivate.setStatus('current')
civrTopologyActivateTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrTopologyActivateTime.setStatus('current')
civrTopologyCopyActiveToConfig = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("copy", 1), ("noOp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: civrTopologyCopyActiveToConfig.setStatus('current')
civrTopologyClearConfigured = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("noOp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: civrTopologyClearConfigured.setStatus('current')
civrTopologyActiveChecksum = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 7), CIvrChecksum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrTopologyActiveChecksum.setStatus('current')
civrTopologyActiveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 8), )
if mibBuilder.loadTexts: civrTopologyActiveTable.setStatus('current')
civrTopologyActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 8, 1), ).setIndexNames((0, "CISCO-IVR-MIB", "civrTopologyActiveAutoFabricId"), (0, "CISCO-IVR-MIB", "civrTopologyActiveSwitchWwn"))
if mibBuilder.loadTexts: civrTopologyActiveEntry.setStatus('current')
civrTopologyActiveSwitchWwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 8, 1, 1), FcNameId())
if mibBuilder.loadTexts: civrTopologyActiveSwitchWwn.setStatus('current')
civrTopologyActiveAutoFabricId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 8, 1, 2), CIvrAutonomousFabricId())
if mibBuilder.loadTexts: civrTopologyActiveAutoFabricId.setStatus('current')
civrTopologyActiveSwitchVsan2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 8, 1, 3), FcList().clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrTopologyActiveSwitchVsan2k.setStatus('current')
civrTopologyActiveSwitchVsan4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 8, 1, 4), FcList().clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrTopologyActiveSwitchVsan4k.setStatus('current')
civrTopologyActive = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrTopologyActive.setStatus('current')
civrTopologyAfidConfigChecksum = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 10), CIvrChecksum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrTopologyAfidConfigChecksum.setStatus('current')
civrTopologyAfidConfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 11), )
if mibBuilder.loadTexts: civrTopologyAfidConfTable.setStatus('current')
civrTopologyAfidConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 11, 1), ).setIndexNames((0, "CISCO-IVR-MIB", "civrTopologyAfidConfSwitchWwn"), (0, "CISCO-IVR-MIB", "civrTopologyAfidConfId"))
if mibBuilder.loadTexts: civrTopologyAfidConfEntry.setStatus('current')
civrTopologyAfidConfSwitchWwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 11, 1, 1), FcNameId())
if mibBuilder.loadTexts: civrTopologyAfidConfSwitchWwn.setStatus('current')
civrTopologyAfidConfId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 11, 1, 2), CIvrAutonomousFabricId())
if mibBuilder.loadTexts: civrTopologyAfidConfId.setStatus('current')
civrTopologyAfidConfSwitchVsan2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 11, 1, 3), FcList().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrTopologyAfidConfSwitchVsan2k.setStatus('current')
civrTopologyAfidConfSwitchVsan4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 11, 1, 4), FcList().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrTopologyAfidConfSwitchVsan4k.setStatus('current')
civrTopologyAfidConfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 11, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrTopologyAfidConfRowStatus.setStatus('current')
civrTopologyDefaultAfidChecksum = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 12), CIvrChecksum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrTopologyDefaultAfidChecksum.setStatus('current')
civrTopologyDefaultAfidTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 13), )
if mibBuilder.loadTexts: civrTopologyDefaultAfidTable.setStatus('current')
civrTopologyDefaultAfidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 13, 1), ).setIndexNames((0, "CISCO-IVR-MIB", "civrTopologyDefaultAfidSwitchWwn"))
if mibBuilder.loadTexts: civrTopologyDefaultAfidEntry.setStatus('current')
civrTopologyDefaultAfidSwitchWwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 13, 1, 1), FcNameId())
if mibBuilder.loadTexts: civrTopologyDefaultAfidSwitchWwn.setStatus('current')
civrTopologyDefaultAfidId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 13, 1, 2), CIvrAutonomousFabricId().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrTopologyDefaultAfidId.setStatus('current')
civrTopologyDefaultAfidStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 13, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrTopologyDefaultAfidStatus.setStatus('current')
civrTopologyIvrSrvGrpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 14), )
if mibBuilder.loadTexts: civrTopologyIvrSrvGrpTable.setStatus('current')
civrTopologyIvrSrvGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 14, 1), ).setIndexNames((0, "CISCO-IVR-MIB", "civrTopologyIvrSrvGrpName"), (0, "CISCO-IVR-MIB", "civrTopologyAfidConfId"))
if mibBuilder.loadTexts: civrTopologyIvrSrvGrpEntry.setStatus('current')
civrTopologyIvrSrvGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 14, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: civrTopologyIvrSrvGrpName.setStatus('current')
civrTopologyIvrSrvGrpVsan2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 14, 1, 2), FcList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrTopologyIvrSrvGrpVsan2k.setStatus('current')
civrTopologyIvrSrvGrpVsan4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 14, 1, 3), FcList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrTopologyIvrSrvGrpVsan4k.setStatus('current')
civrTopologyIvrSrvGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 14, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: civrTopologyIvrSrvGrpRowStatus.setStatus('current')
civrTopologyClearAfidConfig = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 5, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("noOp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: civrTopologyClearAfidConfig.setStatus('current')
civrAddIvrVirtualDomainsVsans2k = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 6, 1), FcList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: civrAddIvrVirtualDomainsVsans2k.setStatus('current')
civrAddIvrVirtualDomainsVsans4k = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 1, 6, 2), FcList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: civrAddIvrVirtualDomainsVsans4k.setStatus('current')
civrEnabledDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 2), )
if mibBuilder.loadTexts: civrEnabledDeviceTable.setStatus('current')
civrEnabledDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-IVR-MIB", "civrEnabledDeviceAutoFabricId"), (0, "CISCO-IVR-MIB", "civrEnabledDeviceVsan"), (0, "CISCO-IVR-MIB", "civrEnabledDeviceDomainId"))
if mibBuilder.loadTexts: civrEnabledDeviceEntry.setStatus('current')
civrEnabledDeviceVsan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 2, 1, 1), VsanIndex())
if mibBuilder.loadTexts: civrEnabledDeviceVsan.setStatus('current')
civrEnabledDeviceAutoFabricId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 2, 1, 2), CIvrAutonomousFabricId())
if mibBuilder.loadTexts: civrEnabledDeviceAutoFabricId.setStatus('current')
civrEnabledDeviceDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 2, 1, 3), DomainId())
if mibBuilder.loadTexts: civrEnabledDeviceDomainId.setStatus('current')
civrEnabledDeviceSwitchWwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 2, 1, 4), FcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrEnabledDeviceSwitchWwn.setStatus('current')
civrEnabledDeviceCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 2, 1, 5), Bits().clone(namedValues=NamedValues(("version1", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: civrEnabledDeviceCapability.setStatus('current')
civrZoneMemberFabricId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 3), FcAddressId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: civrZoneMemberFabricId.setStatus('current')
civDomainIdConflictVsan = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 4), VsanIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: civDomainIdConflictVsan.setStatus('current')
civrZoneSetActDeactPartialSucss = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 5), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: civrZoneSetActDeactPartialSucss.setStatus('current')
civrAfidMisConfigVsan = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 6), VsanIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: civrAfidMisConfigVsan.setStatus('current')
civrAfidMisConfigLocalAfid = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 7), CIvrAutonomousFabricId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: civrAfidMisConfigLocalAfid.setStatus('current')
civrAfidMisConfigRemoteAfid = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 8), CIvrAutonomousFabricId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: civrAfidMisConfigRemoteAfid.setStatus('current')
civrAfidMisConfigLocalSWwn = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 9), FcNameId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: civrAfidMisConfigLocalSWwn.setStatus('current')
civrAfidMisConfigRemoteSWwn = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 10), FcNameId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: civrAfidMisConfigRemoteSWwn.setStatus('current')
civrTopologyMisConfigReason = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 371, 1, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unknown", 1), ("afidMismatch", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: civrTopologyMisConfigReason.setStatus('current')
civrZoneActivationDoneNotify = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 371, 0, 1)).setObjects(("CISCO-IVR-MIB", "civrZoneSetName"), ("CISCO-IVR-MIB", "civrZoneSetActvatDeactvatResult"), ("CISCO-IVR-MIB", "civrZoneSetActDeactPartialSucss"))
if mibBuilder.loadTexts: civrZoneActivationDoneNotify.setStatus('current')
civrZoneDeactivationDoneNotify = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 371, 0, 2)).setObjects(("CISCO-IVR-MIB", "civrZoneSetName"), ("CISCO-IVR-MIB", "civrZoneSetActvatDeactvatResult"), ("CISCO-IVR-MIB", "civrZoneSetActDeactPartialSucss"))
if mibBuilder.loadTexts: civrZoneDeactivationDoneNotify.setStatus('current')
civrDomainConflictNotify = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 371, 0, 3)).setObjects(("CISCO-IVR-MIB", "civrZoneEnforcedZoneMemberID"), ("CISCO-IVR-MIB", "civrZoneEnforcedZoneMemberVsan"), ("CISCO-IVR-MIB", "civrZoneMemberFabricId"), ("CISCO-IVR-MIB", "civDomainIdConflictVsan"))
if mibBuilder.loadTexts: civrDomainConflictNotify.setStatus('current')
civrAfidConfigNotify = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 371, 0, 4)).setObjects(("CISCO-IVR-MIB", "civrAfidMisConfigLocalAfid"), ("CISCO-IVR-MIB", "civrAfidMisConfigRemoteAfid"), ("CISCO-IVR-MIB", "civrAfidMisConfigLocalSWwn"), ("CISCO-IVR-MIB", "civrAfidMisConfigRemoteSWwn"), ("CISCO-IVR-MIB", "civrAfidMisConfigVsan"), ("CISCO-IVR-MIB", "civrTopologyMisConfigReason"))
if mibBuilder.loadTexts: civrAfidConfigNotify.setStatus('current')
civrZoneServerMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 371, 2, 1))
civrZoneServerMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 371, 2, 2))
civrZoneServerMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 371, 2, 1, 1)).setObjects(("CISCO-IVR-MIB", "civrZoneConfigurationGroup"), ("CISCO-IVR-MIB", "civrTopologyGroup"), ("CISCO-IVR-MIB", "civrStatsGroup"), ("CISCO-IVR-MIB", "civrNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    civrZoneServerMIBCompliance = civrZoneServerMIBCompliance.setStatus('deprecated')
civrZoneServerMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 371, 2, 1, 2)).setObjects(("CISCO-IVR-MIB", "civrZoneConfigurationGroup"), ("CISCO-IVR-MIB", "civrTopologyGroup"), ("CISCO-IVR-MIB", "civrStatsGroup"), ("CISCO-IVR-MIB", "civrNotificationGroup"), ("CISCO-IVR-MIB", "civrVirtualDomainsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    civrZoneServerMIBComplianceRev1 = civrZoneServerMIBComplianceRev1.setStatus('deprecated')
civrZoneServerMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 371, 2, 1, 3)).setObjects(("CISCO-IVR-MIB", "civrZoneConfigurationGroup"), ("CISCO-IVR-MIB", "civrTopologyGroup"), ("CISCO-IVR-MIB", "civrStatsGroup"), ("CISCO-IVR-MIB", "civrNotificationGroup"), ("CISCO-IVR-MIB", "civrVirtualDomainsGroup"), ("CISCO-IVR-MIB", "civrGenericGroup"), ("CISCO-IVR-MIB", "civrTopologyGroupRev2"), ("CISCO-IVR-MIB", "civrZoneConfigurationGroupRev2"), ("CISCO-IVR-MIB", "civrNotificationGroupRev2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    civrZoneServerMIBComplianceRev2 = civrZoneServerMIBComplianceRev2.setStatus('current')
civrZoneConfigurationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 371, 2, 2, 1)).setObjects(("CISCO-IVR-MIB", "civrZoneSetNumber"), ("CISCO-IVR-MIB", "civrZoneSetName"), ("CISCO-IVR-MIB", "civrZoneSetZoneList"), ("CISCO-IVR-MIB", "civrZoneSetLastChange"), ("CISCO-IVR-MIB", "civrZoneSetChecksum"), ("CISCO-IVR-MIB", "civrZoneSetRowStatus"), ("CISCO-IVR-MIB", "civrZoneSetActivate"), ("CISCO-IVR-MIB", "civrZoneSetActvatDeactvatResult"), ("CISCO-IVR-MIB", "civrZoneSetDeActivate"), ("CISCO-IVR-MIB", "civrZoneNumber"), ("CISCO-IVR-MIB", "civrZoneName"), ("CISCO-IVR-MIB", "civrZoneMemberList"), ("CISCO-IVR-MIB", "civrZoneLastChange"), ("CISCO-IVR-MIB", "civrZoneRowStatus"), ("CISCO-IVR-MIB", "civrZoneMemberNumber"), ("CISCO-IVR-MIB", "civrZoneMemberType"), ("CISCO-IVR-MIB", "civrZoneMemberID"), ("CISCO-IVR-MIB", "civrZoneMemberAFId"), ("CISCO-IVR-MIB", "civrZoneMemberVsan"), ("CISCO-IVR-MIB", "civrZonesetDbChecksum"), ("CISCO-IVR-MIB", "civrActiveZonesetChecksum"), ("CISCO-IVR-MIB", "civrZoneMemberRowStatus"), ("CISCO-IVR-MIB", "civrZoneEnforcedZoneSetName"), ("CISCO-IVR-MIB", "civrZoneEnforcedZoneSetZoneList"), ("CISCO-IVR-MIB", "civrZoneEnforcedZoneSetActvtTime"), ("CISCO-IVR-MIB", "civrZoneEnforcedZoneNumber"), ("CISCO-IVR-MIB", "civrZoneEnforcedZoneName"), ("CISCO-IVR-MIB", "civrZoneEnforcedZoneMemberList"), ("CISCO-IVR-MIB", "civrZoneEnforcedZoneMemberNumber"), ("CISCO-IVR-MIB", "civrZoneEnforcedZoneMemberType"), ("CISCO-IVR-MIB", "civrZoneEnforcedZoneMemberID"), ("CISCO-IVR-MIB", "civrZoneEnforcedZoneMemberAFId"), ("CISCO-IVR-MIB", "civrZoneEnforcedZoneMemberVsan"), ("CISCO-IVR-MIB", "civrZoneCopyZoneSetEnforcdToFull"), ("CISCO-IVR-MIB", "civrZoneClearFullZoneDb"), ("CISCO-IVR-MIB", "civrZonesetActivateForce"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    civrZoneConfigurationGroup = civrZoneConfigurationGroup.setStatus('current')
civrTopologyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 371, 2, 2, 2)).setObjects(("CISCO-IVR-MIB", "civrTopologyConfigSwitchVsan2k"), ("CISCO-IVR-MIB", "civrTopologyConfigSwitchVsan4k"), ("CISCO-IVR-MIB", "civrTopologyConfigRowStatus"), ("CISCO-IVR-MIB", "civrTopologyActiveSwitchVsan2k"), ("CISCO-IVR-MIB", "civrTopologyActiveSwitchVsan4k"), ("CISCO-IVR-MIB", "civrTopologyConfiguredChecksum"), ("CISCO-IVR-MIB", "civrTopologyActiveChecksum"), ("CISCO-IVR-MIB", "civrTopologyActivate"), ("CISCO-IVR-MIB", "civrTopologyActivateTime"), ("CISCO-IVR-MIB", "civrTopologyCopyActiveToConfig"), ("CISCO-IVR-MIB", "civrTopologyClearConfigured"), ("CISCO-IVR-MIB", "civrTopologyActive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    civrTopologyGroup = civrTopologyGroup.setStatus('current')
civrStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 371, 2, 2, 3)).setObjects(("CISCO-IVR-MIB", "civrZoneSetStatus"), ("CISCO-IVR-MIB", "civrEnabledDeviceSwitchWwn"), ("CISCO-IVR-MIB", "civrEnabledDeviceCapability"), ("CISCO-IVR-MIB", "civDomainIdConflictVsan"), ("CISCO-IVR-MIB", "civrZoneMemberFabricId"), ("CISCO-IVR-MIB", "civrZoneSetActDeactPartialSucss"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    civrStatsGroup = civrStatsGroup.setStatus('current')
civrNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 371, 2, 2, 4)).setObjects(("CISCO-IVR-MIB", "civrZoneActivationDoneNotify"), ("CISCO-IVR-MIB", "civrZoneDeactivationDoneNotify"), ("CISCO-IVR-MIB", "civrDomainConflictNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    civrNotificationGroup = civrNotificationGroup.setStatus('current')
civrVirtualDomainsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 371, 2, 2, 5)).setObjects(("CISCO-IVR-MIB", "civrAddIvrVirtualDomainsVsans2k"), ("CISCO-IVR-MIB", "civrAddIvrVirtualDomainsVsans4k"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    civrVirtualDomainsGroup = civrVirtualDomainsGroup.setStatus('current')
civrGenericGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 371, 2, 2, 6)).setObjects(("CISCO-IVR-MIB", "civrFcidNatMode"), ("CISCO-IVR-MIB", "civrVsanTopologyAutoDisc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    civrGenericGroup = civrGenericGroup.setStatus('current')
civrTopologyGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 371, 2, 2, 7)).setObjects(("CISCO-IVR-MIB", "civrTopologyAfidConfSwitchVsan2k"), ("CISCO-IVR-MIB", "civrTopologyAfidConfSwitchVsan4k"), ("CISCO-IVR-MIB", "civrTopologyAfidConfRowStatus"), ("CISCO-IVR-MIB", "civrTopologyDefaultAfidId"), ("CISCO-IVR-MIB", "civrTopologyDefaultAfidStatus"), ("CISCO-IVR-MIB", "civrTopologyIvrSrvGrpVsan2k"), ("CISCO-IVR-MIB", "civrTopologyIvrSrvGrpVsan4k"), ("CISCO-IVR-MIB", "civrTopologyIvrSrvGrpRowStatus"), ("CISCO-IVR-MIB", "civrTopologyAfidConfigChecksum"), ("CISCO-IVR-MIB", "civrTopologyDefaultAfidChecksum"), ("CISCO-IVR-MIB", "civrTopologyClearAfidConfig"), ("CISCO-IVR-MIB", "civrAfidMisConfigVsan"), ("CISCO-IVR-MIB", "civrAfidMisConfigLocalAfid"), ("CISCO-IVR-MIB", "civrAfidMisConfigRemoteAfid"), ("CISCO-IVR-MIB", "civrAfidMisConfigLocalSWwn"), ("CISCO-IVR-MIB", "civrAfidMisConfigRemoteSWwn"), ("CISCO-IVR-MIB", "civrTopologyMisConfigReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    civrTopologyGroupRev2 = civrTopologyGroupRev2.setStatus('current')
civrZoneConfigurationGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 371, 2, 2, 8)).setObjects(("CISCO-IVR-MIB", "civrZoneReadOnly"), ("CISCO-IVR-MIB", "civrZoneQosPriority"), ("CISCO-IVR-MIB", "civrZoneEnforcedZoneReadOnly"), ("CISCO-IVR-MIB", "civrZoneEnforcedZoneQosPriority"), ("CISCO-IVR-MIB", "civrZoneMemberLunID"), ("CISCO-IVR-MIB", "civrZoneEnforcedZoneMemberLunID"), ("CISCO-IVR-MIB", "civrZoneSetTableNextIndex"), ("CISCO-IVR-MIB", "civrZoneTableNextIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    civrZoneConfigurationGroupRev2 = civrZoneConfigurationGroupRev2.setStatus('current')
civrNotificationGroupRev2 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 371, 2, 2, 9)).setObjects(("CISCO-IVR-MIB", "civrAfidConfigNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    civrNotificationGroupRev2 = civrNotificationGroupRev2.setStatus('current')
mibBuilder.exportSymbols("CISCO-IVR-MIB", civrTopologyDefaultAfidStatus=civrTopologyDefaultAfidStatus, civrZoneSetStatusTable=civrZoneSetStatusTable, civrTopologyConfigTable=civrTopologyConfigTable, civrZoneEnforcedZoneMemberID=civrZoneEnforcedZoneMemberID, CIvrZoneMemberType=CIvrZoneMemberType, civrZoneEnforcedZoneReadOnly=civrZoneEnforcedZoneReadOnly, civrDomainConflictNotify=civrDomainConflictNotify, civrTopologyAfidConfId=civrTopologyAfidConfId, civrZoneEnforcedZoneMemberVsan=civrZoneEnforcedZoneMemberVsan, civrZoneName=civrZoneName, civrTopologyIvrSrvGrpVsan4k=civrTopologyIvrSrvGrpVsan4k, civrTopologyAfidConfSwitchVsan2k=civrTopologyAfidConfSwitchVsan2k, civrTopologyIvrSrvGrpVsan2k=civrTopologyIvrSrvGrpVsan2k, civrTopologyAfidConfRowStatus=civrTopologyAfidConfRowStatus, civrZoneEnforcedZoneTable=civrZoneEnforcedZoneTable, civrZoneSetLastChange=civrZoneSetLastChange, cimIvrGeneric=cimIvrGeneric, civrTopologyDefaultAfidId=civrTopologyDefaultAfidId, ciscoIvrMIBObjects=ciscoIvrMIBObjects, civrZoneEnforcedZoneMemberList=civrZoneEnforcedZoneMemberList, civrTopologyAfidConfigChecksum=civrTopologyAfidConfigChecksum, civrZoneSetChecksum=civrZoneSetChecksum, civrZoneSetActivate=civrZoneSetActivate, civrTopologyAfidConfTable=civrTopologyAfidConfTable, civrTopologyIvrSrvGrpRowStatus=civrTopologyIvrSrvGrpRowStatus, civrAddIvrVirtualDomainsVsans2k=civrAddIvrVirtualDomainsVsans2k, civrZoneMemberIndex=civrZoneMemberIndex, civrTopologyActive=civrTopologyActive, civrZoneMemberID=civrZoneMemberID, civrZoneMemberEntry=civrZoneMemberEntry, civrNotificationGroupRev2=civrNotificationGroupRev2, civrZoneSetTableNextIndex=civrZoneSetTableNextIndex, civrZoneServerMIBCompliance=civrZoneServerMIBCompliance, civrGenericGroup=civrGenericGroup, civrTopologyClearConfigured=civrTopologyClearConfigured, civrTopologyIvrSrvGrpEntry=civrTopologyIvrSrvGrpEntry, civrZoneSetEntry=civrZoneSetEntry, civrZoneServerMIBComplianceRev2=civrZoneServerMIBComplianceRev2, civrZoneEnforcedZoneSetZoneList=civrZoneEnforcedZoneSetZoneList, civrAfidMisConfigRemoteAfid=civrAfidMisConfigRemoteAfid, civrZoneMemberVsan=civrZoneMemberVsan, cimIvrTopology=cimIvrTopology, civrZonesetDbChecksum=civrZonesetDbChecksum, cimIvrZone=cimIvrZone, civrZoneEnforcedZoneMemberType=civrZoneEnforcedZoneMemberType, civrZoneEnforcedZoneMemberTable=civrZoneEnforcedZoneMemberTable, civrTopologyIvrSrvGrpName=civrTopologyIvrSrvGrpName, civrZoneSetName=civrZoneSetName, ciscoIvrMIB=ciscoIvrMIB, ciscoIvrMIBConformance=ciscoIvrMIBConformance, civrFcidNatMode=civrFcidNatMode, civrZoneConfigurationGroup=civrZoneConfigurationGroup, civrZoneRowStatus=civrZoneRowStatus, cimIvrZoneMember=cimIvrZoneMember, civrTopologyAfidConfEntry=civrTopologyAfidConfEntry, civrTopologyActiveSwitchVsan4k=civrTopologyActiveSwitchVsan4k, civrEnabledDeviceAutoFabricId=civrEnabledDeviceAutoFabricId, civrTopologyActiveTable=civrTopologyActiveTable, civrTopologyAfidConfSwitchWwn=civrTopologyAfidConfSwitchWwn, cimIvrStats=cimIvrStats, civrZoneMemberType=civrZoneMemberType, civrZoneTableNextIndex=civrZoneTableNextIndex, civrTopologyMisConfigReason=civrTopologyMisConfigReason, civrStatsGroup=civrStatsGroup, cimIvrVirtualDomains=cimIvrVirtualDomains, civDomainIdConflictVsan=civDomainIdConflictVsan, civrTopologyActiveChecksum=civrTopologyActiveChecksum, civrZoneEnforcedZoneName=civrZoneEnforcedZoneName, civrZoneClearFullZoneDb=civrZoneClearFullZoneDb, civrTopologyDefaultAfidTable=civrTopologyDefaultAfidTable, civrTopologyDefaultAfidSwitchWwn=civrTopologyDefaultAfidSwitchWwn, civrZoneMemberTable=civrZoneMemberTable, civrZoneSetStatus=civrZoneSetStatus, civrZoneMemberFabricId=civrZoneMemberFabricId, civrZoneServerMIBCompliances=civrZoneServerMIBCompliances, civrZoneServerMIBComplianceRev1=civrZoneServerMIBComplianceRev1, civrZoneEnforcedZoneQosPriority=civrZoneEnforcedZoneQosPriority, civrTopologyConfigSwitchWwn=civrTopologyConfigSwitchWwn, civrAfidMisConfigLocalAfid=civrAfidMisConfigLocalAfid, civrZoneServerMIBGroups=civrZoneServerMIBGroups, civrEnabledDeviceDomainId=civrEnabledDeviceDomainId, civrTopologyDefaultAfidEntry=civrTopologyDefaultAfidEntry, civrVirtualDomainsGroup=civrVirtualDomainsGroup, civrZoneSetDeActivate=civrZoneSetDeActivate, civrZoneMemberAFId=civrZoneMemberAFId, civrTopologyActivateTime=civrTopologyActivateTime, civrNotificationGroup=civrNotificationGroup, civrZoneQosPriority=civrZoneQosPriority, civrZoneReadOnly=civrZoneReadOnly, civrZoneNumber=civrZoneNumber, civrZoneSetTable=civrZoneSetTable, civrTopologyConfigEntry=civrTopologyConfigEntry, civrAfidMisConfigVsan=civrAfidMisConfigVsan, civrVsanTopologyAutoDisc=civrVsanTopologyAutoDisc, civrEnabledDeviceSwitchWwn=civrEnabledDeviceSwitchWwn, civrTopologyConfiguredChecksum=civrTopologyConfiguredChecksum, civrTopologyConfigSwitchVsan4k=civrTopologyConfigSwitchVsan4k, civrZoneMemberLunID=civrZoneMemberLunID, civrTopologyActiveSwitchVsan2k=civrTopologyActiveSwitchVsan2k, civrTopologyActivate=civrTopologyActivate, civrZoneSetActDeactPartialSucss=civrZoneSetActDeactPartialSucss, civrAfidMisConfigLocalSWwn=civrAfidMisConfigLocalSWwn, civrZoneEnforcedZoneMemberLunID=civrZoneEnforcedZoneMemberLunID, civrAfidMisConfigRemoteSWwn=civrAfidMisConfigRemoteSWwn, civrEnabledDeviceTable=civrEnabledDeviceTable, civrZoneConfigurationGroupRev2=civrZoneConfigurationGroupRev2, civrTopologyCopyActiveToConfig=civrTopologyCopyActiveToConfig, civrZoneIndex=civrZoneIndex, civrZoneEnforcedZoneSetActvtTime=civrZoneEnforcedZoneSetActvtTime, CIvrAutonomousFabricId=CIvrAutonomousFabricId, civrZoneSetNumber=civrZoneSetNumber, civrEnabledDeviceCapability=civrEnabledDeviceCapability, civrEnabledDeviceVsan=civrEnabledDeviceVsan, ciscoIvrMIBNotifications=ciscoIvrMIBNotifications, civrZoneMemberList=civrZoneMemberList, civrAddIvrVirtualDomainsVsans4k=civrAddIvrVirtualDomainsVsans4k, civrZoneEntry=civrZoneEntry, civrZoneSetActvatDeactvatResult=civrZoneSetActvatDeactvatResult, civrTopologyActiveSwitchWwn=civrTopologyActiveSwitchWwn, civrTopologyConfigSwitchVsan2k=civrTopologyConfigSwitchVsan2k, civrZoneCopyZoneSetEnforcdToFull=civrZoneCopyZoneSetEnforcdToFull, civrZoneEnforcedZoneMemberEntry=civrZoneEnforcedZoneMemberEntry, civrZoneDeactivationDoneNotify=civrZoneDeactivationDoneNotify, CIvrChecksum=CIvrChecksum, civrZoneSetStatusEntry=civrZoneSetStatusEntry, civrTopologyAfidConfSwitchVsan4k=civrTopologyAfidConfSwitchVsan4k, civrZoneTable=civrZoneTable, civrTopologyConfigRowStatus=civrTopologyConfigRowStatus, PYSNMP_MODULE_ID=ciscoIvrMIB, civrZoneMemberNumber=civrZoneMemberNumber, civrTopologyConfigAutoFabricId=civrTopologyConfigAutoFabricId, civrActiveZonesetChecksum=civrActiveZonesetChecksum, civrTopologyClearAfidConfig=civrTopologyClearAfidConfig, civrZoneEnforcedZoneMemberAFId=civrZoneEnforcedZoneMemberAFId, civrZoneMemberRowStatus=civrZoneMemberRowStatus, civrZoneLastChange=civrZoneLastChange, cimIvrZoneset=cimIvrZoneset, civrZoneEnforcedZoneNumber=civrZoneEnforcedZoneNumber, civrEnabledDeviceEntry=civrEnabledDeviceEntry, civrTopologyIvrSrvGrpTable=civrTopologyIvrSrvGrpTable, cimIvrConfiguration=cimIvrConfiguration, civrTopologyDefaultAfidChecksum=civrTopologyDefaultAfidChecksum, civrZoneSetRowStatus=civrZoneSetRowStatus, civrZoneEnforcedZoneSetName=civrZoneEnforcedZoneSetName, civrZoneEnforcedZoneEntry=civrZoneEnforcedZoneEntry, civrZoneMemberParentIndex=civrZoneMemberParentIndex, civrAfidConfigNotify=civrAfidConfigNotify, civrTopologyGroup=civrTopologyGroup, civrTopologyGroupRev2=civrTopologyGroupRev2, civrTopologyActiveAutoFabricId=civrTopologyActiveAutoFabricId, civrZonesetActivateForce=civrZonesetActivateForce, civrZoneSetIndex=civrZoneSetIndex, civrZoneSetZoneList=civrZoneSetZoneList, civrZoneActivationDoneNotify=civrZoneActivationDoneNotify, civrZoneEnforcedZoneMemberNumber=civrZoneEnforcedZoneMemberNumber, civrTopologyActiveEntry=civrTopologyActiveEntry)
