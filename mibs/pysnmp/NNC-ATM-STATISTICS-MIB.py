#
# PySNMP MIB module NNC-ATM-STATISTICS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NNC-ATM-STATISTICS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:12:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
atmVplVpi, atmVclVpi, atmVclVci = mibBuilder.importSymbols("ATM-MIB", "atmVplVpi", "atmVclVpi", "atmVclVci")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NncExtRelIntvlNumberType, NncExtAbsIntvlNumberType, NncExtIntvlStateType = mibBuilder.importSymbols("NNC-INTERVAL-STATISTICS-TC-MIB", "NncExtRelIntvlNumberType", "NncExtAbsIntvlNumberType", "NncExtIntvlStateType")
nncExtensions, NncExtCounter64 = mibBuilder.importSymbols("NNCGNI0001-SMI", "nncExtensions", "NncExtCounter64")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, IpAddress, Bits, ObjectIdentity, Counter32, Counter64, Gauge32, TimeTicks, Integer32, NotificationType, iso, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "IpAddress", "Bits", "ObjectIdentity", "Counter32", "Counter64", "Gauge32", "TimeTicks", "Integer32", "NotificationType", "iso", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
nncAtmStatistics = ModuleIdentity((1, 3, 6, 1, 4, 1, 123, 3, 29))
if mibBuilder.loadTexts: nncAtmStatistics.setLastUpdated('9807210330Z')
if mibBuilder.loadTexts: nncAtmStatistics.setOrganization('Newbridge Networks Corporation')
nncAtmStatisticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 29, 1))
nncAtmStatisticsTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 29, 2))
nncAtmStatisticsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 29, 3))
nncAtmStatisticsCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 29, 4))
nncVpl15MinCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 1), )
if mibBuilder.loadTexts: nncVpl15MinCurrentTable.setStatus('current')
nncVpl15MinCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"))
if mibBuilder.loadTexts: nncVpl15MinCurrentEntry.setStatus('current')
nncVpl15MinCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 1, 1, 1), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinCurrentState.setStatus('current')
nncVpl15MinCurrentAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 1, 1, 2), NncExtAbsIntvlNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinCurrentAbsoluteIntervalNumber.setStatus('current')
nncVpl15MinCurrentClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 1, 1, 3), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinCurrentClp0And1InCells.setStatus('current')
nncVpl15MinCurrentClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 1, 1, 4), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinCurrentClp0InCells.setStatus('current')
nncVpl15MinCurrentDiscardClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 1, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinCurrentDiscardClp0And1InCells.setStatus('current')
nncVpl15MinCurrentDiscardClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 1, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinCurrentDiscardClp0InCells.setStatus('current')
nncVpl15MinCurrentTaggedInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 1, 1, 7), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinCurrentTaggedInCells.setStatus('current')
nncVpl15MinCurrentClp0And1OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 1, 1, 8), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinCurrentClp0And1OutCells.setStatus('current')
nncVpl15MinCurrentClp0OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 1, 1, 9), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinCurrentClp0OutCells.setStatus('current')
nncVpl15MinIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 2), )
if mibBuilder.loadTexts: nncVpl15MinIntervalTable.setStatus('current')
nncVpl15MinIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"), (0, "NNC-ATM-STATISTICS-MIB", "nncVpl15MinIntervalNumber"))
if mibBuilder.loadTexts: nncVpl15MinIntervalEntry.setStatus('current')
nncVpl15MinIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 2, 1, 1), NncExtRelIntvlNumberType())
if mibBuilder.loadTexts: nncVpl15MinIntervalNumber.setStatus('current')
nncVpl15MinIntervalState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 2, 1, 2), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinIntervalState.setStatus('current')
nncVpl15MinIntervalAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 2, 1, 3), NncExtAbsIntvlNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinIntervalAbsoluteIntervalNumber.setStatus('current')
nncVpl15MinIntervalClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 2, 1, 4), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinIntervalClp0And1InCells.setStatus('current')
nncVpl15MinIntervalClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 2, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinIntervalClp0InCells.setStatus('current')
nncVpl15MinIntervalDiscardClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 2, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinIntervalDiscardClp0And1InCells.setStatus('current')
nncVpl15MinIntervalDiscardClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 2, 1, 7), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinIntervalDiscardClp0InCells.setStatus('current')
nncVpl15MinIntervalTaggedInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 2, 1, 8), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinIntervalTaggedInCells.setStatus('current')
nncVpl15MinIntervalClp0And1OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 2, 1, 9), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinIntervalClp0And1OutCells.setStatus('current')
nncVpl15MinIntervalClp0OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 2, 1, 10), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl15MinIntervalClp0OutCells.setStatus('current')
nncVpl1HourCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 3), )
if mibBuilder.loadTexts: nncVpl1HourCurrentTable.setStatus('current')
nncVpl1HourCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"))
if mibBuilder.loadTexts: nncVpl1HourCurrentEntry.setStatus('current')
nncVpl1HourCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 3, 1, 1), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourCurrentState.setStatus('current')
nncVpl1HourCurrentAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 3, 1, 2), NncExtAbsIntvlNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourCurrentAbsoluteIntervalNumber.setStatus('current')
nncVpl1HourCurrentClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 3, 1, 3), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourCurrentClp0And1InCells.setStatus('current')
nncVpl1HourCurrentClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 3, 1, 4), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourCurrentClp0InCells.setStatus('current')
nncVpl1HourCurrentDiscardClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 3, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourCurrentDiscardClp0And1InCells.setStatus('current')
nncVpl1HourCurrentDiscardClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 3, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourCurrentDiscardClp0InCells.setStatus('current')
nncVpl1HourCurrentTaggedInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 3, 1, 7), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourCurrentTaggedInCells.setStatus('current')
nncVpl1HourCurrentClp0And1OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 3, 1, 8), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourCurrentClp0And1OutCells.setStatus('current')
nncVpl1HourCurrentClp0OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 3, 1, 9), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourCurrentClp0OutCells.setStatus('current')
nncVpl1HourCurrentRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 3, 1, 10), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nncVpl1HourCurrentRowStatus.setStatus('current')
nncVpl1HourIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 4), )
if mibBuilder.loadTexts: nncVpl1HourIntervalTable.setStatus('current')
nncVpl1HourIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"), (0, "NNC-ATM-STATISTICS-MIB", "nncVpl1HourIntervalNumber"))
if mibBuilder.loadTexts: nncVpl1HourIntervalEntry.setStatus('current')
nncVpl1HourIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 4, 1, 1), NncExtRelIntvlNumberType())
if mibBuilder.loadTexts: nncVpl1HourIntervalNumber.setStatus('current')
nncVpl1HourIntervalState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 4, 1, 2), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourIntervalState.setStatus('current')
nncVpl1HourIntervalAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 4, 1, 3), NncExtAbsIntvlNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourIntervalAbsoluteIntervalNumber.setStatus('current')
nncVpl1HourIntervalClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 4, 1, 4), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourIntervalClp0And1InCells.setStatus('current')
nncVpl1HourIntervalClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 4, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourIntervalClp0InCells.setStatus('current')
nncVpl1HourIntervalDiscardClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 4, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourIntervalDiscardClp0And1InCells.setStatus('current')
nncVpl1HourIntervalDiscardClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 4, 1, 7), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourIntervalDiscardClp0InCells.setStatus('current')
nncVpl1HourIntervalTaggedInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 4, 1, 8), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourIntervalTaggedInCells.setStatus('current')
nncVpl1HourIntervalClp0And1OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 4, 1, 9), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourIntervalClp0And1OutCells.setStatus('current')
nncVpl1HourIntervalClp0OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 4, 1, 10), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpl1HourIntervalClp0OutCells.setStatus('current')
nncVplStatTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 10), )
if mibBuilder.loadTexts: nncVplStatTable.setStatus('current')
nncVplStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 10, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"))
if mibBuilder.loadTexts: nncVplStatEntry.setStatus('current')
nncVplStatClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 10, 1, 1), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVplStatClp0And1InCells.setStatus('current')
nncVplStatClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 10, 1, 2), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVplStatClp0InCells.setStatus('current')
nncVplStatDiscardClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 10, 1, 3), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVplStatDiscardClp0And1InCells.setStatus('current')
nncVplStatDiscardClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 10, 1, 4), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVplStatDiscardClp0InCells.setStatus('current')
nncVplStatTaggedInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 10, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVplStatTaggedInCells.setStatus('current')
nncVplStatClp0And1OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 10, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVplStatClp0And1OutCells.setStatus('current')
nncVplStatClp0OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 10, 1, 7), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVplStatClp0OutCells.setStatus('current')
nncVcl15MinCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 5), )
if mibBuilder.loadTexts: nncVcl15MinCurrentTable.setStatus('current')
nncVcl15MinCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVclVpi"), (0, "ATM-MIB", "atmVclVci"))
if mibBuilder.loadTexts: nncVcl15MinCurrentEntry.setStatus('current')
nncVcl15MinCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 5, 1, 1), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinCurrentState.setStatus('current')
nncVcl15MinCurrentAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 5, 1, 2), NncExtAbsIntvlNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinCurrentAbsoluteIntervalNumber.setStatus('current')
nncVcl15MinCurrentClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 5, 1, 3), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinCurrentClp0And1InCells.setStatus('current')
nncVcl15MinCurrentClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 5, 1, 4), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinCurrentClp0InCells.setStatus('current')
nncVcl15MinCurrentDiscardClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 5, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinCurrentDiscardClp0And1InCells.setStatus('current')
nncVcl15MinCurrentDiscardClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 5, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinCurrentDiscardClp0InCells.setStatus('current')
nncVcl15MinCurrentTaggedInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 5, 1, 7), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinCurrentTaggedInCells.setStatus('current')
nncVcl15MinCurrentClp0And1OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 5, 1, 8), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinCurrentClp0And1OutCells.setStatus('current')
nncVcl15MinCurrentClp0OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 5, 1, 9), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinCurrentClp0OutCells.setStatus('current')
nncVcl15MinIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 6), )
if mibBuilder.loadTexts: nncVcl15MinIntervalTable.setStatus('current')
nncVcl15MinIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVclVpi"), (0, "ATM-MIB", "atmVclVci"), (0, "NNC-ATM-STATISTICS-MIB", "nncVcl15MinIntervalNumber"))
if mibBuilder.loadTexts: nncVcl15MinIntervalEntry.setStatus('current')
nncVcl15MinIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 6, 1, 1), NncExtRelIntvlNumberType())
if mibBuilder.loadTexts: nncVcl15MinIntervalNumber.setStatus('current')
nncVcl15MinIntervalState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 6, 1, 2), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinIntervalState.setStatus('current')
nncVcl15MinIntervalAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 6, 1, 3), NncExtAbsIntvlNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinIntervalAbsoluteIntervalNumber.setStatus('current')
nncVcl15MinIntervalClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 6, 1, 4), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinIntervalClp0And1InCells.setStatus('current')
nncVcl15MinIntervalClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 6, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinIntervalClp0InCells.setStatus('current')
nncVcl15MinIntervalDiscardClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 6, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinIntervalDiscardClp0And1InCells.setStatus('current')
nncVcl15MinIntervalDiscardClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 6, 1, 7), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinIntervalDiscardClp0InCells.setStatus('current')
nncVcl15MinIntervalTaggedInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 6, 1, 8), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinIntervalTaggedInCells.setStatus('current')
nncVcl15MinIntervalClp0And1OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 6, 1, 9), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinIntervalClp0And1OutCells.setStatus('current')
nncVcl15MinIntervalClp0OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 6, 1, 10), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl15MinIntervalClp0OutCells.setStatus('current')
nncVcl1HourCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 7), )
if mibBuilder.loadTexts: nncVcl1HourCurrentTable.setStatus('current')
nncVcl1HourCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVclVpi"), (0, "ATM-MIB", "atmVclVci"))
if mibBuilder.loadTexts: nncVcl1HourCurrentEntry.setStatus('current')
nncVcl1HourCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 7, 1, 1), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourCurrentState.setStatus('current')
nncVcl1HourCurrentAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 7, 1, 2), NncExtAbsIntvlNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourCurrentAbsoluteIntervalNumber.setStatus('current')
nncVcl1HourCurrentClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 7, 1, 3), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourCurrentClp0And1InCells.setStatus('current')
nncVcl1HourCurrentClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 7, 1, 4), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourCurrentClp0InCells.setStatus('current')
nncVcl1HourCurrentDiscardClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 7, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourCurrentDiscardClp0And1InCells.setStatus('current')
nncVcl1HourCurrentDiscardClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 7, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourCurrentDiscardClp0InCells.setStatus('current')
nncVcl1HourCurrentTaggedInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 7, 1, 7), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourCurrentTaggedInCells.setStatus('current')
nncVcl1HourCurrentClp0And1OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 7, 1, 8), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourCurrentClp0And1OutCells.setStatus('current')
nncVcl1HourCurrentClp0OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 7, 1, 9), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourCurrentClp0OutCells.setStatus('current')
nncVcl1HourCurrentRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 7, 1, 10), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nncVcl1HourCurrentRowStatus.setStatus('current')
nncVcl1HourIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 8), )
if mibBuilder.loadTexts: nncVcl1HourIntervalTable.setStatus('current')
nncVcl1HourIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVclVpi"), (0, "ATM-MIB", "atmVclVci"), (0, "NNC-ATM-STATISTICS-MIB", "nncVcl1HourIntervalNumber"))
if mibBuilder.loadTexts: nncVcl1HourIntervalEntry.setStatus('current')
nncVcl1HourIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 8, 1, 1), NncExtRelIntvlNumberType())
if mibBuilder.loadTexts: nncVcl1HourIntervalNumber.setStatus('current')
nncVcl1HourIntervalState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 8, 1, 2), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourIntervalState.setStatus('current')
nncVcl1HourIntervalAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 8, 1, 3), NncExtAbsIntvlNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourIntervalAbsoluteIntervalNumber.setStatus('current')
nncVcl1HourIntervalClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 8, 1, 4), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourIntervalClp0And1InCells.setStatus('current')
nncVcl1HourIntervalClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 8, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourIntervalClp0InCells.setStatus('current')
nncVcl1HourIntervalDiscardClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 8, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourIntervalDiscardClp0And1InCells.setStatus('current')
nncVcl1HourIntervalDiscardClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 8, 1, 7), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourIntervalDiscardClp0InCells.setStatus('current')
nncVcl1HourIntervalTaggedInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 8, 1, 8), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourIntervalTaggedInCells.setStatus('current')
nncVcl1HourIntervalClp0And1OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 8, 1, 9), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourIntervalClp0And1OutCells.setStatus('current')
nncVcl1HourIntervalClp0OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 8, 1, 10), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVcl1HourIntervalClp0OutCells.setStatus('current')
nncVclStatTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 11), )
if mibBuilder.loadTexts: nncVclStatTable.setStatus('current')
nncVclStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 11, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVclVpi"), (0, "ATM-MIB", "atmVclVci"))
if mibBuilder.loadTexts: nncVclStatEntry.setStatus('current')
nncVclStatClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 11, 1, 1), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVclStatClp0And1InCells.setStatus('current')
nncVclStatClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 11, 1, 2), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVclStatClp0InCells.setStatus('current')
nncVclStatDiscardClp0And1InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 11, 1, 3), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVclStatDiscardClp0And1InCells.setStatus('current')
nncVclStatDiscardClp0InCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 11, 1, 4), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVclStatDiscardClp0InCells.setStatus('current')
nncVclStatTaggedInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 11, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVclStatTaggedInCells.setStatus('current')
nncVclStatClp0And1OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 11, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVclStatClp0And1OutCells.setStatus('current')
nncVclStatClp0OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 11, 1, 7), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVclStatClp0OutCells.setStatus('current')
nncAtmVplStatCounterTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 12), )
if mibBuilder.loadTexts: nncAtmVplStatCounterTable.setStatus('current')
nncAtmVplStatCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 12, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"), (0, "NNC-ATM-STATISTICS-MIB", "nncAtmVplStatCounterIndex"))
if mibBuilder.loadTexts: nncAtmVplStatCounterEntry.setStatus('current')
nncAtmVplStatCounterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("hourly", 1), ("daily", 2), ("monthly", 3), ("interval", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmVplStatCounterIndex.setStatus('current')
nncAtmVplStatCounterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmVplStatCounterValue.setStatus('current')
nncAtmVclStatCounterTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 13), )
if mibBuilder.loadTexts: nncAtmVclStatCounterTable.setStatus('current')
nncAtmVclStatCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 13, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVclVpi"), (0, "ATM-MIB", "atmVclVci"), (0, "NNC-ATM-STATISTICS-MIB", "nncAtmVclStatCounterIndex"))
if mibBuilder.loadTexts: nncAtmVclStatCounterEntry.setStatus('current')
nncAtmVclStatCounterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("hourly", 1), ("daily", 2), ("monthly", 3), ("interval", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmVclStatCounterIndex.setStatus('current')
nncAtmVclStatCounterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmVclStatCounterValue.setStatus('current')
nncVpa15MinCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 15), )
if mibBuilder.loadTexts: nncVpa15MinCurrentTable.setStatus('current')
nncVpa15MinCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 15, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"))
if mibBuilder.loadTexts: nncVpa15MinCurrentEntry.setStatus('current')
nncVpa15MinCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 15, 1, 1), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa15MinCurrentState.setStatus('current')
nncVpa15MinCurrentAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa15MinCurrentAbsoluteIntervalNumber.setStatus('current')
nncVpa15MinCurrentClp0And1OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 15, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa15MinCurrentClp0And1OutCells.setStatus('current')
nncVpa15MinCurrentDiscardClp0And1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 15, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa15MinCurrentDiscardClp0And1Cells.setStatus('current')
nncVpa15MinCurrentDiscardClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 15, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa15MinCurrentDiscardClp0Cells.setStatus('current')
nncVpa15MinIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 16), )
if mibBuilder.loadTexts: nncVpa15MinIntervalTable.setStatus('current')
nncVpa15MinIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 16, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"), (0, "NNC-ATM-STATISTICS-MIB", "nncVpa15MinIntervalNumber"))
if mibBuilder.loadTexts: nncVpa15MinIntervalEntry.setStatus('current')
nncVpa15MinIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 16, 1, 1), Integer32())
if mibBuilder.loadTexts: nncVpa15MinIntervalNumber.setStatus('current')
nncVpa15MinIntervalState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 16, 1, 2), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa15MinIntervalState.setStatus('current')
nncVpa15MinIntervalAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 16, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa15MinIntervalAbsoluteIntervalNumber.setStatus('current')
nncVpa15MinIntervalClp0And1OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 16, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa15MinIntervalClp0And1OutCells.setStatus('current')
nncVpa15MinIntervalDiscardClp0And1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 16, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa15MinIntervalDiscardClp0And1Cells.setStatus('current')
nncVpa15MinIntervalDiscardClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 16, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa15MinIntervalDiscardClp0Cells.setStatus('current')
nncVpa1HourCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 17), )
if mibBuilder.loadTexts: nncVpa1HourCurrentTable.setStatus('current')
nncVpa1HourCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 17, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"))
if mibBuilder.loadTexts: nncVpa1HourCurrentEntry.setStatus('current')
nncVpa1HourCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 17, 1, 1), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa1HourCurrentState.setStatus('current')
nncVpa1HourCurrentAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 17, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa1HourCurrentAbsoluteIntervalNumber.setStatus('current')
nncVpa1HourCurrentClp0And1OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 17, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa1HourCurrentClp0And1OutCells.setStatus('current')
nncVpa1HourCurrentDiscardClp0And1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 17, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa1HourCurrentDiscardClp0And1Cells.setStatus('current')
nncVpa1HourCurrentDiscardClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 17, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa1HourCurrentDiscardClp0Cells.setStatus('current')
nncVpa1HourIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 18), )
if mibBuilder.loadTexts: nncVpa1HourIntervalTable.setStatus('current')
nncVpa1HourIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 18, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"), (0, "NNC-ATM-STATISTICS-MIB", "nncVpa1HourIntervalNumber"))
if mibBuilder.loadTexts: nncVpa1HourIntervalEntry.setStatus('current')
nncVpa1HourIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 18, 1, 1), Integer32())
if mibBuilder.loadTexts: nncVpa1HourIntervalNumber.setStatus('current')
nncVpa1HourIntervalState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 18, 1, 2), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa1HourIntervalState.setStatus('current')
nncVpa1HourIntervalAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 18, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa1HourIntervalAbsoluteIntervalNumber.setStatus('current')
nncVpa1HourIntervalClp0And1OutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 18, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa1HourIntervalClp0And1OutCells.setStatus('current')
nncVpa1HourIntervalDiscardClp0And1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 18, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa1HourIntervalDiscardClp0And1Cells.setStatus('current')
nncVpa1HourIntervalDiscardClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 18, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVpa1HourIntervalDiscardClp0Cells.setStatus('current')
nncDepthOf15MinHistoricalStrata = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 9), NncExtRelIntvlNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncDepthOf15MinHistoricalStrata.setStatus('current')
nncDepthOf1HourHistoricalStrata = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 29, 1, 14), NncExtRelIntvlNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncDepthOf1HourHistoricalStrata.setStatus('current')
nncVpl15MinCurrentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 1)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVpl15MinCurrentAbsoluteIntervalNumber"), ("NNC-ATM-STATISTICS-MIB", "nncVpl15MinCurrentClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl15MinCurrentClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl15MinCurrentDiscardClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl15MinCurrentDiscardClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl15MinCurrentTaggedInCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl15MinCurrentClp0And1OutCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl15MinCurrentClp0OutCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVpl15MinCurrentGroup = nncVpl15MinCurrentGroup.setStatus('current')
nncVpl15MinIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 2)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVpl15MinIntervalAbsoluteIntervalNumber"), ("NNC-ATM-STATISTICS-MIB", "nncVpl15MinIntervalClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl15MinIntervalClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl15MinIntervalDiscardClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl15MinIntervalDiscardClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl15MinIntervalTaggedInCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl15MinIntervalClp0And1OutCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl15MinIntervalClp0OutCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVpl15MinIntervalGroup = nncVpl15MinIntervalGroup.setStatus('current')
nncVpl1HourCurrentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 3)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVpl1HourCurrentAbsoluteIntervalNumber"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourCurrentClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourCurrentClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourCurrentDiscardClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourCurrentDiscardClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourCurrentTaggedInCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourCurrentClp0And1OutCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourCurrentClp0OutCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourCurrentRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVpl1HourCurrentGroup = nncVpl1HourCurrentGroup.setStatus('current')
nncVpl1HourIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 4)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVpl1HourIntervalAbsoluteIntervalNumber"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourIntervalClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourIntervalClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourIntervalDiscardClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourIntervalDiscardClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourIntervalTaggedInCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourIntervalClp0And1OutCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourIntervalClp0OutCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVpl1HourIntervalGroup = nncVpl1HourIntervalGroup.setStatus('current')
nncVplStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 9)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVplStatClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVplStatClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVplStatDiscardClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVplStatDiscardClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVplStatTaggedInCells"), ("NNC-ATM-STATISTICS-MIB", "nncVplStatClp0And1OutCells"), ("NNC-ATM-STATISTICS-MIB", "nncVplStatClp0OutCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVplStatGroup = nncVplStatGroup.setStatus('current')
nncVcl15MinCurrentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 5)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVcl15MinCurrentState"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinCurrentAbsoluteIntervalNumber"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinCurrentClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinCurrentClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinCurrentDiscardClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinCurrentDiscardClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinCurrentTaggedInCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinCurrentClp0And1OutCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinCurrentClp0OutCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVcl15MinCurrentGroup = nncVcl15MinCurrentGroup.setStatus('current')
nncVcl15MinIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 6)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVcl15MinIntervalAbsoluteIntervalNumber"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinIntervalClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinIntervalClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinIntervalDiscardClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinIntervalDiscardClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinIntervalTaggedInCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinIntervalClp0And1OutCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinIntervalClp0OutCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVcl15MinIntervalGroup = nncVcl15MinIntervalGroup.setStatus('current')
nncVcl1HourCurrentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 7)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVcl1HourCurrentState"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourCurrentAbsoluteIntervalNumber"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourCurrentClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourCurrentClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourCurrentDiscardClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourCurrentDiscardClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourCurrentTaggedInCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourCurrentClp0And1OutCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourCurrentClp0OutCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourCurrentRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVcl1HourCurrentGroup = nncVcl1HourCurrentGroup.setStatus('current')
nncVcl1HourIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 8)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVcl1HourIntervalAbsoluteIntervalNumber"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourIntervalClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourIntervalClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourIntervalDiscardClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourIntervalDiscardClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourIntervalTaggedInCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourIntervalClp0And1OutCells"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourIntervalClp0OutCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVcl1HourIntervalGroup = nncVcl1HourIntervalGroup.setStatus('current')
nncVclStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 10)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVclStatClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVclStatClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVclStatDiscardClp0And1InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVclStatDiscardClp0InCells"), ("NNC-ATM-STATISTICS-MIB", "nncVclStatTaggedInCells"), ("NNC-ATM-STATISTICS-MIB", "nncVclStatClp0And1OutCells"), ("NNC-ATM-STATISTICS-MIB", "nncVclStatClp0OutCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVclStatGroup = nncVclStatGroup.setStatus('current')
nncVplIntervalStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 11)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVpl15MinCurrentState"), ("NNC-ATM-STATISTICS-MIB", "nncVpl15MinIntervalState"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourCurrentState"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourIntervalState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVplIntervalStateGroup = nncVplIntervalStateGroup.setStatus('current')
nncVclIntervalStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 12)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVcl15MinCurrentState"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinIntervalState"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourCurrentState"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourIntervalState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVclIntervalStateGroup = nncVclIntervalStateGroup.setStatus('current')
nncVplStatCounterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 13)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncAtmVplStatCounterIndex"), ("NNC-ATM-STATISTICS-MIB", "nncAtmVplStatCounterValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVplStatCounterGroup = nncVplStatCounterGroup.setStatus('current')
nncVclStatCounterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 14)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncAtmVclStatCounterIndex"), ("NNC-ATM-STATISTICS-MIB", "nncAtmVclStatCounterValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVclStatCounterGroup = nncVclStatCounterGroup.setStatus('current')
nncDepthOfHistoricalStrataGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 15)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncDepthOf15MinHistoricalStrata"), ("NNC-ATM-STATISTICS-MIB", "nncDepthOf1HourHistoricalStrata"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncDepthOfHistoricalStrataGroup = nncDepthOfHistoricalStrataGroup.setStatus('current')
nncVpa15MinCurrentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 16)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVpa15MinCurrentState"), ("NNC-ATM-STATISTICS-MIB", "nncVpa15MinCurrentAbsoluteIntervalNumber"), ("NNC-ATM-STATISTICS-MIB", "nncVpa15MinCurrentClp0And1OutCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpa15MinCurrentDiscardClp0And1Cells"), ("NNC-ATM-STATISTICS-MIB", "nncVpa15MinCurrentDiscardClp0Cells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVpa15MinCurrentGroup = nncVpa15MinCurrentGroup.setStatus('current')
nncVpa15MinIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 17)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVpa15MinIntervalNumber"), ("NNC-ATM-STATISTICS-MIB", "nncVpa15MinIntervalState"), ("NNC-ATM-STATISTICS-MIB", "nncVpa15MinIntervalAbsoluteIntervalNumber"), ("NNC-ATM-STATISTICS-MIB", "nncVpa15MinIntervalClp0And1OutCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpa15MinIntervalDiscardClp0And1Cells"), ("NNC-ATM-STATISTICS-MIB", "nncVpa15MinIntervalDiscardClp0Cells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVpa15MinIntervalGroup = nncVpa15MinIntervalGroup.setStatus('current')
nncVpa1HourCurrentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 18)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVpa1HourCurrentState"), ("NNC-ATM-STATISTICS-MIB", "nncVpa1HourCurrentAbsoluteIntervalNumber"), ("NNC-ATM-STATISTICS-MIB", "nncVpa1HourCurrentClp0And1OutCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpa1HourCurrentDiscardClp0And1Cells"), ("NNC-ATM-STATISTICS-MIB", "nncVpa1HourCurrentDiscardClp0Cells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVpa1HourCurrentGroup = nncVpa1HourCurrentGroup.setStatus('current')
nncVpa1HourIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 29, 3, 19)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVpa1HourIntervalNumber"), ("NNC-ATM-STATISTICS-MIB", "nncVpa1HourIntervalState"), ("NNC-ATM-STATISTICS-MIB", "nncVpa1HourIntervalAbsoluteIntervalNumber"), ("NNC-ATM-STATISTICS-MIB", "nncVpa1HourIntervalClp0And1OutCells"), ("NNC-ATM-STATISTICS-MIB", "nncVpa1HourIntervalDiscardClp0And1Cells"), ("NNC-ATM-STATISTICS-MIB", "nncVpa1HourIntervalDiscardClp0Cells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVpa1HourIntervalGroup = nncVpa1HourIntervalGroup.setStatus('current')
nncAtmStatisticsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 123, 3, 29, 4, 1)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVpl15MinCurrentGroup"), ("NNC-ATM-STATISTICS-MIB", "nncVpl1HourCurrentGroup"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinCurrentGroup"), ("NNC-ATM-STATISTICS-MIB", "nncVcl1HourCurrentGroup"), ("NNC-ATM-STATISTICS-MIB", "nncVplIntervalStateGroup"), ("NNC-ATM-STATISTICS-MIB", "nncVclIntervalStateGroup"), ("NNC-ATM-STATISTICS-MIB", "nncVpa15MinCurrentGroup"), ("NNC-ATM-STATISTICS-MIB", "nncVpa15MinIntervalGroup"), ("NNC-ATM-STATISTICS-MIB", "nncVpa1HourCurrentGroup"), ("NNC-ATM-STATISTICS-MIB", "nncVpa1HourIntervalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncAtmStatisticsCompliance = nncAtmStatisticsCompliance.setStatus('current')
nncAtmStatisticsServiceCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 123, 3, 29, 4, 2)).setObjects(("NNC-ATM-STATISTICS-MIB", "nncVpl15MinIntervalGroup"), ("NNC-ATM-STATISTICS-MIB", "nncVcl15MinIntervalGroup"), ("NNC-ATM-STATISTICS-MIB", "nncVplStatCounterGroup"), ("NNC-ATM-STATISTICS-MIB", "nncVclStatCounterGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncAtmStatisticsServiceCompliance = nncAtmStatisticsServiceCompliance.setStatus('current')
mibBuilder.exportSymbols("NNC-ATM-STATISTICS-MIB", nncVcl1HourIntervalDiscardClp0And1InCells=nncVcl1HourIntervalDiscardClp0And1InCells, nncVcl15MinIntervalAbsoluteIntervalNumber=nncVcl15MinIntervalAbsoluteIntervalNumber, nncVpl15MinIntervalTaggedInCells=nncVpl15MinIntervalTaggedInCells, nncVpa1HourIntervalNumber=nncVpa1HourIntervalNumber, nncVpl15MinCurrentDiscardClp0And1InCells=nncVpl15MinCurrentDiscardClp0And1InCells, nncVcl1HourCurrentState=nncVcl1HourCurrentState, nncVpa1HourCurrentEntry=nncVpa1HourCurrentEntry, nncVcl15MinIntervalTable=nncVcl15MinIntervalTable, nncVcl1HourIntervalClp0OutCells=nncVcl1HourIntervalClp0OutCells, nncVpl1HourIntervalClp0And1OutCells=nncVpl1HourIntervalClp0And1OutCells, nncVcl15MinCurrentAbsoluteIntervalNumber=nncVcl15MinCurrentAbsoluteIntervalNumber, nncVpl15MinCurrentClp0And1InCells=nncVpl15MinCurrentClp0And1InCells, nncAtmVclStatCounterValue=nncAtmVclStatCounterValue, nncVpl1HourIntervalTable=nncVpl1HourIntervalTable, nncVcl1HourIntervalEntry=nncVcl1HourIntervalEntry, nncVpl15MinCurrentClp0And1OutCells=nncVpl15MinCurrentClp0And1OutCells, nncVcl15MinCurrentClp0And1OutCells=nncVcl15MinCurrentClp0And1OutCells, nncVpl1HourIntervalState=nncVpl1HourIntervalState, nncVpl15MinCurrentEntry=nncVpl15MinCurrentEntry, nncVpa15MinCurrentClp0And1OutCells=nncVpa15MinCurrentClp0And1OutCells, nncVpl15MinIntervalNumber=nncVpl15MinIntervalNumber, nncVpl15MinIntervalDiscardClp0And1InCells=nncVpl15MinIntervalDiscardClp0And1InCells, nncVpl1HourIntervalClp0InCells=nncVpl1HourIntervalClp0InCells, nncVpl1HourIntervalEntry=nncVpl1HourIntervalEntry, nncVpl15MinCurrentTable=nncVpl15MinCurrentTable, nncVpl15MinIntervalClp0And1InCells=nncVpl15MinIntervalClp0And1InCells, nncVcl15MinCurrentDiscardClp0And1InCells=nncVcl15MinCurrentDiscardClp0And1InCells, nncVpl15MinIntervalGroup=nncVpl15MinIntervalGroup, PYSNMP_MODULE_ID=nncAtmStatistics, nncVpl1HourIntervalNumber=nncVpl1HourIntervalNumber, nncVclStatTaggedInCells=nncVclStatTaggedInCells, nncVcl15MinIntervalClp0OutCells=nncVcl15MinIntervalClp0OutCells, nncVcl1HourCurrentClp0OutCells=nncVcl1HourCurrentClp0OutCells, nncVpa1HourCurrentTable=nncVpa1HourCurrentTable, nncAtmStatisticsCompliances=nncAtmStatisticsCompliances, nncVcl15MinIntervalTaggedInCells=nncVcl15MinIntervalTaggedInCells, nncAtmVplStatCounterTable=nncAtmVplStatCounterTable, nncVpa1HourIntervalDiscardClp0And1Cells=nncVpa1HourIntervalDiscardClp0And1Cells, nncAtmVclStatCounterEntry=nncAtmVclStatCounterEntry, nncVcl1HourIntervalClp0InCells=nncVcl1HourIntervalClp0InCells, nncVpa15MinCurrentDiscardClp0And1Cells=nncVpa15MinCurrentDiscardClp0And1Cells, nncVpl1HourCurrentRowStatus=nncVpl1HourCurrentRowStatus, nncVcl1HourCurrentDiscardClp0And1InCells=nncVcl1HourCurrentDiscardClp0And1InCells, nncVplStatClp0And1OutCells=nncVplStatClp0And1OutCells, nncVplStatClp0And1InCells=nncVplStatClp0And1InCells, nncVcl15MinIntervalDiscardClp0InCells=nncVcl15MinIntervalDiscardClp0InCells, nncVpa15MinCurrentAbsoluteIntervalNumber=nncVpa15MinCurrentAbsoluteIntervalNumber, nncVpa15MinIntervalNumber=nncVpa15MinIntervalNumber, nncVclStatGroup=nncVclStatGroup, nncVpl15MinCurrentClp0OutCells=nncVpl15MinCurrentClp0OutCells, nncVpa15MinCurrentEntry=nncVpa15MinCurrentEntry, nncVpl1HourCurrentDiscardClp0InCells=nncVpl1HourCurrentDiscardClp0InCells, nncVcl15MinCurrentTaggedInCells=nncVcl15MinCurrentTaggedInCells, nncVplStatDiscardClp0And1InCells=nncVplStatDiscardClp0And1InCells, nncVcl15MinCurrentClp0InCells=nncVcl15MinCurrentClp0InCells, nncVcl1HourIntervalClp0And1InCells=nncVcl1HourIntervalClp0And1InCells, nncVpa1HourIntervalGroup=nncVpa1HourIntervalGroup, nncVpa1HourCurrentDiscardClp0And1Cells=nncVpa1HourCurrentDiscardClp0And1Cells, nncVpl1HourIntervalClp0OutCells=nncVpl1HourIntervalClp0OutCells, nncAtmStatisticsServiceCompliance=nncAtmStatisticsServiceCompliance, nncVpl1HourCurrentTaggedInCells=nncVpl1HourCurrentTaggedInCells, nncDepthOfHistoricalStrataGroup=nncDepthOfHistoricalStrataGroup, nncVpa1HourCurrentAbsoluteIntervalNumber=nncVpa1HourCurrentAbsoluteIntervalNumber, nncVpa15MinIntervalGroup=nncVpa15MinIntervalGroup, nncVpa15MinCurrentGroup=nncVpa15MinCurrentGroup, nncVpa15MinIntervalAbsoluteIntervalNumber=nncVpa15MinIntervalAbsoluteIntervalNumber, nncVplStatDiscardClp0InCells=nncVplStatDiscardClp0InCells, nncVpl1HourCurrentClp0InCells=nncVpl1HourCurrentClp0InCells, nncVpl1HourCurrentClp0And1InCells=nncVpl1HourCurrentClp0And1InCells, nncVpa1HourCurrentGroup=nncVpa1HourCurrentGroup, nncVpa15MinCurrentDiscardClp0Cells=nncVpa15MinCurrentDiscardClp0Cells, nncVcl1HourCurrentTable=nncVcl1HourCurrentTable, nncVpl15MinCurrentGroup=nncVpl15MinCurrentGroup, nncAtmStatisticsTraps=nncAtmStatisticsTraps, nncVplStatGroup=nncVplStatGroup, nncAtmStatisticsCompliance=nncAtmStatisticsCompliance, nncVcl15MinIntervalClp0And1InCells=nncVcl15MinIntervalClp0And1InCells, nncVclStatClp0And1OutCells=nncVclStatClp0And1OutCells, nncDepthOf15MinHistoricalStrata=nncDepthOf15MinHistoricalStrata, nncVpl1HourIntervalDiscardClp0InCells=nncVpl1HourIntervalDiscardClp0InCells, nncVcl1HourCurrentAbsoluteIntervalNumber=nncVcl1HourCurrentAbsoluteIntervalNumber, nncVcl1HourCurrentRowStatus=nncVcl1HourCurrentRowStatus, nncAtmVplStatCounterIndex=nncAtmVplStatCounterIndex, nncVcl1HourCurrentGroup=nncVcl1HourCurrentGroup, nncVplStatClp0OutCells=nncVplStatClp0OutCells, nncAtmVplStatCounterValue=nncAtmVplStatCounterValue, nncVcl15MinCurrentGroup=nncVcl15MinCurrentGroup, nncVclStatClp0OutCells=nncVclStatClp0OutCells, nncVcl1HourIntervalClp0And1OutCells=nncVcl1HourIntervalClp0And1OutCells, nncVcl1HourIntervalTable=nncVcl1HourIntervalTable, nncVcl1HourCurrentClp0And1OutCells=nncVcl1HourCurrentClp0And1OutCells, nncVcl15MinIntervalClp0And1OutCells=nncVcl15MinIntervalClp0And1OutCells, nncAtmStatisticsObjects=nncAtmStatisticsObjects, nncVpa1HourCurrentClp0And1OutCells=nncVpa1HourCurrentClp0And1OutCells, nncVcl1HourIntervalDiscardClp0InCells=nncVcl1HourIntervalDiscardClp0InCells, nncVpl1HourIntervalAbsoluteIntervalNumber=nncVpl1HourIntervalAbsoluteIntervalNumber, nncVpl15MinIntervalClp0InCells=nncVpl15MinIntervalClp0InCells, nncVpl15MinCurrentAbsoluteIntervalNumber=nncVpl15MinCurrentAbsoluteIntervalNumber, nncVpl15MinIntervalAbsoluteIntervalNumber=nncVpl15MinIntervalAbsoluteIntervalNumber, nncVpa15MinIntervalDiscardClp0And1Cells=nncVpa15MinIntervalDiscardClp0And1Cells, nncVcl1HourCurrentDiscardClp0InCells=nncVcl1HourCurrentDiscardClp0InCells, nncVcl1HourIntervalState=nncVcl1HourIntervalState, nncVclStatTable=nncVclStatTable, nncVplIntervalStateGroup=nncVplIntervalStateGroup, nncVpl15MinCurrentState=nncVpl15MinCurrentState, nncVcl15MinIntervalGroup=nncVcl15MinIntervalGroup, nncVpl1HourCurrentState=nncVpl1HourCurrentState, nncVcl15MinCurrentClp0And1InCells=nncVcl15MinCurrentClp0And1InCells, nncVpl1HourCurrentGroup=nncVpl1HourCurrentGroup, nncVpl1HourIntervalDiscardClp0And1InCells=nncVpl1HourIntervalDiscardClp0And1InCells, nncVpl15MinIntervalState=nncVpl15MinIntervalState, nncVpl15MinIntervalClp0And1OutCells=nncVpl15MinIntervalClp0And1OutCells, nncVcl1HourIntervalNumber=nncVcl1HourIntervalNumber, nncVpl15MinIntervalDiscardClp0InCells=nncVpl15MinIntervalDiscardClp0InCells, nncVcl15MinCurrentTable=nncVcl15MinCurrentTable, nncVpa15MinIntervalTable=nncVpa15MinIntervalTable, nncVpl1HourCurrentTable=nncVpl1HourCurrentTable, nncVpa15MinIntervalClp0And1OutCells=nncVpa15MinIntervalClp0And1OutCells, nncAtmVplStatCounterEntry=nncAtmVplStatCounterEntry, nncVclIntervalStateGroup=nncVclIntervalStateGroup, nncVclStatClp0InCells=nncVclStatClp0InCells, nncVcl1HourCurrentClp0And1InCells=nncVcl1HourCurrentClp0And1InCells, nncVpa1HourIntervalEntry=nncVpa1HourIntervalEntry, nncVplStatTaggedInCells=nncVplStatTaggedInCells, nncVplStatEntry=nncVplStatEntry, nncVclStatDiscardClp0And1InCells=nncVclStatDiscardClp0And1InCells, nncVpa1HourCurrentState=nncVpa1HourCurrentState, nncVclStatCounterGroup=nncVclStatCounterGroup, nncAtmStatistics=nncAtmStatistics, nncVpl1HourCurrentDiscardClp0And1InCells=nncVpl1HourCurrentDiscardClp0And1InCells, nncVpa1HourIntervalDiscardClp0Cells=nncVpa1HourIntervalDiscardClp0Cells, nncVcl15MinIntervalDiscardClp0And1InCells=nncVcl15MinIntervalDiscardClp0And1InCells, nncVclStatClp0And1InCells=nncVclStatClp0And1InCells, nncVpa1HourIntervalAbsoluteIntervalNumber=nncVpa1HourIntervalAbsoluteIntervalNumber, nncVcl15MinCurrentState=nncVcl15MinCurrentState, nncVcl15MinCurrentEntry=nncVcl15MinCurrentEntry, nncVpa15MinIntervalEntry=nncVpa15MinIntervalEntry, nncVplStatClp0InCells=nncVplStatClp0InCells, nncVcl1HourIntervalAbsoluteIntervalNumber=nncVcl1HourIntervalAbsoluteIntervalNumber, nncVcl1HourCurrentClp0InCells=nncVcl1HourCurrentClp0InCells, nncVpa1HourIntervalTable=nncVpa1HourIntervalTable, nncVcl1HourIntervalGroup=nncVcl1HourIntervalGroup, nncVpa1HourCurrentDiscardClp0Cells=nncVpa1HourCurrentDiscardClp0Cells, nncVpl15MinIntervalEntry=nncVpl15MinIntervalEntry, nncAtmVclStatCounterTable=nncAtmVclStatCounterTable, nncVcl15MinIntervalNumber=nncVcl15MinIntervalNumber, nncVpl1HourCurrentEntry=nncVpl1HourCurrentEntry, nncVpl15MinCurrentDiscardClp0InCells=nncVpl15MinCurrentDiscardClp0InCells, nncVpa15MinCurrentTable=nncVpa15MinCurrentTable, nncVpl15MinIntervalClp0OutCells=nncVpl15MinIntervalClp0OutCells, nncVcl15MinCurrentClp0OutCells=nncVcl15MinCurrentClp0OutCells, nncVcl1HourCurrentTaggedInCells=nncVcl1HourCurrentTaggedInCells, nncVcl15MinIntervalState=nncVcl15MinIntervalState, nncVcl15MinIntervalClp0InCells=nncVcl15MinIntervalClp0InCells, nncVpl1HourCurrentClp0OutCells=nncVpl1HourCurrentClp0OutCells, nncVpa15MinIntervalDiscardClp0Cells=nncVpa15MinIntervalDiscardClp0Cells, nncVpa1HourIntervalState=nncVpa1HourIntervalState, nncVpa15MinCurrentState=nncVpa15MinCurrentState, nncVpl1HourIntervalGroup=nncVpl1HourIntervalGroup, nncVpl15MinIntervalTable=nncVpl15MinIntervalTable, nncVpl1HourCurrentClp0And1OutCells=nncVpl1HourCurrentClp0And1OutCells, nncVcl1HourCurrentEntry=nncVcl1HourCurrentEntry, nncAtmVclStatCounterIndex=nncAtmVclStatCounterIndex, nncVplStatCounterGroup=nncVplStatCounterGroup, nncVplStatTable=nncVplStatTable, nncVpa15MinIntervalState=nncVpa15MinIntervalState, nncVcl15MinCurrentDiscardClp0InCells=nncVcl15MinCurrentDiscardClp0InCells, nncVclStatDiscardClp0InCells=nncVclStatDiscardClp0InCells, nncVpl15MinCurrentClp0InCells=nncVpl15MinCurrentClp0InCells, nncDepthOf1HourHistoricalStrata=nncDepthOf1HourHistoricalStrata, nncAtmStatisticsGroups=nncAtmStatisticsGroups, nncVclStatEntry=nncVclStatEntry, nncVpl15MinCurrentTaggedInCells=nncVpl15MinCurrentTaggedInCells, nncVpl1HourIntervalClp0And1InCells=nncVpl1HourIntervalClp0And1InCells, nncVpa1HourIntervalClp0And1OutCells=nncVpa1HourIntervalClp0And1OutCells, nncVpl1HourCurrentAbsoluteIntervalNumber=nncVpl1HourCurrentAbsoluteIntervalNumber, nncVcl1HourIntervalTaggedInCells=nncVcl1HourIntervalTaggedInCells, nncVpl1HourIntervalTaggedInCells=nncVpl1HourIntervalTaggedInCells, nncVcl15MinIntervalEntry=nncVcl15MinIntervalEntry)
