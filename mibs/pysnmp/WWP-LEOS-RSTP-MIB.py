#
# PySNMP MIB module WWP-LEOS-RSTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-RSTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
dot1dStpPort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dStpPort")
dot1dStpPortOperEdgePort, = mibBuilder.importSymbols("RSTP-MIB", "dot1dStpPortOperEdgePort")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, iso, ObjectIdentity, NotificationType, Counter64, Gauge32, Bits, ModuleIdentity, Counter32, Unsigned32, MibIdentifier, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "iso", "ObjectIdentity", "NotificationType", "Counter64", "Gauge32", "Bits", "ModuleIdentity", "Counter32", "Unsigned32", "MibIdentifier", "TimeTicks", "IpAddress")
MacAddress, RowStatus, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "TruthValue", "DisplayString", "TextualConvention")
wwpModules, wwpModulesLeos = mibBuilder.importSymbols("WWP-SMI", "wwpModules", "wwpModulesLeos")
wwpLeosRstpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13))
wwpLeosRstpMIB.setRevisions(('2011-08-02 00:00', '2001-04-03 17:00',))
if mibBuilder.loadTexts: wwpLeosRstpMIB.setLastUpdated('201108020000Z')
if mibBuilder.loadTexts: wwpLeosRstpMIB.setOrganization('Ciena, Inc')
wwpLeosRstpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1))
wwpLeosRstpDomain = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1))
wwpLeosRstpPortExt = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 2))
wwpLeosRstpLocalPortExt = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 3))
wwpLeosRstpMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 2))
wwpLeosRstpMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 2, 0))
wwpLeosRstpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 3))
wwpLeosRstpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 3, 1))
wwpLeosRstpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 3, 2))
wwpLeosRstpMode = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("rstp", 2), ("domain", 3), ("mstp", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRstpMode.setStatus('current')
wwpLeosRstpDomainTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 2), )
if mibBuilder.loadTexts: wwpLeosRstpDomainTable.setStatus('current')
wwpLeosRstpDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 2, 1), ).setIndexNames((0, "WWP-LEOS-RSTP-MIB", "wwpLeosRstpDomainId"))
if mibBuilder.loadTexts: wwpLeosRstpDomainEntry.setStatus('current')
wwpLeosRstpDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRstpDomainId.setStatus('current')
wwpLeosRstpDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 2, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosRstpDomainName.setStatus('current')
wwpLeosRstpDomainStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosRstpDomainStatus.setStatus('current')
wwpLeosRstpDomainMemTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 3), )
if mibBuilder.loadTexts: wwpLeosRstpDomainMemTable.setStatus('current')
wwpLeosRstpDomainMemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 3, 1), ).setIndexNames((0, "WWP-LEOS-RSTP-MIB", "wwpLeosRstpDomainId"), (0, "WWP-LEOS-RSTP-MIB", "wwpLeosRstpDomainPortId"))
if mibBuilder.loadTexts: wwpLeosRstpDomainMemEntry.setStatus('current')
wwpLeosRstpDomainPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRstpDomainPortId.setStatus('current')
wwpLeosRstpDomainMemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosRstpDomainMemStatus.setStatus('current')
wwpLeosRstpBridgeDomainAttrs = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 4))
wwpLeosRstpDomainAttrsForceVer = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("stp", 0), ("notDefined", 1), ("rstp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrsForceVer.setStatus('current')
wwpLeosRstpDomainAttrsForwardDelay = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrsForwardDelay.setStatus('current')
wwpLeosRstpDomainAttrsHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrsHelloTime.setStatus('current')
wwpLeosRstpDomainAttrsLoopBackBlock = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrsLoopBackBlock.setStatus('current')
wwpLeosRstpDomainAttrsMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrsMaxAge.setStatus('current')
wwpLeosRstpDomainAttrsPathCostDef = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrsPathCostDef.setStatus('current')
wwpLeosRstpDomainAttrsPriority = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 4, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrsPriority.setStatus('current')
wwpLeosRstpDomainAttrsTxHoldCount = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 4, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrsTxHoldCount.setStatus('current')
wwpLeosRstpDomainAttrTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 5), )
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrTable.setStatus('current')
wwpLeosRstpDomainAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 5, 1), ).setIndexNames((0, "WWP-LEOS-RSTP-MIB", "wwpLeosRstpDomainId"))
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrEntry.setStatus('current')
wwpLeosRstpDomainAttrDesignatedBridgePri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrDesignatedBridgePri.setStatus('current')
wwpLeosRstpDomainAttrDesignatedBridgeMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 5, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrDesignatedBridgeMac.setStatus('current')
wwpLeosRstpDomainAttrDesignatedRootPri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrDesignatedRootPri.setStatus('current')
wwpLeosRstpDomainAttrDesignatedRootMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 5, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrDesignatedRootMac.setStatus('current')
wwpLeosRstpDomainAttrRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrRootCost.setStatus('current')
wwpLeosRstpDomainAttrRootPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrRootPort.setStatus('current')
wwpLeosRstpDomainAttrMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrMaxAge.setStatus('current')
wwpLeosRstpDomainAttrHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrHelloTime.setStatus('current')
wwpLeosRstpDomainAttrHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrHoldTime.setStatus('current')
wwpLeosRstpDomainAttrForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrForwardDelay.setStatus('current')
wwpLeosRstpDomainAttrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRstpDomainAttrPriority.setStatus('current')
wwpLeosRstpMaxAgeEventInterval = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRstpMaxAgeEventInterval.setStatus('current')
wwpLeosRstpPortInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 2, 1), )
if mibBuilder.loadTexts: wwpLeosRstpPortInfoTable.setStatus('current')
wwpLeosRstpPortInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 2, 1, 1), ).setIndexNames((0, "WWP-LEOS-RSTP-MIB", "wwpLeosRstpPortId"))
if mibBuilder.loadTexts: wwpLeosRstpPortInfoEntry.setStatus('current')
wwpLeosRstpPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRstpPortId.setStatus('current')
wwpLeosRstpPortDesiginatedId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 2, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRstpPortDesiginatedId.setStatus('current')
wwpLeosRstpPortDesiginatedPid = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRstpPortDesiginatedPid.setStatus('current')
wwpLeosRstpLocalPortInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 3, 1), )
if mibBuilder.loadTexts: wwpLeosRstpLocalPortInfoTable.setStatus('current')
wwpLeosRstpLocalPortInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 3, 1, 1), ).setIndexNames((0, "WWP-LEOS-RSTP-MIB", "wwpLeosRstpPortId"))
if mibBuilder.loadTexts: wwpLeosRstpLocalPortInfoEntry.setStatus('current')
wwpLeosRstpPortDynPathCostState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRstpPortDynPathCostState.setStatus('current')
wwpLeosRstpPortBackupNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 2, 0, 1)).setObjects(("BRIDGE-MIB", "dot1dStpPort"))
if mibBuilder.loadTexts: wwpLeosRstpPortBackupNotification.setStatus('current')
wwpLeosRstpPvstBpduReceivedNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 2, 0, 2)).setObjects(("BRIDGE-MIB", "dot1dStpPort"))
if mibBuilder.loadTexts: wwpLeosRstpPvstBpduReceivedNotification.setStatus('deprecated')
wwpLeosRstpSelfLoopNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 2, 0, 3)).setObjects(("BRIDGE-MIB", "dot1dStpPort"))
if mibBuilder.loadTexts: wwpLeosRstpSelfLoopNotification.setStatus('current')
wwpLeosRstpPortOperEdgeNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 2, 0, 4)).setObjects(("BRIDGE-MIB", "dot1dStpPort"), ("RSTP-MIB", "dot1dStpPortOperEdgePort"))
if mibBuilder.loadTexts: wwpLeosRstpPortOperEdgeNotification.setStatus('current')
wwpLeosRstpPortFlapNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 2, 0, 5)).setObjects(("BRIDGE-MIB", "dot1dStpPort"))
if mibBuilder.loadTexts: wwpLeosRstpPortFlapNotification.setStatus('current')
wwpLeosRstpBridgeRootPortLostNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 13, 2, 0, 6)).setObjects(("BRIDGE-MIB", "dot1dStpPort"))
if mibBuilder.loadTexts: wwpLeosRstpBridgeRootPortLostNotification.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-RSTP-MIB", wwpLeosRstpDomainMemStatus=wwpLeosRstpDomainMemStatus, wwpLeosRstpDomainAttrMaxAge=wwpLeosRstpDomainAttrMaxAge, wwpLeosRstpPortDesiginatedId=wwpLeosRstpPortDesiginatedId, wwpLeosRstpMIBNotifications=wwpLeosRstpMIBNotifications, wwpLeosRstpLocalPortInfoTable=wwpLeosRstpLocalPortInfoTable, wwpLeosRstpDomainAttrForwardDelay=wwpLeosRstpDomainAttrForwardDelay, wwpLeosRstpMIBConformance=wwpLeosRstpMIBConformance, wwpLeosRstpMode=wwpLeosRstpMode, wwpLeosRstpDomainAttrDesignatedBridgeMac=wwpLeosRstpDomainAttrDesignatedBridgeMac, wwpLeosRstpDomainAttrTable=wwpLeosRstpDomainAttrTable, wwpLeosRstpMIBCompliances=wwpLeosRstpMIBCompliances, wwpLeosRstpDomainAttrsPathCostDef=wwpLeosRstpDomainAttrsPathCostDef, wwpLeosRstpDomainAttrEntry=wwpLeosRstpDomainAttrEntry, wwpLeosRstpDomainMemTable=wwpLeosRstpDomainMemTable, wwpLeosRstpMIB=wwpLeosRstpMIB, wwpLeosRstpDomainMemEntry=wwpLeosRstpDomainMemEntry, wwpLeosRstpDomainAttrHoldTime=wwpLeosRstpDomainAttrHoldTime, wwpLeosRstpDomainAttrsMaxAge=wwpLeosRstpDomainAttrsMaxAge, wwpLeosRstpDomainAttrsPriority=wwpLeosRstpDomainAttrsPriority, wwpLeosRstpPortFlapNotification=wwpLeosRstpPortFlapNotification, wwpLeosRstpDomainTable=wwpLeosRstpDomainTable, wwpLeosRstpDomainAttrsLoopBackBlock=wwpLeosRstpDomainAttrsLoopBackBlock, wwpLeosRstpPortDesiginatedPid=wwpLeosRstpPortDesiginatedPid, wwpLeosRstpMaxAgeEventInterval=wwpLeosRstpMaxAgeEventInterval, PYSNMP_MODULE_ID=wwpLeosRstpMIB, wwpLeosRstpBridgeRootPortLostNotification=wwpLeosRstpBridgeRootPortLostNotification, wwpLeosRstpBridgeDomainAttrs=wwpLeosRstpBridgeDomainAttrs, wwpLeosRstpDomainAttrHelloTime=wwpLeosRstpDomainAttrHelloTime, wwpLeosRstpLocalPortInfoEntry=wwpLeosRstpLocalPortInfoEntry, wwpLeosRstpDomainAttrDesignatedBridgePri=wwpLeosRstpDomainAttrDesignatedBridgePri, wwpLeosRstpDomainPortId=wwpLeosRstpDomainPortId, wwpLeosRstpPortOperEdgeNotification=wwpLeosRstpPortOperEdgeNotification, wwpLeosRstpDomainEntry=wwpLeosRstpDomainEntry, wwpLeosRstpDomainAttrDesignatedRootMac=wwpLeosRstpDomainAttrDesignatedRootMac, wwpLeosRstpDomainAttrDesignatedRootPri=wwpLeosRstpDomainAttrDesignatedRootPri, wwpLeosRstpDomain=wwpLeosRstpDomain, wwpLeosRstpPortInfoEntry=wwpLeosRstpPortInfoEntry, wwpLeosRstpDomainAttrsForceVer=wwpLeosRstpDomainAttrsForceVer, wwpLeosRstpPvstBpduReceivedNotification=wwpLeosRstpPvstBpduReceivedNotification, wwpLeosRstpDomainAttrsTxHoldCount=wwpLeosRstpDomainAttrsTxHoldCount, wwpLeosRstpMIBGroups=wwpLeosRstpMIBGroups, wwpLeosRstpPortExt=wwpLeosRstpPortExt, wwpLeosRstpDomainId=wwpLeosRstpDomainId, wwpLeosRstpLocalPortExt=wwpLeosRstpLocalPortExt, wwpLeosRstpDomainAttrRootCost=wwpLeosRstpDomainAttrRootCost, wwpLeosRstpDomainAttrsHelloTime=wwpLeosRstpDomainAttrsHelloTime, wwpLeosRstpDomainAttrPriority=wwpLeosRstpDomainAttrPriority, wwpLeosRstpDomainAttrRootPort=wwpLeosRstpDomainAttrRootPort, wwpLeosRstpPortId=wwpLeosRstpPortId, wwpLeosRstpDomainName=wwpLeosRstpDomainName, wwpLeosRstpPortDynPathCostState=wwpLeosRstpPortDynPathCostState, wwpLeosRstpPortInfoTable=wwpLeosRstpPortInfoTable, wwpLeosRstpMIBNotificationPrefix=wwpLeosRstpMIBNotificationPrefix, wwpLeosRstpDomainStatus=wwpLeosRstpDomainStatus, wwpLeosRstpPortBackupNotification=wwpLeosRstpPortBackupNotification, wwpLeosRstpDomainAttrsForwardDelay=wwpLeosRstpDomainAttrsForwardDelay, wwpLeosRstpSelfLoopNotification=wwpLeosRstpSelfLoopNotification, wwpLeosRstpMIBObjects=wwpLeosRstpMIBObjects)
