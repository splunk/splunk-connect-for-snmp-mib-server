#
# PySNMP MIB module JUNIPER-MOBILITY-CHARGING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-MOBILITY-CHARGING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:49:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
jnxMobileGatewayPgwGgsn, = mibBuilder.importSymbols("JUNIPER-MBG-SMI", "jnxMobileGatewayPgwGgsn")
jnxMbgGwName, jnxMbgGwIndex = mibBuilder.importSymbols("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName", "jnxMbgGwIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Counter64, iso, IpAddress, Bits, MibIdentifier, TimeTicks, ObjectIdentity, Gauge32, NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Unsigned32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "iso", "IpAddress", "Bits", "MibIdentifier", "TimeTicks", "ObjectIdentity", "Gauge32", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Unsigned32", "Counter32")
TextualConvention, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "TruthValue")
jnxMbgPgwChargingMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3))
jnxMbgPgwChargingMib.setRevisions(('2010-06-15 14:30', '2011-10-10 14:30', '2012-03-16 14:30',))
if mibBuilder.loadTexts: jnxMbgPgwChargingMib.setLastUpdated('201006151430Z')
if mibBuilder.loadTexts: jnxMbgPgwChargingMib.setOrganization('Juniper Networks, Inc.')
jnxMbgPgwCgNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0))
jnxMbgPgwChargingObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1))
jnxMbgPgwCgLcStorageStats = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 1))
jnxMbgPgwCgCgfGroupsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 2), )
if mibBuilder.loadTexts: jnxMbgPgwCgCgfGroupsStatsTable.setStatus('current')
jnxMbgPgwCgNotificationVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 3))
jnxMbgPgwCgCgfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4), )
if mibBuilder.loadTexts: jnxMbgPgwCgCgfStatsTable.setStatus('current')
jnxMbgPgwCgLpsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 5), )
if mibBuilder.loadTexts: jnxMbgPgwCgLpsStatsTable.setStatus('current')
jnxMbgPgwCgTspStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 6), )
if mibBuilder.loadTexts: jnxMbgPgwCgTspStatsTable.setStatus('current')
jnxMbgPgwCgPeerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7), )
if mibBuilder.loadTexts: jnxMbgPgwCgPeerStatsTable.setStatus('current')
jnxMbgPgwCgGlobalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 8), )
if mibBuilder.loadTexts: jnxMbgPgwCgGlobalStatsTable.setStatus('current')
jnxMbgPgwCgFilesOnLcStorage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgFilesOnLcStorage.setStatus('obsolete')
jnxMbgPgwCgLcStorageAvailSpace = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 1, 2), Counter64()).setUnits('MBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgLcStorageAvailSpace.setStatus('obsolete')
jnxMbgPgwCgLpsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 5, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"))
if mibBuilder.loadTexts: jnxMbgPgwCgLpsStatsEntry.setStatus('current')
jnxMbgPgwCgLpsFilesOnLcStorage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 5, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgLpsFilesOnLcStorage.setStatus('current')
jnxMbgPgwCgLpsStorageAvailSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 5, 1, 2), Gauge32()).setUnits('MBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgLpsStorageAvailSpace.setStatus('current')
jnxMbgPgwCgCgfGroupStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 2, 1), ).setIndexNames((0, "JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgCgfGrpProfName"))
if mibBuilder.loadTexts: jnxMbgPgwCgCgfGroupStatsEntry.setStatus('obsolete')
jnxMbgPgwCgCgfGrpProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: jnxMbgPgwCgCgfGrpProfName.setStatus('current')
jnxMbgPgwCgCgfGrpDRTReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfGrpDRTReqTx.setStatus('current')
jnxMbgPgwCgCgfGrpDRTReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfGrpDRTReqRx.setStatus('current')
jnxMbgPgwCgCgfGrpDRTReqTmout = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfGrpDRTReqTmout.setStatus('current')
jnxMbgPgwCgCgfGrpDRTSucRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfGrpDRTSucRspRx.setStatus('current')
jnxMbgPgwCgCgfGrpDRTErrRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfGrpDRTErrRspRx.setStatus('current')
jnxMbgPgwCgCgfGrpRediReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfGrpRediReqRx.setStatus('current')
jnxMbgPgwCgCgfGrpRediRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfGrpRediRspTx.setStatus('current')
jnxMbgPgwCgCgfGrpSwitchovers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfGrpSwitchovers.setStatus('current')
jnxMbgPgwCgCgfGrpBatchReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfGrpBatchReqTx.setStatus('current')
jnxMbgPgwCgCgfGrpBatchRspErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfGrpBatchRspErrors.setStatus('current')
jnxMbgPgwCgCgfGrpBatchCDRsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfGrpBatchCDRsTx.setStatus('current')
jnxMbgPgwCgCgfGroupTotalWFA = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfGroupTotalWFA.setStatus('current')
jnxMbgPgwCgTspStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 6, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"), (0, "JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgTspProfId"))
if mibBuilder.loadTexts: jnxMbgPgwCgTspStatsEntry.setStatus('current')
jnxMbgPgwCgTspProfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: jnxMbgPgwCgTspProfId.setStatus('current')
jnxMbgPgwCgTspDRTReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgTspDRTReqTx.setStatus('current')
jnxMbgPgwCgTspDRTReqTmout = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgTspDRTReqTmout.setStatus('current')
jnxMbgPgwCgTspDRTSucRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgTspDRTSucRspRx.setStatus('current')
jnxMbgPgwCgTspDRTErrRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgTspDRTErrRspRx.setStatus('current')
jnxMbgPgwCgTspRediReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgTspRediReqRx.setStatus('current')
jnxMbgPgwCgTspRediRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgTspRediRspTx.setStatus('current')
jnxMbgPgwCgTspSwitchovers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgTspSwitchovers.setStatus('current')
jnxMbgPgwCgTspBatchReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgTspBatchReqTx.setStatus('current')
jnxMbgPgwCgTspBatchRspErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgTspBatchRspErrors.setStatus('current')
jnxMbgPgwCgTspBatchCDRsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgTspBatchCDRsTx.setStatus('current')
jnxMbgPgwCgTspTotalWFA = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgTspTotalWFA.setStatus('current')
jnxMbgPgwCgTspProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 6, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgTspProfName.setStatus('current')
jnxMbgPgwCgCgfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1), ).setIndexNames((0, "JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgCgfIndex"))
if mibBuilder.loadTexts: jnxMbgPgwCgCgfStatsEntry.setStatus('obsolete')
jnxMbgPgwCgCgfProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: jnxMbgPgwCgCgfProfName.setStatus('current')
jnxMbgPgwCgCgfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48)))
if mibBuilder.loadTexts: jnxMbgPgwCgCgfIndex.setStatus('current')
jnxMbgPgwCgCgfIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfIpAddress.setStatus('current')
jnxMbgPgwCgCgfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfStatus.setStatus('current')
jnxMbgPgwCgCgfUpDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 5), Counter64()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfUpDuration.setStatus('current')
jnxMbgPgwCgCgfDownDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 6), Counter64()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfDownDuration.setStatus('current')
jnxMbgPgwCgCgfEchoReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfEchoReqTx.setStatus('current')
jnxMbgPgwCgCgfEchoReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfEchoReqRx.setStatus('current')
jnxMbgPgwCgCgfEchoReqTmout = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfEchoReqTmout.setStatus('current')
jnxMbgPgwCgCgfEchoRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfEchoRespTx.setStatus('current')
jnxMbgPgwCgCgfEchoRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfEchoRespRx.setStatus('current')
jnxMbgPgwCgCgfVerUnsuppTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfVerUnsuppTx.setStatus('current')
jnxMbgPgwCgCgfVerUnsuppRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfVerUnsuppRx.setStatus('current')
jnxMbgPgwCgCgfNodeAliveReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfNodeAliveReqTx.setStatus('current')
jnxMbgPgwCgCgfNodeAliveReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfNodeAliveReqRx.setStatus('current')
jnxMbgPgwCgCgfNodeAliveReqTmout = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfNodeAliveReqTmout.setStatus('current')
jnxMbgPgwCgCgfNodeAliveRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfNodeAliveRespTx.setStatus('current')
jnxMbgPgwCgCgfNodeAliveRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfNodeAliveRespRx.setStatus('current')
jnxMbgPgwCgCgfRedirectReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfRedirectReqRx.setStatus('current')
jnxMbgPgwCgCgfRedirectRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfRedirectRespTx.setStatus('current')
jnxMbgPgwCgCgfDRTReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfDRTReqTx.setStatus('current')
jnxMbgPgwCgCgfDRTReqTmout = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfDRTReqTmout.setStatus('current')
jnxMbgPgwCgCgfDRTSuccRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfDRTSuccRespRx.setStatus('current')
jnxMbgPgwCgCgfDRTErrRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfDRTErrRespRx.setStatus('current')
jnxMbgPgwCgCgfCdrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfCdrTx.setStatus('current')
jnxMbgPgwCgCgfDRTRTTMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 26), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfDRTRTTMean.setStatus('current')
jnxMbgPgwCgCgfDRTRTTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 27), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfDRTRTTMin.setStatus('current')
jnxMbgPgwCgCgfDRTRTTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 28), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfDRTRTTMax.setStatus('current')
jnxMbgPgwCgCgfTransToDownState = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfTransToDownState.setStatus('current')
jnxMbgPgwCgCgfContainers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 4, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCgfContainers.setStatus('current')
jnxMbgPgwCgPeerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"), (0, "JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgPeerIndex"))
if mibBuilder.loadTexts: jnxMbgPgwCgPeerStatsEntry.setStatus('current')
jnxMbgPgwCgPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 1), Unsigned32())
if mibBuilder.loadTexts: jnxMbgPgwCgPeerIndex.setStatus('current')
jnxMbgPgwCgPeerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerIpAddress.setStatus('current')
jnxMbgPgwCgPeerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerStatus.setStatus('current')
jnxMbgPgwCgPeerEchoReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerEchoReqTx.setStatus('current')
jnxMbgPgwCgPeerEchoReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerEchoReqRx.setStatus('current')
jnxMbgPgwCgPeerEchoReqTmout = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerEchoReqTmout.setStatus('current')
jnxMbgPgwCgPeerEchoRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerEchoRespTx.setStatus('current')
jnxMbgPgwCgPeerEchoRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerEchoRespRx.setStatus('current')
jnxMbgPgwCgPeerVerUnsuppTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerVerUnsuppTx.setStatus('current')
jnxMbgPgwCgPeerVerUnsuppRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerVerUnsuppRx.setStatus('current')
jnxMbgPgwCgPeerNodeAliveReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerNodeAliveReqRx.setStatus('current')
jnxMbgPgwCgPeerNodeAliveRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerNodeAliveRespTx.setStatus('current')
jnxMbgPgwCgPeerRedirectReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerRedirectReqRx.setStatus('current')
jnxMbgPgwCgPeerRedirectRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerRedirectRespTx.setStatus('current')
jnxMbgPgwCgPeerDRTReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerDRTReqTx.setStatus('current')
jnxMbgPgwCgPeerDRTSuccRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerDRTSuccRespRx.setStatus('current')
jnxMbgPgwCgPeerDRTErrRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerDRTErrRespRx.setStatus('current')
jnxMbgPgwCgPeerProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 7, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerProfileName.setStatus('current')
jnxMbgPgwCgGlobalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 8, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"))
if mibBuilder.loadTexts: jnxMbgPgwCgGlobalStatsEntry.setStatus('current')
jnxMbgPgwCgCdrSendErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 8, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCdrSendErrors.setStatus('current')
jnxMbgPgwCgCdrEncodeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCdrEncodeErrors.setStatus('current')
jnxMbgPgwCgCdrAllocFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 8, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCdrAllocFailures.setStatus('current')
jnxMbgPgwCgContFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 8, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgContFailures.setStatus('current')
jnxMbgPgwCgCmBearersCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 8, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCmBearersCreated.setStatus('current')
jnxMbgPgwCgCmBearersDeleted = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 8, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCgCmBearersDeleted.setStatus('current')
jnxMbgPgwCgServerName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwCgServerName.setStatus('current')
jnxMbgPgwCgServicePicName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwCgServicePicName.setStatus('current')
jnxMbgPgwCgCDRDest = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cdrcgf", 1), ("cdrbackup", 2), ("cdrnobackup", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwCgCDRDest.setStatus('current')
jnxMbgPgwCgActiveCgfIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 3, 4), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwCgActiveCgfIpAddr.setStatus('current')
jnxMbgPgwCgTSPName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 3, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwCgTSPName.setStatus('deprecated')
jnxMbgPgwCgMemLimit = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("memfulldisconnectnew", 1), ("memfulldisconnectnewrslvd", 2), ("memfulldisconnectexistnew", 3), ("memfulldisconnectexistnewrslvd", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwCgMemLimit.setStatus('current')
jnxMbgPgwCgLcsSpace = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("localstoragememlevel1", 1), ("localstoragememlevel2", 2), ("localstoragememlevel3", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwCgLcsSpace.setStatus('current')
jnxMbgPgwCgLcsUtil = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 3, 8), Gauge32()).setUnits('percent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwCgLcsUtil.setStatus('current')
jnxMbgPgwCgAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("raised", 1), ("cleared", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwCgAlarmStatus.setStatus('current')
jnxMbgPgwCgProfileName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 3, 10), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwCgProfileName.setStatus('deprecated')
jnxMbgPgwCgPrevMMState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 3, 11), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwCgPrevMMState.setStatus('current')
jnxMbgPgwCgNewMMState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 3, 12), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwCgNewMMState.setStatus('current')
jnxMbgPgwCgTProfileName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 3, 13), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwCgTProfileName.setStatus('deprecated')
jnxMbgPgwCgTPrevMMState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 3, 14), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwCgTPrevMMState.setStatus('deprecated')
jnxMbgPgwCgTNewMMState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 3, 15), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwCgTNewMMState.setStatus('deprecated')
jnxMbgPgwCgPeerProfName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 1, 3, 16), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwCgPeerProfName.setStatus('current')
jnxMbgPgwCgGtpGWUpNotif = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 1)).setObjects(("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgServerName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgServicePicName"))
if mibBuilder.loadTexts: jnxMbgPgwCgGtpGWUpNotif.setStatus('deprecated')
jnxMbgPgwCgGtpGWDownNotif = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 2)).setObjects(("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgServerName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgServicePicName"))
if mibBuilder.loadTexts: jnxMbgPgwCgGtpGWDownNotif.setStatus('deprecated')
jnxMbgPgwCgCDRDestNotif = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 3)).setObjects(("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgCDRDest"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgTSPName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgActiveCgfIpAddr"))
if mibBuilder.loadTexts: jnxMbgPgwCgCDRDestNotif.setStatus('deprecated')
jnxMbgPgwCgMemThresNotif = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 4)).setObjects(("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgAlarmStatus"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgMemLimit"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgTSPName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgServicePicName"))
if mibBuilder.loadTexts: jnxMbgPgwCgMemThresNotif.setStatus('deprecated')
jnxMbgPgwCgLcsThresNotif = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 5)).setObjects(("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgLcsSpace"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgLcsUtil"))
if mibBuilder.loadTexts: jnxMbgPgwCgLcsThresNotif.setStatus('deprecated')
jnxMbgPgwCgServiceUpNotif = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 6)).setObjects(("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgServicePicName"))
if mibBuilder.loadTexts: jnxMbgPgwCgServiceUpNotif.setStatus('deprecated')
jnxMbgPgwCgMMStateChange = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 7)).setObjects(("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgProfileName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgPrevMMState"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgNewMMState"))
if mibBuilder.loadTexts: jnxMbgPgwCgMMStateChange.setStatus('deprecated')
jnxMbgPgwCgTMMStateChange = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 8)).setObjects(("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgTProfileName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgTPrevMMState"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgTNewMMState"))
if mibBuilder.loadTexts: jnxMbgPgwCgTMMStateChange.setStatus('deprecated')
jnxMbgPgwCgGtpGWUpNotify = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 9)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgServerName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgServicePicName"))
if mibBuilder.loadTexts: jnxMbgPgwCgGtpGWUpNotify.setStatus('current')
jnxMbgPgwCgGtpGWDownNotify = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 10)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgServerName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgServicePicName"))
if mibBuilder.loadTexts: jnxMbgPgwCgGtpGWDownNotify.setStatus('current')
jnxMbgPgwCgCDRDestNotify = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 11)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgCDRDest"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgPeerProfName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgActiveCgfIpAddr"))
if mibBuilder.loadTexts: jnxMbgPgwCgCDRDestNotify.setStatus('current')
jnxMbgPgwCgServiceUpNotify = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 12)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgServicePicName"))
if mibBuilder.loadTexts: jnxMbgPgwCgServiceUpNotify.setStatus('current')
jnxMbgPgwCgMMStateChangeNotify = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 13)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgPeerProfName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgPrevMMState"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgNewMMState"))
if mibBuilder.loadTexts: jnxMbgPgwCgMMStateChangeNotify.setStatus('current')
jnxMbgPgwCgTMMStateChangeNotify = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 14)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgPeerProfName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgPrevMMState"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgNewMMState"))
if mibBuilder.loadTexts: jnxMbgPgwCgTMMStateChangeNotify.setStatus('current')
jnxMbgPgwCgMemHighThresNotify = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 15)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgPeerProfName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgServicePicName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgMemLimit"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgAlarmStatus"))
if mibBuilder.loadTexts: jnxMbgPgwCgMemHighThresNotify.setStatus('current')
jnxMbgPgwCgMemMediumThresNotify = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 16)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgPeerProfName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgServicePicName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgMemLimit"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgAlarmStatus"))
if mibBuilder.loadTexts: jnxMbgPgwCgMemMediumThresNotify.setStatus('current')
jnxMbgPgwCgMemLowThresNotify = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 17)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgPeerProfName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgServicePicName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgMemLimit"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgAlarmStatus"))
if mibBuilder.loadTexts: jnxMbgPgwCgMemLowThresNotify.setStatus('current')
jnxMbgPgwCgLcsThresHighNotify = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 18)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgAlarmStatus"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgLcsUtil"))
if mibBuilder.loadTexts: jnxMbgPgwCgLcsThresHighNotify.setStatus('current')
jnxMbgPgwCgLcsThresMediumNotify = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 19)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgAlarmStatus"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgLcsUtil"))
if mibBuilder.loadTexts: jnxMbgPgwCgLcsThresMediumNotify.setStatus('current')
jnxMbgPgwCgLcsThresLowNotify = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 3, 0, 20)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgAlarmStatus"), ("JUNIPER-MOBILITY-CHARGING-MIB", "jnxMbgPgwCgLcsUtil"))
if mibBuilder.loadTexts: jnxMbgPgwCgLcsThresLowNotify.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-MOBILITY-CHARGING-MIB", jnxMbgPgwCgGlobalStatsTable=jnxMbgPgwCgGlobalStatsTable, jnxMbgPgwCgCgfDRTSuccRespRx=jnxMbgPgwCgCgfDRTSuccRespRx, jnxMbgPgwCgPeerEchoRespRx=jnxMbgPgwCgPeerEchoRespRx, jnxMbgPgwCgPeerDRTErrRespRx=jnxMbgPgwCgPeerDRTErrRespRx, jnxMbgPgwCgCgfGrpDRTSucRspRx=jnxMbgPgwCgCgfGrpDRTSucRspRx, jnxMbgPgwCgTspRediReqRx=jnxMbgPgwCgTspRediReqRx, jnxMbgPgwCgCgfGroupsStatsTable=jnxMbgPgwCgCgfGroupsStatsTable, jnxMbgPgwCgPeerEchoRespTx=jnxMbgPgwCgPeerEchoRespTx, jnxMbgPgwCgTspProfName=jnxMbgPgwCgTspProfName, jnxMbgPgwCgServicePicName=jnxMbgPgwCgServicePicName, jnxMbgPgwCgServiceUpNotif=jnxMbgPgwCgServiceUpNotif, jnxMbgPgwCgPeerRedirectReqRx=jnxMbgPgwCgPeerRedirectReqRx, jnxMbgPgwCgTspBatchRspErrors=jnxMbgPgwCgTspBatchRspErrors, jnxMbgPgwCgCgfRedirectRespTx=jnxMbgPgwCgCgfRedirectRespTx, jnxMbgPgwCgCgfGrpDRTErrRspRx=jnxMbgPgwCgCgfGrpDRTErrRspRx, jnxMbgPgwCgCgfGrpRediRspTx=jnxMbgPgwCgCgfGrpRediRspTx, jnxMbgPgwCgCgfDRTReqTx=jnxMbgPgwCgCgfDRTReqTx, jnxMbgPgwCgMemHighThresNotify=jnxMbgPgwCgMemHighThresNotify, jnxMbgPgwCgPrevMMState=jnxMbgPgwCgPrevMMState, jnxMbgPgwCgCgfProfName=jnxMbgPgwCgCgfProfName, jnxMbgPgwCgCDRDest=jnxMbgPgwCgCDRDest, jnxMbgPgwCgCgfNodeAliveRespRx=jnxMbgPgwCgCgfNodeAliveRespRx, jnxMbgPgwCgCgfRedirectReqRx=jnxMbgPgwCgCgfRedirectReqRx, jnxMbgPgwCgPeerIpAddress=jnxMbgPgwCgPeerIpAddress, jnxMbgPgwCgMemMediumThresNotify=jnxMbgPgwCgMemMediumThresNotify, jnxMbgPgwCgTspDRTReqTx=jnxMbgPgwCgTspDRTReqTx, jnxMbgPgwCgPeerNodeAliveReqRx=jnxMbgPgwCgPeerNodeAliveReqRx, jnxMbgPgwCgProfileName=jnxMbgPgwCgProfileName, jnxMbgPgwCgCgfEchoRespRx=jnxMbgPgwCgCgfEchoRespRx, jnxMbgPgwCgGlobalStatsEntry=jnxMbgPgwCgGlobalStatsEntry, jnxMbgPgwCgPeerEchoReqRx=jnxMbgPgwCgPeerEchoReqRx, jnxMbgPgwCgCgfVerUnsuppRx=jnxMbgPgwCgCgfVerUnsuppRx, PYSNMP_MODULE_ID=jnxMbgPgwChargingMib, jnxMbgPgwCgCgfEchoReqTmout=jnxMbgPgwCgCgfEchoReqTmout, jnxMbgPgwCgPeerDRTSuccRespRx=jnxMbgPgwCgPeerDRTSuccRespRx, jnxMbgPgwCgTspDRTSucRspRx=jnxMbgPgwCgTspDRTSucRspRx, jnxMbgPgwCgCgfGrpBatchRspErrors=jnxMbgPgwCgCgfGrpBatchRspErrors, jnxMbgPgwCgCgfDRTRTTMax=jnxMbgPgwCgCgfDRTRTTMax, jnxMbgPgwCgCgfIpAddress=jnxMbgPgwCgCgfIpAddress, jnxMbgPgwCgTspStatsTable=jnxMbgPgwCgTspStatsTable, jnxMbgPgwCgTspProfId=jnxMbgPgwCgTspProfId, jnxMbgPgwCgCmBearersDeleted=jnxMbgPgwCgCmBearersDeleted, jnxMbgPgwCgMemLimit=jnxMbgPgwCgMemLimit, jnxMbgPgwCgContFailures=jnxMbgPgwCgContFailures, jnxMbgPgwCgCgfGrpBatchCDRsTx=jnxMbgPgwCgCgfGrpBatchCDRsTx, jnxMbgPgwCgPeerStatsEntry=jnxMbgPgwCgPeerStatsEntry, jnxMbgPgwCgCgfGrpDRTReqTmout=jnxMbgPgwCgCgfGrpDRTReqTmout, jnxMbgPgwCgCgfNodeAliveReqTx=jnxMbgPgwCgCgfNodeAliveReqTx, jnxMbgPgwCgMemLowThresNotify=jnxMbgPgwCgMemLowThresNotify, jnxMbgPgwCgLpsStorageAvailSpace=jnxMbgPgwCgLpsStorageAvailSpace, jnxMbgPgwCgNotifications=jnxMbgPgwCgNotifications, jnxMbgPgwCgTspSwitchovers=jnxMbgPgwCgTspSwitchovers, jnxMbgPgwCgCDRDestNotif=jnxMbgPgwCgCDRDestNotif, jnxMbgPgwCgLpsStatsEntry=jnxMbgPgwCgLpsStatsEntry, jnxMbgPgwCgCgfStatus=jnxMbgPgwCgCgfStatus, jnxMbgPgwCgMMStateChangeNotify=jnxMbgPgwCgMMStateChangeNotify, jnxMbgPgwCgCgfIndex=jnxMbgPgwCgCgfIndex, jnxMbgPgwCgPeerStatus=jnxMbgPgwCgPeerStatus, jnxMbgPgwCgTPrevMMState=jnxMbgPgwCgTPrevMMState, jnxMbgPgwCgGtpGWUpNotif=jnxMbgPgwCgGtpGWUpNotif, jnxMbgPgwCgCgfEchoReqRx=jnxMbgPgwCgCgfEchoReqRx, jnxMbgPgwCgPeerRedirectRespTx=jnxMbgPgwCgPeerRedirectRespTx, jnxMbgPgwCgPeerIndex=jnxMbgPgwCgPeerIndex, jnxMbgPgwCgServerName=jnxMbgPgwCgServerName, jnxMbgPgwCgPeerStatsTable=jnxMbgPgwCgPeerStatsTable, jnxMbgPgwCgTspBatchReqTx=jnxMbgPgwCgTspBatchReqTx, jnxMbgPgwCgPeerEchoReqTx=jnxMbgPgwCgPeerEchoReqTx, jnxMbgPgwCgCgfGroupStatsEntry=jnxMbgPgwCgCgfGroupStatsEntry, jnxMbgPgwCgGtpGWDownNotify=jnxMbgPgwCgGtpGWDownNotify, jnxMbgPgwCgTspTotalWFA=jnxMbgPgwCgTspTotalWFA, jnxMbgPgwCgTSPName=jnxMbgPgwCgTSPName, jnxMbgPgwChargingObjects=jnxMbgPgwChargingObjects, jnxMbgPgwCgAlarmStatus=jnxMbgPgwCgAlarmStatus, jnxMbgPgwCgCgfGrpDRTReqTx=jnxMbgPgwCgCgfGrpDRTReqTx, jnxMbgPgwCgTMMStateChangeNotify=jnxMbgPgwCgTMMStateChangeNotify, jnxMbgPgwCgLcsThresMediumNotify=jnxMbgPgwCgLcsThresMediumNotify, jnxMbgPgwCgLcsThresHighNotify=jnxMbgPgwCgLcsThresHighNotify, jnxMbgPgwCgCgfVerUnsuppTx=jnxMbgPgwCgCgfVerUnsuppTx, jnxMbgPgwCgTspBatchCDRsTx=jnxMbgPgwCgTspBatchCDRsTx, jnxMbgPgwCgPeerVerUnsuppTx=jnxMbgPgwCgPeerVerUnsuppTx, jnxMbgPgwCgLpsStatsTable=jnxMbgPgwCgLpsStatsTable, jnxMbgPgwCgCgfNodeAliveReqRx=jnxMbgPgwCgCgfNodeAliveReqRx, jnxMbgPgwCgCgfStatsTable=jnxMbgPgwCgCgfStatsTable, jnxMbgPgwCgCdrSendErrors=jnxMbgPgwCgCdrSendErrors, jnxMbgPgwCgCgfTransToDownState=jnxMbgPgwCgCgfTransToDownState, jnxMbgPgwCgCgfGrpBatchReqTx=jnxMbgPgwCgCgfGrpBatchReqTx, jnxMbgPgwCgMemThresNotif=jnxMbgPgwCgMemThresNotif, jnxMbgPgwCgCgfGroupTotalWFA=jnxMbgPgwCgCgfGroupTotalWFA, jnxMbgPgwCgCgfDRTRTTMin=jnxMbgPgwCgCgfDRTRTTMin, jnxMbgPgwCgLcStorageStats=jnxMbgPgwCgLcStorageStats, jnxMbgPgwCgCgfContainers=jnxMbgPgwCgCgfContainers, jnxMbgPgwCgLcsThresNotif=jnxMbgPgwCgLcsThresNotif, jnxMbgPgwCgLcStorageAvailSpace=jnxMbgPgwCgLcStorageAvailSpace, jnxMbgPgwCgPeerVerUnsuppRx=jnxMbgPgwCgPeerVerUnsuppRx, jnxMbgPgwCgCgfDownDuration=jnxMbgPgwCgCgfDownDuration, jnxMbgPgwCgActiveCgfIpAddr=jnxMbgPgwCgActiveCgfIpAddr, jnxMbgPgwCgServiceUpNotify=jnxMbgPgwCgServiceUpNotify, jnxMbgPgwCgPeerDRTReqTx=jnxMbgPgwCgPeerDRTReqTx, jnxMbgPgwCgCgfStatsEntry=jnxMbgPgwCgCgfStatsEntry, jnxMbgPgwCgMMStateChange=jnxMbgPgwCgMMStateChange, jnxMbgPgwCgPeerProfileName=jnxMbgPgwCgPeerProfileName, jnxMbgPgwCgCgfDRTErrRespRx=jnxMbgPgwCgCgfDRTErrRespRx, jnxMbgPgwCgLcsSpace=jnxMbgPgwCgLcsSpace, jnxMbgPgwCgNotificationVars=jnxMbgPgwCgNotificationVars, jnxMbgPgwChargingMib=jnxMbgPgwChargingMib, jnxMbgPgwCgTspDRTErrRspRx=jnxMbgPgwCgTspDRTErrRspRx, jnxMbgPgwCgPeerEchoReqTmout=jnxMbgPgwCgPeerEchoReqTmout, jnxMbgPgwCgCgfNodeAliveReqTmout=jnxMbgPgwCgCgfNodeAliveReqTmout, jnxMbgPgwCgCgfCdrTx=jnxMbgPgwCgCgfCdrTx, jnxMbgPgwCgCgfGrpSwitchovers=jnxMbgPgwCgCgfGrpSwitchovers, jnxMbgPgwCgLpsFilesOnLcStorage=jnxMbgPgwCgLpsFilesOnLcStorage, jnxMbgPgwCgLcsUtil=jnxMbgPgwCgLcsUtil, jnxMbgPgwCgTspDRTReqTmout=jnxMbgPgwCgTspDRTReqTmout, jnxMbgPgwCgCgfDRTReqTmout=jnxMbgPgwCgCgfDRTReqTmout, jnxMbgPgwCgTProfileName=jnxMbgPgwCgTProfileName, jnxMbgPgwCgCgfGrpRediReqRx=jnxMbgPgwCgCgfGrpRediReqRx, jnxMbgPgwCgFilesOnLcStorage=jnxMbgPgwCgFilesOnLcStorage, jnxMbgPgwCgCgfDRTRTTMean=jnxMbgPgwCgCgfDRTRTTMean, jnxMbgPgwCgCgfGrpDRTReqRx=jnxMbgPgwCgCgfGrpDRTReqRx, jnxMbgPgwCgGtpGWUpNotify=jnxMbgPgwCgGtpGWUpNotify, jnxMbgPgwCgCgfEchoReqTx=jnxMbgPgwCgCgfEchoReqTx, jnxMbgPgwCgCmBearersCreated=jnxMbgPgwCgCmBearersCreated, jnxMbgPgwCgNewMMState=jnxMbgPgwCgNewMMState, jnxMbgPgwCgCgfGrpProfName=jnxMbgPgwCgCgfGrpProfName, jnxMbgPgwCgCgfNodeAliveRespTx=jnxMbgPgwCgCgfNodeAliveRespTx, jnxMbgPgwCgTspRediRspTx=jnxMbgPgwCgTspRediRspTx, jnxMbgPgwCgGtpGWDownNotif=jnxMbgPgwCgGtpGWDownNotif, jnxMbgPgwCgCgfEchoRespTx=jnxMbgPgwCgCgfEchoRespTx, jnxMbgPgwCgCgfUpDuration=jnxMbgPgwCgCgfUpDuration, jnxMbgPgwCgCdrEncodeErrors=jnxMbgPgwCgCdrEncodeErrors, jnxMbgPgwCgTMMStateChange=jnxMbgPgwCgTMMStateChange, jnxMbgPgwCgCdrAllocFailures=jnxMbgPgwCgCdrAllocFailures, jnxMbgPgwCgCDRDestNotify=jnxMbgPgwCgCDRDestNotify, jnxMbgPgwCgPeerProfName=jnxMbgPgwCgPeerProfName, jnxMbgPgwCgPeerNodeAliveRespTx=jnxMbgPgwCgPeerNodeAliveRespTx, jnxMbgPgwCgTspStatsEntry=jnxMbgPgwCgTspStatsEntry, jnxMbgPgwCgLcsThresLowNotify=jnxMbgPgwCgLcsThresLowNotify, jnxMbgPgwCgTNewMMState=jnxMbgPgwCgTNewMMState)
