#
# PySNMP MIB module IDIRECT-REMOTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IDIRECT-REMOTE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:40:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, ObjectIdentity, NotificationType, Counter64, Counter32, Gauge32, IpAddress, TimeTicks, iso, Integer32, enterprises, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "ObjectIdentity", "NotificationType", "Counter64", "Counter32", "Gauge32", "IpAddress", "TimeTicks", "iso", "Integer32", "enterprises", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
iDirectMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 13732))
if mibBuilder.loadTexts: iDirectMIB.setLastUpdated('1101062010Z')
if mibBuilder.loadTexts: iDirectMIB.setOrganization('iDirect Technologies, Inc.')
iDirectObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 1))
netmodem = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 1, 1))
chassis = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 1, 2))
pp = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 1, 3))
idirectstats = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 1, 4))
mibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 1, 5))
iDirectTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 99))
nmtraps = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 99, 1))
chtraps = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 99, 2))
pptraps = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 99, 3))
trap_level = MibScalar((1, 3, 6, 1, 4, 1, 13732, 99, 99), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("warning", 0), ("alarm", 1), ("cleared", 2), ("offline", 3), ("unknown", 4)))).setLabel("trap-level").setMaxAccess("readonly")
if mibBuilder.loadTexts: trap_level.setStatus('current')
trap_str = MibScalar((1, 3, 6, 1, 4, 1, 13732, 99, 98), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setLabel("trap-str").setMaxAccess("readonly")
if mibBuilder.loadTexts: trap_str.setStatus('current')
trap_rem_id = MibScalar((1, 3, 6, 1, 4, 1, 13732, 99, 97), Integer32()).setLabel("trap-rem-id").setMaxAccess("readonly")
if mibBuilder.loadTexts: trap_rem_id.setStatus('current')
trap_sn_id = MibScalar((1, 3, 6, 1, 4, 1, 13732, 99, 96), Integer32()).setLabel("trap-sn-id").setMaxAccess("readonly")
if mibBuilder.loadTexts: trap_sn_id.setStatus('current')
trap_rem_desc = MibScalar((1, 3, 6, 1, 4, 1, 13732, 99, 95), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setLabel("trap-rem-desc").setMaxAccess("readonly")
if mibBuilder.loadTexts: trap_rem_desc.setStatus('current')
trap_rem_ip = MibScalar((1, 3, 6, 1, 4, 1, 13732, 99, 94), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setLabel("trap-rem-ip").setMaxAccess("readonly")
if mibBuilder.loadTexts: trap_rem_ip.setStatus('current')
chassisEntries = MibScalar((1, 3, 6, 1, 4, 1, 13732, 1, 2, 0), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisEntries.setStatus('current')
chassisTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 2, 1), )
if mibBuilder.loadTexts: chassisTable.setStatus('current')
chassisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 2, 1, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "chassisid"))
if mibBuilder.loadTexts: chassisEntry.setStatus('current')
chassisid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisid.setStatus('current')
chassisname = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisname.setStatus('current')
chstate = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("green", 0), ("yellow", 1), ("red", 2), ("yellowRed", 3), ("offline", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chstate.setStatus('current')
chwarnings = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chwarnings.setStatus('current')
chalarms = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chalarms.setStatus('current')
ppEntries = MibScalar((1, 3, 6, 1, 4, 1, 13732, 1, 3, 0), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ppEntries.setStatus('current')
ppTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 3, 1), )
if mibBuilder.loadTexts: ppTable.setStatus('current')
ppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 3, 1, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "ppid"))
if mibBuilder.loadTexts: ppEntry.setStatus('current')
ppid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ppid.setStatus('current')
ppname = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ppname.setStatus('current')
ppteleportid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 3, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ppteleportid.setStatus('current')
ppstate = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("green", 0), ("yellow", 1), ("red", 2), ("yellowRed", 3), ("offline", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ppstate.setStatus('current')
ppwarnings = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 3, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ppwarnings.setStatus('current')
ppalarms = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 3, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ppalarms.setStatus('current')
netModemEntries = MibScalar((1, 3, 6, 1, 4, 1, 13732, 1, 1, 0), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netModemEntries.setStatus('current')
netModemTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1), )
if mibBuilder.loadTexts: netModemTable.setStatus('current')
netModemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "netdid"))
if mibBuilder.loadTexts: netModemEntry.setStatus('current')
netdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netdid.setStatus('current')
nmppid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmppid.setStatus('current')
networkid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: networkid.setStatus('current')
nmteleportid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmteleportid.setStatus('current')
nmid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmid.setStatus('current')
inroutegroupid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inroutegroupid.setStatus('current')
nmname = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmname.setStatus('current')
ethipadr = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethipadr.setStatus('current')
dcmslotnum = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcmslotnum.setStatus('current')
chassid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassid.setStatus('current')
typeid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("txHub", 0), ("rxHub", 1), ("txRxHub", 2), ("remote", 3), ("standby", 4), ("fsRepeater", 5), ("standbyFsRepeater", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: typeid.setStatus('current')
nmstate = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("green", 0), ("yellow", 1), ("red", 2), ("yellowRed", 3), ("offline", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstate.setStatus('current')
nmwarnings = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmwarnings.setStatus('current')
nmalarms = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmalarms.setStatus('current')
nmstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstatus.setStatus('current')
geoloc = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: geoloc.setStatus('current')
snmpProxyStart = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 1))
if mibBuilder.loadTexts: snmpProxyStart.setStatus('current')
snmpProxyStop = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 2))
if mibBuilder.loadTexts: snmpProxyStop.setStatus('current')
upstreamSNR = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 3)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: upstreamSNR.setStatus('current')
downstreamSNR = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 4)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: downstreamSNR.setStatus('current')
tempLimit = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 5)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: tempLimit.setStatus('current')
acqHubModemCRC = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 6)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: acqHubModemCRC.setStatus('current')
trafficHubModemCRC = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 7)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: trafficHubModemCRC.setStatus('current')
latency = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 8)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: latency.setStatus('current')
symbolOffset = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 9)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: symbolOffset.setStatus('current')
ethernetUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 10)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: ethernetUnplugged.setStatus('current')
ucpLostContact = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 11)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: ucpLostContact.setStatus('current')
llDown = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 12)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: llDown.setStatus('current')
ucpOutOfNetwork = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 13)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: ucpOutOfNetwork.setStatus('current')
latTimeout = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 14)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: latTimeout.setStatus('current')
lackHubStats = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 16)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: lackHubStats.setStatus('current')
remoteOffline = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 17)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: remoteOffline.setStatus('current')
rxOverflowFramesHubModem = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 18)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rxOverflowFramesHubModem.setStatus('current')
downstreamPpsOverdrive = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 19)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: downstreamPpsOverdrive.setStatus('current')
backplaneLost10Mhz = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 20)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: backplaneLost10Mhz.setStatus('current')
calibratedTxPower = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 21)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: calibratedTxPower.setStatus('current')
txFrequency = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 22)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: txFrequency.setStatus('current')
mobileLostGps = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 23)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: mobileLostGps.setStatus('current')
scpcRxErrors = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 24)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: scpcRxErrors.setStatus('current')
fllDacErrors = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 25)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: fllDacErrors.setStatus('current')
lcFailure = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 26)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: lcFailure.setStatus('current')
meshError = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 27)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: meshError.setStatus('current')
meshTdmLockLost = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 28)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: meshTdmLockLost.setStatus('current')
meshHubRxScpcSnr = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 29)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: meshHubRxScpcSnr.setStatus('current')
meshHubRxTdmaSnr = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 30)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: meshHubRxTdmaSnr.setStatus('current')
lineCardAGCOutOFRange = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 31)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: lineCardAGCOutOFRange.setStatus('current')
meshRmtRxScpcSnr = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 32)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: meshRmtRxScpcSnr.setStatus('current')
meshRmtRxTDMASnr = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 33)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: meshRmtRxTDMASnr.setStatus('current')
remoteAgcOutOfRange = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 34)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: remoteAgcOutOfRange.setStatus('current')
reset = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 35)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: reset.setStatus('current')
unready = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 36)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: unready.setStatus('current')
flash = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 37)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: flash.setStatus('current')
activationStatus = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 38)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: activationStatus.setStatus('current')
elsewhereError = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 39)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: elsewhereError.setStatus('current')
fanAlarm = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 40)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: fanAlarm.setStatus('current')
backplaneLostSOF = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 41)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: backplaneLostSOF.setStatus('current')
rmtMAXTxPwr = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 42)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmtMAXTxPwr.setStatus('current')
bladeCPUHigh = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 43)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: bladeCPUHigh.setStatus('current')
rmtSleep = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 44)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmtSleep.setStatus('current')
hubTenMHzAlarm = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 45)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: hubTenMHzAlarm.setStatus('current')
gigeFailed = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 46)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: gigeFailed.setStatus('current')
gigeHealth = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 47)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: gigeHealth.setStatus('current')
rxOnly = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 48)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rxOnly.setStatus('current')
crc8Errors = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 49)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: crc8Errors.setStatus('current')
crc32Errors = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 50)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: crc32Errors.setStatus('current')
ravenFailed = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 51)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: ravenFailed.setStatus('current')
bladeNoEncLic = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 52)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"))
if mibBuilder.loadTexts: bladeNoEncLic.setStatus('current')
rmtAcqBurst = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 53)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"))
if mibBuilder.loadTexts: rmtAcqBurst.setStatus('current')
rmtCAWillExpire = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 54)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"))
if mibBuilder.loadTexts: rmtCAWillExpire.setStatus('current')
rmtCAExpired = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 55)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"))
if mibBuilder.loadTexts: rmtCAExpired.setStatus('current')
rmtCAInvalid = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 56)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"))
if mibBuilder.loadTexts: rmtCAInvalid.setStatus('current')
rmttxTDMAAcqCrc = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 57)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmttxTDMAAcqCrc.setStatus('current')
rmttxTDMADataCrc = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 58)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmttxTDMADataCrc.setStatus('current')
rmttxTDMAAcqMismatch = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 59)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmttxTDMAAcqMismatch.setStatus('current')
rmttxTDMADataMismatch = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 60)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmttxTDMADataMismatch.setStatus('current')
rmttxTDMADataMissing = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 61)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmttxTDMADataMissing.setStatus('current')
rmttxSCPCLostLock = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 62)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmttxSCPCLostLock.setStatus('current')
rmttxSCPCHdlcError = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 63)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmttxSCPCHdlcError.setStatus('current')
rmttxSCPCDataMismatch = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 64)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmttxSCPCDataMismatch.setStatus('current')
rmtStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 65)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmtStatusChange.setStatus('current')
triStateIdle = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 66)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: triStateIdle.setStatus('current')
triStateDormant = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 67)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: triStateDormant.setStatus('current')
rmtMCFPDecryptFail = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 68)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmtMCFPDecryptFail.setStatus('current')
powerAlarm1 = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 1)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: powerAlarm1.setStatus('current')
powerAlarm2 = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 2)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: powerAlarm2.setStatus('current')
powerAlarm3 = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 3)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: powerAlarm3.setStatus('current')
fanAlarmChassis = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 4)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: fanAlarmChassis.setStatus('current')
chassisDown = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 5)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: chassisDown.setStatus('current')
rcmAAlarm = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 6)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: rcmAAlarm.setStatus('current')
rcmBAlarm = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 7)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: rcmBAlarm.setStatus('current')
lostChassisConnection = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 8)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: lostChassisConnection.setStatus('current')
microChassisOverTemp = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 9)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microChassisOverTemp.setStatus('current')
microRCMANotPresent = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 10)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microRCMANotPresent.setStatus('current')
microRCMAFault = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 11)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microRCMAFault.setStatus('current')
microRCMBNotPresent = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 12)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microRCMBNotPresent.setStatus('current')
microRCMBFault = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 13)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microRCMBFault.setStatus('current')
microPwrAlarmABad = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 14)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microPwrAlarmABad.setStatus('current')
microPwrAlarmAOverTemp = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 15)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microPwrAlarmAOverTemp.setStatus('current')
microPwrAlarmBBad = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 16)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microPwrAlarmBBad.setStatus('current')
microPwrAlarmBOverTemp = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 17)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microPwrAlarmBOverTemp.setStatus('current')
microFSMNotPresent = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 18)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microFSMNotPresent.setStatus('current')
microFSMFault = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 19)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microFSMFault.setStatus('current')
microFSMFanFault = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 20)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microFSMFanFault.setStatus('current')
microIFMNotPresent = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 21)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microIFMNotPresent.setStatus('current')
microIFMFault = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 22)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microIFMFault.setStatus('current')
microAlarmDisabled = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 23)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microAlarmDisabled.setStatus('current')
microOPMAFault = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 24)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microOPMAFault.setStatus('current')
microOPMBFault = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 25)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microOPMBFault.setStatus('current')
ppStateTrap = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 3, 1)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: ppStateTrap.setStatus('current')
ipstatsTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1), )
if mibBuilder.loadTexts: ipstatsTable.setStatus('current')
ipstatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "nmdid"))
if mibBuilder.loadTexts: ipstatsEntry.setStatus('current')
nmdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmdid.setStatus('current')
rxtcp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxtcp.setStatus('current')
rxudp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxudp.setStatus('current')
rxicmp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxicmp.setStatus('current')
rxigmp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxigmp.setStatus('current')
rxhttp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxhttp.setStatus('current')
rxother = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxother.setStatus('current')
txtcp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txtcp.setStatus('current')
txudp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txudp.setStatus('current')
txicmp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txicmp.setStatus('current')
txigmp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txigmp.setStatus('current')
txhttp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txhttp.setStatus('current')
txother = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txother.setStatus('current')
ipstatstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatstime.setStatus('current')
otastatsTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2), )
if mibBuilder.loadTexts: otastatsTable.setStatus('current')
otastatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "otanmdid"))
if mibBuilder.loadTexts: otastatsEntry.setStatus('current')
otanmdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otanmdid.setStatus('current')
otamode = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otamode.setStatus('current')
downstreamreliableBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: downstreamreliableBytes.setStatus('current')
downstreamunreliableBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: downstreamunreliableBytes.setStatus('current')
downstreamoverheadBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: downstreamoverheadBytes.setStatus('current')
downstreammulticastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: downstreammulticastBytes.setStatus('current')
downstreambroadcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: downstreambroadcastBytes.setStatus('current')
downstreammulticastSymbols = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: downstreammulticastSymbols.setStatus('current')
downstreambroadcastSymbols = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: downstreambroadcastSymbols.setStatus('current')
downstreamtotalKiloBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: downstreamtotalKiloBytes.setStatus('current')
upstreamreliableBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upstreamreliableBytes.setStatus('current')
upstreamunreliableBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upstreamunreliableBytes.setStatus('current')
upstreamoverheadBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upstreamoverheadBytes.setStatus('current')
upstreamtotalKiloBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upstreamtotalKiloBytes.setStatus('current')
otastatstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otastatstime.setStatus('current')
remoteucpTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4), )
if mibBuilder.loadTexts: remoteucpTable.setStatus('current')
remoteucpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "ucpnmdid"))
if mibBuilder.loadTexts: remoteucpEntry.setStatus('current')
ucpnmdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ucpnmdid.setStatus('current')
upsnr = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsnr.setStatus('current')
poweradjustment = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: poweradjustment.setStatus('current')
symboloffset = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: symboloffset.setStatus('current')
frequencyoffset = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frequencyoffset.setStatus('current')
scpcsnrcal = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scpcsnrcal.setStatus('current')
ucpstatstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ucpstatstime.setStatus('current')
latencystatsTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5), )
if mibBuilder.loadTexts: latencystatsTable.setStatus('current')
latencystatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "latnmdid"))
if mibBuilder.loadTexts: latencystatsEntry.setStatus('current')
latnmdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: latnmdid.setStatus('current')
latnmname = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: latnmname.setStatus('current')
latnmsn = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: latnmsn.setStatus('current')
mgmtipaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmtipaddress.setStatus('current')
latencyvalue = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: latencyvalue.setStatus('current')
networkname = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: networkname.setStatus('current')
latstatstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: latstatstime.setStatus('current')
hubstatsTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6), )
if mibBuilder.loadTexts: hubstatsTable.setStatus('current')
hubstatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "linecarddid"))
if mibBuilder.loadTexts: hubstatsEntry.setStatus('current')
linecarddid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linecarddid.setStatus('current')
linecardsn = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linecardsn.setStatus('current')
txattempts = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txattempts.setStatus('current')
txbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txbytes.setStatus('current')
txerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txerrors.setStatus('current')
acqcrcerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acqcrcerrors.setStatus('current')
trafficcrcerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trafficcrcerrors.setStatus('current')
bursts = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bursts.setStatus('current')
rxbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxbytes.setStatus('current')
rxpower = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxpower.setStatus('current')
dmareset = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmareset.setStatus('current')
tunnelrxerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelrxerrors.setStatus('current')
tunneltxerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunneltxerrors.setStatus('current')
txpower = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txpower.setStatus('current')
temp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: temp.setStatus('current')
timeticks = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 16), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeticks.setStatus('current')
agcgain = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agcgain.setStatus('current')
mcagcgain = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcagcgain.setStatus('current')
gige = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gige.setStatus('current')
bufoverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bufoverflow.setStatus('current')
fegacdacval = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fegacdacval.setStatus('current')
gigetxerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gigetxerrors.setStatus('current')
gigerxerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gigerxerrors.setStatus('current')
scpcrxgain = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scpcrxgain.setStatus('current')
scpcrxcof = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scpcrxcof.setStatus('current')
scpclockstat = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scpclockstat.setStatus('current')
scpclockcntr = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scpclockcntr.setStatus('current')
tdmaagcerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmaagcerrors.setStatus('current')
tdmatrafficerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmatrafficerrors.setStatus('current')
tdmabursts = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmabursts.setStatus('current')
tdmabytesrx = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmabytesrx.setStatus('current')
tdmarxgain = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmarxgain.setStatus('current')
hubstatstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubstatstime.setStatus('current')
remotestatusTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3), )
if mibBuilder.loadTexts: remotestatusTable.setStatus('current')
remotestatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "rsnmdid"))
if mibBuilder.loadTexts: remotestatusEntry.setStatus('current')
rsnmdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsnmdid.setStatus('current')
downsnr = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: downsnr.setStatus('current')
rstxpower = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rstxpower.setStatus('current')
rsrxpower = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsrxpower.setStatus('current')
digitalrxgain = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: digitalrxgain.setStatus('current')
flldac = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flldac.setStatus('current')
rxcof = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxcof.setStatus('current')
rstemp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rstemp.setStatus('current')
tdmlost = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmlost.setStatus('current')
scpcerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scpcerrors.setStatus('current')
rstimeticks = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rstimeticks.setStatus('current')
lanport = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanport.setStatus('current')
ethmode = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethmode.setStatus('current')
ethspeed = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethspeed.setStatus('current')
ethautonegotiate = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethautonegotiate.setStatus('current')
telnetsession = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: telnetsession.setStatus('current')
isitesession = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isitesession.setStatus('current')
inmesh = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inmesh.setStatus('current')
fastfadecorr = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fastfadecorr.setStatus('current')
crc8error = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crc8error.setStatus('current')
crc32error = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crc32error.setStatus('current')
ncrlost = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncrlost.setStatus('current')
plsynclost = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsynclost.setStatus('current')
clockdeltacnt = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clockdeltacnt.setStatus('current')
digitalagcgain = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: digitalagcgain.setStatus('current')
tuneragcgain = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tuneragcgain.setStatus('current')
fooffset = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fooffset.setStatus('current')
tdmacrcerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmacrcerrors.setStatus('current')
tdmasnrcal = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmasnrcal.setStatus('current')
tdmasymoffset = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmasymoffset.setStatus('current')
tdmafreqoffset = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmafreqoffset.setStatus('current')
rxreliable = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxreliable.setStatus('current')
rxunreliable = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxunreliable.setStatus('current')
rxoob = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxoob.setStatus('current')
txreliable = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txreliable.setStatus('current')
txunreliable = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txunreliable.setStatus('current')
txoob = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txoob.setStatus('current')
remotestatstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: remotestatstime.setStatus('current')
resetAllStatTables = MibScalar((1, 3, 6, 1, 4, 1, 13732, 1, 4, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetAllStatTables.setStatus('current')
statsStartTime = MibScalar((1, 3, 6, 1, 4, 1, 13732, 1, 4, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsStartTime.setStatus('current')
dvbS2statsTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9), )
if mibBuilder.loadTexts: dvbS2statsTable.setStatus('current')
dvbS2statsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "dvbnmdid"))
if mibBuilder.loadTexts: dvbS2statsEntry.setStatus('current')
dvbnmdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbnmdid.setStatus('current')
clearskymc = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clearskymc.setStatus('current')
minmc = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: minmc.setStatus('current')
maxmc = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: maxmc.setStatus('current')
currentmc = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentmc.setStatus('current')
availablemc = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: availablemc.setStatus('current')
currentsnr = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentsnr.setStatus('current')
bytesmc01 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc01.setStatus('current')
bytesmc02 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc02.setStatus('current')
bytesmc03 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc03.setStatus('current')
bytesmc04 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc04.setStatus('current')
bytesmc05 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc05.setStatus('current')
bytesmc06 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc06.setStatus('current')
bytesmc07 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc07.setStatus('current')
bytesmc08 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc08.setStatus('current')
bytesmc09 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc09.setStatus('current')
bytesmc10 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc10.setStatus('current')
bytesmc11 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc11.setStatus('current')
bytesmc12 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc12.setStatus('current')
bytesmc13 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc13.setStatus('current')
bytesmc14 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc14.setStatus('current')
bytesmc15 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc15.setStatus('current')
bytesmc16 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc16.setStatus('current')
bytesmc17 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc17.setStatus('current')
bytesmc18 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc18.setStatus('current')
bytesmc19 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc19.setStatus('current')
bytesmc20 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc20.setStatus('current')
bytesmc21 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc21.setStatus('current')
bytesmc22 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc22.setStatus('current')
bytesmc23 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc23.setStatus('current')
bytesmc24 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc24.setStatus('current')
bytesmc25 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc25.setStatus('current')
bytesmc26 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc26.setStatus('current')
bytesmc27 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc27.setStatus('current')
bytesmc28 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 35), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc28.setStatus('current')
bytesmcTOT = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 36), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmcTOT.setStatus('current')
dvbS2statstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbS2statstime.setStatus('current')
hubS2statsTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10), )
if mibBuilder.loadTexts: hubS2statsTable.setStatus('current')
hubS2statsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "dvbhubdid"))
if mibBuilder.loadTexts: hubS2statsEntry.setStatus('current')
dvbhubdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbhubdid.setStatus('current')
udprxhigh = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: udprxhigh.setStatus('current')
udprxlow = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: udprxlow.setStatus('current')
dummyframes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dummyframes.setStatus('current')
hubbytesmc01 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc01.setStatus('current')
hubbytesmc02 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc02.setStatus('current')
hubbytesmc03 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc03.setStatus('current')
hubbytesmc04 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc04.setStatus('current')
hubbytesmc05 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc05.setStatus('current')
hubbytesmc06 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc06.setStatus('current')
hubbytesmc07 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc07.setStatus('current')
hubbytesmc08 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc08.setStatus('current')
hubbytesmc09 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc09.setStatus('current')
hubbytesmc10 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc10.setStatus('current')
hubbytesmc11 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc11.setStatus('current')
hubbytesmc12 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc12.setStatus('current')
hubbytesmc13 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc13.setStatus('current')
hubbytesmc14 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc14.setStatus('current')
hubbytesmc15 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc15.setStatus('current')
hubbytesmc16 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc16.setStatus('current')
hubbytesmc17 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc17.setStatus('current')
hubbytesmc18 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc18.setStatus('current')
hubbytesmc19 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc19.setStatus('current')
hubbytesmc20 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc20.setStatus('current')
hubbytesmc21 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc21.setStatus('current')
hubbytesmc22 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc22.setStatus('current')
hubbytesmc23 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc23.setStatus('current')
hubbytesmc24 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc24.setStatus('current')
hubbytesmc25 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc25.setStatus('current')
hubbytesmc26 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc26.setStatus('current')
hubbytesmc27 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc27.setStatus('current')
hubbytesmc28 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc28.setStatus('current')
hubbytesmcTOT = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmcTOT.setStatus('current')
hubs2statstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubs2statstime.setStatus('current')
rxstatsTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11), )
if mibBuilder.loadTexts: rxstatsTable.setStatus('current')
rxstatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "rxnmdid"))
if mibBuilder.loadTexts: rxstatsEntry.setStatus('current')
rxnmdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxnmdid.setStatus('current')
rxstatstype = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxstatstype.setStatus('current')
tacqbursts = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tacqbursts.setStatus('current')
tacqcrc = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tacqcrc.setStatus('current')
tacqmissing = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tacqmissing.setStatus('current')
tacqmismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tacqmismatch.setStatus('current')
tdatabursts = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdatabursts.setStatus('current')
tdatacrc = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdatacrc.setStatus('current')
tdatamissing = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdatamissing.setStatus('current')
tdatamismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdatamismatch.setStatus('current')
tkeepalive = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tkeepalive.setStatus('current')
sdatapackets = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdatapackets.setStatus('current')
shdlcerror = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shdlcerror.setStatus('current')
sdatamismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdatamismatch.setStatus('current')
skeepalive = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: skeepalive.setStatus('current')
rxstatstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxstatstime.setStatus('current')
chassisGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 1)).setObjects(("IDIRECT-REMOTE-MIB", "chassisid"), ("IDIRECT-REMOTE-MIB", "chassisname"), ("IDIRECT-REMOTE-MIB", "chstate"), ("IDIRECT-REMOTE-MIB", "chwarnings"), ("IDIRECT-REMOTE-MIB", "chalarms"), ("IDIRECT-REMOTE-MIB", "chassisEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    chassisGroup = chassisGroup.setStatus('current')
ppGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 2)).setObjects(("IDIRECT-REMOTE-MIB", "ppid"), ("IDIRECT-REMOTE-MIB", "ppteleportid"), ("IDIRECT-REMOTE-MIB", "ppname"), ("IDIRECT-REMOTE-MIB", "ppstate"), ("IDIRECT-REMOTE-MIB", "ppwarnings"), ("IDIRECT-REMOTE-MIB", "ppalarms"), ("IDIRECT-REMOTE-MIB", "ppEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ppGroup = ppGroup.setStatus('current')
netModemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 3)).setObjects(("IDIRECT-REMOTE-MIB", "netdid"), ("IDIRECT-REMOTE-MIB", "nmppid"), ("IDIRECT-REMOTE-MIB", "networkid"), ("IDIRECT-REMOTE-MIB", "nmteleportid"), ("IDIRECT-REMOTE-MIB", "nmid"), ("IDIRECT-REMOTE-MIB", "inroutegroupid"), ("IDIRECT-REMOTE-MIB", "nmname"), ("IDIRECT-REMOTE-MIB", "ethipadr"), ("IDIRECT-REMOTE-MIB", "dcmslotnum"), ("IDIRECT-REMOTE-MIB", "chassid"), ("IDIRECT-REMOTE-MIB", "typeid"), ("IDIRECT-REMOTE-MIB", "nmstate"), ("IDIRECT-REMOTE-MIB", "nmwarnings"), ("IDIRECT-REMOTE-MIB", "nmalarms"), ("IDIRECT-REMOTE-MIB", "nmstatus"), ("IDIRECT-REMOTE-MIB", "geoloc"), ("IDIRECT-REMOTE-MIB", "netModemEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    netModemGroup = netModemGroup.setStatus('current')
ipStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 4)).setObjects(("IDIRECT-REMOTE-MIB", "nmdid"), ("IDIRECT-REMOTE-MIB", "rxtcp"), ("IDIRECT-REMOTE-MIB", "rxudp"), ("IDIRECT-REMOTE-MIB", "rxicmp"), ("IDIRECT-REMOTE-MIB", "rxigmp"), ("IDIRECT-REMOTE-MIB", "rxhttp"), ("IDIRECT-REMOTE-MIB", "rxother"), ("IDIRECT-REMOTE-MIB", "txtcp"), ("IDIRECT-REMOTE-MIB", "txudp"), ("IDIRECT-REMOTE-MIB", "txicmp"), ("IDIRECT-REMOTE-MIB", "txigmp"), ("IDIRECT-REMOTE-MIB", "txhttp"), ("IDIRECT-REMOTE-MIB", "txother"), ("IDIRECT-REMOTE-MIB", "ipstatstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipStatsGroup = ipStatsGroup.setStatus('current')
otaStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 5)).setObjects(("IDIRECT-REMOTE-MIB", "otanmdid"), ("IDIRECT-REMOTE-MIB", "otamode"), ("IDIRECT-REMOTE-MIB", "downstreamreliableBytes"), ("IDIRECT-REMOTE-MIB", "downstreamunreliableBytes"), ("IDIRECT-REMOTE-MIB", "downstreamoverheadBytes"), ("IDIRECT-REMOTE-MIB", "downstreammulticastBytes"), ("IDIRECT-REMOTE-MIB", "downstreambroadcastBytes"), ("IDIRECT-REMOTE-MIB", "downstreammulticastSymbols"), ("IDIRECT-REMOTE-MIB", "downstreambroadcastSymbols"), ("IDIRECT-REMOTE-MIB", "downstreamtotalKiloBytes"), ("IDIRECT-REMOTE-MIB", "upstreamreliableBytes"), ("IDIRECT-REMOTE-MIB", "upstreamunreliableBytes"), ("IDIRECT-REMOTE-MIB", "upstreamoverheadBytes"), ("IDIRECT-REMOTE-MIB", "upstreamtotalKiloBytes"), ("IDIRECT-REMOTE-MIB", "otastatstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    otaStatsGroup = otaStatsGroup.setStatus('current')
remoteucpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 6)).setObjects(("IDIRECT-REMOTE-MIB", "ucpnmdid"), ("IDIRECT-REMOTE-MIB", "upsnr"), ("IDIRECT-REMOTE-MIB", "poweradjustment"), ("IDIRECT-REMOTE-MIB", "symboloffset"), ("IDIRECT-REMOTE-MIB", "frequencyoffset"), ("IDIRECT-REMOTE-MIB", "scpcsnrcal"), ("IDIRECT-REMOTE-MIB", "ucpstatstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    remoteucpGroup = remoteucpGroup.setStatus('current')
latencyStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 7)).setObjects(("IDIRECT-REMOTE-MIB", "latnmdid"), ("IDIRECT-REMOTE-MIB", "latnmname"), ("IDIRECT-REMOTE-MIB", "latnmsn"), ("IDIRECT-REMOTE-MIB", "mgmtipaddress"), ("IDIRECT-REMOTE-MIB", "latencyvalue"), ("IDIRECT-REMOTE-MIB", "networkname"), ("IDIRECT-REMOTE-MIB", "latstatstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    latencyStatsGroup = latencyStatsGroup.setStatus('current')
hubStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 8)).setObjects(("IDIRECT-REMOTE-MIB", "linecarddid"), ("IDIRECT-REMOTE-MIB", "linecardsn"), ("IDIRECT-REMOTE-MIB", "txattempts"), ("IDIRECT-REMOTE-MIB", "txbytes"), ("IDIRECT-REMOTE-MIB", "txerrors"), ("IDIRECT-REMOTE-MIB", "acqcrcerrors"), ("IDIRECT-REMOTE-MIB", "trafficcrcerrors"), ("IDIRECT-REMOTE-MIB", "bursts"), ("IDIRECT-REMOTE-MIB", "rxbytes"), ("IDIRECT-REMOTE-MIB", "rxpower"), ("IDIRECT-REMOTE-MIB", "dmareset"), ("IDIRECT-REMOTE-MIB", "tunnelrxerrors"), ("IDIRECT-REMOTE-MIB", "tunneltxerrors"), ("IDIRECT-REMOTE-MIB", "txpower"), ("IDIRECT-REMOTE-MIB", "temp"), ("IDIRECT-REMOTE-MIB", "timeticks"), ("IDIRECT-REMOTE-MIB", "agcgain"), ("IDIRECT-REMOTE-MIB", "mcagcgain"), ("IDIRECT-REMOTE-MIB", "gige"), ("IDIRECT-REMOTE-MIB", "bufoverflow"), ("IDIRECT-REMOTE-MIB", "fegacdacval"), ("IDIRECT-REMOTE-MIB", "gigetxerrors"), ("IDIRECT-REMOTE-MIB", "gigerxerrors"), ("IDIRECT-REMOTE-MIB", "scpcrxgain"), ("IDIRECT-REMOTE-MIB", "scpcrxcof"), ("IDIRECT-REMOTE-MIB", "scpclockstat"), ("IDIRECT-REMOTE-MIB", "scpclockcntr"), ("IDIRECT-REMOTE-MIB", "tdmaagcerrors"), ("IDIRECT-REMOTE-MIB", "tdmatrafficerrors"), ("IDIRECT-REMOTE-MIB", "tdmabursts"), ("IDIRECT-REMOTE-MIB", "tdmabytesrx"), ("IDIRECT-REMOTE-MIB", "tdmarxgain"), ("IDIRECT-REMOTE-MIB", "hubstatstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hubStatsGroup = hubStatsGroup.setStatus('current')
remotestatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 9)).setObjects(("IDIRECT-REMOTE-MIB", "rsnmdid"), ("IDIRECT-REMOTE-MIB", "downsnr"), ("IDIRECT-REMOTE-MIB", "rstxpower"), ("IDIRECT-REMOTE-MIB", "rsrxpower"), ("IDIRECT-REMOTE-MIB", "digitalrxgain"), ("IDIRECT-REMOTE-MIB", "flldac"), ("IDIRECT-REMOTE-MIB", "rxcof"), ("IDIRECT-REMOTE-MIB", "rstemp"), ("IDIRECT-REMOTE-MIB", "tdmlost"), ("IDIRECT-REMOTE-MIB", "scpcerrors"), ("IDIRECT-REMOTE-MIB", "rstimeticks"), ("IDIRECT-REMOTE-MIB", "lanport"), ("IDIRECT-REMOTE-MIB", "ethmode"), ("IDIRECT-REMOTE-MIB", "ethspeed"), ("IDIRECT-REMOTE-MIB", "ethautonegotiate"), ("IDIRECT-REMOTE-MIB", "telnetsession"), ("IDIRECT-REMOTE-MIB", "isitesession"), ("IDIRECT-REMOTE-MIB", "inmesh"), ("IDIRECT-REMOTE-MIB", "fastfadecorr"), ("IDIRECT-REMOTE-MIB", "crc8error"), ("IDIRECT-REMOTE-MIB", "crc32error"), ("IDIRECT-REMOTE-MIB", "ncrlost"), ("IDIRECT-REMOTE-MIB", "plsynclost"), ("IDIRECT-REMOTE-MIB", "clockdeltacnt"), ("IDIRECT-REMOTE-MIB", "digitalagcgain"), ("IDIRECT-REMOTE-MIB", "tuneragcgain"), ("IDIRECT-REMOTE-MIB", "fooffset"), ("IDIRECT-REMOTE-MIB", "tdmacrcerrors"), ("IDIRECT-REMOTE-MIB", "tdmasnrcal"), ("IDIRECT-REMOTE-MIB", "tdmasymoffset"), ("IDIRECT-REMOTE-MIB", "tdmafreqoffset"), ("IDIRECT-REMOTE-MIB", "rxreliable"), ("IDIRECT-REMOTE-MIB", "rxunreliable"), ("IDIRECT-REMOTE-MIB", "rxoob"), ("IDIRECT-REMOTE-MIB", "txreliable"), ("IDIRECT-REMOTE-MIB", "txunreliable"), ("IDIRECT-REMOTE-MIB", "txoob"), ("IDIRECT-REMOTE-MIB", "remotestatstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    remotestatusGroup = remotestatusGroup.setStatus('current')
netmodemNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 10)).setObjects(("IDIRECT-REMOTE-MIB", "snmpProxyStart"), ("IDIRECT-REMOTE-MIB", "snmpProxyStop"), ("IDIRECT-REMOTE-MIB", "upstreamSNR"), ("IDIRECT-REMOTE-MIB", "downstreamSNR"), ("IDIRECT-REMOTE-MIB", "tempLimit"), ("IDIRECT-REMOTE-MIB", "acqHubModemCRC"), ("IDIRECT-REMOTE-MIB", "trafficHubModemCRC"), ("IDIRECT-REMOTE-MIB", "latency"), ("IDIRECT-REMOTE-MIB", "symbolOffset"), ("IDIRECT-REMOTE-MIB", "ethernetUnplugged"), ("IDIRECT-REMOTE-MIB", "ucpLostContact"), ("IDIRECT-REMOTE-MIB", "llDown"), ("IDIRECT-REMOTE-MIB", "ucpOutOfNetwork"), ("IDIRECT-REMOTE-MIB", "latTimeout"), ("IDIRECT-REMOTE-MIB", "lackHubStats"), ("IDIRECT-REMOTE-MIB", "remoteOffline"), ("IDIRECT-REMOTE-MIB", "rxOverflowFramesHubModem"), ("IDIRECT-REMOTE-MIB", "downstreamPpsOverdrive"), ("IDIRECT-REMOTE-MIB", "backplaneLost10Mhz"), ("IDIRECT-REMOTE-MIB", "calibratedTxPower"), ("IDIRECT-REMOTE-MIB", "txFrequency"), ("IDIRECT-REMOTE-MIB", "mobileLostGps"), ("IDIRECT-REMOTE-MIB", "scpcRxErrors"), ("IDIRECT-REMOTE-MIB", "fllDacErrors"), ("IDIRECT-REMOTE-MIB", "lcFailure"), ("IDIRECT-REMOTE-MIB", "meshError"), ("IDIRECT-REMOTE-MIB", "meshTdmLockLost"), ("IDIRECT-REMOTE-MIB", "meshHubRxScpcSnr"), ("IDIRECT-REMOTE-MIB", "meshHubRxTdmaSnr"), ("IDIRECT-REMOTE-MIB", "lineCardAGCOutOFRange"), ("IDIRECT-REMOTE-MIB", "meshRmtRxScpcSnr"), ("IDIRECT-REMOTE-MIB", "meshRmtRxTDMASnr"), ("IDIRECT-REMOTE-MIB", "remoteAgcOutOfRange"), ("IDIRECT-REMOTE-MIB", "reset"), ("IDIRECT-REMOTE-MIB", "unready"), ("IDIRECT-REMOTE-MIB", "flash"), ("IDIRECT-REMOTE-MIB", "activationStatus"), ("IDIRECT-REMOTE-MIB", "elsewhereError"), ("IDIRECT-REMOTE-MIB", "fanAlarm"), ("IDIRECT-REMOTE-MIB", "backplaneLostSOF"), ("IDIRECT-REMOTE-MIB", "rmtMAXTxPwr"), ("IDIRECT-REMOTE-MIB", "bladeCPUHigh"), ("IDIRECT-REMOTE-MIB", "rmtSleep"), ("IDIRECT-REMOTE-MIB", "hubTenMHzAlarm"), ("IDIRECT-REMOTE-MIB", "gigeFailed"), ("IDIRECT-REMOTE-MIB", "gigeHealth"), ("IDIRECT-REMOTE-MIB", "rxOnly"), ("IDIRECT-REMOTE-MIB", "crc8Errors"), ("IDIRECT-REMOTE-MIB", "crc32Errors"), ("IDIRECT-REMOTE-MIB", "ravenFailed"), ("IDIRECT-REMOTE-MIB", "rmttxTDMAAcqCrc"), ("IDIRECT-REMOTE-MIB", "rmttxTDMADataCrc"), ("IDIRECT-REMOTE-MIB", "rmttxTDMAAcqMismatch"), ("IDIRECT-REMOTE-MIB", "rmttxTDMADataMismatch"), ("IDIRECT-REMOTE-MIB", "rmttxTDMADataMissing"), ("IDIRECT-REMOTE-MIB", "rmttxSCPCLostLock"), ("IDIRECT-REMOTE-MIB", "rmttxSCPCHdlcError"), ("IDIRECT-REMOTE-MIB", "rmttxSCPCDataMismatch"), ("IDIRECT-REMOTE-MIB", "rmtStatusChange"), ("IDIRECT-REMOTE-MIB", "triStateDormant"), ("IDIRECT-REMOTE-MIB", "triStateDormant"), ("IDIRECT-REMOTE-MIB", "rmtMCFPDecryptFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    netmodemNotificationsGroup = netmodemNotificationsGroup.setStatus('current')
chassisNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 11)).setObjects(("IDIRECT-REMOTE-MIB", "powerAlarm1"), ("IDIRECT-REMOTE-MIB", "powerAlarm2"), ("IDIRECT-REMOTE-MIB", "powerAlarm3"), ("IDIRECT-REMOTE-MIB", "fanAlarmChassis"), ("IDIRECT-REMOTE-MIB", "chassisDown"), ("IDIRECT-REMOTE-MIB", "rcmAAlarm"), ("IDIRECT-REMOTE-MIB", "rcmBAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    chassisNotificationsGroup = chassisNotificationsGroup.setStatus('current')
ppNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 12)).setObjects(("IDIRECT-REMOTE-MIB", "ppStateTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ppNotificationsGroup = ppNotificationsGroup.setStatus('current')
commonGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 13)).setObjects(("IDIRECT-REMOTE-MIB", "resetAllStatTables"), ("IDIRECT-REMOTE-MIB", "statsStartTime"), ("IDIRECT-REMOTE-MIB", "trap_rem_desc"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_level"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    commonGroup = commonGroup.setStatus('current')
hubs2StatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 14)).setObjects(("IDIRECT-REMOTE-MIB", "dvbhubdid"), ("IDIRECT-REMOTE-MIB", "udprxhigh"), ("IDIRECT-REMOTE-MIB", "udprxlow"), ("IDIRECT-REMOTE-MIB", "dummyframes"), ("IDIRECT-REMOTE-MIB", "hubbytesmc01"), ("IDIRECT-REMOTE-MIB", "hubbytesmc02"), ("IDIRECT-REMOTE-MIB", "hubbytesmc03"), ("IDIRECT-REMOTE-MIB", "hubbytesmc04"), ("IDIRECT-REMOTE-MIB", "hubbytesmc05"), ("IDIRECT-REMOTE-MIB", "hubbytesmc06"), ("IDIRECT-REMOTE-MIB", "hubbytesmc07"), ("IDIRECT-REMOTE-MIB", "hubbytesmc08"), ("IDIRECT-REMOTE-MIB", "hubbytesmc09"), ("IDIRECT-REMOTE-MIB", "hubbytesmc10"), ("IDIRECT-REMOTE-MIB", "hubbytesmc11"), ("IDIRECT-REMOTE-MIB", "hubbytesmc12"), ("IDIRECT-REMOTE-MIB", "hubbytesmc13"), ("IDIRECT-REMOTE-MIB", "hubbytesmc14"), ("IDIRECT-REMOTE-MIB", "hubbytesmc15"), ("IDIRECT-REMOTE-MIB", "hubbytesmc16"), ("IDIRECT-REMOTE-MIB", "hubbytesmc17"), ("IDIRECT-REMOTE-MIB", "hubbytesmc18"), ("IDIRECT-REMOTE-MIB", "hubbytesmc19"), ("IDIRECT-REMOTE-MIB", "hubbytesmc20"), ("IDIRECT-REMOTE-MIB", "hubbytesmc21"), ("IDIRECT-REMOTE-MIB", "hubbytesmc22"), ("IDIRECT-REMOTE-MIB", "hubbytesmc23"), ("IDIRECT-REMOTE-MIB", "hubbytesmc24"), ("IDIRECT-REMOTE-MIB", "hubbytesmc25"), ("IDIRECT-REMOTE-MIB", "hubbytesmc26"), ("IDIRECT-REMOTE-MIB", "hubbytesmc27"), ("IDIRECT-REMOTE-MIB", "hubbytesmc28"), ("IDIRECT-REMOTE-MIB", "hubbytesmcTOT"), ("IDIRECT-REMOTE-MIB", "hubs2statstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hubs2StatsGroup = hubs2StatsGroup.setStatus('current')
rmts2StatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 15)).setObjects(("IDIRECT-REMOTE-MIB", "dvbnmdid"), ("IDIRECT-REMOTE-MIB", "clearskymc"), ("IDIRECT-REMOTE-MIB", "minmc"), ("IDIRECT-REMOTE-MIB", "maxmc"), ("IDIRECT-REMOTE-MIB", "currentmc"), ("IDIRECT-REMOTE-MIB", "availablemc"), ("IDIRECT-REMOTE-MIB", "currentsnr"), ("IDIRECT-REMOTE-MIB", "bytesmc01"), ("IDIRECT-REMOTE-MIB", "bytesmc02"), ("IDIRECT-REMOTE-MIB", "bytesmc03"), ("IDIRECT-REMOTE-MIB", "bytesmc04"), ("IDIRECT-REMOTE-MIB", "bytesmc05"), ("IDIRECT-REMOTE-MIB", "bytesmc06"), ("IDIRECT-REMOTE-MIB", "bytesmc07"), ("IDIRECT-REMOTE-MIB", "bytesmc08"), ("IDIRECT-REMOTE-MIB", "bytesmc09"), ("IDIRECT-REMOTE-MIB", "bytesmc10"), ("IDIRECT-REMOTE-MIB", "bytesmc11"), ("IDIRECT-REMOTE-MIB", "bytesmc12"), ("IDIRECT-REMOTE-MIB", "bytesmc13"), ("IDIRECT-REMOTE-MIB", "bytesmc14"), ("IDIRECT-REMOTE-MIB", "bytesmc15"), ("IDIRECT-REMOTE-MIB", "bytesmc16"), ("IDIRECT-REMOTE-MIB", "bytesmc17"), ("IDIRECT-REMOTE-MIB", "bytesmc18"), ("IDIRECT-REMOTE-MIB", "bytesmc19"), ("IDIRECT-REMOTE-MIB", "bytesmc20"), ("IDIRECT-REMOTE-MIB", "bytesmc21"), ("IDIRECT-REMOTE-MIB", "bytesmc22"), ("IDIRECT-REMOTE-MIB", "bytesmc23"), ("IDIRECT-REMOTE-MIB", "bytesmc24"), ("IDIRECT-REMOTE-MIB", "bytesmc25"), ("IDIRECT-REMOTE-MIB", "bytesmc26"), ("IDIRECT-REMOTE-MIB", "bytesmc27"), ("IDIRECT-REMOTE-MIB", "bytesmc28"), ("IDIRECT-REMOTE-MIB", "bytesmcTOT"), ("IDIRECT-REMOTE-MIB", "dvbS2statstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmts2StatsGroup = rmts2StatsGroup.setStatus('current')
rxStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 16)).setObjects(("IDIRECT-REMOTE-MIB", "rxnmdid"), ("IDIRECT-REMOTE-MIB", "rxstatstype"), ("IDIRECT-REMOTE-MIB", "tacqbursts"), ("IDIRECT-REMOTE-MIB", "tacqcrc"), ("IDIRECT-REMOTE-MIB", "tacqmissing"), ("IDIRECT-REMOTE-MIB", "tacqmismatch"), ("IDIRECT-REMOTE-MIB", "tdatabursts"), ("IDIRECT-REMOTE-MIB", "tdatacrc"), ("IDIRECT-REMOTE-MIB", "tdatamissing"), ("IDIRECT-REMOTE-MIB", "tdatamismatch"), ("IDIRECT-REMOTE-MIB", "tkeepalive"), ("IDIRECT-REMOTE-MIB", "sdatapackets"), ("IDIRECT-REMOTE-MIB", "shdlcerror"), ("IDIRECT-REMOTE-MIB", "sdatamismatch"), ("IDIRECT-REMOTE-MIB", "skeepalive"), ("IDIRECT-REMOTE-MIB", "rxstatstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rxStatsGroup = rxStatsGroup.setStatus('current')
mibBuilder.exportSymbols("IDIRECT-REMOTE-MIB", hubs2statstime=hubs2statstime, dvbhubdid=dvbhubdid, chassis=chassis, otastatsEntry=otastatsEntry, calibratedTxPower=calibratedTxPower, bytesmc08=bytesmc08, bytesmc13=bytesmc13, hubbytesmc19=hubbytesmc19, bytesmc05=bytesmc05, bytesmc09=bytesmc09, downstreamreliableBytes=downstreamreliableBytes, fllDacErrors=fllDacErrors, lostChassisConnection=lostChassisConnection, trap_rem_ip=trap_rem_ip, ppStateTrap=ppStateTrap, digitalrxgain=digitalrxgain, tuneragcgain=tuneragcgain, rxother=rxother, linecarddid=linecarddid, llDown=llDown, snmpProxyStart=snmpProxyStart, nmstatus=nmstatus, remotestatstime=remotestatstime, ipstatsEntry=ipstatsEntry, frequencyoffset=frequencyoffset, bytesmc23=bytesmc23, downsnr=downsnr, rxstatsTable=rxstatsTable, ncrlost=ncrlost, rmttxTDMADataMissing=rmttxTDMADataMissing, hubbytesmc17=hubbytesmc17, flldac=flldac, rxpower=rxpower, chstate=chstate, chwarnings=chwarnings, clockdeltacnt=clockdeltacnt, txhttp=txhttp, txother=txother, hubbytesmc23=hubbytesmc23, trap_str=trap_str, trap_level=trap_level, acqcrcerrors=acqcrcerrors, fooffset=fooffset, ppEntry=ppEntry, backplaneLost10Mhz=backplaneLost10Mhz, lanport=lanport, hubstatstime=hubstatstime, remoteucpGroup=remoteucpGroup, netdid=netdid, fastfadecorr=fastfadecorr, mibGroups=mibGroups, bytesmc22=bytesmc22, rmtCAExpired=rmtCAExpired, downstreambroadcastBytes=downstreambroadcastBytes, latencystatsTable=latencystatsTable, ppname=ppname, downstreamSNR=downstreamSNR, nmname=nmname, bytesmc12=bytesmc12, rxoob=rxoob, bytesmc28=bytesmc28, fanAlarm=fanAlarm, hubbytesmc18=hubbytesmc18, hubbytesmc25=hubbytesmc25, nmid=nmid, hubstatsEntry=hubstatsEntry, rmtAcqBurst=rmtAcqBurst, trap_rem_desc=trap_rem_desc, trafficHubModemCRC=trafficHubModemCRC, reset=reset, inmesh=inmesh, bytesmc03=bytesmc03, downstreamPpsOverdrive=downstreamPpsOverdrive, hubbytesmc05=hubbytesmc05, rmttxSCPCHdlcError=rmttxSCPCHdlcError, upstreamSNR=upstreamSNR, gigetxerrors=gigetxerrors, hubS2statsEntry=hubS2statsEntry, ucpnmdid=ucpnmdid, remoteAgcOutOfRange=remoteAgcOutOfRange, trap_sn_id=trap_sn_id, ppteleportid=ppteleportid, scpclockcntr=scpclockcntr, ppNotificationsGroup=ppNotificationsGroup, txoob=txoob, hubTenMHzAlarm=hubTenMHzAlarm, latencyStatsGroup=latencyStatsGroup, statsStartTime=statsStartTime, txbytes=txbytes, tacqmismatch=tacqmismatch, chassisDown=chassisDown, scpcrxgain=scpcrxgain, digitalagcgain=digitalagcgain, downstreamunreliableBytes=downstreamunreliableBytes, microOPMBFault=microOPMBFault, hubbytesmcTOT=hubbytesmcTOT, hubbytesmc27=hubbytesmc27, nmtraps=nmtraps, rstimeticks=rstimeticks, microRCMANotPresent=microRCMANotPresent, meshHubRxTdmaSnr=meshHubRxTdmaSnr, latstatstime=latstatstime, bytesmc04=bytesmc04, scpcsnrcal=scpcsnrcal, tdmlost=tdmlost, meshRmtRxScpcSnr=meshRmtRxScpcSnr, microRCMAFault=microRCMAFault, hubbytesmc20=hubbytesmc20, rmtCAWillExpire=rmtCAWillExpire, geoloc=geoloc, tdmacrcerrors=tdmacrcerrors, lackHubStats=lackHubStats, ppalarms=ppalarms, tacqcrc=tacqcrc, rxOverflowFramesHubModem=rxOverflowFramesHubModem, nmalarms=nmalarms, bladeNoEncLic=bladeNoEncLic, bytesmc14=bytesmc14, meshError=meshError, ipstatsTable=ipstatsTable, hubbytesmc22=hubbytesmc22, rmts2StatsGroup=rmts2StatsGroup, rmttxTDMADataCrc=rmttxTDMADataCrc, txerrors=txerrors, microPwrAlarmABad=microPwrAlarmABad, bytesmc02=bytesmc02, bytesmc20=bytesmc20, elsewhereError=elsewhereError, rmtStatusChange=rmtStatusChange, bursts=bursts, chassisGroup=chassisGroup, rmttxTDMAAcqCrc=rmttxTDMAAcqCrc, ethmode=ethmode, hubS2statsTable=hubS2statsTable, dvbnmdid=dvbnmdid, bytesmcTOT=bytesmcTOT, hubbytesmc26=hubbytesmc26, upstreamreliableBytes=upstreamreliableBytes, hubbytesmc06=hubbytesmc06, rmttxTDMAAcqMismatch=rmttxTDMAAcqMismatch, microFSMNotPresent=microFSMNotPresent, tunneltxerrors=tunneltxerrors, idirectstats=idirectstats, latnmsn=latnmsn, tdmasymoffset=tdmasymoffset, nmteleportid=nmteleportid, tdmarxgain=tdmarxgain, dvbS2statsEntry=dvbS2statsEntry, otastatsTable=otastatsTable, PYSNMP_MODULE_ID=iDirectMIB, bytesmc07=bytesmc07, acqHubModemCRC=acqHubModemCRC, tunnelrxerrors=tunnelrxerrors, hubStatsGroup=hubStatsGroup, scpcRxErrors=scpcRxErrors, ppGroup=ppGroup, downstreambroadcastSymbols=downstreambroadcastSymbols, tdmabursts=tdmabursts, iDirectTraps=iDirectTraps, poweradjustment=poweradjustment, microPwrAlarmBOverTemp=microPwrAlarmBOverTemp, pp=pp, ethernetUnplugged=ethernetUnplugged, flash=flash, nmwarnings=nmwarnings, rxStatsGroup=rxStatsGroup, scpcrxcof=scpcrxcof, microFSMFanFault=microFSMFanFault, maxmc=maxmc, txFrequency=txFrequency, upstreamoverheadBytes=upstreamoverheadBytes, remoteOffline=remoteOffline, downstreamoverheadBytes=downstreamoverheadBytes, networkid=networkid, clearskymc=clearskymc, ppstate=ppstate, downstreamtotalKiloBytes=downstreamtotalKiloBytes, remotestatusTable=remotestatusTable, nmstate=nmstate, networkname=networkname, microFSMFault=microFSMFault, mcagcgain=mcagcgain, hubbytesmc10=hubbytesmc10, lcFailure=lcFailure, bytesmc10=bytesmc10, chassisTable=chassisTable, lineCardAGCOutOFRange=lineCardAGCOutOFRange, tdatacrc=tdatacrc, txtcp=txtcp, fanAlarmChassis=fanAlarmChassis, chassisEntries=chassisEntries, rxigmp=rxigmp, rxbytes=rxbytes, chassisname=chassisname, downstreammulticastSymbols=downstreammulticastSymbols, microChassisOverTemp=microChassisOverTemp, remotestatusEntry=remotestatusEntry, hubbytesmc12=hubbytesmc12, mgmtipaddress=mgmtipaddress, latency=latency, rxtcp=rxtcp, plsynclost=plsynclost, latencystatsEntry=latencystatsEntry, rxnmdid=rxnmdid, minmc=minmc, shdlcerror=shdlcerror, txigmp=txigmp, udprxhigh=udprxhigh, triStateDormant=triStateDormant, txudp=txudp, gigeFailed=gigeFailed, dcmslotnum=dcmslotnum, telnetsession=telnetsession, tkeepalive=tkeepalive, rxstatstime=rxstatstime, ppid=ppid, downstreammulticastBytes=downstreammulticastBytes, trafficcrcerrors=trafficcrcerrors, ucpOutOfNetwork=ucpOutOfNetwork, otanmdid=otanmdid, txreliable=txreliable, agcgain=agcgain, hubbytesmc16=hubbytesmc16, meshRmtRxTDMASnr=meshRmtRxTDMASnr, rxudp=rxudp, chtraps=chtraps, rxunreliable=rxunreliable, chassid=chassid, linecardsn=linecardsn, microAlarmDisabled=microAlarmDisabled, ravenFailed=ravenFailed, bytesmc18=bytesmc18, rstemp=rstemp, meshTdmLockLost=meshTdmLockLost, currentsnr=currentsnr, bytesmc25=bytesmc25, remotestatusGroup=remotestatusGroup, ethipadr=ethipadr, bytesmc01=bytesmc01, tacqmissing=tacqmissing, rmtCAInvalid=rmtCAInvalid, bufoverflow=bufoverflow, mobileLostGps=mobileLostGps, scpclockstat=scpclockstat, hubbytesmc13=hubbytesmc13, ethautonegotiate=ethautonegotiate, typeid=typeid, latnmname=latnmname, tdmafreqoffset=tdmafreqoffset, hubbytesmc02=hubbytesmc02, ucpstatstime=ucpstatstime, ipStatsGroup=ipStatsGroup, bytesmc15=bytesmc15, rxcof=rxcof)
mibBuilder.exportSymbols("IDIRECT-REMOTE-MIB", symbolOffset=symbolOffset, ucpLostContact=ucpLostContact, netModemEntries=netModemEntries, chassisEntry=chassisEntry, ppEntries=ppEntries, hubbytesmc01=hubbytesmc01, rxicmp=rxicmp, gige=gige, upsnr=upsnr, sdatamismatch=sdatamismatch, ppTable=ppTable, upstreamunreliableBytes=upstreamunreliableBytes, chassisNotificationsGroup=chassisNotificationsGroup, netModemEntry=netModemEntry, unready=unready, tacqbursts=tacqbursts, rmttxTDMADataMismatch=rmttxTDMADataMismatch, crc8Errors=crc8Errors, txunreliable=txunreliable, sdatapackets=sdatapackets, nmppid=nmppid, txattempts=txattempts, rmtMAXTxPwr=rmtMAXTxPwr, scpcerrors=scpcerrors, meshHubRxScpcSnr=meshHubRxScpcSnr, hubbytesmc09=hubbytesmc09, tempLimit=tempLimit, remoteucpEntry=remoteucpEntry, crc32Errors=crc32Errors, resetAllStatTables=resetAllStatTables, tdmatrafficerrors=tdmatrafficerrors, dmareset=dmareset, tdatamismatch=tdatamismatch, hubbytesmc15=hubbytesmc15, hubbytesmc21=hubbytesmc21, rsrxpower=rsrxpower, skeepalive=skeepalive, rcmBAlarm=rcmBAlarm, dummyframes=dummyframes, tdatabursts=tdatabursts, activationStatus=activationStatus, hubbytesmc04=hubbytesmc04, bytesmc16=bytesmc16, tdmasnrcal=tdmasnrcal, rmtSleep=rmtSleep, triStateIdle=triStateIdle, hubbytesmc03=hubbytesmc03, hubbytesmc14=hubbytesmc14, bytesmc06=bytesmc06, iDirectMIB=iDirectMIB, iDirectObjects=iDirectObjects, microIFMFault=microIFMFault, dvbS2statstime=dvbS2statstime, bytesmc27=bytesmc27, rxstatstype=rxstatstype, ethspeed=ethspeed, symboloffset=symboloffset, tdatamissing=tdatamissing, pptraps=pptraps, dvbS2statsTable=dvbS2statsTable, upstreamtotalKiloBytes=upstreamtotalKiloBytes, isitesession=isitesession, gigeHealth=gigeHealth, netModemTable=netModemTable, tdmabytesrx=tdmabytesrx, microIFMNotPresent=microIFMNotPresent, remoteucpTable=remoteucpTable, hubbytesmc07=hubbytesmc07, chalarms=chalarms, bytesmc26=bytesmc26, bytesmc19=bytesmc19, availablemc=availablemc, microPwrAlarmBBad=microPwrAlarmBBad, txicmp=txicmp, rmtMCFPDecryptFail=rmtMCFPDecryptFail, otamode=otamode, microPwrAlarmAOverTemp=microPwrAlarmAOverTemp, commonGroup=commonGroup, snmpProxyStop=snmpProxyStop, rmttxSCPCDataMismatch=rmttxSCPCDataMismatch, temp=temp, hubstatsTable=hubstatsTable, rmttxSCPCLostLock=rmttxSCPCLostLock, powerAlarm2=powerAlarm2, netmodemNotificationsGroup=netmodemNotificationsGroup, crc8error=crc8error, otastatstime=otastatstime, ppwarnings=ppwarnings, udprxlow=udprxlow, netModemGroup=netModemGroup, hubbytesmc24=hubbytesmc24, bytesmc24=bytesmc24, netmodem=netmodem, txpower=txpower, tdmaagcerrors=tdmaagcerrors, chassisid=chassisid, ipstatstime=ipstatstime, latencyvalue=latencyvalue, hubs2StatsGroup=hubs2StatsGroup, powerAlarm3=powerAlarm3, timeticks=timeticks, rxhttp=rxhttp, fegacdacval=fegacdacval, trap_rem_id=trap_rem_id, rxreliable=rxreliable, crc32error=crc32error, otaStatsGroup=otaStatsGroup, hubbytesmc28=hubbytesmc28, rstxpower=rstxpower, bytesmc11=bytesmc11, backplaneLostSOF=backplaneLostSOF, rcmAAlarm=rcmAAlarm, powerAlarm1=powerAlarm1, latTimeout=latTimeout, rsnmdid=rsnmdid, hubbytesmc08=hubbytesmc08, gigerxerrors=gigerxerrors, microRCMBFault=microRCMBFault, microOPMAFault=microOPMAFault, microRCMBNotPresent=microRCMBNotPresent, bytesmc21=bytesmc21, currentmc=currentmc, nmdid=nmdid, rxstatsEntry=rxstatsEntry, latnmdid=latnmdid, inroutegroupid=inroutegroupid, rxOnly=rxOnly, hubbytesmc11=hubbytesmc11, bytesmc17=bytesmc17, bladeCPUHigh=bladeCPUHigh)
