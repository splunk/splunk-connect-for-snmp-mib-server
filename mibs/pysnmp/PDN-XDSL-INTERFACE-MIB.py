#
# PySNMP MIB module PDN-XDSL-INTERFACE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-XDSL-INTERFACE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:31:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
pdn_xdsl, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-xdsl")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, TimeTicks, iso, Bits, Counter64, Gauge32, Unsigned32, MibIdentifier, Integer32, ObjectIdentity, IpAddress, NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "TimeTicks", "iso", "Bits", "Counter64", "Gauge32", "Unsigned32", "MibIdentifier", "Integer32", "ObjectIdentity", "IpAddress", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32")
TextualConvention, TAddress, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TAddress", "DisplayString", "RowStatus", "TruthValue")
xdslIfConfigMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2))
xdslIfConfigMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 4))
xdslDevGenericIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 1))
xdslDevRADSLSpecificIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 2))
xdslDevMVLSpecificIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 3))
xdslDevSDSLSpecificIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 4))
xdslDevIDSLSpecificIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 5))
xdslDevGenericIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 1, 1), )
if mibBuilder.loadTexts: xdslDevGenericIfConfigTable.setStatus('mandatory')
xdslDevGenericIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xdslDevGenericIfConfigEntry.setStatus('mandatory')
xdslDevGenericIfConfigPortSpeedBehaviour = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fixed", 1), ("adaptive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevGenericIfConfigPortSpeedBehaviour.setStatus('mandatory')
xdslDevGenericIfConfigMarginThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 1, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevGenericIfConfigMarginThreshold.setStatus('mandatory')
xdslDevGenericIfConfigPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevGenericIfConfigPortID.setStatus('mandatory')
xdslDevGenericIfConfigLinkUpDownTransitionThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 1, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevGenericIfConfigLinkUpDownTransitionThreshold.setStatus('mandatory')
xdslDevGenericIfConfigLineEncodeType = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("cap", 2), ("twoB1q", 3), ("mvl", 4), ("g-lite", 5), ("dmt", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevGenericIfConfigLineEncodeType.setStatus('mandatory')
xdslDevGenericIfConfigLineRateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standard", 1), ("nx128", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevGenericIfConfigLineRateMode.setStatus('mandatory')
xdslDevRADSLSpecificIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 2, 1), )
if mibBuilder.loadTexts: xdslDevRADSLSpecificIfConfigTable.setStatus('mandatory')
xdslDevRADSLSpecificIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xdslDevRADSLSpecificIfConfigEntry.setStatus('mandatory')
xdslDevRADSLSpecificIfConfigUpFixedPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevRADSLSpecificIfConfigUpFixedPortSpeed.setStatus('mandatory')
xdslDevRADSLSpecificIfConfigDownFixedPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 2, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevRADSLSpecificIfConfigDownFixedPortSpeed.setStatus('mandatory')
xdslDevRADSLSpecificIfConfigUpAdaptiveUpperBoundPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 2, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevRADSLSpecificIfConfigUpAdaptiveUpperBoundPortSpeed.setStatus('mandatory')
xdslDevRADSLSpecificIfConfigUpAdaptiveLowerBoundPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 2, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevRADSLSpecificIfConfigUpAdaptiveLowerBoundPortSpeed.setStatus('mandatory')
xdslDevRADSLSpecificIfConfigDownAdaptiveUpperBoundPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 2, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevRADSLSpecificIfConfigDownAdaptiveUpperBoundPortSpeed.setStatus('mandatory')
xdslDevRADSLSpecificIfConfigDownAdaptiveLowerBoundPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 2, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevRADSLSpecificIfConfigDownAdaptiveLowerBoundPortSpeed.setStatus('mandatory')
xdslDevRADSLSpecificIfConfigReedSolomonDownFwdErrCorrection = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("minimizeError", 1), ("minimizeDelay", 2), ("reedSolomonNotSupported", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevRADSLSpecificIfConfigReedSolomonDownFwdErrCorrection.setStatus('mandatory')
xdslDevRADSLSpecificIfConfigStartUpMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-3, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevRADSLSpecificIfConfigStartUpMargin.setStatus('mandatory')
xdslDevRADSLSpecificIfConfigTxPowerAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 2, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevRADSLSpecificIfConfigTxPowerAttenuation.setStatus('mandatory')
xdslDevRADSLSpecificIfConfigSnTxPowerAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 2, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevRADSLSpecificIfConfigSnTxPowerAttenuation.setStatus('mandatory')
xdslDevMVLSpecificIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 3, 1), )
if mibBuilder.loadTexts: xdslDevMVLSpecificIfConfigTable.setStatus('mandatory')
xdslDevMVLSpecificIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xdslDevMVLSpecificIfConfigEntry.setStatus('mandatory')
xdslDevMVLSpecificIfConfigMaxPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 3, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevMVLSpecificIfConfigMaxPortSpeed.setStatus('mandatory')
xdslDevMVLSpecificIfConfigOnHookTxPowerAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 3, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevMVLSpecificIfConfigOnHookTxPowerAttenuation.setStatus('mandatory')
xdslDevMVLSpecificIfConfigOffHookTxPowerAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 3, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevMVLSpecificIfConfigOffHookTxPowerAttenuation.setStatus('mandatory')
xdslDevSDSLSpecificIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 4, 1), )
if mibBuilder.loadTexts: xdslDevSDSLSpecificIfConfigTable.setStatus('mandatory')
xdslDevSDSLSpecificIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xdslDevSDSLSpecificIfConfigEntry.setStatus('mandatory')
xdslDevSDSLSpecificIfConfigFixedPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 4, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevSDSLSpecificIfConfigFixedPortSpeed.setStatus('mandatory')
xdslDevSDSLSpecificIfConfigMaxPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 4, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevSDSLSpecificIfConfigMaxPortSpeed.setStatus('mandatory')
xdslDevSDSLSpecificIfConfigFixedPortSpeedNx128Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevSDSLSpecificIfConfigFixedPortSpeedNx128Mode.setStatus('mandatory')
xdslDevSDSLSpecificIfConfigMaxPortSpeedNx128Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevSDSLSpecificIfConfigMaxPortSpeedNx128Mode.setStatus('mandatory')
xdslDevIDSLSpecificIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 5, 1), )
if mibBuilder.loadTexts: xdslDevIDSLSpecificIfConfigTable.setStatus('mandatory')
xdslDevIDSLSpecificIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 5, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xdslDevIDSLSpecificIfConfigEntry.setStatus('mandatory')
xdslDevIDSLSpecificIfConfigPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 5, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIDSLSpecificIfConfigPortSpeed.setStatus('mandatory')
xdslDevIDSLSpecificIfConfigTimingPortTransceiverMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 9, 2, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("networkTiming", 1), ("localTiming", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIDSLSpecificIfConfigTimingPortTransceiverMode.setStatus('mandatory')
mibBuilder.exportSymbols("PDN-XDSL-INTERFACE-MIB", xdslDevRADSLSpecificIfConfigReedSolomonDownFwdErrCorrection=xdslDevRADSLSpecificIfConfigReedSolomonDownFwdErrCorrection, xdslDevRADSLSpecificIfConfigDownFixedPortSpeed=xdslDevRADSLSpecificIfConfigDownFixedPortSpeed, xdslDevSDSLSpecificIfConfig=xdslDevSDSLSpecificIfConfig, xdslDevRADSLSpecificIfConfigUpAdaptiveUpperBoundPortSpeed=xdslDevRADSLSpecificIfConfigUpAdaptiveUpperBoundPortSpeed, xdslDevSDSLSpecificIfConfigTable=xdslDevSDSLSpecificIfConfigTable, xdslDevSDSLSpecificIfConfigMaxPortSpeedNx128Mode=xdslDevSDSLSpecificIfConfigMaxPortSpeedNx128Mode, xdslDevSDSLSpecificIfConfigFixedPortSpeed=xdslDevSDSLSpecificIfConfigFixedPortSpeed, xdslDevGenericIfConfigPortID=xdslDevGenericIfConfigPortID, xdslDevGenericIfConfigPortSpeedBehaviour=xdslDevGenericIfConfigPortSpeedBehaviour, xdslDevMVLSpecificIfConfigEntry=xdslDevMVLSpecificIfConfigEntry, xdslDevSDSLSpecificIfConfigFixedPortSpeedNx128Mode=xdslDevSDSLSpecificIfConfigFixedPortSpeedNx128Mode, xdslDevSDSLSpecificIfConfigEntry=xdslDevSDSLSpecificIfConfigEntry, xdslDevGenericIfConfigLineEncodeType=xdslDevGenericIfConfigLineEncodeType, xdslDevGenericIfConfig=xdslDevGenericIfConfig, xdslDevIDSLSpecificIfConfigEntry=xdslDevIDSLSpecificIfConfigEntry, xdslDevRADSLSpecificIfConfigUpAdaptiveLowerBoundPortSpeed=xdslDevRADSLSpecificIfConfigUpAdaptiveLowerBoundPortSpeed, xdslIfConfigMIBTraps=xdslIfConfigMIBTraps, xdslDevMVLSpecificIfConfigOnHookTxPowerAttenuation=xdslDevMVLSpecificIfConfigOnHookTxPowerAttenuation, xdslDevRADSLSpecificIfConfigUpFixedPortSpeed=xdslDevRADSLSpecificIfConfigUpFixedPortSpeed, xdslDevGenericIfConfigMarginThreshold=xdslDevGenericIfConfigMarginThreshold, xdslDevRADSLSpecificIfConfig=xdslDevRADSLSpecificIfConfig, xdslDevMVLSpecificIfConfig=xdslDevMVLSpecificIfConfig, xdslDevRADSLSpecificIfConfigDownAdaptiveUpperBoundPortSpeed=xdslDevRADSLSpecificIfConfigDownAdaptiveUpperBoundPortSpeed, xdslDevIDSLSpecificIfConfigPortSpeed=xdslDevIDSLSpecificIfConfigPortSpeed, xdslDevGenericIfConfigEntry=xdslDevGenericIfConfigEntry, xdslDevGenericIfConfigLinkUpDownTransitionThreshold=xdslDevGenericIfConfigLinkUpDownTransitionThreshold, xdslDevGenericIfConfigTable=xdslDevGenericIfConfigTable, xdslDevMVLSpecificIfConfigTable=xdslDevMVLSpecificIfConfigTable, xdslDevIDSLSpecificIfConfig=xdslDevIDSLSpecificIfConfig, xdslDevRADSLSpecificIfConfigStartUpMargin=xdslDevRADSLSpecificIfConfigStartUpMargin, xdslDevMVLSpecificIfConfigMaxPortSpeed=xdslDevMVLSpecificIfConfigMaxPortSpeed, xdslDevRADSLSpecificIfConfigTxPowerAttenuation=xdslDevRADSLSpecificIfConfigTxPowerAttenuation, xdslDevSDSLSpecificIfConfigMaxPortSpeed=xdslDevSDSLSpecificIfConfigMaxPortSpeed, xdslDevRADSLSpecificIfConfigDownAdaptiveLowerBoundPortSpeed=xdslDevRADSLSpecificIfConfigDownAdaptiveLowerBoundPortSpeed, xdslIfConfigMIBObjects=xdslIfConfigMIBObjects, xdslDevRADSLSpecificIfConfigTable=xdslDevRADSLSpecificIfConfigTable, xdslDevIDSLSpecificIfConfigTable=xdslDevIDSLSpecificIfConfigTable, xdslDevGenericIfConfigLineRateMode=xdslDevGenericIfConfigLineRateMode, xdslDevRADSLSpecificIfConfigSnTxPowerAttenuation=xdslDevRADSLSpecificIfConfigSnTxPowerAttenuation, xdslDevMVLSpecificIfConfigOffHookTxPowerAttenuation=xdslDevMVLSpecificIfConfigOffHookTxPowerAttenuation, xdslDevRADSLSpecificIfConfigEntry=xdslDevRADSLSpecificIfConfigEntry, xdslDevIDSLSpecificIfConfigTimingPortTransceiverMode=xdslDevIDSLSpecificIfConfigTimingPortTransceiverMode)
