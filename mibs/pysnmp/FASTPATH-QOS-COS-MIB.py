#
# PySNMP MIB module FASTPATH-QOS-COS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FASTPATH-QOS-COS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:58:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
fastPathQOS, = mibBuilder.importSymbols("FASTPATH-QOS-MIB", "fastPathQOS")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Counter64, Unsigned32, ObjectIdentity, NotificationType, TimeTicks, Integer32, iso, Bits, IpAddress, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter64", "Unsigned32", "ObjectIdentity", "NotificationType", "TimeTicks", "Integer32", "iso", "Bits", "IpAddress", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
fastPathQOSCOS = ModuleIdentity((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3))
fastPathQOSCOS.setRevisions(('2010-03-17 00:00', '2009-10-27 00:00', '2009-01-06 00:00', '2008-09-23 00:00', '2007-12-19 00:00', '2007-05-23 00:00', '2004-05-03 00:00',))
if mibBuilder.loadTexts: fastPathQOSCOS.setLastUpdated('201003170000Z')
if mibBuilder.loadTexts: fastPathQOSCOS.setOrganization('Broadcom Corporation')
class PercentByFives(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), ValueRangeConstraint(35, 35), ValueRangeConstraint(40, 40), ValueRangeConstraint(45, 45), ValueRangeConstraint(50, 50), ValueRangeConstraint(55, 55), ValueRangeConstraint(60, 60), ValueRangeConstraint(65, 65), ValueRangeConstraint(70, 70), ValueRangeConstraint(75, 75), ValueRangeConstraint(80, 80), ValueRangeConstraint(85, 85), ValueRangeConstraint(90, 90), ValueRangeConstraint(95, 95), ValueRangeConstraint(100, 100), )
class Percent(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 100)

class Sixteenths(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 16)

agentCosMapCfgGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 1))
agentCosMapIpPrecTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 1, 1), )
if mibBuilder.loadTexts: agentCosMapIpPrecTable.setStatus('current')
agentCosMapIpPrecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 1, 1, 1), ).setIndexNames((0, "FASTPATH-QOS-COS-MIB", "agentCosMapIpPrecIntfIndex"), (0, "FASTPATH-QOS-COS-MIB", "agentCosMapIpPrecValue"))
if mibBuilder.loadTexts: agentCosMapIpPrecEntry.setStatus('current')
agentCosMapIpPrecIntfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 1, 1, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: agentCosMapIpPrecIntfIndex.setStatus('current')
agentCosMapIpPrecValue = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: agentCosMapIpPrecValue.setStatus('current')
agentCosMapIpPrecTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosMapIpPrecTrafficClass.setStatus('current')
agentCosMapIpDscpTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 1, 2), )
if mibBuilder.loadTexts: agentCosMapIpDscpTable.setStatus('current')
agentCosMapIpDscpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 1, 2, 1), ).setIndexNames((0, "FASTPATH-QOS-COS-MIB", "agentCosMapIpDscpIntfIndex"), (0, "FASTPATH-QOS-COS-MIB", "agentCosMapIpDscpValue"))
if mibBuilder.loadTexts: agentCosMapIpDscpEntry.setStatus('current')
agentCosMapIpDscpIntfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 1, 2, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: agentCosMapIpDscpIntfIndex.setStatus('current')
agentCosMapIpDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: agentCosMapIpDscpValue.setStatus('current')
agentCosMapIpDscpTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosMapIpDscpTrafficClass.setStatus('current')
agentCosMapIntfTrustTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 1, 3), )
if mibBuilder.loadTexts: agentCosMapIntfTrustTable.setStatus('current')
agentCosMapIntfTrustEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 1, 3, 1), ).setIndexNames((0, "FASTPATH-QOS-COS-MIB", "agentCosMapIntfTrustIntfIndex"))
if mibBuilder.loadTexts: agentCosMapIntfTrustEntry.setStatus('current')
agentCosMapIntfTrustIntfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 1, 3, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: agentCosMapIntfTrustIntfIndex.setStatus('current')
agentCosMapIntfTrustMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("untrusted", 1), ("trustDot1p", 2), ("trustIpPrecedence", 3), ("trustIpDscp", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosMapIntfTrustMode.setStatus('current')
agentCosMapUntrustedTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCosMapUntrustedTrafficClass.setStatus('current')
agentCosQueueCfgGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2))
agentCosQueueNumQueuesPerPort = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCosQueueNumQueuesPerPort.setStatus('current')
agentCosQueueNumDropPrecedenceLevels = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCosQueueNumDropPrecedenceLevels.setStatus('current')
agentCosQueueControlTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 3), )
if mibBuilder.loadTexts: agentCosQueueControlTable.setStatus('current')
agentCosQueueControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 3, 1), ).setIndexNames((0, "FASTPATH-QOS-COS-MIB", "agentCosQueueIntfIndex"))
if mibBuilder.loadTexts: agentCosQueueControlEntry.setStatus('current')
agentCosQueueIntfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 3, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: agentCosQueueIntfIndex.setStatus('current')
agentCosQueueIntfShapingRate = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosQueueIntfShapingRate.setStatus('current')
agentCosQueueMgmtTypeIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("taildrop", 1), ("wred", 2))).clone('taildrop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosQueueMgmtTypeIntf.setStatus('current')
agentCosQueueWredDecayExponent = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(9)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosQueueWredDecayExponent.setStatus('current')
agentCosQueueDefaultsRestore = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosQueueDefaultsRestore.setStatus('current')
agentCosQueueIntfShapingRateUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("percent", 1), ("kbps", 2))).clone('percent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCosQueueIntfShapingRateUnits.setStatus('current')
agentCosQueueTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 4), )
if mibBuilder.loadTexts: agentCosQueueTable.setStatus('current')
agentCosQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 4, 1), ).setIndexNames((0, "FASTPATH-QOS-COS-MIB", "agentCosQueueIntfIndex"), (0, "FASTPATH-QOS-COS-MIB", "agentCosQueueIndex"))
if mibBuilder.loadTexts: agentCosQueueEntry.setStatus('current')
agentCosQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentCosQueueIndex.setStatus('current')
agentCosQueueSchedulerType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("strict", 1), ("weighted", 2))).clone('weighted')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosQueueSchedulerType.setStatus('current')
agentCosQueueMinBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 4, 1, 3), Percent()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosQueueMinBandwidth.setStatus('current')
agentCosQueueMaxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 4, 1, 4), Percent()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosQueueMaxBandwidth.setStatus('current')
agentCosQueueMgmtType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("taildrop", 1), ("wred", 2))).clone('taildrop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosQueueMgmtType.setStatus('current')
agentCosQueueMgmtTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 5), )
if mibBuilder.loadTexts: agentCosQueueMgmtTable.setStatus('current')
agentCosQueueMgmtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 5, 1), ).setIndexNames((0, "FASTPATH-QOS-COS-MIB", "agentCosQueueIntfIndex"), (0, "FASTPATH-QOS-COS-MIB", "agentCosQueueIndex"), (0, "FASTPATH-QOS-COS-MIB", "agentCosQueueDropPrecIndex"))
if mibBuilder.loadTexts: agentCosQueueMgmtEntry.setStatus('current')
agentCosQueueDropPrecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentCosQueueDropPrecIndex.setStatus('current')
agentCosQueueMgmtTailDropThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 5, 1, 2), Sixteenths()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosQueueMgmtTailDropThreshold.setStatus('obsolete')
agentCosQueueMgmtWredMinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 5, 1, 3), Sixteenths()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosQueueMgmtWredMinThreshold.setStatus('obsolete')
agentCosQueueMgmtWredMaxThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 5, 1, 4), Sixteenths()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosQueueMgmtWredMaxThreshold.setStatus('obsolete')
agentCosQueueMgmtWredDropProbScale = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 5, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosQueueMgmtWredDropProbScale.setStatus('obsolete')
agentCosQueueMgmtPercentTailDropThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 5, 1, 6), Percent()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosQueueMgmtPercentTailDropThreshold.setStatus('current')
agentCosQueueMgmtPercentWredMinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 5, 1, 7), Percent()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosQueueMgmtPercentWredMinThreshold.setStatus('current')
agentCosQueueMgmtPercentWredMaxThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 5, 1, 8), Percent()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosQueueMgmtPercentWredMaxThreshold.setStatus('current')
agentCosQueueMgmtWredDropProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 3, 3, 2, 5, 1, 9), Percent().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCosQueueMgmtWredDropProbability.setStatus('current')
mibBuilder.exportSymbols("FASTPATH-QOS-COS-MIB", fastPathQOSCOS=fastPathQOSCOS, agentCosQueueMgmtTypeIntf=agentCosQueueMgmtTypeIntf, agentCosQueueMgmtEntry=agentCosQueueMgmtEntry, agentCosQueueWredDecayExponent=agentCosQueueWredDecayExponent, agentCosMapIpPrecValue=agentCosMapIpPrecValue, agentCosQueueMinBandwidth=agentCosQueueMinBandwidth, agentCosQueueIntfShapingRate=agentCosQueueIntfShapingRate, agentCosMapIpPrecTrafficClass=agentCosMapIpPrecTrafficClass, agentCosMapIntfTrustIntfIndex=agentCosMapIntfTrustIntfIndex, agentCosMapIpDscpValue=agentCosMapIpDscpValue, agentCosQueueMaxBandwidth=agentCosQueueMaxBandwidth, agentCosQueueIntfShapingRateUnits=agentCosQueueIntfShapingRateUnits, agentCosMapUntrustedTrafficClass=agentCosMapUntrustedTrafficClass, agentCosQueueControlEntry=agentCosQueueControlEntry, agentCosQueueDefaultsRestore=agentCosQueueDefaultsRestore, agentCosQueueMgmtPercentTailDropThreshold=agentCosQueueMgmtPercentTailDropThreshold, agentCosMapIpDscpTable=agentCosMapIpDscpTable, agentCosMapIpDscpIntfIndex=agentCosMapIpDscpIntfIndex, agentCosQueueNumQueuesPerPort=agentCosQueueNumQueuesPerPort, agentCosMapIntfTrustTable=agentCosMapIntfTrustTable, agentCosMapCfgGroup=agentCosMapCfgGroup, agentCosQueueControlTable=agentCosQueueControlTable, agentCosMapIpDscpEntry=agentCosMapIpDscpEntry, agentCosQueueNumDropPrecedenceLevels=agentCosQueueNumDropPrecedenceLevels, agentCosQueueDropPrecIndex=agentCosQueueDropPrecIndex, PYSNMP_MODULE_ID=fastPathQOSCOS, agentCosQueueEntry=agentCosQueueEntry, agentCosQueueSchedulerType=agentCosQueueSchedulerType, agentCosQueueIndex=agentCosQueueIndex, agentCosQueueMgmtPercentWredMaxThreshold=agentCosQueueMgmtPercentWredMaxThreshold, agentCosMapIpPrecEntry=agentCosMapIpPrecEntry, agentCosQueueTable=agentCosQueueTable, Percent=Percent, agentCosQueueMgmtWredMaxThreshold=agentCosQueueMgmtWredMaxThreshold, PercentByFives=PercentByFives, Sixteenths=Sixteenths, agentCosQueueMgmtType=agentCosQueueMgmtType, agentCosQueueIntfIndex=agentCosQueueIntfIndex, agentCosMapIpPrecIntfIndex=agentCosMapIpPrecIntfIndex, agentCosQueueMgmtWredDropProbScale=agentCosQueueMgmtWredDropProbScale, agentCosMapIntfTrustMode=agentCosMapIntfTrustMode, agentCosQueueCfgGroup=agentCosQueueCfgGroup, agentCosMapIpPrecTable=agentCosMapIpPrecTable, agentCosQueueMgmtWredMinThreshold=agentCosQueueMgmtWredMinThreshold, agentCosQueueMgmtTailDropThreshold=agentCosQueueMgmtTailDropThreshold, agentCosMapIntfTrustEntry=agentCosMapIntfTrustEntry, agentCosQueueMgmtTable=agentCosQueueMgmtTable, agentCosQueueMgmtPercentWredMinThreshold=agentCosQueueMgmtPercentWredMinThreshold, agentCosQueueMgmtWredDropProbability=agentCosQueueMgmtWredDropProbability, agentCosMapIpDscpTrafficClass=agentCosMapIpDscpTrafficClass)
