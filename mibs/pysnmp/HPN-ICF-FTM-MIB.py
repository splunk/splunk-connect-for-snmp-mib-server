#
# PySNMP MIB module HPN-ICF-FTM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-FTM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:26:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, TimeTicks, Integer32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Unsigned32, iso, IpAddress, Bits, ModuleIdentity, Counter64, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "TimeTicks", "Integer32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Unsigned32", "iso", "IpAddress", "Bits", "ModuleIdentity", "Counter64", "MibIdentifier", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hpnicfFtmManMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1))
if mibBuilder.loadTexts: hpnicfFtmManMIB.setLastUpdated('200401131055Z')
if mibBuilder.loadTexts: hpnicfFtmManMIB.setOrganization('')
hpnicfFtm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1))
hpnicfFtmManMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 1))
hpnicfFtmUnitTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 1, 1), )
if mibBuilder.loadTexts: hpnicfFtmUnitTable.setStatus('current')
hpnicfFtmUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-FTM-MIB", "hpnicfFtmIndex"))
if mibBuilder.loadTexts: hpnicfFtmUnitEntry.setStatus('current')
hpnicfFtmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfFtmIndex.setStatus('current')
hpnicfFtmUnitID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFtmUnitID.setStatus('current')
hpnicfFtmUnitName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 1, 1, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFtmUnitName.setStatus('current')
hpnicfFtmUnitRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("master", 0), ("slave", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFtmUnitRole.setStatus('current')
hpnicfFtmNumberMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("automatic", 0), ("manual", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFtmNumberMode.setStatus('current')
hpnicfFtmAuthMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ftm-none", 0), ("ftm-simple", 1), ("ftm-md5", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFtmAuthMode.setStatus('current')
hpnicfFtmAuthValue = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFtmAuthValue.setStatus('current')
hpnicfFtmFabricVlanID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFtmFabricVlanID.setStatus('current')
hpnicfFtmFabricType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("outofStack", 1), ("line", 2), ("ring", 3), ("mesh", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFtmFabricType.setStatus('current')
hpnicfFtmManMIBNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 3))
hpnicfFtmUnitIDChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 3, 1)).setObjects(("HPN-ICF-FTM-MIB", "hpnicfFtmIndex"), ("HPN-ICF-FTM-MIB", "hpnicfFtmUnitID"))
if mibBuilder.loadTexts: hpnicfFtmUnitIDChange.setStatus('current')
hpnicfFtmUnitNameChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 3, 2)).setObjects(("HPN-ICF-FTM-MIB", "hpnicfFtmIndex"), ("HPN-ICF-FTM-MIB", "hpnicfFtmUnitName"))
if mibBuilder.loadTexts: hpnicfFtmUnitNameChange.setStatus('current')
hpnicfFtmManMIBComformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 2))
hpnicfFtmMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 2, 1))
hpnicfFtmMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 2, 1, 1)).setObjects(("HPN-ICF-FTM-MIB", "hpnicfFtmConfigGroup"), ("HPN-ICF-FTM-MIB", "hpnicfFtmNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfFtmMIBCompliance = hpnicfFtmMIBCompliance.setStatus('current')
hpnicfFtmMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 2, 2))
hpnicfFtmConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 2, 2, 1)).setObjects(("HPN-ICF-FTM-MIB", "hpnicfFtmUnitID"), ("HPN-ICF-FTM-MIB", "hpnicfFtmUnitName"), ("HPN-ICF-FTM-MIB", "hpnicfFtmAuthMode"), ("HPN-ICF-FTM-MIB", "hpnicfFtmAuthValue"), ("HPN-ICF-FTM-MIB", "hpnicfFtmFabricVlanID"), ("HPN-ICF-FTM-MIB", "hpnicfFtmFabricType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfFtmConfigGroup = hpnicfFtmConfigGroup.setStatus('current')
hpnicfFtmNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 1, 1, 2, 2, 2)).setObjects(("HPN-ICF-FTM-MIB", "hpnicfFtmUnitIDChange"), ("HPN-ICF-FTM-MIB", "hpnicfFtmUnitNameChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfFtmNotificationGroup = hpnicfFtmNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-FTM-MIB", hpnicfFtmManMIB=hpnicfFtmManMIB, hpnicfFtmUnitEntry=hpnicfFtmUnitEntry, hpnicfFtmUnitRole=hpnicfFtmUnitRole, hpnicfFtmUnitIDChange=hpnicfFtmUnitIDChange, hpnicfFtmMIBCompliances=hpnicfFtmMIBCompliances, hpnicfFtmAuthMode=hpnicfFtmAuthMode, hpnicfFtmFabricVlanID=hpnicfFtmFabricVlanID, hpnicfFtmUnitID=hpnicfFtmUnitID, hpnicfFtmMIBCompliance=hpnicfFtmMIBCompliance, hpnicfFtmManMIBObjects=hpnicfFtmManMIBObjects, hpnicfFtm=hpnicfFtm, hpnicfFtmConfigGroup=hpnicfFtmConfigGroup, hpnicfFtmIndex=hpnicfFtmIndex, hpnicfFtmFabricType=hpnicfFtmFabricType, PYSNMP_MODULE_ID=hpnicfFtmManMIB, hpnicfFtmNumberMode=hpnicfFtmNumberMode, hpnicfFtmNotificationGroup=hpnicfFtmNotificationGroup, hpnicfFtmUnitTable=hpnicfFtmUnitTable, hpnicfFtmUnitNameChange=hpnicfFtmUnitNameChange, hpnicfFtmManMIBComformance=hpnicfFtmManMIBComformance, hpnicfFtmMIBGroups=hpnicfFtmMIBGroups, hpnicfFtmAuthValue=hpnicfFtmAuthValue, hpnicfFtmUnitName=hpnicfFtmUnitName, hpnicfFtmManMIBNotification=hpnicfFtmManMIBNotification)
