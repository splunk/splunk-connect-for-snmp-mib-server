#
# PySNMP MIB module HUAWEI-RM-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-RM-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:36:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
entPhysicalName, entPhysicalIndex = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalName", "entPhysicalIndex")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
Ipv6Address, = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Counter32, Counter64, Gauge32, iso, Integer32, NotificationType, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, Unsigned32, TimeTicks, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Counter64", "Gauge32", "iso", "Integer32", "NotificationType", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "Unsigned32", "TimeTicks", "ObjectIdentity")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
hwRmExt = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145))
hwRmExt.setRevisions(('2014-12-11 00:00', '2014-12-10 00:00', '2014-12-09 00:00', '2014-06-30 00:00', '2014-06-20 00:00', '2013-06-09 00:00', '2013-04-22 15:26', '2010-11-25 00:00', '2010-08-20 00:00', '2008-11-10 00:00',))
if mibBuilder.loadTexts: hwRmExt.setLastUpdated('201412110000Z')
if mibBuilder.loadTexts: hwRmExt.setOrganization('Huawei Technologies Co.,Ltd.')
hwRmExtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1))
hwStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 1), )
if mibBuilder.loadTexts: hwStaticRouteTable.setStatus('current')
hwStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 1, 1), ).setIndexNames((0, "HUAWEI-RM-EXT-MIB", "hwStaticRouteSourceVpnName"), (0, "HUAWEI-RM-EXT-MIB", "hwStaticRouteDestIpAddr"), (0, "HUAWEI-RM-EXT-MIB", "hwStaticRouteDestMaskAddr"), (0, "HUAWEI-RM-EXT-MIB", "hwStaticRouteDestVpnName"), (0, "HUAWEI-RM-EXT-MIB", "hwStaticRouteNextHop"), (0, "HUAWEI-RM-EXT-MIB", "hwStaticRouteOutIfIndex"))
if mibBuilder.loadTexts: hwStaticRouteEntry.setStatus('current')
hwStaticRouteSourceVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwStaticRouteSourceVpnName.setStatus('current')
hwStaticRouteDestIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwStaticRouteDestIpAddr.setStatus('current')
hwStaticRouteDestMaskAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 1, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwStaticRouteDestMaskAddr.setStatus('current')
hwStaticRouteDestVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwStaticRouteDestVpnName.setStatus('current')
hwStaticRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 1, 1, 5), IpAddress())
if mibBuilder.loadTexts: hwStaticRouteNextHop.setStatus('current')
hwStaticRouteOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 1, 1, 6), Unsigned32())
if mibBuilder.loadTexts: hwStaticRouteOutIfIndex.setStatus('current')
hwStaticRouteBfdName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStaticRouteBfdName.setStatus('current')
hwStaticRoutePrefer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStaticRoutePrefer.setStatus('current')
hwStaticRouteDescrip = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStaticRouteDescrip.setStatus('current')
hwStaticRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStaticRouteRowStatus.setStatus('current')
hwRouteStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 2), )
if mibBuilder.loadTexts: hwRouteStatTable.setStatus('current')
hwRouteStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 2, 1), ).setIndexNames((0, "HUAWEI-RM-EXT-MIB", "hwRouteStatVpnName"), (0, "HUAWEI-RM-EXT-MIB", "hwRouteStatProtocolId"))
if mibBuilder.loadTexts: hwRouteStatEntry.setStatus('current')
hwRouteStatVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwRouteStatVpnName.setStatus('current')
hwRouteStatProtocolId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 6, 7, 8))).clone(namedValues=NamedValues(("direct", 1), ("static", 2), ("ospf", 3), ("isis", 6), ("rip", 7), ("bgp", 8))))
if mibBuilder.loadTexts: hwRouteStatProtocolId.setStatus('current')
hwRouteStatTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRouteStatTotal.setStatus('current')
hwRouteStatActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRouteStatActive.setStatus('current')
hwRouteStatAdded = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRouteStatAdded.setStatus('current')
hwRouteStatDeleted = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRouteStatDeleted.setStatus('current')
hwRouteStatFreed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRouteStatFreed.setStatus('current')
hwIpv6RouteStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 3), )
if mibBuilder.loadTexts: hwIpv6RouteStatTable.setStatus('current')
hwIpv6RouteStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 3, 1), ).setIndexNames((0, "HUAWEI-RM-EXT-MIB", "hwIpv6RouteStatVpnName"), (0, "HUAWEI-RM-EXT-MIB", "hwIpv6RouteStatProtocolId"))
if mibBuilder.loadTexts: hwIpv6RouteStatEntry.setStatus('current')
hwIpv6RouteStatVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwIpv6RouteStatVpnName.setStatus('current')
hwIpv6RouteStatProtocolId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 6, 7, 8))).clone(namedValues=NamedValues(("direct", 1), ("static", 2), ("ospf", 3), ("isis", 6), ("rip", 7), ("bgp", 8))))
if mibBuilder.loadTexts: hwIpv6RouteStatProtocolId.setStatus('current')
hwIpv6RouteStatTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpv6RouteStatTotal.setStatus('current')
hwIpv6RouteStatActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpv6RouteStatActive.setStatus('current')
hwIpv6RouteStatAdded = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpv6RouteStatAdded.setStatus('current')
hwIpv6RouteStatDeleted = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpv6RouteStatDeleted.setStatus('current')
hwIpv6RouteStatFreed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpv6RouteStatFreed.setStatus('current')
hwStaticRouteExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 4), )
if mibBuilder.loadTexts: hwStaticRouteExtTable.setStatus('current')
hwStaticRouteExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 4, 1), ).setIndexNames((0, "HUAWEI-RM-EXT-MIB", "hwStaticRouteSourceVpnNameExt"), (0, "HUAWEI-RM-EXT-MIB", "hwStaticRouteDestIpAddrExt"), (0, "HUAWEI-RM-EXT-MIB", "hwStaticRouteDestMaskAddrExt"), (0, "HUAWEI-RM-EXT-MIB", "hwStaticRouteNextHopExt"), (0, "HUAWEI-RM-EXT-MIB", "hwStaticRouteOutIfIndexExt"))
if mibBuilder.loadTexts: hwStaticRouteExtEntry.setStatus('current')
hwStaticRouteSourceVpnNameExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwStaticRouteSourceVpnNameExt.setStatus('current')
hwStaticRouteDestIpAddrExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 4, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwStaticRouteDestIpAddrExt.setStatus('current')
hwStaticRouteDestMaskAddrExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 4, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwStaticRouteDestMaskAddrExt.setStatus('current')
hwStaticRouteNextHopExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 4, 1, 4), IpAddress())
if mibBuilder.loadTexts: hwStaticRouteNextHopExt.setStatus('current')
hwStaticRouteOutIfIndexExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 4, 1, 5), Unsigned32())
if mibBuilder.loadTexts: hwStaticRouteOutIfIndexExt.setStatus('current')
hwStaticRouteDestVpnNameExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStaticRouteDestVpnNameExt.setStatus('current')
hwStaticRouteBfdNameExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 4, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStaticRouteBfdNameExt.setStatus('current')
hwStaticRoutePreferExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 4, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStaticRoutePreferExt.setStatus('current')
hwStaticRouteDescripExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 4, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStaticRouteDescripExt.setStatus('current')
hwStaticRouteRowStatusExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 4, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStaticRouteRowStatusExt.setStatus('current')
hwStaticRoutePermanentExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("permanent", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStaticRoutePermanentExt.setStatus('current')
hwStaticRouteLdpSyncExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("ldpsync", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStaticRouteLdpSyncExt.setStatus('current')
hwIpv6StaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 5), )
if mibBuilder.loadTexts: hwIpv6StaticRouteTable.setStatus('current')
hwIpv6StaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 5, 1), ).setIndexNames((0, "HUAWEI-RM-EXT-MIB", "hwIpv6StaticRouteSourceVpnName"), (0, "HUAWEI-RM-EXT-MIB", "hwIpv6StaticRouteDestIpAddr"), (0, "HUAWEI-RM-EXT-MIB", "hwIpv6StaticRoutePrefixLen"), (0, "HUAWEI-RM-EXT-MIB", "hwIpv6StaticRouteNextHop"), (0, "HUAWEI-RM-EXT-MIB", "hwIpv6StaticRouteOutIfIndex"))
if mibBuilder.loadTexts: hwIpv6StaticRouteEntry.setStatus('current')
hwIpv6StaticRouteSourceVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwIpv6StaticRouteSourceVpnName.setStatus('current')
hwIpv6StaticRouteDestIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 5, 1, 2), Ipv6Address())
if mibBuilder.loadTexts: hwIpv6StaticRouteDestIpAddr.setStatus('current')
hwIpv6StaticRoutePrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 5, 1, 3), Unsigned32())
if mibBuilder.loadTexts: hwIpv6StaticRoutePrefixLen.setStatus('current')
hwIpv6StaticRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 5, 1, 4), Ipv6Address())
if mibBuilder.loadTexts: hwIpv6StaticRouteNextHop.setStatus('current')
hwIpv6StaticRouteOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 5, 1, 5), Unsigned32())
if mibBuilder.loadTexts: hwIpv6StaticRouteOutIfIndex.setStatus('current')
hwIpv6StaticRouteDestVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 5, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpv6StaticRouteDestVpnName.setStatus('current')
hwIpv6StaticRouteBfdName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 5, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpv6StaticRouteBfdName.setStatus('current')
hwIpv6StaticRouteNqaAdminName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 5, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpv6StaticRouteNqaAdminName.setStatus('current')
hwIpv6StaticRouteNqaTestName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 5, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpv6StaticRouteNqaTestName.setStatus('current')
hwIpv6StaticRoutePrefer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 5, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpv6StaticRoutePrefer.setStatus('current')
hwIpv6StaticRouteTag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 5, 1, 11), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpv6StaticRouteTag.setStatus('current')
hwIpv6StaticRouteDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 5, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpv6StaticRouteDescr.setStatus('current')
hwIpv6StaticRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 5, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpv6StaticRouteRowStatus.setStatus('current')
hwRmInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 6))
hwIpv4PrefixNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 6, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpv4PrefixNum.setStatus('current')
hwIpv6PrefixNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 1, 6, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpv6PrefixNum.setStatus('current')
hwRmExtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 2))
hwRmExtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 2, 1))
hwRmExtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 2, 1, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwStaticRouteGroup"), ("HUAWEI-RM-EXT-MIB", "hwRouteStatGroup"), ("HUAWEI-RM-EXT-MIB", "hwStaticRouteExtGroup"), ("HUAWEI-RM-EXT-MIB", "hwIpv6RouteStatGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRmExtCompliance = hwRmExtCompliance.setStatus('current')
hwRmExtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 2, 2))
hwStaticRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 2, 2, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwStaticRouteBfdName"), ("HUAWEI-RM-EXT-MIB", "hwStaticRoutePrefer"), ("HUAWEI-RM-EXT-MIB", "hwStaticRouteDescrip"), ("HUAWEI-RM-EXT-MIB", "hwStaticRouteRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwStaticRouteGroup = hwStaticRouteGroup.setStatus('current')
hwRouteStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 2, 2, 2)).setObjects(("HUAWEI-RM-EXT-MIB", "hwRouteStatTotal"), ("HUAWEI-RM-EXT-MIB", "hwRouteStatActive"), ("HUAWEI-RM-EXT-MIB", "hwRouteStatAdded"), ("HUAWEI-RM-EXT-MIB", "hwRouteStatDeleted"), ("HUAWEI-RM-EXT-MIB", "hwRouteStatFreed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRouteStatGroup = hwRouteStatGroup.setStatus('current')
hwIpv6RouteStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 2, 2, 3)).setObjects(("HUAWEI-RM-EXT-MIB", "hwIpv6RouteStatTotal"), ("HUAWEI-RM-EXT-MIB", "hwIpv6RouteStatActive"), ("HUAWEI-RM-EXT-MIB", "hwIpv6RouteStatAdded"), ("HUAWEI-RM-EXT-MIB", "hwIpv6RouteStatDeleted"), ("HUAWEI-RM-EXT-MIB", "hwIpv6RouteStatFreed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpv6RouteStatGroup = hwIpv6RouteStatGroup.setStatus('current')
hwStaticRouteExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 2, 2, 4)).setObjects(("HUAWEI-RM-EXT-MIB", "hwStaticRouteDestVpnNameExt"), ("HUAWEI-RM-EXT-MIB", "hwStaticRouteBfdNameExt"), ("HUAWEI-RM-EXT-MIB", "hwStaticRoutePreferExt"), ("HUAWEI-RM-EXT-MIB", "hwStaticRouteRowStatusExt"), ("HUAWEI-RM-EXT-MIB", "hwStaticRouteDescripExt"), ("HUAWEI-RM-EXT-MIB", "hwStaticRoutePermanentExt"), ("HUAWEI-RM-EXT-MIB", "hwStaticRouteLdpSyncExt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwStaticRouteExtGroup = hwStaticRouteExtGroup.setStatus('current')
hwIpv6StaticRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 2, 2, 5)).setObjects(("HUAWEI-RM-EXT-MIB", "hwIpv6StaticRouteDestVpnName"), ("HUAWEI-RM-EXT-MIB", "hwIpv6StaticRouteBfdName"), ("HUAWEI-RM-EXT-MIB", "hwIpv6StaticRoutePrefer"), ("HUAWEI-RM-EXT-MIB", "hwIpv6StaticRouteTag"), ("HUAWEI-RM-EXT-MIB", "hwIpv6StaticRouteRowStatus"), ("HUAWEI-RM-EXT-MIB", "hwIpv6StaticRouteNqaAdminName"), ("HUAWEI-RM-EXT-MIB", "hwIpv6StaticRouteNqaTestName"), ("HUAWEI-RM-EXT-MIB", "hwIpv6StaticRouteDescr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpv6StaticRouteGroup = hwIpv6StaticRouteGroup.setStatus('current')
hwRmInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 2, 2, 6)).setObjects(("HUAWEI-RM-EXT-MIB", "hwIpv4PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRmInfoGroup = hwRmInfoGroup.setStatus('current')
hwTunnelExtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3))
hwTnl2L3vpnTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 1), )
if mibBuilder.loadTexts: hwTnl2L3vpnTable.setStatus('current')
hwTnl2L3vpnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 1, 1), ).setIndexNames((0, "HUAWEI-RM-EXT-MIB", "hwL3vpnTnlId"), (0, "HUAWEI-RM-EXT-MIB", "hwVpnIndex"))
if mibBuilder.loadTexts: hwTnl2L3vpnEntry.setStatus('current')
hwL3vpnTnlId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwL3vpnTnlId.setStatus('current')
hwVpnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096)))
if mibBuilder.loadTexts: hwVpnIndex.setStatus('current')
hwVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnName.setStatus('current')
hwTnl2VplsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 2), )
if mibBuilder.loadTexts: hwTnl2VplsTable.setStatus('current')
hwTnl2VplsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 2, 1), ).setIndexNames((0, "HUAWEI-RM-EXT-MIB", "hwVplsTnlId"), (0, "HUAWEI-RM-EXT-MIB", "hwVplsVcId"))
if mibBuilder.loadTexts: hwTnl2VplsEntry.setStatus('current')
hwVplsTnlId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwVplsTnlId.setStatus('current')
hwVplsVcId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hwVplsVcId.setStatus('current')
hwVsiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsiIndex.setStatus('current')
hwVsiId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsiId.setStatus('current')
hwVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsiName.setStatus('current')
hwVplsVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVplsVcType.setStatus('current')
hwVplsPeerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 2, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVplsPeerIp.setStatus('current')
hwTnl2Pwe3VllTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 3), )
if mibBuilder.loadTexts: hwTnl2Pwe3VllTable.setStatus('current')
hwTnl2Pwe3VllEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 3, 1), ).setIndexNames((0, "HUAWEI-RM-EXT-MIB", "hwPwVllTnlId"), (0, "HUAWEI-RM-EXT-MIB", "hwAcIndex"))
if mibBuilder.loadTexts: hwTnl2Pwe3VllEntry.setStatus('current')
hwPwVllTnlId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwPwVllTnlId.setStatus('current')
hwAcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hwAcIndex.setStatus('current')
hwPwVllIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPwVllIfName.setStatus('current')
hwMasterSlaveFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMasterSlaveFlag.setStatus('current')
hwPwVllPeerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPwVllPeerIp.setStatus('current')
hwPwVllVcId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPwVllVcId.setStatus('current')
hwPwVllSvcFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPwVllSvcFlag.setStatus('current')
hwPwVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 64, 255))).clone(namedValues=NamedValues(("frameRelayDlciMartini", 1), ("atmAal5SduVccTransport", 2), ("atmTransparentCellTransport", 3), ("vlan", 4), ("ethernet", 5), ("hdlc", 6), ("ppp", 7), ("cem", 8), ("atmN2OneVccCellTransport", 9), ("atmN2OneVpcCellTransport", 10), ("ipLayer2Transport", 11), ("atmOne2OneVccCellMode", 12), ("atmOne2OneVpcCellMode", 13), ("atmAal5PduVccTransport", 14), ("frameRelayPortMode", 15), ("cep", 16), ("saE1oP", 17), ("saT1oP", 18), ("saE3oP", 19), ("saT3oP", 20), ("cESoPsnBasicMode", 21), ("tDMoIPbasicMode", 22), ("l2VpnCESoPSNTDMwithCAS", 23), ("l2VpnTDMoIPTDMwithCAS", 24), ("frameRelayDlci", 25), ("ipInterworking", 64), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPwVcType.setStatus('current')
hwSvcReceiveLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSvcReceiveLabel.setStatus('current')
hwSvcTransmitLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSvcTransmitLabel.setStatus('current')
hwTnlIf2TnlIdTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 4), )
if mibBuilder.loadTexts: hwTnlIf2TnlIdTable.setStatus('current')
hwTnlIf2TnlIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 4, 1), ).setIndexNames((0, "HUAWEI-RM-EXT-MIB", "hwTunnelIf"))
if mibBuilder.loadTexts: hwTnlIf2TnlIdEntry.setStatus('current')
hwTunnelIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: hwTunnelIf.setStatus('current')
hwTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelId.setStatus('current')
hwTnl2MultiHopPwe3Table = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 5), )
if mibBuilder.loadTexts: hwTnl2MultiHopPwe3Table.setStatus('current')
hwTnl2MultiHopPwe3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 5, 1), ).setIndexNames((0, "HUAWEI-RM-EXT-MIB", "hwMultiHopPwe3TnlId"), (0, "HUAWEI-RM-EXT-MIB", "hwMultiHopPwe3VcType"), (0, "HUAWEI-RM-EXT-MIB", "hwMultiHopPwe3VcId"))
if mibBuilder.loadTexts: hwTnl2MultiHopPwe3Entry.setStatus('current')
hwMultiHopPwe3TnlId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwMultiHopPwe3TnlId.setStatus('current')
hwMultiHopPwe3VcType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 5, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hwMultiHopPwe3VcType.setStatus('current')
hwMultiHopPwe3VcId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 5, 1, 3), Unsigned32())
if mibBuilder.loadTexts: hwMultiHopPwe3VcId.setStatus('current')
hwMultiHopPwe3PeerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 3, 5, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMultiHopPwe3PeerIp.setStatus('current')
hwTunnelExtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 4))
hwTunnelExtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 4, 1))
hwTunnelExtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 4, 1, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwTnl2L3vpnGroup"), ("HUAWEI-RM-EXT-MIB", "hwTnl2VplsGroup"), ("HUAWEI-RM-EXT-MIB", "hwTnl2Pwe3VllGroup"), ("HUAWEI-RM-EXT-MIB", "hwTnlIf2TnlIdGroup"), ("HUAWEI-RM-EXT-MIB", "hwTnl2MultiHopPwe3Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTunnelExtCompliance = hwTunnelExtCompliance.setStatus('current')
hwTunnelExtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 4, 2))
hwTnl2L3vpnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 4, 2, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwVpnName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTnl2L3vpnGroup = hwTnl2L3vpnGroup.setStatus('current')
hwTnl2VplsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 4, 2, 2)).setObjects(("HUAWEI-RM-EXT-MIB", "hwVsiIndex"), ("HUAWEI-RM-EXT-MIB", "hwVsiId"), ("HUAWEI-RM-EXT-MIB", "hwVsiName"), ("HUAWEI-RM-EXT-MIB", "hwVplsVcType"), ("HUAWEI-RM-EXT-MIB", "hwVplsPeerIp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTnl2VplsGroup = hwTnl2VplsGroup.setStatus('current')
hwTnl2Pwe3VllGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 4, 2, 3)).setObjects(("HUAWEI-RM-EXT-MIB", "hwMasterSlaveFlag"), ("HUAWEI-RM-EXT-MIB", "hwPwVllIfName"), ("HUAWEI-RM-EXT-MIB", "hwPwVllVcId"), ("HUAWEI-RM-EXT-MIB", "hwPwVllSvcFlag"), ("HUAWEI-RM-EXT-MIB", "hwPwVcType"), ("HUAWEI-RM-EXT-MIB", "hwSvcReceiveLabel"), ("HUAWEI-RM-EXT-MIB", "hwSvcTransmitLabel"), ("HUAWEI-RM-EXT-MIB", "hwPwVllPeerIp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTnl2Pwe3VllGroup = hwTnl2Pwe3VllGroup.setStatus('current')
hwTnlIf2TnlIdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 4, 2, 4)).setObjects(("HUAWEI-RM-EXT-MIB", "hwTunnelId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTnlIf2TnlIdGroup = hwTnlIf2TnlIdGroup.setStatus('current')
hwTnl2MultiHopPwe3Group = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 4, 2, 5)).setObjects(("HUAWEI-RM-EXT-MIB", "hwMultiHopPwe3PeerIp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTnl2MultiHopPwe3Group = hwTnl2MultiHopPwe3Group.setStatus('current')
hwTnlGroupTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 5))
hwTnlDestination = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 5, 1), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwTnlDestination.setStatus('current')
hwTnlPolicy = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 5, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 39))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwTnlPolicy.setStatus('current')
hwTnlGroupTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 6))
hwTunnelGroupUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 6, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwTnlDestination"), ("HUAWEI-RM-EXT-MIB", "hwTnlPolicy"))
if mibBuilder.loadTexts: hwTunnelGroupUp.setStatus('current')
hwTunnelGroupDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 6, 2)).setObjects(("HUAWEI-RM-EXT-MIB", "hwTnlDestination"), ("HUAWEI-RM-EXT-MIB", "hwTnlPolicy"))
if mibBuilder.loadTexts: hwTunnelGroupDown.setStatus('current')
hwTnlGroupTrapConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 7))
hwTnlGroupNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 7, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwTunnelGroupUp"), ("HUAWEI-RM-EXT-MIB", "hwTunnelGroupDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTnlGroupNotificationGroup = hwTnlGroupNotificationGroup.setStatus('current')
hwTnlGroupObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 7, 2)).setObjects(("HUAWEI-RM-EXT-MIB", "hwTnlDestination"), ("HUAWEI-RM-EXT-MIB", "hwTnlPolicy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTnlGroupObjectGroup = hwTnlGroupObjectGroup.setStatus('current')
hwIpv4PrefixLimitTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 8))
hwCurIpv4PrefixNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 8, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCurIpv4PrefixNum.setStatus('current')
hwIpv4PrefixLimitValue = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 8, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIpv4PrefixLimitValue.setStatus('current')
hwIpv6PrefixLimitTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 9))
hwCurIpv6PrefixNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 9, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCurIpv6PrefixNum.setStatus('current')
hwIpv6PrefixLimitValue = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 9, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIpv6PrefixLimitValue.setStatus('current')
hwIpv6PrefixLimitVpnName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 9, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIpv6PrefixLimitVpnName.setStatus('current')
hwIpv4PrefixLimitTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 10))
hwIpv4PrefixExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 10, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv4PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv4PrefixLimitValue"))
if mibBuilder.loadTexts: hwIpv4PrefixExceed.setStatus('current')
hwIpv4PrefixExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 10, 2)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv4PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv4PrefixLimitValue"))
if mibBuilder.loadTexts: hwIpv4PrefixExceedClear.setStatus('current')
hwIpv4PrefixThresholdExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 10, 3)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv4PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv4PrefixLimitValue"))
if mibBuilder.loadTexts: hwIpv4PrefixThresholdExceed.setStatus('current')
hwIpv4PrefixThresholdExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 10, 4)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv4PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv4PrefixLimitValue"))
if mibBuilder.loadTexts: hwIpv4PrefixThresholdExceedClear.setStatus('current')
hwIpv6PrefixLimitTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 11))
hwIpv6PrefixExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 11, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv6PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitValue"))
if mibBuilder.loadTexts: hwIpv6PrefixExceed.setStatus('current')
hwIpv6PrefixExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 11, 2)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv6PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitValue"))
if mibBuilder.loadTexts: hwIpv6PrefixExceedClear.setStatus('current')
hwIpv6PrefixThresholdExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 11, 3)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv6PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitValue"))
if mibBuilder.loadTexts: hwIpv6PrefixThresholdExceed.setStatus('current')
hwIpv6PrefixThresholdExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 11, 4)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv6PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitValue"))
if mibBuilder.loadTexts: hwIpv6PrefixThresholdExceedClear.setStatus('current')
hwIpv4PrefixLimitConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 12))
hwIpv4PrefixLimitNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 12, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwIpv4PrefixExceed"), ("HUAWEI-RM-EXT-MIB", "hwIpv4PrefixExceedClear"), ("HUAWEI-RM-EXT-MIB", "hwIpv4PrefixThresholdExceed"), ("HUAWEI-RM-EXT-MIB", "hwIpv4PrefixThresholdExceedClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpv4PrefixLimitNotificationGroup = hwIpv4PrefixLimitNotificationGroup.setStatus('current')
hwIpv4PrefixLimitObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 12, 2)).setObjects(("HUAWEI-RM-EXT-MIB", "hwIpv4PrefixLimitValue"), ("HUAWEI-RM-EXT-MIB", "hwCurIpv4PrefixNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpv4PrefixLimitObjectGroup = hwIpv4PrefixLimitObjectGroup.setStatus('current')
hwIpv6PrefixLimitConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 13))
hwIpv6PrefixLimitNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 13, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixExceed"), ("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixExceedClear"), ("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixThresholdExceed"), ("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixThresholdExceedClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpv6PrefixLimitNotificationGroup = hwIpv6PrefixLimitNotificationGroup.setStatus('current')
hwIpv6PrefixLimitObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 13, 2)).setObjects(("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitValue"), ("HUAWEI-RM-EXT-MIB", "hwCurIpv6PrefixNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpv6PrefixLimitObjectGroup = hwIpv6PrefixLimitObjectGroup.setStatus('current')
hwRmGresmTokenObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 14))
hwGresmTokenTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 14, 1), )
if mibBuilder.loadTexts: hwGresmTokenTable.setStatus('current')
hwGresmTokenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 14, 1, 1), ).setIndexNames((0, "HUAWEI-RM-EXT-MIB", "hwGresmTokenMode"), (0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hwGresmTokenEntry.setStatus('current')
hwGresmTokenMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("global1", 1), ("global2", 2), ("global3", 3), ("global4", 4), ("perborad", 5)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwGresmTokenMode.setStatus('current')
hwGresmTokenUsedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 14, 1, 1, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwGresmTokenUsedNum.setStatus('current')
hwGresmTokenMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 14, 1, 1, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwGresmTokenMaxValue.setStatus('current')
hwGresmTokenTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 15))
hwGresmTokenExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 15, 1)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-RM-EXT-MIB", "hwGresmTokenUsedNum"), ("HUAWEI-RM-EXT-MIB", "hwGresmTokenMaxValue"))
if mibBuilder.loadTexts: hwGresmTokenExceed.setStatus('current')
hwGresmTokenExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 15, 2)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-RM-EXT-MIB", "hwGresmTokenUsedNum"), ("HUAWEI-RM-EXT-MIB", "hwGresmTokenMaxValue"))
if mibBuilder.loadTexts: hwGresmTokenExceedClear.setStatus('current')
hwGresmTokenThresholdExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 15, 3)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-RM-EXT-MIB", "hwGresmTokenUsedNum"), ("HUAWEI-RM-EXT-MIB", "hwGresmTokenMaxValue"))
if mibBuilder.loadTexts: hwGresmTokenThresholdExceed.setStatus('current')
hwGresmTokenThresholdExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 15, 4)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-RM-EXT-MIB", "hwGresmTokenUsedNum"), ("HUAWEI-RM-EXT-MIB", "hwGresmTokenMaxValue"))
if mibBuilder.loadTexts: hwGresmTokenThresholdExceedClear.setStatus('current')
hwGresmTokenTrapConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 16))
hwGresmTokenNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 16, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwGresmTokenExceed"), ("HUAWEI-RM-EXT-MIB", "hwGresmTokenExceedClear"), ("HUAWEI-RM-EXT-MIB", "hwGresmTokenThresholdExceed"), ("HUAWEI-RM-EXT-MIB", "hwGresmTokenThresholdExceedClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwGresmTokenNotificationGroup = hwGresmTokenNotificationGroup.setStatus('current')
hwGresmTokenGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 16, 2)).setObjects(("HUAWEI-RM-EXT-MIB", "hwGresmTokenMode"), ("HUAWEI-RM-EXT-MIB", "hwGresmTokenUsedNum"), ("HUAWEI-RM-EXT-MIB", "hwGresmTokenMaxValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwGresmTokenGroup = hwGresmTokenGroup.setStatus('current')
hwRmExtRouteObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 17))
hwRmExtRouteTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 18))
hwRmExtRouteTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 19))
hwPublicIpv4PrefixLimitTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 19, 1))
hwPublicIpv4PrefixExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 19, 1, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv4PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv4PrefixLimitValue"))
if mibBuilder.loadTexts: hwPublicIpv4PrefixExceed.setStatus('current')
hwPublicIpv4PrefixExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 19, 1, 2)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv4PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv4PrefixLimitValue"))
if mibBuilder.loadTexts: hwPublicIpv4PrefixExceedClear.setStatus('current')
hwPublicIpv4PrefixThresholdExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 19, 1, 3)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv4PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv4PrefixLimitValue"))
if mibBuilder.loadTexts: hwPublicIpv4PrefixThresholdExceed.setStatus('current')
hwPublicIpv4PrefixThresholdExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 19, 1, 4)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv4PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv4PrefixLimitValue"))
if mibBuilder.loadTexts: hwPublicIpv4PrefixThresholdExceedClear.setStatus('current')
hwPublicIpv6PrefixLimitTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 19, 2))
hwPublicIpv6PrefixExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 19, 2, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv6PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitValue"))
if mibBuilder.loadTexts: hwPublicIpv6PrefixExceed.setStatus('current')
hwPublicIpv6PrefixExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 19, 2, 2)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv6PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitValue"))
if mibBuilder.loadTexts: hwPublicIpv6PrefixExceedClear.setStatus('current')
hwPublicIpv6PrefixThresholdExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 19, 2, 3)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv6PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitValue"))
if mibBuilder.loadTexts: hwPublicIpv6PrefixThresholdExceed.setStatus('current')
hwPublicIpv6PrefixThresholdExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 19, 2, 4)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv6PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitValue"))
if mibBuilder.loadTexts: hwPublicIpv6PrefixThresholdExceedClear.setStatus('current')
hwL3vpnIpv6PrefixLimitTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 19, 3))
hwL3vpnIpv6PrefixExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 19, 3, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitVpnName"), ("HUAWEI-RM-EXT-MIB", "hwCurIpv6PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitValue"))
if mibBuilder.loadTexts: hwL3vpnIpv6PrefixExceed.setStatus('current')
hwL3vpnIpv6PrefixExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 19, 3, 2)).setObjects(("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitVpnName"), ("HUAWEI-RM-EXT-MIB", "hwCurIpv6PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitValue"))
if mibBuilder.loadTexts: hwL3vpnIpv6PrefixExceedClear.setStatus('current')
hwL3vpnIpv6PrefixThresholdExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 19, 3, 3)).setObjects(("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitVpnName"), ("HUAWEI-RM-EXT-MIB", "hwCurIpv6PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitValue"))
if mibBuilder.loadTexts: hwL3vpnIpv6PrefixThresholdExceed.setStatus('current')
hwRmExtRouteConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 20))
hwRmExtRouteCompliances = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 20, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwPublicIpv4PrefixLimitNotificationGroup"), ("HUAWEI-RM-EXT-MIB", "hwPublicIpv4PrefixLimitObjectGroup"), ("HUAWEI-RM-EXT-MIB", "hwPublicIpv6PrefixLimitNotificationGroup"), ("HUAWEI-RM-EXT-MIB", "hwPublicIpv6PrefixLimitObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRmExtRouteCompliances = hwRmExtRouteCompliances.setStatus('current')
hwRmExtRouteGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 20, 2))
hwPublicIpv4PrefixLimitGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 20, 2, 1))
hwPublicIpv4PrefixLimitNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 20, 2, 1, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwPublicIpv4PrefixExceed"), ("HUAWEI-RM-EXT-MIB", "hwPublicIpv4PrefixExceedClear"), ("HUAWEI-RM-EXT-MIB", "hwPublicIpv4PrefixThresholdExceed"), ("HUAWEI-RM-EXT-MIB", "hwPublicIpv4PrefixThresholdExceedClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPublicIpv4PrefixLimitNotificationGroup = hwPublicIpv4PrefixLimitNotificationGroup.setStatus('current')
hwPublicIpv4PrefixLimitObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 20, 2, 1, 2)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv4PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv4PrefixLimitValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPublicIpv4PrefixLimitObjectGroup = hwPublicIpv4PrefixLimitObjectGroup.setStatus('current')
hwPublicIpv6PrefixLimitGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 20, 2, 2))
hwPublicIpv6PrefixLimitNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 20, 2, 2, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwPublicIpv6PrefixExceed"), ("HUAWEI-RM-EXT-MIB", "hwPublicIpv6PrefixExceedClear"), ("HUAWEI-RM-EXT-MIB", "hwPublicIpv6PrefixThresholdExceed"), ("HUAWEI-RM-EXT-MIB", "hwPublicIpv6PrefixThresholdExceedClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPublicIpv6PrefixLimitNotificationGroup = hwPublicIpv6PrefixLimitNotificationGroup.setStatus('current')
hwPublicIpv6PrefixLimitObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 20, 2, 2, 2)).setObjects(("HUAWEI-RM-EXT-MIB", "hwCurIpv6PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPublicIpv6PrefixLimitObjectGroup = hwPublicIpv6PrefixLimitObjectGroup.setStatus('current')
hwL3vpnIpv6PrefixLimitGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 20, 2, 3))
hwL3vpnIpv6PrefixLimitNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 20, 2, 3, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwL3vpnIpv6PrefixExceed"), ("HUAWEI-RM-EXT-MIB", "hwL3vpnIpv6PrefixExceedClear"), ("HUAWEI-RM-EXT-MIB", "hwL3vpnIpv6PrefixThresholdExceed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL3vpnIpv6PrefixLimitNotificationGroup = hwL3vpnIpv6PrefixLimitNotificationGroup.setStatus('current')
hwL3vpnIpv6PrefixLimitObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 20, 2, 3, 2)).setObjects(("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitVpnName"), ("HUAWEI-RM-EXT-MIB", "hwCurIpv6PrefixNum"), ("HUAWEI-RM-EXT-MIB", "hwIpv6PrefixLimitValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL3vpnIpv6PrefixLimitObjectGroup = hwL3vpnIpv6PrefixLimitObjectGroup.setStatus('current')
hwEvpnMacObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 21))
hwMacLimitEvpnName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 21, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMacLimitEvpnName.setStatus('current')
hwCurMacNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 21, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCurMacNum.setStatus('current')
hwEvpnMacUpperLimitValue = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 21, 3), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEvpnMacUpperLimitValue.setStatus('current')
hwEvpnMacLowerLimitValue = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 21, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEvpnMacLowerLimitValue.setStatus('current')
hwEvpnMacLimitValue = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 21, 5), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEvpnMacLimitValue.setStatus('current')
hwEvpnMacLimitTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 22))
hwEvpnMacExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 22, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwMacLimitEvpnName"), ("HUAWEI-RM-EXT-MIB", "hwCurMacNum"), ("HUAWEI-RM-EXT-MIB", "hwEvpnMacLimitValue"))
if mibBuilder.loadTexts: hwEvpnMacExceed.setStatus('current')
hwEvpnMacExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 22, 2)).setObjects(("HUAWEI-RM-EXT-MIB", "hwMacLimitEvpnName"), ("HUAWEI-RM-EXT-MIB", "hwCurMacNum"), ("HUAWEI-RM-EXT-MIB", "hwEvpnMacLimitValue"))
if mibBuilder.loadTexts: hwEvpnMacExceedClear.setStatus('current')
hwEvpnMacThresholdExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 22, 3)).setObjects(("HUAWEI-RM-EXT-MIB", "hwMacLimitEvpnName"), ("HUAWEI-RM-EXT-MIB", "hwCurMacNum"), ("HUAWEI-RM-EXT-MIB", "hwEvpnMacLimitValue"))
if mibBuilder.loadTexts: hwEvpnMacThresholdExceed.setStatus('current')
hwEvpnMacThresholdExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 22, 4)).setObjects(("HUAWEI-RM-EXT-MIB", "hwMacLimitEvpnName"), ("HUAWEI-RM-EXT-MIB", "hwCurMacNum"), ("HUAWEI-RM-EXT-MIB", "hwEvpnMacLimitValue"))
if mibBuilder.loadTexts: hwEvpnMacThresholdExceedClear.setStatus('current')
hwEvpnMacLimitConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 23))
hwEvpnMacLimitNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 23, 1)).setObjects(("HUAWEI-RM-EXT-MIB", "hwEvpnMacExceed"), ("HUAWEI-RM-EXT-MIB", "hwEvpnMacExceedClear"), ("HUAWEI-RM-EXT-MIB", "hwEvpnMacThresholdExceed"), ("HUAWEI-RM-EXT-MIB", "hwEvpnMacThresholdExceedClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEvpnMacLimitNotificationGroup = hwEvpnMacLimitNotificationGroup.setStatus('current')
hwEvpnMacLimitObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 145, 23, 2)).setObjects(("HUAWEI-RM-EXT-MIB", "hwMacLimitEvpnName"), ("HUAWEI-RM-EXT-MIB", "hwCurMacNum"), ("HUAWEI-RM-EXT-MIB", "hwEvpnMacUpperLimitValue"), ("HUAWEI-RM-EXT-MIB", "hwEvpnMacLowerLimitValue"), ("HUAWEI-RM-EXT-MIB", "hwEvpnMacLimitValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEvpnMacLimitObjectGroup = hwEvpnMacLimitObjectGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-RM-EXT-MIB", hwPublicIpv4PrefixExceed=hwPublicIpv4PrefixExceed, hwPublicIpv6PrefixLimitGroup=hwPublicIpv6PrefixLimitGroup, hwRouteStatTable=hwRouteStatTable, hwStaticRoutePermanentExt=hwStaticRoutePermanentExt, hwVsiId=hwVsiId, hwEvpnMacExceedClear=hwEvpnMacExceedClear, hwTnl2VplsTable=hwTnl2VplsTable, hwStaticRouteOutIfIndexExt=hwStaticRouteOutIfIndexExt, hwIpv6RouteStatGroup=hwIpv6RouteStatGroup, hwIpv4PrefixThresholdExceedClear=hwIpv4PrefixThresholdExceedClear, hwPwVllIfName=hwPwVllIfName, hwIpv6PrefixLimitConformance=hwIpv6PrefixLimitConformance, hwL3vpnIpv6PrefixExceed=hwL3vpnIpv6PrefixExceed, hwTnlGroupTraps=hwTnlGroupTraps, hwTnl2Pwe3VllEntry=hwTnl2Pwe3VllEntry, hwRouteStatEntry=hwRouteStatEntry, hwStaticRouteLdpSyncExt=hwStaticRouteLdpSyncExt, hwStaticRouteExtTable=hwStaticRouteExtTable, hwEvpnMacUpperLimitValue=hwEvpnMacUpperLimitValue, hwStaticRouteDestVpnNameExt=hwStaticRouteDestVpnNameExt, hwStaticRouteDescripExt=hwStaticRouteDescripExt, PYSNMP_MODULE_ID=hwRmExt, hwTunnelExtCompliance=hwTunnelExtCompliance, hwPublicIpv6PrefixThresholdExceedClear=hwPublicIpv6PrefixThresholdExceedClear, hwStaticRouteRowStatusExt=hwStaticRouteRowStatusExt, hwRmInfoGroup=hwRmInfoGroup, hwRmExt=hwRmExt, hwRmExtCompliances=hwRmExtCompliances, hwIpv4PrefixLimitNotificationGroup=hwIpv4PrefixLimitNotificationGroup, hwStaticRouteTable=hwStaticRouteTable, hwRouteStatProtocolId=hwRouteStatProtocolId, hwL3vpnTnlId=hwL3vpnTnlId, hwIpv6PrefixThresholdExceedClear=hwIpv6PrefixThresholdExceedClear, hwPublicIpv6PrefixLimitObjectGroup=hwPublicIpv6PrefixLimitObjectGroup, hwIpv4PrefixLimitValue=hwIpv4PrefixLimitValue, hwCurMacNum=hwCurMacNum, hwIpv6StaticRouteNextHop=hwIpv6StaticRouteNextHop, hwVpnName=hwVpnName, hwIpv6StaticRouteBfdName=hwIpv6StaticRouteBfdName, hwTnl2VplsGroup=hwTnl2VplsGroup, hwStaticRouteDestVpnName=hwStaticRouteDestVpnName, hwL3vpnIpv6PrefixLimitNotificationGroup=hwL3vpnIpv6PrefixLimitNotificationGroup, hwStaticRoutePreferExt=hwStaticRoutePreferExt, hwRouteStatGroup=hwRouteStatGroup, hwTnl2MultiHopPwe3Table=hwTnl2MultiHopPwe3Table, hwIpv6PrefixLimitObjectGroup=hwIpv6PrefixLimitObjectGroup, hwRmExtRouteCompliances=hwRmExtRouteCompliances, hwIpv6StaticRoutePrefer=hwIpv6StaticRoutePrefer, hwMultiHopPwe3VcType=hwMultiHopPwe3VcType, hwTunnelExtConformance=hwTunnelExtConformance, hwIpv4PrefixLimitTrapObjects=hwIpv4PrefixLimitTrapObjects, hwTunnelId=hwTunnelId, hwIpv6RouteStatProtocolId=hwIpv6RouteStatProtocolId, hwStaticRouteNextHopExt=hwStaticRouteNextHopExt, hwPwVllSvcFlag=hwPwVllSvcFlag, hwStaticRouteDestIpAddr=hwStaticRouteDestIpAddr, hwTnlGroupObjectGroup=hwTnlGroupObjectGroup, hwIpv4PrefixExceed=hwIpv4PrefixExceed, hwIpv6PrefixLimitTrapObjects=hwIpv6PrefixLimitTrapObjects, hwPwVllVcId=hwPwVllVcId, hwMasterSlaveFlag=hwMasterSlaveFlag, hwVplsPeerIp=hwVplsPeerIp, hwEvpnMacLimitTraps=hwEvpnMacLimitTraps, hwRmExtRouteConformance=hwRmExtRouteConformance, hwRouteStatVpnName=hwRouteStatVpnName, hwStaticRouteSourceVpnNameExt=hwStaticRouteSourceVpnNameExt, hwRmExtRouteObjects=hwRmExtRouteObjects, hwStaticRouteRowStatus=hwStaticRouteRowStatus, hwStaticRouteEntry=hwStaticRouteEntry, hwEvpnMacThresholdExceed=hwEvpnMacThresholdExceed, hwRmExtRouteTrapObjects=hwRmExtRouteTrapObjects, hwPublicIpv4PrefixLimitObjectGroup=hwPublicIpv4PrefixLimitObjectGroup, hwGresmTokenMode=hwGresmTokenMode, hwStaticRouteSourceVpnName=hwStaticRouteSourceVpnName, hwStaticRouteGroup=hwStaticRouteGroup, hwIpv6RouteStatActive=hwIpv6RouteStatActive, hwIpv4PrefixLimitObjectGroup=hwIpv4PrefixLimitObjectGroup, hwGresmTokenTable=hwGresmTokenTable, hwRmExtConformance=hwRmExtConformance, hwEvpnMacLimitNotificationGroup=hwEvpnMacLimitNotificationGroup, hwEvpnMacLowerLimitValue=hwEvpnMacLowerLimitValue, hwRouteStatFreed=hwRouteStatFreed, hwGresmTokenTraps=hwGresmTokenTraps, hwL3vpnIpv6PrefixLimitObjectGroup=hwL3vpnIpv6PrefixLimitObjectGroup, hwMultiHopPwe3TnlId=hwMultiHopPwe3TnlId, hwGresmTokenThresholdExceed=hwGresmTokenThresholdExceed, hwTnl2L3vpnEntry=hwTnl2L3vpnEntry, hwEvpnMacThresholdExceedClear=hwEvpnMacThresholdExceedClear, hwGresmTokenGroup=hwGresmTokenGroup, hwIpv6RouteStatTable=hwIpv6RouteStatTable, hwPublicIpv4PrefixThresholdExceed=hwPublicIpv4PrefixThresholdExceed, hwGresmTokenExceedClear=hwGresmTokenExceedClear, hwPublicIpv6PrefixExceed=hwPublicIpv6PrefixExceed, hwSvcReceiveLabel=hwSvcReceiveLabel, hwTnlPolicy=hwTnlPolicy, hwIpv6PrefixThresholdExceed=hwIpv6PrefixThresholdExceed, hwIpv6RouteStatDeleted=hwIpv6RouteStatDeleted, hwTnlGroupTrapConformance=hwTnlGroupTrapConformance, hwIpv4PrefixLimitConformance=hwIpv4PrefixLimitConformance, hwTnlDestination=hwTnlDestination, hwGresmTokenTrapConformance=hwGresmTokenTrapConformance, hwPublicIpv6PrefixLimitTraps=hwPublicIpv6PrefixLimitTraps, hwIpv6StaticRouteSourceVpnName=hwIpv6StaticRouteSourceVpnName, hwStaticRouteNextHop=hwStaticRouteNextHop, hwTnl2Pwe3VllTable=hwTnl2Pwe3VllTable, hwRmExtRouteTraps=hwRmExtRouteTraps, hwVplsTnlId=hwVplsTnlId, hwTnl2MultiHopPwe3Entry=hwTnl2MultiHopPwe3Entry, hwPublicIpv4PrefixLimitTraps=hwPublicIpv4PrefixLimitTraps, hwTnlGroupTrapObjects=hwTnlGroupTrapObjects, hwL3vpnIpv6PrefixLimitTraps=hwL3vpnIpv6PrefixLimitTraps, hwPublicIpv4PrefixLimitNotificationGroup=hwPublicIpv4PrefixLimitNotificationGroup, hwIpv4PrefixLimitTraps=hwIpv4PrefixLimitTraps, hwIpv6StaticRouteDescr=hwIpv6StaticRouteDescr, hwIpv6StaticRouteEntry=hwIpv6StaticRouteEntry, hwTnlIf2TnlIdTable=hwTnlIf2TnlIdTable, hwTunnelExtGroups=hwTunnelExtGroups, hwTnl2Pwe3VllGroup=hwTnl2Pwe3VllGroup, hwTnlGroupNotificationGroup=hwTnlGroupNotificationGroup, hwStaticRouteDescrip=hwStaticRouteDescrip, hwRmExtGroups=hwRmExtGroups, hwCurIpv6PrefixNum=hwCurIpv6PrefixNum, hwStaticRouteOutIfIndex=hwStaticRouteOutIfIndex, hwRouteStatTotal=hwRouteStatTotal, hwPublicIpv6PrefixLimitNotificationGroup=hwPublicIpv6PrefixLimitNotificationGroup, hwIpv4PrefixExceedClear=hwIpv4PrefixExceedClear, hwEvpnMacLimitConformance=hwEvpnMacLimitConformance, hwMultiHopPwe3VcId=hwMultiHopPwe3VcId, hwTunnelExtCompliances=hwTunnelExtCompliances, hwIpv6PrefixLimitTraps=hwIpv6PrefixLimitTraps, hwVplsVcType=hwVplsVcType, hwIpv6RouteStatFreed=hwIpv6RouteStatFreed, hwIpv6StaticRouteNqaAdminName=hwIpv6StaticRouteNqaAdminName, hwIpv6RouteStatEntry=hwIpv6RouteStatEntry, hwIpv6StaticRoutePrefixLen=hwIpv6StaticRoutePrefixLen, hwIpv4PrefixNum=hwIpv4PrefixNum, hwIpv6StaticRouteDestIpAddr=hwIpv6StaticRouteDestIpAddr, hwIpv6StaticRouteTable=hwIpv6StaticRouteTable, hwTunnelExtObjects=hwTunnelExtObjects, hwPwVllPeerIp=hwPwVllPeerIp, hwPwVcType=hwPwVcType, hwTnl2MultiHopPwe3Group=hwTnl2MultiHopPwe3Group, hwIpv4PrefixThresholdExceed=hwIpv4PrefixThresholdExceed, hwStaticRouteDestMaskAddrExt=hwStaticRouteDestMaskAddrExt, hwPublicIpv6PrefixExceedClear=hwPublicIpv6PrefixExceedClear, hwRmExtRouteGroup=hwRmExtRouteGroup, hwGresmTokenThresholdExceedClear=hwGresmTokenThresholdExceedClear, hwIpv6PrefixLimitValue=hwIpv6PrefixLimitValue, hwCurIpv4PrefixNum=hwCurIpv4PrefixNum, hwIpv6RouteStatTotal=hwIpv6RouteStatTotal, hwEvpnMacLimitValue=hwEvpnMacLimitValue, hwRmExtObjects=hwRmExtObjects, hwAcIndex=hwAcIndex, hwPublicIpv6PrefixThresholdExceed=hwPublicIpv6PrefixThresholdExceed, hwStaticRoutePrefer=hwStaticRoutePrefer, hwIpv6PrefixExceedClear=hwIpv6PrefixExceedClear, hwPwVllTnlId=hwPwVllTnlId, hwIpv6StaticRouteOutIfIndex=hwIpv6StaticRouteOutIfIndex, hwL3vpnIpv6PrefixExceedClear=hwL3vpnIpv6PrefixExceedClear, hwTunnelIf=hwTunnelIf, hwIpv6StaticRouteDestVpnName=hwIpv6StaticRouteDestVpnName, hwTnl2VplsEntry=hwTnl2VplsEntry, hwTnl2L3vpnGroup=hwTnl2L3vpnGroup, hwVsiName=hwVsiName, hwTnl2L3vpnTable=hwTnl2L3vpnTable, hwStaticRouteDestIpAddrExt=hwStaticRouteDestIpAddrExt, hwIpv6PrefixExceed=hwIpv6PrefixExceed, hwTnlIf2TnlIdGroup=hwTnlIf2TnlIdGroup, hwIpv6PrefixLimitNotificationGroup=hwIpv6PrefixLimitNotificationGroup, hwEvpnMacLimitObjectGroup=hwEvpnMacLimitObjectGroup, hwMacLimitEvpnName=hwMacLimitEvpnName, hwRmExtCompliance=hwRmExtCompliance, hwGresmTokenMaxValue=hwGresmTokenMaxValue, hwL3vpnIpv6PrefixLimitGroup=hwL3vpnIpv6PrefixLimitGroup, hwMultiHopPwe3PeerIp=hwMultiHopPwe3PeerIp, hwIpv6StaticRouteRowStatus=hwIpv6StaticRouteRowStatus, hwVplsVcId=hwVplsVcId, hwIpv6RouteStatAdded=hwIpv6RouteStatAdded, hwPublicIpv4PrefixExceedClear=hwPublicIpv4PrefixExceedClear, hwGresmTokenEntry=hwGresmTokenEntry, hwRouteStatDeleted=hwRouteStatDeleted, hwRmInfo=hwRmInfo, hwIpv6StaticRouteNqaTestName=hwIpv6StaticRouteNqaTestName, hwEvpnMacExceed=hwEvpnMacExceed, hwVsiIndex=hwVsiIndex, hwPublicIpv4PrefixThresholdExceedClear=hwPublicIpv4PrefixThresholdExceedClear, hwTnlIf2TnlIdEntry=hwTnlIf2TnlIdEntry, hwGresmTokenExceed=hwGresmTokenExceed, hwRmGresmTokenObjects=hwRmGresmTokenObjects, hwStaticRouteBfdNameExt=hwStaticRouteBfdNameExt, hwIpv6PrefixLimitVpnName=hwIpv6PrefixLimitVpnName, hwStaticRouteExtEntry=hwStaticRouteExtEntry, hwRouteStatAdded=hwRouteStatAdded, hwVpnIndex=hwVpnIndex, hwGresmTokenUsedNum=hwGresmTokenUsedNum, hwSvcTransmitLabel=hwSvcTransmitLabel, hwStaticRouteExtGroup=hwStaticRouteExtGroup, hwTunnelGroupDown=hwTunnelGroupDown, hwTunnelGroupUp=hwTunnelGroupUp, hwStaticRouteBfdName=hwStaticRouteBfdName, hwStaticRouteDestMaskAddr=hwStaticRouteDestMaskAddr, hwGresmTokenNotificationGroup=hwGresmTokenNotificationGroup, hwPublicIpv4PrefixLimitGroup=hwPublicIpv4PrefixLimitGroup, hwL3vpnIpv6PrefixThresholdExceed=hwL3vpnIpv6PrefixThresholdExceed, hwIpv6StaticRouteTag=hwIpv6StaticRouteTag, hwRouteStatActive=hwRouteStatActive, hwIpv6PrefixNum=hwIpv6PrefixNum, hwIpv6StaticRouteGroup=hwIpv6StaticRouteGroup, hwEvpnMacObjects=hwEvpnMacObjects, hwIpv6RouteStatVpnName=hwIpv6RouteStatVpnName)
