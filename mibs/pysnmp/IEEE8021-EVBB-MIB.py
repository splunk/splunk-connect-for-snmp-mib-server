#
# PySNMP MIB module IEEE8021-EVBB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IEEE8021-EVBB-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:02:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
ieee802dot1mibs, IEEE8021PbbComponentIdentifier, IEEE8021PbbComponentIdentifierOrZero, IEEE8021BridgePortNumberOrZero, IEEE8021BridgePortNumber = mibBuilder.importSymbols("IEEE8021-TC-MIB", "ieee802dot1mibs", "IEEE8021PbbComponentIdentifier", "IEEE8021PbbComponentIdentifierOrZero", "IEEE8021BridgePortNumberOrZero", "IEEE8021BridgePortNumber")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ObjectIdentity, Counter64, iso, Bits, TimeTicks, Integer32, NotificationType, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, Gauge32, Counter32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "iso", "Bits", "TimeTicks", "Integer32", "NotificationType", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "Gauge32", "Counter32", "ModuleIdentity")
TruthValue, TextualConvention, DisplayString, TimeInterval, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString", "TimeInterval", "RowStatus", "MacAddress")
ieee8021BridgeEvbMib = ModuleIdentity((1, 3, 111, 2, 802, 1, 1, 100))
ieee8021BridgeEvbMib.setRevisions(('2010-10-25 00:00',))
if mibBuilder.loadTexts: ieee8021BridgeEvbMib.setLastUpdated('201010250000Z')
if mibBuilder.loadTexts: ieee8021BridgeEvbMib.setOrganization('IEEE 802.1 Working Group')
ieee8021BridgeEvbNotifications = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 100, 0))
ieee8021BridgeEvbObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 100, 1))
ieee8021BridgeEvbConformance = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 100, 2))
class IEEE8021BridgeEvbTLVTC(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("vdpCapable", 0), ("ecpCapable", 1), ("ecpRTE", 2), ("vdpTimerCapable", 3), ("reflectiveRelayCap", 14), ("stdForwardingCap", 15))

ieee8021BridgeEvbConfig = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 100, 1, 1))
ieee8021BridgeEvbSysMACAddress = MibScalar((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysMACAddress.setStatus('current')
ieee8021BridgeEvbSysName = MibScalar((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysName.setStatus('current')
ieee8021BridgeEvbSysType = MibScalar((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("evbBridge", 1), ("evbStation", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysType.setStatus('current')
ieee8021BridgeEvbSysNumExternalPorts = MibScalar((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysNumExternalPorts.setStatus('current')
ieee8021BridgeEvbSysEvbLldpEnables = MibScalar((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 5), Bits().clone(namedValues=NamedValues(("evbTLVEnable", 0), ("autoEvbLLDPTLV", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysEvbLldpEnables.setStatus('current')
ieee8021BridgeEvbSysEvbLldpDfltMode = MibScalar((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 6), IEEE8021BridgeEvbTLVTC()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysEvbLldpDfltMode.setStatus('current')
ieee8021BridgeEvbSysEvbLldpNumVsisSup = MibScalar((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysEvbLldpNumVsisSup.setStatus('current')
ieee8021BridgeEvbSysNumCorErComps = MibScalar((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysNumCorErComps.setStatus('current')
ieee8021BridgeEvbSysNumSComps = MibScalar((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysNumSComps.setStatus('current')
ieee8021BridgeEvbECPACkTimer = MibScalar((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbECPACkTimer.setStatus('current')
ieee8021BridgeEvbECPMaxRetires = MibScalar((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbECPMaxRetires.setStatus('current')
ieee8021BridgeEvbSysVdpDfltRsrcWaitDelay = MibScalar((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysVdpDfltRsrcWaitDelay.setStatus('current')
ieee8021BridgeEvbSysVdpDfltReinitKeepAlive = MibScalar((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysVdpDfltReinitKeepAlive.setStatus('current')
ieee8021BridgeEvbPhyPortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 14), )
if mibBuilder.loadTexts: ieee8021BridgeEvbPhyPortTable.setStatus('current')
ieee8021BridgeEvbPhyPortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 14, 1), ).setIndexNames((0, "IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPhyPort"))
if mibBuilder.loadTexts: ieee8021BridgeEvbPhyPortEntry.setStatus('current')
ieee8021BridgeEvbPhyPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 14, 1, 1), IEEE8021BridgePortNumber())
if mibBuilder.loadTexts: ieee8021BridgeEvbPhyPort.setStatus('current')
ieee8021BridgeEvbPhyPortMacAddress = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 14, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbPhyPortMacAddress.setStatus('current')
ieee8021BridgeEvbPhyPortTypeCap = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 14, 1, 3), Bits().clone(namedValues=NamedValues(("customerVlanPort", 0), ("providerNetworkPort", 1), ("customerNetworkPort", 2), ("customerEdgePort", 3), ("customerBackbonePort", 4), ("virtualInstancePort", 5), ("dBridgePort", 6), ("serverEdgePort", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbPhyPortTypeCap.setStatus('current')
ieee8021BridgeEvbPhyPortType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("customerVlanPort", 1), ("uplinkAccessPort", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbPhyPortType.setStatus('current')
ieee8021BridgeEvbPhyPortToComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 14, 1, 5), IEEE8021PbbComponentIdentifierOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbPhyPortToComponentId.setStatus('current')
ieee8021BridgeEvbPhyPortToInternalPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 14, 1, 6), IEEE8021BridgePortNumberOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbPhyPortToInternalPort.setStatus('current')
ieee8021BridgeEvbPortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 15), )
if mibBuilder.loadTexts: ieee8021BridgeEvbPortTable.setStatus('current')
ieee8021BridgeEvbPortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 15, 1), ).setIndexNames((0, "IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPortComponentId"), (0, "IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPort"))
if mibBuilder.loadTexts: ieee8021BridgeEvbPortEntry.setStatus('current')
ieee8021BridgeEvbPortComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 15, 1, 1), IEEE8021PbbComponentIdentifierOrZero())
if mibBuilder.loadTexts: ieee8021BridgeEvbPortComponentId.setStatus('current')
ieee8021BridgeEvbPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 15, 1, 2), IEEE8021BridgePortNumber())
if mibBuilder.loadTexts: ieee8021BridgeEvbPort.setStatus('current')
ieee8021BridgeEvbPortType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("cVlanBridgePort", 1), ("stationFacingBridgePort", 2), ("uplinkAccessPort", 3), ("sChannelAccessPort", 4), ("uplinkRelayPort", 5), ("edgeRelayPort", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbPortType.setStatus('current')
ieee8021BridgeEvbPortRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 1, 15, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbPortRowStatus.setStatus('current')
ieee8021BridgeEvbVSIDBObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 100, 1, 2))
ieee8021BridgeEvbVSIDBTable = MibTable((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1), )
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIDBTable.setStatus('current')
ieee8021BridgeEvbVSIDBEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1), ).setIndexNames((0, "IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPhyPort"), (0, "IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVsiSvid"), (0, "IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVSIID"))
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIDBEntry.setStatus('current')
ieee8021BridgeEvbVsiSvid = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)))
if mibBuilder.loadTexts: ieee8021BridgeEvbVsiSvid.setStatus('current')
ieee8021BridgeEvbVSIID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16))
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIID.setStatus('current')
ieee8021BridgeEvbVSIComponentID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 3), IEEE8021PbbComponentIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIComponentID.setStatus('current')
ieee8021BridgeEvbVSIPortNumber = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 4), IEEE8021BridgePortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIPortNumber.setStatus('current')
ieee8021BridgeEvbVSITimeSinceCreate = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 5), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSITimeSinceCreate.setStatus('current')
ieee8021BridgeEvbVsiVdpOperCmd = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("preAssociate", 1), ("preAssociateWithRsrcReservation", 2), ("associate", 3), ("deAssociate", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVsiVdpOperCmd.setStatus('current')
ieee8021BridgeEvbVsiOperRevert = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVsiOperRevert.setStatus('current')
ieee8021BridgeEvbVsiOperHard = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVsiOperHard.setStatus('current')
ieee8021BridgeEvbVsiOperReason = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 9), Bits().clone(namedValues=NamedValues(("success", 0), ("invalidFormat", 1), ("insufficientResources", 2), ("otherfailure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVsiOperReason.setStatus('current')
ieee8021BridgeEvbVSIMgrID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIMgrID.setStatus('current')
ieee8021BridgeEvbVSIType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIType.setStatus('current')
ieee8021BridgeEvbVSITypeVersion = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSITypeVersion.setStatus('current')
ieee8021BridgeEvbVSIMvFormat = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("basic", 0), ("partial", 1), ("vlanOnly", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIMvFormat.setStatus('current')
ieee8021BridgeEvbVSINumMACs = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSINumMACs.setStatus('current')
ieee8021BridgeEvbVDPMachineState = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("preAssociate", 1), ("preAssociateWithRsrcReservation", 2), ("associate", 3), ("deAssociate", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVDPMachineState.setStatus('current')
ieee8021BridgeEvbVDPCommandsSucceeded = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVDPCommandsSucceeded.setStatus('current')
ieee8021BridgeEvbVDPCommandsFailed = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVDPCommandsFailed.setStatus('current')
ieee8021BridgeEvbVDPCommandReverts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVDPCommandReverts.setStatus('current')
ieee8021BridgeEvbVSIDBMacTable = MibTable((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 2), )
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIDBMacTable.setStatus('current')
ieee8021BridgeEvbVSIDBMacEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 2, 1), ).setIndexNames((0, "IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPhyPort"), (0, "IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVsiSvid"), (0, "IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVSIID"), (0, "IEEE8021-EVBB-MIB", "ieee8021BridgeEvbGroupID"), (0, "IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVSIMac"), (0, "IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVSIVlanId"))
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIDBMacEntry.setStatus('current')
ieee8021BridgeEvbGroupID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ieee8021BridgeEvbGroupID.setStatus('current')
ieee8021BridgeEvbVSIMac = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 2, 1, 2), MacAddress())
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIMac.setStatus('current')
ieee8021BridgeEvbVSIVlanId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 2, 2, 1, 3), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIVlanId.setStatus('current')
ieee8021BridgeEvbSChannelObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 100, 1, 4))
ieee8021BridgeEvbUAPConfigTable = MibTable((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 1), )
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPConfigTable.setStatus('current')
ieee8021BridgeEvbUAPConfigEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 1, 1), ).setIndexNames((0, "IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPhyPort"))
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPConfigEntry.setStatus('current')
ieee8021BridgeEvbUAPComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 1, 1, 1), IEEE8021PbbComponentIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPComponentId.setStatus('current')
ieee8021BridgeEvbUAPPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 1, 1, 2), IEEE8021BridgePortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPPort.setStatus('current')
ieee8021BridgeEvbUAPSchCdcpAdminEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPSchCdcpAdminEnable.setStatus('current')
ieee8021BridgeEvbUAPSchAdminCDCPRole = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cdcpRoleB", 1), ("cdcpRoleS", 2))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPSchAdminCDCPRole.setStatus('current')
ieee8021BridgeEvbUAPSchAdminCDCPChanCap = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 167))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPSchAdminCDCPChanCap.setStatus('current')
ieee8021BridgeEvbUAPSchOperCDCPChanCap = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 167))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPSchOperCDCPChanCap.setStatus('current')
ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolLow = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 1, 1, 7), VlanIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolLow.setStatus('current')
ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolHigh = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 1, 1, 8), VlanIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolHigh.setStatus('current')
ieee8021BridgeEvbUAPSchOperState = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("running", 1), ("notRunning", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPSchOperState.setStatus('current')
ieee8021BridgeEvbSchCdcpRemoteEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbSchCdcpRemoteEnabled.setStatus('current')
ieee8021BridgeEvbSchCdcpRemoteRole = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cdcpRoleB", 1), ("cdcpRoleS", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbSchCdcpRemoteRole.setStatus('current')
ieee8021BridgeEvbUAPConfigRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPConfigRowStatus.setStatus('current')
ieee8021BridgeEvbCAPConfigTable = MibTable((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2), )
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPConfigTable.setStatus('current')
ieee8021BridgeEvbCAPConfigEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1), ).setIndexNames((0, "IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPhyPort"), (0, "IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVsiSvid"))
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPConfigEntry.setStatus('current')
ieee8021BridgeEvbCAPComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 1), IEEE8021PbbComponentIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPComponentId.setStatus('current')
ieee8021BridgeEvbCAPPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 2), IEEE8021BridgePortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPPort.setStatus('current')
ieee8021BridgeEvbCAPSChannelID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPSChannelID.setStatus('current')
ieee8021BridgeEvbCAPAssociateSBPCompID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 6), IEEE8021PbbComponentIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPAssociateSBPCompID.setStatus('current')
ieee8021BridgeEvbCAPAssociateSBPPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 7), IEEE8021BridgePortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPAssociateSBPPort.setStatus('current')
ieee8021BridgeEvbCAPLldpAdminEnables = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 8), Bits().clone(namedValues=NamedValues(("evbTLVEnable", 0), ("autoEvbLLDPTLV", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPLldpAdminEnables.setStatus('current')
ieee8021BridgeEvbCAPLldpAdminCap = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 9), IEEE8021BridgeEvbTLVTC()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPLldpAdminCap.setStatus('current')
ieee8021BridgeEvbCAPLldpOperMode = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 10), IEEE8021BridgeEvbTLVTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPLldpOperMode.setStatus('current')
ieee8021BridgeEvbCAPEcpAdminAckTimerInit = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 11), TimeInterval()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPEcpAdminAckTimerInit.setStatus('current')
ieee8021BridgeEvbCAPEcpOperAckTimerInit = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 12), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPEcpOperAckTimerInit.setStatus('current')
ieee8021BridgeEvbCAPEcpAdminMaxTries = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPEcpAdminMaxTries.setStatus('current')
ieee8021BridgeEvbCAPEcpOperMaxRetries = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPEcpOperMaxRetries.setStatus('current')
ieee8021BridgeEvbCAPEcpTxFrameCount = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPEcpTxFrameCount.setStatus('current')
ieee8021BridgeEvbCAPEcpTxRetryCount = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPEcpTxRetryCount.setStatus('current')
ieee8021BridgeEvbCAPEcpTxFailures = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPEcpTxFailures.setStatus('current')
ieee8021BridgeEvbCAPEcpRxFrameCount = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPEcpRxFrameCount.setStatus('current')
ieee8021BridgeEvbCAPVdpOperRsrcWaitDelay = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 19), TimeInterval()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPVdpOperRsrcWaitDelay.setStatus('current')
ieee8021BridgeEvbCAPVdpOperRespWaitDelay = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 20), TimeInterval()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPVdpOperRespWaitDelay.setStatus('current')
ieee8021BridgeEvbCAPVdpOperReinitKeepAlive = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 21), TimeInterval()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPVdpOperReinitKeepAlive.setStatus('current')
ieee8021BridgeEvbCAPVdpOperToutKeepAlive = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 22), TimeInterval()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPVdpOperToutKeepAlive.setStatus('current')
ieee8021BridgeEvbCAPRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 100, 1, 4, 2, 1, 23), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPRowStatus.setStatus('current')
ieee8021BridgeEvbGroups = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 100, 2, 1))
ieee8021BridgeEvbCompliances = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 100, 2, 2))
ieee8021BridgeEvbConfigGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 100, 2, 1, 1)).setObjects(("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbSysMACAddress"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbSysName"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbSysType"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbSysNumExternalPorts"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbSysEvbLldpEnables"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbSysEvbLldpDfltMode"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbSysEvbLldpNumVsisSup"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbSysNumCorErComps"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbSysNumSComps"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbECPACkTimer"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbECPMaxRetires"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbSysVdpDfltRsrcWaitDelay"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbSysVdpDfltReinitKeepAlive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbConfigGroup = ieee8021BridgeEvbConfigGroup.setStatus('current')
ieee8021BridgeEvbPhyPortGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 100, 2, 1, 2)).setObjects(("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPhyPortMacAddress"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPhyPortTypeCap"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPhyPortType"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPhyPortToComponentId"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPhyPortToInternalPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbPhyPortGroup = ieee8021BridgeEvbPhyPortGroup.setStatus('current')
ieee8021BridgeEvbPortGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 100, 2, 1, 3)).setObjects(("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPortType"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPortRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbPortGroup = ieee8021BridgeEvbPortGroup.setStatus('current')
ieee8021BridgeEvbVSIDBGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 100, 2, 1, 4)).setObjects(("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVSIComponentID"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVSIPortNumber"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVSITimeSinceCreate"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVsiVdpOperCmd"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVsiOperRevert"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVsiOperHard"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVsiOperReason"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVSIMgrID"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVSIType"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVSITypeVersion"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVSIMvFormat"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVSINumMACs"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVDPMachineState"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVDPCommandsSucceeded"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVDPCommandsFailed"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVDPCommandReverts"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVSIVlanId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbVSIDBGroup = ieee8021BridgeEvbVSIDBGroup.setStatus('current')
ieee8021BridgeEvbUAPGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 100, 2, 1, 5)).setObjects(("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbUAPComponentId"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbUAPPort"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbUAPSchCdcpAdminEnable"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbUAPSchAdminCDCPRole"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbUAPSchAdminCDCPChanCap"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbUAPSchOperCDCPChanCap"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolLow"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolHigh"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbUAPSchOperState"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbSchCdcpRemoteEnabled"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbSchCdcpRemoteRole"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbUAPConfigRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbUAPGroup = ieee8021BridgeEvbUAPGroup.setStatus('current')
ieee8021BridgeEvbCAPConfigGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 100, 2, 1, 6)).setObjects(("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPComponentId"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPPort"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPSChannelID"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPAssociateSBPCompID"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPAssociateSBPPort"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPLldpAdminEnables"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPLldpAdminCap"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPLldpOperMode"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPEcpAdminAckTimerInit"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPEcpOperAckTimerInit"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPEcpAdminMaxTries"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPEcpOperMaxRetries"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPEcpTxFrameCount"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPEcpTxRetryCount"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPEcpTxFailures"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPEcpRxFrameCount"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPVdpOperRsrcWaitDelay"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPVdpOperReinitKeepAlive"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbCAPConfigGroup = ieee8021BridgeEvbCAPConfigGroup.setStatus('current')
ieee8021BridgeEvbbCAPConfigGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 100, 2, 1, 7)).setObjects(("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPVdpOperToutKeepAlive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbbCAPConfigGroup = ieee8021BridgeEvbbCAPConfigGroup.setStatus('current')
ieee8021BridgeEvbsCAPConfigGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 100, 2, 1, 8)).setObjects(("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPVdpOperRespWaitDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbsCAPConfigGroup = ieee8021BridgeEvbsCAPConfigGroup.setStatus('current')
ieee8021BridgeEvbbCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 100, 2, 2, 1)).setObjects(("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbConfigGroup"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPhyPortGroup"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPortGroup"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVSIDBGroup"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbUAPGroup"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPConfigGroup"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbbCAPConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbbCompliance = ieee8021BridgeEvbbCompliance.setStatus('current')
ieee8021BridgeEvbsCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 100, 2, 2, 2)).setObjects(("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbConfigGroup"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPhyPortGroup"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbPortGroup"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbVSIDBGroup"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbUAPGroup"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbCAPConfigGroup"), ("IEEE8021-EVBB-MIB", "ieee8021BridgeEvbsCAPConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbsCompliance = ieee8021BridgeEvbsCompliance.setStatus('current')
mibBuilder.exportSymbols("IEEE8021-EVBB-MIB", ieee8021BridgeEvbCAPSChannelID=ieee8021BridgeEvbCAPSChannelID, ieee8021BridgeEvbbCompliance=ieee8021BridgeEvbbCompliance, ieee8021BridgeEvbVSIPortNumber=ieee8021BridgeEvbVSIPortNumber, ieee8021BridgeEvbVDPCommandsFailed=ieee8021BridgeEvbVDPCommandsFailed, ieee8021BridgeEvbSysNumCorErComps=ieee8021BridgeEvbSysNumCorErComps, ieee8021BridgeEvbCAPVdpOperReinitKeepAlive=ieee8021BridgeEvbCAPVdpOperReinitKeepAlive, ieee8021BridgeEvbCAPVdpOperRespWaitDelay=ieee8021BridgeEvbCAPVdpOperRespWaitDelay, ieee8021BridgeEvbPhyPortToComponentId=ieee8021BridgeEvbPhyPortToComponentId, ieee8021BridgeEvbCAPConfigGroup=ieee8021BridgeEvbCAPConfigGroup, ieee8021BridgeEvbVSIDBMacEntry=ieee8021BridgeEvbVSIDBMacEntry, ieee8021BridgeEvbGroups=ieee8021BridgeEvbGroups, ieee8021BridgeEvbECPACkTimer=ieee8021BridgeEvbECPACkTimer, ieee8021BridgeEvbVSIVlanId=ieee8021BridgeEvbVSIVlanId, ieee8021BridgeEvbCAPConfigTable=ieee8021BridgeEvbCAPConfigTable, ieee8021BridgeEvbUAPComponentId=ieee8021BridgeEvbUAPComponentId, ieee8021BridgeEvbSysType=ieee8021BridgeEvbSysType, ieee8021BridgeEvbVSITypeVersion=ieee8021BridgeEvbVSITypeVersion, ieee8021BridgeEvbSchCdcpRemoteRole=ieee8021BridgeEvbSchCdcpRemoteRole, ieee8021BridgeEvbCompliances=ieee8021BridgeEvbCompliances, ieee8021BridgeEvbUAPConfigRowStatus=ieee8021BridgeEvbUAPConfigRowStatus, ieee8021BridgeEvbVSIID=ieee8021BridgeEvbVSIID, ieee8021BridgeEvbECPMaxRetires=ieee8021BridgeEvbECPMaxRetires, ieee8021BridgeEvbPortTable=ieee8021BridgeEvbPortTable, ieee8021BridgeEvbSysMACAddress=ieee8021BridgeEvbSysMACAddress, ieee8021BridgeEvbGroupID=ieee8021BridgeEvbGroupID, ieee8021BridgeEvbConfig=ieee8021BridgeEvbConfig, ieee8021BridgeEvbUAPSchAdminCDCPChanCap=ieee8021BridgeEvbUAPSchAdminCDCPChanCap, ieee8021BridgeEvbVDPCommandReverts=ieee8021BridgeEvbVDPCommandReverts, ieee8021BridgeEvbbCAPConfigGroup=ieee8021BridgeEvbbCAPConfigGroup, ieee8021BridgeEvbPhyPortTable=ieee8021BridgeEvbPhyPortTable, ieee8021BridgeEvbSysVdpDfltRsrcWaitDelay=ieee8021BridgeEvbSysVdpDfltRsrcWaitDelay, ieee8021BridgeEvbUAPSchOperCDCPChanCap=ieee8021BridgeEvbUAPSchOperCDCPChanCap, ieee8021BridgeEvbPhyPort=ieee8021BridgeEvbPhyPort, ieee8021BridgeEvbVDPCommandsSucceeded=ieee8021BridgeEvbVDPCommandsSucceeded, ieee8021BridgeEvbPhyPortType=ieee8021BridgeEvbPhyPortType, ieee8021BridgeEvbVDPMachineState=ieee8021BridgeEvbVDPMachineState, ieee8021BridgeEvbUAPSchCdcpAdminEnable=ieee8021BridgeEvbUAPSchCdcpAdminEnable, IEEE8021BridgeEvbTLVTC=IEEE8021BridgeEvbTLVTC, ieee8021BridgeEvbCAPLldpAdminEnables=ieee8021BridgeEvbCAPLldpAdminEnables, ieee8021BridgeEvbVSIDBObjects=ieee8021BridgeEvbVSIDBObjects, ieee8021BridgeEvbCAPRowStatus=ieee8021BridgeEvbCAPRowStatus, ieee8021BridgeEvbCAPVdpOperRsrcWaitDelay=ieee8021BridgeEvbCAPVdpOperRsrcWaitDelay, ieee8021BridgeEvbVSIDBGroup=ieee8021BridgeEvbVSIDBGroup, ieee8021BridgeEvbSysEvbLldpEnables=ieee8021BridgeEvbSysEvbLldpEnables, ieee8021BridgeEvbVSIDBEntry=ieee8021BridgeEvbVSIDBEntry, ieee8021BridgeEvbUAPGroup=ieee8021BridgeEvbUAPGroup, ieee8021BridgeEvbPort=ieee8021BridgeEvbPort, ieee8021BridgeEvbVSIDBTable=ieee8021BridgeEvbVSIDBTable, ieee8021BridgeEvbPhyPortMacAddress=ieee8021BridgeEvbPhyPortMacAddress, ieee8021BridgeEvbVSIDBMacTable=ieee8021BridgeEvbVSIDBMacTable, ieee8021BridgeEvbCAPEcpTxRetryCount=ieee8021BridgeEvbCAPEcpTxRetryCount, ieee8021BridgeEvbCAPVdpOperToutKeepAlive=ieee8021BridgeEvbCAPVdpOperToutKeepAlive, ieee8021BridgeEvbVSIType=ieee8021BridgeEvbVSIType, ieee8021BridgeEvbUAPPort=ieee8021BridgeEvbUAPPort, ieee8021BridgeEvbPortRowStatus=ieee8021BridgeEvbPortRowStatus, ieee8021BridgeEvbUAPSchAdminCDCPRole=ieee8021BridgeEvbUAPSchAdminCDCPRole, ieee8021BridgeEvbPortComponentId=ieee8021BridgeEvbPortComponentId, ieee8021BridgeEvbPhyPortEntry=ieee8021BridgeEvbPhyPortEntry, ieee8021BridgeEvbsCAPConfigGroup=ieee8021BridgeEvbsCAPConfigGroup, ieee8021BridgeEvbVsiVdpOperCmd=ieee8021BridgeEvbVsiVdpOperCmd, ieee8021BridgeEvbVsiOperHard=ieee8021BridgeEvbVsiOperHard, ieee8021BridgeEvbPhyPortTypeCap=ieee8021BridgeEvbPhyPortTypeCap, ieee8021BridgeEvbSysNumExternalPorts=ieee8021BridgeEvbSysNumExternalPorts, ieee8021BridgeEvbPortGroup=ieee8021BridgeEvbPortGroup, ieee8021BridgeEvbPhyPortToInternalPort=ieee8021BridgeEvbPhyPortToInternalPort, ieee8021BridgeEvbSysEvbLldpDfltMode=ieee8021BridgeEvbSysEvbLldpDfltMode, ieee8021BridgeEvbCAPEcpAdminAckTimerInit=ieee8021BridgeEvbCAPEcpAdminAckTimerInit, ieee8021BridgeEvbVSINumMACs=ieee8021BridgeEvbVSINumMACs, ieee8021BridgeEvbCAPEcpOperMaxRetries=ieee8021BridgeEvbCAPEcpOperMaxRetries, ieee8021BridgeEvbSysName=ieee8021BridgeEvbSysName, ieee8021BridgeEvbVSIMac=ieee8021BridgeEvbVSIMac, ieee8021BridgeEvbCAPComponentId=ieee8021BridgeEvbCAPComponentId, ieee8021BridgeEvbCAPPort=ieee8021BridgeEvbCAPPort, ieee8021BridgeEvbSysVdpDfltReinitKeepAlive=ieee8021BridgeEvbSysVdpDfltReinitKeepAlive, ieee8021BridgeEvbCAPLldpOperMode=ieee8021BridgeEvbCAPLldpOperMode, ieee8021BridgeEvbVSIMvFormat=ieee8021BridgeEvbVSIMvFormat, ieee8021BridgeEvbCAPEcpRxFrameCount=ieee8021BridgeEvbCAPEcpRxFrameCount, ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolHigh=ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolHigh, ieee8021BridgeEvbVSIComponentID=ieee8021BridgeEvbVSIComponentID, PYSNMP_MODULE_ID=ieee8021BridgeEvbMib, ieee8021BridgeEvbPortType=ieee8021BridgeEvbPortType, ieee8021BridgeEvbConfigGroup=ieee8021BridgeEvbConfigGroup, ieee8021BridgeEvbCAPLldpAdminCap=ieee8021BridgeEvbCAPLldpAdminCap, ieee8021BridgeEvbSysNumSComps=ieee8021BridgeEvbSysNumSComps, ieee8021BridgeEvbVsiSvid=ieee8021BridgeEvbVsiSvid, ieee8021BridgeEvbVsiOperReason=ieee8021BridgeEvbVsiOperReason, ieee8021BridgeEvbMib=ieee8021BridgeEvbMib, ieee8021BridgeEvbCAPAssociateSBPPort=ieee8021BridgeEvbCAPAssociateSBPPort, ieee8021BridgeEvbUAPConfigEntry=ieee8021BridgeEvbUAPConfigEntry, ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolLow=ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolLow, ieee8021BridgeEvbCAPEcpTxFailures=ieee8021BridgeEvbCAPEcpTxFailures, ieee8021BridgeEvbUAPSchOperState=ieee8021BridgeEvbUAPSchOperState, ieee8021BridgeEvbSchCdcpRemoteEnabled=ieee8021BridgeEvbSchCdcpRemoteEnabled, ieee8021BridgeEvbSChannelObjects=ieee8021BridgeEvbSChannelObjects, ieee8021BridgeEvbCAPAssociateSBPCompID=ieee8021BridgeEvbCAPAssociateSBPCompID, ieee8021BridgeEvbConformance=ieee8021BridgeEvbConformance, ieee8021BridgeEvbNotifications=ieee8021BridgeEvbNotifications, ieee8021BridgeEvbsCompliance=ieee8021BridgeEvbsCompliance, ieee8021BridgeEvbUAPConfigTable=ieee8021BridgeEvbUAPConfigTable, ieee8021BridgeEvbPhyPortGroup=ieee8021BridgeEvbPhyPortGroup, ieee8021BridgeEvbCAPEcpOperAckTimerInit=ieee8021BridgeEvbCAPEcpOperAckTimerInit, ieee8021BridgeEvbCAPConfigEntry=ieee8021BridgeEvbCAPConfigEntry, ieee8021BridgeEvbVSITimeSinceCreate=ieee8021BridgeEvbVSITimeSinceCreate, ieee8021BridgeEvbSysEvbLldpNumVsisSup=ieee8021BridgeEvbSysEvbLldpNumVsisSup, ieee8021BridgeEvbObjects=ieee8021BridgeEvbObjects, ieee8021BridgeEvbVsiOperRevert=ieee8021BridgeEvbVsiOperRevert, ieee8021BridgeEvbCAPEcpAdminMaxTries=ieee8021BridgeEvbCAPEcpAdminMaxTries, ieee8021BridgeEvbCAPEcpTxFrameCount=ieee8021BridgeEvbCAPEcpTxFrameCount, ieee8021BridgeEvbVSIMgrID=ieee8021BridgeEvbVSIMgrID, ieee8021BridgeEvbPortEntry=ieee8021BridgeEvbPortEntry)
