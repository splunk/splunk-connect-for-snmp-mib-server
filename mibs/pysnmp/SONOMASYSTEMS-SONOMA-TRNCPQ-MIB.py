#
# PySNMP MIB module SONOMASYSTEMS-SONOMA-TRNCPQ-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONOMASYSTEMS-SONOMA-TRNCPQ-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:01:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Integer32, ObjectIdentity, Counter32, ModuleIdentity, iso, Gauge32, MibIdentifier, Unsigned32, IpAddress, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Integer32", "ObjectIdentity", "Counter32", "ModuleIdentity", "iso", "Gauge32", "MibIdentifier", "Unsigned32", "IpAddress", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
sonomaLAN, = mibBuilder.importSymbols("SONOMASYSTEMS-SONOMA-MIB", "sonomaLAN")
class PhysAddress(OctetString):
    pass

sonomaTokenRing = MibIdentifier((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2))
tokenRingAdapterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1))
trnCpqGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1))
trnCpqAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 1), )
if mibBuilder.loadTexts: trnCpqAdapterTable.setStatus('mandatory')
trnCpqAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 1, 1), ).setIndexNames((0, "SONOMASYSTEMS-SONOMA-TRNCPQ-MIB", "trnCpqAdapterIndex"))
if mibBuilder.loadTexts: trnCpqAdapterEntry.setStatus('mandatory')
trnCpqAdapterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqAdapterIndex.setStatus('mandatory')
trnCpqAdapterCheckState = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("noErrors", 1), ("adapterParity", 2), ("illegalOpCode", 3), ("arithmeticFault", 4), ("illegalMAC", 5), ("dioParity", 6), ("dmaParity", 7), ("dmaBus", 8), ("dmaTimeout", 9), ("unknown", 10), ("invalidXOP", 11), ("invalidINTR", 12), ("registerParity", 13), ("ramFailure", 14), ("phtxHalt", 15), ("phtxRun", 16), ("adapterOutput", 17), ("adapterProcessComplete", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqAdapterCheckState.setStatus('mandatory')
trnCpqAdapterOpenInWrapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trnCpqAdapterOpenInWrapMode.setStatus('mandatory')
trnCpqAdapterEarlyTokenRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trnCpqAdapterEarlyTokenRelease.setStatus('mandatory')
trnCpqAdapterGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 1, 1, 5), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trnCpqAdapterGroupAddress.setStatus('mandatory')
trnCpqRingSpeedDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("manual", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trnCpqRingSpeedDetect.setStatus('mandatory')
trnCpqMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 17952))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trnCpqMtu.setStatus('mandatory')
trnCpqAdapterCheckStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 2), )
if mibBuilder.loadTexts: trnCpqAdapterCheckStatsTable.setStatus('mandatory')
trnCpqAdapterCheckStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 2, 1), ).setIndexNames((0, "SONOMASYSTEMS-SONOMA-TRNCPQ-MIB", "trnCpqAdapterCheckStatsIndex"))
if mibBuilder.loadTexts: trnCpqAdapterCheckStatsEntry.setStatus('mandatory')
trnCpqAdapterCheckStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqAdapterCheckStatsIndex.setStatus('mandatory')
trnCpqAdapParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqAdapParityErrors.setStatus('mandatory')
trnCpqIllOpCodeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqIllOpCodeErrors.setStatus('mandatory')
trnCpqArithFaultErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqArithFaultErrors.setStatus('mandatory')
trnCpqIllMemErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqIllMemErrors.setStatus('mandatory')
trnCpqDIOParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqDIOParityErrors.setStatus('mandatory')
trnCpqDMAParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqDMAParityErrors.setStatus('mandatory')
trnCpqDMABusErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqDMABusErrors.setStatus('mandatory')
trnCpqDMATimeoutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqDMATimeoutErrors.setStatus('mandatory')
trnCpqInvIntrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqInvIntrErrors.setStatus('mandatory')
trnCpqInvXOPErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqInvXOPErrors.setStatus('mandatory')
trnCpqRegParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqRegParityErrors.setStatus('mandatory')
trnCpqRAMFailErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqRAMFailErrors.setStatus('mandatory')
trnCpqPHTxHaltErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqPHTxHaltErrors.setStatus('mandatory')
trnCpqPHTxRunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqPHTxRunErrors.setStatus('mandatory')
trnCpqBUDStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 3), )
if mibBuilder.loadTexts: trnCpqBUDStatsTable.setStatus('mandatory')
trnCpqBUDStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 3, 1), ).setIndexNames((0, "SONOMASYSTEMS-SONOMA-TRNCPQ-MIB", "trnCpqBUDStatsIndex"))
if mibBuilder.loadTexts: trnCpqBUDStatsEntry.setStatus('mandatory')
trnCpqBUDStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqBUDStatsIndex.setStatus('mandatory')
trnCpqInitialTestErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqInitialTestErrors.setStatus('mandatory')
trnCpqChecksumErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqChecksumErrors.setStatus('mandatory')
trnCpqAdapterRAMErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqAdapterRAMErrors.setStatus('mandatory')
trnCpqInstructionTestErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqInstructionTestErrors.setStatus('mandatory')
trnCpqCtxtorIntrTestErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqCtxtorIntrTestErrors.setStatus('mandatory')
trnCpqProtocolHandlerHWErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqProtocolHandlerHWErrors.setStatus('mandatory')
trnCpqSystemInterfaceRegErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqSystemInterfaceRegErrors.setStatus('mandatory')
trnCpqInitStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 4), )
if mibBuilder.loadTexts: trnCpqInitStatsTable.setStatus('mandatory')
trnCpqInitStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 4, 1), ).setIndexNames((0, "SONOMASYSTEMS-SONOMA-TRNCPQ-MIB", "trnCpqInitStatsIndex"))
if mibBuilder.loadTexts: trnCpqInitStatsEntry.setStatus('mandatory')
trnCpqInitStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqInitStatsIndex.setStatus('mandatory')
trnCpqInvInitBlocksErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqInvInitBlocksErrors.setStatus('mandatory')
trnCpqInvInitOptionsErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqInvInitOptionsErrors.setStatus('mandatory')
trnCpqNoResourcesErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqNoResourcesErrors.setStatus('mandatory')
trnCpqInitAddressErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqInitAddressErrors.setStatus('mandatory')
trnCpqInitDIOParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqInitDIOParityErrors.setStatus('mandatory')
trnCpqInitDMAParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqInitDMAParityErrors.setStatus('mandatory')
trnCpqInitDMABusErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqInitDMABusErrors.setStatus('mandatory')
trnCpqInitDMATimeoutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqInitDMATimeoutErrors.setStatus('mandatory')
trnCpqInitDMADataErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqInitDMADataErrors.setStatus('mandatory')
trnCpqAdapterCheckErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqAdapterCheckErrors.setStatus('mandatory')
trnCpqMiscStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 5), )
if mibBuilder.loadTexts: trnCpqMiscStatsTable.setStatus('mandatory')
trnCpqMiscStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 5, 1), ).setIndexNames((0, "SONOMASYSTEMS-SONOMA-TRNCPQ-MIB", "trnCpqMiscStatsIndex"))
if mibBuilder.loadTexts: trnCpqMiscStatsEntry.setStatus('mandatory')
trnCpqMiscStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqMiscStatsIndex.setStatus('mandatory')
trnCpqCounterOverflowErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqCounterOverflowErrors.setStatus('mandatory')
trnCpqAutoRemovalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqAutoRemovalErrors.setStatus('mandatory')
trnCpqFrameBigErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqFrameBigErrors.setStatus('mandatory')
trnCpqNoHostBufErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqNoHostBufErrors.setStatus('mandatory')
trnCpqAddressErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqAddressErrors.setStatus('mandatory')
trnCpqAdapNotInsertedErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqAdapNotInsertedErrors.setStatus('mandatory')
trnCpqMiscRcvErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqMiscRcvErrors.setStatus('mandatory')
trnCpqNoOfLinkResets = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqNoOfLinkResets.setStatus('mandatory')
trnCpqLastLinkResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noReason", 1), ("management", 2), ("deviceError", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqLastLinkResetReason.setStatus('mandatory')
trnCpqTimeSinceLastLinkReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 2, 1, 1, 5, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trnCpqTimeSinceLastLinkReset.setStatus('mandatory')
mibBuilder.exportSymbols("SONOMASYSTEMS-SONOMA-TRNCPQ-MIB", trnCpqBUDStatsIndex=trnCpqBUDStatsIndex, trnCpqAdapterGroupAddress=trnCpqAdapterGroupAddress, trnCpqRegParityErrors=trnCpqRegParityErrors, trnCpqAdapterEarlyTokenRelease=trnCpqAdapterEarlyTokenRelease, PhysAddress=PhysAddress, trnCpqRingSpeedDetect=trnCpqRingSpeedDetect, trnCpqAdapterCheckStatsIndex=trnCpqAdapterCheckStatsIndex, trnCpqBUDStatsTable=trnCpqBUDStatsTable, trnCpqInstructionTestErrors=trnCpqInstructionTestErrors, trnCpqCtxtorIntrTestErrors=trnCpqCtxtorIntrTestErrors, trnCpqIllOpCodeErrors=trnCpqIllOpCodeErrors, trnCpqAdapterRAMErrors=trnCpqAdapterRAMErrors, trnCpqAutoRemovalErrors=trnCpqAutoRemovalErrors, trnCpqTimeSinceLastLinkReset=trnCpqTimeSinceLastLinkReset, trnCpqAdapterIndex=trnCpqAdapterIndex, trnCpqProtocolHandlerHWErrors=trnCpqProtocolHandlerHWErrors, trnCpqPHTxHaltErrors=trnCpqPHTxHaltErrors, trnCpqMtu=trnCpqMtu, trnCpqMiscStatsIndex=trnCpqMiscStatsIndex, tokenRingAdapterGroup=tokenRingAdapterGroup, trnCpqInvIntrErrors=trnCpqInvIntrErrors, trnCpqBUDStatsEntry=trnCpqBUDStatsEntry, trnCpqAdapNotInsertedErrors=trnCpqAdapNotInsertedErrors, trnCpqAdapterOpenInWrapMode=trnCpqAdapterOpenInWrapMode, trnCpqAdapterCheckStatsEntry=trnCpqAdapterCheckStatsEntry, trnCpqArithFaultErrors=trnCpqArithFaultErrors, trnCpqAdapterCheckErrors=trnCpqAdapterCheckErrors, trnCpqNoOfLinkResets=trnCpqNoOfLinkResets, trnCpqInitDMATimeoutErrors=trnCpqInitDMATimeoutErrors, trnCpqInvXOPErrors=trnCpqInvXOPErrors, trnCpqInitStatsTable=trnCpqInitStatsTable, trnCpqInitStatsIndex=trnCpqInitStatsIndex, trnCpqDIOParityErrors=trnCpqDIOParityErrors, trnCpqInitDMADataErrors=trnCpqInitDMADataErrors, trnCpqFrameBigErrors=trnCpqFrameBigErrors, trnCpqGroup=trnCpqGroup, trnCpqAdapterCheckStatsTable=trnCpqAdapterCheckStatsTable, trnCpqChecksumErrors=trnCpqChecksumErrors, trnCpqInvInitBlocksErrors=trnCpqInvInitBlocksErrors, trnCpqInvInitOptionsErrors=trnCpqInvInitOptionsErrors, trnCpqInitAddressErrors=trnCpqInitAddressErrors, trnCpqInitStatsEntry=trnCpqInitStatsEntry, trnCpqAdapParityErrors=trnCpqAdapParityErrors, trnCpqAdapterEntry=trnCpqAdapterEntry, trnCpqMiscStatsTable=trnCpqMiscStatsTable, trnCpqCounterOverflowErrors=trnCpqCounterOverflowErrors, trnCpqLastLinkResetReason=trnCpqLastLinkResetReason, trnCpqPHTxRunErrors=trnCpqPHTxRunErrors, trnCpqIllMemErrors=trnCpqIllMemErrors, trnCpqDMATimeoutErrors=trnCpqDMATimeoutErrors, trnCpqInitialTestErrors=trnCpqInitialTestErrors, sonomaTokenRing=sonomaTokenRing, trnCpqInitDMAParityErrors=trnCpqInitDMAParityErrors, trnCpqRAMFailErrors=trnCpqRAMFailErrors, trnCpqSystemInterfaceRegErrors=trnCpqSystemInterfaceRegErrors, trnCpqInitDMABusErrors=trnCpqInitDMABusErrors, trnCpqNoHostBufErrors=trnCpqNoHostBufErrors, trnCpqDMAParityErrors=trnCpqDMAParityErrors, trnCpqInitDIOParityErrors=trnCpqInitDIOParityErrors, trnCpqAddressErrors=trnCpqAddressErrors, trnCpqAdapterTable=trnCpqAdapterTable, trnCpqAdapterCheckState=trnCpqAdapterCheckState, trnCpqDMABusErrors=trnCpqDMABusErrors, trnCpqMiscStatsEntry=trnCpqMiscStatsEntry, trnCpqMiscRcvErrors=trnCpqMiscRcvErrors, trnCpqNoResourcesErrors=trnCpqNoResourcesErrors)
