#
# PySNMP MIB module ALCATEL-IND1-IPX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-IPX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:02:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
routingIND1Ipx, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "routingIND1Ipx")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ModuleIdentity, TimeTicks, Integer32, iso, Counter32, NotificationType, IpAddress, MibIdentifier, Unsigned32, ObjectIdentity, Bits, Counter64, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "Integer32", "iso", "Counter32", "NotificationType", "IpAddress", "MibIdentifier", "Unsigned32", "ObjectIdentity", "Bits", "Counter64", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
alcatelIND1IPXMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1))
alcatelIND1IPXMIB.setRevisions(('2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1IPXMIB.setLastUpdated('200704030000Z')
if mibBuilder.loadTexts: alcatelIND1IPXMIB.setOrganization('Alcatel-Lucent')
alcatelIND1IPXMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1))
class NetNumber(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

class HostAddress(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

alaIpxRoutingGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1))
if mibBuilder.loadTexts: alaIpxRoutingGroup.setStatus('current')
alaIpxFilterGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2))
if mibBuilder.loadTexts: alaIpxFilterGroup.setStatus('current')
alaIpxTimerGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 3))
if mibBuilder.loadTexts: alaIpxTimerGroup.setStatus('current')
alaIpxStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 1), )
if mibBuilder.loadTexts: alaIpxStaticRouteTable.setStatus('current')
alaIpxStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IPX-MIB", "alaIpxStaticRouteNetNum"))
if mibBuilder.loadTexts: alaIpxStaticRouteEntry.setStatus('current')
alaIpxStaticRouteNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 1, 1, 1), NetNumber().clone(hexValue="00000000"))
if mibBuilder.loadTexts: alaIpxStaticRouteNetNum.setStatus('current')
alaIpxStaticRouteNextHopNet = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 1, 1, 2), NetNumber().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxStaticRouteNextHopNet.setStatus('current')
alaIpxStaticRouteNextHopNode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 1, 1, 3), HostAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxStaticRouteNextHopNode.setStatus('current')
alaIpxStaticRouteTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxStaticRouteTicks.setStatus('current')
alaIpxStaticRouteHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxStaticRouteHopCount.setStatus('current')
alaIpxStaticRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxStaticRouteRowStatus.setStatus('current')
alaIpxDefRouteTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 2), )
if mibBuilder.loadTexts: alaIpxDefRouteTable.setStatus('current')
alaIpxDefRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-IPX-MIB", "alaIpxDefRouteVlanId"))
if mibBuilder.loadTexts: alaIpxDefRouteEntry.setStatus('current')
alaIpxDefRouteVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaIpxDefRouteVlanId.setStatus('current')
alaIpxDefRouteNet = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 2, 1, 2), NetNumber().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxDefRouteNet.setStatus('current')
alaIpxDefRouteNode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 2, 1, 3), HostAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxDefRouteNode.setStatus('current')
alaIpxDefRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxDefRouteRowStatus.setStatus('current')
alaIpxExtMsgTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 3), )
if mibBuilder.loadTexts: alaIpxExtMsgTable.setStatus('current')
alaIpxExtMsgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-IPX-MIB", "alaIpxExtMsgVlanId"))
if mibBuilder.loadTexts: alaIpxExtMsgEntry.setStatus('current')
alaIpxExtMsgVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaIpxExtMsgVlanId.setStatus('current')
alaIpxExtMsgMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxExtMsgMode.setStatus('current')
alaIpxExtMsgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxExtMsgRowStatus.setStatus('current')
alaIpxFlush = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rip", 1), ("sap", 2), ("both", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpxFlush.setStatus('current')
alaIpxRipSapFilterTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 1), )
if mibBuilder.loadTexts: alaIpxRipSapFilterTable.setStatus('current')
alaIpxRipSapFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IPX-MIB", "alaIpxRipSapFilterVlanId"), (0, "ALCATEL-IND1-IPX-MIB", "alaIpxRipSapFilterType"), (0, "ALCATEL-IND1-IPX-MIB", "alaIpxRipSapFilterNet"), (0, "ALCATEL-IND1-IPX-MIB", "alaIpxRipSapFilterNetMask"), (0, "ALCATEL-IND1-IPX-MIB", "alaIpxRipSapFilterNode"), (0, "ALCATEL-IND1-IPX-MIB", "alaIpxRipSapFilterNodeMask"), (0, "ALCATEL-IND1-IPX-MIB", "alaIpxRipSapFilterSvcType"))
if mibBuilder.loadTexts: alaIpxRipSapFilterEntry.setStatus('current')
alaIpxRipSapFilterVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaIpxRipSapFilterVlanId.setStatus('current')
alaIpxRipSapFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("sapOutput", 1), ("sapInput", 2), ("gnsOutput", 3), ("ripOutput", 4), ("ripInput", 5))).clone(1))
if mibBuilder.loadTexts: alaIpxRipSapFilterType.setStatus('current')
alaIpxRipSapFilterNet = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 1, 1, 3), NetNumber().clone(hexValue="00000000"))
if mibBuilder.loadTexts: alaIpxRipSapFilterNet.setStatus('current')
alaIpxRipSapFilterNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 1, 1, 4), NetNumber().clone(hexValue="ffffffff"))
if mibBuilder.loadTexts: alaIpxRipSapFilterNetMask.setStatus('current')
alaIpxRipSapFilterNode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 1, 1, 5), HostAddress().clone(hexValue="000000000000"))
if mibBuilder.loadTexts: alaIpxRipSapFilterNode.setStatus('current')
alaIpxRipSapFilterNodeMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 1, 1, 6), HostAddress().clone(hexValue="ffffffffffff"))
if mibBuilder.loadTexts: alaIpxRipSapFilterNodeMask.setStatus('current')
alaIpxRipSapFilterSvcType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535))
if mibBuilder.loadTexts: alaIpxRipSapFilterSvcType.setStatus('current')
alaIpxRipSapFilterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("block", 2))).clone('allow')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxRipSapFilterMode.setStatus('current')
alaIpxRipSapFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxRipSapFilterRowStatus.setStatus('current')
alaIpxWatchdogSpoofTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 2), )
if mibBuilder.loadTexts: alaIpxWatchdogSpoofTable.setStatus('current')
alaIpxWatchdogSpoofEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-IPX-MIB", "alaIpxWatchdogSpoofVlanId"))
if mibBuilder.loadTexts: alaIpxWatchdogSpoofEntry.setStatus('current')
alaIpxWatchdogSpoofVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaIpxWatchdogSpoofVlanId.setStatus('current')
alaIpxWatchdogSpoofMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxWatchdogSpoofMode.setStatus('current')
alaIpxWatchdogSpoofRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxWatchdogSpoofRowStatus.setStatus('current')
alaIpxSerialFilterTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 3), )
if mibBuilder.loadTexts: alaIpxSerialFilterTable.setStatus('current')
alaIpxSerialFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-IPX-MIB", "alaIpxSerialFilterVlanId"))
if mibBuilder.loadTexts: alaIpxSerialFilterEntry.setStatus('current')
alaIpxSerialFilterVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaIpxSerialFilterVlanId.setStatus('current')
alaIpxSerialFilterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxSerialFilterMode.setStatus('current')
alaIpxSerialFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxSerialFilterRowStatus.setStatus('current')
alaSpxKeepaliveSpoofTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 4), )
if mibBuilder.loadTexts: alaSpxKeepaliveSpoofTable.setStatus('current')
alaSpxKeepaliveSpoofEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-IPX-MIB", "alaSpxKeepaliveSpoofVlanId"))
if mibBuilder.loadTexts: alaSpxKeepaliveSpoofEntry.setStatus('current')
alaSpxKeepaliveSpoofVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaSpxKeepaliveSpoofVlanId.setStatus('current')
alaSpxKeepaliveSpoofMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaSpxKeepaliveSpoofMode.setStatus('current')
alaSpxKeepaliveSpoofRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaSpxKeepaliveSpoofRowStatus.setStatus('current')
alaIpxType20Table = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 5), )
if mibBuilder.loadTexts: alaIpxType20Table.setStatus('current')
alaIpxType20Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-IPX-MIB", "alaIpxType20VlanId"))
if mibBuilder.loadTexts: alaIpxType20Entry.setStatus('current')
alaIpxType20VlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaIpxType20VlanId.setStatus('current')
alaIpxType20Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxType20Mode.setStatus('current')
alaIpxType20RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 2, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxType20RowStatus.setStatus('current')
alaIpxTimerTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 3, 1), )
if mibBuilder.loadTexts: alaIpxTimerTable.setStatus('current')
alaIpxTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 3, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IPX-MIB", "alaIpxTimerVlanId"))
if mibBuilder.loadTexts: alaIpxTimerEntry.setStatus('current')
alaIpxTimerVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaIpxTimerVlanId.setStatus('current')
alaIpxTimerSap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 180)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxTimerSap.setStatus('current')
alaIpxTimerRip = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 180)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxTimerRip.setStatus('current')
alaIpxTimerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 1, 3, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpxTimerRowStatus.setStatus('current')
alcatelIND1IPXMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 2))
alcatelIND1IPXMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 2, 1))
alcatelIND1IPXMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 2, 2))
alcatelIND1IPXMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-IPX-MIB", "alcatelIND1IPXMIBStaticRouteGroup"), ("ALCATEL-IND1-IPX-MIB", "alcatelIND1IPXMIBDefRouteGroup"), ("ALCATEL-IND1-IPX-MIB", "alcatelIND1IPXMIBExtMsgGroup"), ("ALCATEL-IND1-IPX-MIB", "alcatelIND1IPXMIBFlushGroup"), ("ALCATEL-IND1-IPX-MIB", "alcatelIND1IPXMIBRipSapFilterGroup"), ("ALCATEL-IND1-IPX-MIB", "alcatelIND1IPXMIBWatchdogSpoofGroup"), ("ALCATEL-IND1-IPX-MIB", "alcatelIND1IPXMIBSerialFilterGroup"), ("ALCATEL-IND1-IPX-MIB", "alcatelIND1IPXMIBKeepaliveSpoofGroup"), ("ALCATEL-IND1-IPX-MIB", "alcatelIND1IPXMIBType20Group"), ("ALCATEL-IND1-IPX-MIB", "alcatelIND1IPXMIBTimerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IPXMIBCompliance = alcatelIND1IPXMIBCompliance.setStatus('current')
alcatelIND1IPXMIBStaticRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-IPX-MIB", "alaIpxStaticRouteNextHopNet"), ("ALCATEL-IND1-IPX-MIB", "alaIpxStaticRouteNextHopNode"), ("ALCATEL-IND1-IPX-MIB", "alaIpxStaticRouteTicks"), ("ALCATEL-IND1-IPX-MIB", "alaIpxStaticRouteHopCount"), ("ALCATEL-IND1-IPX-MIB", "alaIpxStaticRouteRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IPXMIBStaticRouteGroup = alcatelIND1IPXMIBStaticRouteGroup.setStatus('current')
alcatelIND1IPXMIBDefRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 2, 2, 2)).setObjects(("ALCATEL-IND1-IPX-MIB", "alaIpxDefRouteNet"), ("ALCATEL-IND1-IPX-MIB", "alaIpxDefRouteNode"), ("ALCATEL-IND1-IPX-MIB", "alaIpxDefRouteRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IPXMIBDefRouteGroup = alcatelIND1IPXMIBDefRouteGroup.setStatus('current')
alcatelIND1IPXMIBExtMsgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 2, 2, 3)).setObjects(("ALCATEL-IND1-IPX-MIB", "alaIpxExtMsgMode"), ("ALCATEL-IND1-IPX-MIB", "alaIpxExtMsgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IPXMIBExtMsgGroup = alcatelIND1IPXMIBExtMsgGroup.setStatus('current')
alcatelIND1IPXMIBFlushGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 2, 2, 4)).setObjects(("ALCATEL-IND1-IPX-MIB", "alaIpxFlush"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IPXMIBFlushGroup = alcatelIND1IPXMIBFlushGroup.setStatus('current')
alcatelIND1IPXMIBRipSapFilterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 2, 2, 5)).setObjects(("ALCATEL-IND1-IPX-MIB", "alaIpxRipSapFilterMode"), ("ALCATEL-IND1-IPX-MIB", "alaIpxRipSapFilterRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IPXMIBRipSapFilterGroup = alcatelIND1IPXMIBRipSapFilterGroup.setStatus('current')
alcatelIND1IPXMIBWatchdogSpoofGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 2, 2, 6)).setObjects(("ALCATEL-IND1-IPX-MIB", "alaIpxWatchdogSpoofMode"), ("ALCATEL-IND1-IPX-MIB", "alaIpxWatchdogSpoofRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IPXMIBWatchdogSpoofGroup = alcatelIND1IPXMIBWatchdogSpoofGroup.setStatus('current')
alcatelIND1IPXMIBSerialFilterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 2, 2, 7)).setObjects(("ALCATEL-IND1-IPX-MIB", "alaIpxSerialFilterMode"), ("ALCATEL-IND1-IPX-MIB", "alaIpxSerialFilterRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IPXMIBSerialFilterGroup = alcatelIND1IPXMIBSerialFilterGroup.setStatus('current')
alcatelIND1IPXMIBKeepaliveSpoofGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 2, 2, 8)).setObjects(("ALCATEL-IND1-IPX-MIB", "alaSpxKeepaliveSpoofMode"), ("ALCATEL-IND1-IPX-MIB", "alaSpxKeepaliveSpoofRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IPXMIBKeepaliveSpoofGroup = alcatelIND1IPXMIBKeepaliveSpoofGroup.setStatus('current')
alcatelIND1IPXMIBType20Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 2, 2, 9)).setObjects(("ALCATEL-IND1-IPX-MIB", "alaIpxType20Mode"), ("ALCATEL-IND1-IPX-MIB", "alaIpxType20RowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IPXMIBType20Group = alcatelIND1IPXMIBType20Group.setStatus('current')
alcatelIND1IPXMIBTimerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 8, 1, 2, 2, 10)).setObjects(("ALCATEL-IND1-IPX-MIB", "alaIpxTimerRip"), ("ALCATEL-IND1-IPX-MIB", "alaIpxTimerSap"), ("ALCATEL-IND1-IPX-MIB", "alaIpxTimerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IPXMIBTimerGroup = alcatelIND1IPXMIBTimerGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-IPX-MIB", alcatelIND1IPXMIBTimerGroup=alcatelIND1IPXMIBTimerGroup, alaIpxRipSapFilterNetMask=alaIpxRipSapFilterNetMask, alcatelIND1IPXMIBConformance=alcatelIND1IPXMIBConformance, alcatelIND1IPXMIBExtMsgGroup=alcatelIND1IPXMIBExtMsgGroup, alcatelIND1IPXMIBCompliances=alcatelIND1IPXMIBCompliances, HostAddress=HostAddress, alaSpxKeepaliveSpoofMode=alaSpxKeepaliveSpoofMode, alaIpxExtMsgEntry=alaIpxExtMsgEntry, alaIpxDefRouteNet=alaIpxDefRouteNet, alaIpxStaticRouteNetNum=alaIpxStaticRouteNetNum, alaIpxType20Table=alaIpxType20Table, alaIpxStaticRouteNextHopNet=alaIpxStaticRouteNextHopNet, alaIpxDefRouteRowStatus=alaIpxDefRouteRowStatus, PYSNMP_MODULE_ID=alcatelIND1IPXMIB, alaSpxKeepaliveSpoofRowStatus=alaSpxKeepaliveSpoofRowStatus, alaIpxStaticRouteTicks=alaIpxStaticRouteTicks, alaIpxTimerVlanId=alaIpxTimerVlanId, alcatelIND1IPXMIBWatchdogSpoofGroup=alcatelIND1IPXMIBWatchdogSpoofGroup, alaIpxTimerRowStatus=alaIpxTimerRowStatus, alaIpxWatchdogSpoofTable=alaIpxWatchdogSpoofTable, alaSpxKeepaliveSpoofVlanId=alaSpxKeepaliveSpoofVlanId, alaIpxRipSapFilterRowStatus=alaIpxRipSapFilterRowStatus, alcatelIND1IPXMIBSerialFilterGroup=alcatelIND1IPXMIBSerialFilterGroup, alcatelIND1IPXMIBStaticRouteGroup=alcatelIND1IPXMIBStaticRouteGroup, alaIpxRipSapFilterNodeMask=alaIpxRipSapFilterNodeMask, alaIpxTimerRip=alaIpxTimerRip, alaIpxTimerSap=alaIpxTimerSap, alaIpxRipSapFilterVlanId=alaIpxRipSapFilterVlanId, alaIpxRipSapFilterNode=alaIpxRipSapFilterNode, alaIpxSerialFilterVlanId=alaIpxSerialFilterVlanId, alaIpxRoutingGroup=alaIpxRoutingGroup, alaIpxStaticRouteHopCount=alaIpxStaticRouteHopCount, alcatelIND1IPXMIBType20Group=alcatelIND1IPXMIBType20Group, alaIpxTimerTable=alaIpxTimerTable, alaIpxType20VlanId=alaIpxType20VlanId, alaIpxWatchdogSpoofEntry=alaIpxWatchdogSpoofEntry, alaIpxFilterGroup=alaIpxFilterGroup, alaIpxRipSapFilterTable=alaIpxRipSapFilterTable, alaIpxRipSapFilterMode=alaIpxRipSapFilterMode, alcatelIND1IPXMIBObjects=alcatelIND1IPXMIBObjects, alaIpxSerialFilterTable=alaIpxSerialFilterTable, alaIpxDefRouteTable=alaIpxDefRouteTable, alaIpxType20Mode=alaIpxType20Mode, alaIpxRipSapFilterNet=alaIpxRipSapFilterNet, alaIpxType20RowStatus=alaIpxType20RowStatus, alaIpxTimerGroup=alaIpxTimerGroup, alaIpxStaticRouteRowStatus=alaIpxStaticRouteRowStatus, alaIpxSerialFilterEntry=alaIpxSerialFilterEntry, alaIpxDefRouteNode=alaIpxDefRouteNode, alcatelIND1IPXMIBFlushGroup=alcatelIND1IPXMIBFlushGroup, alaIpxRipSapFilterSvcType=alaIpxRipSapFilterSvcType, NetNumber=NetNumber, alaIpxExtMsgTable=alaIpxExtMsgTable, alcatelIND1IPXMIBGroups=alcatelIND1IPXMIBGroups, alaSpxKeepaliveSpoofEntry=alaSpxKeepaliveSpoofEntry, alaIpxExtMsgRowStatus=alaIpxExtMsgRowStatus, alaIpxTimerEntry=alaIpxTimerEntry, alaIpxStaticRouteNextHopNode=alaIpxStaticRouteNextHopNode, alcatelIND1IPXMIBDefRouteGroup=alcatelIND1IPXMIBDefRouteGroup, alcatelIND1IPXMIBCompliance=alcatelIND1IPXMIBCompliance, alaIpxStaticRouteEntry=alaIpxStaticRouteEntry, alaIpxSerialFilterMode=alaIpxSerialFilterMode, alaSpxKeepaliveSpoofTable=alaSpxKeepaliveSpoofTable, alaIpxDefRouteVlanId=alaIpxDefRouteVlanId, alaIpxRipSapFilterEntry=alaIpxRipSapFilterEntry, alaIpxWatchdogSpoofRowStatus=alaIpxWatchdogSpoofRowStatus, alaIpxExtMsgMode=alaIpxExtMsgMode, alaIpxSerialFilterRowStatus=alaIpxSerialFilterRowStatus, alcatelIND1IPXMIB=alcatelIND1IPXMIB, alaIpxRipSapFilterType=alaIpxRipSapFilterType, alaIpxDefRouteEntry=alaIpxDefRouteEntry, alaIpxStaticRouteTable=alaIpxStaticRouteTable, alcatelIND1IPXMIBKeepaliveSpoofGroup=alcatelIND1IPXMIBKeepaliveSpoofGroup, alaIpxWatchdogSpoofMode=alaIpxWatchdogSpoofMode, alcatelIND1IPXMIBRipSapFilterGroup=alcatelIND1IPXMIBRipSapFilterGroup, alaIpxFlush=alaIpxFlush, alaIpxExtMsgVlanId=alaIpxExtMsgVlanId, alaIpxWatchdogSpoofVlanId=alaIpxWatchdogSpoofVlanId, alaIpxType20Entry=alaIpxType20Entry)
