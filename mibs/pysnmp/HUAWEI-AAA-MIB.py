#
# PySNMP MIB module HUAWEI-AAA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-AAA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:30:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
huaweiMgmt, = mibBuilder.importSymbols("HUAWEI-MIB", "huaweiMgmt")
Ipv6AddressIfIdentifier, Ipv6AddressPrefix, Ipv6Address = mibBuilder.importSymbols("IPV6-TC", "Ipv6AddressIfIdentifier", "Ipv6AddressPrefix", "Ipv6Address")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, IpAddress, iso, MibIdentifier, ObjectIdentity, Gauge32, Unsigned32, NotificationType, Bits, Integer32, TimeTicks, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "IpAddress", "iso", "MibIdentifier", "ObjectIdentity", "Gauge32", "Unsigned32", "NotificationType", "Bits", "Integer32", "TimeTicks", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
DateAndTime, TextualConvention, RowStatus, DisplayString, TruthValue, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention", "RowStatus", "DisplayString", "TruthValue", "MacAddress")
hwAaa = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 2))
hwAaa.setRevisions(('2015-06-10 12:50', '2015-04-23 16:55', '2015-04-17 12:50', '2015-03-10 12:50', '2014-12-26 16:17', '2014-09-06 16:17', '2014-09-03 10:50', '2014-08-20 10:50', '2014-08-06 10:50', '2014-07-14 10:50', '2014-03-06 10:50', '2013-12-17 10:30', '2013-12-13 17:25', '2013-10-15 17:25', '2013-08-08 20:12', '2013-07-19 18:00', '2013-07-04 17:09', '2013-06-27 17:19', '2013-04-17 09:19', '2013-04-03 22:22', '2013-03-15 11:11', '2013-09-14 15:18', '2013-11-28 16:51', '2014-03-18 10:51', '2014-03-24 10:51', '2014-04-17 10:26', '2014-04-17 10:27', '2014-07-08 15:44', '2014-08-12 17:25', '2014-08-27 15:44', '2014-08-27 15:44', '2014-09-21 15:44', '2014-12-27 15:44', '2014-12-31 15:44', '2014-12-26 16:17', '2015-01-23 10:25', '2015-03-20 13:14', '2015-03-26 09:35', '2015-07-07 20:36', '2015-07-16 17:11', '2015-07-28 16:41', '2015-07-28 20:55', '2015-07-28 21:00', '2015-07-31 09:17', '2015-08-08 09:35', '2015-08-26 16:05', '2015-09-11 11:38',))
if mibBuilder.loadTexts: hwAaa.setLastUpdated('201506101250Z')
if mibBuilder.loadTexts: hwAaa.setOrganization('Huawei Technologies Co.,Ltd.')
hwAAAMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1))
hwAuthenSchemeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 1), )
if mibBuilder.loadTexts: hwAuthenSchemeTable.setStatus('current')
hwAuthenSchemeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 1, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwAuthenSchemeName"))
if mibBuilder.loadTexts: hwAuthenSchemeEntry.setStatus('current')
hwAuthenSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAuthenSchemeName.setStatus('current')
hwAuthenMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32))).clone(namedValues=NamedValues(("local", 1), ("noauth", 2), ("radius", 3), ("localRadius", 4), ("radiusLocal", 5), ("radiusNoauth", 6), ("tacacs", 7), ("tacacsLocal", 8), ("localTacacs", 9), ("tacacsNoauth", 10), ("localNoauth", 11), ("radiusTacacs", 12), ("tacacsRadius", 13), ("localRadiusNoauth", 14), ("localTacacsNoauth", 15), ("radiusLocalNoauth", 16), ("radiusTacacsNoauth", 17), ("tacacsLocalNoauth", 18), ("tacacsRadiusNoauth", 19), ("localRadiusTacacs", 20), ("radiusLocalTacacs", 21), ("localTacacsRadius", 22), ("radiusTacacsLocal", 23), ("tacacsLocalRadius", 24), ("tacacsRadiusLocal", 25), ("localRadiusTacacsNoauth", 26), ("localTacacsRadiusNoauth", 27), ("radiusLocalTacacsNoauth", 28), ("radiusTacacsLocalNoauth", 29), ("tacacsLocalRadiusNoauth", 30), ("tacacsRadiusLocalNoauth", 31), ("radiusProxy", 32)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAuthenMethod.setStatus('current')
hwAuthenRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAuthenRowStatus.setStatus('current')
hwAuthenFailPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("online", 1), ("offline", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAuthenFailPolicy.setStatus('current')
hwAuthenFailDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAuthenFailDomain.setStatus('current')
hwAcctSchemeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 2), )
if mibBuilder.loadTexts: hwAcctSchemeTable.setStatus('current')
hwAcctSchemeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 2, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwAcctSchemeName"))
if mibBuilder.loadTexts: hwAcctSchemeEntry.setStatus('current')
hwAcctSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAcctSchemeName.setStatus('current')
hwAccMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 5))).clone(namedValues=NamedValues(("noacct", 2), ("radius", 3), ("hwtacacs", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAccMethod.setStatus('current')
hwAcctStartFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("offline", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAcctStartFail.setStatus('current')
hwAcctOnlineFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("offline", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAcctOnlineFail.setStatus('current')
hwAccRealTimeInter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 2, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAccRealTimeInter.setStatus('current')
hwAcctRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAcctRowStatus.setStatus('current')
hwAcctRealTimeIntervalUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("minute", 1), ("second", 2), ("none", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAcctRealTimeIntervalUnit.setStatus('current')
hwDomainTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4), )
if mibBuilder.loadTexts: hwDomainTable.setStatus('current')
hwDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwDomainName"))
if mibBuilder.loadTexts: hwDomainEntry.setStatus('current')
hwDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainName.setStatus('current')
hwDomainAuthenSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainAuthenSchemeName.setStatus('current')
hwDomainAcctSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainAcctSchemeName.setStatus('current')
hwDomainRadiusGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainRadiusGroupName.setStatus('current')
hwDomainAccessLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 283648))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainAccessLimitNum.setStatus('current')
hwDomainIfSrcRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIfSrcRoute.setStatus('current')
hwDomainNextHopIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 8), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainNextHopIP.setStatus('current')
hwDomainIdleCutTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainIdleCutTime.setStatus('current')
hwDomainIdleCutFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 768000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainIdleCutFlow.setStatus('current')
hwDomainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainRowStatus.setStatus('current')
hwDomainType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("device", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainType.setStatus('current')
hwDomainServiceSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainServiceSchemeName.setStatus('current')
hwDomainIdleCutType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("inbound", 2), ("outbound", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDomainIdleCutType.setStatus('current')
hwdomainipv6nexthop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdomainipv6nexthop.setStatus('current')
hwDomainForcePushUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 200))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainForcePushUrl.setStatus('current')
hwDomainForcePushUrlTemplate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainForcePushUrlTemplate.setStatus('current')
hwStateBlockFirstTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStateBlockFirstTimeRangeName.setStatus('current')
hwStateBlockSecondTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStateBlockSecondTimeRangeName.setStatus('current')
hwStateBlockThirdTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStateBlockThirdTimeRangeName.setStatus('current')
hwStateBlockForthTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStateBlockForthTimeRangeName.setStatus('current')
hwDomainFlowStatistic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 4, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDomainFlowStatistic.setStatus('current')
hwDomainExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5), )
if mibBuilder.loadTexts: hwDomainExtTable.setStatus('current')
hwDomainExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwDomainName"))
if mibBuilder.loadTexts: hwDomainExtEntry.setStatus('current')
hwDomainPPPURL = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDomainPPPURL.setStatus('current')
hwIfDomainActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfDomainActive.setStatus('current')
hwPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPriority.setStatus('current')
hwWebServerURL = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWebServerURL.setStatus('current')
hwIPPoolOneName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolOneName.setStatus('current')
hwIPPoolTwoName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolTwoName.setStatus('current')
hwIPPoolThreeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolThreeName.setStatus('current')
hwTwoLevelAcctRadiusGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTwoLevelAcctRadiusGroupName.setStatus('current')
hwVPDNGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1000), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVPDNGroupIndex.setStatus('current')
hwUclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 1023), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUclIndex.setStatus('current')
hwIfPPPoeURL = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfPPPoeURL.setStatus('current')
hwUclGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUclGroupName.setStatus('current')
hwVpdnGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVpdnGroupName.setStatus('current')
hwDomainVrf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDomainVrf.setStatus('current')
hwDomainGre = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDomainGre.setStatus('current')
hwDomainRenewIPTag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 18), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDomainRenewIPTag.setStatus('current')
hwPortalURL = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortalURL.setStatus('current')
hwPortalServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 20), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortalServerIP.setStatus('current')
hwRedirectTimesLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectTimesLimit.setStatus('current')
hwDot1xTemplate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xTemplate.setStatus('current')
hwWebServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 23), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwWebServerIP.setStatus('current')
hwWebServerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwWebServerMode.setStatus('current')
hwPoolWarningThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 100), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPoolWarningThreshold.setStatus('current')
hwTacGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTacGroupName.setStatus('current')
hwServicePolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwServicePolicyName.setStatus('current')
hwCopsGroupSSGType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCopsGroupSSGType.setStatus('current')
hwDomainAuthorSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainAuthorSchemeName.setStatus('current')
hwNtvUserProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNtvUserProfileName.setStatus('obsolete')
hwDomainQoSProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainQoSProfile.setStatus('current')
hwDomainZone = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainZone.setStatus('current')
hwIfL2tpRadiusForce = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 33), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIfL2tpRadiusForce.setStatus('current')
hwDownPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDownPriority.setStatus('current')
hwPPPForceAuthtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("pap", 0), ("chap", 1), ("mschapv1", 2), ("mschapv2", 3), ("none", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPPPForceAuthtype.setStatus('current')
hwDnsIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 36), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDnsIPAddress.setStatus('current')
hwAdminUserPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAdminUserPriority.setStatus('current')
hwShapingTemplate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwShapingTemplate.setStatus('current')
hwDomainDPIPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainDPIPolicyName.setStatus('current')
hwCopsGroupSIGType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCopsGroupSIGType.setStatus('current')
hwCopsGroupCIPNType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCopsGroupCIPNType.setStatus('current')
hwPCReduceCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPCReduceCir.setStatus('current')
hwValAcctType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("default", 1), ("radius", 2), ("cops", 3))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwValAcctType.setStatus('current')
hwValRadiusServer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 45), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwValRadiusServer.setStatus('current')
hwValCopsServer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwValCopsServer.setStatus('current')
hwPCReducePir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPCReducePir.setStatus('current')
hwDomainInboundL2tpQoSProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 48), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDomainInboundL2tpQoSProfile.setStatus('current')
hwDomainOutboundL2tpQoSProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 49), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDomainOutboundL2tpQoSProfile.setStatus('current')
hwIfMulticastForward = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 50), TruthValue().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMulticastForward.setStatus('current')
hwMulticastVirtualSchedulRezCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(128, 1000000), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMulticastVirtualSchedulRezCir.setStatus('current')
hwMulticastVirtualSchedulRezPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(128, 1000000), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMulticastVirtualSchedulRezPir.setStatus('current')
hwMaxMulticastListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 53), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMaxMulticastListNum.setStatus('current')
hwMultiProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 54), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMultiProfile.setStatus('current')
hwDomainServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("stb", 0), ("hsi", 1))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDomainServiceType.setStatus('current')
hwWebServerUrlParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 56), TruthValue().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWebServerUrlParameter.setStatus('current')
hwWebServerRedirectKeyMscgName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 57), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWebServerRedirectKeyMscgName.setStatus('current')
hwPoratalServerUrlParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 58), TruthValue().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPoratalServerUrlParameter.setStatus('current')
hwPoratalServerFirstUrlKeyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 59), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPoratalServerFirstUrlKeyName.setStatus('current')
hwPoratalServerFirstUrlKeyDefaultName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 60), TruthValue().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPoratalServerFirstUrlKeyDefaultName.setStatus('current')
hwDnsSecondIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 61), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDnsSecondIPAddress.setStatus('current')
hwDomainIgmpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 62), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainIgmpEnable.setStatus('current')
hwIPv6PoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 63), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PoolName.setStatus('current')
hwIPv6PrefixshareFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("shared", 1), ("unshared", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PrefixshareFlag.setStatus('current')
hwUserBasicServiceIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 65), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwUserBasicServiceIPType.setStatus('current')
hwPriDnsIPv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 66), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriDnsIPv6Address.setStatus('current')
hwSecDnsIPv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 67), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSecDnsIPv6Address.setStatus('current')
hwDualStackAccountingType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("seperate", 1), ("identical", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDualStackAccountingType.setStatus('current')
hwIPv6PoolWarningThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 69), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PoolWarningThreshold.setStatus('current')
hwIPv6CPWaitDHCPv6Delay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 70), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 120))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6CPWaitDHCPv6Delay.setStatus('current')
hwIPv6ManagedAddressFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 71), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ndra", 1), ("dhcpv6", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6ManagedAddressFlag.setStatus('current')
hwIPv6CPIFIDAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 72), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6CPIFIDAvailable.setStatus('current')
hwIPv6OtherFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 73), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ndra", 1), ("dhcpv6", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6OtherFlag.setStatus('current')
hwIPv6CPAssignIFID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 74), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6CPAssignIFID.setStatus('current')
hwMultiIPv6ProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 75), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMultiIPv6ProfileName.setStatus('current')
hwWebServerURLSlave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 76), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWebServerURLSlave.setStatus('current')
hwWebServerIPSlave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 77), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwWebServerIPSlave.setStatus('current')
hwBindAuthWebIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 78), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBindAuthWebIP.setStatus('current')
hwBindAuthWebVrf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 79), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBindAuthWebVrf.setStatus('current')
hwBindAuthWebIPSlave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 80), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBindAuthWebIPSlave.setStatus('current')
hwBindAuthWebVrfSlave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 81), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBindAuthWebVrfSlave.setStatus('current')
hwExtVpdnGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 82), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwExtVpdnGroupName.setStatus('current')
hwDomainUserGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 83), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDomainUserGroupName.setStatus('current')
hwAFTRName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 84), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAFTRName.setStatus('current')
hwDomainDhcpOpt64SepAndSeg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 85), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainDhcpOpt64SepAndSeg.setStatus('current')
hwDomainDhcpServerAck = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 5, 1, 86), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainDhcpServerAck.setStatus('current')
hwDomainStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6), )
if mibBuilder.loadTexts: hwDomainStatTable.setStatus('current')
hwDomainStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwDomainName"))
if mibBuilder.loadTexts: hwDomainStatEntry.setStatus('current')
hwDomainAccessedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainAccessedNum.setStatus('current')
hwDomainOnlineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainOnlineNum.setStatus('current')
hwDomainOnlinePPPUser = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainOnlinePPPUser.setStatus('current')
hwDomainFlowDnByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainFlowDnByte.setStatus('current')
hwDomainFlowDnPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainFlowDnPkt.setStatus('current')
hwDomainFlowUpByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainFlowUpByte.setStatus('current')
hwDomainFlowUpPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainFlowUpPkt.setStatus('current')
hwDomainIPTotalNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIPTotalNum.setStatus('current')
hwDomainIPUsedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIPUsedNum.setStatus('current')
hwDomainIPConflictNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIPConflictNum.setStatus('current')
hwDomainIPExcludeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIPExcludeNum.setStatus('current')
hwDomainIPIdleNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIPIdleNum.setStatus('current')
hwDomainIPUsedPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIPUsedPercent.setStatus('current')
hwDomainPPPoENum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainPPPoENum.setStatus('current')
hwDomainAuthenRequestsRcvNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainAuthenRequestsRcvNum.setStatus('current')
hwDomainAuthenAcceptsNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainAuthenAcceptsNum.setStatus('current')
hwDomainAuthenRejectsNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainAuthenRejectsNum.setStatus('current')
hwDomainAcctRequestsRcvNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainAcctRequestsRcvNum.setStatus('current')
hwDomainAcctRspSuccessNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainAcctRspSuccessNum.setStatus('current')
hwDomainAcctRspFailuresNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainAcctRspFailuresNum.setStatus('current')
hwDomainIPv6AddressTotalNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIPv6AddressTotalNum.setStatus('current')
hwDomainIPv6AddressUsedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIPv6AddressUsedNum.setStatus('current')
hwDomainIPv6AddressFreeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIPv6AddressFreeNum.setStatus('current')
hwDomainIPv6AddressConflictNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIPv6AddressConflictNum.setStatus('current')
hwDomainIPv6AddressExcludeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIPv6AddressExcludeNum.setStatus('current')
hwDomainIPv6AddressUsedPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIPv6AddressUsedPercent.setStatus('current')
hwDomainNDRAPrefixTotalNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainNDRAPrefixTotalNum.setStatus('current')
hwDomainNDRAPrefixUsedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainNDRAPrefixUsedNum.setStatus('current')
hwDomainNDRAPrefixFreeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainNDRAPrefixFreeNum.setStatus('current')
hwDomainNDRAPrefixConflictNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainNDRAPrefixConflictNum.setStatus('current')
hwDomainNDRAPrefixExcludeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainNDRAPrefixExcludeNum.setStatus('current')
hwDomainNDRAPrefixUsedPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainNDRAPrefixUsedPercent.setStatus('current')
hwDomainPDPrefixTotalNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainPDPrefixTotalNum.setStatus('current')
hwDomainPDPrefixUsedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainPDPrefixUsedNum.setStatus('current')
hwDomainPDPrefixFreeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainPDPrefixFreeNum.setStatus('current')
hwDomainPDPrefixConflictNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainPDPrefixConflictNum.setStatus('current')
hwDomainPDPrefixExcludeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainPDPrefixExcludeNum.setStatus('current')
hwDomainPDPrefixUsedPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainPDPrefixUsedPercent.setStatus('current')
hwDomainIPv6FlowDnByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIPv6FlowDnByte.setStatus('current')
hwDomainIPv6FlowDnPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIPv6FlowDnPkt.setStatus('current')
hwDomainIPv6FlowUpByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIPv6FlowUpByte.setStatus('current')
hwDomainIPv6FlowUpPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 6, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIPv6FlowUpPkt.setStatus('current')
hwLocalUserTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10), )
if mibBuilder.loadTexts: hwLocalUserTable.setStatus('current')
hwLocalUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwLocalUserName"))
if mibBuilder.loadTexts: hwLocalUserEntry.setStatus('current')
hwLocalUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 253))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLocalUserName.setStatus('current')
hwLocalUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLocalUserPassword.setStatus('current')
hwLocalUserAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLocalUserAccessType.setStatus('current')
hwLocalUserPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLocalUserPriority.setStatus('current')
hwftpdirction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwftpdirction.setStatus('current')
hwQosProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwQosProfileName.setStatus('current')
hwLocalUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLocalUserRowStatus.setStatus('current')
hwLocalUserIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLocalUserIpAddress.setStatus('current')
hwLocalUserVpnInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLocalUserVpnInstance.setStatus('current')
hwLocalUserAccessLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLocalUserAccessLimitNum.setStatus('current')
hwLocalUserPasswordLifetimeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLocalUserPasswordLifetimeMin.setStatus('current')
hwLocalUserPasswordLifetimeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLocalUserPasswordLifetimeMax.setStatus('current')
hwLocalUserIfAllowWeakPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notallow", 1), ("allow", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLocalUserIfAllowWeakPassword.setStatus('current')
hwLocalUserPasswordSetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLocalUserPasswordSetTime.setStatus('current')
hwLocalUserPasswordExpireTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLocalUserPasswordExpireTime.setStatus('current')
hwLocalUserPasswordIsExpired = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notExpired", 0), ("expired", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLocalUserPasswordIsExpired.setStatus('current')
hwLocalUserPasswordIsOrginal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 10, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notOrginal", 0), ("orginal", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLocalUserPasswordIsOrginal.setStatus('current')
hwLocalUserExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 11), )
if mibBuilder.loadTexts: hwLocalUserExtTable.setStatus('current')
hwLocalUserExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 11, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwLocalUserName"))
if mibBuilder.loadTexts: hwLocalUserExtEntry.setStatus('current')
hwLocalUserState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("block", 0), ("active", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLocalUserState.setStatus('current')
hwLocalUserNoCallBackVerify = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 11, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLocalUserNoCallBackVerify.setStatus('current')
hwLocalUserCallBackDialStr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 11, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLocalUserCallBackDialStr.setStatus('current')
hwLocalUserBlockFailTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLocalUserBlockFailTimes.setStatus('current')
hwLocalUserBlockInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 11, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLocalUserBlockInterval.setStatus('current')
hwLocalUserUserGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 11, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLocalUserUserGroup.setStatus('current')
hwLocalUserDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 11, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLocalUserDeviceType.setStatus('current')
hwLocalUserExpireDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 11, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLocalUserExpireDate.setStatus('current')
hwLocalUserIdleTimeoutSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 11, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLocalUserIdleTimeoutSecond.setStatus('current')
hwLocalUserTimeRange = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 11, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLocalUserTimeRange.setStatus('current')
hwAAASetting = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13))
hwAAASettingEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1))
hwRoamChar = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRoamChar.setStatus('current')
hwGlobalControl = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwGlobalControl.setStatus('current')
hwSystemRecord = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSystemRecord.setStatus('current')
hwOutboundRecord = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwOutboundRecord.setStatus('current')
hwCmdRecord = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCmdRecord.setStatus('current')
hwPPPUserOfflineStandardize = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPPPUserOfflineStandardize.setStatus('current')
hwDomainNameParseDirection = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("lefttoright", 0), ("righttoleft", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDomainNameParseDirection.setStatus('current')
hwDomainNameLocation = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("beforedelimiter", 0), ("afterdelimiter", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDomainNameLocation.setStatus('current')
hwAccessSpeedNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAccessSpeedNumber.setStatus('current')
hwAccessSpeedPeriod = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAccessSpeedPeriod.setStatus('current')
hwRealmNameChar = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRealmNameChar.setStatus('current')
hwRealmParseDirection = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("lefttoright", 0), ("righttoleft", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRealmParseDirection.setStatus('current')
hwIPOXpassword = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPOXpassword.setStatus('current')
hwAccessDelayTransitionStep = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 262144))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAccessDelayTransitionStep.setStatus('current')
hwAccessDelayTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2550))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAccessDelayTime.setStatus('current')
hwAccessDelayMinTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2550))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAccessDelayMinTime.setStatus('current')
hwParsePriority = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("domainfirst", 0), ("realmfirst", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwParsePriority.setStatus('current')
hwRealmNameLocation = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("beforedelimiter", 0), ("afterdelimiter", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRealmNameLocation.setStatus('current')
hwIPOXUsernameOption82 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("first", 1), ("second", 2), ("third", 3), ("fourth", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPOXUsernameOption82.setStatus('current')
hwIPOXUsernameIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("first", 1), ("second", 2), ("third", 3), ("fourth", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPOXUsernameIP.setStatus('current')
hwIPOXUsernameSysname = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("first", 1), ("second", 2), ("third", 3), ("fourth", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPOXUsernameSysname.setStatus('current')
hwIPOXUsernameMAC = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("first", 1), ("second", 2), ("third", 3), ("fourth", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPOXUsernameMAC.setStatus('current')
hwDefaultUserName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDefaultUserName.setStatus('current')
hwNasSerial = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNasSerial.setStatus('current')
hwAAAPasswordRepeatNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAAAPasswordRepeatNumber.setStatus('current')
hwAAAPasswordRemindDay = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 90))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAAAPasswordRemindDay.setStatus('current')
hwOnlineUserNumLowerLimitThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 99), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwOnlineUserNumLowerLimitThreshold.setStatus('current')
hwOnlineUserNumUpperLimitThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 100), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwOnlineUserNumUpperLimitThreshold.setStatus('current')
hwTriggerLoose = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 31), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 1440), ValueRangeConstraint(4294967295, 4294967295), )).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTriggerLoose.setStatus('current')
hwOfflineSpeedNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwOfflineSpeedNumber.setStatus('current')
hwIPOXpasswordKeyType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("simple", 1), ("cipher", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPOXpasswordKeyType.setStatus('current')
hwReauthorizeEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwReauthorizeEnable.setStatus('current')
hwDomainNameDelimiter = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDomainNameDelimiter.setStatus('current')
hwDomainNameSecurityDelimiter = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDomainNameSecurityDelimiter.setStatus('current')
hwGlobalAuthEventAuthFailResponseFail = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwGlobalAuthEventAuthFailResponseFail.setStatus('current')
hwGlobalAuthEventAuthFailVlan = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwGlobalAuthEventAuthFailVlan.setStatus('current')
hwGlobalAuthEventAuthenServerDownResponseFail = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwGlobalAuthEventAuthenServerDownResponseFail.setStatus('current')
hwGlobalAuthEventAuthenServerDownVlan = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwGlobalAuthEventAuthenServerDownVlan.setStatus('current')
hwGlobalAuthEventClientNoResponseVlan = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwGlobalAuthEventClientNoResponseVlan.setStatus('current')
hwGlobalAuthEventPreAuthVlan = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwGlobalAuthEventPreAuthVlan.setStatus('current')
hwGlobalAuthEventAuthFailUserGroup = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 43), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwGlobalAuthEventAuthFailUserGroup.setStatus('current')
hwGlobalAuthEventAuthenServerDownUserGroup = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 44), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwGlobalAuthEventAuthenServerDownUserGroup.setStatus('current')
hwGlobalAuthEventClientNoResponseUserGroup = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 45), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwGlobalAuthEventClientNoResponseUserGroup.setStatus('current')
hwGlobalAuthEventPreAuthUserGroup = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 46), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwGlobalAuthEventPreAuthUserGroup.setStatus('current')
hwAuthorModifyMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("overlay", 0), ("modify", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAuthorModifyMode.setStatus('current')
hwLocalRetryInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLocalRetryInterval.setStatus('current')
hwLocalRetryTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLocalRetryTime.setStatus('current')
hwLocalBlockTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLocalBlockTime.setStatus('current')
hwRemoteRetryInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRemoteRetryInterval.setStatus('current')
hwRemoteRetryTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRemoteRetryTime.setStatus('current')
hwRemoteBlockTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 53), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRemoteBlockTime.setStatus('current')
hwBlockDisable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 13, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("localuser", 0), ("remoteuser", 1), ("localremoteuser", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBlockDisable.setStatus('current')
hwAAAStat = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14))
hwAAAStatEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1))
hwTotalOnlineNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalOnlineNum.setStatus('current')
hwTotalPPPoeOnlineNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalPPPoeOnlineNum.setStatus('current')
hwTotalPPPoAOnlineNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalPPPoAOnlineNum.setStatus('current')
hwTotalftpOnlineNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalftpOnlineNum.setStatus('current')
hwTotalsshOnlineNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalsshOnlineNum.setStatus('current')
hwTotaltelnetOnlineNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotaltelnetOnlineNum.setStatus('current')
hwTotalVLANOnlineNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalVLANOnlineNum.setStatus('current')
hwHistoricMaxOnlineNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwHistoricMaxOnlineNum.setStatus('current')
hwResetHistoricMaxOnlineNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("reset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwResetHistoricMaxOnlineNum.setStatus('current')
hwResetOfflineReasonStatistic = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("reset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwResetOfflineReasonStatistic.setStatus('current')
hwResetOnlineFailReasonStatistic = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("reset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwResetOnlineFailReasonStatistic.setStatus('current')
hwMaxPPPoeOnlineNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMaxPPPoeOnlineNum.setStatus('current')
hwTotalPortalServerUserNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalPortalServerUserNum.setStatus('current')
hwMaxPortalServerUserNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMaxPortalServerUserNum.setStatus('current')
hwTotalIPv4OnlineNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalIPv4OnlineNum.setStatus('current')
hwTotalIPv6OnlineNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalIPv6OnlineNum.setStatus('current')
hwTotalDualStackOnlineNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalDualStackOnlineNum.setStatus('current')
hwTotalIPv4FlowDnByte = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalIPv4FlowDnByte.setStatus('current')
hwTotalIPv4FlowDnPkt = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalIPv4FlowDnPkt.setStatus('current')
hwTotalIPv4FlowUpByte = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalIPv4FlowUpByte.setStatus('current')
hwTotalIPv4FlowUpPkt = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalIPv4FlowUpPkt.setStatus('current')
hwTotalIPv6FlowDnByte = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalIPv6FlowDnByte.setStatus('current')
hwTotalIPv6FlowDnPkt = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalIPv6FlowDnPkt.setStatus('current')
hwTotalIPv6FlowUpByte = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalIPv6FlowUpByte.setStatus('current')
hwTotalIPv6FlowUpPkt = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalIPv6FlowUpPkt.setStatus('current')
hwHistoricMaxOnlineAcctReadyNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwHistoricMaxOnlineAcctReadyNum.setStatus('current')
hwPubicLacUserNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPubicLacUserNum.setStatus('current')
hwHistoricMaxOnlineLocalNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwHistoricMaxOnlineLocalNum.setStatus('current')
hwHistoricMaxOnlineRemoteNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwHistoricMaxOnlineRemoteNum.setStatus('current')
hwTotalLacOnlineNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalLacOnlineNum.setStatus('current')
hwTotalLnsOnlineNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalLnsOnlineNum.setStatus('current')
hwTotalWlsOnlineNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalWlsOnlineNum.setStatus('current')
hwTotalWrdOnlineNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalWrdOnlineNum.setStatus('current')
hwDhcpUserOnlineFailCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 14, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDhcpUserOnlineFailCount.setStatus('current')
hwAccessTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15), )
if mibBuilder.loadTexts: hwAccessTable.setStatus('current')
hwAccessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwAccessIndex"))
if mibBuilder.loadTexts: hwAccessEntry.setStatus('current')
hwAccessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIndex.setStatus('current')
hwAccessUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 253))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessUserName.setStatus('current')
hwAccessPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("all", 1), ("ppp", 2), ("vlan", 3), ("vlanweb", 4), ("vlanportal", 5), ("vlan8021x", 6), ("telnet", 7), ("ftp", 8), ("ssh", 9), ("igmp", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessPortType.setStatus('current')
hwAccessPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 15), ValueRangeConstraint(255, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessPriority.setStatus('current')
hwAccessSlotNo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessSlotNo.setStatus('current')
hwAccessSubSlotNo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessSubSlotNo.setStatus('current')
hwAccessPortNo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessPortNo.setStatus('current')
hwAccessVLANID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessVLANID.setStatus('current')
hwAccessPVC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessPVC.setStatus('current')
hwAccessAuthenMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("local", 1), ("noauth", 2), ("radius", 3), ("localRadius", 4), ("radiusLocal", 5), ("radiusNoauth", 6), ("tacacs", 7), ("localTacacs", 8), ("tacacsLocal", 9), ("tacacsNone", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessAuthenMethod.setStatus('current')
hwAccessAcctMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("local", 1), ("radius", 2), ("noacct", 3), ("localradiusboth", 4), ("hwtacacs", 5), ("localhwtacacsboth", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessAcctMethod.setStatus('current')
hwAccessIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIPAddress.setStatus('current')
hwAccessVRF = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessVRF.setStatus('current')
hwAccessMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 17), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessMACAddress.setStatus('current')
hwAccessIfIdleCut = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIfIdleCut.setStatus('current')
hwAccessIdleCutTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIdleCutTime.setStatus('current')
hwAccessIdleCutFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIdleCutFlow.setStatus('current')
hwAccessTimeLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessTimeLimit.setStatus('current')
hwAccessTotalFlow64Limit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessTotalFlow64Limit.setStatus('current')
hwAccessStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 25), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessStartTime.setStatus('current')
hwAccessCARIfUpActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 27), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessCARIfUpActive.setStatus('current')
hwAccessCARIfDnActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 31), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessCARIfDnActive.setStatus('current')
hwAccessUpFlow64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessUpFlow64.setStatus('current')
hwAccessDnFlow64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessDnFlow64.setStatus('current')
hwAccessUpPacket64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessUpPacket64.setStatus('current')
hwAccessDnPacket64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessDnPacket64.setStatus('current')
hwAccessCARUpCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 10000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessCARUpCIR.setStatus('current')
hwAccessCARUpPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 10000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessCARUpPIR.setStatus('current')
hwAccessCARUpCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 47), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessCARUpCBS.setStatus('current')
hwAccessCARUpPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 48), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessCARUpPBS.setStatus('current')
hwAccessCARDnCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 10000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessCARDnCIR.setStatus('current')
hwAccessCARDnPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 10000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessCARDnPIR.setStatus('current')
hwAccessCARDnCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 51), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessCARDnCBS.setStatus('current')
hwAccessCARDnPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 52), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessCARDnPBS.setStatus('current')
hwAccessDownPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 15), ValueRangeConstraint(255, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessDownPriority.setStatus('current')
hwAccessQosProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 56), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAccessQosProfile.setStatus('current')
hwAccessInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 57), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessInterface.setStatus('current')
hwAccessIPv6IFID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 58), Ipv6AddressIfIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIPv6IFID.setStatus('current')
hwAccessIPv6WanAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 59), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIPv6WanAddress.setStatus('current')
hwAccessIPv6WanPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 60), Ipv6AddressPrefix()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIPv6WanPrefix.setStatus('current')
hwAccessIPv6LanPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 61), Ipv6AddressPrefix()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIPv6LanPrefix.setStatus('current')
hwAccessIPv6LanPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIPv6LanPrefixLen.setStatus('current')
hwAccessBasicIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 63), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessBasicIPType.setStatus('current')
hwAccessIPv6WaitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIPv6WaitDelay.setStatus('current')
hwAccessIPv6ManagedAddressFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ndra", 1), ("dhcpv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIPv6ManagedAddressFlag.setStatus('current')
hwAccessIPv6CPIFIDAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 66), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIPv6CPIFIDAvailable.setStatus('current')
hwAccessIPv6OtherFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ndra", 1), ("dhcpv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIPv6OtherFlag.setStatus('current')
hwAccessIPv6CPAssignIFID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 68), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIPv6CPAssignIFID.setStatus('current')
hwAccessLineID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 69), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessLineID.setStatus('current')
hwAccessIPv6UpFlow64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 70), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIPv6UpFlow64.setStatus('current')
hwAccessIPv6DnFlow64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 71), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIPv6DnFlow64.setStatus('current')
hwAccessIPv6UpPacket64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 72), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIPv6UpPacket64.setStatus('current')
hwAccessIPv6DnPacket64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 73), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessIPv6DnPacket64.setStatus('current')
hwAccessDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 74), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessDeviceName.setStatus('current')
hwAccessDeviceMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 75), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessDeviceMACAddress.setStatus('current')
hwAccessDevicePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 76), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessDevicePortName.setStatus('current')
hwAccessAPID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 15, 1, 77), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294836225))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessAPID.setStatus('current')
hwAccessExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16), )
if mibBuilder.loadTexts: hwAccessExtTable.setStatus('current')
hwAccessExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwAccessIndex"))
if mibBuilder.loadTexts: hwAccessExtEntry.setStatus('current')
hwAccessUCLGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 1023), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessUCLGroup.setStatus('current')
hwAuthenticationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAuthenticationState.setStatus('current')
hwAuthorizationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAuthorizationState.setStatus('current')
hwAccountingState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccountingState.setStatus('current')
hwAccessDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessDomainName.setStatus('current')
hwIdleTimeLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIdleTimeLength.setStatus('current')
hwAcctSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 44))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAcctSessionID.setStatus('current')
hwAccessStartAcctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessStartAcctTime.setStatus('current')
hwAccessNormalServerGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessNormalServerGroup.setStatus('current')
hwAccessDomainAcctCopySeverGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessDomainAcctCopySeverGroup.setStatus('current')
hwAccessPVlanAcctCopyServerGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessPVlanAcctCopyServerGroup.setStatus('current')
hwAccessCurAuthenPlace = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("local", 1), ("radius", 2), ("tacacs", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessCurAuthenPlace.setStatus('current')
hwAccessActionFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("idle", 0), ("newuserauth", 1), ("reauth", 2), ("logout", 3), ("leaving", 4), ("authmodify", 5), ("connectup", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessActionFlag.setStatus('current')
hwAccessAuthtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 0), ("ppp", 1), ("dot1x", 2), ("web", 3), ("bind", 4), ("fast", 5), ("wlan", 6), ("admin", 7), ("tunnel", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessAuthtype.setStatus('current')
hwAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36))).clone(namedValues=NamedValues(("telnet", 1), ("terminal", 2), ("ssh", 3), ("ftp", 4), ("x25pad", 5), ("ppp", 6), ("pppoe", 7), ("pppoeovlan", 8), ("pppoa", 9), ("pppoeoa", 10), ("pppolns", 11), ("ordinaryvlan", 12), ("eap", 13), ("pnp", 14), ("ip", 15), ("staticvlan", 16), ("layer2leasedline", 17), ("layer2leasedlineuser", 18), ("layer3leasedline", 19), ("pppoeleasedline", 20), ("nmsleasedline", 21), ("proxyleasedline", 22), ("relayleasedline", 23), ("e1pos", 24), ("lactunnel", 25), ("lnstunnel", 26), ("mip", 27), ("deviceuser", 28), ("pppoeor", 29), ("pppoeovlanor", 30), ("ordinaryvlanor", 31), ("http", 32), ("web", 33), ("wlan", 34), ("mac", 35), ("vm", 36)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessType.setStatus('current')
hwAccessOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessOnlineTime.setStatus('current')
hwAccessDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAccessDomain.setStatus('current')
hwAccessGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 20), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessGateway.setStatus('current')
hwAccessSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAccessSSID.setStatus('current')
hwAccessAPMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 22), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessAPMAC.setStatus('current')
hwAccessCurAccountingPlace = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("radius", 2), ("tacacs", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessCurAccountingPlace.setStatus('current')
hwAccessCurAuthorPlace = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("local", 2), ("ifauthen", 3), ("tacacs", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessCurAuthorPlace.setStatus('current')
hwAccessUserGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAccessUserGroup.setStatus('current')
hwAccessResourceInsufficientInbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessResourceInsufficientInbound.setStatus('current')
hwAccessResourceInsufficientOutbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 16, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessResourceInsufficientOutbound.setStatus('current')
hwAcctSchemeExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 19), )
if mibBuilder.loadTexts: hwAcctSchemeExtTable.setStatus('current')
hwAcctSchemeExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 19, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwAcctSchemeName"))
if mibBuilder.loadTexts: hwAcctSchemeExtEntry.setStatus('current')
hwIfRealtimeAcct = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 19, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfRealtimeAcct.setStatus('current')
hwRealtimeFailMaxnum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 19, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRealtimeFailMaxnum.setStatus('current')
hwStartFailOnlineIfSendInterim = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 19, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwStartFailOnlineIfSendInterim.setStatus('current')
hwBillPoolTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 21))
hwBillsPoolVolume = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 21, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBillsPoolVolume.setStatus('current')
hwBillsPoolNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 21, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBillsPoolNum.setStatus('current')
hwBillsPoolAlarmThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 21, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBillsPoolAlarmThreshold.setStatus('current')
hwBillsPoolBackupMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 21, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("nobackup", 1), ("tftpmode", 2), ("hdmode", 3), ("cfcardmode", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBillsPoolBackupMode.setStatus('current')
hwBillsPoolBackupInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 21, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBillsPoolBackupInterval.setStatus('current')
hwBillsPoolBackupNow = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 21, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBillsPoolBackupNow.setStatus('current')
hwBillsPoolReset = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 21, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBillsPoolReset.setStatus('current')
hwBillTFTPTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 22))
hwBillsTFTPSrvIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 22, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBillsTFTPSrvIP.setStatus('current')
hwBillsTFTPMainFileName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 22, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBillsTFTPMainFileName.setStatus('current')
hwUclGrpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 25), )
if mibBuilder.loadTexts: hwUclGrpTable.setStatus('current')
hwUclGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 25, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwUclGrpName"))
if mibBuilder.loadTexts: hwUclGrpEntry.setStatus('current')
hwUclGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 25, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUclGrpName.setStatus('current')
hwUclGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 25, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwUclGrpRowStatus.setStatus('current')
hwIPAccessTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 27), )
if mibBuilder.loadTexts: hwIPAccessTable.setStatus('current')
hwIPAccessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 27, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwIPAccessIPaddress"), (0, "HUAWEI-AAA-MIB", "hwIPAccessVRF"))
if mibBuilder.loadTexts: hwIPAccessEntry.setStatus('current')
hwIPAccessIPaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 27, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPAccessIPaddress.setStatus('current')
hwIPAccessCID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 27, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPAccessCID.setStatus('current')
hwIPAccessVRF = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 27, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPAccessVRF.setStatus('current')
hwAAAMibTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2))
hwAAATrapOid = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1))
hwDomainIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1152))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwDomainIndex.setStatus('current')
hwHdFreeamount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwHdFreeamount.setStatus('current')
hwHdWarningThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwHdWarningThreshold.setStatus('current')
hwUserSlot = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwUserSlot.setStatus('current')
hwUserSlotMaxNumThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 5), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwUserSlotMaxNumThreshold.setStatus('current')
hwOnlineUserNumThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 6), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwOnlineUserNumThreshold.setStatus('current')
hwMaxUserThresholdType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 7), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMaxUserThresholdType.setStatus('current')
hwRbpChangeName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 33))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwRbpChangeName.setStatus('current')
hwRbpOldState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("init", 0), ("master", 1), ("backup", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwRbpOldState.setStatus('current')
hwRbpNewState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("init", 0), ("master", 1), ("backup", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwRbpNewState.setStatus('current')
hwRbpChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 33))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwRbpChangeReason.setStatus('current')
hwRbsName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 33))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwRbsName.setStatus('current')
hwRbsDownReason = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwRbsDownReason.setStatus('current')
hwPolicyRouteThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 14), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwPolicyRouteThreshold.setStatus('current')
hwPolicyRoute = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwPolicyRoute.setStatus('current')
hwRemoteDownloadAclUsedValue = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 16), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwRemoteDownloadAclUsedValue.setStatus('current')
hwRemoteDownloadAclThresholdValue = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 17), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwRemoteDownloadAclThresholdValue.setStatus('current')
hwLoginFailedTimes = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 18), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLoginFailedTimes.setStatus('current')
hwStatisticPeriod = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 19), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwStatisticPeriod.setStatus('current')
hwUserGroupNumThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 20), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwUserGroupNumThreshold.setStatus('current')
hwUserGroupUsedNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 21), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwUserGroupUsedNum.setStatus('current')
hwAAACpuUsage = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 22), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwAAACpuUsage.setStatus('current')
hwAAAUserResourceUsage = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 23), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwAAAUserResourceUsage.setStatus('current')
hwAAASessionGroupUpperLimitThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 100), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwAAASessionGroupUpperLimitThreshold.setStatus('current')
hwAAASessionGroupLowerLimitThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 99), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwAAASessionGroupLowerLimitThreshold.setStatus('current')
hwAAASessionUpperLimitThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 100), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwAAASessionUpperLimitThreshold.setStatus('current')
hwAAASessionLowerLimitThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 99), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwAAASessionLowerLimitThreshold.setStatus('current')
hwAAATimerExpireMajorLevelThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwAAATimerExpireMajorLevelThreshold.setStatus('current')
hwAAATimerExpireMajorLevelResumeThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwAAATimerExpireMajorLevelResumeThreshold.setStatus('current')
hwAAATimerExpireCriticalLevelThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwAAATimerExpireCriticalLevelThreshold.setStatus('current')
hwAAATimerExpireCriticalLevelResumeThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwAAATimerExpireCriticalLevelResumeThreshold.setStatus('current')
hwMacMovedQuietUserSpec = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 32), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMacMovedQuietUserSpec.setStatus('current')
hwMacMovedUserPercentage = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 33), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMacMovedUserPercentage.setStatus('current')
hwLowerMacMovedUserPercentage = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 34), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLowerMacMovedUserPercentage.setStatus('current')
hwUpperMacMovedUserPercentage = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 35), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwUpperMacMovedUserPercentage.setStatus('current')
hwAAAChasisIPv6AddressThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 36), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwAAAChasisIPv6AddressThreshold.setStatus('current')
hwAAASlotIPv6AddressThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 1, 37), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwAAASlotIPv6AddressThreshold.setStatus('current')
hwAAATrapsDefine = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2))
hwAAATraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0))
hwUserIPAllocAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 1)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIndex"), ("HUAWEI-AAA-MIB", "hwDomainName"), ("HUAWEI-AAA-MIB", "hwPoolWarningThreshold"))
if mibBuilder.loadTexts: hwUserIPAllocAlarm.setStatus('current')
hwUserSlotMaxNum = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 2)).setObjects(("HUAWEI-AAA-MIB", "hwUserSlot"), ("HUAWEI-AAA-MIB", "hwUserSlotMaxNumThreshold"))
if mibBuilder.loadTexts: hwUserSlotMaxNum.setStatus('current')
hwOnlineUserNumAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 3)).setObjects(("HUAWEI-AAA-MIB", "hwOnlineUserNumThreshold"))
if mibBuilder.loadTexts: hwOnlineUserNumAlarm.setStatus('current')
hwSetUserQosProfileFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 4)).setObjects(("HUAWEI-AAA-MIB", "hwAccessIndex"), ("HUAWEI-AAA-MIB", "hwAccessUserName"), ("HUAWEI-AAA-MIB", "hwAccessQosProfile"))
if mibBuilder.loadTexts: hwSetUserQosProfileFail.setStatus('current')
hwUserMaxNum = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 5)).setObjects(("HUAWEI-AAA-MIB", "hwMaxUserThresholdType"), ("HUAWEI-AAA-MIB", "hwUserSlot"), ("HUAWEI-AAA-MIB", "hwUserSlotMaxNumThreshold"))
if mibBuilder.loadTexts: hwUserMaxNum.setStatus('current')
hwRbpStateChange = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 6)).setObjects(("HUAWEI-AAA-MIB", "hwRbpChangeName"), ("HUAWEI-AAA-MIB", "hwRbpOldState"), ("HUAWEI-AAA-MIB", "hwRbpNewState"), ("HUAWEI-AAA-MIB", "hwRbpChangeReason"))
if mibBuilder.loadTexts: hwRbpStateChange.setStatus('current')
hwRbsDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 7)).setObjects(("HUAWEI-AAA-MIB", "hwRbsName"), ("HUAWEI-AAA-MIB", "hwRbsDownReason"))
if mibBuilder.loadTexts: hwRbsDown.setStatus('current')
hwRbsUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 8)).setObjects(("HUAWEI-AAA-MIB", "hwRbsName"))
if mibBuilder.loadTexts: hwRbsUp.setStatus('current')
hwUserIPv6AddressAllocAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 9)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIndex"), ("HUAWEI-AAA-MIB", "hwDomainName"), ("HUAWEI-AAA-MIB", "hwIPv6PoolWarningThreshold"))
if mibBuilder.loadTexts: hwUserIPv6AddressAllocAlarm.setStatus('current')
hwUserNDRAPrefixAllocAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 10)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIndex"), ("HUAWEI-AAA-MIB", "hwDomainName"), ("HUAWEI-AAA-MIB", "hwIPv6PoolWarningThreshold"))
if mibBuilder.loadTexts: hwUserNDRAPrefixAllocAlarm.setStatus('current')
hwUserDelegationPrefixAllocAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 11)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIndex"), ("HUAWEI-AAA-MIB", "hwDomainName"), ("HUAWEI-AAA-MIB", "hwIPv6PoolWarningThreshold"))
if mibBuilder.loadTexts: hwUserDelegationPrefixAllocAlarm.setStatus('current')
hwUserIPAllocAlarmResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 12)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIndex"), ("HUAWEI-AAA-MIB", "hwDomainName"), ("HUAWEI-AAA-MIB", "hwPoolWarningThreshold"))
if mibBuilder.loadTexts: hwUserIPAllocAlarmResume.setStatus('current')
hwUserIPv6AddressAllocAlarmResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 13)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIndex"), ("HUAWEI-AAA-MIB", "hwDomainName"), ("HUAWEI-AAA-MIB", "hwIPv6PoolWarningThreshold"))
if mibBuilder.loadTexts: hwUserIPv6AddressAllocAlarmResume.setStatus('current')
hwUserNDRAPrefixAllocAlarmResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 14)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIndex"), ("HUAWEI-AAA-MIB", "hwDomainName"), ("HUAWEI-AAA-MIB", "hwIPv6PoolWarningThreshold"))
if mibBuilder.loadTexts: hwUserNDRAPrefixAllocAlarmResume.setStatus('current')
hwUserDelegationPrefixAllocAlarmResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 15)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIndex"), ("HUAWEI-AAA-MIB", "hwDomainName"), ("HUAWEI-AAA-MIB", "hwIPv6PoolWarningThreshold"))
if mibBuilder.loadTexts: hwUserDelegationPrefixAllocAlarmResume.setStatus('current')
hwOnlineUserNumUpperLimitAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 16)).setObjects(("HUAWEI-AAA-MIB", "hwOnlineUserNumUpperLimitThreshold"))
if mibBuilder.loadTexts: hwOnlineUserNumUpperLimitAlarm.setStatus('current')
hwOnlineUserNumUpperLimitResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 17)).setObjects(("HUAWEI-AAA-MIB", "hwOnlineUserNumUpperLimitThreshold"))
if mibBuilder.loadTexts: hwOnlineUserNumUpperLimitResume.setStatus('current')
hwOnlineUserNumLowerLimitAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 18)).setObjects(("HUAWEI-AAA-MIB", "hwOnlineUserNumLowerLimitThreshold"))
if mibBuilder.loadTexts: hwOnlineUserNumLowerLimitAlarm.setStatus('current')
hwOnlineUserNumLowerLimitResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 19)).setObjects(("HUAWEI-AAA-MIB", "hwOnlineUserNumLowerLimitThreshold"))
if mibBuilder.loadTexts: hwOnlineUserNumLowerLimitResume.setStatus('current')
hwIPLowerlimitWarningAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 20)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIndex"), ("HUAWEI-AAA-MIB", "hwDomainName"), ("HUAWEI-AAA-MIB", "hwPoolLowerLimitWarningThreshold"))
if mibBuilder.loadTexts: hwIPLowerlimitWarningAlarm.setStatus('current')
hwIPLowerlimitWarningResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 21)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIndex"), ("HUAWEI-AAA-MIB", "hwDomainName"), ("HUAWEI-AAA-MIB", "hwPoolLowerLimitWarningThreshold"))
if mibBuilder.loadTexts: hwIPLowerlimitWarningResume.setStatus('current')
hwIPv6AddressLowerlimitWarningAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 22)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIndex"), ("HUAWEI-AAA-MIB", "hwDomainName"), ("HUAWEI-AAA-MIB", "hwIPv6PoolLowerLimitWarningThreshold"))
if mibBuilder.loadTexts: hwIPv6AddressLowerlimitWarningAlarm.setStatus('current')
hwIPv6AddressLowerlimitWarningResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 23)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIndex"), ("HUAWEI-AAA-MIB", "hwDomainName"), ("HUAWEI-AAA-MIB", "hwIPv6PoolLowerLimitWarningThreshold"))
if mibBuilder.loadTexts: hwIPv6AddressLowerlimitWarningResume.setStatus('current')
hwIPv6NDRAPrefixLowerlimitWarningAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 24)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIndex"), ("HUAWEI-AAA-MIB", "hwDomainName"), ("HUAWEI-AAA-MIB", "hwIPv6PoolLowerLimitWarningThreshold"))
if mibBuilder.loadTexts: hwIPv6NDRAPrefixLowerlimitWarningAlarm.setStatus('current')
hwIPv6NDRAPrefixLowerlimitWarningResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 25)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIndex"), ("HUAWEI-AAA-MIB", "hwDomainName"), ("HUAWEI-AAA-MIB", "hwIPv6PoolLowerLimitWarningThreshold"))
if mibBuilder.loadTexts: hwIPv6NDRAPrefixLowerlimitWarningResume.setStatus('current')
hwIPv6PDPrefixLowerlimitWarningAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 26)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIndex"), ("HUAWEI-AAA-MIB", "hwDomainName"), ("HUAWEI-AAA-MIB", "hwIPv6PoolLowerLimitWarningThreshold"))
if mibBuilder.loadTexts: hwIPv6PDPrefixLowerlimitWarningAlarm.setStatus('current')
hwIPv6PDPrefixLowerlimitWarningResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 27)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIndex"), ("HUAWEI-AAA-MIB", "hwDomainName"), ("HUAWEI-AAA-MIB", "hwIPv6PoolLowerLimitWarningThreshold"))
if mibBuilder.loadTexts: hwIPv6PDPrefixLowerlimitWarningResume.setStatus('current')
hwPolicyRouteSlotMaxNum = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 28)).setObjects(("HUAWEI-AAA-MIB", "hwAccessSlotNo"), ("HUAWEI-AAA-MIB", "hwPolicyRouteThreshold"), ("HUAWEI-AAA-MIB", "hwAccessIndex"), ("HUAWEI-AAA-MIB", "hwPolicyRoute"))
if mibBuilder.loadTexts: hwPolicyRouteSlotMaxNum.setStatus('current')
hwRemoteDownloadAclThresholdAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 29)).setObjects(("HUAWEI-AAA-MIB", "hwRemoteDownloadAclUsedValue"), ("HUAWEI-AAA-MIB", "hwRemoteDownloadAclThresholdValue"))
if mibBuilder.loadTexts: hwRemoteDownloadAclThresholdAlarm.setStatus('current')
hwRemoteDownloadAclThresholdResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 30)).setObjects(("HUAWEI-AAA-MIB", "hwRemoteDownloadAclUsedValue"), ("HUAWEI-AAA-MIB", "hwRemoteDownloadAclThresholdValue"))
if mibBuilder.loadTexts: hwRemoteDownloadAclThresholdResume.setStatus('current')
hwAdminLoginFailed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 31)).setObjects(("HUAWEI-AAA-MIB", "hwLoginFailedTimes"), ("HUAWEI-AAA-MIB", "hwStatisticPeriod"))
if mibBuilder.loadTexts: hwAdminLoginFailed.setStatus('current')
hwAdminLoginFailedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 32)).setObjects(("HUAWEI-AAA-MIB", "hwLoginFailedTimes"), ("HUAWEI-AAA-MIB", "hwStatisticPeriod"))
if mibBuilder.loadTexts: hwAdminLoginFailedClear.setStatus('current')
hwUserGroupThresholdAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 33)).setObjects(("HUAWEI-AAA-MIB", "hwUserGroupNumThreshold"), ("HUAWEI-AAA-MIB", "hwUserGroupUsedNum"))
if mibBuilder.loadTexts: hwUserGroupThresholdAlarm.setStatus('current')
hwUserGroupThresholdResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 34)).setObjects(("HUAWEI-AAA-MIB", "hwUserGroupNumThreshold"), ("HUAWEI-AAA-MIB", "hwUserGroupUsedNum"))
if mibBuilder.loadTexts: hwUserGroupThresholdResume.setStatus('current')
hwEDSGLicenseExpireAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 35))
if mibBuilder.loadTexts: hwEDSGLicenseExpireAlarm.setStatus('current')
hwEDSGLicenseExpireResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 36))
if mibBuilder.loadTexts: hwEDSGLicenseExpireResume.setStatus('current')
hwAAAAccessUserResourceOrCpuAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 37)).setObjects(("HUAWEI-AAA-MIB", "hwUserSlot"), ("HUAWEI-AAA-MIB", "hwAAACpuUsage"), ("HUAWEI-AAA-MIB", "hwAAAUserResourceUsage"))
if mibBuilder.loadTexts: hwAAAAccessUserResourceOrCpuAlarm.setStatus('current')
hwAAAAccessUserResourceOrCpuResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 38)).setObjects(("HUAWEI-AAA-MIB", "hwUserSlot"), ("HUAWEI-AAA-MIB", "hwAAACpuUsage"), ("HUAWEI-AAA-MIB", "hwAAAUserResourceUsage"))
if mibBuilder.loadTexts: hwAAAAccessUserResourceOrCpuResume.setStatus('current')
hwAAASessionGroupUpperLimitAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 39)).setObjects(("HUAWEI-AAA-MIB", "hwAAASessionGroupUpperLimitThreshold"))
if mibBuilder.loadTexts: hwAAASessionGroupUpperLimitAlarm.setStatus('current')
hwAAASessionGroupUpperLimitResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 40)).setObjects(("HUAWEI-AAA-MIB", "hwAAASessionGroupUpperLimitThreshold"))
if mibBuilder.loadTexts: hwAAASessionGroupUpperLimitResume.setStatus('current')
hwAAASessionGroupLowerLimitAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 41)).setObjects(("HUAWEI-AAA-MIB", "hwAAASessionGroupLowerLimitThreshold"))
if mibBuilder.loadTexts: hwAAASessionGroupLowerLimitAlarm.setStatus('current')
hwAAASessionGroupLowerLimitResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 42)).setObjects(("HUAWEI-AAA-MIB", "hwAAASessionGroupLowerLimitThreshold"))
if mibBuilder.loadTexts: hwAAASessionGroupLowerLimitResume.setStatus('current')
hwAAAOnlineSessoinUpperLimitAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 43)).setObjects(("HUAWEI-AAA-MIB", "hwAAASessionUpperLimitThreshold"))
if mibBuilder.loadTexts: hwAAAOnlineSessoinUpperLimitAlarm.setStatus('current')
hwAAAOnlineSessoinUpperLimitResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 44)).setObjects(("HUAWEI-AAA-MIB", "hwAAASessionUpperLimitThreshold"))
if mibBuilder.loadTexts: hwAAAOnlineSessoinUpperLimitResume.setStatus('current')
hwAAAOnlineSessoinLowerLimitAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 45)).setObjects(("HUAWEI-AAA-MIB", "hwAAASessionLowerLimitThreshold"))
if mibBuilder.loadTexts: hwAAAOnlineSessoinLowerLimitAlarm.setStatus('current')
hwAAAOnlineSessoinLowerLimitResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 46)).setObjects(("HUAWEI-AAA-MIB", "hwAAASessionLowerLimitThreshold"))
if mibBuilder.loadTexts: hwAAAOnlineSessoinLowerLimitResume.setStatus('current')
hwAAASlotOnlineUserNumAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 47)).setObjects(("HUAWEI-AAA-MIB", "hwUserSlot"), ("HUAWEI-AAA-MIB", "hwUserSlotMaxNumThreshold"))
if mibBuilder.loadTexts: hwAAASlotOnlineUserNumAlarm.setStatus('current')
hwAAASlotOnlineUserNumResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 48)).setObjects(("HUAWEI-AAA-MIB", "hwUserSlot"), ("HUAWEI-AAA-MIB", "hwUserSlotMaxNumThreshold"))
if mibBuilder.loadTexts: hwAAASlotOnlineUserNumResume.setStatus('current')
hwAAATimerExpireMajorLevelAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 49)).setObjects(("HUAWEI-AAA-MIB", "hwAAATimerExpireMajorLevelThreshold"))
if mibBuilder.loadTexts: hwAAATimerExpireMajorLevelAlarm.setStatus('current')
hwAAATimerExpireMajorLevelResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 50)).setObjects(("HUAWEI-AAA-MIB", "hwAAATimerExpireMajorLevelResumeThreshold"))
if mibBuilder.loadTexts: hwAAATimerExpireMajorLevelResume.setStatus('current')
hwAAATimerExpireCriticalLevelAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 51)).setObjects(("HUAWEI-AAA-MIB", "hwAAATimerExpireCriticalLevelThreshold"))
if mibBuilder.loadTexts: hwAAATimerExpireCriticalLevelAlarm.setStatus('current')
hwAAATimerExpireCriticalLevelResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 52)).setObjects(("HUAWEI-AAA-MIB", "hwAAATimerExpireCriticalLevelResumeThreshold"))
if mibBuilder.loadTexts: hwAAATimerExpireCriticalLevelResume.setStatus('current')
hwMacMovedQuietMaxUserAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 53)).setObjects(("HUAWEI-AAA-MIB", "hwMacMovedQuietUserSpec"), ("HUAWEI-AAA-MIB", "hwMacMovedUserPercentage"), ("HUAWEI-AAA-MIB", "hwLowerMacMovedUserPercentage"), ("HUAWEI-AAA-MIB", "hwUpperMacMovedUserPercentage"))
if mibBuilder.loadTexts: hwMacMovedQuietMaxUserAlarm.setStatus('current')
hwMacMovedQuietUserClearAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 54)).setObjects(("HUAWEI-AAA-MIB", "hwMacMovedQuietUserSpec"), ("HUAWEI-AAA-MIB", "hwMacMovedUserPercentage"), ("HUAWEI-AAA-MIB", "hwLowerMacMovedUserPercentage"), ("HUAWEI-AAA-MIB", "hwUpperMacMovedUserPercentage"))
if mibBuilder.loadTexts: hwMacMovedQuietUserClearAlarm.setStatus('current')
hwAAAChasisIPv6AddressThresholdAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 55)).setObjects(("HUAWEI-AAA-MIB", "hwAAAChasisIPv6AddressThreshold"))
if mibBuilder.loadTexts: hwAAAChasisIPv6AddressThresholdAlarm.setStatus('current')
hwAAAChasisIPv6AddressThresholdResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 56)).setObjects(("HUAWEI-AAA-MIB", "hwAAAChasisIPv6AddressThreshold"))
if mibBuilder.loadTexts: hwAAAChasisIPv6AddressThresholdResume.setStatus('current')
hwAAASlotIPv6AddressThresholdAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 57)).setObjects(("HUAWEI-AAA-MIB", "hwUserSlot"), ("HUAWEI-AAA-MIB", "hwAAASlotIPv6AddressThreshold"))
if mibBuilder.loadTexts: hwAAASlotIPv6AddressThresholdAlarm.setStatus('current')
hwAAASlotIPv6AddressThresholdResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 2, 0, 58)).setObjects(("HUAWEI-AAA-MIB", "hwUserSlot"), ("HUAWEI-AAA-MIB", "hwAAASlotIPv6AddressThreshold"))
if mibBuilder.loadTexts: hwAAASlotIPv6AddressThresholdResume.setStatus('current')
hwLAMTrapsDefine = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 3))
hwLAMTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 3, 0))
hwHarddiskoverflow = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 3, 0, 1)).setObjects(("HUAWEI-AAA-MIB", "hwHdFreeamount"), ("HUAWEI-AAA-MIB", "hwHdWarningThreshold"))
if mibBuilder.loadTexts: hwHarddiskoverflow.setStatus('current')
hwHarddiskReachThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 3, 0, 2)).setObjects(("HUAWEI-AAA-MIB", "hwHdFreeamount"), ("HUAWEI-AAA-MIB", "hwHdWarningThreshold"))
if mibBuilder.loadTexts: hwHarddiskReachThreshold.setStatus('current')
hwHarddiskOK = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 3, 0, 3)).setObjects(("HUAWEI-AAA-MIB", "hwHdFreeamount"), ("HUAWEI-AAA-MIB", "hwHdWarningThreshold"))
if mibBuilder.loadTexts: hwHarddiskOK.setStatus('current')
hwCachetoFTPFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 3, 0, 4)).setObjects(("HUAWEI-AAA-MIB", "hwHdFreeamount"), ("HUAWEI-AAA-MIB", "hwHdWarningThreshold"))
if mibBuilder.loadTexts: hwCachetoFTPFail.setStatus('current')
hwHDtoFTPFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 2, 2, 3, 0, 5)).setObjects(("HUAWEI-AAA-MIB", "hwHdFreeamount"), ("HUAWEI-AAA-MIB", "hwHdWarningThreshold"))
if mibBuilder.loadTexts: hwHDtoFTPFail.setStatus('current')
hwCutAccessUserTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28))
hwCutStartUserID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCutStartUserID.setStatus('current')
hwCutEndUserID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCutEndUserID.setStatus('current')
hwCutIPaddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCutIPaddress.setStatus('current')
hwCutMacAddres = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28, 4), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCutMacAddres.setStatus('current')
hwCutUserName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 253))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCutUserName.setStatus('current')
hwCutUserAttri = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("all", 0), ("noauth", 1), ("local", 2), ("radiusauth", 3), ("hwtacacs", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCutUserAttri.setStatus('current')
hwCutDomain = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCutDomain.setStatus('current')
hwCutIPPoolName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCutIPPoolName.setStatus('current')
hwCutIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCutIfIndex.setStatus('current')
hwCutVlanID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 268308478))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCutVlanID.setStatus('current')
hwCutVPI = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCutVPI.setStatus('current')
hwCutVCI = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCutVCI.setStatus('current')
hwCutVRF = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCutVRF.setStatus('current')
hwCutAccessInterface = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCutAccessInterface.setStatus('current')
hwCutUserSSID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCutUserSSID.setStatus('current')
hwCutAccessSlot = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCutAccessSlot.setStatus('current')
hwCutUserGroup = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 28, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCutUserGroup.setStatus('current')
hwAAACallRate = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29))
hwAAAUserPPP = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29, 1))
hwTotalConnectNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalConnectNum.setStatus('current')
hwTotalSuccessNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalSuccessNum.setStatus('current')
hwTotalLCPFailNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalLCPFailNum.setStatus('current')
hwTotalAuthenFailNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalAuthenFailNum.setStatus('current')
hwTotalNCPFailNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalNCPFailNum.setStatus('current')
hwTotalIPAllocFailNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalIPAllocFailNum.setStatus('current')
hwTotalOtherPPPFailNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalOtherPPPFailNum.setStatus('current')
hwAAAUserWebandFast = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29, 2))
hwTotalWebConnectNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalWebConnectNum.setStatus('current')
hwTotalSuccessWebConnectNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalSuccessWebConnectNum.setStatus('current')
hwAAAUserDot1X = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29, 3))
hwTotalDot1XConnectNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalDot1XConnectNum.setStatus('current')
hwTotalSuccessDot1XConnectNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalSuccessDot1XConnectNum.setStatus('current')
hwAAAUserBind = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29, 4))
hwTotalBindConnectNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalBindConnectNum.setStatus('current')
hwTotalSuccessBindConnectNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 29, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalSuccessBindConnectNum.setStatus('current')
hwAuthorSchemeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 8), )
if mibBuilder.loadTexts: hwAuthorSchemeTable.setStatus('current')
hwAuthorSchemeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 8, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwAuthorSchemeName"))
if mibBuilder.loadTexts: hwAuthorSchemeEntry.setStatus('current')
hwAuthorSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAuthorSchemeName.setStatus('current')
hwAuthorMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("none", 1), ("local", 2), ("hwtacacs", 3), ("ifauthenticated", 4), ("hwtacacsnone", 5), ("hwtacacslocal", 6), ("hwtacacsifauthenticated", 7), ("localnone", 8), ("localhwtacacs", 9), ("localifauthenticated", 10), ("ifauthenticatednone", 11), ("ifauthenticatedlocal", 12), ("ifauthenticatedhwtacacs", 13), ("localhwtacacsnone", 14), ("localifauthenticatednone", 15), ("hwtacacslocalnone", 16), ("hwtacacsifauthenticatednone", 17), ("ifauthenticatedlocalnone", 18), ("ifauthenticatedhwtacacsnone", 19), ("localhwtacacsifauthenticated", 20), ("localifauthenticatedhwtacacs", 21), ("hwtacaslocalifauthenticated", 22), ("hwtacacsifauthenticatedlocal", 23), ("ifauthenticatedlocalhwtacacs", 24), ("ifauthenticatedhwtacacslocal", 25), ("localhwtacacsifauthenticatednone", 26), ("localifauthenticatedhwtacacsnone", 27), ("hwtacaslocalifauthenticatednone", 28), ("hwtacacsifauthenticatedlocalnone", 29), ("ifauthenticatedlocalhwtacacsnone", 30), ("ifauthenticatedhwtacacslocalnone", 31)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAuthorMethod.setStatus('current')
hwAuthorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 8, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAuthorRowStatus.setStatus('current')
hwRecordSchemeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 30), )
if mibBuilder.loadTexts: hwRecordSchemeTable.setStatus('current')
hwRecordSchemeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 30, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwRecordSchemeName"))
if mibBuilder.loadTexts: hwRecordSchemeEntry.setStatus('current')
hwRecordSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 30, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRecordSchemeName.setStatus('current')
hwRecordTacGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 30, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRecordTacGroupName.setStatus('current')
hwRecordRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 30, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRecordRowStatus.setStatus('current')
hwMACAccessTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 31), )
if mibBuilder.loadTexts: hwMACAccessTable.setStatus('current')
hwMACAccessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 31, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwMACAccessMACAddress"))
if mibBuilder.loadTexts: hwMACAccessEntry.setStatus('current')
hwMACAccessMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 31, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMACAccessMACAddress.setStatus('current')
hwMACAccessCID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 31, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMACAccessCID.setStatus('current')
hwSlotConnectNumTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 32), )
if mibBuilder.loadTexts: hwSlotConnectNumTable.setStatus('current')
hwSlotConnectNumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 32, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwSlotConnectNumSlot"))
if mibBuilder.loadTexts: hwSlotConnectNumEntry.setStatus('current')
hwSlotConnectNumSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 32, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotConnectNumSlot.setStatus('current')
hwSlotConnectNumOnlineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 32, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotConnectNumOnlineNum.setStatus('current')
hwSlotConnectNumMaxOnlineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 32, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotConnectNumMaxOnlineNum.setStatus('current')
hwSlotConnectNumMaxOnlineAcctReadyNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 32, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotConnectNumMaxOnlineAcctReadyNum.setStatus('current')
hwSlotCardConnectNumTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33), )
if mibBuilder.loadTexts: hwSlotCardConnectNumTable.setStatus('current')
hwSlotCardConnectNumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwSlotCardConnectNumSlot"), (0, "HUAWEI-AAA-MIB", "hwSlotCardConnectNumCard"))
if mibBuilder.loadTexts: hwSlotCardConnectNumEntry.setStatus('current')
hwSlotCardConnectNumSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotCardConnectNumSlot.setStatus('current')
hwSlotCardConnectNumCard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotCardConnectNumCard.setStatus('current')
hwSlotCardConnectNumOnlineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotCardConnectNumOnlineNum.setStatus('current')
hwSlotCardConnectNumIPv4OnlineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotCardConnectNumIPv4OnlineNum.setStatus('current')
hwSlotCardConnectNumIPv6OnlineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotCardConnectNumIPv6OnlineNum.setStatus('current')
hwSlotCardConnectNumDualOnlineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotCardConnectNumDualOnlineNum.setStatus('current')
hwSlotCardConnectNumNoAuthNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotCardConnectNumNoAuthNum.setStatus('current')
hwSlotCardConnectNumPPPAuthNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotCardConnectNumPPPAuthNum.setStatus('current')
hwSlotCardConnectNum8021xAuthNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotCardConnectNum8021xAuthNum.setStatus('current')
hwSlotCardConnectNumWebAuthNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotCardConnectNumWebAuthNum.setStatus('current')
hwSlotCardConnectNumBindAuthNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotCardConnectNumBindAuthNum.setStatus('current')
hwSlotCardConnectNumFastAuthNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotCardConnectNumFastAuthNum.setStatus('current')
hwSlotCardConnectNumWlanAuthNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotCardConnectNumWlanAuthNum.setStatus('current')
hwSlotCardConnectNumAdminAuthNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotCardConnectNumAdminAuthNum.setStatus('current')
hwSlotCardConnectNumTunnelAuthNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotCardConnectNumTunnelAuthNum.setStatus('current')
hwSlotCardConnectNumMIPAuthNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 33, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotCardConnectNumMIPAuthNum.setStatus('current')
hwOfflineReasonStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 34), )
if mibBuilder.loadTexts: hwOfflineReasonStatTable.setStatus('current')
hwOfflineReasonStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 34, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwOfflineReason"))
if mibBuilder.loadTexts: hwOfflineReasonStatEntry.setStatus('current')
hwOfflineReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 34, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOfflineReason.setStatus('current')
hwOfflineReasonStatistic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 34, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOfflineReasonStatistic.setStatus('current')
hwOnlineFailReasonStatistic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 34, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOnlineFailReasonStatistic.setStatus('current')
hwMulticastListTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 35), )
if mibBuilder.loadTexts: hwMulticastListTable.setStatus('current')
hwMulticastListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 35, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwMulticastListIndex"))
if mibBuilder.loadTexts: hwMulticastListEntry.setStatus('current')
hwMulticastListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 35, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMulticastListIndex.setStatus('current')
hwMulticastListName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 35, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMulticastListName.setStatus('current')
hwMulticastListSourceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 35, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMulticastListSourceIp.setStatus('current')
hwMulticastListSourceIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 35, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMulticastListSourceIpMask.setStatus('current')
hwMulticastListGroupIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 35, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMulticastListGroupIp.setStatus('current')
hwMulticastListGroupIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 35, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMulticastListGroupIpMask.setStatus('current')
hwMulticastListVpnInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 35, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMulticastListVpnInstance.setStatus('current')
hwMulticastListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 35, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMulticastListRowStatus.setStatus('current')
hwMulticastProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 36), )
if mibBuilder.loadTexts: hwMulticastProfileTable.setStatus('current')
hwMulticastProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 36, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwMulticastProfileIndex"))
if mibBuilder.loadTexts: hwMulticastProfileEntry.setStatus('current')
hwMulticastProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 36, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMulticastProfileIndex.setStatus('current')
hwMulticastProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 36, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMulticastProfileName.setStatus('current')
hwMulticastProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 36, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMulticastProfileRowStatus.setStatus('current')
hwMulticastProfileExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 37), )
if mibBuilder.loadTexts: hwMulticastProfileExtTable.setStatus('current')
hwMulticastProfileExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 37, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwMulticastProfileIndex"), (0, "HUAWEI-AAA-MIB", "hwMulticastListIndex"))
if mibBuilder.loadTexts: hwMulticastProfileExtEntry.setStatus('current')
hwMulticastListBindName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 37, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMulticastListBindName.setStatus('current')
hwMulticastProfileExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 37, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMulticastProfileExtRowStatus.setStatus('current')
hwServiceSchemeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38), )
if mibBuilder.loadTexts: hwServiceSchemeTable.setStatus('current')
hwServiceSchemeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwServiceSchemeName"))
if mibBuilder.loadTexts: hwServiceSchemeEntry.setStatus('current')
hwServiceSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwServiceSchemeName.setStatus('current')
hwServiceSchemeNextHopIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwServiceSchemeNextHopIp.setStatus('current')
hwServiceSchemeUserPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwServiceSchemeUserPriority.setStatus('current')
hwServiceSchemeIdleCutTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwServiceSchemeIdleCutTime.setStatus('current')
hwServiceSchemeIdleCutFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 768000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwServiceSchemeIdleCutFlow.setStatus('current')
hwServiceSchemeDnsFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38, 1, 15), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwServiceSchemeDnsFirst.setStatus('current')
hwServiceSchemeDnsSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38, 1, 16), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwServiceSchemeDnsSecond.setStatus('current')
hwSrvSchemeAdminUserPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSrvSchemeAdminUserPriority.setStatus('current')
hwSrvSchemeIpPoolOneName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSrvSchemeIpPoolOneName.setStatus('current')
hwSrvSchemeIpPoolTwoName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSrvSchemeIpPoolTwoName.setStatus('current')
hwSrvSchemeIpPoolThreeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSrvSchemeIpPoolThreeName.setStatus('current')
hwServiceSchemeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwServiceSchemeRowStatus.setStatus('current')
hwServiceSchemeIdleCutType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("both", 3), ("none", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwServiceSchemeIdleCutType.setStatus('current')
hwServiceSchemeIdleCutFlowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38, 1, 53), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwServiceSchemeIdleCutFlowValue.setStatus('current')
hwLocalAuthorize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38, 1, 54), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLocalAuthorize.setStatus('current')
hwRemoteAuthorize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 38, 1, 55), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRemoteAuthorize.setStatus('current')
hwDhcpOpt121RouteTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 39), )
if mibBuilder.loadTexts: hwDhcpOpt121RouteTable.setStatus('current')
hwDhcpOpt121RouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 39, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwDomainName"), (0, "HUAWEI-AAA-MIB", "hwDhcpOpt121RouteDestIp"), (0, "HUAWEI-AAA-MIB", "hwDhcpOpt121RouteMask"), (0, "HUAWEI-AAA-MIB", "hwDhcpOpt121RouteNextHop"))
if mibBuilder.loadTexts: hwDhcpOpt121RouteEntry.setStatus('current')
hwDhcpOpt121RouteDestIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 39, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDhcpOpt121RouteDestIp.setStatus('current')
hwDhcpOpt121RouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 39, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDhcpOpt121RouteMask.setStatus('current')
hwDhcpOpt121RouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 39, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDhcpOpt121RouteNextHop.setStatus('current')
hwDhcpOpt121RouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 39, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDhcpOpt121RouteRowStatus.setStatus('current')
hwAccessDelayPerSlotTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 40), )
if mibBuilder.loadTexts: hwAccessDelayPerSlotTable.setStatus('current')
hwAccessDelayPerSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 40, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwAccessDelayPerSlotSlot"))
if mibBuilder.loadTexts: hwAccessDelayPerSlotEntry.setStatus('current')
hwAccessDelayPerSlotSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 40, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAccessDelayPerSlotSlot.setStatus('current')
hwAccessDelayPerSlotTransitionStep = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 40, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 262144))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAccessDelayPerSlotTransitionStep.setStatus('current')
hwAccessDelayPerSlotMaxTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 40, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2550))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAccessDelayPerSlotMaxTime.setStatus('current')
hwAccessDelayPerSlotMinTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 40, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2550))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAccessDelayPerSlotMinTime.setStatus('current')
hwAccessDelayPerSlotRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 40, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAccessDelayPerSlotRowStatus.setStatus('current')
hwVpnAccessUserStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 41), )
if mibBuilder.loadTexts: hwVpnAccessUserStatTable.setStatus('current')
hwVpnAccessUserStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 41, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwUserType"), (0, "HUAWEI-AAA-MIB", "hwVpnAccessUserStatVpnName"))
if mibBuilder.loadTexts: hwVpnAccessUserStatEntry.setStatus('current')
hwUserType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 41, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("pppoe", 1), ("pppoa", 2), ("dhcp", 3), ("lns", 4), ("lac", 5), ("ipv4", 6), ("ipv6", 7), ("dualStack", 8), ("all", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserType.setStatus('current')
hwVpnAccessUserStatVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 41, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnAccessUserStatVpnName.setStatus('current')
hwVpnAccessUserStatUserStat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 41, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnAccessUserStatUserStat.setStatus('current')
hwInterfaceAccessUserStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 42), )
if mibBuilder.loadTexts: hwInterfaceAccessUserStatTable.setStatus('current')
hwInterfaceAccessUserStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 42, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwUserType"), (0, "HUAWEI-AAA-MIB", "hwInterfaceAccessUserStatInterfaceIndex"))
if mibBuilder.loadTexts: hwInterfaceAccessUserStatEntry.setStatus('current')
hwInterfaceAccessUserStatInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 42, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwInterfaceAccessUserStatInterfaceIndex.setStatus('current')
hwInterfaceAccessUserStatUserStat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 42, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwInterfaceAccessUserStatUserStat.setStatus('current')
hwDomainAccessUserStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 43), )
if mibBuilder.loadTexts: hwDomainAccessUserStatTable.setStatus('current')
hwDomainAccessUserStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 43, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwUserType"), (0, "HUAWEI-AAA-MIB", "hwDomainName"))
if mibBuilder.loadTexts: hwDomainAccessUserStatEntry.setStatus('current')
hwDomainAccessUserStatUserStat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 43, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainAccessUserStatUserStat.setStatus('current')
hwSlotAccessUserStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 44), )
if mibBuilder.loadTexts: hwSlotAccessUserStatTable.setStatus('current')
hwSlotAccessUserStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 44, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwUserType"), (0, "HUAWEI-AAA-MIB", "hwSlotAccessUserStatSlot"))
if mibBuilder.loadTexts: hwSlotAccessUserStatEntry.setStatus('current')
hwSlotAccessUserStatSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 44, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotAccessUserStatSlot.setStatus('current')
hwSlotAccessUserStatUserStat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 44, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotAccessUserStatUserStat.setStatus('current')
hwDomainIncludePoolGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 45), )
if mibBuilder.loadTexts: hwDomainIncludePoolGroupTable.setStatus('current')
hwDomainIncludePoolGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 45, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwDomainName"), (0, "HUAWEI-AAA-MIB", "hwDomainIncludeIPPoolGroupName"))
if mibBuilder.loadTexts: hwDomainIncludePoolGroupEntry.setStatus('current')
hwDomainIncludeIPPoolGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 45, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIncludeIPPoolGroupName.setStatus('current')
hwDomainIncludeIPPoolGroupRowStates = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 45, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDomainIncludeIPPoolGroupRowStates.setStatus('current')
hwDomainIPPoolMoveToTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 46), )
if mibBuilder.loadTexts: hwDomainIPPoolMoveToTable.setStatus('current')
hwDomainIPPoolMoveToEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 46, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwDomainName"), (0, "HUAWEI-AAA-MIB", "hwDomainIncludeIPPoolName"))
if mibBuilder.loadTexts: hwDomainIPPoolMoveToEntry.setStatus('current')
hwDomainIncludeIPPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 46, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDomainIncludeIPPoolName.setStatus('current')
hwDomainIncludeIPPoolMoveto = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 46, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDomainIncludeIPPoolMoveto.setStatus('current')
hwDomainExt2Table = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 47), )
if mibBuilder.loadTexts: hwDomainExt2Table.setStatus('current')
hwDomainExt2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 47, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwDomainName"))
if mibBuilder.loadTexts: hwDomainExt2Entry.setStatus('current')
hwRedKeyUserMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 47, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRedKeyUserMac.setStatus('current')
hwIfUserMacSimple = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 47, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfUserMacSimple.setStatus('current')
hwPoolLowerLimitWarningThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 47, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 99), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPoolLowerLimitWarningThreshold.setStatus('current')
hwIPv6PoolLowerLimitWarningThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 47, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 99), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPv6PoolLowerLimitWarningThreshold.setStatus('current')
hwAAADomainInboundQoSProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 47, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAAADomainInboundQoSProfile.setStatus('current')
hwAAADomainOutboundQoSProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 47, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAAADomainOutboundQoSProfile.setStatus('current')
hwAAADomainInboundVPNInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 47, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAAADomainInboundVPNInstance.setStatus('current')
hwAAAOnlineFailRecordTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48), )
if mibBuilder.loadTexts: hwAAAOnlineFailRecordTable.setStatus('current')
hwAAAOnlineFailRecordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwAAAOnlineFailIndex"))
if mibBuilder.loadTexts: hwAAAOnlineFailRecordEntry.setStatus('current')
hwAAAOnlineFailIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAAAOnlineFailIndex.setStatus('current')
hwUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 253))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserName.setStatus('current')
hwUserDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserDomainName.setStatus('current')
hwUserMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserMAC.setStatus('current')
hwUserAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserAccessType.setStatus('current')
hwUserInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserInterface.setStatus('current')
hwUserAccessPVC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserAccessPVC.setStatus('current')
hwUserAccessPeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserAccessPeVlan.setStatus('current')
hwUserAccessCeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserAccessCeVlan.setStatus('current')
hwUserIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserIPAddress.setStatus('current')
hwUserIPv6NDRAPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 11), Ipv6AddressPrefix()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserIPv6NDRAPrefix.setStatus('current')
hwUserIPv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 12), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserIPv6Address.setStatus('current')
hwUserIPv6PDPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 13), Ipv6AddressPrefix()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserIPv6PDPrefix.setStatus('current')
hwUserIPv6PDPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserIPv6PDPrefixLength.setStatus('current')
hwUserID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserID.setStatus('current')
hwUserAuthenState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))).clone(namedValues=NamedValues(("authIdle", 0), ("authWait", 1), ("authed", 2), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserAuthenState.setStatus('current')
hwUserAcctState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5, 6, 7, 8, 12, 255))).clone(namedValues=NamedValues(("acctIdle", 3), ("acctReady", 4), ("acctStartWait", 5), ("acctAccting", 6), ("acctLeavingFlowQuery", 7), ("acctStopWait", 8), ("acctSendForceStopWait", 12), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserAcctState.setStatus('current')
hwUserAuthorState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(9, 10, 11, 255))).clone(namedValues=NamedValues(("authorIdle", 9), ("authorUserAckWait", 10), ("authorServerAckWait", 11), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserAuthorState.setStatus('current')
hwUserLoginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 19), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserLoginTime.setStatus('current')
hwOnlineFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOnlineFailReason.setStatus('current')
hwReplyMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 48, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwReplyMessage.setStatus('current')
hwUserLogTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 49))
hwUserLogEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 49, 1))
hwUserLogAccess = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 49, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUserLogAccess.setStatus('current')
hwUserLogIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 49, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUserLogIPAddress.setStatus('current')
hwUserLogPort = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 49, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUserLogPort.setStatus('current')
hwUserLogVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 49, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUserLogVersion.setStatus('current')
hwShowUserLogStatistic = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 49, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwShowUserLogStatistic.setStatus('current')
hwResetUserLogStatistic = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 49, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("reset", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwResetUserLogStatistic.setStatus('current')
hwReauthorizeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 50), )
if mibBuilder.loadTexts: hwReauthorizeTable.setStatus('current')
hwReauthorizeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 50, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwReauthorizeUsername"))
if mibBuilder.loadTexts: hwReauthorizeEntry.setStatus('current')
hwReauthorizeUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 50, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 253))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwReauthorizeUsername.setStatus('current')
hwReauthorizeUsergroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 50, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwReauthorizeUsergroup.setStatus('current')
hwUserGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51), )
if mibBuilder.loadTexts: hwUserGroupTable.setStatus('current')
hwUserGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwUserGroupIndex"))
if mibBuilder.loadTexts: hwUserGroupEntry.setStatus('current')
hwUserGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserGroupIndex.setStatus('current')
hwUserGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwUserGroupName.setStatus('current')
hwAclId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAclId.setStatus('current')
hwQoSProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwQoSProfileName.setStatus('current')
hwInterIsolateFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwInterIsolateFlag.setStatus('current')
hwInnerIsolateFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwInnerIsolateFlag.setStatus('current')
hwUserGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwUserGroupRowStatus.setStatus('current')
hwUserVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwUserVlan.setStatus('current')
hw8021pRemark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hw8021pRemark.setStatus('current')
hwDscpRemark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDscpRemark.setStatus('current')
hwExpRemark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwExpRemark.setStatus('current')
hwLpRemark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLpRemark.setStatus('current')
hwUserGroupCarCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 13), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUserGroupCarCir.setStatus('current')
hwUserGroupCarPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 14), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUserGroupCarPir.setStatus('current')
hwUserGroupCarCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 15), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUserGroupCarCbs.setStatus('current')
hwUserGroupCarPbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 16), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUserGroupCarPbs.setStatus('current')
hwUserGroupEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUserGroupEnable.setStatus('current')
hwUserGroupCarInBoundCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 18), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUserGroupCarInBoundCir.setStatus('current')
hwUserGroupCarInBoundPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 19), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUserGroupCarInBoundPir.setStatus('current')
hwUserGroupCarInBoundCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 20), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUserGroupCarInBoundCbs.setStatus('current')
hwUserGroupCarInBoundPbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 21), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUserGroupCarInBoundPbs.setStatus('current')
hwUserGroupUserVlanPool = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 51, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwUserGroupUserVlanPool.setStatus('current')
hwAAAOfflineRecordTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 52), )
if mibBuilder.loadTexts: hwAAAOfflineRecordTable.setStatus('current')
hwAAAOfflineRecordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 52, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwAAAOfflineIndex"))
if mibBuilder.loadTexts: hwAAAOfflineRecordEntry.setStatus('current')
hwAAAOfflineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 52, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAAAOfflineIndex.setStatus('current')
hwOfflineRecordUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 52, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 253))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOfflineRecordUserName.setStatus('current')
hwOfflineRecordDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 52, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOfflineRecordDomainName.setStatus('current')
hwOfflineRecordUserMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 52, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOfflineRecordUserMAC.setStatus('current')
hwOfflineRecordAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 52, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOfflineRecordAccessType.setStatus('current')
hwOfflineRecordInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 52, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOfflineRecordInterface.setStatus('current')
hwOfflineRecordAccessPeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 52, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOfflineRecordAccessPeVlan.setStatus('current')
hwOfflineRecordAccessCeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 52, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOfflineRecordAccessCeVlan.setStatus('current')
hwOfflineRecordIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 52, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOfflineRecordIPAddress.setStatus('current')
hwOfflineRecordUserID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 52, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOfflineRecordUserID.setStatus('current')
hwOfflineRecordUserLoginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 52, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOfflineRecordUserLoginTime.setStatus('current')
hwOfflineRecordUserLogoutTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 52, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOfflineRecordUserLogoutTime.setStatus('current')
hwOfflineRecordOfflineReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 52, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOfflineRecordOfflineReason.setStatus('current')
hwGlobalDhcpOpt64SepAndSeg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 53), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwGlobalDhcpOpt64SepAndSeg.setStatus('current')
hwGlobalDhcpServerAck = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 54), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwGlobalDhcpServerAck.setStatus('current')
hwAuthEventCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 55), )
if mibBuilder.loadTexts: hwAuthEventCfgTable.setStatus('current')
hwAuthEventCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 55, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwAuthEventPortIndex"))
if mibBuilder.loadTexts: hwAuthEventCfgEntry.setStatus('current')
hwAuthEventPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 55, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAuthEventPortIndex.setStatus('current')
hwAuthEventAuthFailResponseFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 55, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disabel", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAuthEventAuthFailResponseFail.setStatus('current')
hwAuthEventAuthFailVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 55, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAuthEventAuthFailVlan.setStatus('current')
hwAuthEventAuthenServerDownResponseFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 55, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAuthEventAuthenServerDownResponseFail.setStatus('current')
hwAuthEventAuthenServerDownVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 55, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAuthEventAuthenServerDownVlan.setStatus('current')
hwAuthEventClientNoResponseVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 55, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAuthEventClientNoResponseVlan.setStatus('current')
hwAuthEventPreAuthVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 55, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAuthEventPreAuthVlan.setStatus('current')
hwAuthEventAuthFailUserGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 55, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAuthEventAuthFailUserGroup.setStatus('current')
hwAuthEventAuthenServerDownUserGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 55, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAuthEventAuthenServerDownUserGroup.setStatus('current')
hwAuthEventClientNoResponseUserGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 55, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAuthEventClientNoResponseUserGroup.setStatus('current')
hwAuthEventPreAuthUserGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 55, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAuthEventPreAuthUserGroup.setStatus('current')
hwWlanInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 56), )
if mibBuilder.loadTexts: hwWlanInterfaceTable.setStatus('current')
hwWlanInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 56, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwWlanInterfaceIndex"))
if mibBuilder.loadTexts: hwWlanInterfaceEntry.setStatus('current')
hwWlanInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 56, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanInterfaceIndex.setStatus('current')
hwWlanInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 56, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanInterfaceName.setStatus('current')
hwWlanInterfaceDomainNameDelimiter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 56, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanInterfaceDomainNameDelimiter.setStatus('current')
hwWlanInterfaceDomainNameSecurityDelimiter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 56, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanInterfaceDomainNameSecurityDelimiter.setStatus('current')
hwWlanInterfaceDomainNameParseDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 56, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("lefttoright", 0), ("righttoleft", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanInterfaceDomainNameParseDirection.setStatus('current')
hwWlanInterfaceDomainNameLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 56, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("beforedelimiter", 0), ("afterdelimiter", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanInterfaceDomainNameLocation.setStatus('current')
hwAuthorCmdTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 57), )
if mibBuilder.loadTexts: hwAuthorCmdTable.setStatus('current')
hwAuthorCmdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 57, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwAuthorSchemeName"), (0, "HUAWEI-AAA-MIB", "hwAuthorCmdLevel"))
if mibBuilder.loadTexts: hwAuthorCmdEntry.setStatus('current')
hwAuthorCmdLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 57, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAuthorCmdLevel.setStatus('current')
hwAuthorCmdMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 57, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("hwtacacs", 0), ("hwtacacsnone", 1), ("hwtacacslocal", 2), ("hwtacacslocalnone", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAuthorCmdMode.setStatus('current')
hwAuthorCmdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 57, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAuthorCmdRowStatus.setStatus('current')
hwAAARateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 58), )
if mibBuilder.loadTexts: hwAAARateTable.setStatus('current')
hwAAARateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 58, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwAAARateDirection"), (0, "HUAWEI-AAA-MIB", "hwAAARateType"))
if mibBuilder.loadTexts: hwAAARateEntry.setStatus('current')
hwAAARateDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 58, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAAARateDirection.setStatus('current')
hwAAARateType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 58, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAAARateType.setStatus('current')
hwAAARateRealPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 58, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAAARateRealPeak.setStatus('current')
hwAAARateRealAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 58, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAAARateRealAverage.setStatus('current')
hwAAARateRealUsedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 58, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAAARateRealUsedCount.setStatus('current')
hwAAARateRealPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 58, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAAARateRealPercent.setStatus('current')
hwLocalUserPwPolicyAdmin = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 59))
hwLocalUserPwPolicyAdminEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 59, 1))
hwAdminEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 59, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAdminEnable.setStatus('current')
hwAdminExpire = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 59, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAdminExpire.setStatus('current')
hwAdminPwHistroyRecordNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 59, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAdminPwHistroyRecordNum.setStatus('current')
hwAdminAlertBefore = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 59, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAdminAlertBefore.setStatus('current')
hwAdminAlertOrginal = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 59, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAdminAlertOrginal.setStatus('current')
hwLocalUserPwPolicyAcc = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 60))
hwLocalUserPwPolicyAccEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 60, 1))
hwAccEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 60, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAccEnable.setStatus('current')
hwAccPwHistroyRecordNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 60, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAccPwHistroyRecordNum.setStatus('current')
hwAAADomainIPPoolTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 61), )
if mibBuilder.loadTexts: hwAAADomainIPPoolTable.setStatus('current')
hwAAADomainIPPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 61, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwDomainName"), (0, "HUAWEI-AAA-MIB", "hwAAADomainIPPoolName"))
if mibBuilder.loadTexts: hwAAADomainIPPoolEntry.setStatus('current')
hwAAADomainIPPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 61, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAAADomainIPPoolName.setStatus('current')
hwAAADomainIPPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 61, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAAADomainIPPoolIndex.setStatus('current')
hwAAADomainIPPoolConstantIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 61, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAAADomainIPPoolConstantIndex.setStatus('current')
hwAAADomainIPPoolPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 61, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAAADomainIPPoolPosition.setStatus('current')
hwAAADomainIPPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 61, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAAADomainIPPoolRowStatus.setStatus('current')
userAuthenProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62), )
if mibBuilder.loadTexts: userAuthenProfileTable.setStatus('current')
userAuthenProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "userAuthenProfileName"))
if mibBuilder.loadTexts: userAuthenProfileEntry.setStatus('current')
userAuthenProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userAuthenProfileName.setStatus('current')
userAuthenProfileDot1xAccessProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileDot1xAccessProfileName.setStatus('current')
userAuthenProfileMacAuthenAccessProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileMacAuthenAccessProfileName.setStatus('current')
userAuthenProfilePortalAccessProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfilePortalAccessProfileName.setStatus('current')
userAuthenProfileSingleAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileSingleAccess.setStatus('current')
userAuthenProfilePreAuthenServiceSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfilePreAuthenServiceSchemeName.setStatus('current')
userAuthenProfilePreAuthenUserGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfilePreAuthenUserGroupName.setStatus('current')
userAuthenProfilePreAuthenVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfilePreAuthenVLAN.setStatus('current')
userAuthenProfileAuthenFailAuthorServiceSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileAuthenFailAuthorServiceSchemeName.setStatus('current')
userAuthenProfileAuthenFailAuthorUserGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileAuthenFailAuthorUserGroupName.setStatus('current')
userAuthenProfileAuthenFailAuthorVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileAuthenFailAuthorVLAN.setStatus('current')
userAuthenProfileAuthenServerDownServiceSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileAuthenServerDownServiceSchemeName.setStatus('current')
userAuthenProfileAuthenServerDownUserGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileAuthenServerDownUserGroupName.setStatus('current')
userAuthenProfileAuthenServerDownVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileAuthenServerDownVLAN.setStatus('current')
userAuthenProfileAuthenServerDownResponseSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 15), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileAuthenServerDownResponseSuccess.setStatus('current')
userAuthenProfileAuthenServerUpReauthen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 16), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileAuthenServerUpReauthen.setStatus('current')
userAuthenProfileMacAuthenFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 17), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileMacAuthenFirst.setStatus('current')
userAuthenProfileMACBypass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 18), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileMACBypass.setStatus('current')
userAuthenProfileDot1xForceDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileDot1xForceDomain.setStatus('current')
userAuthenProfileMACAuthenForceDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileMACAuthenForceDomain.setStatus('current')
userAuthenProfilePortalForceDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfilePortalForceDomain.setStatus('current')
userAuthenProfileDot1xDefaultDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileDot1xDefaultDomain.setStatus('current')
userAuthenProfileMACAuthenDefaultDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileMACAuthenDefaultDomain.setStatus('current')
userAuthenProfilePortalDefaultDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfilePortalDefaultDomain.setStatus('current')
userAuthenProfileDefaultDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileDefaultDomain.setStatus('current')
userAuthenProfileForceDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 26), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileForceDomain.setStatus('current')
userAuthenProfileDomainNameDelimiter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 27), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileDomainNameDelimiter.setStatus('current')
userAuthenProfileDomainNameLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("domainnamepositionahead", 0), ("domainnamepositionbehind", 1), ("domainnamepositioninvalid", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileDomainNameLocation.setStatus('current')
userAuthenProfileDomainNameParseDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("domainparselefttoright", 0), ("domainparserighttoleft", 1), ("domainparseinvalid", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileDomainNameParseDirection.setStatus('current')
userAuthenProfileSecurityNameDelimiter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 30), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileSecurityNameDelimiter.setStatus('current')
userAuthenProfilePreAuthenReAuthenTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(30, 7200), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfilePreAuthenReAuthenTimer.setStatus('current')
userAuthenProfileAuthenFailReAuthenTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(30, 7200), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileAuthenFailReAuthenTimer.setStatus('current')
userAuthenProfilePreAuthenAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(60, 4294860), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfilePreAuthenAgingTime.setStatus('current')
userAuthenProfileAuthenFailAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(60, 4294860), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileAuthenFailAgingTime.setStatus('current')
userAuthenProfileFreeRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 35), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileFreeRuleName.setStatus('current')
userAuthenProfileAuthenSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 36), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileAuthenSchemeName.setStatus('current')
userAuthenProfileAuthorSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 37), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileAuthorSchemeName.setStatus('current')
userAuthenProfileAcctSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 38), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileAcctSchemeName.setStatus('current')
userAuthenProfileServiceSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 39), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileServiceSchemeName.setStatus('current')
userAuthenProfileUserGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 40), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileUserGroupName.setStatus('current')
userAuthenProfileRadiusServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 41), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileRadiusServerName.setStatus('current')
userAuthenProfileHwtacacsServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 42), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileHwtacacsServerName.setStatus('current')
userAuthenProfileAuthenticationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("singleterminal", 0), ("singlevoicewithdata", 1), ("multishare", 2), ("multiterminal", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileAuthenticationMode.setStatus('current')
userAuthenProfileMaxUser = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 44), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileMaxUser.setStatus('current')
userAuthenProfileArpDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 45), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileArpDetect.setStatus('current')
userAuthenProfileArpDetectTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 7200))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileArpDetectTimer.setStatus('current')
userAuthenProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 47), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileRowStatus.setStatus('current')
userAuthenProfilePermitDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 48), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 259))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfilePermitDomain.setStatus('current')
userAuthenProfileAuthenticationMaxUser = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileAuthenticationMaxUser.setStatus('current')
userAuthenProfileAuthenFailAuthorResponseSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 62, 1, 50), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenProfileAuthenFailAuthorResponseSuccess.setStatus('current')
userAuthenticationFreeRuleTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 63), )
if mibBuilder.loadTexts: userAuthenticationFreeRuleTable.setStatus('current')
userAuthenticationFreeRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 63, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "userAuthenticationFreeRuleName"))
if mibBuilder.loadTexts: userAuthenticationFreeRuleEntry.setStatus('current')
userAuthenticationFreeRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 63, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userAuthenticationFreeRuleName.setStatus('current')
userAuthenticationFreeRuleACLNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 63, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(6000, 6031), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenticationFreeRuleACLNumber.setStatus('current')
userAuthenticationFreeRuleIPv6ACLNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 63, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3000, 3031), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenticationFreeRuleIPv6ACLNumber.setStatus('current')
userAuthenticationFreeRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 63, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userAuthenticationFreeRuleRowStatus.setStatus('current')
hwDot1xAccessProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64), )
if mibBuilder.loadTexts: hwDot1xAccessProfileTable.setStatus('current')
hwDot1xAccessProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwDot1xAccessProfileName"))
if mibBuilder.loadTexts: hwDot1xAccessProfileEntry.setStatus('current')
hwDot1xAccessProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xAccessProfileName.setStatus('current')
hwDot1xAccessProfileGuestAuthorServiceSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileGuestAuthorServiceSchemeName.setStatus('current')
hwDot1xAccessProfileGuestAuthorUserGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileGuestAuthorUserGroupName.setStatus('current')
hwDot1xAccessProfileGuestAuthorVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileGuestAuthorVLAN.setStatus('current')
hwDot1xAccessProfileHandshakeSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileHandshakeSwitch.setStatus('current')
hwDot1xAccessProfileHandShakePktType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 20))).clone(namedValues=NamedValues(("default", 1), ("srpsha1", 20)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileHandShakePktType.setStatus('current')
hwDot1xAccessProfileHandshakeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 7200))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileHandshakeInterval.setStatus('current')
hwDot1xAccessProfileIfEAPEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xAccessProfileIfEAPEnd.setStatus('current')
hwDot1xAccessProfileEAPEndMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("chap", 1), ("pap", 2), ("eap", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileEAPEndMethod.setStatus('current')
hwDot1xAccessProfileEAPNotifyPktEAPCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileEAPNotifyPktEAPCode.setStatus('current')
hwDot1xAccessProfileEAPNotifyPktEAPType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileEAPNotifyPktEAPType.setStatus('current')
hwDot1xAccessProfileReAuthenEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 12), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileReAuthenEnable.setStatus('current')
hwDot1xAccessProfileReauthenticationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 7200))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileReauthenticationTimeout.setStatus('current')
hwDot1xAccessProfileClientTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileClientTimeout.setStatus('current')
hwDot1xAccessProfileServerTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileServerTimeout.setStatus('current')
hwDot1xAccessProfileTxPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileTxPeriod.setStatus('current')
hwDot1xAccessProfileMaxRetryValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileMaxRetryValue.setStatus('current')
hwDot1xAccessProfileSpeedLimitAuto = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 18), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileSpeedLimitAuto.setStatus('current')
hwDot1xAccessProfileTriggerPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("default", 0), ("arp", 1), ("dhcp", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileTriggerPktType.setStatus('current')
hwDot1xAccessProfileUnicastTrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 20), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileUnicastTrigger.setStatus('current')
hwDot1xAccessProfileURL = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 200))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileURL.setStatus('current')
hwDot1xAccessProfileEthTrunkHandShakePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 7200))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileEthTrunkHandShakePeriod.setStatus('current')
hwDot1xAccessProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 64, 1, 23), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xAccessProfileRowStatus.setStatus('current')
hwMACAuthenAccessProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65), )
if mibBuilder.loadTexts: hwMACAuthenAccessProfileTable.setStatus('current')
hwMACAuthenAccessProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwMACAuthenAccessProfileName"))
if mibBuilder.loadTexts: hwMACAuthenAccessProfileEntry.setStatus('current')
hwMACAuthenAccessProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMACAuthenAccessProfileName.setStatus('current')
hwMACAuthenAccessProfileReAuthenEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1, 2), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACAuthenAccessProfileReAuthenEnable.setStatus('current')
hwMACAuthenAccessProfileReauthenticationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 7200))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACAuthenAccessProfileReauthenticationTimeout.setStatus('current')
hwMACAuthenAccessProfileServerTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACAuthenAccessProfileServerTimeout.setStatus('current')
hwMACAuthenAccessProfileUserNameFixedUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACAuthenAccessProfileUserNameFixedUserName.setStatus('current')
hwMACAuthenAccessProfileFixedPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACAuthenAccessProfileFixedPassword.setStatus('current')
hwMACAuthenAccessProfileMACAddressFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("invalid", 0), ("macAddressWithoutHyphen", 1), ("macAddressWithHyphen", 2), ("fixed", 3), ("option", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACAuthenAccessProfileMACAddressFormat.setStatus('current')
hwMACAuthenAccessProfileMACAddressPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACAuthenAccessProfileMACAddressPassword.setStatus('current')
hwMACAuthenAccessProfileUserNameDHCPOption = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 82))).clone(namedValues=NamedValues(("default", 0), ("dhcpoption", 82)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACAuthenAccessProfileUserNameDHCPOption.setStatus('current')
hwMACAuthenAccessProfileUserNameDHCPOSubOption = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("optionsubinvalid", 0), ("optionsubcircuitid", 1), ("optionremoteid", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACAuthenAccessProfileUserNameDHCPOSubOption.setStatus('current')
hwMACAuthenAccessProfileTriggerPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACAuthenAccessProfileTriggerPktType.setStatus('current')
hwMACAuthenAccessProfileTriggerDHCPOptionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 82))).clone(namedValues=NamedValues(("default", 0), ("optioncode", 82)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACAuthenAccessProfileTriggerDHCPOptionType.setStatus('current')
hwMACAuthenAccessProfileDHCPRelaseOffline = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1, 13), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACAuthenAccessProfileDHCPRelaseOffline.setStatus('current')
hwMACAuthenAccessProfileDHCPRenewReAuthen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1, 14), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACAuthenAccessProfileDHCPRenewReAuthen.setStatus('current')
hwMACAuthenAccessProfilePermitAuthenMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1, 15), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACAuthenAccessProfilePermitAuthenMAC.setStatus('current')
hwMACAuthenAccessProfilePermitAuthenMACMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1, 16), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACAuthenAccessProfilePermitAuthenMACMask.setStatus('current')
hwMACAuthenAccessProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 65, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACAuthenAccessProfileRowStatus.setStatus('current')
hwPortalAccessProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 66), )
if mibBuilder.loadTexts: hwPortalAccessProfileTable.setStatus('current')
hwPortalAccessProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 66, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwPortalAccessProfileName"))
if mibBuilder.loadTexts: hwPortalAccessProfileEntry.setStatus('current')
hwPortalAccessProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 66, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPortalAccessProfileName.setStatus('current')
hwPortalAccessProfileDetectPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 66, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(30, 7200), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortalAccessProfileDetectPeriod.setStatus('current')
hwPortalAccessProfilePortalServerDownServiceSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 66, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortalAccessProfilePortalServerDownServiceSchemeName.setStatus('current')
hwPortalAccessProfilePortalServerDownUserGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 66, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortalAccessProfilePortalServerDownUserGroupName.setStatus('current')
hwPortalAccessProfilePortalServerUpReAuthen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 66, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortalAccessProfilePortalServerUpReAuthen.setStatus('current')
hwPortalAccessProfileAlarmUserLowNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 66, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortalAccessProfileAlarmUserLowNum.setStatus('current')
hwPortalAccessProfileAlarmUserHighNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 66, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortalAccessProfileAlarmUserHighNum.setStatus('current')
hwPortalAccessProfileAuthenNetWork = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 66, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortalAccessProfileAuthenNetWork.setStatus('current')
hwPortalAccessProfileAuthenNetWorkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 66, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortalAccessProfileAuthenNetWorkMask.setStatus('current')
hwPortalAccessProfilePortalServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 66, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortalAccessProfilePortalServerName.setStatus('current')
hwPortalAccessProfilePortalAccessDirect = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 66, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("invalid", 0), ("direct", 2), ("layer3", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortalAccessProfilePortalAccessDirect.setStatus('current')
hwPortalAccessProfileLocalServerEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 66, 1, 12), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortalAccessProfileLocalServerEnable.setStatus('current')
hwPortalAccessProfileLocalServerAnonymous = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 66, 1, 13), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortalAccessProfileLocalServerAnonymous.setStatus('current')
hwPortalAccessProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 66, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortalAccessProfileRowStatus.setStatus('current')
hwPortalAccessProfilePortalBackupServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 66, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortalAccessProfilePortalBackupServerName.setStatus('current')
hwAAAInboundVPNAccessUserStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 67), )
if mibBuilder.loadTexts: hwAAAInboundVPNAccessUserStatTable.setStatus('current')
hwAAAInboundVPNAccessUserStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 67, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "hwAAAInboundVPNUserType"), (0, "HUAWEI-AAA-MIB", "hwAAAInboundVPNName"))
if mibBuilder.loadTexts: hwAAAInboundVPNAccessUserStatEntry.setStatus('current')
hwAAAInboundVPNUserType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 67, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("pppoe", 1), ("pppoa", 2), ("dhcp", 3), ("lns", 4), ("lac", 5), ("ipv4", 6), ("ipv6", 7), ("dualStack", 8), ("all", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAAAInboundVPNUserType.setStatus('current')
hwAAAInboundVPNName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 67, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAAAInboundVPNName.setStatus('current')
hwAAAInboundVPNAccessUserStat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 67, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAAAInboundVPNAccessUserStat.setStatus('current')
userAuthenticationFreeRuleExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 68), )
if mibBuilder.loadTexts: userAuthenticationFreeRuleExtTable.setStatus('current')
userAuthenticationFreeRuleExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 68, 1), ).setIndexNames((0, "HUAWEI-AAA-MIB", "userAuthenticationFreeRuleName"), (0, "HUAWEI-AAA-MIB", "userAuthenticationFreeRuleNumber"))
if mibBuilder.loadTexts: userAuthenticationFreeRuleExtEntry.setStatus('current')
userAuthenticationFreeRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 68, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 129))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userAuthenticationFreeRuleNumber.setStatus('current')
userAuthenticationFreeRuleSourceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 68, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userAuthenticationFreeRuleSourceMode.setStatus('current')
userAuthenticationFreeRuleSourceVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 68, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userAuthenticationFreeRuleSourceVlan.setStatus('current')
userAuthenticationFreeRuleSourceInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 68, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userAuthenticationFreeRuleSourceInterface.setStatus('current')
userAuthenticationFreeRuleSourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 68, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userAuthenticationFreeRuleSourceIP.setStatus('current')
userAuthenticationFreeRuleSourceIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 68, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userAuthenticationFreeRuleSourceIPMask.setStatus('current')
userAuthenticationFreeRuleSourceMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 68, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userAuthenticationFreeRuleSourceMac.setStatus('current')
userAuthenticationFreeRuleDestinationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 68, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userAuthenticationFreeRuleDestinationMode.setStatus('current')
userAuthenticationFreeRuleDestinationIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 68, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userAuthenticationFreeRuleDestinationIP.setStatus('current')
userAuthenticationFreeRuleDestinationIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 68, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userAuthenticationFreeRuleDestinationIPMask.setStatus('current')
userAuthenticationFreeRuleDestinationProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 68, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userAuthenticationFreeRuleDestinationProtocol.setStatus('current')
userAuthenticationFreeRuleDestinationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 68, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userAuthenticationFreeRuleDestinationPort.setStatus('current')
userAuthenticationFreeRuleDestinationUserGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 68, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userAuthenticationFreeRuleDestinationUserGroup.setStatus('current')
userAuthenticationFreeRuleExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 2, 1, 68, 1, 14), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userAuthenticationFreeRuleExtRowStatus.setStatus('current')
hwAaaConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5))
hwAaaCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 1))
hwAaaCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 1, 1)).setObjects(("HUAWEI-AAA-MIB", "hwAuthenSchemeGroup"), ("HUAWEI-AAA-MIB", "hwAcctSchemeGroup"), ("HUAWEI-AAA-MIB", "hwDomainGroup"), ("HUAWEI-AAA-MIB", "hwDomainExtGroup"), ("HUAWEI-AAA-MIB", "hwDomainStatGroup"), ("HUAWEI-AAA-MIB", "hwAuthorSchemeGroup"), ("HUAWEI-AAA-MIB", "hwLocalUserGroup"), ("HUAWEI-AAA-MIB", "hwLocalUserExtGroup"), ("HUAWEI-AAA-MIB", "hwAaaSettingGroup"), ("HUAWEI-AAA-MIB", "hwAaaStatGroup"), ("HUAWEI-AAA-MIB", "hwAccessGroup"), ("HUAWEI-AAA-MIB", "hwAccessExtGroup"), ("HUAWEI-AAA-MIB", "hwAcctSchemeExtGroup"), ("HUAWEI-AAA-MIB", "hwBillPoolGroup"), ("HUAWEI-AAA-MIB", "hwBillTFTPGroup"), ("HUAWEI-AAA-MIB", "hwUclGrpGroup"), ("HUAWEI-AAA-MIB", "hwIpAccessGroup"), ("HUAWEI-AAA-MIB", "hwCutAccessUserGroup"), ("HUAWEI-AAA-MIB", "hwAaaUserPppGroup"), ("HUAWEI-AAA-MIB", "hwAaaUserWebandFastGroup"), ("HUAWEI-AAA-MIB", "hwAaaUserDot1XGroup"), ("HUAWEI-AAA-MIB", "hwAaaUserBindGroup"), ("HUAWEI-AAA-MIB", "hwRecordSchemeGroup"), ("HUAWEI-AAA-MIB", "hwMACAccessGroup"), ("HUAWEI-AAA-MIB", "hwSlotConnectNumGroup"), ("HUAWEI-AAA-MIB", "hwOfflineReasonStatGroup"), ("HUAWEI-AAA-MIB", "hwMulticastListGroup"), ("HUAWEI-AAA-MIB", "hwMulticastProfileGroup"), ("HUAWEI-AAA-MIB", "hwMulticastProfileExtGroup"), ("HUAWEI-AAA-MIB", "hwAaaTrapOidGroup"), ("HUAWEI-AAA-MIB", "hwAaaTrapsNotificationsGroup"), ("HUAWEI-AAA-MIB", "hwLamTrapsNotificationsGroup"), ("HUAWEI-AAA-MIB", "hwObsoleteGroup"), ("HUAWEI-AAA-MIB", "hwServiceSchemeGroup"), ("HUAWEI-AAA-MIB", "hwDhcpOpt121RouteGroup"), ("HUAWEI-AAA-MIB", "hwAccessDelayPerSlotGroup"), ("HUAWEI-AAA-MIB", "hwVpnAccessUserStatGroup"), ("HUAWEI-AAA-MIB", "hwInterfaceAccessUserStatGroup"), ("HUAWEI-AAA-MIB", "hwDomainAccessUserStatGroup"), ("HUAWEI-AAA-MIB", "hwSlotAccessUserStatGroup"), ("HUAWEI-AAA-MIB", "hwReauthorizeGroup"), ("HUAWEI-AAA-MIB", "hwUserLogGroup"), ("HUAWEI-AAA-MIB", "hwGlobalDhcpOpt64SepAndSegGroup"), ("HUAWEI-AAA-MIB", "hwGlobalDhcpServerAckGroup"), ("HUAWEI-AAA-MIB", "hwWlanInterfaceGroup"), ("HUAWEI-AAA-MIB", "hwAuthorCmdGroup"), ("HUAWEI-AAA-MIB", "hwAAARateGroup"), ("HUAWEI-AAA-MIB", "hwLocalUserPwPolicyAdminGroup"), ("HUAWEI-AAA-MIB", "hwLocalUserPwPolicyAccGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAaaCompliance = hwAaaCompliance.setStatus('current')
hwAaaObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2))
hwAuthenSchemeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 1)).setObjects(("HUAWEI-AAA-MIB", "hwAuthenSchemeName"), ("HUAWEI-AAA-MIB", "hwAuthenMethod"), ("HUAWEI-AAA-MIB", "hwAuthenRowStatus"), ("HUAWEI-AAA-MIB", "hwAuthenFailPolicy"), ("HUAWEI-AAA-MIB", "hwAuthenFailDomain"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAuthenSchemeGroup = hwAuthenSchemeGroup.setStatus('current')
hwAcctSchemeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 2)).setObjects(("HUAWEI-AAA-MIB", "hwAcctSchemeName"), ("HUAWEI-AAA-MIB", "hwAccMethod"), ("HUAWEI-AAA-MIB", "hwAcctStartFail"), ("HUAWEI-AAA-MIB", "hwAcctOnlineFail"), ("HUAWEI-AAA-MIB", "hwAccRealTimeInter"), ("HUAWEI-AAA-MIB", "hwAcctRowStatus"), ("HUAWEI-AAA-MIB", "hwAcctRealTimeIntervalUnit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAcctSchemeGroup = hwAcctSchemeGroup.setStatus('current')
hwDomainGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 3)).setObjects(("HUAWEI-AAA-MIB", "hwDomainName"), ("HUAWEI-AAA-MIB", "hwDomainAuthenSchemeName"), ("HUAWEI-AAA-MIB", "hwDomainAcctSchemeName"), ("HUAWEI-AAA-MIB", "hwDomainRadiusGroupName"), ("HUAWEI-AAA-MIB", "hwDomainAccessLimitNum"), ("HUAWEI-AAA-MIB", "hwDomainIfSrcRoute"), ("HUAWEI-AAA-MIB", "hwDomainNextHopIP"), ("HUAWEI-AAA-MIB", "hwDomainIdleCutTime"), ("HUAWEI-AAA-MIB", "hwDomainIdleCutFlow"), ("HUAWEI-AAA-MIB", "hwDomainRowStatus"), ("HUAWEI-AAA-MIB", "hwDomainType"), ("HUAWEI-AAA-MIB", "hwDomainServiceSchemeName"), ("HUAWEI-AAA-MIB", "hwDomainIdleCutType"), ("HUAWEI-AAA-MIB", "hwDomainForcePushUrl"), ("HUAWEI-AAA-MIB", "hwDomainForcePushUrlTemplate"), ("HUAWEI-AAA-MIB", "hwStateBlockFirstTimeRangeName"), ("HUAWEI-AAA-MIB", "hwStateBlockSecondTimeRangeName"), ("HUAWEI-AAA-MIB", "hwStateBlockThirdTimeRangeName"), ("HUAWEI-AAA-MIB", "hwStateBlockForthTimeRangeName"), ("HUAWEI-AAA-MIB", "hwDomainFlowStatistic"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDomainGroup = hwDomainGroup.setStatus('current')
hwDomainExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 4)).setObjects(("HUAWEI-AAA-MIB", "hwDomainPPPURL"), ("HUAWEI-AAA-MIB", "hwIfDomainActive"), ("HUAWEI-AAA-MIB", "hwPriority"), ("HUAWEI-AAA-MIB", "hwWebServerURL"), ("HUAWEI-AAA-MIB", "hwIPPoolOneName"), ("HUAWEI-AAA-MIB", "hwIPPoolTwoName"), ("HUAWEI-AAA-MIB", "hwIPPoolThreeName"), ("HUAWEI-AAA-MIB", "hwTwoLevelAcctRadiusGroupName"), ("HUAWEI-AAA-MIB", "hwVPDNGroupIndex"), ("HUAWEI-AAA-MIB", "hwUclIndex"), ("HUAWEI-AAA-MIB", "hwIfPPPoeURL"), ("HUAWEI-AAA-MIB", "hwUclGroupName"), ("HUAWEI-AAA-MIB", "hwVpdnGroupName"), ("HUAWEI-AAA-MIB", "hwDomainVrf"), ("HUAWEI-AAA-MIB", "hwDomainGre"), ("HUAWEI-AAA-MIB", "hwDomainRenewIPTag"), ("HUAWEI-AAA-MIB", "hwPortalURL"), ("HUAWEI-AAA-MIB", "hwPortalServerIP"), ("HUAWEI-AAA-MIB", "hwRedirectTimesLimit"), ("HUAWEI-AAA-MIB", "hwDot1xTemplate"), ("HUAWEI-AAA-MIB", "hwWebServerIP"), ("HUAWEI-AAA-MIB", "hwWebServerMode"), ("HUAWEI-AAA-MIB", "hwPoolWarningThreshold"), ("HUAWEI-AAA-MIB", "hwTacGroupName"), ("HUAWEI-AAA-MIB", "hwServicePolicyName"), ("HUAWEI-AAA-MIB", "hwCopsGroupSSGType"), ("HUAWEI-AAA-MIB", "hwDomainAuthorSchemeName"), ("HUAWEI-AAA-MIB", "hwDomainQoSProfile"), ("HUAWEI-AAA-MIB", "hwDomainZone"), ("HUAWEI-AAA-MIB", "hwIfL2tpRadiusForce"), ("HUAWEI-AAA-MIB", "hwDownPriority"), ("HUAWEI-AAA-MIB", "hwPPPForceAuthtype"), ("HUAWEI-AAA-MIB", "hwDnsIPAddress"), ("HUAWEI-AAA-MIB", "hwAdminUserPriority"), ("HUAWEI-AAA-MIB", "hwShapingTemplate"), ("HUAWEI-AAA-MIB", "hwDomainDPIPolicyName"), ("HUAWEI-AAA-MIB", "hwCopsGroupSIGType"), ("HUAWEI-AAA-MIB", "hwCopsGroupCIPNType"), ("HUAWEI-AAA-MIB", "hwPCReduceCir"), ("HUAWEI-AAA-MIB", "hwValAcctType"), ("HUAWEI-AAA-MIB", "hwValRadiusServer"), ("HUAWEI-AAA-MIB", "hwValCopsServer"), ("HUAWEI-AAA-MIB", "hwPCReducePir"), ("HUAWEI-AAA-MIB", "hwDomainInboundL2tpQoSProfile"), ("HUAWEI-AAA-MIB", "hwDomainOutboundL2tpQoSProfile"), ("HUAWEI-AAA-MIB", "hwIfMulticastForward"), ("HUAWEI-AAA-MIB", "hwMulticastVirtualSchedulRezCir"), ("HUAWEI-AAA-MIB", "hwMulticastVirtualSchedulRezPir"), ("HUAWEI-AAA-MIB", "hwMaxMulticastListNum"), ("HUAWEI-AAA-MIB", "hwMultiProfile"), ("HUAWEI-AAA-MIB", "hwDomainServiceType"), ("HUAWEI-AAA-MIB", "hwWebServerUrlParameter"), ("HUAWEI-AAA-MIB", "hwWebServerRedirectKeyMscgName"), ("HUAWEI-AAA-MIB", "hwPoratalServerUrlParameter"), ("HUAWEI-AAA-MIB", "hwPoratalServerFirstUrlKeyName"), ("HUAWEI-AAA-MIB", "hwPoratalServerFirstUrlKeyDefaultName"), ("HUAWEI-AAA-MIB", "hwDnsSecondIPAddress"), ("HUAWEI-AAA-MIB", "hwIPv6PoolName"), ("HUAWEI-AAA-MIB", "hwIPv6PrefixshareFlag"), ("HUAWEI-AAA-MIB", "hwUserBasicServiceIPType"), ("HUAWEI-AAA-MIB", "hwPriDnsIPv6Address"), ("HUAWEI-AAA-MIB", "hwSecDnsIPv6Address"), ("HUAWEI-AAA-MIB", "hwDualStackAccountingType"), ("HUAWEI-AAA-MIB", "hwIPv6PoolWarningThreshold"), ("HUAWEI-AAA-MIB", "hwIPv6CPWaitDHCPv6Delay"), ("HUAWEI-AAA-MIB", "hwIPv6ManagedAddressFlag"), ("HUAWEI-AAA-MIB", "hwIPv6CPIFIDAvailable"), ("HUAWEI-AAA-MIB", "hwIPv6OtherFlag"), ("HUAWEI-AAA-MIB", "hwIPv6CPAssignIFID"), ("HUAWEI-AAA-MIB", "hwMultiIPv6ProfileName"), ("HUAWEI-AAA-MIB", "hwWebServerURLSlave"), ("HUAWEI-AAA-MIB", "hwWebServerIPSlave"), ("HUAWEI-AAA-MIB", "hwBindAuthWebIP"), ("HUAWEI-AAA-MIB", "hwBindAuthWebVrf"), ("HUAWEI-AAA-MIB", "hwBindAuthWebIPSlave"), ("HUAWEI-AAA-MIB", "hwBindAuthWebVrfSlave"), ("HUAWEI-AAA-MIB", "hwExtVpdnGroupName"), ("HUAWEI-AAA-MIB", "hwDomainUserGroupName"), ("HUAWEI-AAA-MIB", "hwAFTRName"), ("HUAWEI-AAA-MIB", "hwDomainDhcpOpt64SepAndSeg"), ("HUAWEI-AAA-MIB", "hwDomainDhcpServerAck"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDomainExtGroup = hwDomainExtGroup.setStatus('current')
hwDomainStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 5)).setObjects(("HUAWEI-AAA-MIB", "hwDomainAccessedNum"), ("HUAWEI-AAA-MIB", "hwDomainOnlineNum"), ("HUAWEI-AAA-MIB", "hwDomainOnlinePPPUser"), ("HUAWEI-AAA-MIB", "hwDomainFlowDnByte"), ("HUAWEI-AAA-MIB", "hwDomainFlowDnPkt"), ("HUAWEI-AAA-MIB", "hwDomainFlowUpByte"), ("HUAWEI-AAA-MIB", "hwDomainFlowUpPkt"), ("HUAWEI-AAA-MIB", "hwDomainIPTotalNum"), ("HUAWEI-AAA-MIB", "hwDomainIPUsedNum"), ("HUAWEI-AAA-MIB", "hwDomainIPConflictNum"), ("HUAWEI-AAA-MIB", "hwDomainIPExcludeNum"), ("HUAWEI-AAA-MIB", "hwDomainIPIdleNum"), ("HUAWEI-AAA-MIB", "hwDomainIPUsedPercent"), ("HUAWEI-AAA-MIB", "hwDomainPPPoENum"), ("HUAWEI-AAA-MIB", "hwDomainIPv6AddressTotalNum"), ("HUAWEI-AAA-MIB", "hwDomainIPv6AddressUsedNum"), ("HUAWEI-AAA-MIB", "hwDomainIPv6AddressFreeNum"), ("HUAWEI-AAA-MIB", "hwDomainIPv6AddressConflictNum"), ("HUAWEI-AAA-MIB", "hwDomainIPv6AddressExcludeNum"), ("HUAWEI-AAA-MIB", "hwDomainIPv6AddressUsedPercent"), ("HUAWEI-AAA-MIB", "hwDomainNDRAPrefixTotalNum"), ("HUAWEI-AAA-MIB", "hwDomainNDRAPrefixUsedNum"), ("HUAWEI-AAA-MIB", "hwDomainNDRAPrefixFreeNum"), ("HUAWEI-AAA-MIB", "hwDomainNDRAPrefixConflictNum"), ("HUAWEI-AAA-MIB", "hwDomainNDRAPrefixExcludeNum"), ("HUAWEI-AAA-MIB", "hwDomainNDRAPrefixUsedPercent"), ("HUAWEI-AAA-MIB", "hwDomainPDPrefixTotalNum"), ("HUAWEI-AAA-MIB", "hwDomainPDPrefixUsedNum"), ("HUAWEI-AAA-MIB", "hwDomainPDPrefixFreeNum"), ("HUAWEI-AAA-MIB", "hwDomainPDPrefixConflictNum"), ("HUAWEI-AAA-MIB", "hwDomainPDPrefixExcludeNum"), ("HUAWEI-AAA-MIB", "hwDomainPDPrefixUsedPercent"), ("HUAWEI-AAA-MIB", "hwDomainIPv6FlowDnByte"), ("HUAWEI-AAA-MIB", "hwDomainIPv6FlowDnPkt"), ("HUAWEI-AAA-MIB", "hwDomainIPv6FlowUpByte"), ("HUAWEI-AAA-MIB", "hwDomainIPv6FlowUpPkt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDomainStatGroup = hwDomainStatGroup.setStatus('current')
hwAuthorSchemeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 6)).setObjects(("HUAWEI-AAA-MIB", "hwAuthorSchemeName"), ("HUAWEI-AAA-MIB", "hwAuthorMethod"), ("HUAWEI-AAA-MIB", "hwAuthorRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAuthorSchemeGroup = hwAuthorSchemeGroup.setStatus('current')
hwLocalUserGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 7)).setObjects(("HUAWEI-AAA-MIB", "hwLocalUserName"), ("HUAWEI-AAA-MIB", "hwLocalUserPassword"), ("HUAWEI-AAA-MIB", "hwLocalUserAccessType"), ("HUAWEI-AAA-MIB", "hwLocalUserPriority"), ("HUAWEI-AAA-MIB", "hwftpdirction"), ("HUAWEI-AAA-MIB", "hwQosProfileName"), ("HUAWEI-AAA-MIB", "hwLocalUserRowStatus"), ("HUAWEI-AAA-MIB", "hwLocalUserIpAddress"), ("HUAWEI-AAA-MIB", "hwLocalUserVpnInstance"), ("HUAWEI-AAA-MIB", "hwLocalUserAccessLimitNum"), ("HUAWEI-AAA-MIB", "hwLocalUserPasswordLifetimeMin"), ("HUAWEI-AAA-MIB", "hwLocalUserPasswordLifetimeMax"), ("HUAWEI-AAA-MIB", "hwLocalUserIfAllowWeakPassword"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLocalUserGroup = hwLocalUserGroup.setStatus('current')
hwLocalUserExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 8)).setObjects(("HUAWEI-AAA-MIB", "hwLocalUserState"), ("HUAWEI-AAA-MIB", "hwLocalUserNoCallBackVerify"), ("HUAWEI-AAA-MIB", "hwLocalUserCallBackDialStr"), ("HUAWEI-AAA-MIB", "hwLocalUserBlockFailTimes"), ("HUAWEI-AAA-MIB", "hwLocalUserBlockInterval"), ("HUAWEI-AAA-MIB", "hwLocalUserUserGroup"), ("HUAWEI-AAA-MIB", "hwLocalUserDeviceType"), ("HUAWEI-AAA-MIB", "hwLocalUserExpireDate"), ("HUAWEI-AAA-MIB", "hwLocalUserIdleTimeoutSecond"), ("HUAWEI-AAA-MIB", "hwLocalUserTimeRange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLocalUserExtGroup = hwLocalUserExtGroup.setStatus('current')
hwAaaSettingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 9)).setObjects(("HUAWEI-AAA-MIB", "hwRoamChar"), ("HUAWEI-AAA-MIB", "hwGlobalControl"), ("HUAWEI-AAA-MIB", "hwSystemRecord"), ("HUAWEI-AAA-MIB", "hwOutboundRecord"), ("HUAWEI-AAA-MIB", "hwCmdRecord"), ("HUAWEI-AAA-MIB", "hwPPPUserOfflineStandardize"), ("HUAWEI-AAA-MIB", "hwDomainNameParseDirection"), ("HUAWEI-AAA-MIB", "hwDomainNameLocation"), ("HUAWEI-AAA-MIB", "hwAccessSpeedNumber"), ("HUAWEI-AAA-MIB", "hwAccessSpeedPeriod"), ("HUAWEI-AAA-MIB", "hwRealmNameChar"), ("HUAWEI-AAA-MIB", "hwRealmParseDirection"), ("HUAWEI-AAA-MIB", "hwIPOXpassword"), ("HUAWEI-AAA-MIB", "hwAccessDelayTransitionStep"), ("HUAWEI-AAA-MIB", "hwAccessDelayTime"), ("HUAWEI-AAA-MIB", "hwAccessDelayMinTime"), ("HUAWEI-AAA-MIB", "hwParsePriority"), ("HUAWEI-AAA-MIB", "hwRealmNameLocation"), ("HUAWEI-AAA-MIB", "hwIPOXUsernameOption82"), ("HUAWEI-AAA-MIB", "hwIPOXUsernameIP"), ("HUAWEI-AAA-MIB", "hwIPOXUsernameSysname"), ("HUAWEI-AAA-MIB", "hwIPOXUsernameMAC"), ("HUAWEI-AAA-MIB", "hwDefaultUserName"), ("HUAWEI-AAA-MIB", "hwNasSerial"), ("HUAWEI-AAA-MIB", "hwAAAPasswordRepeatNumber"), ("HUAWEI-AAA-MIB", "hwAAAPasswordRemindDay"), ("HUAWEI-AAA-MIB", "hwOnlineUserNumLowerLimitThreshold"), ("HUAWEI-AAA-MIB", "hwOnlineUserNumUpperLimitThreshold"), ("HUAWEI-AAA-MIB", "hwIPOXpasswordKeyType"), ("HUAWEI-AAA-MIB", "hwReauthorizeEnable"), ("HUAWEI-AAA-MIB", "hwDomainNameDelimiter"), ("HUAWEI-AAA-MIB", "hwDomainNameSecurityDelimiter"), ("HUAWEI-AAA-MIB", "hwGlobalAuthEventAuthFailResponseFail"), ("HUAWEI-AAA-MIB", "hwGlobalAuthEventAuthFailVlan"), ("HUAWEI-AAA-MIB", "hwGlobalAuthEventAuthenServerDownResponseFail"), ("HUAWEI-AAA-MIB", "hwGlobalAuthEventAuthenServerDownVlan"), ("HUAWEI-AAA-MIB", "hwGlobalAuthEventClientNoResponseVlan"), ("HUAWEI-AAA-MIB", "hwGlobalAuthEventPreAuthVlan"), ("HUAWEI-AAA-MIB", "hwGlobalAuthEventAuthFailUserGroup"), ("HUAWEI-AAA-MIB", "hwGlobalAuthEventAuthenServerDownUserGroup"), ("HUAWEI-AAA-MIB", "hwGlobalAuthEventClientNoResponseUserGroup"), ("HUAWEI-AAA-MIB", "hwGlobalAuthEventPreAuthUserGroup"), ("HUAWEI-AAA-MIB", "hwTriggerLoose"), ("HUAWEI-AAA-MIB", "hwOfflineSpeedNumber"), ("HUAWEI-AAA-MIB", "hwAuthorModifyMode"), ("HUAWEI-AAA-MIB", "hwLocalRetryInterval"), ("HUAWEI-AAA-MIB", "hwLocalRetryTime"), ("HUAWEI-AAA-MIB", "hwLocalBlockTime"), ("HUAWEI-AAA-MIB", "hwRemoteRetryInterval"), ("HUAWEI-AAA-MIB", "hwRemoteRetryTime"), ("HUAWEI-AAA-MIB", "hwRemoteBlockTime"), ("HUAWEI-AAA-MIB", "hwBlockDisable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAaaSettingGroup = hwAaaSettingGroup.setStatus('current')
hwAaaStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 10)).setObjects(("HUAWEI-AAA-MIB", "hwTotalOnlineNum"), ("HUAWEI-AAA-MIB", "hwTotalPPPoeOnlineNum"), ("HUAWEI-AAA-MIB", "hwTotalPPPoAOnlineNum"), ("HUAWEI-AAA-MIB", "hwTotalftpOnlineNum"), ("HUAWEI-AAA-MIB", "hwTotalsshOnlineNum"), ("HUAWEI-AAA-MIB", "hwTotaltelnetOnlineNum"), ("HUAWEI-AAA-MIB", "hwTotalVLANOnlineNum"), ("HUAWEI-AAA-MIB", "hwHistoricMaxOnlineNum"), ("HUAWEI-AAA-MIB", "hwResetHistoricMaxOnlineNum"), ("HUAWEI-AAA-MIB", "hwResetOfflineReasonStatistic"), ("HUAWEI-AAA-MIB", "hwResetOnlineFailReasonStatistic"), ("HUAWEI-AAA-MIB", "hwMaxPPPoeOnlineNum"), ("HUAWEI-AAA-MIB", "hwTotalPortalServerUserNum"), ("HUAWEI-AAA-MIB", "hwMaxPortalServerUserNum"), ("HUAWEI-AAA-MIB", "hwTotalIPv4OnlineNum"), ("HUAWEI-AAA-MIB", "hwTotalIPv6OnlineNum"), ("HUAWEI-AAA-MIB", "hwTotalDualStackOnlineNum"), ("HUAWEI-AAA-MIB", "hwTotalIPv4FlowDnByte"), ("HUAWEI-AAA-MIB", "hwTotalIPv4FlowDnPkt"), ("HUAWEI-AAA-MIB", "hwTotalIPv4FlowUpByte"), ("HUAWEI-AAA-MIB", "hwTotalIPv4FlowUpPkt"), ("HUAWEI-AAA-MIB", "hwTotalIPv6FlowDnByte"), ("HUAWEI-AAA-MIB", "hwTotalIPv6FlowDnPkt"), ("HUAWEI-AAA-MIB", "hwTotalIPv6FlowUpByte"), ("HUAWEI-AAA-MIB", "hwTotalIPv6FlowUpPkt"), ("HUAWEI-AAA-MIB", "hwHistoricMaxOnlineAcctReadyNum"), ("HUAWEI-AAA-MIB", "hwPubicLacUserNum"), ("HUAWEI-AAA-MIB", "hwHistoricMaxOnlineLocalNum"), ("HUAWEI-AAA-MIB", "hwHistoricMaxOnlineRemoteNum"), ("HUAWEI-AAA-MIB", "hwTotalLacOnlineNum"), ("HUAWEI-AAA-MIB", "hwTotalLnsOnlineNum"), ("HUAWEI-AAA-MIB", "hwTotalWlsOnlineNum"), ("HUAWEI-AAA-MIB", "hwTotalWrdOnlineNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAaaStatGroup = hwAaaStatGroup.setStatus('current')
hwAccessGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 11)).setObjects(("HUAWEI-AAA-MIB", "hwAccessIndex"), ("HUAWEI-AAA-MIB", "hwAccessUserName"), ("HUAWEI-AAA-MIB", "hwAccessPortType"), ("HUAWEI-AAA-MIB", "hwAccessPriority"), ("HUAWEI-AAA-MIB", "hwAccessSlotNo"), ("HUAWEI-AAA-MIB", "hwAccessSubSlotNo"), ("HUAWEI-AAA-MIB", "hwAccessPortNo"), ("HUAWEI-AAA-MIB", "hwAccessVLANID"), ("HUAWEI-AAA-MIB", "hwAccessPVC"), ("HUAWEI-AAA-MIB", "hwAccessAuthenMethod"), ("HUAWEI-AAA-MIB", "hwAccessAcctMethod"), ("HUAWEI-AAA-MIB", "hwAccessIPAddress"), ("HUAWEI-AAA-MIB", "hwAccessVRF"), ("HUAWEI-AAA-MIB", "hwAccessMACAddress"), ("HUAWEI-AAA-MIB", "hwAccessIfIdleCut"), ("HUAWEI-AAA-MIB", "hwAccessIdleCutTime"), ("HUAWEI-AAA-MIB", "hwAccessIdleCutFlow"), ("HUAWEI-AAA-MIB", "hwAccessTimeLimit"), ("HUAWEI-AAA-MIB", "hwAccessTotalFlow64Limit"), ("HUAWEI-AAA-MIB", "hwAccessStartTime"), ("HUAWEI-AAA-MIB", "hwAccessCARIfUpActive"), ("HUAWEI-AAA-MIB", "hwAccessCARIfDnActive"), ("HUAWEI-AAA-MIB", "hwAccessUpFlow64"), ("HUAWEI-AAA-MIB", "hwAccessDnFlow64"), ("HUAWEI-AAA-MIB", "hwAccessUpPacket64"), ("HUAWEI-AAA-MIB", "hwAccessDnPacket64"), ("HUAWEI-AAA-MIB", "hwAccessCARUpCIR"), ("HUAWEI-AAA-MIB", "hwAccessCARUpPIR"), ("HUAWEI-AAA-MIB", "hwAccessCARUpCBS"), ("HUAWEI-AAA-MIB", "hwAccessCARUpPBS"), ("HUAWEI-AAA-MIB", "hwAccessCARDnCIR"), ("HUAWEI-AAA-MIB", "hwAccessCARDnPIR"), ("HUAWEI-AAA-MIB", "hwAccessCARDnCBS"), ("HUAWEI-AAA-MIB", "hwAccessCARDnPBS"), ("HUAWEI-AAA-MIB", "hwAccessDownPriority"), ("HUAWEI-AAA-MIB", "hwAccessQosProfile"), ("HUAWEI-AAA-MIB", "hwAccessInterface"), ("HUAWEI-AAA-MIB", "hwAccessIPv6IFID"), ("HUAWEI-AAA-MIB", "hwAccessIPv6WanAddress"), ("HUAWEI-AAA-MIB", "hwAccessIPv6WanPrefix"), ("HUAWEI-AAA-MIB", "hwAccessIPv6LanPrefix"), ("HUAWEI-AAA-MIB", "hwAccessIPv6LanPrefixLen"), ("HUAWEI-AAA-MIB", "hwAccessBasicIPType"), ("HUAWEI-AAA-MIB", "hwAccessIPv6WaitDelay"), ("HUAWEI-AAA-MIB", "hwAccessIPv6ManagedAddressFlag"), ("HUAWEI-AAA-MIB", "hwAccessIPv6CPIFIDAvailable"), ("HUAWEI-AAA-MIB", "hwAccessIPv6OtherFlag"), ("HUAWEI-AAA-MIB", "hwAccessIPv6CPAssignIFID"), ("HUAWEI-AAA-MIB", "hwAccessLineID"), ("HUAWEI-AAA-MIB", "hwAccessIPv6UpFlow64"), ("HUAWEI-AAA-MIB", "hwAccessIPv6DnFlow64"), ("HUAWEI-AAA-MIB", "hwAccessIPv6UpPacket64"), ("HUAWEI-AAA-MIB", "hwAccessIPv6DnPacket64"), ("HUAWEI-AAA-MIB", "hwAccessDeviceName"), ("HUAWEI-AAA-MIB", "hwAccessDeviceMACAddress"), ("HUAWEI-AAA-MIB", "hwAccessDevicePortName"), ("HUAWEI-AAA-MIB", "hwAccessAPID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAccessGroup = hwAccessGroup.setStatus('current')
hwAccessExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 12)).setObjects(("HUAWEI-AAA-MIB", "hwAccessUCLGroup"), ("HUAWEI-AAA-MIB", "hwAuthenticationState"), ("HUAWEI-AAA-MIB", "hwAuthorizationState"), ("HUAWEI-AAA-MIB", "hwAccountingState"), ("HUAWEI-AAA-MIB", "hwAccessDomainName"), ("HUAWEI-AAA-MIB", "hwIdleTimeLength"), ("HUAWEI-AAA-MIB", "hwAcctSessionID"), ("HUAWEI-AAA-MIB", "hwAccessStartAcctTime"), ("HUAWEI-AAA-MIB", "hwAccessNormalServerGroup"), ("HUAWEI-AAA-MIB", "hwAccessDomainAcctCopySeverGroup"), ("HUAWEI-AAA-MIB", "hwAccessPVlanAcctCopyServerGroup"), ("HUAWEI-AAA-MIB", "hwAccessCurAuthenPlace"), ("HUAWEI-AAA-MIB", "hwAccessActionFlag"), ("HUAWEI-AAA-MIB", "hwAccessAuthtype"), ("HUAWEI-AAA-MIB", "hwAccessType"), ("HUAWEI-AAA-MIB", "hwAccessOnlineTime"), ("HUAWEI-AAA-MIB", "hwAccessGateway"), ("HUAWEI-AAA-MIB", "hwAccessSSID"), ("HUAWEI-AAA-MIB", "hwAccessAPMAC"), ("HUAWEI-AAA-MIB", "hwAccessDomain"), ("HUAWEI-AAA-MIB", "hwAccessCurAccountingPlace"), ("HUAWEI-AAA-MIB", "hwAccessCurAuthorPlace"), ("HUAWEI-AAA-MIB", "hwAccessUserGroup"), ("HUAWEI-AAA-MIB", "hwAccessResourceInsufficientInbound"), ("HUAWEI-AAA-MIB", "hwAccessResourceInsufficientOutbound"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAccessExtGroup = hwAccessExtGroup.setStatus('current')
hwAcctSchemeExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 13)).setObjects(("HUAWEI-AAA-MIB", "hwIfRealtimeAcct"), ("HUAWEI-AAA-MIB", "hwRealtimeFailMaxnum"), ("HUAWEI-AAA-MIB", "hwStartFailOnlineIfSendInterim"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAcctSchemeExtGroup = hwAcctSchemeExtGroup.setStatus('current')
hwBillPoolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 14)).setObjects(("HUAWEI-AAA-MIB", "hwBillsPoolVolume"), ("HUAWEI-AAA-MIB", "hwBillsPoolNum"), ("HUAWEI-AAA-MIB", "hwBillsPoolAlarmThreshold"), ("HUAWEI-AAA-MIB", "hwBillsPoolBackupMode"), ("HUAWEI-AAA-MIB", "hwBillsPoolBackupInterval"), ("HUAWEI-AAA-MIB", "hwBillsPoolBackupNow"), ("HUAWEI-AAA-MIB", "hwBillsPoolReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBillPoolGroup = hwBillPoolGroup.setStatus('current')
hwBillTFTPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 15)).setObjects(("HUAWEI-AAA-MIB", "hwBillsTFTPSrvIP"), ("HUAWEI-AAA-MIB", "hwBillsTFTPMainFileName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBillTFTPGroup = hwBillTFTPGroup.setStatus('current')
hwUclGrpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 16)).setObjects(("HUAWEI-AAA-MIB", "hwUclGrpName"), ("HUAWEI-AAA-MIB", "hwUclGrpRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwUclGrpGroup = hwUclGrpGroup.setStatus('current')
hwIpAccessGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 17)).setObjects(("HUAWEI-AAA-MIB", "hwIPAccessIPaddress"), ("HUAWEI-AAA-MIB", "hwIPAccessCID"), ("HUAWEI-AAA-MIB", "hwIPAccessVRF"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpAccessGroup = hwIpAccessGroup.setStatus('current')
hwCutAccessUserGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 18)).setObjects(("HUAWEI-AAA-MIB", "hwCutStartUserID"), ("HUAWEI-AAA-MIB", "hwCutEndUserID"), ("HUAWEI-AAA-MIB", "hwCutIPaddress"), ("HUAWEI-AAA-MIB", "hwCutMacAddres"), ("HUAWEI-AAA-MIB", "hwCutUserName"), ("HUAWEI-AAA-MIB", "hwCutUserAttri"), ("HUAWEI-AAA-MIB", "hwCutDomain"), ("HUAWEI-AAA-MIB", "hwCutIPPoolName"), ("HUAWEI-AAA-MIB", "hwCutIfIndex"), ("HUAWEI-AAA-MIB", "hwCutVlanID"), ("HUAWEI-AAA-MIB", "hwCutVPI"), ("HUAWEI-AAA-MIB", "hwCutVCI"), ("HUAWEI-AAA-MIB", "hwCutVRF"), ("HUAWEI-AAA-MIB", "hwCutAccessInterface"), ("HUAWEI-AAA-MIB", "hwCutUserSSID"), ("HUAWEI-AAA-MIB", "hwCutAccessSlot"), ("HUAWEI-AAA-MIB", "hwCutUserGroup"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCutAccessUserGroup = hwCutAccessUserGroup.setStatus('current')
hwAaaUserPppGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 19)).setObjects(("HUAWEI-AAA-MIB", "hwTotalConnectNum"), ("HUAWEI-AAA-MIB", "hwTotalSuccessNum"), ("HUAWEI-AAA-MIB", "hwTotalLCPFailNum"), ("HUAWEI-AAA-MIB", "hwTotalAuthenFailNum"), ("HUAWEI-AAA-MIB", "hwTotalNCPFailNum"), ("HUAWEI-AAA-MIB", "hwTotalIPAllocFailNum"), ("HUAWEI-AAA-MIB", "hwTotalOtherPPPFailNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAaaUserPppGroup = hwAaaUserPppGroup.setStatus('current')
hwAaaUserWebandFastGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 20)).setObjects(("HUAWEI-AAA-MIB", "hwTotalWebConnectNum"), ("HUAWEI-AAA-MIB", "hwTotalSuccessWebConnectNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAaaUserWebandFastGroup = hwAaaUserWebandFastGroup.setStatus('current')
hwAaaUserDot1XGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 21)).setObjects(("HUAWEI-AAA-MIB", "hwTotalDot1XConnectNum"), ("HUAWEI-AAA-MIB", "hwTotalSuccessDot1XConnectNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAaaUserDot1XGroup = hwAaaUserDot1XGroup.setStatus('current')
hwAaaUserBindGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 22)).setObjects(("HUAWEI-AAA-MIB", "hwTotalBindConnectNum"), ("HUAWEI-AAA-MIB", "hwTotalSuccessBindConnectNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAaaUserBindGroup = hwAaaUserBindGroup.setStatus('current')
hwRecordSchemeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 23)).setObjects(("HUAWEI-AAA-MIB", "hwRecordSchemeName"), ("HUAWEI-AAA-MIB", "hwRecordTacGroupName"), ("HUAWEI-AAA-MIB", "hwRecordRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRecordSchemeGroup = hwRecordSchemeGroup.setStatus('current')
hwMACAccessGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 24)).setObjects(("HUAWEI-AAA-MIB", "hwMACAccessMACAddress"), ("HUAWEI-AAA-MIB", "hwMACAccessCID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMACAccessGroup = hwMACAccessGroup.setStatus('current')
hwSlotConnectNumGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 25)).setObjects(("HUAWEI-AAA-MIB", "hwSlotConnectNumSlot"), ("HUAWEI-AAA-MIB", "hwSlotConnectNumOnlineNum"), ("HUAWEI-AAA-MIB", "hwSlotConnectNumMaxOnlineNum"), ("HUAWEI-AAA-MIB", "hwSlotConnectNumMaxOnlineAcctReadyNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSlotConnectNumGroup = hwSlotConnectNumGroup.setStatus('current')
hwOfflineReasonStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 26)).setObjects(("HUAWEI-AAA-MIB", "hwOfflineReason"), ("HUAWEI-AAA-MIB", "hwOfflineReasonStatistic"), ("HUAWEI-AAA-MIB", "hwOnlineFailReasonStatistic"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwOfflineReasonStatGroup = hwOfflineReasonStatGroup.setStatus('current')
hwMulticastListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 27)).setObjects(("HUAWEI-AAA-MIB", "hwMulticastListIndex"), ("HUAWEI-AAA-MIB", "hwMulticastListName"), ("HUAWEI-AAA-MIB", "hwMulticastListSourceIp"), ("HUAWEI-AAA-MIB", "hwMulticastListSourceIpMask"), ("HUAWEI-AAA-MIB", "hwMulticastListGroupIp"), ("HUAWEI-AAA-MIB", "hwMulticastListGroupIpMask"), ("HUAWEI-AAA-MIB", "hwMulticastListVpnInstance"), ("HUAWEI-AAA-MIB", "hwMulticastListRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMulticastListGroup = hwMulticastListGroup.setStatus('current')
hwMulticastProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 28)).setObjects(("HUAWEI-AAA-MIB", "hwMulticastProfileIndex"), ("HUAWEI-AAA-MIB", "hwMulticastProfileName"), ("HUAWEI-AAA-MIB", "hwMulticastProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMulticastProfileGroup = hwMulticastProfileGroup.setStatus('current')
hwMulticastProfileExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 29)).setObjects(("HUAWEI-AAA-MIB", "hwMulticastListBindName"), ("HUAWEI-AAA-MIB", "hwMulticastProfileExtRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMulticastProfileExtGroup = hwMulticastProfileExtGroup.setStatus('current')
hwAaaTrapOidGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 30)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIndex"), ("HUAWEI-AAA-MIB", "hwHdFreeamount"), ("HUAWEI-AAA-MIB", "hwHdWarningThreshold"), ("HUAWEI-AAA-MIB", "hwUserSlot"), ("HUAWEI-AAA-MIB", "hwUserSlotMaxNumThreshold"), ("HUAWEI-AAA-MIB", "hwOnlineUserNumThreshold"), ("HUAWEI-AAA-MIB", "hwPolicyRoute"), ("HUAWEI-AAA-MIB", "hwPolicyRouteThreshold"), ("HUAWEI-AAA-MIB", "hwRbsDownReason"), ("HUAWEI-AAA-MIB", "hwRbpOldState"), ("HUAWEI-AAA-MIB", "hwRbpChangeName"), ("HUAWEI-AAA-MIB", "hwMaxUserThresholdType"), ("HUAWEI-AAA-MIB", "hwRbpNewState"), ("HUAWEI-AAA-MIB", "hwRbsName"), ("HUAWEI-AAA-MIB", "hwRbpChangeReason"), ("HUAWEI-AAA-MIB", "hwRemoteDownloadAclUsedValue"), ("HUAWEI-AAA-MIB", "hwRemoteDownloadAclThresholdValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAaaTrapOidGroup = hwAaaTrapOidGroup.setStatus('current')
hwAaaTrapsNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 31)).setObjects(("HUAWEI-AAA-MIB", "hwUserIPAllocAlarm"), ("HUAWEI-AAA-MIB", "hwUserIPv6AddressAllocAlarm"), ("HUAWEI-AAA-MIB", "hwUserNDRAPrefixAllocAlarm"), ("HUAWEI-AAA-MIB", "hwUserDelegationPrefixAllocAlarm"), ("HUAWEI-AAA-MIB", "hwUserSlotMaxNum"), ("HUAWEI-AAA-MIB", "hwOnlineUserNumAlarm"), ("HUAWEI-AAA-MIB", "hwSetUserQosProfileFail"), ("HUAWEI-AAA-MIB", "hwUserMaxNum"), ("HUAWEI-AAA-MIB", "hwRbpStateChange"), ("HUAWEI-AAA-MIB", "hwRbsDown"), ("HUAWEI-AAA-MIB", "hwRbsUp"), ("HUAWEI-AAA-MIB", "hwUserIPAllocAlarmResume"), ("HUAWEI-AAA-MIB", "hwUserIPv6AddressAllocAlarmResume"), ("HUAWEI-AAA-MIB", "hwUserNDRAPrefixAllocAlarmResume"), ("HUAWEI-AAA-MIB", "hwUserDelegationPrefixAllocAlarmResume"), ("HUAWEI-AAA-MIB", "hwOnlineUserNumUpperLimitAlarm"), ("HUAWEI-AAA-MIB", "hwOnlineUserNumUpperLimitResume"), ("HUAWEI-AAA-MIB", "hwOnlineUserNumLowerLimitAlarm"), ("HUAWEI-AAA-MIB", "hwOnlineUserNumLowerLimitResume"), ("HUAWEI-AAA-MIB", "hwIPLowerlimitWarningAlarm"), ("HUAWEI-AAA-MIB", "hwIPLowerlimitWarningResume"), ("HUAWEI-AAA-MIB", "hwIPv6AddressLowerlimitWarningAlarm"), ("HUAWEI-AAA-MIB", "hwIPv6AddressLowerlimitWarningResume"), ("HUAWEI-AAA-MIB", "hwIPv6NDRAPrefixLowerlimitWarningAlarm"), ("HUAWEI-AAA-MIB", "hwIPv6NDRAPrefixLowerlimitWarningResume"), ("HUAWEI-AAA-MIB", "hwIPv6PDPrefixLowerlimitWarningAlarm"), ("HUAWEI-AAA-MIB", "hwIPv6PDPrefixLowerlimitWarningResume"), ("HUAWEI-AAA-MIB", "hwPolicyRouteSlotMaxNum"), ("HUAWEI-AAA-MIB", "hwRemoteDownloadAclThresholdAlarm"), ("HUAWEI-AAA-MIB", "hwRemoteDownloadAclThresholdResume"), ("HUAWEI-AAA-MIB", "hwAdminLoginFailed"), ("HUAWEI-AAA-MIB", "hwAdminLoginFailedClear"), ("HUAWEI-AAA-MIB", "hwUserGroupThresholdAlarm"), ("HUAWEI-AAA-MIB", "hwUserGroupThresholdResume"), ("HUAWEI-AAA-MIB", "hwEDSGLicenseExpireAlarm"), ("HUAWEI-AAA-MIB", "hwEDSGLicenseExpireResume"), ("HUAWEI-AAA-MIB", "hwAAAAccessUserResourceOrCpuAlarm"), ("HUAWEI-AAA-MIB", "hwAAAAccessUserResourceOrCpuResume"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAaaTrapsNotificationsGroup = hwAaaTrapsNotificationsGroup.setStatus('current')
hwLamTrapsNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 32)).setObjects(("HUAWEI-AAA-MIB", "hwHarddiskoverflow"), ("HUAWEI-AAA-MIB", "hwHarddiskReachThreshold"), ("HUAWEI-AAA-MIB", "hwHarddiskOK"), ("HUAWEI-AAA-MIB", "hwCachetoFTPFail"), ("HUAWEI-AAA-MIB", "hwHDtoFTPFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLamTrapsNotificationsGroup = hwLamTrapsNotificationsGroup.setStatus('current')
hwObsoleteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 33)).setObjects(("HUAWEI-AAA-MIB", "hwNtvUserProfileName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwObsoleteGroup = hwObsoleteGroup.setStatus('obsolete')
hwServiceSchemeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 34)).setObjects(("HUAWEI-AAA-MIB", "hwServiceSchemeNextHopIp"), ("HUAWEI-AAA-MIB", "hwServiceSchemeUserPriority"), ("HUAWEI-AAA-MIB", "hwServiceSchemeIdleCutTime"), ("HUAWEI-AAA-MIB", "hwServiceSchemeIdleCutFlow"), ("HUAWEI-AAA-MIB", "hwServiceSchemeDnsFirst"), ("HUAWEI-AAA-MIB", "hwServiceSchemeDnsSecond"), ("HUAWEI-AAA-MIB", "hwSrvSchemeAdminUserPriority"), ("HUAWEI-AAA-MIB", "hwSrvSchemeIpPoolOneName"), ("HUAWEI-AAA-MIB", "hwSrvSchemeIpPoolTwoName"), ("HUAWEI-AAA-MIB", "hwSrvSchemeIpPoolThreeName"), ("HUAWEI-AAA-MIB", "hwServiceSchemeRowStatus"), ("HUAWEI-AAA-MIB", "hwServiceSchemeIdleCutType"), ("HUAWEI-AAA-MIB", "hwServiceSchemeIdleCutFlowValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwServiceSchemeGroup = hwServiceSchemeGroup.setStatus('current')
hwDhcpOpt121RouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 35)).setObjects(("HUAWEI-AAA-MIB", "hwDhcpOpt121RouteDestIp"), ("HUAWEI-AAA-MIB", "hwDhcpOpt121RouteMask"), ("HUAWEI-AAA-MIB", "hwDhcpOpt121RouteNextHop"), ("HUAWEI-AAA-MIB", "hwDhcpOpt121RouteRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDhcpOpt121RouteGroup = hwDhcpOpt121RouteGroup.setStatus('current')
hwAccessDelayPerSlotGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 36)).setObjects(("HUAWEI-AAA-MIB", "hwAccessDelayPerSlotSlot"), ("HUAWEI-AAA-MIB", "hwAccessDelayPerSlotTransitionStep"), ("HUAWEI-AAA-MIB", "hwAccessDelayPerSlotMaxTime"), ("HUAWEI-AAA-MIB", "hwAccessDelayPerSlotMinTime"), ("HUAWEI-AAA-MIB", "hwAccessDelayPerSlotRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAccessDelayPerSlotGroup = hwAccessDelayPerSlotGroup.setStatus('current')
hwVpnAccessUserStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 37)).setObjects(("HUAWEI-AAA-MIB", "hwUserType"), ("HUAWEI-AAA-MIB", "hwVpnAccessUserStatVpnName"), ("HUAWEI-AAA-MIB", "hwVpnAccessUserStatUserStat"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVpnAccessUserStatGroup = hwVpnAccessUserStatGroup.setStatus('current')
hwInterfaceAccessUserStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 38)).setObjects(("HUAWEI-AAA-MIB", "hwInterfaceAccessUserStatInterfaceIndex"), ("HUAWEI-AAA-MIB", "hwInterfaceAccessUserStatUserStat"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwInterfaceAccessUserStatGroup = hwInterfaceAccessUserStatGroup.setStatus('current')
hwDomainAccessUserStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 39)).setObjects(("HUAWEI-AAA-MIB", "hwDomainAccessUserStatUserStat"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDomainAccessUserStatGroup = hwDomainAccessUserStatGroup.setStatus('current')
hwSlotAccessUserStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 40)).setObjects(("HUAWEI-AAA-MIB", "hwSlotAccessUserStatSlot"), ("HUAWEI-AAA-MIB", "hwSlotAccessUserStatUserStat"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSlotAccessUserStatGroup = hwSlotAccessUserStatGroup.setStatus('current')
hwDomainIncludePoolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 45)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIncludeIPPoolGroupName"), ("HUAWEI-AAA-MIB", "hwDomainIncludeIPPoolGroupRowStates"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDomainIncludePoolGroup = hwDomainIncludePoolGroup.setStatus('current')
hwDomainIPPoolMoveTo = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 46)).setObjects(("HUAWEI-AAA-MIB", "hwDomainIncludeIPPoolName"), ("HUAWEI-AAA-MIB", "hwDomainIncludeIPPoolMoveto"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDomainIPPoolMoveTo = hwDomainIPPoolMoveTo.setStatus('current')
hwUserLogGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 47)).setObjects(("HUAWEI-AAA-MIB", "hwUserLogAccess"), ("HUAWEI-AAA-MIB", "hwUserLogIPAddress"), ("HUAWEI-AAA-MIB", "hwUserLogPort"), ("HUAWEI-AAA-MIB", "hwUserLogVersion"), ("HUAWEI-AAA-MIB", "hwShowUserLogStatistic"), ("HUAWEI-AAA-MIB", "hwResetUserLogStatistic"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwUserLogGroup = hwUserLogGroup.setStatus('current')
hwGlobalDhcpOpt64SepAndSegGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 48)).setObjects(("HUAWEI-AAA-MIB", "hwGlobalDhcpOpt64SepAndSeg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwGlobalDhcpOpt64SepAndSegGroup = hwGlobalDhcpOpt64SepAndSegGroup.setStatus('current')
hwGlobalDhcpServerAckGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 49)).setObjects(("HUAWEI-AAA-MIB", "hwGlobalDhcpServerAck"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwGlobalDhcpServerAckGroup = hwGlobalDhcpServerAckGroup.setStatus('current')
hwReauthorizeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 50)).setObjects(("HUAWEI-AAA-MIB", "hwReauthorizeUsername"), ("HUAWEI-AAA-MIB", "hwReauthorizeUsergroup"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwReauthorizeGroup = hwReauthorizeGroup.setStatus('current')
hwWlanInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 56)).setObjects(("HUAWEI-AAA-MIB", "hwWlanInterfaceIndex"), ("HUAWEI-AAA-MIB", "hwWlanInterfaceName"), ("HUAWEI-AAA-MIB", "hwWlanInterfaceDomainNameDelimiter"), ("HUAWEI-AAA-MIB", "hwWlanInterfaceDomainNameSecurityDelimiter"), ("HUAWEI-AAA-MIB", "hwWlanInterfaceDomainNameParseDirection"), ("HUAWEI-AAA-MIB", "hwWlanInterfaceDomainNameLocation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwWlanInterfaceGroup = hwWlanInterfaceGroup.setStatus('current')
hwAuthorCmdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 57)).setObjects(("HUAWEI-AAA-MIB", "hwAuthorCmdLevel"), ("HUAWEI-AAA-MIB", "hwAuthorCmdMode"), ("HUAWEI-AAA-MIB", "hwAuthorCmdRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAuthorCmdGroup = hwAuthorCmdGroup.setStatus('current')
hwAAARateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 58)).setObjects(("HUAWEI-AAA-MIB", "hwAAARateDirection"), ("HUAWEI-AAA-MIB", "hwAAARateType"), ("HUAWEI-AAA-MIB", "hwAAARateRealPeak"), ("HUAWEI-AAA-MIB", "hwAAARateRealAverage"), ("HUAWEI-AAA-MIB", "hwAAARateRealUsedCount"), ("HUAWEI-AAA-MIB", "hwAAARateRealPercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAAARateGroup = hwAAARateGroup.setStatus('current')
hwLocalUserPwPolicyAdminGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 59)).setObjects(("HUAWEI-AAA-MIB", "hwAdminEnable"), ("HUAWEI-AAA-MIB", "hwAdminExpire"), ("HUAWEI-AAA-MIB", "hwAdminPwHistroyRecordNum"), ("HUAWEI-AAA-MIB", "hwAdminAlertBefore"), ("HUAWEI-AAA-MIB", "hwAdminAlertOrginal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLocalUserPwPolicyAdminGroup = hwLocalUserPwPolicyAdminGroup.setStatus('current')
hwLocalUserPwPolicyAccGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 60)).setObjects(("HUAWEI-AAA-MIB", "hwAccEnable"), ("HUAWEI-AAA-MIB", "hwAccPwHistroyRecordNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLocalUserPwPolicyAccGroup = hwLocalUserPwPolicyAccGroup.setStatus('current')
hwAAADomainIPPoolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 61)).setObjects(("HUAWEI-AAA-MIB", "hwAAADomainIPPoolName"), ("HUAWEI-AAA-MIB", "hwAAADomainIPPoolIndex"), ("HUAWEI-AAA-MIB", "hwAAADomainIPPoolConstantIndex"), ("HUAWEI-AAA-MIB", "hwAAADomainIPPoolPosition"), ("HUAWEI-AAA-MIB", "hwAAADomainIPPoolRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAAADomainIPPoolGroup = hwAAADomainIPPoolGroup.setStatus('current')
userAuthenProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 62)).setObjects(("HUAWEI-AAA-MIB", "userAuthenProfileName"), ("HUAWEI-AAA-MIB", "userAuthenProfileDot1xAccessProfileName"), ("HUAWEI-AAA-MIB", "userAuthenProfileMacAuthenAccessProfileName"), ("HUAWEI-AAA-MIB", "userAuthenProfilePortalAccessProfileName"), ("HUAWEI-AAA-MIB", "userAuthenProfileSingleAccess"), ("HUAWEI-AAA-MIB", "userAuthenProfilePreAuthenServiceSchemeName"), ("HUAWEI-AAA-MIB", "userAuthenProfilePreAuthenUserGroupName"), ("HUAWEI-AAA-MIB", "userAuthenProfilePreAuthenVLAN"), ("HUAWEI-AAA-MIB", "userAuthenProfileAuthenFailAuthorServiceSchemeName"), ("HUAWEI-AAA-MIB", "userAuthenProfileAuthenFailAuthorUserGroupName"), ("HUAWEI-AAA-MIB", "userAuthenProfileAuthenFailAuthorVLAN"), ("HUAWEI-AAA-MIB", "userAuthenProfileAuthenServerDownServiceSchemeName"), ("HUAWEI-AAA-MIB", "userAuthenProfileAuthenServerDownUserGroupName"), ("HUAWEI-AAA-MIB", "userAuthenProfileAuthenServerDownVLAN"), ("HUAWEI-AAA-MIB", "userAuthenProfileAuthenServerDownResponseSuccess"), ("HUAWEI-AAA-MIB", "userAuthenProfileAuthenServerUpReauthen"), ("HUAWEI-AAA-MIB", "userAuthenProfileMacAuthenFirst"), ("HUAWEI-AAA-MIB", "userAuthenProfileMACBypass"), ("HUAWEI-AAA-MIB", "userAuthenProfileDot1xForceDomain"), ("HUAWEI-AAA-MIB", "userAuthenProfileMACAuthenForceDomain"), ("HUAWEI-AAA-MIB", "userAuthenProfilePortalForceDomain"), ("HUAWEI-AAA-MIB", "userAuthenProfileDot1xDefaultDomain"), ("HUAWEI-AAA-MIB", "userAuthenProfileMACAuthenDefaultDomain"), ("HUAWEI-AAA-MIB", "userAuthenProfilePortalDefaultDomain"), ("HUAWEI-AAA-MIB", "userAuthenProfileSecurityNameDelimiter"), ("HUAWEI-AAA-MIB", "userAuthenProfilePreAuthenReAuthenTimer"), ("HUAWEI-AAA-MIB", "userAuthenProfileAuthenFailReAuthenTimer"), ("HUAWEI-AAA-MIB", "userAuthenProfilePreAuthenAgingTime"), ("HUAWEI-AAA-MIB", "userAuthenProfileAuthenFailAgingTime"), ("HUAWEI-AAA-MIB", "userAuthenProfileFreeRuleName"), ("HUAWEI-AAA-MIB", "userAuthenProfileAuthenSchemeName"), ("HUAWEI-AAA-MIB", "userAuthenProfileAuthorSchemeName"), ("HUAWEI-AAA-MIB", "userAuthenProfileAcctSchemeName"), ("HUAWEI-AAA-MIB", "userAuthenProfileServiceSchemeName"), ("HUAWEI-AAA-MIB", "userAuthenProfileUserGroupName"), ("HUAWEI-AAA-MIB", "userAuthenProfileRadiusServerName"), ("HUAWEI-AAA-MIB", "userAuthenProfileHwtacacsServerName"), ("HUAWEI-AAA-MIB", "userAuthenProfileAuthenticationMode"), ("HUAWEI-AAA-MIB", "userAuthenProfileMaxUser"), ("HUAWEI-AAA-MIB", "userAuthenProfileAuthenFailAuthorResponseSuccess"), ("HUAWEI-AAA-MIB", "userAuthenProfileArpDetect"), ("HUAWEI-AAA-MIB", "userAuthenProfileArpDetectTimer"), ("HUAWEI-AAA-MIB", "userAuthenProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    userAuthenProfileGroup = userAuthenProfileGroup.setStatus('current')
userAuthenticationFreeRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 63)).setObjects(("HUAWEI-AAA-MIB", "userAuthenticationFreeRuleName"), ("HUAWEI-AAA-MIB", "userAuthenticationFreeRuleACLNumber"), ("HUAWEI-AAA-MIB", "userAuthenticationFreeRuleIPv6ACLNumber"), ("HUAWEI-AAA-MIB", "userAuthenticationFreeRuleNumber"), ("HUAWEI-AAA-MIB", "userAuthenticationFreeRuleSourceMode"), ("HUAWEI-AAA-MIB", "userAuthenticationFreeRuleSourceVlan"), ("HUAWEI-AAA-MIB", "userAuthenticationFreeRuleSourceInterface"), ("HUAWEI-AAA-MIB", "userAuthenticationFreeRuleSourceIP"), ("HUAWEI-AAA-MIB", "userAuthenticationFreeRuleSourceIPMask"), ("HUAWEI-AAA-MIB", "userAuthenticationFreeRuleSourceMac"), ("HUAWEI-AAA-MIB", "userAuthenticationFreeRuleDestinationMode"), ("HUAWEI-AAA-MIB", "userAuthenticationFreeRuleDestinationIP"), ("HUAWEI-AAA-MIB", "userAuthenticationFreeRuleDestinationIPMask"), ("HUAWEI-AAA-MIB", "userAuthenticationFreeRuleDestinationProtocol"), ("HUAWEI-AAA-MIB", "userAuthenticationFreeRuleDestinationPort"), ("HUAWEI-AAA-MIB", "userAuthenticationFreeRuleDestinationUserGroup"), ("HUAWEI-AAA-MIB", "userAuthenticationFreeRuleRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    userAuthenticationFreeRuleGroup = userAuthenticationFreeRuleGroup.setStatus('current')
hwDot1xAccessProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 64)).setObjects(("HUAWEI-AAA-MIB", "hwDot1xAccessProfileName"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileGuestAuthorServiceSchemeName"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileGuestAuthorUserGroupName"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileGuestAuthorVLAN"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileHandshakeSwitch"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileHandShakePktType"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileHandshakeInterval"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileIfEAPEnd"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileEAPEndMethod"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileEAPNotifyPktEAPCode"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileEAPNotifyPktEAPType"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileReAuthenEnable"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileReauthenticationTimeout"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileClientTimeout"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileServerTimeout"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileTxPeriod"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileMaxRetryValue"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileSpeedLimitAuto"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileTriggerPktType"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileUnicastTrigger"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileURL"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileEthTrunkHandShakePeriod"), ("HUAWEI-AAA-MIB", "hwDot1xAccessProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot1xAccessProfileGroup = hwDot1xAccessProfileGroup.setStatus('current')
hwMACAuthenAccessProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 65)).setObjects(("HUAWEI-AAA-MIB", "hwMACAuthenAccessProfileName"), ("HUAWEI-AAA-MIB", "hwMACAuthenAccessProfileReAuthenEnable"), ("HUAWEI-AAA-MIB", "hwMACAuthenAccessProfileReauthenticationTimeout"), ("HUAWEI-AAA-MIB", "hwMACAuthenAccessProfileServerTimeout"), ("HUAWEI-AAA-MIB", "hwMACAuthenAccessProfileUserNameFixedUserName"), ("HUAWEI-AAA-MIB", "hwMACAuthenAccessProfileFixedPassword"), ("HUAWEI-AAA-MIB", "hwMACAuthenAccessProfileMACAddressFormat"), ("HUAWEI-AAA-MIB", "hwMACAuthenAccessProfileMACAddressPassword"), ("HUAWEI-AAA-MIB", "hwMACAuthenAccessProfileUserNameDHCPOption"), ("HUAWEI-AAA-MIB", "hwMACAuthenAccessProfileUserNameDHCPOSubOption"), ("HUAWEI-AAA-MIB", "hwMACAuthenAccessProfileTriggerPktType"), ("HUAWEI-AAA-MIB", "hwMACAuthenAccessProfileTriggerDHCPOptionType"), ("HUAWEI-AAA-MIB", "hwMACAuthenAccessProfileDHCPRelaseOffline"), ("HUAWEI-AAA-MIB", "hwMACAuthenAccessProfileDHCPRenewReAuthen"), ("HUAWEI-AAA-MIB", "hwMACAuthenAccessProfilePermitAuthenMAC"), ("HUAWEI-AAA-MIB", "hwMACAuthenAccessProfilePermitAuthenMACMask"), ("HUAWEI-AAA-MIB", "hwMACAuthenAccessProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMACAuthenAccessProfileGroup = hwMACAuthenAccessProfileGroup.setStatus('current')
hwPortalAccessProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 2, 5, 2, 66)).setObjects(("HUAWEI-AAA-MIB", "hwPortalAccessProfileName"), ("HUAWEI-AAA-MIB", "hwPortalAccessProfileDetectPeriod"), ("HUAWEI-AAA-MIB", "hwPortalAccessProfilePortalServerDownServiceSchemeName"), ("HUAWEI-AAA-MIB", "hwPortalAccessProfilePortalServerDownUserGroupName"), ("HUAWEI-AAA-MIB", "hwPortalAccessProfilePortalServerUpReAuthen"), ("HUAWEI-AAA-MIB", "hwPortalAccessProfileAlarmUserLowNum"), ("HUAWEI-AAA-MIB", "hwPortalAccessProfileAlarmUserHighNum"), ("HUAWEI-AAA-MIB", "hwPortalAccessProfileAuthenNetWork"), ("HUAWEI-AAA-MIB", "hwPortalAccessProfileAuthenNetWorkMask"), ("HUAWEI-AAA-MIB", "hwPortalAccessProfilePortalServerName"), ("HUAWEI-AAA-MIB", "hwPortalAccessProfilePortalAccessDirect"), ("HUAWEI-AAA-MIB", "hwPortalAccessProfileLocalServerEnable"), ("HUAWEI-AAA-MIB", "hwPortalAccessProfileRowStatus"), ("HUAWEI-AAA-MIB", "hwPortalAccessProfilePortalBackupServerName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPortalAccessProfileGroup = hwPortalAccessProfileGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-AAA-MIB", hwAAASlotIPv6AddressThresholdAlarm=hwAAASlotIPv6AddressThresholdAlarm, hwAccessCARDnPIR=hwAccessCARDnPIR, hwVPDNGroupIndex=hwVPDNGroupIndex, hwDomainNDRAPrefixFreeNum=hwDomainNDRAPrefixFreeNum, hwDot1xAccessProfileSpeedLimitAuto=hwDot1xAccessProfileSpeedLimitAuto, hwMultiIPv6ProfileName=hwMultiIPv6ProfileName, hwAaaObjectGroups=hwAaaObjectGroups, hwMulticastListIndex=hwMulticastListIndex, hwMulticastProfileTable=hwMulticastProfileTable, userAuthenticationFreeRuleIPv6ACLNumber=userAuthenticationFreeRuleIPv6ACLNumber, hwDomainPDPrefixExcludeNum=hwDomainPDPrefixExcludeNum, hwAccessEntry=hwAccessEntry, hwExtVpdnGroupName=hwExtVpdnGroupName, hwDomainIdleCutType=hwDomainIdleCutType, hwDomainFlowDnPkt=hwDomainFlowDnPkt, hwLocalUserTable=hwLocalUserTable, hwHistoricMaxOnlineAcctReadyNum=hwHistoricMaxOnlineAcctReadyNum, hwAccessDownPriority=hwAccessDownPriority, hwAAASlotOnlineUserNumAlarm=hwAAASlotOnlineUserNumAlarm, hwAccRealTimeInter=hwAccRealTimeInter, hwSlotConnectNumSlot=hwSlotConnectNumSlot, hwPolicyRoute=hwPolicyRoute, hwAccessOnlineTime=hwAccessOnlineTime, hwMACAuthenAccessProfilePermitAuthenMACMask=hwMACAuthenAccessProfilePermitAuthenMACMask, hwAccessQosProfile=hwAccessQosProfile, userAuthenticationFreeRuleDestinationMode=userAuthenticationFreeRuleDestinationMode, userAuthenticationFreeRuleGroup=userAuthenticationFreeRuleGroup, hwIPAccessEntry=hwIPAccessEntry, hwAAATimerExpireCriticalLevelResumeThreshold=hwAAATimerExpireCriticalLevelResumeThreshold, hwMACAccessEntry=hwMACAccessEntry, hwTotalDot1XConnectNum=hwTotalDot1XConnectNum, hwSlotAccessUserStatSlot=hwSlotAccessUserStatSlot, hwCutVPI=hwCutVPI, userAuthenticationFreeRuleSourceInterface=userAuthenticationFreeRuleSourceInterface, hwAccessCurAccountingPlace=hwAccessCurAccountingPlace, hwLocalUserPwPolicyAdmin=hwLocalUserPwPolicyAdmin, userAuthenticationFreeRuleDestinationPort=userAuthenticationFreeRuleDestinationPort, hwObsoleteGroup=hwObsoleteGroup, hwAccessCARUpPBS=hwAccessCARUpPBS, hwAccessDelayPerSlotEntry=hwAccessDelayPerSlotEntry, hwLocalUserExpireDate=hwLocalUserExpireDate, hwPubicLacUserNum=hwPubicLacUserNum, hwAuthorMethod=hwAuthorMethod, userAuthenProfileMACAuthenForceDomain=userAuthenProfileMACAuthenForceDomain, hwOfflineRecordAccessCeVlan=hwOfflineRecordAccessCeVlan, hwAAAOnlineSessoinUpperLimitResume=hwAAAOnlineSessoinUpperLimitResume, hwSlotConnectNumOnlineNum=hwSlotConnectNumOnlineNum, hwAccessCARDnPBS=hwAccessCARDnPBS, hwLocalRetryTime=hwLocalRetryTime, hwIPv6PDPrefixLowerlimitWarningResume=hwIPv6PDPrefixLowerlimitWarningResume, hwAAAOnlineSessoinUpperLimitAlarm=hwAAAOnlineSessoinUpperLimitAlarm, hwAuthenMethod=hwAuthenMethod, hwAaa=hwAaa, hwPortalAccessProfileAuthenNetWorkMask=hwPortalAccessProfileAuthenNetWorkMask, hwAccessResourceInsufficientInbound=hwAccessResourceInsufficientInbound, hwDomainRowStatus=hwDomainRowStatus, hwAAASessionGroupLowerLimitAlarm=hwAAASessionGroupLowerLimitAlarm, hwTotalWlsOnlineNum=hwTotalWlsOnlineNum, hwPolicyRouteSlotMaxNum=hwPolicyRouteSlotMaxNum, hwUserGroupRowStatus=hwUserGroupRowStatus, hwAccessCARUpCIR=hwAccessCARUpCIR, hwServiceSchemeIdleCutType=hwServiceSchemeIdleCutType, hwUserGroupCarInBoundCir=hwUserGroupCarInBoundCir, hwWlanInterfaceIndex=hwWlanInterfaceIndex, hwIPv6NDRAPrefixLowerlimitWarningAlarm=hwIPv6NDRAPrefixLowerlimitWarningAlarm, hwAAAStatEntry=hwAAAStatEntry, hwAaaSettingGroup=hwAaaSettingGroup, userAuthenticationFreeRuleDestinationUserGroup=userAuthenticationFreeRuleDestinationUserGroup, hwGlobalDhcpOpt64SepAndSegGroup=hwGlobalDhcpOpt64SepAndSegGroup, hwDot1xAccessProfileGuestAuthorUserGroupName=hwDot1xAccessProfileGuestAuthorUserGroupName, hwAuthenSchemeName=hwAuthenSchemeName, hwAccessUserName=hwAccessUserName, hwAccessUpPacket64=hwAccessUpPacket64, hwAAATraps=hwAAATraps, hwAccessIdleCutFlow=hwAccessIdleCutFlow, hwAccessAPMAC=hwAccessAPMAC, hwDomainFlowUpPkt=hwDomainFlowUpPkt, hwSlotCardConnectNumDualOnlineNum=hwSlotCardConnectNumDualOnlineNum, userAuthenProfileGroup=userAuthenProfileGroup, hwUserSlotMaxNum=hwUserSlotMaxNum, hwTotalSuccessBindConnectNum=hwTotalSuccessBindConnectNum, hwAuthEventPreAuthVlan=hwAuthEventPreAuthVlan, hwLocalUserPriority=hwLocalUserPriority, hwAccessDelayPerSlotSlot=hwAccessDelayPerSlotSlot, hwGlobalAuthEventAuthenServerDownResponseFail=hwGlobalAuthEventAuthenServerDownResponseFail, hwDomainIPConflictNum=hwDomainIPConflictNum, hwCutDomain=hwCutDomain, hwAccessDelayPerSlotMinTime=hwAccessDelayPerSlotMinTime, hwMACAuthenAccessProfilePermitAuthenMAC=hwMACAuthenAccessProfilePermitAuthenMAC, hwGlobalAuthEventPreAuthVlan=hwGlobalAuthEventPreAuthVlan, hwSlotCardConnectNumWebAuthNum=hwSlotCardConnectNumWebAuthNum, hwUserIPAllocAlarmResume=hwUserIPAllocAlarmResume, hwAuthorRowStatus=hwAuthorRowStatus, hwDomainAccessUserStatTable=hwDomainAccessUserStatTable, hwResetUserLogStatistic=hwResetUserLogStatistic, hwAuthEventAuthenServerDownVlan=hwAuthEventAuthenServerDownVlan, userAuthenProfilePreAuthenAgingTime=userAuthenProfilePreAuthenAgingTime, hwRbsName=hwRbsName, hwPortalAccessProfilePortalServerDownServiceSchemeName=hwPortalAccessProfilePortalServerDownServiceSchemeName, hwMACAuthenAccessProfileTriggerDHCPOptionType=hwMACAuthenAccessProfileTriggerDHCPOptionType, hwIPOXUsernameOption82=hwIPOXUsernameOption82, hwOfflineRecordInterface=hwOfflineRecordInterface, hwDot1xAccessProfileGuestAuthorServiceSchemeName=hwDot1xAccessProfileGuestAuthorServiceSchemeName, hwAuthorizationState=hwAuthorizationState, hwUserAccessPVC=hwUserAccessPVC, hwDomainAuthenSchemeName=hwDomainAuthenSchemeName, hwPriDnsIPv6Address=hwPriDnsIPv6Address, hwLocalUserDeviceType=hwLocalUserDeviceType, hwLocalUserExtGroup=hwLocalUserExtGroup, hwAccessPVC=hwAccessPVC, hwOfflineRecordUserName=hwOfflineRecordUserName, hwMACAccessGroup=hwMACAccessGroup, hwGlobalControl=hwGlobalControl, hwUserGroupNumThreshold=hwUserGroupNumThreshold, hwUserLogAccess=hwUserLogAccess, hwCutAccessUserGroup=hwCutAccessUserGroup, hwGlobalAuthEventClientNoResponseVlan=hwGlobalAuthEventClientNoResponseVlan, hwMulticastProfileExtTable=hwMulticastProfileExtTable, hwAccessSpeedNumber=hwAccessSpeedNumber, hwAaaCompliance=hwAaaCompliance, hwUserGroupThresholdAlarm=hwUserGroupThresholdAlarm, hwIPAccessCID=hwIPAccessCID, hwAaaTrapOidGroup=hwAaaTrapOidGroup, hwAAASessionGroupUpperLimitResume=hwAAASessionGroupUpperLimitResume, hwRealmParseDirection=hwRealmParseDirection, hwAAAInboundVPNUserType=hwAAAInboundVPNUserType, hwAuthenSchemeEntry=hwAuthenSchemeEntry, hwIPv6ManagedAddressFlag=hwIPv6ManagedAddressFlag, hwIPv6CPAssignIFID=hwIPv6CPAssignIFID, hwLocalAuthorize=hwLocalAuthorize, hwAccessPVlanAcctCopyServerGroup=hwAccessPVlanAcctCopyServerGroup, hwDomainQoSProfile=hwDomainQoSProfile, hwIPv6PoolName=hwIPv6PoolName, hwDhcpOpt121RouteDestIp=hwDhcpOpt121RouteDestIp, hwUserGroupCarInBoundCbs=hwUserGroupCarInBoundCbs, hwTotalsshOnlineNum=hwTotalsshOnlineNum, hwAccessDomainName=hwAccessDomainName, hwAuthorCmdTable=hwAuthorCmdTable, hwAccessIndex=hwAccessIndex, hwDot1xAccessProfileEAPNotifyPktEAPType=hwDot1xAccessProfileEAPNotifyPktEAPType, hwDomainIPv6AddressFreeNum=hwDomainIPv6AddressFreeNum, userAuthenProfileTable=userAuthenProfileTable, hwAAAOfflineRecordEntry=hwAAAOfflineRecordEntry, userAuthenProfilePreAuthenUserGroupName=userAuthenProfilePreAuthenUserGroupName, hwAccessIPv6ManagedAddressFlag=hwAccessIPv6ManagedAddressFlag, hwRecordSchemeGroup=hwRecordSchemeGroup, hwPortalAccessProfileLocalServerAnonymous=hwPortalAccessProfileLocalServerAnonymous, hwAaaUserDot1XGroup=hwAaaUserDot1XGroup, hwMACAuthenAccessProfileUserNameDHCPOption=hwMACAuthenAccessProfileUserNameDHCPOption, hwDomainTable=hwDomainTable, hwIPAccessVRF=hwIPAccessVRF, hwSrvSchemeIpPoolTwoName=hwSrvSchemeIpPoolTwoName, hwDomainIncludeIPPoolGroupName=hwDomainIncludeIPPoolGroupName, hwDomainExtTable=hwDomainExtTable, hwIPv6PoolWarningThreshold=hwIPv6PoolWarningThreshold, hwWlanInterfaceTable=hwWlanInterfaceTable, hwNtvUserProfileName=hwNtvUserProfileName, hwOnlineFailReasonStatistic=hwOnlineFailReasonStatistic, hwUserDomainName=hwUserDomainName, hwIPAccessTable=hwIPAccessTable, userAuthenProfileArpDetect=userAuthenProfileArpDetect, hwLocalUserGroup=hwLocalUserGroup, hwVpnAccessUserStatVpnName=hwVpnAccessUserStatVpnName, hwLocalUserTimeRange=hwLocalUserTimeRange, hwAuthEventAuthFailVlan=hwAuthEventAuthFailVlan, hwLocalUserBlockFailTimes=hwLocalUserBlockFailTimes, hwAAASlotIPv6AddressThresholdResume=hwAAASlotIPv6AddressThresholdResume, hwMACAuthenAccessProfileTable=hwMACAuthenAccessProfileTable, hwMACAuthenAccessProfileFixedPassword=hwMACAuthenAccessProfileFixedPassword, hwMACAuthenAccessProfileTriggerPktType=hwMACAuthenAccessProfileTriggerPktType, hwDhcpOpt121RouteEntry=hwDhcpOpt121RouteEntry, hwSlotCardConnectNumOnlineNum=hwSlotCardConnectNumOnlineNum, hwLAMTrapsDefine=hwLAMTrapsDefine, hwMulticastListBindName=hwMulticastListBindName, hwAAAInboundVPNName=hwAAAInboundVPNName, hwAAARateType=hwAAARateType, hwDot1xAccessProfileEAPNotifyPktEAPCode=hwDot1xAccessProfileEAPNotifyPktEAPCode, hwMulticastListGroup=hwMulticastListGroup, hwIPLowerlimitWarningAlarm=hwIPLowerlimitWarningAlarm, hwAuthorSchemeTable=hwAuthorSchemeTable, userAuthenProfileAuthenticationMode=userAuthenProfileAuthenticationMode, hwMACAuthenAccessProfileName=hwMACAuthenAccessProfileName, hwRemoteRetryTime=hwRemoteRetryTime, hwQosProfileName=hwQosProfileName, hwBillsTFTPMainFileName=hwBillsTFTPMainFileName, hwDot1xAccessProfileTable=hwDot1xAccessProfileTable, hwRecordRowStatus=hwRecordRowStatus, hwPortalAccessProfileName=hwPortalAccessProfileName, hwLocalBlockTime=hwLocalBlockTime, hwAccessVRF=hwAccessVRF, userAuthenProfileName=userAuthenProfileName, hwDomainExt2Entry=hwDomainExt2Entry, hwAcctRowStatus=hwAcctRowStatus, hwAccessIPv6UpFlow64=hwAccessIPv6UpFlow64, hwLocalUserPasswordLifetimeMax=hwLocalUserPasswordLifetimeMax, hwAccessGateway=hwAccessGateway, hwUserVlan=hwUserVlan, hwStatisticPeriod=hwStatisticPeriod, hwOfflineRecordDomainName=hwOfflineRecordDomainName, hwTotalWrdOnlineNum=hwTotalWrdOnlineNum, hwSystemRecord=hwSystemRecord, hwMulticastListRowStatus=hwMulticastListRowStatus, hwDomainAcctRequestsRcvNum=hwDomainAcctRequestsRcvNum, hwAAASessionGroupUpperLimitThreshold=hwAAASessionGroupUpperLimitThreshold, hwAAARateGroup=hwAAARateGroup, hwLocalUserAccessType=hwLocalUserAccessType, hwDomainName=hwDomainName, hwDomainServiceType=hwDomainServiceType, hwAAADomainInboundVPNInstance=hwAAADomainInboundVPNInstance, userAuthenProfileDot1xAccessProfileName=userAuthenProfileDot1xAccessProfileName, hwDomainZone=hwDomainZone, hwDomainStatGroup=hwDomainStatGroup, hwDomainIPPoolMoveTo=hwDomainIPPoolMoveTo, hwDomainNameParseDirection=hwDomainNameParseDirection, hwOnlineUserNumUpperLimitResume=hwOnlineUserNumUpperLimitResume, hwUserLogGroup=hwUserLogGroup, hwSetUserQosProfileFail=hwSetUserQosProfileFail, hwVpnAccessUserStatUserStat=hwVpnAccessUserStatUserStat, hwResetOfflineReasonStatistic=hwResetOfflineReasonStatistic, hwHarddiskOK=hwHarddiskOK, hwAccessDelayPerSlotMaxTime=hwAccessDelayPerSlotMaxTime, hwCmdRecord=hwCmdRecord, hwAuthorCmdLevel=hwAuthorCmdLevel, hwMACAuthenAccessProfileDHCPRelaseOffline=hwMACAuthenAccessProfileDHCPRelaseOffline, PYSNMP_MODULE_ID=hwAaa, hwMACAuthenAccessProfileEntry=hwMACAuthenAccessProfileEntry, hwAAARateRealPercent=hwAAARateRealPercent, hwIfL2tpRadiusForce=hwIfL2tpRadiusForce, userAuthenProfileAuthenFailReAuthenTimer=userAuthenProfileAuthenFailReAuthenTimer, hwAAACallRate=hwAAACallRate, hwAuthorSchemeGroup=hwAuthorSchemeGroup, hwDomainIPExcludeNum=hwDomainIPExcludeNum, hwAccessAPID=hwAccessAPID, hwIPAccessIPaddress=hwIPAccessIPaddress, hwIPPoolThreeName=hwIPPoolThreeName, hwUserGroupThresholdResume=hwUserGroupThresholdResume, hwLocalUserIpAddress=hwLocalUserIpAddress, hwUserInterface=hwUserInterface, hwNasSerial=hwNasSerial, hwDhcpOpt121RouteNextHop=hwDhcpOpt121RouteNextHop, hwSlotCardConnectNumSlot=hwSlotCardConnectNumSlot, hwReauthorizeUsergroup=hwReauthorizeUsergroup, hwAAADomainIPPoolTable=hwAAADomainIPPoolTable, hwDomainIPv6AddressTotalNum=hwDomainIPv6AddressTotalNum, userAuthenProfilePreAuthenVLAN=userAuthenProfilePreAuthenVLAN, hwTotalLnsOnlineNum=hwTotalLnsOnlineNum, hwAAATimerExpireCriticalLevelAlarm=hwAAATimerExpireCriticalLevelAlarm, hwMaxMulticastListNum=hwMaxMulticastListNum, hwSlotCardConnectNumTable=hwSlotCardConnectNumTable, hwUserAuthenState=hwUserAuthenState, userAuthenProfileAuthenServerDownUserGroupName=userAuthenProfileAuthenServerDownUserGroupName, hwRecordTacGroupName=hwRecordTacGroupName, hwDomainAccessUserStatEntry=hwDomainAccessUserStatEntry, hwAdminLoginFailed=hwAdminLoginFailed)
mibBuilder.exportSymbols("HUAWEI-AAA-MIB", hwDomainIncludePoolGroupEntry=hwDomainIncludePoolGroupEntry, hwUpperMacMovedUserPercentage=hwUpperMacMovedUserPercentage, hwMACAccessTable=hwMACAccessTable, hwAAAUserWebandFast=hwAAAUserWebandFast, hwAccessCurAuthorPlace=hwAccessCurAuthorPlace, hwDomainDhcpServerAck=hwDomainDhcpServerAck, hwAAAChasisIPv6AddressThresholdAlarm=hwAAAChasisIPv6AddressThresholdAlarm, hwAuthenFailPolicy=hwAuthenFailPolicy, hwDomainVrf=hwDomainVrf, hwAccessIPv6DnPacket64=hwAccessIPv6DnPacket64, hwRbpStateChange=hwRbpStateChange, hwDot1xAccessProfileReAuthenEnable=hwDot1xAccessProfileReAuthenEnable, hwAAAUserDot1X=hwAAAUserDot1X, hwTotalBindConnectNum=hwTotalBindConnectNum, hwUserType=hwUserType, hwInnerIsolateFlag=hwInnerIsolateFlag, hwPortalAccessProfileTable=hwPortalAccessProfileTable, hwAccessSSID=hwAccessSSID, hwAccessIPv6CPAssignIFID=hwAccessIPv6CPAssignIFID, hwWlanInterfaceEntry=hwWlanInterfaceEntry, hwDomainIdleCutTime=hwDomainIdleCutTime, hwAAAOnlineFailRecordTable=hwAAAOnlineFailRecordTable, hwShowUserLogStatistic=hwShowUserLogStatistic, hwOutboundRecord=hwOutboundRecord, hwGlobalAuthEventPreAuthUserGroup=hwGlobalAuthEventPreAuthUserGroup, hwGlobalAuthEventAuthFailUserGroup=hwGlobalAuthEventAuthFailUserGroup, hwMulticastListEntry=hwMulticastListEntry, hwOfflineRecordUserLoginTime=hwOfflineRecordUserLoginTime, hwAAASessionGroupLowerLimitThreshold=hwAAASessionGroupLowerLimitThreshold, userAuthenProfileRowStatus=userAuthenProfileRowStatus, hwAuthorCmdEntry=hwAuthorCmdEntry, hwUserLogPort=hwUserLogPort, hwLocalUserPwPolicyAdminEntry=hwLocalUserPwPolicyAdminEntry, userAuthenProfileDot1xDefaultDomain=userAuthenProfileDot1xDefaultDomain, hwAAATimerExpireMajorLevelResumeThreshold=hwAAATimerExpireMajorLevelResumeThreshold, hwStateBlockFirstTimeRangeName=hwStateBlockFirstTimeRangeName, hwInterfaceAccessUserStatGroup=hwInterfaceAccessUserStatGroup, hwAccessCARIfUpActive=hwAccessCARIfUpActive, hwTotalLacOnlineNum=hwTotalLacOnlineNum, hwMACAuthenAccessProfileUserNameFixedUserName=hwMACAuthenAccessProfileUserNameFixedUserName, hwAccessSlotNo=hwAccessSlotNo, hwDomainPDPrefixTotalNum=hwDomainPDPrefixTotalNum, hwAccessDelayTime=hwAccessDelayTime, hwGlobalAuthEventAuthenServerDownUserGroup=hwGlobalAuthEventAuthenServerDownUserGroup, userAuthenProfileMACAuthenDefaultDomain=userAuthenProfileMACAuthenDefaultDomain, hwBillPoolTable=hwBillPoolTable, hwAccessIPv6IFID=hwAccessIPv6IFID, hwSlotAccessUserStatTable=hwSlotAccessUserStatTable, hwAAASettingEntry=hwAAASettingEntry, hwPPPUserOfflineStandardize=hwPPPUserOfflineStandardize, hwDomainIncludeIPPoolMoveto=hwDomainIncludeIPPoolMoveto, hwDot1xAccessProfileHandShakePktType=hwDot1xAccessProfileHandShakePktType, hwRedKeyUserMac=hwRedKeyUserMac, hwAAAUserBind=hwAAAUserBind, hwMacMovedQuietMaxUserAlarm=hwMacMovedQuietMaxUserAlarm, userAuthenProfileSingleAccess=userAuthenProfileSingleAccess, hwSlotCardConnectNumCard=hwSlotCardConnectNumCard, hwUserIPAddress=hwUserIPAddress, hwLocalUserPasswordLifetimeMin=hwLocalUserPasswordLifetimeMin, hwAccessIPv6LanPrefixLen=hwAccessIPv6LanPrefixLen, hwAAAChasisIPv6AddressThresholdResume=hwAAAChasisIPv6AddressThresholdResume, hwAAASessionGroupLowerLimitResume=hwAAASessionGroupLowerLimitResume, hwAdminUserPriority=hwAdminUserPriority, userAuthenticationFreeRuleDestinationIP=userAuthenticationFreeRuleDestinationIP, hwAccessIPv6UpPacket64=hwAccessIPv6UpPacket64, userAuthenticationFreeRuleDestinationIPMask=userAuthenticationFreeRuleDestinationIPMask, hwAaaConformance=hwAaaConformance, hwDomainIPUsedNum=hwDomainIPUsedNum, hwDomainNDRAPrefixTotalNum=hwDomainNDRAPrefixTotalNum, hwAuthenSchemeGroup=hwAuthenSchemeGroup, hwIPOXUsernameIP=hwIPOXUsernameIP, userAuthenticationFreeRuleDestinationProtocol=userAuthenticationFreeRuleDestinationProtocol, hwQoSProfileName=hwQoSProfileName, hwDomainNameDelimiter=hwDomainNameDelimiter, hwTotalDualStackOnlineNum=hwTotalDualStackOnlineNum, hwAccessExtEntry=hwAccessExtEntry, hwDomainIPTotalNum=hwDomainIPTotalNum, hwAAATimerExpireMajorLevelResume=hwAAATimerExpireMajorLevelResume, hwAAARateTable=hwAAARateTable, hwAAARateDirection=hwAAARateDirection, hwDot1xAccessProfileClientTimeout=hwDot1xAccessProfileClientTimeout, hwPortalURL=hwPortalURL, hwServiceSchemeEntry=hwServiceSchemeEntry, userAuthenProfileAuthenFailAgingTime=userAuthenProfileAuthenFailAgingTime, hwAAACpuUsage=hwAAACpuUsage, hwSlotCardConnectNum8021xAuthNum=hwSlotCardConnectNum8021xAuthNum, hwUserGroupEntry=hwUserGroupEntry, hwStateBlockForthTimeRangeName=hwStateBlockForthTimeRangeName, hwTotalAuthenFailNum=hwTotalAuthenFailNum, hwTotaltelnetOnlineNum=hwTotaltelnetOnlineNum, hwMACAccessCID=hwMACAccessCID, hwAuthenFailDomain=hwAuthenFailDomain, hwCutEndUserID=hwCutEndUserID, hwDomainFlowUpByte=hwDomainFlowUpByte, userAuthenticationFreeRuleSourceIP=userAuthenticationFreeRuleSourceIP, hwDomainIPPoolMoveToEntry=hwDomainIPPoolMoveToEntry, hwIPv6AddressLowerlimitWarningResume=hwIPv6AddressLowerlimitWarningResume, userAuthenProfilePortalDefaultDomain=userAuthenProfilePortalDefaultDomain, hwDot1xAccessProfileURL=hwDot1xAccessProfileURL, hwAdminEnable=hwAdminEnable, hwDomainFlowDnByte=hwDomainFlowDnByte, hwServiceSchemeDnsSecond=hwServiceSchemeDnsSecond, hwAcctSchemeName=hwAcctSchemeName, hwAccEnable=hwAccEnable, userAuthenProfileUserGroupName=userAuthenProfileUserGroupName, hwStartFailOnlineIfSendInterim=hwStartFailOnlineIfSendInterim, hwSlotCardConnectNumNoAuthNum=hwSlotCardConnectNumNoAuthNum, userAuthenProfilePortalAccessProfileName=userAuthenProfilePortalAccessProfileName, hwAAAOnlineFailIndex=hwAAAOnlineFailIndex, hwUserMaxNum=hwUserMaxNum, hwPoratalServerUrlParameter=hwPoratalServerUrlParameter, hwLocalUserCallBackDialStr=hwLocalUserCallBackDialStr, hwdomainipv6nexthop=hwdomainipv6nexthop, hwUserIPv6PDPrefixLength=hwUserIPv6PDPrefixLength, hwAccessBasicIPType=hwAccessBasicIPType, hwWlanInterfaceDomainNameSecurityDelimiter=hwWlanInterfaceDomainNameSecurityDelimiter, hwMulticastListSourceIpMask=hwMulticastListSourceIpMask, hwCutMacAddres=hwCutMacAddres, hwAccessCurAuthenPlace=hwAccessCurAuthenPlace, hwMACAuthenAccessProfileReauthenticationTimeout=hwMACAuthenAccessProfileReauthenticationTimeout, hwDomainNDRAPrefixExcludeNum=hwDomainNDRAPrefixExcludeNum, hwDot1xAccessProfileEthTrunkHandShakePeriod=hwDot1xAccessProfileEthTrunkHandShakePeriod, hwDomainPDPrefixUsedNum=hwDomainPDPrefixUsedNum, hwTotalIPv4FlowUpByte=hwTotalIPv4FlowUpByte, hwUserName=hwUserName, hwAAASessionLowerLimitThreshold=hwAAASessionLowerLimitThreshold, hwDomainIncludeIPPoolName=hwDomainIncludeIPPoolName, hwIdleTimeLength=hwIdleTimeLength, hwAuthorSchemeName=hwAuthorSchemeName, hwOfflineRecordIPAddress=hwOfflineRecordIPAddress, userAuthenProfileAuthenFailAuthorVLAN=userAuthenProfileAuthenFailAuthorVLAN, hwSecDnsIPv6Address=hwSecDnsIPv6Address, hwAccessCARUpPIR=hwAccessCARUpPIR, hwMulticastProfileExtRowStatus=hwMulticastProfileExtRowStatus, hwLocalUserPasswordIsOrginal=hwLocalUserPasswordIsOrginal, hwAaaTrapsNotificationsGroup=hwAaaTrapsNotificationsGroup, hwUclGrpTable=hwUclGrpTable, hwTotalSuccessWebConnectNum=hwTotalSuccessWebConnectNum, hwIPPoolOneName=hwIPPoolOneName, hwUserSlotMaxNumThreshold=hwUserSlotMaxNumThreshold, hwAcctSchemeExtGroup=hwAcctSchemeExtGroup, hwIPv6CPIFIDAvailable=hwIPv6CPIFIDAvailable, hwInterIsolateFlag=hwInterIsolateFlag, hwUserLogTable=hwUserLogTable, hwWebServerUrlParameter=hwWebServerUrlParameter, hwTotalftpOnlineNum=hwTotalftpOnlineNum, hwAccessExtTable=hwAccessExtTable, hwSlotCardConnectNumPPPAuthNum=hwSlotCardConnectNumPPPAuthNum, hwUclIndex=hwUclIndex, hwDomainNDRAPrefixConflictNum=hwDomainNDRAPrefixConflictNum, userAuthenProfileAuthenServerDownServiceSchemeName=userAuthenProfileAuthenServerDownServiceSchemeName, hwAAAAccessUserResourceOrCpuResume=hwAAAAccessUserResourceOrCpuResume, hwOfflineRecordUserID=hwOfflineRecordUserID, hwAccessGroup=hwAccessGroup, hwAAADomainIPPoolName=hwAAADomainIPPoolName, hwPortalAccessProfilePortalServerName=hwPortalAccessProfilePortalServerName, hwRbpNewState=hwRbpNewState, hwUserIPv6PDPrefix=hwUserIPv6PDPrefix, hw8021pRemark=hw8021pRemark, hwLocalUserExtTable=hwLocalUserExtTable, hwServiceSchemeIdleCutFlow=hwServiceSchemeIdleCutFlow, hwAAARateRealUsedCount=hwAAARateRealUsedCount, hwSlotConnectNumEntry=hwSlotConnectNumEntry, hwDomainIPv6AddressUsedPercent=hwDomainIPv6AddressUsedPercent, hwDomainUserGroupName=hwDomainUserGroupName, hwIpAccessGroup=hwIpAccessGroup, hwCutVCI=hwCutVCI, hwAuthEventAuthenServerDownResponseFail=hwAuthEventAuthenServerDownResponseFail, hwEDSGLicenseExpireAlarm=hwEDSGLicenseExpireAlarm, hwLocalUserPasswordExpireTime=hwLocalUserPasswordExpireTime, hwAAAMibObjects=hwAAAMibObjects, hwRemoteDownloadAclThresholdValue=hwRemoteDownloadAclThresholdValue, hwAccessMACAddress=hwAccessMACAddress, hwBillsPoolReset=hwBillsPoolReset, hwAcctSessionID=hwAcctSessionID, hwDot1xAccessProfileUnicastTrigger=hwDot1xAccessProfileUnicastTrigger, hwAAAOfflineIndex=hwAAAOfflineIndex, hwAAATimerExpireCriticalLevelThreshold=hwAAATimerExpireCriticalLevelThreshold, hwLocalUserPwPolicyAccEntry=hwLocalUserPwPolicyAccEntry, hwAaaUserPppGroup=hwAaaUserPppGroup, hwLocalUserVpnInstance=hwLocalUserVpnInstance, hwTotalOtherPPPFailNum=hwTotalOtherPPPFailNum, hwDomainIdleCutFlow=hwDomainIdleCutFlow, hwDomainAuthenRequestsRcvNum=hwDomainAuthenRequestsRcvNum, hwAdminAlertOrginal=hwAdminAlertOrginal, hwOfflineReasonStatistic=hwOfflineReasonStatistic, userAuthenProfileDomainNameParseDirection=userAuthenProfileDomainNameParseDirection, hwAAAChasisIPv6AddressThreshold=hwAAAChasisIPv6AddressThreshold, hwTotalIPv4FlowDnPkt=hwTotalIPv4FlowDnPkt, hwSlotAccessUserStatGroup=hwSlotAccessUserStatGroup, hwRealmNameLocation=hwRealmNameLocation, hwDomainAccessUserStatGroup=hwDomainAccessUserStatGroup, hwOnlineUserNumUpperLimitAlarm=hwOnlineUserNumUpperLimitAlarm, hwOnlineUserNumLowerLimitThreshold=hwOnlineUserNumLowerLimitThreshold, hwLocalUserPasswordSetTime=hwLocalUserPasswordSetTime, hwAuthorModifyMode=hwAuthorModifyMode, hwSlotCardConnectNumTunnelAuthNum=hwSlotCardConnectNumTunnelAuthNum, hwMACAuthenAccessProfileRowStatus=hwMACAuthenAccessProfileRowStatus, hwUserLogEntry=hwUserLogEntry, hwAaaUserBindGroup=hwAaaUserBindGroup, hwAAAUserResourceUsage=hwAAAUserResourceUsage, hwAAASessionGroupUpperLimitAlarm=hwAAASessionGroupUpperLimitAlarm, userAuthenProfileEntry=userAuthenProfileEntry, hwLocalUserPasswordIsExpired=hwLocalUserPasswordIsExpired, hwUclGrpRowStatus=hwUclGrpRowStatus, hwDot1xAccessProfileTxPeriod=hwDot1xAccessProfileTxPeriod, hwRealtimeFailMaxnum=hwRealtimeFailMaxnum, hwTotalConnectNum=hwTotalConnectNum, hwServiceSchemeTable=hwServiceSchemeTable, hwUserIPv6Address=hwUserIPv6Address, userAuthenProfileDefaultDomain=userAuthenProfileDefaultDomain, hwOnlineUserNumLowerLimitResume=hwOnlineUserNumLowerLimitResume, hwAccessPortType=hwAccessPortType, hwIPOXpassword=hwIPOXpassword, hwValRadiusServer=hwValRadiusServer, hwDomainIndex=hwDomainIndex, hwTotalIPv6FlowDnByte=hwTotalIPv6FlowDnByte, hwRecordSchemeName=hwRecordSchemeName, hwUserGroupCarPir=hwUserGroupCarPir, userAuthenProfileDomainNameLocation=userAuthenProfileDomainNameLocation, hwLocalUserIdleTimeoutSecond=hwLocalUserIdleTimeoutSecond, hwAclId=hwAclId, hwDomainAuthenAcceptsNum=hwDomainAuthenAcceptsNum, hwLpRemark=hwLpRemark, hwAdminLoginFailedClear=hwAdminLoginFailedClear, hwMacMovedUserPercentage=hwMacMovedUserPercentage, userAuthenProfileMaxUser=userAuthenProfileMaxUser, hwDomainExtGroup=hwDomainExtGroup, hwUserMAC=hwUserMAC, hwOfflineReason=hwOfflineReason, hwReauthorizeUsername=hwReauthorizeUsername, hwValAcctType=hwValAcctType, hwDomainAcctRspSuccessNum=hwDomainAcctRspSuccessNum, hwMulticastProfileEntry=hwMulticastProfileEntry, hwCopsGroupSIGType=hwCopsGroupSIGType, hwAAADomainIPPoolRowStatus=hwAAADomainIPPoolRowStatus, hwDnsIPAddress=hwDnsIPAddress, hwTotalIPv6FlowUpByte=hwTotalIPv6FlowUpByte, hwAAAOnlineFailRecordEntry=hwAAAOnlineFailRecordEntry, userAuthenticationFreeRuleACLNumber=userAuthenticationFreeRuleACLNumber, hwValCopsServer=hwValCopsServer, hwAccessVLANID=hwAccessVLANID, hwDomainIgmpEnable=hwDomainIgmpEnable, userAuthenticationFreeRuleName=userAuthenticationFreeRuleName, hwRbsDown=hwRbsDown, hwAccessIPv6WanAddress=hwAccessIPv6WanAddress, hwUserGroupCarInBoundPbs=hwUserGroupCarInBoundPbs, userAuthenProfileDot1xForceDomain=userAuthenProfileDot1xForceDomain, hwAccessIfIdleCut=hwAccessIfIdleCut, hwMulticastVirtualSchedulRezCir=hwMulticastVirtualSchedulRezCir, hwHarddiskReachThreshold=hwHarddiskReachThreshold, hwPortalAccessProfileRowStatus=hwPortalAccessProfileRowStatus, hwDomainEntry=hwDomainEntry, hwLowerMacMovedUserPercentage=hwLowerMacMovedUserPercentage)
mibBuilder.exportSymbols("HUAWEI-AAA-MIB", hwDomainExt2Table=hwDomainExt2Table, hwAAARateRealPeak=hwAAARateRealPeak, hwWlanInterfaceGroup=hwWlanInterfaceGroup, hwReauthorizeEntry=hwReauthorizeEntry, hwOfflineRecordUserLogoutTime=hwOfflineRecordUserLogoutTime, hwDomainOutboundL2tpQoSProfile=hwDomainOutboundL2tpQoSProfile, hwLocalUserEntry=hwLocalUserEntry, hwTotalIPv6FlowUpPkt=hwTotalIPv6FlowUpPkt, hwDhcpUserOnlineFailCount=hwDhcpUserOnlineFailCount, hwAccessDomainAcctCopySeverGroup=hwAccessDomainAcctCopySeverGroup, hwOfflineRecordOfflineReason=hwOfflineRecordOfflineReason, hwTotalVLANOnlineNum=hwTotalVLANOnlineNum, hwIPv6AddressLowerlimitWarningAlarm=hwIPv6AddressLowerlimitWarningAlarm, hwStateBlockSecondTimeRangeName=hwStateBlockSecondTimeRangeName, hwAccessResourceInsufficientOutbound=hwAccessResourceInsufficientOutbound, hwPoratalServerFirstUrlKeyDefaultName=hwPoratalServerFirstUrlKeyDefaultName, hwHarddiskoverflow=hwHarddiskoverflow, hwAFTRName=hwAFTRName, hwAccessDelayPerSlotTransitionStep=hwAccessDelayPerSlotTransitionStep, hwOfflineReasonStatGroup=hwOfflineReasonStatGroup, hwDomainAcctSchemeName=hwDomainAcctSchemeName, userAuthenticationFreeRuleRowStatus=userAuthenticationFreeRuleRowStatus, hwBindAuthWebIP=hwBindAuthWebIP, hwDomainStatEntry=hwDomainStatEntry, hwTotalIPv4OnlineNum=hwTotalIPv4OnlineNum, hwVpnAccessUserStatEntry=hwVpnAccessUserStatEntry, hwRbpChangeName=hwRbpChangeName, hwAccessIPv6LanPrefix=hwAccessIPv6LanPrefix, hwSlotAccessUserStatUserStat=hwSlotAccessUserStatUserStat, hwLocalUserRowStatus=hwLocalUserRowStatus, hwAccessAcctMethod=hwAccessAcctMethod, hwAccessUserGroup=hwAccessUserGroup, hwOfflineRecordUserMAC=hwOfflineRecordUserMAC, hwOnlineUserNumLowerLimitAlarm=hwOnlineUserNumLowerLimitAlarm, hwAcctSchemeExtTable=hwAcctSchemeExtTable, hwStateBlockThirdTimeRangeName=hwStateBlockThirdTimeRangeName, hwDomainIfSrcRoute=hwDomainIfSrcRoute, hwWebServerIPSlave=hwWebServerIPSlave, hwIPv6PoolLowerLimitWarningThreshold=hwIPv6PoolLowerLimitWarningThreshold, hwAdminAlertBefore=hwAdminAlertBefore, hwMACAuthenAccessProfileDHCPRenewReAuthen=hwMACAuthenAccessProfileDHCPRenewReAuthen, hwGlobalAuthEventAuthenServerDownVlan=hwGlobalAuthEventAuthenServerDownVlan, hwAuthEventAuthFailResponseFail=hwAuthEventAuthFailResponseFail, hwPortalAccessProfileAlarmUserHighNum=hwPortalAccessProfileAlarmUserHighNum, hwAccessCARDnCIR=hwAccessCARDnCIR, hwMulticastListGroupIp=hwMulticastListGroupIp, hwRbpChangeReason=hwRbpChangeReason, hwTotalSuccessDot1XConnectNum=hwTotalSuccessDot1XConnectNum, hwEDSGLicenseExpireResume=hwEDSGLicenseExpireResume, hwDot1xAccessProfileTriggerPktType=hwDot1xAccessProfileTriggerPktType, hwUserGroupUserVlanPool=hwUserGroupUserVlanPool, hwVpdnGroupName=hwVpdnGroupName, hwDomainNextHopIP=hwDomainNextHopIP, hwAccessPortNo=hwAccessPortNo, hwDomainPDPrefixConflictNum=hwDomainPDPrefixConflictNum, userAuthenProfileAuthenFailAuthorUserGroupName=userAuthenProfileAuthenFailAuthorUserGroupName, hwDomainIPv6FlowDnPkt=hwDomainIPv6FlowDnPkt, hwUclGrpGroup=hwUclGrpGroup, userAuthenProfileDomainNameDelimiter=userAuthenProfileDomainNameDelimiter, hwAccessDelayTransitionStep=hwAccessDelayTransitionStep, hwDomainFlowStatistic=hwDomainFlowStatistic, hwDomainNameSecurityDelimiter=hwDomainNameSecurityDelimiter, hwLocalUserState=hwLocalUserState, userAuthenProfileAuthenSchemeName=userAuthenProfileAuthenSchemeName, hwUserGroupCarCbs=hwUserGroupCarCbs, hwTotalPPPoAOnlineNum=hwTotalPPPoAOnlineNum, hwSlotCardConnectNumAdminAuthNum=hwSlotCardConnectNumAdminAuthNum, hwMACAuthenAccessProfileReAuthenEnable=hwMACAuthenAccessProfileReAuthenEnable, hwShapingTemplate=hwShapingTemplate, hwRemoteDownloadAclUsedValue=hwRemoteDownloadAclUsedValue, hwReauthorizeEnable=hwReauthorizeEnable, hwRemoteDownloadAclThresholdResume=hwRemoteDownloadAclThresholdResume, hwHdWarningThreshold=hwHdWarningThreshold, hwLocalUserPwPolicyAccGroup=hwLocalUserPwPolicyAccGroup, hwDomainAccessLimitNum=hwDomainAccessLimitNum, hwDot1xAccessProfileGroup=hwDot1xAccessProfileGroup, hwBindAuthWebVrf=hwBindAuthWebVrf, hwAAARateRealAverage=hwAAARateRealAverage, hwAccessIdleCutTime=hwAccessIdleCutTime, hwSlotCardConnectNumWlanAuthNum=hwSlotCardConnectNumWlanAuthNum, hwGlobalAuthEventClientNoResponseUserGroup=hwGlobalAuthEventClientNoResponseUserGroup, hwUserLoginTime=hwUserLoginTime, hwDomainIPv6AddressConflictNum=hwDomainIPv6AddressConflictNum, hwAuthEventCfgTable=hwAuthEventCfgTable, hwServiceSchemeRowStatus=hwServiceSchemeRowStatus, hwCutUserAttri=hwCutUserAttri, hwDhcpOpt121RouteTable=hwDhcpOpt121RouteTable, hwCutAccessInterface=hwCutAccessInterface, hwMacMovedQuietUserClearAlarm=hwMacMovedQuietUserClearAlarm, hwBindAuthWebIPSlave=hwBindAuthWebIPSlave, hwMacMovedQuietUserSpec=hwMacMovedQuietUserSpec, hwBillTFTPTable=hwBillTFTPTable, hwRecordSchemeEntry=hwRecordSchemeEntry, hwUclGroupName=hwUclGroupName, hwAccessNormalServerGroup=hwAccessNormalServerGroup, hwDomainIncludePoolGroupTable=hwDomainIncludePoolGroupTable, hwAccessIPv6DnFlow64=hwAccessIPv6DnFlow64, hwDomainRadiusGroupName=hwDomainRadiusGroupName, hwIPv6CPWaitDHCPv6Delay=hwIPv6CPWaitDHCPv6Delay, hwTotalIPv4FlowDnByte=hwTotalIPv4FlowDnByte, hwSlotCardConnectNumIPv4OnlineNum=hwSlotCardConnectNumIPv4OnlineNum, hwPortalAccessProfileLocalServerEnable=hwPortalAccessProfileLocalServerEnable, hwDomainIncludePoolGroup=hwDomainIncludePoolGroup, hwMACAuthenAccessProfileMACAddressPassword=hwMACAuthenAccessProfileMACAddressPassword, hwLocalUserPwPolicyAdminGroup=hwLocalUserPwPolicyAdminGroup, hwDomainGre=hwDomainGre, hwCutIfIndex=hwCutIfIndex, hwAccessIPAddress=hwAccessIPAddress, hwAuthenRowStatus=hwAuthenRowStatus, hwLoginFailedTimes=hwLoginFailedTimes, hwTotalNCPFailNum=hwTotalNCPFailNum, hwAccessActionFlag=hwAccessActionFlag, hwGlobalDhcpOpt64SepAndSeg=hwGlobalDhcpOpt64SepAndSeg, userAuthenProfileAuthenticationMaxUser=userAuthenProfileAuthenticationMaxUser, hwAccessIPv6CPIFIDAvailable=hwAccessIPv6CPIFIDAvailable, hwCutAccessSlot=hwCutAccessSlot, hwAAADomainIPPoolIndex=hwAAADomainIPPoolIndex, hwAcctStartFail=hwAcctStartFail, hwUserIPv6AddressAllocAlarm=hwUserIPv6AddressAllocAlarm, hwMulticastListName=hwMulticastListName, hwRemoteRetryInterval=hwRemoteRetryInterval, hwRoamChar=hwRoamChar, hwOnlineUserNumUpperLimitThreshold=hwOnlineUserNumUpperLimitThreshold, hwBillsPoolAlarmThreshold=hwBillsPoolAlarmThreshold, hwCutIPPoolName=hwCutIPPoolName, hwDomainPPPURL=hwDomainPPPURL, hwPortalAccessProfileAuthenNetWork=hwPortalAccessProfileAuthenNetWork, hwMulticastListVpnInstance=hwMulticastListVpnInstance, userAuthenticationFreeRuleSourceVlan=userAuthenticationFreeRuleSourceVlan, hwAcctRealTimeIntervalUnit=hwAcctRealTimeIntervalUnit, hwSrvSchemeAdminUserPriority=hwSrvSchemeAdminUserPriority, userAuthenticationFreeRuleSourceIPMask=userAuthenticationFreeRuleSourceIPMask, hwMulticastVirtualSchedulRezPir=hwMulticastVirtualSchedulRezPir, hwRemoteBlockTime=hwRemoteBlockTime, hwAuthorCmdMode=hwAuthorCmdMode, hwMulticastProfileExtEntry=hwMulticastProfileExtEntry, hwLocalUserIfAllowWeakPassword=hwLocalUserIfAllowWeakPassword, hwBillsTFTPSrvIP=hwBillsTFTPSrvIP, hwAAAUserPPP=hwAAAUserPPP, userAuthenticationFreeRuleSourceMac=userAuthenticationFreeRuleSourceMac, hwReauthorizeGroup=hwReauthorizeGroup, hwServiceSchemeIdleCutFlowValue=hwServiceSchemeIdleCutFlowValue, hwPortalAccessProfileAlarmUserLowNum=hwPortalAccessProfileAlarmUserLowNum, hwCutUserGroup=hwCutUserGroup, hwOfflineRecordAccessPeVlan=hwOfflineRecordAccessPeVlan, userAuthenticationFreeRuleEntry=userAuthenticationFreeRuleEntry, hwAccessTimeLimit=hwAccessTimeLimit, hwCutUserSSID=hwCutUserSSID, hwAccessUCLGroup=hwAccessUCLGroup, hwAccMethod=hwAccMethod, hwWebServerRedirectKeyMscgName=hwWebServerRedirectKeyMscgName, hwReplyMessage=hwReplyMessage, hwPortalAccessProfileGroup=hwPortalAccessProfileGroup, hwAAATimerExpireMajorLevelAlarm=hwAAATimerExpireMajorLevelAlarm, hwUserGroupCarPbs=hwUserGroupCarPbs, hwSlotConnectNumTable=hwSlotConnectNumTable, hwAdminPwHistroyRecordNum=hwAdminPwHistroyRecordNum, hwAAATimerExpireCriticalLevelResume=hwAAATimerExpireCriticalLevelResume, hwDomainForcePushUrl=hwDomainForcePushUrl, hwPortalServerIP=hwPortalServerIP, hwAAADomainOutboundQoSProfile=hwAAADomainOutboundQoSProfile, hwAAAInboundVPNAccessUserStat=hwAAAInboundVPNAccessUserStat, hwAAADomainInboundQoSProfile=hwAAADomainInboundQoSProfile, userAuthenProfilePortalForceDomain=userAuthenProfilePortalForceDomain, hwAuthEventClientNoResponseVlan=hwAuthEventClientNoResponseVlan, hwTotalOnlineNum=hwTotalOnlineNum, hwRecordSchemeTable=hwRecordSchemeTable, hwDomainNameLocation=hwDomainNameLocation, hwftpdirction=hwftpdirction, hwMaxUserThresholdType=hwMaxUserThresholdType, hwDot1xAccessProfileMaxRetryValue=hwDot1xAccessProfileMaxRetryValue, hwDomainForcePushUrlTemplate=hwDomainForcePushUrlTemplate, hwBillsPoolVolume=hwBillsPoolVolume, hwAccessExtGroup=hwAccessExtGroup, hwOnlineFailReason=hwOnlineFailReason, hwDomainIPPoolMoveToTable=hwDomainIPPoolMoveToTable, hwAccessDelayMinTime=hwAccessDelayMinTime, hwTotalIPv4FlowUpPkt=hwTotalIPv4FlowUpPkt, hwWebServerMode=hwWebServerMode, userAuthenProfileFreeRuleName=userAuthenProfileFreeRuleName, hwDot1xAccessProfileName=hwDot1xAccessProfileName, userAuthenProfileSecurityNameDelimiter=userAuthenProfileSecurityNameDelimiter, hwInterfaceAccessUserStatUserStat=hwInterfaceAccessUserStatUserStat, hwOnlineUserNumAlarm=hwOnlineUserNumAlarm, hwAAAPasswordRepeatNumber=hwAAAPasswordRepeatNumber, hwAAADomainIPPoolPosition=hwAAADomainIPPoolPosition, hwPCReducePir=hwPCReducePir, hwDomainIPv6FlowUpPkt=hwDomainIPv6FlowUpPkt, hwAaaCompliances=hwAaaCompliances, hwBindAuthWebVrfSlave=hwBindAuthWebVrfSlave, hwServiceSchemeDnsFirst=hwServiceSchemeDnsFirst, hwIPv6PrefixshareFlag=hwIPv6PrefixshareFlag, hwTotalWebConnectNum=hwTotalWebConnectNum, hwAuthorSchemeEntry=hwAuthorSchemeEntry, hwDomainGroup=hwDomainGroup, hwVpnAccessUserStatGroup=hwVpnAccessUserStatGroup, hwAAAOfflineRecordTable=hwAAAOfflineRecordTable, hwIPv6NDRAPrefixLowerlimitWarningResume=hwIPv6NDRAPrefixLowerlimitWarningResume, hwUserIPAllocAlarm=hwUserIPAllocAlarm, hwAccessIPv6WaitDelay=hwAccessIPv6WaitDelay, hwBillsPoolBackupMode=hwBillsPoolBackupMode, hwDownPriority=hwDownPriority, userAuthenProfileAuthenFailAuthorResponseSuccess=userAuthenProfileAuthenFailAuthorResponseSuccess, hwAccessStartAcctTime=hwAccessStartAcctTime, hwUserNDRAPrefixAllocAlarm=hwUserNDRAPrefixAllocAlarm, hwDomainOnlinePPPUser=hwDomainOnlinePPPUser, hwCopsGroupSSGType=hwCopsGroupSSGType, hwTwoLevelAcctRadiusGroupName=hwTwoLevelAcctRadiusGroupName, hwPolicyRouteThreshold=hwPolicyRouteThreshold, hwGlobalAuthEventAuthFailResponseFail=hwGlobalAuthEventAuthFailResponseFail, hwPPPForceAuthtype=hwPPPForceAuthtype, hwDomainStatTable=hwDomainStatTable, hwMACAccessMACAddress=hwMACAccessMACAddress, userAuthenticationFreeRuleExtTable=userAuthenticationFreeRuleExtTable, hwResetHistoricMaxOnlineNum=hwResetHistoricMaxOnlineNum, hwVpnAccessUserStatTable=hwVpnAccessUserStatTable, hwAuthEventAuthFailUserGroup=hwAuthEventAuthFailUserGroup, hwAccessCARUpCBS=hwAccessCARUpCBS, hwGlobalAuthEventAuthFailVlan=hwGlobalAuthEventAuthFailVlan, hwUserBasicServiceIPType=hwUserBasicServiceIPType, hwMaxPPPoeOnlineNum=hwMaxPPPoeOnlineNum, hwBillsPoolNum=hwBillsPoolNum, hwCutVRF=hwCutVRF, userAuthenProfilePreAuthenServiceSchemeName=userAuthenProfilePreAuthenServiceSchemeName, hwAAATrapsDefine=hwAAATrapsDefine, hwAAAPasswordRemindDay=hwAAAPasswordRemindDay, hwAcctSchemeTable=hwAcctSchemeTable, hwDomainExtEntry=hwDomainExtEntry, hwCopsGroupCIPNType=hwCopsGroupCIPNType, hwUserDelegationPrefixAllocAlarmResume=hwUserDelegationPrefixAllocAlarmResume, hwCutStartUserID=hwCutStartUserID, hwDot1xAccessProfileEntry=hwDot1xAccessProfileEntry, userAuthenProfileAuthenFailAuthorServiceSchemeName=userAuthenProfileAuthenFailAuthorServiceSchemeName, hwMACAuthenAccessProfileMACAddressFormat=hwMACAuthenAccessProfileMACAddressFormat, hwAccessTotalFlow64Limit=hwAccessTotalFlow64Limit, hwBillsPoolBackupInterval=hwBillsPoolBackupInterval, hwWlanInterfaceDomainNameLocation=hwWlanInterfaceDomainNameLocation, hwAAASlotIPv6AddressThreshold=hwAAASlotIPv6AddressThreshold, hwSlotCardConnectNumIPv6OnlineNum=hwSlotCardConnectNumIPv6OnlineNum, hwAccessDnFlow64=hwAccessDnFlow64, hwRealmNameChar=hwRealmNameChar, hwDhcpOpt121RouteMask=hwDhcpOpt121RouteMask, hwTriggerLoose=hwTriggerLoose, hwPortalAccessProfilePortalServerDownUserGroupName=hwPortalAccessProfilePortalServerDownUserGroupName, userAuthenProfileAuthenServerDownResponseSuccess=userAuthenProfileAuthenServerDownResponseSuccess, hwSrvSchemeIpPoolThreeName=hwSrvSchemeIpPoolThreeName, hwAccessCARIfDnActive=hwAccessCARIfDnActive, hwIfPPPoeURL=hwIfPPPoeURL, hwServiceSchemeGroup=hwServiceSchemeGroup, hwAcctSchemeExtEntry=hwAcctSchemeExtEntry, hwAccessDnPacket64=hwAccessDnPacket64, hwUserLogVersion=hwUserLogVersion, hwAdminExpire=hwAdminExpire, hwSlotCardConnectNumBindAuthNum=hwSlotCardConnectNumBindAuthNum)
mibBuilder.exportSymbols("HUAWEI-AAA-MIB", userAuthenProfileArpDetectTimer=userAuthenProfileArpDetectTimer, hwDhcpOpt121RouteGroup=hwDhcpOpt121RouteGroup, hwAAATrapOid=hwAAATrapOid, hwUserGroupEnable=hwUserGroupEnable, hwDot1xAccessProfileGuestAuthorVLAN=hwDot1xAccessProfileGuestAuthorVLAN, hwAAADomainIPPoolGroup=hwAAADomainIPPoolGroup, userAuthenProfileMacAuthenAccessProfileName=userAuthenProfileMacAuthenAccessProfileName, hwAaaUserWebandFastGroup=hwAaaUserWebandFastGroup, hwAccessAuthenMethod=hwAccessAuthenMethod, hwUserGroupName=hwUserGroupName, hwAccessDelayPerSlotTable=hwAccessDelayPerSlotTable, hwAAAOnlineSessoinLowerLimitResume=hwAAAOnlineSessoinLowerLimitResume, hwOnlineUserNumThreshold=hwOnlineUserNumThreshold, hwServiceSchemeUserPriority=hwServiceSchemeUserPriority, hwDot1xAccessProfileServerTimeout=hwDot1xAccessProfileServerTimeout, hwUserSlot=hwUserSlot, hwAAATimerExpireMajorLevelThreshold=hwAAATimerExpireMajorLevelThreshold, hwInterfaceAccessUserStatTable=hwInterfaceAccessUserStatTable, hwPoolWarningThreshold=hwPoolWarningThreshold, hwAccessPriority=hwAccessPriority, userAuthenProfileMACBypass=userAuthenProfileMACBypass, hwGlobalDhcpServerAck=hwGlobalDhcpServerAck, hwLocalUserPassword=hwLocalUserPassword, hwLocalUserUserGroup=hwLocalUserUserGroup, userAuthenProfileAcctSchemeName=userAuthenProfileAcctSchemeName, hwUserAccessPeVlan=hwUserAccessPeVlan, hwDomainAuthorSchemeName=hwDomainAuthorSchemeName, hwIfDomainActive=hwIfDomainActive, hwParsePriority=hwParsePriority, hwSlotCardConnectNumFastAuthNum=hwSlotCardConnectNumFastAuthNum, hwAAASessionUpperLimitThreshold=hwAAASessionUpperLimitThreshold, hwUserAccessType=hwUserAccessType, hwOfflineRecordAccessType=hwOfflineRecordAccessType, userAuthenticationFreeRuleNumber=userAuthenticationFreeRuleNumber, hwDot1xAccessProfileIfEAPEnd=hwDot1xAccessProfileIfEAPEnd, hwMulticastListTable=hwMulticastListTable, hwAcctOnlineFail=hwAcctOnlineFail, hwCachetoFTPFail=hwCachetoFTPFail, hwOfflineSpeedNumber=hwOfflineSpeedNumber, hwAAAInboundVPNAccessUserStatEntry=hwAAAInboundVPNAccessUserStatEntry, hwLocalRetryInterval=hwLocalRetryInterval, hwServiceSchemeIdleCutTime=hwServiceSchemeIdleCutTime, hwMulticastProfileRowStatus=hwMulticastProfileRowStatus, hwMulticastListGroupIpMask=hwMulticastListGroupIpMask, hwAccessDeviceMACAddress=hwAccessDeviceMACAddress, hwDualStackAccountingType=hwDualStackAccountingType, hwAAASetting=hwAAASetting, userAuthenticationFreeRuleExtRowStatus=userAuthenticationFreeRuleExtRowStatus, hwMulticastProfileExtGroup=hwMulticastProfileExtGroup, hwLocalUserExtEntry=hwLocalUserExtEntry, hwAAARateEntry=hwAAARateEntry, userAuthenticationFreeRuleTable=userAuthenticationFreeRuleTable, hwMaxPortalServerUserNum=hwMaxPortalServerUserNum, userAuthenProfileServiceSchemeName=userAuthenProfileServiceSchemeName, hwDomainPDPrefixFreeNum=hwDomainPDPrefixFreeNum, hwGlobalDhcpServerAckGroup=hwGlobalDhcpServerAckGroup, hwAccessDelayPerSlotGroup=hwAccessDelayPerSlotGroup, hwUserDelegationPrefixAllocAlarm=hwUserDelegationPrefixAllocAlarm, hwWlanInterfaceDomainNameDelimiter=hwWlanInterfaceDomainNameDelimiter, hwPCReduceCir=hwPCReduceCir, hwAccessSpeedPeriod=hwAccessSpeedPeriod, hwHdFreeamount=hwHdFreeamount, hwLocalUserBlockInterval=hwLocalUserBlockInterval, hwAccessDevicePortName=hwAccessDevicePortName, hwInterfaceAccessUserStatEntry=hwInterfaceAccessUserStatEntry, userAuthenProfileAuthenServerUpReauthen=userAuthenProfileAuthenServerUpReauthen, hwMulticastProfileName=hwMulticastProfileName, hwDomainNDRAPrefixUsedNum=hwDomainNDRAPrefixUsedNum, hwUserAcctState=hwUserAcctState, hwDomainNDRAPrefixUsedPercent=hwDomainNDRAPrefixUsedPercent, hwTotalIPv6FlowDnPkt=hwTotalIPv6FlowDnPkt, hwBillPoolGroup=hwBillPoolGroup, hwDomainAuthenRejectsNum=hwDomainAuthenRejectsNum, hwMulticastProfileGroup=hwMulticastProfileGroup, hwReauthorizeTable=hwReauthorizeTable, hwDomainIPUsedPercent=hwDomainIPUsedPercent, hwDomainAccessedNum=hwDomainAccessedNum, hwAaaStatGroup=hwAaaStatGroup, hwDomainType=hwDomainType, hwAccPwHistroyRecordNum=hwAccPwHistroyRecordNum, hwUserGroupIndex=hwUserGroupIndex, hwTotalPPPoeOnlineNum=hwTotalPPPoeOnlineNum, hwDefaultUserName=hwDefaultUserName, userAuthenProfileHwtacacsServerName=userAuthenProfileHwtacacsServerName, hwWebServerURLSlave=hwWebServerURLSlave, hwPortalAccessProfileEntry=hwPortalAccessProfileEntry, hwRemoteDownloadAclThresholdAlarm=hwRemoteDownloadAclThresholdAlarm, hwDomainIPv6AddressExcludeNum=hwDomainIPv6AddressExcludeNum, hwIfMulticastForward=hwIfMulticastForward, hwIPOXUsernameSysname=hwIPOXUsernameSysname, hwTotalPortalServerUserNum=hwTotalPortalServerUserNum, hwDomainInboundL2tpQoSProfile=hwDomainInboundL2tpQoSProfile, hwDomainPPPoENum=hwDomainPPPoENum, hwPoolLowerLimitWarningThreshold=hwPoolLowerLimitWarningThreshold, hwAccessDelayPerSlotRowStatus=hwAccessDelayPerSlotRowStatus, hwPortalAccessProfilePortalBackupServerName=hwPortalAccessProfilePortalBackupServerName, hwSlotConnectNumMaxOnlineAcctReadyNum=hwSlotConnectNumMaxOnlineAcctReadyNum, hwWebServerIP=hwWebServerIP, hwServiceSchemeName=hwServiceSchemeName, hwLocalUserName=hwLocalUserName, hwCutVlanID=hwCutVlanID, hwTacGroupName=hwTacGroupName, hwPortalAccessProfilePortalServerUpReAuthen=hwPortalAccessProfilePortalServerUpReAuthen, hwDomainIPv6FlowUpByte=hwDomainIPv6FlowUpByte, hwAuthenSchemeTable=hwAuthenSchemeTable, hwAccessSubSlotNo=hwAccessSubSlotNo, hwAccessDeviceName=hwAccessDeviceName, hwExpRemark=hwExpRemark, hwLocalUserNoCallBackVerify=hwLocalUserNoCallBackVerify, hwServiceSchemeNextHopIp=hwServiceSchemeNextHopIp, hwMultiProfile=hwMultiProfile, hwAAAInboundVPNAccessUserStatTable=hwAAAInboundVPNAccessUserStatTable, hwSlotCardConnectNumEntry=hwSlotCardConnectNumEntry, hwIPOXpasswordKeyType=hwIPOXpasswordKeyType, hwAcctSchemeEntry=hwAcctSchemeEntry, hwPortalAccessProfilePortalAccessDirect=hwPortalAccessProfilePortalAccessDirect, hwAccessDomain=hwAccessDomain, hwUserGroupCarInBoundPir=hwUserGroupCarInBoundPir, hwWebServerURL=hwWebServerURL, hwHistoricMaxOnlineLocalNum=hwHistoricMaxOnlineLocalNum, hwPriority=hwPriority, userAuthenProfileAuthorSchemeName=userAuthenProfileAuthorSchemeName, hwAAAOnlineSessoinLowerLimitAlarm=hwAAAOnlineSessoinLowerLimitAlarm, hwUclGrpEntry=hwUclGrpEntry, hwAccessCARDnCBS=hwAccessCARDnCBS, hwIfUserMacSimple=hwIfUserMacSimple, hwOfflineReasonStatEntry=hwOfflineReasonStatEntry, hwUserGroupUsedNum=hwUserGroupUsedNum, userAuthenProfilePreAuthenReAuthenTimer=userAuthenProfilePreAuthenReAuthenTimer, hwResetOnlineFailReasonStatistic=hwResetOnlineFailReasonStatistic, hwHistoricMaxOnlineNum=hwHistoricMaxOnlineNum, hwWlanInterfaceName=hwWlanInterfaceName, hwInterfaceAccessUserStatInterfaceIndex=hwInterfaceAccessUserStatInterfaceIndex, hwAccessUpFlow64=hwAccessUpFlow64, hwCutUserName=hwCutUserName, hwAuthorCmdRowStatus=hwAuthorCmdRowStatus, hwSlotCardConnectNumMIPAuthNum=hwSlotCardConnectNumMIPAuthNum, hwRemoteAuthorize=hwRemoteAuthorize, hwDomainIPv6FlowDnByte=hwDomainIPv6FlowDnByte, hwUserLogIPAddress=hwUserLogIPAddress, hwOfflineReasonStatTable=hwOfflineReasonStatTable, hwIPv6OtherFlag=hwIPv6OtherFlag, hwMACAuthenAccessProfileServerTimeout=hwMACAuthenAccessProfileServerTimeout, hwCutIPaddress=hwCutIPaddress, hwUserAccessCeVlan=hwUserAccessCeVlan, hwAuthorCmdGroup=hwAuthorCmdGroup, hwBillsPoolBackupNow=hwBillsPoolBackupNow, hwUserNDRAPrefixAllocAlarmResume=hwUserNDRAPrefixAllocAlarmResume, hwIPOXUsernameMAC=hwIPOXUsernameMAC, hwBillTFTPGroup=hwBillTFTPGroup, hwDomainIncludeIPPoolGroupRowStates=hwDomainIncludeIPPoolGroupRowStates, hwLocalUserPwPolicyAcc=hwLocalUserPwPolicyAcc, hwIfRealtimeAcct=hwIfRealtimeAcct, hwDomainIPv6AddressUsedNum=hwDomainIPv6AddressUsedNum, hwCutAccessUserTable=hwCutAccessUserTable, hwDomainOnlineNum=hwDomainOnlineNum, hwBlockDisable=hwBlockDisable, hwIPLowerlimitWarningResume=hwIPLowerlimitWarningResume, hwMulticastProfileIndex=hwMulticastProfileIndex, hwMACAuthenAccessProfileGroup=hwMACAuthenAccessProfileGroup, hwDot1xTemplate=hwDot1xTemplate, hwAccessType=hwAccessType, hwAAADomainIPPoolEntry=hwAAADomainIPPoolEntry, hwDot1xAccessProfileRowStatus=hwDot1xAccessProfileRowStatus, userAuthenProfileForceDomain=userAuthenProfileForceDomain, hwRbsDownReason=hwRbsDownReason, hwAccessStartTime=hwAccessStartTime, hwDomainDhcpOpt64SepAndSeg=hwDomainDhcpOpt64SepAndSeg, hwUserID=hwUserID, hwAuthEventPreAuthUserGroup=hwAuthEventPreAuthUserGroup, hwAAAAccessUserResourceOrCpuAlarm=hwAAAAccessUserResourceOrCpuAlarm, userAuthenProfileAuthenServerDownVLAN=userAuthenProfileAuthenServerDownVLAN, hwSrvSchemeIpPoolOneName=hwSrvSchemeIpPoolOneName, hwPoratalServerFirstUrlKeyName=hwPoratalServerFirstUrlKeyName, hwAccessInterface=hwAccessInterface, hwIPv6PDPrefixLowerlimitWarningAlarm=hwIPv6PDPrefixLowerlimitWarningAlarm, hwDhcpOpt121RouteRowStatus=hwDhcpOpt121RouteRowStatus, hwWlanInterfaceDomainNameParseDirection=hwWlanInterfaceDomainNameParseDirection, hwAuthenticationState=hwAuthenticationState, hwHistoricMaxOnlineRemoteNum=hwHistoricMaxOnlineRemoteNum, hwMulticastListSourceIp=hwMulticastListSourceIp, hwUserAuthorState=hwUserAuthorState, hwAccountingState=hwAccountingState, hwServicePolicyName=hwServicePolicyName, hwTotalIPAllocFailNum=hwTotalIPAllocFailNum, hwDot1xAccessProfileReauthenticationTimeout=hwDot1xAccessProfileReauthenticationTimeout, hwRedirectTimesLimit=hwRedirectTimesLimit, hwLocalUserAccessLimitNum=hwLocalUserAccessLimitNum, hwDscpRemark=hwDscpRemark, userAuthenticationFreeRuleSourceMode=userAuthenticationFreeRuleSourceMode, hwAAADomainIPPoolConstantIndex=hwAAADomainIPPoolConstantIndex, hwPortalAccessProfileDetectPeriod=hwPortalAccessProfileDetectPeriod, hwDomainIPIdleNum=hwDomainIPIdleNum, hwUserGroupTable=hwUserGroupTable, hwDomainAcctRspFailuresNum=hwDomainAcctRspFailuresNum, hwDomainPDPrefixUsedPercent=hwDomainPDPrefixUsedPercent, hwAAAStat=hwAAAStat, hwTotalIPv6OnlineNum=hwTotalIPv6OnlineNum, userAuthenProfileRadiusServerName=userAuthenProfileRadiusServerName, hwDot1xAccessProfileHandshakeSwitch=hwDot1xAccessProfileHandshakeSwitch, hwMACAuthenAccessProfileUserNameDHCPOSubOption=hwMACAuthenAccessProfileUserNameDHCPOSubOption, hwDot1xAccessProfileEAPEndMethod=hwDot1xAccessProfileEAPEndMethod, hwTotalSuccessNum=hwTotalSuccessNum, hwUserGroupCarCir=hwUserGroupCarCir, hwRbsUp=hwRbsUp, hwAccessAuthtype=hwAccessAuthtype, hwAuthEventClientNoResponseUserGroup=hwAuthEventClientNoResponseUserGroup, hwAAAMibTrap=hwAAAMibTrap, hwDomainRenewIPTag=hwDomainRenewIPTag, hwAccessLineID=hwAccessLineID, hwLAMTraps=hwLAMTraps, hwAuthEventPortIndex=hwAuthEventPortIndex, hwHDtoFTPFail=hwHDtoFTPFail, hwAuthEventAuthenServerDownUserGroup=hwAuthEventAuthenServerDownUserGroup, hwDomainDPIPolicyName=hwDomainDPIPolicyName, hwAuthEventCfgEntry=hwAuthEventCfgEntry, hwUserIPv6AddressAllocAlarmResume=hwUserIPv6AddressAllocAlarmResume, hwDnsSecondIPAddress=hwDnsSecondIPAddress, hwTotalLCPFailNum=hwTotalLCPFailNum, userAuthenProfileMacAuthenFirst=userAuthenProfileMacAuthenFirst, hwAAASlotOnlineUserNumResume=hwAAASlotOnlineUserNumResume, hwDomainServiceSchemeName=hwDomainServiceSchemeName, userAuthenProfilePermitDomain=userAuthenProfilePermitDomain, hwAccessIPv6WanPrefix=hwAccessIPv6WanPrefix, hwSlotConnectNumGroup=hwSlotConnectNumGroup, hwRbpOldState=hwRbpOldState, hwUserIPv6NDRAPrefix=hwUserIPv6NDRAPrefix, hwLamTrapsNotificationsGroup=hwLamTrapsNotificationsGroup, hwDomainAccessUserStatUserStat=hwDomainAccessUserStatUserStat, hwAccessTable=hwAccessTable, hwSlotConnectNumMaxOnlineNum=hwSlotConnectNumMaxOnlineNum, hwAcctSchemeGroup=hwAcctSchemeGroup, hwDot1xAccessProfileHandshakeInterval=hwDot1xAccessProfileHandshakeInterval, hwUclGrpName=hwUclGrpName, hwAccessIPv6OtherFlag=hwAccessIPv6OtherFlag, hwIPPoolTwoName=hwIPPoolTwoName, hwSlotAccessUserStatEntry=hwSlotAccessUserStatEntry, userAuthenticationFreeRuleExtEntry=userAuthenticationFreeRuleExtEntry)
