#
# PySNMP MIB module HUAWEI-CONFIG-MAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-CONFIG-MAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:31:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
huaweiUtility, = mibBuilder.importSymbols("HUAWEI-MIB", "huaweiUtility")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
IpAddress, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, Unsigned32, iso, Counter64, ModuleIdentity, ObjectIdentity, Gauge32, Bits, TimeTicks, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "Unsigned32", "iso", "Counter64", "ModuleIdentity", "ObjectIdentity", "Gauge32", "Bits", "TimeTicks", "Counter32")
RowStatus, TruthValue, DateAndTime, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "DateAndTime", "DisplayString", "TextualConvention")
hwConfig = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 6, 10))
hwConfig.setRevisions(('2015-04-27 14:02', '2015-04-13 11:19', '2015-02-02 23:00', '2014-09-18 22:00', '2014-09-16 10:20', '2014-08-21 16:02', '2014-05-29 22:30', '2014-05-26 22:30', '2013-09-03 22:30', '2013-08-30 22:30', '2006-08-22 22:30', '2006-08-22 22:30', '2006-08-22 22:30', '2006-08-22 22:30',))
if mibBuilder.loadTexts: hwConfig.setLastUpdated('201504271402Z')
if mibBuilder.loadTexts: hwConfig.setOrganization('Huawei Technologies Co.,Ltd.')
class ConfigOperationType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("running2Startup", 1), ("startup2Running", 2), ("running2Net", 3), ("net2Running", 4), ("net2Startup", 5), ("startup2Net", 6))

hwConfigManObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1))
hwCfgLog = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1))
hwCfgRunModifiedLast = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgRunModifiedLast.setStatus('current')
hwCfgRunSavedLast = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgRunSavedLast.setStatus('current')
hwCfgStartModifiedLast = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgStartModifiedLast.setStatus('current')
hwCfgLogLimitedEntries = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgLogLimitedEntries.setStatus('current')
hwCfgLogDeletedEntries = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgLogDeletedEntries.setStatus('current')
hwCfgLogWantBackup = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCfgLogWantBackup.setStatus('current')
hwCfgLogTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7), )
if mibBuilder.loadTexts: hwCfgLogTable.setStatus('current')
hwCfgLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7, 1), ).setIndexNames((0, "HUAWEI-CONFIG-MAN-MIB", "hwCfgLogIndex"))
if mibBuilder.loadTexts: hwCfgLogEntry.setStatus('current')
hwCfgLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwCfgLogIndex.setStatus('current')
hwCfgLogTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgLogTime.setStatus('current')
hwCfgLogSrcCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("cmdLine", 1), ("snmp", 2), ("netconf", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgLogSrcCmd.setStatus('current')
hwCfgLogSrcData = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("erase", 1), ("runningData", 2), ("commandSource", 3), ("startupData", 4), ("local", 5), ("netFtp", 6), ("hotPlugging", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgLogSrcData.setStatus('current')
hwCfgLogDesData = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("runningData", 2), ("commandSource", 3), ("startupData", 4), ("local", 5), ("netkFtp", 6), ("hotPlugging", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgLogDesData.setStatus('current')
hwCfgLogTerminalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notApplicable", 1), ("unknown", 2), ("console", 3), ("terminal", 4), ("virtual", 5), ("auxiliary", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgLogTerminalType.setStatus('current')
hwCfgLogTerminalUser = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgLogTerminalUser.setStatus('current')
hwCfgLogTerminalNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgLogTerminalNum.setStatus('current')
hwCfgLogTerminalLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgLogTerminalLocation.setStatus('current')
hwCfgLogCmdSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgLogCmdSrcAddress.setStatus('current')
hwCfgLogVirHost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgLogVirHost.setStatus('current')
hwCfgLogUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgLogUserName.setStatus('current')
hwCfgLogServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgLogServerAddress.setStatus('current')
hwCfgLogFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgLogFile.setStatus('current')
hwCfgLogConfigChangeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967294))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgLogConfigChangeId.setStatus('obsolete')
hwCfgLogCfgBaselineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 1, 7, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgLogCfgBaselineTime.setStatus('obsolete')
hwCfgOperate = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2))
hwCfgOperateGlobalEntryLimit = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgOperateGlobalEntryLimit.setStatus('current')
hwCfgOperateEntryAgeOutTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setUnits('minute').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCfgOperateEntryAgeOutTime.setStatus('current')
hwCfgOperateResultGlobalEntryLimit = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCfgOperateResultGlobalEntryLimit.setStatus('current')
hwCfgOperateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4), )
if mibBuilder.loadTexts: hwCfgOperateTable.setStatus('current')
hwCfgOperateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4, 1), ).setIndexNames((0, "HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateIndex"))
if mibBuilder.loadTexts: hwCfgOperateEntry.setStatus('current')
hwCfgOperateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwCfgOperateIndex.setStatus('current')
hwCfgOperateType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4, 1, 2), ConfigOperationType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgOperateType.setStatus('current')
hwCfgOperateProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ftp", 1), ("tftp", 2), ("sftp", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgOperateProtocol.setStatus('current')
hwCfgOperateFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgOperateFileName.setStatus('current')
hwCfgOperateServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgOperateServerAddress.setStatus('current')
hwCfgOperateUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgOperateUserName.setStatus('current')
hwCfgOperateUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgOperateUserPassword.setStatus('current')
hwCfgOperateEndNotificationSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgOperateEndNotificationSwitch.setStatus('current')
hwCfgOperateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgOperateRowStatus.setStatus('current')
hwCfgOperateServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgOperateServerPort.setStatus('current')
hwCfgOperateSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4, 1, 11), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgOperateSourceAddress.setStatus('current')
hwCfgOperateSourceInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgOperateSourceInterface.setStatus('current')
hwCfgOperateOnError = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("continueOnError", 1), ("stopOnError", 2), ("rollbackOnError", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgOperateOnError.setStatus('current')
hwCfgOperateServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4, 1, 17), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgOperateServerAddressType.setStatus('current')
hwCfgOperateServerAddressNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4, 1, 18), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgOperateServerAddressNet.setStatus('current')
hwCfgOperateVpnInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 4, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgOperateVpnInstance.setStatus('current')
hwCfgOperateResultTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 5), )
if mibBuilder.loadTexts: hwCfgOperateResultTable.setStatus('current')
hwCfgOperateResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 5, 1), ).setIndexNames((0, "HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateResultIndex"))
if mibBuilder.loadTexts: hwCfgOperateResultEntry.setStatus('current')
hwCfgOperateResultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwCfgOperateResultIndex.setStatus('current')
hwCfgOperateResultOptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgOperateResultOptIndex.setStatus('current')
hwCfgOperateResultOpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 5, 1, 3), ConfigOperationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgOperateResultOpType.setStatus('current')
hwCfgOperateState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("opInProgress", 1), ("opSuccess", 2), ("opInvalidOperation", 3), ("opInvalidProtocol", 4), ("opInvalidSourceName", 5), ("opInvalidDestName", 6), ("opInvalidServerAddress", 7), ("opDeviceBusy", 8), ("opDeviceOpenError", 9), ("opDeviceError", 10), ("opDeviceNotProgrammable", 11), ("opDeviceFull", 12), ("opFileOpenError", 13), ("opFileTransferError", 14), ("opFileChecksumError", 15), ("opNoMemory", 16), ("opAuthFail", 17), ("opTimeOut", 18), ("opUnknownFailure", 19), ("opAbort", 20), ("opInvalidSourceAddress", 21), ("opInvalidSourceInterface", 22), ("opCmdExecuteFail", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgOperateState.setStatus('current')
hwCfgOperateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 5, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgOperateTime.setStatus('current')
hwCfgOperateEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 5, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgOperateEndTime.setStatus('current')
hwCfgOperateTransferProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 100), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgOperateTransferProgress.setStatus('current')
hwCfgOperateErrorReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 5, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgOperateErrorReason.setStatus('current')
hwCfgModuleChangeTimeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 6), )
if mibBuilder.loadTexts: hwCfgModuleChangeTimeTable.setStatus('current')
hwCfgModuleChangeTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 6, 1), ).setIndexNames((0, "HUAWEI-CONFIG-MAN-MIB", "hwCfgModuleId"))
if mibBuilder.loadTexts: hwCfgModuleChangeTimeEntry.setStatus('current')
hwCfgModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwCfgModuleId.setStatus('current')
hwCfgModuleChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 6, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgModuleChangeTime.setStatus('current')
hwCfgOperateCompareConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("initial", 0), ("same", 1), ("different", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCfgOperateCompareConfig.setStatus('current')
hwCfgRestoreErrCode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("warnning", 1), ("fileOpenFail", 2), ("fileNotExist", 3), ("fileVerifyFail", 4), ("other", 5)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfgRestoreErrCode.setStatus('current')
hwCfgSave = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3))
hwCfgSaveAutoInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(30, 43200), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCfgSaveAutoInterval.setStatus('current')
hwCfgSaveAutoTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgSaveAutoTime.setStatus('current')
hwCfgSaveManualTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgSaveManualTime.setStatus('current')
hwCfgSaveAutoCpuLimit = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCfgSaveAutoCpuLimit.setStatus('current')
hwCfgSaveAutoNoCfgInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 43200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCfgSaveAutoNoCfgInterval.setStatus('obsolete')
hwCfgSaveAutoDelay = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCfgSaveAutoDelay.setStatus('current')
hwCfgBackup2ServerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3, 7), )
if mibBuilder.loadTexts: hwCfgBackup2ServerTable.setStatus('current')
hwCfgBackup2ServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3, 7, 1), ).setIndexNames((0, "HUAWEI-CONFIG-MAN-MIB", "hwCfgBackupIndex"))
if mibBuilder.loadTexts: hwCfgBackup2ServerEntry.setStatus('current')
hwCfgBackupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfgBackupIndex.setStatus('current')
hwCfgBackupServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3, 7, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgBackupServerIp.setStatus('current')
hwCfgBackupProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ftp", 1), ("tftp", 2), ("sftp", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgBackupProtocol.setStatus('current')
hwCfgBackupUser = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgBackupUser.setStatus('current')
hwCfgBackupPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3, 7, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 392))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgBackupPassword.setStatus('current')
hwCfgBackupServerPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgBackupServerPath.setStatus('current')
hwCfgBackupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3, 7, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgBackupRowStatus.setStatus('current')
hwCfgBackupResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3, 7, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgBackupResult.setStatus('current')
hwCfgBackupVpnInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 3, 7, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgBackupVpnInstance.setStatus('current')
hwCfgLock = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 4))
hwCfgOperateLockConfigDataStore = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCfgOperateLockConfigDataStore.setStatus('current')
hwCfgOperateLevelUsersTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 4, 2), )
if mibBuilder.loadTexts: hwCfgOperateLevelUsersTable.setStatus('current')
hwCfgOperateLevelUsersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 4, 2, 1), ).setIndexNames((0, "HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateLevelUsersSessionID"))
if mibBuilder.loadTexts: hwCfgOperateLevelUsersEntry.setStatus('current')
hwCfgOperateLevelUsersSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgOperateLevelUsersSessionID.setStatus('current')
hwCfgOperateLevelUsersSessionDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgOperateLevelUsersSessionDesc.setStatus('current')
hwCfgOperateLevelUsersName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 4, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgOperateLevelUsersName.setStatus('current')
hwCfgOperateLevelUsersLockedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 4, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgOperateLevelUsersLockedTime.setStatus('current')
hwCfgOperateLevelUsersIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 4, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgOperateLevelUsersIPAddr.setStatus('current')
hwCfgOperateLevelUsersLastCfgTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 4, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgOperateLevelUsersLastCfgTime.setStatus('current')
hwCfgOperateLevelUsersTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 10, 1, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgOperateLevelUsersTimeout.setStatus('current')
hwConfigManNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 10, 2))
hwCfgManEventlog = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 10, 2, 1)).setObjects(("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogSrcCmd"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogSrcData"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogDesData"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogTerminalUser"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogCmdSrcAddress"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogConfigChangeId"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogTime"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogCfgBaselineTime"))
if mibBuilder.loadTexts: hwCfgManEventlog.setStatus('current')
hwCfgOperateCompletion = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 10, 2, 2)).setObjects(("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateType"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateTime"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateState"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateEndTime"))
if mibBuilder.loadTexts: hwCfgOperateCompletion.setStatus('current')
hwCfgInconsistent = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 10, 2, 3))
if mibBuilder.loadTexts: hwCfgInconsistent.setStatus('obsolete')
hwCfgInconsistentResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 10, 2, 4))
if mibBuilder.loadTexts: hwCfgInconsistentResume.setStatus('obsolete')
hwCfgB2STransferFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 10, 2, 5)).setObjects(("HUAWEI-CONFIG-MAN-MIB", "hwCfgBackupIndex"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgBackupServerIp"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgBackupProtocol"))
if mibBuilder.loadTexts: hwCfgB2STransferFail.setStatus('current')
hwCfgB2SOperate = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 10, 2, 6))
if mibBuilder.loadTexts: hwCfgB2SOperate.setStatus('current')
hwCfgRestoreFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 10, 2, 7)).setObjects(("HUAWEI-CONFIG-MAN-MIB", "hwCfgRestoreErrCode"))
if mibBuilder.loadTexts: hwCfgRestoreFail.setStatus('current')
hwConfigInconsistent = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 10, 2, 8))
if mibBuilder.loadTexts: hwConfigInconsistent.setStatus('current')
hwConfigConsistent = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 10, 2, 9))
if mibBuilder.loadTexts: hwConfigConsistent.setStatus('current')
hwConfigManConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 10, 3))
hwConfigManCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 10, 3, 1))
hwConfigManCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 6, 10, 3, 1, 1)).setObjects(("HUAWEI-CONFIG-MAN-MIB", "hwCfgManLogGroup"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateGroup"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgManNotificationGroup"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgSaveGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwConfigManCompliance = hwConfigManCompliance.setStatus('current')
hwConfigManGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 10, 3, 2))
hwCfgManLogGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 10, 3, 2, 1)).setObjects(("HUAWEI-CONFIG-MAN-MIB", "hwCfgRunModifiedLast"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgRunSavedLast"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgStartModifiedLast"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogLimitedEntries"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogDeletedEntries"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogTime"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogSrcCmd"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogTerminalType"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogTerminalNum"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogTerminalUser"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogTerminalLocation"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogCmdSrcAddress"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogVirHost"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogServerAddress"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogFile"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogUserName"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogWantBackup"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogSrcData"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogDesData"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogConfigChangeId"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgLogCfgBaselineTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCfgManLogGroup = hwCfgManLogGroup.setStatus('current')
hwCfgOperateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 10, 3, 2, 2)).setObjects(("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateGlobalEntryLimit"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateEntryAgeOutTime"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateType"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateProtocol"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateFileName"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateServerAddress"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateUserName"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateUserPassword"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateTime"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateEndNotificationSwitch"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateResultGlobalEntryLimit"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateState"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateRowStatus"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateServerPort"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateSourceAddress"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateSourceInterface"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateOnError"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateServerAddressType"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateServerAddressNet"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateVpnInstance"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateResultOptIndex"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateResultOpType"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateEndTime"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateTransferProgress"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateErrorReason"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgModuleChangeTime"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateLockConfigDataStore"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateLevelUsersSessionID"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateLevelUsersSessionDesc"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateLevelUsersName"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateLevelUsersLockedTime"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateLevelUsersIPAddr"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateLevelUsersLastCfgTime"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateLevelUsersTimeout"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateCompareConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCfgOperateGroup = hwCfgOperateGroup.setStatus('current')
hwCfgManNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 6, 10, 3, 2, 3)).setObjects(("HUAWEI-CONFIG-MAN-MIB", "hwCfgManEventlog"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgOperateCompletion"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgInconsistent"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgInconsistentResume"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgB2STransferFail"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgB2SOperate"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgRestoreFail"), ("HUAWEI-CONFIG-MAN-MIB", "hwConfigInconsistent"), ("HUAWEI-CONFIG-MAN-MIB", "hwConfigConsistent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCfgManNotificationGroup = hwCfgManNotificationGroup.setStatus('current')
hwCfgSaveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 10, 3, 2, 4)).setObjects(("HUAWEI-CONFIG-MAN-MIB", "hwCfgSaveAutoInterval"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgSaveAutoTime"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgSaveManualTime"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgSaveAutoCpuLimit"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgSaveAutoNoCfgInterval"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgSaveAutoDelay"), ("HUAWEI-CONFIG-MAN-MIB", "hwCfgRestoreErrCode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCfgSaveGroup = hwCfgSaveGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-CONFIG-MAN-MIB", hwCfgLogUserName=hwCfgLogUserName, hwCfgBackupServerIp=hwCfgBackupServerIp, hwCfgOperateServerPort=hwCfgOperateServerPort, hwCfgOperateLevelUsersTable=hwCfgOperateLevelUsersTable, hwCfgOperateEndNotificationSwitch=hwCfgOperateEndNotificationSwitch, hwCfgLogDeletedEntries=hwCfgLogDeletedEntries, hwCfgLogFile=hwCfgLogFile, hwCfgOperateTransferProgress=hwCfgOperateTransferProgress, hwCfgOperateTime=hwCfgOperateTime, hwCfgBackupPassword=hwCfgBackupPassword, hwCfgOperateGroup=hwCfgOperateGroup, hwCfgOperateLevelUsersTimeout=hwCfgOperateLevelUsersTimeout, hwCfgOperateServerAddressType=hwCfgOperateServerAddressType, hwCfgOperateResultOpType=hwCfgOperateResultOpType, hwCfgOperateLevelUsersName=hwCfgOperateLevelUsersName, hwCfgOperateServerAddress=hwCfgOperateServerAddress, hwCfgModuleId=hwCfgModuleId, hwCfgOperateLevelUsersIPAddr=hwCfgOperateLevelUsersIPAddr, hwConfigManGroups=hwConfigManGroups, hwCfgOperateIndex=hwCfgOperateIndex, hwCfgSaveManualTime=hwCfgSaveManualTime, hwCfgOperateResultGlobalEntryLimit=hwCfgOperateResultGlobalEntryLimit, hwCfgRestoreFail=hwCfgRestoreFail, hwCfgLogTerminalNum=hwCfgLogTerminalNum, hwCfgOperateErrorReason=hwCfgOperateErrorReason, hwCfgOperateResultTable=hwCfgOperateResultTable, hwCfgLogIndex=hwCfgLogIndex, hwCfgLogCmdSrcAddress=hwCfgLogCmdSrcAddress, hwCfgOperateLockConfigDataStore=hwCfgOperateLockConfigDataStore, hwCfgInconsistent=hwCfgInconsistent, hwCfgRunSavedLast=hwCfgRunSavedLast, hwCfgSaveAutoCpuLimit=hwCfgSaveAutoCpuLimit, hwCfgBackupServerPath=hwCfgBackupServerPath, hwCfgRestoreErrCode=hwCfgRestoreErrCode, hwCfgOperateLevelUsersLastCfgTime=hwCfgOperateLevelUsersLastCfgTime, hwCfgOperateFileName=hwCfgOperateFileName, hwConfigInconsistent=hwConfigInconsistent, hwCfgSaveAutoDelay=hwCfgSaveAutoDelay, hwCfgB2STransferFail=hwCfgB2STransferFail, hwCfgLogEntry=hwCfgLogEntry, hwCfgLogTerminalLocation=hwCfgLogTerminalLocation, hwCfgOperateLevelUsersLockedTime=hwCfgOperateLevelUsersLockedTime, hwCfgLogVirHost=hwCfgLogVirHost, hwConfigManObjects=hwConfigManObjects, hwCfgLogSrcCmd=hwCfgLogSrcCmd, hwConfigConsistent=hwConfigConsistent, hwCfgRunModifiedLast=hwCfgRunModifiedLast, hwConfigManNotifications=hwConfigManNotifications, hwCfgBackupUser=hwCfgBackupUser, hwCfgBackup2ServerTable=hwCfgBackup2ServerTable, hwCfgOperateOnError=hwCfgOperateOnError, hwCfgOperateLevelUsersSessionDesc=hwCfgOperateLevelUsersSessionDesc, hwCfgOperateLevelUsersEntry=hwCfgOperateLevelUsersEntry, hwCfgInconsistentResume=hwCfgInconsistentResume, hwCfgOperateRowStatus=hwCfgOperateRowStatus, hwCfgOperate=hwCfgOperate, hwCfgSaveGroup=hwCfgSaveGroup, PYSNMP_MODULE_ID=hwConfig, hwCfgLogTerminalType=hwCfgLogTerminalType, hwCfgModuleChangeTimeEntry=hwCfgModuleChangeTimeEntry, hwCfgModuleChangeTimeTable=hwCfgModuleChangeTimeTable, hwCfgBackupVpnInstance=hwCfgBackupVpnInstance, hwCfgOperateResultEntry=hwCfgOperateResultEntry, hwCfgOperateGlobalEntryLimit=hwCfgOperateGlobalEntryLimit, hwCfgOperateTable=hwCfgOperateTable, hwCfgOperateType=hwCfgOperateType, hwCfgLogTerminalUser=hwCfgLogTerminalUser, hwConfigManCompliance=hwConfigManCompliance, hwCfgManLogGroup=hwCfgManLogGroup, hwCfgLogTime=hwCfgLogTime, hwCfgOperateResultOptIndex=hwCfgOperateResultOptIndex, hwCfgSaveAutoTime=hwCfgSaveAutoTime, hwCfgOperateEntry=hwCfgOperateEntry, hwCfgLogLimitedEntries=hwCfgLogLimitedEntries, hwCfgManEventlog=hwCfgManEventlog, hwCfgOperateCompareConfig=hwCfgOperateCompareConfig, hwCfgOperateEntryAgeOutTime=hwCfgOperateEntryAgeOutTime, hwConfigManCompliances=hwConfigManCompliances, hwCfgOperateSourceInterface=hwCfgOperateSourceInterface, hwCfgLogSrcData=hwCfgLogSrcData, hwCfgOperateEndTime=hwCfgOperateEndTime, hwCfgSave=hwCfgSave, hwCfgBackupRowStatus=hwCfgBackupRowStatus, hwCfgOperateResultIndex=hwCfgOperateResultIndex, hwCfgSaveAutoInterval=hwCfgSaveAutoInterval, hwCfgOperateServerAddressNet=hwCfgOperateServerAddressNet, hwCfgBackupIndex=hwCfgBackupIndex, hwCfgBackup2ServerEntry=hwCfgBackup2ServerEntry, hwCfgOperateCompletion=hwCfgOperateCompletion, hwCfgLogWantBackup=hwCfgLogWantBackup, hwCfgSaveAutoNoCfgInterval=hwCfgSaveAutoNoCfgInterval, hwCfgManNotificationGroup=hwCfgManNotificationGroup, hwCfgOperateProtocol=hwCfgOperateProtocol, hwCfgOperateState=hwCfgOperateState, hwCfgLogServerAddress=hwCfgLogServerAddress, hwCfgStartModifiedLast=hwCfgStartModifiedLast, hwConfigManConformance=hwConfigManConformance, hwCfgModuleChangeTime=hwCfgModuleChangeTime, hwConfig=hwConfig, hwCfgOperateLevelUsersSessionID=hwCfgOperateLevelUsersSessionID, hwCfgLog=hwCfgLog, hwCfgBackupProtocol=hwCfgBackupProtocol, hwCfgOperateUserName=hwCfgOperateUserName, hwCfgB2SOperate=hwCfgB2SOperate, hwCfgLogCfgBaselineTime=hwCfgLogCfgBaselineTime, hwCfgLogConfigChangeId=hwCfgLogConfigChangeId, hwCfgBackupResult=hwCfgBackupResult, hwCfgOperateUserPassword=hwCfgOperateUserPassword, ConfigOperationType=ConfigOperationType, hwCfgLogDesData=hwCfgLogDesData, hwCfgOperateVpnInstance=hwCfgOperateVpnInstance, hwCfgOperateSourceAddress=hwCfgOperateSourceAddress, hwCfgLogTable=hwCfgLogTable, hwCfgLock=hwCfgLock)
