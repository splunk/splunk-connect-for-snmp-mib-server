#
# PySNMP MIB module AVICI-MODULE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AVICI-MODULE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:16:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
aviciBayIndex, aviciSlotIndex = mibBuilder.importSymbols("AVICI-BAY-MIB", "aviciBayIndex", "aviciSlotIndex")
aviciMibs, = mibBuilder.importSymbols("AVICI-SMI", "aviciMibs")
aviciSysTrapDescr, = mibBuilder.importSymbols("AVICI-SYSTEM-MIB", "aviciSysTrapDescr")
AviciRevisionType, AviciSerialNumberType, AviciPartNumberType, AviciProductIdType, AviciHighAvailabilityType = mibBuilder.importSymbols("AVICI-TC", "AviciRevisionType", "AviciSerialNumberType", "AviciPartNumberType", "AviciProductIdType", "AviciHighAvailabilityType")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ModuleIdentity, IpAddress, iso, Integer32, ObjectIdentity, Counter32, MibIdentifier, Gauge32, Unsigned32, Bits, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ModuleIdentity", "IpAddress", "iso", "Integer32", "ObjectIdentity", "Counter32", "MibIdentifier", "Gauge32", "Unsigned32", "Bits", "Counter64", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
aviciModuleMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2474, 1, 5))
aviciModuleMIB.setRevisions(('1970-01-01 00:00', '0003-03-18 12:00', '1970-01-01 00:00', '1970-01-01 00:00',))
if mibBuilder.loadTexts: aviciModuleMIB.setLastUpdated('010316134800Z')
if mibBuilder.loadTexts: aviciModuleMIB.setOrganization('Avici Systems, Inc.')
aviciModuleObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1))
aviciModuleNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 5, 2))
aviciModuleNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 5, 2, 0))
aviciServerAccessModuleNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 5, 4))
aviciServerAccessModuleNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 5, 4, 0))
aviciModuleTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1), )
if mibBuilder.loadTexts: aviciModuleTable.setStatus('current')
aviciModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"), (0, "AVICI-BAY-MIB", "aviciSlotIndex"))
if mibBuilder.loadTexts: aviciModuleEntry.setStatus('current')
aviciModuleAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aviciModuleAdminStatus.setStatus('current')
aviciModuleOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unconfigured", 3), ("unknown", 4), ("testing", 5), ("failed", 6), ("misconfigured", 7), ("incompatibleSW", 8), ("upgrading", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleOperStatus.setStatus('current')
aviciModuleUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleUpTime.setStatus('current')
aviciModuleCurrTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleCurrTemp.setStatus('current')
aviciModuleMaxTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleMaxTemp.setStatus('current')
aviciModuleDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleDescr.setStatus('current')
aviciModuleAssySerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1, 7), AviciSerialNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleAssySerialNumber.setStatus('current')
aviciModuleLineSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1, 8), AviciSerialNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleLineSerialNumber.setStatus('current')
aviciModuleMbSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1, 9), AviciSerialNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleMbSerialNumber.setStatus('current')
aviciModuleAssyRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1, 10), AviciRevisionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleAssyRevision.setStatus('current')
aviciModuleLineRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1, 11), AviciRevisionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleLineRevision.setStatus('current')
aviciModuleMbRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1, 12), AviciRevisionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleMbRevision.setStatus('current')
aviciModuleSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleSoftwareVersion.setStatus('current')
aviciModuleFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleFirmwareVersion.setStatus('current')
aviciModuleAssyProductId = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1, 15), AviciProductIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleAssyProductId.setStatus('current')
aviciModuleLinePartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1, 16), AviciPartNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleLinePartNumber.setStatus('current')
aviciModuleMbPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 1, 1, 17), AviciPartNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleMbPartNumber.setStatus('current')
aviciModuleIpTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 2), )
if mibBuilder.loadTexts: aviciModuleIpTable.setStatus('current')
aviciModuleIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 2, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"), (0, "AVICI-BAY-MIB", "aviciSlotIndex"))
if mibBuilder.loadTexts: aviciModuleIpEntry.setStatus('current')
aviciModuleIpInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIpInReceives.setStatus('current')
aviciModuleIpInHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIpInHdrErrors.setStatus('current')
aviciModuleIpInAddrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIpInAddrErrors.setStatus('current')
aviciModuleIpForwDatagrams = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIpForwDatagrams.setStatus('current')
aviciModuleIpInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIpInUnknownProtos.setStatus('current')
aviciModuleIpInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIpInDiscards.setStatus('current')
aviciModuleIpInDelivers = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIpInDelivers.setStatus('current')
aviciModuleIpOutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIpOutRequests.setStatus('current')
aviciModuleIpOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIpOutDiscards.setStatus('current')
aviciModuleIpOutNoRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIpOutNoRoutes.setStatus('current')
aviciModuleIpFragOKs = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIpFragOKs.setStatus('current')
aviciModuleIpFragFails = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIpFragFails.setStatus('current')
aviciModuleIpFragCreates = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIpFragCreates.setStatus('current')
aviciModuleIcmpTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3), )
if mibBuilder.loadTexts: aviciModuleIcmpTable.setStatus('current')
aviciModuleIcmpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"), (0, "AVICI-BAY-MIB", "aviciSlotIndex"))
if mibBuilder.loadTexts: aviciModuleIcmpEntry.setStatus('current')
aviciModuleIcmpInMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpInMsgs.setStatus('current')
aviciModuleIcmpInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpInErrors.setStatus('current')
aviciModuleIcmpInDestUnreachs = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpInDestUnreachs.setStatus('current')
aviciModuleIcmpInTimeExcds = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpInTimeExcds.setStatus('current')
aviciModuleIcmpInParmProbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpInParmProbs.setStatus('current')
aviciModuleIcmpInSrcQuenchs = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpInSrcQuenchs.setStatus('current')
aviciModuleIcmpInRedirects = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpInRedirects.setStatus('current')
aviciModuleIcmpInEchos = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpInEchos.setStatus('current')
aviciModuleIcmpInEchoReps = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpInEchoReps.setStatus('current')
aviciModuleIcmpInTimestamps = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpInTimestamps.setStatus('current')
aviciModuleIcmpInTimestampReps = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpInTimestampReps.setStatus('current')
aviciModuleIcmpInAddrMasks = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpInAddrMasks.setStatus('current')
aviciModuleIcmpInAddrMaskReps = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpInAddrMaskReps.setStatus('current')
aviciModuleIcmpOutMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpOutMsgs.setStatus('current')
aviciModuleIcmpOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpOutErrors.setStatus('current')
aviciModuleIcmpOutDestUnreachs = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpOutDestUnreachs.setStatus('current')
aviciModuleIcmpOutTimeExcds = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpOutTimeExcds.setStatus('current')
aviciModuleIcmpOutParmProbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpOutParmProbs.setStatus('current')
aviciModuleIcmpOutSrcQuenchs = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpOutSrcQuenchs.setStatus('current')
aviciModuleIcmpOutRedirects = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpOutRedirects.setStatus('current')
aviciModuleIcmpOutEchos = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpOutEchos.setStatus('current')
aviciModuleIcmpOutEchoReps = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpOutEchoReps.setStatus('current')
aviciModuleIcmpOutTimestamps = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpOutTimestamps.setStatus('current')
aviciModuleIcmpOutTimestampReps = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpOutTimestampReps.setStatus('current')
aviciModuleIcmpOutAddrMasks = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpOutAddrMasks.setStatus('current')
aviciModuleIcmpOutAddrMaskReps = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 3, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciModuleIcmpOutAddrMaskReps.setStatus('current')
aviciServerAccessModuleTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 4), )
if mibBuilder.loadTexts: aviciServerAccessModuleTable.setStatus('current')
aviciServerAccessModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 4, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"), (0, "AVICI-BAY-MIB", "aviciSlotIndex"))
if mibBuilder.loadTexts: aviciServerAccessModuleEntry.setStatus('current')
aviciServerAccessModuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 4, 1, 1), AviciHighAvailabilityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciServerAccessModuleType.setStatus('current')
aviciServerAccessModuleLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciServerAccessModuleLinkStatus.setStatus('current')
aviciServerAccessModuleNumTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciServerAccessModuleNumTransitions.setStatus('current')
aviciServerAccessModuleLastTransition = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 5, 1, 4, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciServerAccessModuleLastTransition.setStatus('current')
aviciModuleColdStart = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 5, 2, 0, 1)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciSlotIndex"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciModuleColdStart.setStatus('current')
aviciModuleWarmStart = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 5, 2, 0, 2)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciSlotIndex"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciModuleWarmStart.setStatus('current')
aviciModuleDown = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 5, 2, 0, 3)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciSlotIndex"), ("AVICI-MODULE-MIB", "aviciModuleAdminStatus"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciModuleDown.setStatus('current')
aviciModuleTemperatureNormal = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 5, 2, 0, 4)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciSlotIndex"), ("AVICI-MODULE-MIB", "aviciModuleCurrTemp"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciModuleTemperatureNormal.setStatus('current')
aviciModuleTemperatureMinor = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 5, 2, 0, 5)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciSlotIndex"), ("AVICI-MODULE-MIB", "aviciModuleCurrTemp"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciModuleTemperatureMinor.setStatus('current')
aviciModuleTemperatureMajor = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 5, 2, 0, 6)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciSlotIndex"), ("AVICI-MODULE-MIB", "aviciModuleCurrTemp"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciModuleTemperatureMajor.setStatus('current')
aviciModuleTemperatureCritical = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 5, 2, 0, 7)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciSlotIndex"), ("AVICI-MODULE-MIB", "aviciModuleCurrTemp"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciModuleTemperatureCritical.setStatus('current')
aviciModuleMisconfigured = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 5, 2, 0, 8)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciSlotIndex"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciModuleMisconfigured.setStatus('current')
aviciModuleIncompatibleSW = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 5, 2, 0, 9)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciSlotIndex"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciModuleIncompatibleSW.setStatus('current')
aviciServerAccessModuleDown = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 5, 4, 0, 1)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciSlotIndex"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciServerAccessModuleDown.setStatus('current')
aviciServerAccessModuleUp = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 5, 4, 0, 2)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciSlotIndex"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciServerAccessModuleUp.setStatus('current')
aviciAllServerAccessModulesDown = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 5, 4, 0, 3)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciSlotIndex"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciAllServerAccessModulesDown.setStatus('current')
aviciAllServerAccessModulesDownClear = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 5, 4, 0, 4)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciSlotIndex"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciAllServerAccessModulesDownClear.setStatus('current')
aviciModuleMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 5, 3))
aviciModuleMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 5, 3, 1))
aviciModuleMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 5, 3, 2))
aviciModuleMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2474, 1, 5, 3, 1, 1)).setObjects(("AVICI-MODULE-MIB", "aviciModuleGroup"), ("AVICI-MODULE-MIB", "aviciModuleIpCountersGroup"), ("AVICI-MODULE-MIB", "aviciModuleIcmpCountersGroup"), ("AVICI-MODULE-MIB", "aviciModuleNotificationGroup"), ("AVICI-MODULE-MIB", "aviciServerAccessModuleNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciModuleMIBCompliance = aviciModuleMIBCompliance.setStatus('current')
aviciModuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2474, 1, 5, 3, 2, 1)).setObjects(("AVICI-MODULE-MIB", "aviciModuleAdminStatus"), ("AVICI-MODULE-MIB", "aviciModuleOperStatus"), ("AVICI-MODULE-MIB", "aviciModuleUpTime"), ("AVICI-MODULE-MIB", "aviciModuleCurrTemp"), ("AVICI-MODULE-MIB", "aviciModuleMaxTemp"), ("AVICI-MODULE-MIB", "aviciModuleDescr"), ("AVICI-MODULE-MIB", "aviciModuleAssySerialNumber"), ("AVICI-MODULE-MIB", "aviciModuleLineSerialNumber"), ("AVICI-MODULE-MIB", "aviciModuleMbSerialNumber"), ("AVICI-MODULE-MIB", "aviciModuleAssyRevision"), ("AVICI-MODULE-MIB", "aviciModuleLineRevision"), ("AVICI-MODULE-MIB", "aviciModuleMbRevision"), ("AVICI-MODULE-MIB", "aviciModuleSoftwareVersion"), ("AVICI-MODULE-MIB", "aviciModuleFirmwareVersion"), ("AVICI-MODULE-MIB", "aviciModuleAssyProductId"), ("AVICI-MODULE-MIB", "aviciModuleLinePartNumber"), ("AVICI-MODULE-MIB", "aviciModuleMbPartNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciModuleGroup = aviciModuleGroup.setStatus('current')
aviciModuleIpCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2474, 1, 5, 3, 2, 2)).setObjects(("AVICI-MODULE-MIB", "aviciModuleIpInReceives"), ("AVICI-MODULE-MIB", "aviciModuleIpInHdrErrors"), ("AVICI-MODULE-MIB", "aviciModuleIpInAddrErrors"), ("AVICI-MODULE-MIB", "aviciModuleIpForwDatagrams"), ("AVICI-MODULE-MIB", "aviciModuleIpInUnknownProtos"), ("AVICI-MODULE-MIB", "aviciModuleIpInDiscards"), ("AVICI-MODULE-MIB", "aviciModuleIpInDelivers"), ("AVICI-MODULE-MIB", "aviciModuleIpOutRequests"), ("AVICI-MODULE-MIB", "aviciModuleIpOutDiscards"), ("AVICI-MODULE-MIB", "aviciModuleIpOutNoRoutes"), ("AVICI-MODULE-MIB", "aviciModuleIpFragOKs"), ("AVICI-MODULE-MIB", "aviciModuleIpFragFails"), ("AVICI-MODULE-MIB", "aviciModuleIpFragCreates"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciModuleIpCountersGroup = aviciModuleIpCountersGroup.setStatus('current')
aviciModuleIcmpCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2474, 1, 5, 3, 2, 3)).setObjects(("AVICI-MODULE-MIB", "aviciModuleIcmpInMsgs"), ("AVICI-MODULE-MIB", "aviciModuleIcmpInErrors"), ("AVICI-MODULE-MIB", "aviciModuleIcmpInDestUnreachs"), ("AVICI-MODULE-MIB", "aviciModuleIcmpInTimeExcds"), ("AVICI-MODULE-MIB", "aviciModuleIcmpInParmProbs"), ("AVICI-MODULE-MIB", "aviciModuleIcmpInSrcQuenchs"), ("AVICI-MODULE-MIB", "aviciModuleIcmpInRedirects"), ("AVICI-MODULE-MIB", "aviciModuleIcmpInEchos"), ("AVICI-MODULE-MIB", "aviciModuleIcmpInEchoReps"), ("AVICI-MODULE-MIB", "aviciModuleIcmpInTimestamps"), ("AVICI-MODULE-MIB", "aviciModuleIcmpInTimestampReps"), ("AVICI-MODULE-MIB", "aviciModuleIcmpInAddrMasks"), ("AVICI-MODULE-MIB", "aviciModuleIcmpInAddrMaskReps"), ("AVICI-MODULE-MIB", "aviciModuleIcmpOutMsgs"), ("AVICI-MODULE-MIB", "aviciModuleIcmpOutErrors"), ("AVICI-MODULE-MIB", "aviciModuleIcmpOutDestUnreachs"), ("AVICI-MODULE-MIB", "aviciModuleIcmpOutTimeExcds"), ("AVICI-MODULE-MIB", "aviciModuleIcmpOutParmProbs"), ("AVICI-MODULE-MIB", "aviciModuleIcmpOutSrcQuenchs"), ("AVICI-MODULE-MIB", "aviciModuleIcmpOutRedirects"), ("AVICI-MODULE-MIB", "aviciModuleIcmpOutEchos"), ("AVICI-MODULE-MIB", "aviciModuleIcmpOutEchoReps"), ("AVICI-MODULE-MIB", "aviciModuleIcmpOutTimestamps"), ("AVICI-MODULE-MIB", "aviciModuleIcmpOutTimestampReps"), ("AVICI-MODULE-MIB", "aviciModuleIcmpOutAddrMasks"), ("AVICI-MODULE-MIB", "aviciModuleIcmpOutAddrMaskReps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciModuleIcmpCountersGroup = aviciModuleIcmpCountersGroup.setStatus('current')
aviciModuleNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2474, 1, 5, 3, 2, 4)).setObjects(("AVICI-MODULE-MIB", "aviciModuleColdStart"), ("AVICI-MODULE-MIB", "aviciModuleWarmStart"), ("AVICI-MODULE-MIB", "aviciModuleDown"), ("AVICI-MODULE-MIB", "aviciModuleTemperatureNormal"), ("AVICI-MODULE-MIB", "aviciModuleTemperatureMinor"), ("AVICI-MODULE-MIB", "aviciModuleTemperatureMajor"), ("AVICI-MODULE-MIB", "aviciModuleTemperatureCritical"), ("AVICI-MODULE-MIB", "aviciModuleMisconfigured"), ("AVICI-MODULE-MIB", "aviciModuleIncompatibleSW"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciModuleNotificationGroup = aviciModuleNotificationGroup.setStatus('current')
aviciServerAccessModuleNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2474, 1, 5, 3, 2, 5)).setObjects(("AVICI-MODULE-MIB", "aviciServerAccessModuleDown"), ("AVICI-MODULE-MIB", "aviciServerAccessModuleUp"), ("AVICI-MODULE-MIB", "aviciAllServerAccessModulesDown"), ("AVICI-MODULE-MIB", "aviciAllServerAccessModulesDownClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciServerAccessModuleNotificationGroup = aviciServerAccessModuleNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("AVICI-MODULE-MIB", aviciModuleIcmpInTimestamps=aviciModuleIcmpInTimestamps, aviciServerAccessModuleTable=aviciServerAccessModuleTable, aviciModuleIcmpInParmProbs=aviciModuleIcmpInParmProbs, aviciModuleTemperatureMajor=aviciModuleTemperatureMajor, aviciModuleIpOutNoRoutes=aviciModuleIpOutNoRoutes, aviciModuleObjects=aviciModuleObjects, aviciModuleIpForwDatagrams=aviciModuleIpForwDatagrams, aviciModuleIcmpOutAddrMaskReps=aviciModuleIcmpOutAddrMaskReps, aviciModuleIcmpOutTimeExcds=aviciModuleIcmpOutTimeExcds, aviciServerAccessModuleLastTransition=aviciServerAccessModuleLastTransition, aviciModuleAssyProductId=aviciModuleAssyProductId, aviciModuleIpInAddrErrors=aviciModuleIpInAddrErrors, aviciServerAccessModuleType=aviciServerAccessModuleType, aviciModuleMaxTemp=aviciModuleMaxTemp, aviciModuleIcmpOutEchos=aviciModuleIcmpOutEchos, aviciModuleMbSerialNumber=aviciModuleMbSerialNumber, aviciModuleIcmpInSrcQuenchs=aviciModuleIcmpInSrcQuenchs, aviciModuleIcmpOutSrcQuenchs=aviciModuleIcmpOutSrcQuenchs, aviciModuleTable=aviciModuleTable, aviciModuleIcmpInDestUnreachs=aviciModuleIcmpInDestUnreachs, aviciModuleMIBCompliance=aviciModuleMIBCompliance, aviciModuleWarmStart=aviciModuleWarmStart, aviciModuleIcmpOutDestUnreachs=aviciModuleIcmpOutDestUnreachs, aviciServerAccessModuleUp=aviciServerAccessModuleUp, aviciModuleSoftwareVersion=aviciModuleSoftwareVersion, aviciServerAccessModuleLinkStatus=aviciServerAccessModuleLinkStatus, aviciModuleIcmpInTimestampReps=aviciModuleIcmpInTimestampReps, aviciModuleColdStart=aviciModuleColdStart, aviciModuleOperStatus=aviciModuleOperStatus, aviciServerAccessModuleEntry=aviciServerAccessModuleEntry, aviciModuleIpFragCreates=aviciModuleIpFragCreates, aviciModuleIcmpOutTimestampReps=aviciModuleIcmpOutTimestampReps, aviciModuleIpFragFails=aviciModuleIpFragFails, aviciModuleLinePartNumber=aviciModuleLinePartNumber, aviciModuleIpTable=aviciModuleIpTable, aviciModuleFirmwareVersion=aviciModuleFirmwareVersion, aviciModuleIcmpCountersGroup=aviciModuleIcmpCountersGroup, aviciModuleIpOutRequests=aviciModuleIpOutRequests, aviciModuleIpInHdrErrors=aviciModuleIpInHdrErrors, aviciModuleIpOutDiscards=aviciModuleIpOutDiscards, aviciModuleUpTime=aviciModuleUpTime, aviciAllServerAccessModulesDownClear=aviciAllServerAccessModulesDownClear, aviciModuleIcmpInAddrMaskReps=aviciModuleIcmpInAddrMaskReps, aviciServerAccessModuleDown=aviciServerAccessModuleDown, aviciModuleIcmpTable=aviciModuleIcmpTable, aviciModuleIpInReceives=aviciModuleIpInReceives, aviciModuleDescr=aviciModuleDescr, aviciModuleIcmpInRedirects=aviciModuleIcmpInRedirects, aviciModuleTemperatureCritical=aviciModuleTemperatureCritical, aviciModuleIcmpOutRedirects=aviciModuleIcmpOutRedirects, aviciServerAccessModuleNumTransitions=aviciServerAccessModuleNumTransitions, aviciModuleAdminStatus=aviciModuleAdminStatus, aviciModuleIpEntry=aviciModuleIpEntry, aviciModuleAssyRevision=aviciModuleAssyRevision, aviciModuleIpCountersGroup=aviciModuleIpCountersGroup, aviciModuleLineSerialNumber=aviciModuleLineSerialNumber, aviciModuleDown=aviciModuleDown, aviciModuleTemperatureMinor=aviciModuleTemperatureMinor, aviciModuleMIBConformance=aviciModuleMIBConformance, aviciModuleIcmpInMsgs=aviciModuleIcmpInMsgs, aviciModuleIcmpInEchos=aviciModuleIcmpInEchos, aviciModuleIcmpInErrors=aviciModuleIcmpInErrors, aviciModuleIpInDiscards=aviciModuleIpInDiscards, aviciModuleIcmpOutTimestamps=aviciModuleIcmpOutTimestamps, aviciModuleIpInDelivers=aviciModuleIpInDelivers, aviciModuleIpInUnknownProtos=aviciModuleIpInUnknownProtos, aviciModuleMIB=aviciModuleMIB, aviciModuleIcmpEntry=aviciModuleIcmpEntry, aviciModuleMbPartNumber=aviciModuleMbPartNumber, aviciModuleIcmpOutEchoReps=aviciModuleIcmpOutEchoReps, aviciModuleLineRevision=aviciModuleLineRevision, aviciModuleNotificationGroup=aviciModuleNotificationGroup, aviciModuleIcmpInEchoReps=aviciModuleIcmpInEchoReps, aviciModuleNotifications=aviciModuleNotifications, aviciModuleMIBGroups=aviciModuleMIBGroups, aviciModuleCurrTemp=aviciModuleCurrTemp, aviciModuleMisconfigured=aviciModuleMisconfigured, aviciAllServerAccessModulesDown=aviciAllServerAccessModulesDown, aviciModuleEntry=aviciModuleEntry, aviciModuleMIBCompliances=aviciModuleMIBCompliances, aviciModuleIcmpOutMsgs=aviciModuleIcmpOutMsgs, aviciServerAccessModuleNotificationPrefix=aviciServerAccessModuleNotificationPrefix, aviciModuleAssySerialNumber=aviciModuleAssySerialNumber, aviciModuleIncompatibleSW=aviciModuleIncompatibleSW, PYSNMP_MODULE_ID=aviciModuleMIB, aviciModuleTemperatureNormal=aviciModuleTemperatureNormal, aviciServerAccessModuleNotificationGroup=aviciServerAccessModuleNotificationGroup, aviciServerAccessModuleNotifications=aviciServerAccessModuleNotifications, aviciModuleIcmpInAddrMasks=aviciModuleIcmpInAddrMasks, aviciModuleMbRevision=aviciModuleMbRevision, aviciModuleIcmpOutErrors=aviciModuleIcmpOutErrors, aviciModuleIcmpInTimeExcds=aviciModuleIcmpInTimeExcds, aviciModuleIpFragOKs=aviciModuleIpFragOKs, aviciModuleIcmpOutAddrMasks=aviciModuleIcmpOutAddrMasks, aviciModuleNotificationPrefix=aviciModuleNotificationPrefix, aviciModuleGroup=aviciModuleGroup, aviciModuleIcmpOutParmProbs=aviciModuleIcmpOutParmProbs)
