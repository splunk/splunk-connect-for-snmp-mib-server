#
# PySNMP MIB module A3COM-HUAWEI-STACK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-STACK-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:52:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cCommon")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, Bits, Counter64, Integer32, NotificationType, Gauge32, ModuleIdentity, TimeTicks, iso, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "Bits", "Counter64", "Integer32", "NotificationType", "Gauge32", "ModuleIdentity", "TimeTicks", "iso", "IpAddress", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
h3cStack = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91))
h3cStack.setRevisions(('2008-04-30 16:50',))
if mibBuilder.loadTexts: h3cStack.setLastUpdated('200804301650Z')
if mibBuilder.loadTexts: h3cStack.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
h3cStackGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 1))
h3cStackMaxMember = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cStackMaxMember.setStatus('current')
h3cStackMemberNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cStackMemberNum.setStatus('current')
h3cStackMaxConfigPriority = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cStackMaxConfigPriority.setStatus('current')
h3cStackAutoUpdate = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cStackAutoUpdate.setStatus('current')
h3cStackMacPersistence = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notPersist", 1), ("persistForSixMin", 2), ("persistForever", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cStackMacPersistence.setStatus('current')
h3cStackLinkDelayInterval = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30000))).setUnits('millisecond').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cStackLinkDelayInterval.setStatus('current')
h3cStackTopology = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("chainConn", 1), ("ringConn", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cStackTopology.setStatus('current')
h3cStackDeviceConfigTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 2), )
if mibBuilder.loadTexts: h3cStackDeviceConfigTable.setStatus('current')
h3cStackDeviceConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: h3cStackDeviceConfigEntry.setStatus('current')
h3cStackMemberID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cStackMemberID.setStatus('current')
h3cStackConfigMemberID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cStackConfigMemberID.setStatus('current')
h3cStackPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cStackPriority.setStatus('current')
h3cStackPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cStackPortNum.setStatus('current')
h3cStackPortMaxNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cStackPortMaxNum.setStatus('current')
h3cStackBoardConfigTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 3), )
if mibBuilder.loadTexts: h3cStackBoardConfigTable.setStatus('current')
h3cStackBoardConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: h3cStackBoardConfigEntry.setStatus('current')
h3cStackBoardRole = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("slave", 1), ("master", 2), ("loading", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cStackBoardRole.setStatus('current')
h3cStackBoardBelongtoMember = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cStackBoardBelongtoMember.setStatus('current')
h3cStackPortInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 4), )
if mibBuilder.loadTexts: h3cStackPortInfoTable.setStatus('current')
h3cStackPortInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-STACK-MIB", "h3cStackMemberID"), (0, "A3COM-HUAWEI-STACK-MIB", "h3cStackPortIndex"))
if mibBuilder.loadTexts: h3cStackPortInfoEntry.setStatus('current')
h3cStackPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 4, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cStackPortIndex.setStatus('current')
h3cStackPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cStackPortEnable.setStatus('current')
h3cStackPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("silent", 3), ("disabled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cStackPortStatus.setStatus('current')
h3cStackNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cStackNeighbor.setStatus('current')
h3cStackPhyPortInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 5), )
if mibBuilder.loadTexts: h3cStackPhyPortInfoTable.setStatus('current')
h3cStackPhyPortInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 5, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: h3cStackPhyPortInfoEntry.setStatus('current')
h3cStackBelongtoPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 5, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cStackBelongtoPort.setStatus('current')
h3cStackTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 6))
h3cStackTrapOjbects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 6, 0))
h3cStackPortLinkStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 6, 0, 1)).setObjects(("A3COM-HUAWEI-STACK-MIB", "h3cStackMemberID"), ("A3COM-HUAWEI-STACK-MIB", "h3cStackPortIndex"), ("A3COM-HUAWEI-STACK-MIB", "h3cStackPortStatus"))
if mibBuilder.loadTexts: h3cStackPortLinkStatusChange.setStatus('current')
h3cStackTopologyChange = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 91, 6, 0, 2)).setObjects(("A3COM-HUAWEI-STACK-MIB", "h3cStackTopology"))
if mibBuilder.loadTexts: h3cStackTopologyChange.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-STACK-MIB", h3cStackDeviceConfigTable=h3cStackDeviceConfigTable, h3cStackBoardConfigTable=h3cStackBoardConfigTable, h3cStackBelongtoPort=h3cStackBelongtoPort, h3cStackBoardConfigEntry=h3cStackBoardConfigEntry, h3cStackPortStatus=h3cStackPortStatus, h3cStackGlobalConfig=h3cStackGlobalConfig, h3cStackMacPersistence=h3cStackMacPersistence, h3cStackMaxConfigPriority=h3cStackMaxConfigPriority, h3cStackPortInfoEntry=h3cStackPortInfoEntry, h3cStackPortIndex=h3cStackPortIndex, h3cStackDeviceConfigEntry=h3cStackDeviceConfigEntry, h3cStackPortMaxNum=h3cStackPortMaxNum, h3cStackMemberNum=h3cStackMemberNum, h3cStackLinkDelayInterval=h3cStackLinkDelayInterval, h3cStackPhyPortInfoTable=h3cStackPhyPortInfoTable, h3cStackPhyPortInfoEntry=h3cStackPhyPortInfoEntry, h3cStackNeighbor=h3cStackNeighbor, h3cStackPortLinkStatusChange=h3cStackPortLinkStatusChange, h3cStackMaxMember=h3cStackMaxMember, h3cStackMemberID=h3cStackMemberID, h3cStackTrapOjbects=h3cStackTrapOjbects, h3cStackTrap=h3cStackTrap, h3cStackBoardRole=h3cStackBoardRole, h3cStackConfigMemberID=h3cStackConfigMemberID, h3cStackPortEnable=h3cStackPortEnable, h3cStackPortInfoTable=h3cStackPortInfoTable, h3cStackTopologyChange=h3cStackTopologyChange, h3cStackAutoUpdate=h3cStackAutoUpdate, h3cStackPortNum=h3cStackPortNum, h3cStack=h3cStack, PYSNMP_MODULE_ID=h3cStack, h3cStackPriority=h3cStackPriority, h3cStackTopology=h3cStackTopology, h3cStackBoardBelongtoMember=h3cStackBoardBelongtoMember)
