#
# PySNMP MIB module MICOM-WAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MICOM-WAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:02:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
micom_oscar, = mibBuilder.importSymbols("MICOM-OSCAR-MIB", "micom-oscar")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, iso, ModuleIdentity, IpAddress, Gauge32, Unsigned32, MibIdentifier, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "iso", "ModuleIdentity", "IpAddress", "Gauge32", "Unsigned32", "MibIdentifier", "Integer32", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
micom_wan = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 2)).setLabel("micom-wan")
wan_configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1)).setLabel("wan-configuration")
wan_statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2)).setLabel("wan-statistics")
wan_control = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 3)).setLabel("wan-control")
wanifTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1), )
if mibBuilder.loadTexts: wanifTable.setStatus('mandatory')
wanifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1), ).setIndexNames((0, "MICOM-WAN-MIB", "wanifIndex"))
if mibBuilder.loadTexts: wanifEntry.setStatus('mandatory')
wanifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifIndex.setStatus('mandatory')
wanifType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("none", 1), ("rs232", 2), ("v35", 5), ("x21", 6), ("v36", 7), ("csu-dsu", 8), ("isdn-BRI", 9), ("t1csu", 10), ("e1csu", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifType.setStatus('mandatory')
wanifMode = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dce", 1), ("dte", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifMode.setStatus('mandatory')
wanifBaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1920000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifBaudRate.setStatus('mandatory')
wanifMaxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifMaxFrameSize.setStatus('mandatory')
wanifProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("hdlc", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifProtocolType.setStatus('mandatory')
wanifControlLineOn = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifControlLineOn.setStatus('obsolete')
wanifNumRxBuffers = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifNumRxBuffers.setStatus('mandatory')
wanifRxFragQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifRxFragQueueSize.setStatus('mandatory')
wanifTxFragQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifTxFragQueueSize.setStatus('mandatory')
wanifFragFragmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(80, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifFragFragmentSize.setStatus('obsolete')
wanifRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifRowStatus.setStatus('obsolete')
wanifLim = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("limA", 1), ("lim1", 2), ("lim2", 3), ("lim3", 4), ("lim4", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifLim.setStatus('mandatory')
wanifChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifChannel.setStatus('mandatory')
wanifProtocolSupType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("standardFr", 2), ("switchingFr", 3), ("htds", 4), ("cbr", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifProtocolSupType.setStatus('mandatory')
wanifTDSCutThru = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifTDSCutThru.setStatus('mandatory')
wanifTDSFragSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifTDSFragSize.setStatus('mandatory')
wanifTDSIdleChar = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifTDSIdleChar.setStatus('mandatory')
wanifTDSSyncChar = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifTDSSyncChar.setStatus('mandatory')
wanifEncodeMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nrz", 1), ("nrzi-mark", 2), ("nrzi-space", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifEncodeMethod.setStatus('mandatory')
nvmWanifTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2), )
if mibBuilder.loadTexts: nvmWanifTable.setStatus('mandatory')
nvmWanifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1), ).setIndexNames((0, "MICOM-WAN-MIB", "nvmWanifIndex"))
if mibBuilder.loadTexts: nvmWanifEntry.setStatus('mandatory')
nvmWanifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmWanifIndex.setStatus('mandatory')
nvmWanifType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("none", 1), ("rs232", 2), ("v35", 5), ("x21", 6), ("v36", 7), ("csu-dsu", 8), ("isdn-BRI", 9), ("t1csu", 10), ("e1csu", 11))).clone('v35')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmWanifType.setStatus('mandatory')
nvmWanifMode = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dce", 1), ("dte", 2))).clone('dce')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmWanifMode.setStatus('mandatory')
nvmWanifBaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1920000)).clone(65536)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmWanifBaudRate.setStatus('mandatory')
nvmWanifMaxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192)).clone(4000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmWanifMaxFrameSize.setStatus('mandatory')
nvmWanifProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("hdlc", 1))).clone('hdlc')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmWanifProtocolType.setStatus('mandatory')
nvmWanifControlLineOn = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmWanifControlLineOn.setStatus('obsolete')
nvmWanifNumRxBuffers = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 255)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmWanifNumRxBuffers.setStatus('mandatory')
nvmWanifRxFragQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmWanifRxFragQueueSize.setStatus('mandatory')
nvmWanifTxFragQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmWanifTxFragQueueSize.setStatus('mandatory')
nvmWanifFragFragmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(80, 8192))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmWanifFragFragmentSize.setStatus('obsolete')
nvmWanifRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmWanifRowStatus.setStatus('obsolete')
nvmWanifLim = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("limA", 1), ("lim1", 2), ("lim2", 3), ("lim3", 4), ("lim4", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmWanifLim.setStatus('mandatory')
nvmWanifChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmWanifChannel.setStatus('mandatory')
nvmWanifProtocolSupType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("standardFr", 2), ("switchingFr", 3), ("htds", 4), ("cbr", 5))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmWanifProtocolSupType.setStatus('mandatory')
nvmWanifTDSCutThru = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmWanifTDSCutThru.setStatus('mandatory')
nvmWanifTDSFragSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmWanifTDSFragSize.setStatus('mandatory')
nvmWanifTDSIdleChar = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmWanifTDSIdleChar.setStatus('mandatory')
nvmWanifTDSSyncChar = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(126)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmWanifTDSSyncChar.setStatus('mandatory')
nvmWanifEncodeMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nrz", 1), ("nrzi-mark", 2), ("nrzi-space", 3))).clone('nrz')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmWanifEncodeMethod.setStatus('mandatory')
wanDTEPortTunnelPvcTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 3), )
if mibBuilder.loadTexts: wanDTEPortTunnelPvcTable.setStatus('deprecated')
wanDTEPortTunnelPvcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 3, 1), ).setIndexNames((0, "MICOM-WAN-MIB", "wanDTEPortTunnelPvcIfIndex"))
if mibBuilder.loadTexts: wanDTEPortTunnelPvcEntry.setStatus('deprecated')
wanDTEPortTunnelPvcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanDTEPortTunnelPvcIfIndex.setStatus('deprecated')
wanDTEPortTunnelPvcDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanDTEPortTunnelPvcDlci.setStatus('deprecated')
nvmWanDTEPortTunnelPvcTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 4), )
if mibBuilder.loadTexts: nvmWanDTEPortTunnelPvcTable.setStatus('deprecated')
nvmWanDTEPortTunnelPvcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 4, 1), ).setIndexNames((0, "MICOM-WAN-MIB", "nvmWanDTEPortTunnelPvcIfIndex"))
if mibBuilder.loadTexts: nvmWanDTEPortTunnelPvcEntry.setStatus('deprecated')
nvmWanDTEPortTunnelPvcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmWanDTEPortTunnelPvcIfIndex.setStatus('deprecated')
nvmWanDTEPortTunnelPvcDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmWanDTEPortTunnelPvcDlci.setStatus('deprecated')
wanifGlobalStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 1), )
if mibBuilder.loadTexts: wanifGlobalStatisticsTable.setStatus('mandatory')
wanifGlobalStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 1, 1), ).setIndexNames((0, "MICOM-WAN-MIB", "wanifGlobalStatisticsIndex"))
if mibBuilder.loadTexts: wanifGlobalStatisticsEntry.setStatus('mandatory')
wanifGlobalStatisticsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifGlobalStatisticsIndex.setStatus('mandatory')
wanifGlobalStatisticsRxBlockCount = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifGlobalStatisticsRxBlockCount.setStatus('mandatory')
wanifGlobalStatisticsTxBlockCount = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifGlobalStatisticsTxBlockCount.setStatus('mandatory')
wanifGlobalStatisticsTxLinkUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifGlobalStatisticsTxLinkUnderruns.setStatus('mandatory')
wanifGlobalStatisticsTxLinkOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifGlobalStatisticsTxLinkOverflows.setStatus('mandatory')
wanifGlobalStatisticsRxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifGlobalStatisticsRxDiscards.setStatus('mandatory')
wanifGlobalStatisticsTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifGlobalStatisticsTxErrors.setStatus('mandatory')
wanifFragStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 2), )
if mibBuilder.loadTexts: wanifFragStatisticsTable.setStatus('obsolete')
wanifFragStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 2, 1), ).setIndexNames((0, "MICOM-WAN-MIB", "wanifFragStatisticsIndex"), (0, "MICOM-WAN-MIB", "wanifFragStatisticsFragPriority"))
if mibBuilder.loadTexts: wanifFragStatisticsEntry.setStatus('obsolete')
wanifFragStatisticsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifFragStatisticsIndex.setStatus('obsolete')
wanifFragStatisticsFragPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifFragStatisticsFragPriority.setStatus('obsolete')
wanifFragStatisticsRxFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifFragStatisticsRxFrameCount.setStatus('obsolete')
wanifFragStatisticsTxFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifFragStatisticsTxFrameCount.setStatus('obsolete')
wanifFragStatisticsRxFragmentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifFragStatisticsRxFragmentCount.setStatus('obsolete')
wanifFragStatisticsTxFragmentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifFragStatisticsTxFragmentCount.setStatus('obsolete')
wanifFragStatisticsTxFragQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifFragStatisticsTxFragQueueSize.setStatus('obsolete')
wanifVofrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 3), )
if mibBuilder.loadTexts: wanifVofrStatsTable.setStatus('mandatory')
wanifVofrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 3, 1), ).setIndexNames((0, "MICOM-WAN-MIB", "wanifVofrStatsIndex"))
if mibBuilder.loadTexts: wanifVofrStatsEntry.setStatus('mandatory')
wanifVofrStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifVofrStatsIndex.setStatus('mandatory')
wanifVofrStatsFragHighPriFramesCount = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifVofrStatsFragHighPriFramesCount.setStatus('mandatory')
wanifVofrStatsFragToIfCount = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifVofrStatsFragToIfCount.setStatus('mandatory')
wanifVofrStatsPackingToIfCount = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifVofrStatsPackingToIfCount.setStatus('mandatory')
wanifVofrStatsFragsFromIfCount = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifVofrStatsFragsFromIfCount.setStatus('mandatory')
wanifVofrStatsLostFragsFromIfCount = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifVofrStatsLostFragsFromIfCount.setStatus('mandatory')
wanifVofrStatsProtViolationsFromIfCount = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifVofrStatsProtViolationsFromIfCount.setStatus('mandatory')
wanifCounterGlobalTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 3, 1), )
if mibBuilder.loadTexts: wanifCounterGlobalTable.setStatus('obsolete')
wanifCounterGlobalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 3, 1, 1), ).setIndexNames((0, "MICOM-WAN-MIB", "wanifCounterGlobalPortId"))
if mibBuilder.loadTexts: wanifCounterGlobalEntry.setStatus('obsolete')
wanifCounterGlobalPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifCounterGlobalPortId.setStatus('obsolete')
wanifCounterGlobalStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("other", 2)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: wanifCounterGlobalStatistics.setStatus('obsolete')
wanifCounterFragTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 3, 2), )
if mibBuilder.loadTexts: wanifCounterFragTable.setStatus('obsolete')
wanifCounterFragEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 3, 2, 1), ).setIndexNames((0, "MICOM-WAN-MIB", "wanifCounterFragPortId"), (0, "MICOM-WAN-MIB", "wanifCounterFragProtocol"))
if mibBuilder.loadTexts: wanifCounterFragEntry.setStatus('obsolete')
wanifCounterFragPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifCounterFragPortId.setStatus('obsolete')
wanifCounterFragProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifCounterFragProtocol.setStatus('obsolete')
wanifCounterFragStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("other", 2)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: wanifCounterFragStatistics.setStatus('obsolete')
wanifVofrCounterTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 3, 3), )
if mibBuilder.loadTexts: wanifVofrCounterTable.setStatus('obsolete')
wanifVofrCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 3, 3, 1), ).setIndexNames((0, "MICOM-WAN-MIB", "wanifVofrCounterPortId"))
if mibBuilder.loadTexts: wanifVofrCounterEntry.setStatus('obsolete')
wanifVofrCounterPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanifVofrCounterPortId.setStatus('obsolete')
wanifVofrCounterStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 2, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("other", 2)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: wanifVofrCounterStatistics.setStatus('obsolete')
mibBuilder.exportSymbols("MICOM-WAN-MIB", wanifCounterFragTable=wanifCounterFragTable, nvmWanifEntry=nvmWanifEntry, wanifFragStatisticsEntry=wanifFragStatisticsEntry, wanifFragFragmentSize=wanifFragFragmentSize, wanifVofrStatsFragHighPriFramesCount=wanifVofrStatsFragHighPriFramesCount, wanifCounterGlobalStatistics=wanifCounterGlobalStatistics, wanifTable=wanifTable, wanifFragStatisticsFragPriority=wanifFragStatisticsFragPriority, wanifGlobalStatisticsTxLinkUnderruns=wanifGlobalStatisticsTxLinkUnderruns, nvmWanifMode=nvmWanifMode, nvmWanifChannel=nvmWanifChannel, nvmWanifTxFragQueueSize=nvmWanifTxFragQueueSize, wanifFragStatisticsIndex=wanifFragStatisticsIndex, nvmWanifProtocolSupType=nvmWanifProtocolSupType, nvmWanifTDSFragSize=nvmWanifTDSFragSize, wanDTEPortTunnelPvcIfIndex=wanDTEPortTunnelPvcIfIndex, wanifVofrStatsLostFragsFromIfCount=wanifVofrStatsLostFragsFromIfCount, nvmWanifLim=nvmWanifLim, wanifFragStatisticsTxFrameCount=wanifFragStatisticsTxFrameCount, nvmWanifFragFragmentSize=nvmWanifFragFragmentSize, wanifVofrCounterStatistics=wanifVofrCounterStatistics, wanifEntry=wanifEntry, wanifCounterFragProtocol=wanifCounterFragProtocol, wanifTxFragQueueSize=wanifTxFragQueueSize, wanifLim=wanifLim, wanifGlobalStatisticsTxBlockCount=wanifGlobalStatisticsTxBlockCount, wan_statistics=wan_statistics, wanifFragStatisticsRxFrameCount=wanifFragStatisticsRxFrameCount, wanifCounterFragStatistics=wanifCounterFragStatistics, wanifVofrStatsTable=wanifVofrStatsTable, nvmWanifType=nvmWanifType, wanifTDSCutThru=wanifTDSCutThru, wanDTEPortTunnelPvcTable=wanDTEPortTunnelPvcTable, wanifGlobalStatisticsRxBlockCount=wanifGlobalStatisticsRxBlockCount, wan_control=wan_control, wanifFragStatisticsTxFragQueueSize=wanifFragStatisticsTxFragQueueSize, wanifGlobalStatisticsTxLinkOverflows=wanifGlobalStatisticsTxLinkOverflows, wanifFragStatisticsTable=wanifFragStatisticsTable, nvmWanifBaudRate=nvmWanifBaudRate, wanifCounterGlobalEntry=wanifCounterGlobalEntry, nvmWanDTEPortTunnelPvcTable=nvmWanDTEPortTunnelPvcTable, wanifChannel=wanifChannel, nvmWanifControlLineOn=nvmWanifControlLineOn, wanifIndex=wanifIndex, wanifTDSSyncChar=wanifTDSSyncChar, wanifVofrStatsPackingToIfCount=wanifVofrStatsPackingToIfCount, wanifGlobalStatisticsEntry=wanifGlobalStatisticsEntry, wanifVofrCounterTable=wanifVofrCounterTable, nvmWanifTDSSyncChar=nvmWanifTDSSyncChar, wanifVofrStatsFragToIfCount=wanifVofrStatsFragToIfCount, micom_wan=micom_wan, wanifCounterGlobalTable=wanifCounterGlobalTable, wanifControlLineOn=wanifControlLineOn, wanifMaxFrameSize=wanifMaxFrameSize, wanifFragStatisticsRxFragmentCount=wanifFragStatisticsRxFragmentCount, wanifCounterFragEntry=wanifCounterFragEntry, nvmWanDTEPortTunnelPvcIfIndex=nvmWanDTEPortTunnelPvcIfIndex, nvmWanifEncodeMethod=nvmWanifEncodeMethod, wanifGlobalStatisticsTxErrors=wanifGlobalStatisticsTxErrors, nvmWanDTEPortTunnelPvcEntry=nvmWanDTEPortTunnelPvcEntry, nvmWanifProtocolType=nvmWanifProtocolType, wanifVofrCounterEntry=wanifVofrCounterEntry, wanifProtocolSupType=wanifProtocolSupType, wanifNumRxBuffers=wanifNumRxBuffers, wanifEncodeMethod=wanifEncodeMethod, wanifBaudRate=wanifBaudRate, wanifVofrCounterPortId=wanifVofrCounterPortId, nvmWanifIndex=nvmWanifIndex, wanifCounterFragPortId=wanifCounterFragPortId, wanifCounterGlobalPortId=wanifCounterGlobalPortId, wanifGlobalStatisticsIndex=wanifGlobalStatisticsIndex, nvmWanifTDSIdleChar=nvmWanifTDSIdleChar, wanifVofrStatsIndex=wanifVofrStatsIndex, wanifVofrStatsProtViolationsFromIfCount=wanifVofrStatsProtViolationsFromIfCount, nvmWanifMaxFrameSize=nvmWanifMaxFrameSize, wanDTEPortTunnelPvcDlci=wanDTEPortTunnelPvcDlci, nvmWanifTDSCutThru=nvmWanifTDSCutThru, wanifTDSFragSize=wanifTDSFragSize, nvmWanifTable=nvmWanifTable, wanifMode=wanifMode, wanifRowStatus=wanifRowStatus, wanifTDSIdleChar=wanifTDSIdleChar, nvmWanifRowStatus=nvmWanifRowStatus, wanifRxFragQueueSize=wanifRxFragQueueSize, wanifFragStatisticsTxFragmentCount=wanifFragStatisticsTxFragmentCount, wanifVofrStatsFragsFromIfCount=wanifVofrStatsFragsFromIfCount, nvmWanifRxFragQueueSize=nvmWanifRxFragQueueSize, wanifType=wanifType, wanifProtocolType=wanifProtocolType, wanDTEPortTunnelPvcEntry=wanDTEPortTunnelPvcEntry, wanifGlobalStatisticsTable=wanifGlobalStatisticsTable, wan_configuration=wan_configuration, wanifGlobalStatisticsRxDiscards=wanifGlobalStatisticsRxDiscards, wanifVofrStatsEntry=wanifVofrStatsEntry, nvmWanifNumRxBuffers=nvmWanifNumRxBuffers, nvmWanDTEPortTunnelPvcDlci=nvmWanDTEPortTunnelPvcDlci)
