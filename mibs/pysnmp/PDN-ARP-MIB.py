#
# PySNMP MIB module PDN-ARP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-ARP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:29:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ipNetToMediaIfIndex, ipNetToMediaPhysAddress, ipNetToMediaEntry = mibBuilder.importSymbols("IP-MIB", "ipNetToMediaIfIndex", "ipNetToMediaPhysAddress", "ipNetToMediaEntry")
pdn_common, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-common")
VnidRange, SwitchState = mibBuilder.importSymbols("PDN-TC", "VnidRange", "SwitchState")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, iso, Unsigned32, Bits, NotificationType, Counter32, Integer32, Counter64, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ObjectIdentity, MibIdentifier, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "Unsigned32", "Bits", "NotificationType", "Counter32", "Integer32", "Counter64", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ObjectIdentity", "MibIdentifier", "IpAddress")
DisplayString, TextualConvention, RowStatus, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus", "MacAddress", "TruthValue")
pdn_arp = ModuleIdentity((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27)).setLabel("pdn-arp")
pdn_arp.setRevisions(('2005-07-19 00:00', '2002-08-02 00:00', '2002-04-18 00:00', '2001-12-31 00:00', '2001-01-15 00:00', '2000-05-02 00:00',))
if mibBuilder.loadTexts: pdn_arp.setLastUpdated('200507190000Z')
if mibBuilder.loadTexts: pdn_arp.setOrganization('Paradyne Networks, Inc. MIB Working Group')
pdnNetToMediaGenericMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1))
pdnNetToMediaMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 2))
pdnNetToMediaMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 2, 0))
pdnNetToMediaParams = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 1))
pdnNetToMediaConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2))
pdnNetTo8023MediaConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 3))
pdnNetToMediaConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 4))
pdnNetToMediaParamsCompEntryTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99999)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnNetToMediaParamsCompEntryTimeout.setStatus('current')
pdnNetToMediaParamsIncompEntryTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99999)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnNetToMediaParamsIncompEntryTimeout.setStatus('current')
pdnNetToMediaParamsDefRouteEntryTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99999)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnNetToMediaParamsDefRouteEntryTimeout.setStatus('current')
pdnNetToMediaParamsAprTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 1, 4), )
if mibBuilder.loadTexts: pdnNetToMediaParamsAprTable.setStatus('current')
pdnNetToMediaParamsAprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 1, 4, 1), ).setIndexNames((0, "PDN-ARP-MIB", "pdnNetToMediaParamsAprIpAddr"))
if mibBuilder.loadTexts: pdnNetToMediaParamsAprEntry.setStatus('current')
pdnNetToMediaParamsAprIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 1, 4, 1, 1), IpAddress())
if mibBuilder.loadTexts: pdnNetToMediaParamsAprIpAddr.setStatus('current')
pdnNetToMediaParamsAprRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 1, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnNetToMediaParamsAprRowStatus.setStatus('current')
pdnNetToMediaParamsAprReqPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 1, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440))).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnNetToMediaParamsAprReqPeriod.setStatus('current')
pdnNetToMediaParamsAprTimeToNext = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 1, 4, 1, 4), Unsigned32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnNetToMediaParamsAprTimeToNext.setStatus('current')
pdnNetToMediaConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 1), )
if mibBuilder.loadTexts: pdnNetToMediaConfigTable.setStatus('current')
pdnNetToMediaConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "PDN-ARP-MIB", "pdnNetToMediaConfigIpAddr"))
if mibBuilder.loadTexts: pdnNetToMediaConfigEntry.setStatus('current')
pdnNetToMediaConfigIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: pdnNetToMediaConfigIpAddr.setStatus('current')
pdnNetToMediaConfigMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 1, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnNetToMediaConfigMacAddr.setStatus('current')
pdnNetToMediaConfigMin = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnNetToMediaConfigMin.setStatus('current')
pdnNetToMediaConfigFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnNetToMediaConfigFlags.setStatus('current')
pdnNetToMediaConfigTrailer = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 1, 1, 5), SwitchState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnNetToMediaConfigTrailer.setStatus('current')
pdnNetToMediaConfigPerm = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 1, 1, 6), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnNetToMediaConfigPerm.setStatus('current')
pdnNetToMediaConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnNetToMediaConfigRowStatus.setStatus('current')
pdnNetTo8023MediaConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 3, 1), )
if mibBuilder.loadTexts: pdnNetTo8023MediaConfigTable.setStatus('current')
pdnNetTo8023MediaConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "PDN-ARP-MIB", "pdnNetTo8023MediaConfigIpAddr"), (0, "PDN-ARP-MIB", "pdnNetTo8023MediaConfigVnidId"))
if mibBuilder.loadTexts: pdnNetTo8023MediaConfigEntry.setStatus('current')
pdnNetTo8023MediaConfigIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 3, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: pdnNetTo8023MediaConfigIpAddr.setStatus('current')
pdnNetTo8023MediaConfigVnidId = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 3, 1, 1, 2), VnidRange()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnNetTo8023MediaConfigVnidId.setStatus('current')
pdnNetTo8023MediaConfigMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 3, 1, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnNetTo8023MediaConfigMacAddr.setStatus('current')
pdnNetTo8023MediaConfigMin = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnNetTo8023MediaConfigMin.setStatus('current')
pdnNetTo8023MediaConfigFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnNetTo8023MediaConfigFlags.setStatus('current')
pdnNetTo8023MediaConfigTrailer = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 3, 1, 1, 6), SwitchState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnNetTo8023MediaConfigTrailer.setStatus('current')
pdnNetTo8023MediaConfigPerm = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 3, 1, 1, 7), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnNetTo8023MediaConfigPerm.setStatus('current')
pdnNetTo8023MediaConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 3, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnNetTo8023MediaConfigRowStatus.setStatus('current')
pdnNetToMediaClearAllArp = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noop", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnNetToMediaClearAllArp.setStatus('current')
pdnNetToMediaProxyArpTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 3), )
if mibBuilder.loadTexts: pdnNetToMediaProxyArpTable.setStatus('current')
pdnNetToMediaProxyArpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnNetToMediaProxyArpEntry.setStatus('current')
pdnNetToMediaProxyArpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnNetToMediaProxyArpStatus.setStatus('current')
ipNetToMediaConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 4))
ipNetToMediaForwardingMode = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("basic", 1), ("mux", 2), ("sms", 3), ("ult", 4), ("vlan", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipNetToMediaForwardingMode.setStatus('current')
ipNetToMediaDefaultNHR = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 4, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipNetToMediaDefaultNHR.setStatus('current')
ipNetToMediaExtTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 4, 3), )
if mibBuilder.loadTexts: ipNetToMediaExtTable.setStatus('current')
ipNetToMediaExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 4, 3, 1), )
ipNetToMediaEntry.registerAugmentions(("PDN-ARP-MIB", "ipNetToMediaExtEntry"))
ipNetToMediaExtEntry.setIndexNames(*ipNetToMediaEntry.getIndexNames())
if mibBuilder.loadTexts: ipNetToMediaExtEntry.setStatus('current')
ipNetToMediaNHR = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 4, 3, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipNetToMediaNHR.setStatus('current')
ipNetToMediaLimitTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 4, 4), )
if mibBuilder.loadTexts: ipNetToMediaLimitTable.setStatus('current')
ipNetToMediaLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 4, 4, 1), ).setIndexNames((0, "IP-MIB", "ipNetToMediaIfIndex"))
if mibBuilder.loadTexts: ipNetToMediaLimitEntry.setStatus('current')
ipNetToMediaLimitEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 4, 4, 1, 1), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipNetToMediaLimitEnabled.setStatus('current')
ipNetToMediaMaxIPAddresses = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 2, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipNetToMediaMaxIPAddresses.setStatus('current')
unauthorizedUserEvent = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 2, 0, 1)).setObjects(("IP-MIB", "ipNetToMediaIfIndex"), ("IP-MIB", "ipNetToMediaPhysAddress"))
if mibBuilder.loadTexts: unauthorizedUserEvent.setStatus('current')
pdnNetToMediaCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 4, 1))
pdnNetToMediaGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 4, 2))
pdnNetToMediaCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 4, 1, 1)).setObjects(("PDN-ARP-MIB", "pdnNetToMediaParamsGroup"), ("PDN-ARP-MIB", "pdnNetToMediaConfigGroup"), ("PDN-ARP-MIB", "pdnNetToMedia8023ConfigGroup"), ("PDN-ARP-MIB", "pdnNetToMediaClearGroup"), ("PDN-ARP-MIB", "pdnNetToMediaProxyArpGroup"), ("PDN-ARP-MIB", "pdnNetToMediaConfigProxyArpGroup"), ("PDN-ARP-MIB", "pdnNetToMediaExtGroup"), ("PDN-ARP-MIB", "pdnNetToMediaLimitGroup"), ("PDN-ARP-MIB", "pdnNetToMediaUnauthorizedUserEventGroup"), ("PDN-ARP-MIB", "pdnNetToMediaParamsAprConfigGroup"), ("PDN-ARP-MIB", "pdnNetToMediaParamsAprTimeToNextGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnNetToMediaCompliance = pdnNetToMediaCompliance.setStatus('current')
pdnNetToMediaObjGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 4, 2, 1))
pdnNetToMediaNtfyGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 4, 2, 2))
pdnNetToMediaParamsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 4, 2, 1, 1)).setObjects(("PDN-ARP-MIB", "pdnNetToMediaParamsCompEntryTimeout"), ("PDN-ARP-MIB", "pdnNetToMediaParamsIncompEntryTimeout"), ("PDN-ARP-MIB", "pdnNetToMediaParamsDefRouteEntryTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnNetToMediaParamsGroup = pdnNetToMediaParamsGroup.setStatus('current')
pdnNetToMediaConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 4, 2, 1, 2)).setObjects(("PDN-ARP-MIB", "pdnNetToMediaConfigMacAddr"), ("PDN-ARP-MIB", "pdnNetToMediaConfigMin"), ("PDN-ARP-MIB", "pdnNetToMediaConfigFlags"), ("PDN-ARP-MIB", "pdnNetToMediaConfigTrailer"), ("PDN-ARP-MIB", "pdnNetToMediaConfigPerm"), ("PDN-ARP-MIB", "pdnNetToMediaConfigRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnNetToMediaConfigGroup = pdnNetToMediaConfigGroup.setStatus('current')
pdnNetToMedia8023ConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 4, 2, 1, 3)).setObjects(("PDN-ARP-MIB", "pdnNetTo8023MediaConfigVnidId"), ("PDN-ARP-MIB", "pdnNetTo8023MediaConfigMacAddr"), ("PDN-ARP-MIB", "pdnNetTo8023MediaConfigMin"), ("PDN-ARP-MIB", "pdnNetTo8023MediaConfigFlags"), ("PDN-ARP-MIB", "pdnNetTo8023MediaConfigTrailer"), ("PDN-ARP-MIB", "pdnNetTo8023MediaConfigPerm"), ("PDN-ARP-MIB", "pdnNetTo8023MediaConfigRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnNetToMedia8023ConfigGroup = pdnNetToMedia8023ConfigGroup.setStatus('current')
pdnNetToMediaClearGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 4, 2, 1, 4)).setObjects(("PDN-ARP-MIB", "pdnNetToMediaClearAllArp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnNetToMediaClearGroup = pdnNetToMediaClearGroup.setStatus('current')
pdnNetToMediaProxyArpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 4, 2, 1, 5)).setObjects(("PDN-ARP-MIB", "pdnNetToMediaProxyArpStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnNetToMediaProxyArpGroup = pdnNetToMediaProxyArpGroup.setStatus('current')
pdnNetToMediaConfigProxyArpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 4, 2, 1, 6)).setObjects(("PDN-ARP-MIB", "ipNetToMediaForwardingMode"), ("PDN-ARP-MIB", "ipNetToMediaDefaultNHR"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnNetToMediaConfigProxyArpGroup = pdnNetToMediaConfigProxyArpGroup.setStatus('current')
pdnNetToMediaExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 4, 2, 1, 7)).setObjects(("PDN-ARP-MIB", "ipNetToMediaNHR"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnNetToMediaExtGroup = pdnNetToMediaExtGroup.setStatus('current')
pdnNetToMediaLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 4, 2, 1, 8)).setObjects(("PDN-ARP-MIB", "ipNetToMediaLimitEnabled"), ("PDN-ARP-MIB", "ipNetToMediaMaxIPAddresses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnNetToMediaLimitGroup = pdnNetToMediaLimitGroup.setStatus('current')
pdnNetToMediaParamsAprConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 4, 2, 1, 9)).setObjects(("PDN-ARP-MIB", "pdnNetToMediaParamsAprRowStatus"), ("PDN-ARP-MIB", "pdnNetToMediaParamsAprReqPeriod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnNetToMediaParamsAprConfigGroup = pdnNetToMediaParamsAprConfigGroup.setStatus('current')
pdnNetToMediaParamsAprTimeToNextGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 4, 2, 1, 10)).setObjects(("PDN-ARP-MIB", "pdnNetToMediaParamsAprTimeToNext"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnNetToMediaParamsAprTimeToNextGroup = pdnNetToMediaParamsAprTimeToNextGroup.setStatus('current')
pdnNetToMediaUnauthorizedUserEventGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 27, 1, 4, 2, 2, 1)).setObjects(("PDN-ARP-MIB", "unauthorizedUserEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnNetToMediaUnauthorizedUserEventGroup = pdnNetToMediaUnauthorizedUserEventGroup.setStatus('current')
mibBuilder.exportSymbols("PDN-ARP-MIB", pdnNetToMediaParamsAprRowStatus=pdnNetToMediaParamsAprRowStatus, ipNetToMediaExtEntry=ipNetToMediaExtEntry, ipNetToMediaForwardingMode=ipNetToMediaForwardingMode, pdnNetToMediaProxyArpEntry=pdnNetToMediaProxyArpEntry, pdnNetToMediaCompliances=pdnNetToMediaCompliances, ipNetToMediaExtTable=ipNetToMediaExtTable, pdnNetToMediaClearGroup=pdnNetToMediaClearGroup, ipNetToMediaDefaultNHR=ipNetToMediaDefaultNHR, pdnNetToMediaParamsAprReqPeriod=pdnNetToMediaParamsAprReqPeriod, pdnNetToMediaObjGroups=pdnNetToMediaObjGroups, pdnNetToMediaGroups=pdnNetToMediaGroups, pdnNetToMediaConfigTable=pdnNetToMediaConfigTable, pdnNetTo8023MediaConfigTable=pdnNetTo8023MediaConfigTable, unauthorizedUserEvent=unauthorizedUserEvent, pdnNetToMediaConfigGroup=pdnNetToMediaConfigGroup, pdnNetToMediaParamsAprTimeToNext=pdnNetToMediaParamsAprTimeToNext, ipNetToMediaConfig=ipNetToMediaConfig, pdnNetToMediaParamsAprTable=pdnNetToMediaParamsAprTable, pdnNetToMediaConfigMacAddr=pdnNetToMediaConfigMacAddr, pdnNetToMediaParamsAprEntry=pdnNetToMediaParamsAprEntry, pdnNetToMediaConfigRowStatus=pdnNetToMediaConfigRowStatus, ipNetToMediaLimitTable=ipNetToMediaLimitTable, pdnNetToMediaConfigMin=pdnNetToMediaConfigMin, pdnNetToMediaConfig=pdnNetToMediaConfig, pdnNetToMediaConfigIpAddr=pdnNetToMediaConfigIpAddr, pdnNetToMediaParamsAprConfigGroup=pdnNetToMediaParamsAprConfigGroup, pdnNetToMediaMIBTraps=pdnNetToMediaMIBTraps, pdnNetToMediaParamsIncompEntryTimeout=pdnNetToMediaParamsIncompEntryTimeout, PYSNMP_MODULE_ID=pdn_arp, pdnNetToMediaParamsGroup=pdnNetToMediaParamsGroup, pdnNetToMediaParamsDefRouteEntryTimeout=pdnNetToMediaParamsDefRouteEntryTimeout, pdnNetTo8023MediaConfigRowStatus=pdnNetTo8023MediaConfigRowStatus, pdnNetToMedia8023ConfigGroup=pdnNetToMedia8023ConfigGroup, pdnNetToMediaParamsAprTimeToNextGroup=pdnNetToMediaParamsAprTimeToNextGroup, pdnNetToMediaProxyArpGroup=pdnNetToMediaProxyArpGroup, ipNetToMediaLimitEnabled=ipNetToMediaLimitEnabled, pdnNetToMediaGenericMIBObjects=pdnNetToMediaGenericMIBObjects, pdnNetTo8023MediaConfigPerm=pdnNetTo8023MediaConfigPerm, ipNetToMediaLimitEntry=ipNetToMediaLimitEntry, pdnNetTo8023MediaConfig=pdnNetTo8023MediaConfig, pdnNetToMediaConformance=pdnNetToMediaConformance, pdnNetToMediaClearAllArp=pdnNetToMediaClearAllArp, pdnNetToMediaCompliance=pdnNetToMediaCompliance, pdnNetToMediaProxyArpStatus=pdnNetToMediaProxyArpStatus, pdnNetToMediaUnauthorizedUserEventGroup=pdnNetToMediaUnauthorizedUserEventGroup, pdnNetToMediaNtfyGroups=pdnNetToMediaNtfyGroups, pdnNetToMediaConfigTrailer=pdnNetToMediaConfigTrailer, pdnNetTo8023MediaConfigMin=pdnNetTo8023MediaConfigMin, pdnNetTo8023MediaConfigFlags=pdnNetTo8023MediaConfigFlags, pdnNetToMediaConfigProxyArpGroup=pdnNetToMediaConfigProxyArpGroup, pdnNetToMediaConfigPerm=pdnNetToMediaConfigPerm, pdnNetToMediaExtGroup=pdnNetToMediaExtGroup, pdnNetToMediaParamsAprIpAddr=pdnNetToMediaParamsAprIpAddr, pdnNetToMediaProxyArpTable=pdnNetToMediaProxyArpTable, pdnNetTo8023MediaConfigVnidId=pdnNetTo8023MediaConfigVnidId, pdnNetToMediaParamsCompEntryTimeout=pdnNetToMediaParamsCompEntryTimeout, ipNetToMediaMaxIPAddresses=ipNetToMediaMaxIPAddresses, pdnNetToMediaMIBNotifications=pdnNetToMediaMIBNotifications, pdnNetToMediaConfigFlags=pdnNetToMediaConfigFlags, pdnNetTo8023MediaConfigIpAddr=pdnNetTo8023MediaConfigIpAddr, pdnNetToMediaParams=pdnNetToMediaParams, pdn_arp=pdn_arp, pdnNetTo8023MediaConfigEntry=pdnNetTo8023MediaConfigEntry, pdnNetToMediaLimitGroup=pdnNetToMediaLimitGroup, pdnNetToMediaConfigEntry=pdnNetToMediaConfigEntry, ipNetToMediaNHR=ipNetToMediaNHR, pdnNetTo8023MediaConfigTrailer=pdnNetTo8023MediaConfigTrailer, pdnNetTo8023MediaConfigMacAddr=pdnNetTo8023MediaConfigMacAddr)
