#
# PySNMP MIB module RDN-CMTS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RDN-CMTS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:46:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
docsIfCmtsCmStatusIpAddress, TenthdB, TenthdBmV, docsIfUpChannelId, docsIfCmtsCmStatusEntry, docsIfCmtsCmStatusMacAddress, docsIfCmtsCmStatusIndex, DocsisQosVersion, docsIfCmtsCmStatusDocsisRegMode, docsIfDownChannelId, DocsisUpstreamType = mibBuilder.importSymbols("DOCS-IF-MIB", "docsIfCmtsCmStatusIpAddress", "TenthdB", "TenthdBmV", "docsIfUpChannelId", "docsIfCmtsCmStatusEntry", "docsIfCmtsCmStatusMacAddress", "docsIfCmtsCmStatusIndex", "DocsisQosVersion", "docsIfCmtsCmStatusDocsisRegMode", "docsIfDownChannelId", "DocsisUpstreamType")
IfDirection, docsIf3CmtsCmRegStatusIPv6Addr = mibBuilder.importSymbols("DOCS-IF3-MIB", "IfDirection", "docsIf3CmtsCmRegStatusIPv6Addr")
docsQosServiceClassName, = mibBuilder.importSymbols("DOCS-QOS3-MIB", "docsQosServiceClassName")
IpV4orV6Addr, = mibBuilder.importSymbols("DOCS-SUBMGT-MIB", "IpV4orV6Addr")
ifAdminStatus, ifDescr, InterfaceIndexOrZero, InterfaceIndex, ifType, ifIndex, ifOperStatus = mibBuilder.importSymbols("IF-MIB", "ifAdminStatus", "ifDescr", "InterfaceIndexOrZero", "InterfaceIndex", "ifType", "ifIndex", "ifOperStatus")
InetAddressIPv6, InetAddress, InetAddressType, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv6", "InetAddress", "InetAddressType", "InetPortNumber")
rdnSpectrumGroupName, = mibBuilder.importSymbols("RDN-CABLE-SPECTRUM-GROUP-MIB", "rdnSpectrumGroupName")
riverdelta, = mibBuilder.importSymbols("RDN-MIB", "riverdelta")
rdnPktDQoSClassName, = mibBuilder.importSymbols("RDN-PKTCABLE-GROUP-MIB", "rdnPktDQoSClassName")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Gauge32, MibIdentifier, NotificationType, Unsigned32, Counter32, TimeTicks, ObjectIdentity, Integer32, Counter64, Bits, ModuleIdentity, iso, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibIdentifier", "NotificationType", "Unsigned32", "Counter32", "TimeTicks", "ObjectIdentity", "Integer32", "Counter64", "Bits", "ModuleIdentity", "iso", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TimeInterval, MacAddress, RowStatus, TruthValue, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TimeInterval", "MacAddress", "RowStatus", "TruthValue", "TextualConvention", "TimeStamp")
rdnCmtsMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4981, 2))
rdnCmtsMib.setRevisions(('2011-03-08 00:00', '2011-02-23 00:00', '2009-11-20 00:00', '2008-08-08 00:00', '2007-06-21 00:00', '2006-05-25 00:00', '2006-05-24 00:00', '2006-04-17 00:00', '2006-01-25 00:00', '2006-01-23 00:00', '2006-01-13 00:00', '2005-03-18 00:00', '2005-02-22 00:00', '2004-08-17 00:00', '1904-04-14 00:00', '2003-12-16 00:00', '2003-11-05 00:00', '2003-11-03 00:00', '2003-07-20 00:00', '2003-05-01 00:00', '2000-04-03 00:00',))
if mibBuilder.loadTexts: rdnCmtsMib.setLastUpdated('201103080000Z')
if mibBuilder.loadTexts: rdnCmtsMib.setOrganization('Motorola')
rdnCmtsIfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 2, 1))
rdnCmtsMiscObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 2, 2))
rdnCmtsDownstreamChannelTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 2, 1, 1), )
if mibBuilder.loadTexts: rdnCmtsDownstreamChannelTable.setStatus('current')
rdnCmtsDownstreamChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 2, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rdnCmtsDownstreamChannelEntry.setStatus('current')
rdnCmtsDSModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 1, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsDSModulation.setStatus('current')
rdnCmtsUpstreamChannelTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 2, 1, 2), )
if mibBuilder.loadTexts: rdnCmtsUpstreamChannelTable.setStatus('current')
rdnCmtsUpstreamChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 2, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rdnCmtsUpstreamChannelEntry.setStatus('current')
rdnCmtsUSNominalRxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-160, 290))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsUSNominalRxPower.setStatus('current')
rdnCmtsUSNominalRxPowerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("absolute", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsUSNominalRxPowerMode.setStatus('current')
rdnCmtsUSInvitedRangingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsUSInvitedRangingInterval.setStatus('current')
rdnCmtsUSRangingResponseControl = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("override", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsUSRangingResponseControl.setStatus('current')
rdnCmtsUSRangingPowerOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 1, 2, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsUSRangingPowerOverride.setStatus('current')
rdnCmtsUSTotalModemCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCmtsUSTotalModemCount.setStatus('current')
rdnCmtsUSRegisteredModemCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCmtsUSRegisteredModemCount.setStatus('current')
rdnCmtsUSUnregisteredModemCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCmtsUSUnregisteredModemCount.setStatus('current')
rdnCmtsUSOfflineModemCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCmtsUSOfflineModemCount.setStatus('current')
rdnCmtsStpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 2, 1, 3))
rdnCmtsStpEnable = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 1, 3, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsStpEnable.setStatus('current')
rdnCmtsStpTCNEnable = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 1, 3, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsStpTCNEnable.setStatus('current')
rdnCmtsLinkUpDownTrapEnableTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 2, 1, 4), )
if mibBuilder.loadTexts: rdnCmtsLinkUpDownTrapEnableTable.setStatus('current')
rdnCmtsLinkUpDownTrapEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 2, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rdnCmtsLinkUpDownTrapEnableEntry.setStatus('current')
rdnCmtsLinkUpDownTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsLinkUpDownTrapEnable.setStatus('current')
rdnCmtsSaveConfig = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 2, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsSaveConfig.setStatus('current')
rdnCmtsCmResetByMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 2, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsCmResetByMacAddr.setStatus('current')
rdnCmtsCmResetByIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsCmResetByIpAddr.setStatus('current')
rdnCmtsCmResetAll = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 2, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsCmResetAll.setStatus('current')
rdnCmtsHostAuthControl = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 2, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(17, 17)).setFixedLength(17)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsHostAuthControl.setStatus('obsolete')
rdnCmtsModemAgingTimer = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 30240), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsModemAgingTimer.setStatus('current')
rdnCmtsCpeToCmObject = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 2, 2, 7))
rdnCmtsCpeToCmTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 2, 2, 7, 1), )
if mibBuilder.loadTexts: rdnCmtsCpeToCmTable.setStatus('current')
rdnCmtsCpeToCmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 2, 2, 7, 1, 1), ).setIndexNames((0, "RDN-CMTS-MIB", "rdnCmtsCpeMac"))
if mibBuilder.loadTexts: rdnCmtsCpeToCmEntry.setStatus('current')
rdnCmtsCpeMac = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 7, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: rdnCmtsCpeMac.setStatus('current')
rdnCmtsCmMac = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 7, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCmtsCmMac.setStatus('current')
rdnIfCmtsCmStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8), )
if mibBuilder.loadTexts: rdnIfCmtsCmStatusTable.setStatus('current')
rdnIfCmtsCmStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1), )
docsIfCmtsCmStatusEntry.registerAugmentions(("RDN-CMTS-MIB", "rdnIfCmtsCmStatusEntry"))
rdnIfCmtsCmStatusEntry.setIndexNames(*docsIfCmtsCmStatusEntry.getIndexNames())
if mibBuilder.loadTexts: rdnIfCmtsCmStatusEntry.setStatus('current')
rdnIfCmtsCmStatusRegistrationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusRegistrationTime.setStatus('current')
rdnIfCmtsCmStatusTxUnicastKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusTxUnicastKbytes.setStatus('current')
rdnIfCmtsCmStatusRxUnicastKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusRxUnicastKbytes.setStatus('current')
rdnIfCmtsCmStatusTxUnicastExtKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusTxUnicastExtKbytes.setStatus('current')
rdnIfCmtsCmStatusRxUnicastExtKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusRxUnicastExtKbytes.setStatus('current')
rdnIfCmtsCmStatusSpectrumGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusSpectrumGroupName.setStatus('current')
rdnIfCmtsCmStatusUpstreamPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusUpstreamPort.setStatus('current')
rdnIfCmtsCmStatusDownStreamPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusDownStreamPort.setStatus('current')
rdnIfCmtsCmStatusValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))).clone(namedValues=NamedValues(("init-o", 1), ("init-t", 2), ("init-r1", 3), ("init-r2", 4), ("init-rc", 5), ("dhcp-d", 6), ("dhcp-o", 7), ("dhcp-req", 8), ("dhcp-ack", 9), ("online", 10), ("online-d", 11), ("online-un", 12), ("online-pk", 13), ("online-pt", 14), ("reject-m", 15), ("reject-c", 16), ("reject-r", 17), ("reject-pk", 18), ("reject-pt", 19), ("offline", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusValue.setStatus('current')
rdnIfCmtsCmStatusDSBondingGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusDSBondingGroupId.setStatus('current')
rdnIfCmtsCmStatusOnlineTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusOnlineTimes.setStatus('current')
rdnIfCmtsCmStatusPercentOnline = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusPercentOnline.setStatus('current')
rdnIfCmtsCmStatusMinOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 13), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusMinOnlineTime.setStatus('current')
rdnIfCmtsCmStatusAvgOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 14), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusAvgOnlineTime.setStatus('current')
rdnIfCmtsCmStatusMaxOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 15), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusMaxOnlineTime.setStatus('current')
rdnIfCmtsCmStatusMinOfflineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 16), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusMinOfflineTime.setStatus('current')
rdnIfCmtsCmStatusAvgOfflineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 17), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusAvgOfflineTime.setStatus('current')
rdnIfCmtsCmStatusMaxOfflineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 8, 1, 18), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmStatusMaxOfflineTime.setStatus('current')
rdnModemDeregReason = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("normal", 1), ("operatorReset", 2), ("operatorDisabled", 3), ("operatorDeleted", 4), ("transmissionFailed", 5), ("transmissionDisabled", 6), ("transmissionDeleted", 7), ("servingGroupChanged", 8), ("receiverFailed", 9), ("receiverDisabled", 10), ("receiverDeleted", 11), ("channelDeleted", 12), ("channelErrors", 13), ("incompleteReg", 14), ("profileUpdateComplete", 15), ("skeyFailure", 16), ("dnChanChangeFailure", 17), ("noDeregReason", 18), ("powerTolerance", 19), ("freqTolerance", 20), ("timingTolerance", 21), ("rangingTolerance", 22), ("noResponseUCC", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnModemDeregReason.setStatus('current')
rdnModemRegIndex = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 2, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnModemRegIndex.setStatus('current')
rdnCmToCpeTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 2, 2, 12), )
if mibBuilder.loadTexts: rdnCmToCpeTable.setStatus('current')
rdnCmToCpeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 2, 2, 12, 1), ).setIndexNames((0, "DOCS-IF-MIB", "docsIfCmtsCmStatusIndex"), (0, "RDN-CMTS-MIB", "rdnCmToCpeIndex"))
if mibBuilder.loadTexts: rdnCmToCpeEntry.setStatus('current')
rdnCmToCpeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rdnCmToCpeIndex.setStatus('current')
rdnCmToCpeMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 12, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCmToCpeMacAddress.setStatus('current')
rdnCmToCpeIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 12, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCmToCpeIpAddress.setStatus('current')
rdnCmToCpeIPv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 12, 1, 4), InetAddressIPv6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCmToCpeIPv6Addr.setStatus('current')
rdnCmtsCmRegisteredTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsCmRegisteredTrapEnable.setStatus('current')
rdnCmtsCardType = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("domestic", 1), ("japan", 2))).clone('domestic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsCardType.setStatus('current')
rdnRQueryCmtsCmStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 2, 2, 15), )
if mibBuilder.loadTexts: rdnRQueryCmtsCmStatusTable.setStatus('current')
rdnRQueryCmtsCmStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 2, 2, 15, 1), ).setIndexNames((0, "DOCS-IF-MIB", "docsIfCmtsCmStatusIndex"))
if mibBuilder.loadTexts: rdnRQueryCmtsCmStatusEntry.setStatus('current')
rdnRQueryCmtsCmDownChannelPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 15, 1, 1), TenthdBmV()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnRQueryCmtsCmDownChannelPower.setStatus('current')
rdnRQueryCmStatusTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 15, 1, 2), TenthdBmV()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnRQueryCmStatusTxPower.setStatus('current')
rdnRQueryUpChannelTxTimingOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 15, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnRQueryUpChannelTxTimingOffset.setStatus('current')
rdnRQuerySigQSignalNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 15, 1, 4), TenthdB()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnRQuerySigQSignalNoise.setStatus('current')
rdnRQuerySigQMicroreflections = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 15, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('dBc').setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnRQuerySigQMicroreflections.setStatus('current')
rdnRQueryPollTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 15, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnRQueryPollTime.setStatus('current')
rdnCmtsServiceClassObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 2, 2, 19))
rdnCmtsServiceClassTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 2, 2, 19, 1), )
if mibBuilder.loadTexts: rdnCmtsServiceClassTable.setStatus('current')
rdnCmtsServiceClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 2, 2, 19, 1, 1), ).setIndexNames((0, "RDN-CMTS-MIB", "rdnCmtsServiceClassName"))
if mibBuilder.loadTexts: rdnCmtsServiceClassEntry.setStatus('current')
rdnCmtsServiceClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 19, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15)))
if mibBuilder.loadTexts: rdnCmtsServiceClassName.setStatus('current')
rdnCmtsServiceClassMab = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 19, 1, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsServiceClassMab.setStatus('current')
rdnCmtsServiceClassCap = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 19, 1, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsServiceClassCap.setStatus('current')
rdnCmtsServiceClassSchedulingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 19, 1, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsServiceClassSchedulingPriority.setStatus('current')
rdnCmtsServiceClassAdmittedBWThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 19, 1, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsServiceClassAdmittedBWThreshold.setStatus('current')
rdnCmtsServiceClassAllowShare = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 19, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsServiceClassAllowShare.setStatus('current')
rdnUgsStatsWindow = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 120), )).clone(60)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnUgsStatsWindow.setStatus('current')
rdnCableUgsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 2, 2, 17), )
if mibBuilder.loadTexts: rdnCableUgsStatsTable.setStatus('current')
rdnCableUgsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 2, 2, 17, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rdnCableUgsStatsEntry.setStatus('current')
rdnCableUgsStatsSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCableUgsStatsSlot.setStatus('current')
rdnCableUgsStatsPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 17, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCableUgsStatsPort.setStatus('current')
rdnCableUgsCurrentTotalFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 17, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCableUgsCurrentTotalFlows.setStatus('current')
rdnCableUgsMaxFlowsLastFiveMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 17, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCableUgsMaxFlowsLastFiveMinutes.setStatus('current')
rdnCableUgsAvFlowsLastFiveMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 17, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCableUgsAvFlowsLastFiveMinutes.setStatus('current')
rdnCableUgsMinFlowsLastFiveMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 17, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCableUgsMinFlowsLastFiveMinutes.setStatus('current')
rdnCableUgsMaxFlowsLastWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 17, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCableUgsMaxFlowsLastWindow.setStatus('current')
rdnCableUgsAvFlowsLastWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 17, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCableUgsAvFlowsLastWindow.setStatus('current')
rdnCableUgsMinFlowsLastWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 17, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCableUgsMinFlowsLastWindow.setStatus('current')
rdnCableUgsResetStats = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 17, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCableUgsResetStats.setStatus('current')
rdnServiceClassStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 2, 2, 18), )
if mibBuilder.loadTexts: rdnServiceClassStatsTable.setStatus('current')
rdnServiceClassStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 2, 2, 18, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-QOS3-MIB", "docsQosServiceClassName"))
if mibBuilder.loadTexts: rdnServiceClassStatsEntry.setStatus('current')
rdnServiceClassStatsIfDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 18, 1, 1), IfDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnServiceClassStatsIfDirection.setStatus('current')
rdnServiceClassStatsSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 18, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnServiceClassStatsSlot.setStatus('current')
rdnServiceClassStatsPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 18, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnServiceClassStatsPort.setStatus('current')
rdnServiceClassStatsTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 18, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnServiceClassStatsTotalPackets.setStatus('current')
rdnServiceClassStatsTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 18, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnServiceClassStatsTotalBytes.setStatus('current')
rdnServiceClassCurrentTotalFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 18, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnServiceClassCurrentTotalFlows.setStatus('current')
rdnServiceClassDeferredFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 18, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnServiceClassDeferredFlows.setStatus('current')
rdnServiceClassRestrictedFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 18, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnServiceClassRestrictedFlows.setStatus('current')
rdnServiceClassRejectedFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 18, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnServiceClassRejectedFlows.setStatus('current')
rdnServiceClassBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 18, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnServiceClassBandWidth.setStatus('current')
rdnServiceClassResetStats = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 18, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnServiceClassResetStats.setStatus('current')
rdnRQueryCmtsCmStatusExtTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 2, 2, 20), )
if mibBuilder.loadTexts: rdnRQueryCmtsCmStatusExtTable.setStatus('current')
rdnRQueryCmtsCmStatusExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 2, 2, 20, 1), )
rdnRQueryCmtsCmStatusEntry.registerAugmentions(("RDN-CMTS-MIB", "rdnRQueryCmtsCmStatusExtEntry"))
rdnRQueryCmtsCmStatusExtEntry.setIndexNames(*rdnRQueryCmtsCmStatusEntry.getIndexNames())
if mibBuilder.loadTexts: rdnRQueryCmtsCmStatusExtEntry.setStatus('current')
rdnRQuerySwCurrentVers = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 20, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnRQuerySwCurrentVers.setStatus('current')
rdnRQueryServerConfigFile = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 20, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnRQueryServerConfigFile.setStatus('current')
rdnIfCmtsCmTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 2, 2, 21), )
if mibBuilder.loadTexts: rdnIfCmtsCmTable.setStatus('current')
rdnIfCmtsCmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 2, 2, 21, 1), )
docsIfCmtsCmStatusEntry.registerAugmentions(("RDN-CMTS-MIB", "rdnIfCmtsCmEntry"))
rdnIfCmtsCmEntry.setIndexNames(*docsIfCmtsCmStatusEntry.getIndexNames())
if mibBuilder.loadTexts: rdnIfCmtsCmEntry.setStatus('current')
rdnIfCmtsCmMaxCpeNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnIfCmtsCmMaxCpeNumber.setStatus('current')
rdnIfCmtsCmCurrCpeNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 21, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsCmCurrCpeNumber.setStatus('current')
rdnIfCmtsMTAOnlyStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23), )
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusTable.setStatus('current')
rdnIfCmtsMTAOnlyStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1), ).setIndexNames((0, "RDN-CMTS-MIB", "rdnIfCmtsMTAOnlyStatusIndex"))
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusEntry.setStatus('current')
rdnIfCmtsMTAOnlyStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusIndex.setStatus('current')
rdnIfCmtsMTAOnlyStatusMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusMacAddress.setStatus('current')
rdnIfCmtsMTAOnlyStatusIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusIpAddress.setStatus('deprecated')
rdnIfCmtsMTAOnlyStatusDownChannelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusDownChannelIfIndex.setStatus('current')
rdnIfCmtsMTAOnlyStatusUpChannelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 5), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusUpChannelIfIndex.setStatus('current')
rdnIfCmtsMTAOnlyStatusRxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 6), TenthdBmV()).setUnits('dBmV').setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusRxPower.setStatus('current')
rdnIfCmtsMTAOnlyStatusTimingOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusTimingOffset.setStatus('current')
rdnIfCmtsMTAOnlyStatusEqualizationData = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusEqualizationData.setStatus('current')
rdnIfCmtsMTAOnlyStatusValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("other", 1), ("ranging", 2), ("rangingAborted", 3), ("rangingComplete", 4), ("ipComplete", 5), ("registrationComplete", 6), ("accessDenied", 7), ("operational", 8), ("registeredBPIInitializing", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusValue.setStatus('current')
rdnIfCmtsMTAOnlyStatusUnerroreds = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusUnerroreds.setStatus('current')
rdnIfCmtsMTAOnlyStatusCorrecteds = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusCorrecteds.setStatus('current')
rdnIfCmtsMTAOnlyStatusUncorrectables = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusUncorrectables.setStatus('current')
rdnIfCmtsMTAOnlyStatusSignalNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 13), TenthdB()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusSignalNoise.setStatus('current')
rdnIfCmtsMTAOnlyStatusMicroreflections = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('dBc').setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusMicroreflections.setStatus('current')
rdnIfCmtsMTAOnlyStatusExtUnerroreds = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusExtUnerroreds.setStatus('current')
rdnIfCmtsMTAOnlyStatusExtCorrecteds = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusExtCorrecteds.setStatus('current')
rdnIfCmtsMTAOnlyStatusExtUncorrectables = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusExtUncorrectables.setStatus('current')
rdnIfCmtsMTAOnlyStatusDocsisRegMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 18), DocsisQosVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusDocsisRegMode.setStatus('current')
rdnIfCmtsMTAOnlyStatusModulationType = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 19), DocsisUpstreamType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusModulationType.setStatus('current')
rdnIfCmtsMTAOnlyStatusInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 20), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusInetAddressType.setStatus('current')
rdnIfCmtsMTAOnlyStatusInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 21), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusInetAddress.setStatus('current')
rdnIfCmtsMTAOnlyStatusValueLastUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 23, 1, 22), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsMTAOnlyStatusValueLastUpdate.setStatus('current')
rdnServiceClassBondingStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 2, 2, 24), )
if mibBuilder.loadTexts: rdnServiceClassBondingStatsTable.setStatus('current')
rdnServiceClassBondingStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 2, 2, 24, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "RDN-CMTS-MIB", "rdnServiceClassBondingStatsIfDirection"), (0, "DOCS-QOS3-MIB", "docsQosServiceClassName"), (0, "RDN-CMTS-MIB", "rdnServiceClassBondingStatsMacIfIndex"), (0, "RDN-CMTS-MIB", "rdnServiceClassBondingStatsGroupId"))
if mibBuilder.loadTexts: rdnServiceClassBondingStatsEntry.setStatus('current')
rdnServiceClassBondingStatsMacIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 24, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rdnServiceClassBondingStatsMacIfIndex.setStatus('current')
rdnServiceClassBondingStatsGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 24, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: rdnServiceClassBondingStatsGroupId.setStatus('current')
rdnServiceClassBondingStatsIfDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 24, 1, 3), IfDirection())
if mibBuilder.loadTexts: rdnServiceClassBondingStatsIfDirection.setStatus('current')
rdnServiceClassBondingStatsSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 24, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnServiceClassBondingStatsSlot.setStatus('current')
rdnServiceClassBondingStatsChan = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 24, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnServiceClassBondingStatsChan.setStatus('current')
rdnServiceClassBondingCurrentTotalFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 24, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnServiceClassBondingCurrentTotalFlows.setStatus('current')
rdnServiceClassBondingDeferredFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 24, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnServiceClassBondingDeferredFlows.setStatus('current')
rdnServiceClassBondingRestrictedFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 24, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnServiceClassBondingRestrictedFlows.setStatus('current')
rdnServiceClassBondingRejectedFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 24, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnServiceClassBondingRejectedFlows.setStatus('current')
rdnServiceClassBondingBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 24, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnServiceClassBondingBandWidth.setStatus('current')
rdnCmtsCmResetByIpv6Addr = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 2, 25), InetAddressIPv6()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnCmtsCmResetByIpv6Addr.setStatus('current')
rdnCmtsMibNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 2, 4))
rdnCmtsMibNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 2, 4, 0))
rdnCmtsMibNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 2, 4, 1))
rdnCmtsCmRegisteredNotification = NotificationType((1, 3, 6, 1, 4, 1, 4981, 2, 4, 0, 1)).setObjects(("DOCS-IF-MIB", "docsIfCmtsCmStatusDocsisRegMode"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusIpAddress"), ("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusIPv6Addr"), ("DOCS-IF-MIB", "docsIfUpChannelId"), ("DOCS-IF-MIB", "docsIfDownChannelId"), ("RDN-CMTS-MIB", "rdnModemRegIndex"), ("RDN-CABLE-SPECTRUM-GROUP-MIB", "rdnSpectrumGroupName"))
if mibBuilder.loadTexts: rdnCmtsCmRegisteredNotification.setStatus('current')
rdnCmtsCmDeregisteredNotification = NotificationType((1, 3, 6, 1, 4, 1, 4981, 2, 4, 0, 2)).setObjects(("DOCS-IF-MIB", "docsIfCmtsCmStatusDocsisRegMode"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("DOCS-IF-MIB", "docsIfUpChannelId"), ("DOCS-IF-MIB", "docsIfDownChannelId"), ("RDN-CMTS-MIB", "rdnModemRegIndex"), ("RDN-CMTS-MIB", "rdnModemDeregReason"), ("RDN-CABLE-SPECTRUM-GROUP-MIB", "rdnSpectrumGroupName"))
if mibBuilder.loadTexts: rdnCmtsCmDeregisteredNotification.setStatus('current')
rdnCmtsUpstreamIfLinkUpTrap = NotificationType((1, 3, 6, 1, 4, 1, 4981, 2, 4, 0, 3)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("IF-MIB", "ifType"), ("IF-MIB", "ifAdminStatus"), ("IF-MIB", "ifOperStatus"), ("RDN-CABLE-SPECTRUM-GROUP-MIB", "rdnSpectrumGroupName"))
if mibBuilder.loadTexts: rdnCmtsUpstreamIfLinkUpTrap.setStatus('current')
rdnCmtsUpstreamIfLinkDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 4981, 2, 4, 0, 4)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("IF-MIB", "ifType"), ("IF-MIB", "ifAdminStatus"), ("IF-MIB", "ifOperStatus"), ("RDN-CABLE-SPECTRUM-GROUP-MIB", "rdnSpectrumGroupName"))
if mibBuilder.loadTexts: rdnCmtsUpstreamIfLinkDownTrap.setStatus('current')
rdnRQueryPollDoneNotification = NotificationType((1, 3, 6, 1, 4, 1, 4981, 2, 4, 0, 5)).setObjects(("RDN-CMTS-MIB", "rdnRQueryLastPollStartTime"), ("RDN-CMTS-MIB", "rdnRQueryLastPollStopTime"))
if mibBuilder.loadTexts: rdnRQueryPollDoneNotification.setStatus('current')
rdnPktDQoSAdmittedBwThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 4981, 2, 4, 0, 6)).setObjects(("RDN-CMTS-MIB", "rdnPktDQoSAdmittedBwThresholdReason"), ("RDN-PKTCABLE-GROUP-MIB", "rdnPktDQoSClassName"))
if mibBuilder.loadTexts: rdnPktDQoSAdmittedBwThresholdTrap.setStatus('current')
rdnRQueryLastPollStartTime = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 4, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnRQueryLastPollStartTime.setStatus('current')
rdnRQueryLastPollStopTime = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 4, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnRQueryLastPollStopTime.setStatus('current')
rdnPktDQoSAdmittedBwThresholdReason = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("admittedBwExceedsThreshold", 1), ("admittedBwClearsOfThreshold", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rdnPktDQoSAdmittedBwThresholdReason.setStatus('current')
rdnCmtsMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 2, 5))
rdnCmtsCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 2, 5, 1))
rdnCmtsMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 2, 5, 2))
rdnCmtsMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4981, 2, 5, 1, 1)).setObjects(("RDN-CMTS-MIB", "rdnCmtsIfGroup"), ("RDN-CMTS-MIB", "rdnCmtsMiscGroup"), ("RDN-CMTS-MIB", "rdnCmtsNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rdnCmtsMibCompliance = rdnCmtsMibCompliance.setStatus('current')
rdnCmtsIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4981, 2, 5, 2, 1)).setObjects(("RDN-CMTS-MIB", "rdnCmtsDSModulation"), ("RDN-CMTS-MIB", "rdnCmtsUSNominalRxPower"), ("RDN-CMTS-MIB", "rdnCmtsUSInvitedRangingInterval"), ("RDN-CMTS-MIB", "rdnCmtsUSRangingResponseControl"), ("RDN-CMTS-MIB", "rdnCmtsUSRangingPowerOverride"), ("RDN-CMTS-MIB", "rdnCmtsUSNominalRxPowerMode"), ("RDN-CMTS-MIB", "rdnCmtsStpTCNEnable"), ("RDN-CMTS-MIB", "rdnCmtsLinkUpDownTrapEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rdnCmtsIfGroup = rdnCmtsIfGroup.setStatus('current')
rdnCmtsMiscGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4981, 2, 5, 2, 2)).setObjects(("RDN-CMTS-MIB", "rdnCmtsSaveConfig"), ("RDN-CMTS-MIB", "rdnCmtsCmResetByMacAddr"), ("RDN-CMTS-MIB", "rdnCmtsCmResetByIpAddr"), ("RDN-CMTS-MIB", "rdnCmtsCmResetAll"), ("RDN-CMTS-MIB", "rdnCmtsModemAgingTimer"), ("RDN-CMTS-MIB", "rdnCmtsCmMac"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusRegistrationTime"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusTxUnicastKbytes"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusRxUnicastKbytes"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusTxUnicastExtKbytes"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusRxUnicastExtKbytes"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusSpectrumGroupName"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusUpstreamPort"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusDownStreamPort"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusValue"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusDSBondingGroupId"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusOnlineTimes"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusPercentOnline"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusMinOnlineTime"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusAvgOnlineTime"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusMaxOnlineTime"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusMinOfflineTime"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusAvgOfflineTime"), ("RDN-CMTS-MIB", "rdnIfCmtsCmStatusMaxOfflineTime"), ("RDN-CMTS-MIB", "rdnModemDeregReason"), ("RDN-CMTS-MIB", "rdnModemRegIndex"), ("RDN-CMTS-MIB", "rdnCmToCpeMacAddress"), ("RDN-CMTS-MIB", "rdnCmToCpeIpAddress"), ("RDN-CMTS-MIB", "rdnCmtsCmRegisteredTrapEnable"), ("RDN-CMTS-MIB", "rdnCmtsCardType"), ("RDN-CMTS-MIB", "rdnRQueryCmtsCmDownChannelPower"), ("RDN-CMTS-MIB", "rdnRQueryCmStatusTxPower"), ("RDN-CMTS-MIB", "rdnRQueryUpChannelTxTimingOffset"), ("RDN-CMTS-MIB", "rdnRQuerySigQSignalNoise"), ("RDN-CMTS-MIB", "rdnRQuerySigQMicroreflections"), ("RDN-CMTS-MIB", "rdnRQueryPollTime"), ("RDN-CMTS-MIB", "rdnUgsStatsWindow"), ("RDN-CMTS-MIB", "rdnCableUgsStatsSlot"), ("RDN-CMTS-MIB", "rdnCableUgsStatsPort"), ("RDN-CMTS-MIB", "rdnCableUgsCurrentTotalFlows"), ("RDN-CMTS-MIB", "rdnCableUgsMaxFlowsLastFiveMinutes"), ("RDN-CMTS-MIB", "rdnCableUgsAvFlowsLastFiveMinutes"), ("RDN-CMTS-MIB", "rdnCableUgsMinFlowsLastFiveMinutes"), ("RDN-CMTS-MIB", "rdnCableUgsMaxFlowsLastWindow"), ("RDN-CMTS-MIB", "rdnCableUgsAvFlowsLastWindow"), ("RDN-CMTS-MIB", "rdnCableUgsMinFlowsLastWindow"), ("RDN-CMTS-MIB", "rdnCableUgsResetStats"), ("RDN-CMTS-MIB", "rdnServiceClassStatsIfDirection"), ("RDN-CMTS-MIB", "rdnServiceClassStatsSlot"), ("RDN-CMTS-MIB", "rdnServiceClassStatsPort"), ("RDN-CMTS-MIB", "rdnServiceClassStatsTotalPackets"), ("RDN-CMTS-MIB", "rdnServiceClassStatsTotalBytes"), ("RDN-CMTS-MIB", "rdnServiceClassCurrentTotalFlows"), ("RDN-CMTS-MIB", "rdnServiceClassDeferredFlows"), ("RDN-CMTS-MIB", "rdnServiceClassRestrictedFlows"), ("RDN-CMTS-MIB", "rdnServiceClassRejectedFlows"), ("RDN-CMTS-MIB", "rdnServiceClassBandWidth"), ("RDN-CMTS-MIB", "rdnServiceClassResetStats"), ("RDN-CMTS-MIB", "rdnServiceClassBondingStatsSlot"), ("RDN-CMTS-MIB", "rdnServiceClassBondingStatsChan"), ("RDN-CMTS-MIB", "rdnServiceClassBondingCurrentTotalFlows"), ("RDN-CMTS-MIB", "rdnServiceClassBondingDeferredFlows"), ("RDN-CMTS-MIB", "rdnServiceClassBondingRestrictedFlows"), ("RDN-CMTS-MIB", "rdnServiceClassBondingRejectedFlows"), ("RDN-CMTS-MIB", "rdnServiceClassBondingBandWidth"), ("RDN-CMTS-MIB", "rdnRQuerySwCurrentVers"), ("RDN-CMTS-MIB", "rdnCmtsCmResetByIpv6Addr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rdnCmtsMiscGroup = rdnCmtsMiscGroup.setStatus('current')
rdnCmtsNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 4981, 2, 5, 2, 3)).setObjects(("RDN-CMTS-MIB", "rdnCmtsCmRegisteredNotification"), ("RDN-CMTS-MIB", "rdnCmtsCmDeregisteredNotification"), ("RDN-CMTS-MIB", "rdnCmtsUpstreamIfLinkUpTrap"), ("RDN-CMTS-MIB", "rdnCmtsUpstreamIfLinkDownTrap"), ("RDN-CMTS-MIB", "rdnRQueryPollDoneNotification"), ("RDN-CMTS-MIB", "rdnPktDQoSAdmittedBwThresholdTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rdnCmtsNotificationsGroup = rdnCmtsNotificationsGroup.setStatus('current')
rdnCableInterceptScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 2, 2, 26))
rdnCableInterceptAccessPermitted = MibScalar((1, 3, 6, 1, 4, 1, 4981, 2, 2, 26, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCableInterceptAccessPermitted.setStatus('current')
rdnCableInterceptTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27), )
if mibBuilder.loadTexts: rdnCableInterceptTable.setStatus('current')
rdnCableInterceptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "RDN-CMTS-MIB", "rdnCableInterceptCpeMac"))
if mibBuilder.loadTexts: rdnCableInterceptEntry.setStatus('current')
rdnCableInterceptCpeMac = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27, 1, 1), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rdnCableInterceptCpeMac.setStatus('current')
rdnCableInterceptCmMac = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rdnCableInterceptCmMac.setStatus('current')
rdnCableInterceptDestination1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rdnCableInterceptDestination1Type.setStatus('current')
rdnCableInterceptDestination1Ip = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rdnCableInterceptDestination1Ip.setStatus('current')
rdnCableInterceptDestination1Port = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27, 1, 5), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rdnCableInterceptDestination1Port.setStatus('current')
rdnCableInterceptDestination2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27, 1, 6), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rdnCableInterceptDestination2Type.setStatus('current')
rdnCableInterceptDestination2Ip = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27, 1, 7), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rdnCableInterceptDestination2Ip.setStatus('current')
rdnCableInterceptDestination2Port = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27, 1, 8), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rdnCableInterceptDestination2Port.setStatus('current')
rdnCableInterceptDestination3Type = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27, 1, 9), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rdnCableInterceptDestination3Type.setStatus('current')
rdnCableInterceptDestination3Ip = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27, 1, 10), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rdnCableInterceptDestination3Ip.setStatus('current')
rdnCableInterceptDestination3Port = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27, 1, 11), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rdnCableInterceptDestination3Port.setStatus('current')
rdnCableInterceptSourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27, 1, 12), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rdnCableInterceptSourceType.setStatus('current')
rdnCableInterceptSourceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27, 1, 13), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rdnCableInterceptSourceIp.setStatus('current')
rdnCableInterceptPktCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCableInterceptPktCnt.setStatus('current')
rdnCableInterceptByteCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCableInterceptByteCnt.setStatus('current')
rdnCableInterceptRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 27, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rdnCableInterceptRowStatus.setStatus('current')
rdnCmtsUpChannelCounterTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 2, 2, 28), )
if mibBuilder.loadTexts: rdnCmtsUpChannelCounterTable.setStatus('current')
rdnCmtsUpChannelCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 2, 2, 28, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rdnCmtsUpChannelCounterEntry.setStatus('current')
rdnIfCmtsUpChCtrReqNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 28, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsUpChCtrReqNoise.setStatus('current')
rdnIfCmtsUpChCtrReqNoEnergy = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 28, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsUpChCtrReqNoEnergy.setStatus('current')
rdnIfCmtsUpChCtrExtReqNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 28, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsUpChCtrExtReqNoise.setStatus('current')
rdnIfCmtsUpChCtrExtReqNoEnergy = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 2, 2, 28, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnIfCmtsUpChCtrExtReqNoEnergy.setStatus('current')
mibBuilder.exportSymbols("RDN-CMTS-MIB", rdnCmtsUpstreamIfLinkDownTrap=rdnCmtsUpstreamIfLinkDownTrap, rdnCableUgsAvFlowsLastFiveMinutes=rdnCableUgsAvFlowsLastFiveMinutes, rdnCableInterceptSourceIp=rdnCableInterceptSourceIp, rdnIfCmtsUpChCtrReqNoEnergy=rdnIfCmtsUpChCtrReqNoEnergy, rdnCmtsUpstreamChannelTable=rdnCmtsUpstreamChannelTable, rdnServiceClassStatsTotalBytes=rdnServiceClassStatsTotalBytes, rdnCableUgsMaxFlowsLastFiveMinutes=rdnCableUgsMaxFlowsLastFiveMinutes, rdnCmtsUpChannelCounterEntry=rdnCmtsUpChannelCounterEntry, rdnIfCmtsUpChCtrExtReqNoise=rdnIfCmtsUpChCtrExtReqNoise, rdnIfCmtsUpChCtrExtReqNoEnergy=rdnIfCmtsUpChCtrExtReqNoEnergy, rdnServiceClassStatsPort=rdnServiceClassStatsPort, rdnCableInterceptDestination3Ip=rdnCableInterceptDestination3Ip, rdnRQueryPollDoneNotification=rdnRQueryPollDoneNotification, rdnCableInterceptDestination2Ip=rdnCableInterceptDestination2Ip, rdnIfCmtsCmStatusTxUnicastExtKbytes=rdnIfCmtsCmStatusTxUnicastExtKbytes, rdnServiceClassBondingDeferredFlows=rdnServiceClassBondingDeferredFlows, rdnCableInterceptDestination2Type=rdnCableInterceptDestination2Type, rdnCmtsUSOfflineModemCount=rdnCmtsUSOfflineModemCount, rdnRQueryCmtsCmStatusExtTable=rdnRQueryCmtsCmStatusExtTable, rdnServiceClassStatsIfDirection=rdnServiceClassStatsIfDirection, rdnCmtsMibGroups=rdnCmtsMibGroups, rdnCmtsMiscObjects=rdnCmtsMiscObjects, rdnIfCmtsCmEntry=rdnIfCmtsCmEntry, rdnIfCmtsCmStatusTable=rdnIfCmtsCmStatusTable, rdnCmtsMibConformance=rdnCmtsMibConformance, rdnServiceClassBondingStatsIfDirection=rdnServiceClassBondingStatsIfDirection, rdnCmToCpeIPv6Addr=rdnCmToCpeIPv6Addr, rdnCmToCpeIpAddress=rdnCmToCpeIpAddress, rdnCmtsCmResetByIpv6Addr=rdnCmtsCmResetByIpv6Addr, rdnCmtsCmResetAll=rdnCmtsCmResetAll, rdnCableUgsAvFlowsLastWindow=rdnCableUgsAvFlowsLastWindow, rdnRQueryCmtsCmStatusEntry=rdnRQueryCmtsCmStatusEntry, rdnCableInterceptDestination3Type=rdnCableInterceptDestination3Type, rdnIfCmtsMTAOnlyStatusDocsisRegMode=rdnIfCmtsMTAOnlyStatusDocsisRegMode, rdnIfCmtsMTAOnlyStatusEntry=rdnIfCmtsMTAOnlyStatusEntry, rdnCmtsStpEnable=rdnCmtsStpEnable, rdnRQueryServerConfigFile=rdnRQueryServerConfigFile, rdnIfCmtsMTAOnlyStatusEqualizationData=rdnIfCmtsMTAOnlyStatusEqualizationData, rdnIfCmtsMTAOnlyStatusUnerroreds=rdnIfCmtsMTAOnlyStatusUnerroreds, rdnCableInterceptTable=rdnCableInterceptTable, rdnIfCmtsMTAOnlyStatusModulationType=rdnIfCmtsMTAOnlyStatusModulationType, rdnServiceClassBondingStatsTable=rdnServiceClassBondingStatsTable, rdnRQueryLastPollStartTime=rdnRQueryLastPollStartTime, rdnUgsStatsWindow=rdnUgsStatsWindow, rdnIfCmtsCmStatusMinOfflineTime=rdnIfCmtsCmStatusMinOfflineTime, rdnIfCmtsMTAOnlyStatusDownChannelIfIndex=rdnIfCmtsMTAOnlyStatusDownChannelIfIndex, rdnRQuerySigQSignalNoise=rdnRQuerySigQSignalNoise, rdnServiceClassStatsEntry=rdnServiceClassStatsEntry, rdnIfCmtsCmStatusMaxOnlineTime=rdnIfCmtsCmStatusMaxOnlineTime, rdnCmtsDownstreamChannelEntry=rdnCmtsDownstreamChannelEntry, rdnIfCmtsMTAOnlyStatusExtUnerroreds=rdnIfCmtsMTAOnlyStatusExtUnerroreds, rdnIfCmtsCmStatusAvgOnlineTime=rdnIfCmtsCmStatusAvgOnlineTime, rdnIfCmtsCmStatusSpectrumGroupName=rdnIfCmtsCmStatusSpectrumGroupName, rdnCmtsUSTotalModemCount=rdnCmtsUSTotalModemCount, rdnRQueryCmStatusTxPower=rdnRQueryCmStatusTxPower, rdnCmtsSaveConfig=rdnCmtsSaveConfig, rdnCmtsServiceClassName=rdnCmtsServiceClassName, rdnServiceClassBondingRestrictedFlows=rdnServiceClassBondingRestrictedFlows, rdnCmtsCpeMac=rdnCmtsCpeMac, rdnCmtsModemAgingTimer=rdnCmtsModemAgingTimer, rdnCmtsCmResetByIpAddr=rdnCmtsCmResetByIpAddr, rdnIfCmtsMTAOnlyStatusValueLastUpdate=rdnIfCmtsMTAOnlyStatusValueLastUpdate, rdnServiceClassBondingCurrentTotalFlows=rdnServiceClassBondingCurrentTotalFlows, rdnCmtsUpChannelCounterTable=rdnCmtsUpChannelCounterTable, rdnCmtsMib=rdnCmtsMib, rdnCmtsCmDeregisteredNotification=rdnCmtsCmDeregisteredNotification, rdnCmtsUpstreamChannelEntry=rdnCmtsUpstreamChannelEntry, rdnCmtsServiceClassAdmittedBWThreshold=rdnCmtsServiceClassAdmittedBWThreshold, rdnCableUgsMaxFlowsLastWindow=rdnCableUgsMaxFlowsLastWindow, rdnCmtsMibNotifications=rdnCmtsMibNotifications, rdnServiceClassStatsTable=rdnServiceClassStatsTable, rdnRQuerySwCurrentVers=rdnRQuerySwCurrentVers, rdnRQueryPollTime=rdnRQueryPollTime, rdnCableInterceptPktCnt=rdnCableInterceptPktCnt, rdnCmToCpeIndex=rdnCmToCpeIndex, rdnServiceClassBandWidth=rdnServiceClassBandWidth, rdnServiceClassRestrictedFlows=rdnServiceClassRestrictedFlows, rdnIfCmtsCmTable=rdnIfCmtsCmTable, rdnIfCmtsCmStatusValue=rdnIfCmtsCmStatusValue, rdnServiceClassBondingStatsSlot=rdnServiceClassBondingStatsSlot, rdnCmtsIfObjects=rdnCmtsIfObjects, rdnCmtsServiceClassCap=rdnCmtsServiceClassCap, rdnCmToCpeEntry=rdnCmToCpeEntry, rdnIfCmtsMTAOnlyStatusRxPower=rdnIfCmtsMTAOnlyStatusRxPower, rdnCmtsHostAuthControl=rdnCmtsHostAuthControl, rdnCableInterceptAccessPermitted=rdnCableInterceptAccessPermitted, rdnIfCmtsUpChCtrReqNoise=rdnIfCmtsUpChCtrReqNoise, rdnCmtsStpTCNEnable=rdnCmtsStpTCNEnable, rdnPktDQoSAdmittedBwThresholdTrap=rdnPktDQoSAdmittedBwThresholdTrap, rdnCmtsCmMac=rdnCmtsCmMac, rdnCableInterceptSourceType=rdnCableInterceptSourceType, PYSNMP_MODULE_ID=rdnCmtsMib, rdnCmtsLinkUpDownTrapEnableTable=rdnCmtsLinkUpDownTrapEnableTable, rdnIfCmtsMTAOnlyStatusTimingOffset=rdnIfCmtsMTAOnlyStatusTimingOffset, rdnIfCmtsMTAOnlyStatusMicroreflections=rdnIfCmtsMTAOnlyStatusMicroreflections, rdnModemRegIndex=rdnModemRegIndex, rdnIfCmtsCmStatusRxUnicastKbytes=rdnIfCmtsCmStatusRxUnicastKbytes, rdnIfCmtsCmStatusDownStreamPort=rdnIfCmtsCmStatusDownStreamPort, rdnServiceClassCurrentTotalFlows=rdnServiceClassCurrentTotalFlows, rdnCmtsNotificationsGroup=rdnCmtsNotificationsGroup, rdnCmtsUSNominalRxPower=rdnCmtsUSNominalRxPower, rdnIfCmtsMTAOnlyStatusInetAddressType=rdnIfCmtsMTAOnlyStatusInetAddressType, rdnCmtsLinkUpDownTrapEnable=rdnCmtsLinkUpDownTrapEnable, rdnCmtsMibCompliance=rdnCmtsMibCompliance, rdnIfCmtsMTAOnlyStatusIndex=rdnIfCmtsMTAOnlyStatusIndex, rdnCableInterceptCpeMac=rdnCableInterceptCpeMac, rdnServiceClassResetStats=rdnServiceClassResetStats, rdnIfCmtsCmCurrCpeNumber=rdnIfCmtsCmCurrCpeNumber, rdnCmtsIfGroup=rdnCmtsIfGroup, rdnCableInterceptDestination1Port=rdnCableInterceptDestination1Port, rdnCmtsLinkUpDownTrapEnableEntry=rdnCmtsLinkUpDownTrapEnableEntry, rdnCmtsUSRangingResponseControl=rdnCmtsUSRangingResponseControl, rdnServiceClassBondingStatsMacIfIndex=rdnServiceClassBondingStatsMacIfIndex, rdnCmtsUpstreamIfLinkUpTrap=rdnCmtsUpstreamIfLinkUpTrap, rdnCableInterceptDestination1Type=rdnCableInterceptDestination1Type, rdnIfCmtsMTAOnlyStatusCorrecteds=rdnIfCmtsMTAOnlyStatusCorrecteds, rdnServiceClassBondingStatsGroupId=rdnServiceClassBondingStatsGroupId, rdnCmtsServiceClassObjects=rdnCmtsServiceClassObjects, rdnCmtsMibNotificationObjects=rdnCmtsMibNotificationObjects, rdnCmtsCardType=rdnCmtsCardType, rdnCmtsCompliances=rdnCmtsCompliances, rdnCmtsCmRegisteredTrapEnable=rdnCmtsCmRegisteredTrapEnable, rdnCmToCpeMacAddress=rdnCmToCpeMacAddress, rdnIfCmtsCmStatusRegistrationTime=rdnIfCmtsCmStatusRegistrationTime, rdnIfCmtsCmStatusRxUnicastExtKbytes=rdnIfCmtsCmStatusRxUnicastExtKbytes, rdnCmtsCmResetByMacAddr=rdnCmtsCmResetByMacAddr, rdnIfCmtsCmStatusOnlineTimes=rdnIfCmtsCmStatusOnlineTimes, rdnIfCmtsCmStatusTxUnicastKbytes=rdnIfCmtsCmStatusTxUnicastKbytes, rdnIfCmtsCmStatusPercentOnline=rdnIfCmtsCmStatusPercentOnline, rdnIfCmtsCmStatusAvgOfflineTime=rdnIfCmtsCmStatusAvgOfflineTime, rdnCableUgsStatsTable=rdnCableUgsStatsTable, rdnCableInterceptDestination1Ip=rdnCableInterceptDestination1Ip, rdnIfCmtsMTAOnlyStatusSignalNoise=rdnIfCmtsMTAOnlyStatusSignalNoise, rdnCableInterceptDestination3Port=rdnCableInterceptDestination3Port, rdnRQueryUpChannelTxTimingOffset=rdnRQueryUpChannelTxTimingOffset, rdnPktDQoSAdmittedBwThresholdReason=rdnPktDQoSAdmittedBwThresholdReason, rdnCableInterceptDestination2Port=rdnCableInterceptDestination2Port, rdnCmtsUSRegisteredModemCount=rdnCmtsUSRegisteredModemCount, rdnCmtsCpeToCmTable=rdnCmtsCpeToCmTable, rdnIfCmtsMTAOnlyStatusUpChannelIfIndex=rdnIfCmtsMTAOnlyStatusUpChannelIfIndex, rdnCmtsMiscGroup=rdnCmtsMiscGroup, rdnRQueryCmtsCmStatusExtEntry=rdnRQueryCmtsCmStatusExtEntry, rdnCableInterceptEntry=rdnCableInterceptEntry, rdnCableUgsStatsPort=rdnCableUgsStatsPort, rdnCableInterceptRowStatus=rdnCableInterceptRowStatus, rdnCmtsServiceClassTable=rdnCmtsServiceClassTable, rdnCableInterceptByteCnt=rdnCableInterceptByteCnt, rdnCmtsUSNominalRxPowerMode=rdnCmtsUSNominalRxPowerMode, rdnIfCmtsCmStatusMinOnlineTime=rdnIfCmtsCmStatusMinOnlineTime, rdnCmtsCpeToCmEntry=rdnCmtsCpeToCmEntry, rdnCableUgsMinFlowsLastWindow=rdnCableUgsMinFlowsLastWindow, rdnServiceClassBondingRejectedFlows=rdnServiceClassBondingRejectedFlows, rdnIfCmtsMTAOnlyStatusIpAddress=rdnIfCmtsMTAOnlyStatusIpAddress, rdnCmtsUSInvitedRangingInterval=rdnCmtsUSInvitedRangingInterval, rdnIfCmtsCmStatusUpstreamPort=rdnIfCmtsCmStatusUpstreamPort, rdnIfCmtsCmStatusMaxOfflineTime=rdnIfCmtsCmStatusMaxOfflineTime, rdnIfCmtsMTAOnlyStatusExtUncorrectables=rdnIfCmtsMTAOnlyStatusExtUncorrectables, rdnServiceClassBondingBandWidth=rdnServiceClassBondingBandWidth, rdnCableUgsStatsSlot=rdnCableUgsStatsSlot, rdnCableUgsResetStats=rdnCableUgsResetStats, rdnModemDeregReason=rdnModemDeregReason, rdnServiceClassStatsTotalPackets=rdnServiceClassStatsTotalPackets, rdnServiceClassStatsSlot=rdnServiceClassStatsSlot, rdnRQueryCmtsCmStatusTable=rdnRQueryCmtsCmStatusTable, rdnRQueryCmtsCmDownChannelPower=rdnRQueryCmtsCmDownChannelPower, rdnCableInterceptCmMac=rdnCableInterceptCmMac, rdnIfCmtsCmStatusDSBondingGroupId=rdnIfCmtsCmStatusDSBondingGroupId, rdnCmToCpeTable=rdnCmToCpeTable, rdnIfCmtsMTAOnlyStatusValue=rdnIfCmtsMTAOnlyStatusValue, rdnServiceClassRejectedFlows=rdnServiceClassRejectedFlows, rdnIfCmtsMTAOnlyStatusInetAddress=rdnIfCmtsMTAOnlyStatusInetAddress, rdnCableInterceptScalars=rdnCableInterceptScalars, rdnCableUgsCurrentTotalFlows=rdnCableUgsCurrentTotalFlows, rdnServiceClassBondingStatsChan=rdnServiceClassBondingStatsChan, rdnServiceClassBondingStatsEntry=rdnServiceClassBondingStatsEntry, rdnCmtsServiceClassMab=rdnCmtsServiceClassMab, rdnIfCmtsCmMaxCpeNumber=rdnIfCmtsCmMaxCpeNumber, rdnCmtsDownstreamChannelTable=rdnCmtsDownstreamChannelTable, rdnServiceClassDeferredFlows=rdnServiceClassDeferredFlows, rdnIfCmtsMTAOnlyStatusExtCorrecteds=rdnIfCmtsMTAOnlyStatusExtCorrecteds, rdnIfCmtsMTAOnlyStatusTable=rdnIfCmtsMTAOnlyStatusTable, rdnRQuerySigQMicroreflections=rdnRQuerySigQMicroreflections, rdnCmtsUSRangingPowerOverride=rdnCmtsUSRangingPowerOverride, rdnCmtsUSUnregisteredModemCount=rdnCmtsUSUnregisteredModemCount, rdnCmtsCpeToCmObject=rdnCmtsCpeToCmObject, rdnCmtsCmRegisteredNotification=rdnCmtsCmRegisteredNotification, rdnIfCmtsMTAOnlyStatusUncorrectables=rdnIfCmtsMTAOnlyStatusUncorrectables, rdnCmtsServiceClassAllowShare=rdnCmtsServiceClassAllowShare, rdnCmtsServiceClassEntry=rdnCmtsServiceClassEntry, rdnIfCmtsMTAOnlyStatusMacAddress=rdnIfCmtsMTAOnlyStatusMacAddress, rdnIfCmtsCmStatusEntry=rdnIfCmtsCmStatusEntry, rdnCableUgsMinFlowsLastFiveMinutes=rdnCableUgsMinFlowsLastFiveMinutes, rdnCmtsServiceClassSchedulingPriority=rdnCmtsServiceClassSchedulingPriority, rdnRQueryLastPollStopTime=rdnRQueryLastPollStopTime, rdnCmtsDSModulation=rdnCmtsDSModulation, rdnCmtsStpObjects=rdnCmtsStpObjects, rdnCableUgsStatsEntry=rdnCableUgsStatsEntry, rdnCmtsMibNotificationPrefix=rdnCmtsMibNotificationPrefix)
