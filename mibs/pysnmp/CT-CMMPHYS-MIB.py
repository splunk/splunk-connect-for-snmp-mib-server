#
# PySNMP MIB module CT-CMMPHYS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CT-CMMPHYS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:12:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
mBusBoardID, = mibBuilder.importSymbols("CT-HSIMPHYS-MIB", "mBusBoardID")
ctCMM, = mibBuilder.importSymbols("CTRON-MIB-NAMES", "ctCMM")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, IpAddress, NotificationType, iso, ModuleIdentity, MibIdentifier, Unsigned32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks, ObjectIdentity, Integer32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "NotificationType", "iso", "ModuleIdentity", "MibIdentifier", "Unsigned32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks", "ObjectIdentity", "Integer32", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cmmModemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1))
cmmBoardTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1), )
if mibBuilder.loadTexts: cmmBoardTable.setStatus('mandatory')
cmmBoardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1), ).setIndexNames((0, "CT-HSIMPHYS-MIB", "mBusBoardID"))
if mibBuilder.loadTexts: cmmBoardEntry.setStatus('mandatory')
cmmBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 1), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmBoardType.setStatus('mandatory')
cmmNumModules = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmNumModules.setStatus('mandatory')
cmmModuleNumModems = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmModuleNumModems.setStatus('mandatory')
cmmTFTPServer = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmTFTPServer.setStatus('mandatory')
cmmUpgradePath = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmUpgradePath.setStatus('mandatory')
cmmUpgradeFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmUpgradeFlag.setStatus('mandatory')
cmmCommitFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmCommitFlag.setStatus('mandatory')
cmmModemResetLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmModemResetLimit.setStatus('mandatory')
cmmModemResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmModemResetTime.setStatus('mandatory')
cmmOutgoingInactivityTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmOutgoingInactivityTimeout.setStatus('mandatory')
cmmIncomingInactivityTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmIncomingInactivityTimeout.setStatus('mandatory')
cmmAsyncBaseOrigATCmdStr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmAsyncBaseOrigATCmdStr.setStatus('mandatory')
cmmAsyncBaseAnswerATCmdStr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmAsyncBaseAnswerATCmdStr.setStatus('mandatory')
cmmAsyncOrigStrModifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmAsyncOrigStrModifier.setStatus('mandatory')
cmmAsyncAnswerStrModifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmAsyncAnswerStrModifier.setStatus('mandatory')
cmmAsyncOperOrigATCmdStr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmAsyncOperOrigATCmdStr.setStatus('mandatory')
cmmAsyncOperAnswerATCmdStr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmAsyncOperAnswerATCmdStr.setStatus('mandatory')
cmmHdlcBaseOrigATCmdStr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmHdlcBaseOrigATCmdStr.setStatus('mandatory')
cmmHdlcBaseAnswerATCmdStr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmHdlcBaseAnswerATCmdStr.setStatus('mandatory')
cmmHdlcOrigStrModifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmHdlcOrigStrModifier.setStatus('mandatory')
cmmHdlcAnswerStrModifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmHdlcAnswerStrModifier.setStatus('mandatory')
cmmHdlcOperOrigATCmdStr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmHdlcOperOrigATCmdStr.setStatus('mandatory')
cmmHdlcOperAnswerATCmdStr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmHdlcOperAnswerATCmdStr.setStatus('mandatory')
cmmBoardAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("down", 1), ("leave-service", 2), ("up", 3), ("upgrade", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmBoardAdminStatus.setStatus('mandatory')
cmmBoardOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("initializing", 1), ("active", 2), ("leaving-service", 3), ("out-of-service", 4), ("faulty", 5), ("impaired", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmBoardOperStatus.setStatus('mandatory')
cmmModuleTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 2), )
if mibBuilder.loadTexts: cmmModuleTable.setStatus('mandatory')
cmmModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 2, 1), ).setIndexNames((0, "CT-HSIMPHYS-MIB", "mBusBoardID"), (0, "CT-CMMPHYS-MIB", "cmmModuleID"))
if mibBuilder.loadTexts: cmmModuleEntry.setStatus('mandatory')
cmmModuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmModuleID.setStatus('mandatory')
cmmDpramSize = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmDpramSize.setStatus('mandatory')
cmmSdramSize = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmSdramSize.setStatus('mandatory')
cmmCpuType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("hitachish3", 2), ("hitachish4", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmCpuType.setStatus('mandatory')
cmmCpuSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmCpuSpeed.setStatus('mandatory')
cmmCpuFwRev = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmCpuFwRev.setStatus('mandatory')
cmmEpldId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmEpldId.setStatus('mandatory')
cmmEpldRev = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmEpldRev.setStatus('mandatory')
cmmNumBadModems = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmNumBadModems.setStatus('mandatory')
cmmModuleAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("down", 1), ("leave-service", 2), ("up", 3), ("run-diagnostics", 4), ("reset", 5), ("faulty", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmModuleAdminStatus.setStatus('mandatory')
cmmModuleOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("initializing", 1), ("active", 2), ("leaving-service", 3), ("out-of-service", 4), ("faulty", 5), ("impaired", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmModuleOperStatus.setStatus('mandatory')
cmmModemTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3), )
if mibBuilder.loadTexts: cmmModemTable.setStatus('mandatory')
cmmModemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cmmModemEntry.setStatus('mandatory')
cmmBoardID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmBoardID.setStatus('mandatory')
cmmModemID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmModemID.setStatus('mandatory')
cmmIFNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmIFNum.setStatus('mandatory')
cmmSessionNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmSessionNum.setStatus('mandatory')
cmmDdpPartNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmDdpPartNum.setStatus('mandatory')
cmmDdpRevLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmDdpRevLevel.setStatus('mandatory')
cmmDdpFwRev = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmDdpFwRev.setStatus('mandatory')
cmmDDPInterrupts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmDDPInterrupts.setStatus('mandatory')
cmmRxFlowCtlEvts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmRxFlowCtlEvts.setStatus('mandatory')
cmmTxFlowCtlEvts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmTxFlowCtlEvts.setStatus('mandatory')
cmmCallStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("idle", 1), ("connected", 2), ("retraining", 3), ("dropping", 4), ("local-test", 5), ("remote-test", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmCallStatus.setStatus('mandatory')
cmmCallOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("answer", 1), ("originate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmCallOrigin.setStatus('mandatory')
cmmRobbedBitDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmRobbedBitDetected.setStatus('mandatory')
cmmCorrectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("no-ec", 1), ("detection", 2), ("mnp", 3), ("hanging-up", 4), ("speed-matching", 5), ("lapm", 6), ("mnp10", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmCorrectionType.setStatus('mandatory')
cmmCompressionType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("mnp-class-5", 2), ("v42bis-tx-only", 3), ("v42bis-rx-only", 4), ("v42bis", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmCompressionType.setStatus('mandatory')
cmmRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmRxRate.setStatus('mandatory')
cmmTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmTxRate.setStatus('mandatory')
cmmEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("u-law", 1), ("a-law", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmEncoding.setStatus('mandatory')
cmmFraming = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pseudo-framing", 1), ("hdlc-framing", 2), ("ppp-async", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmFraming.setStatus('mandatory')
cmmInitialConnectRate = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmInitialConnectRate.setStatus('mandatory')
cmmMaxHostWindows = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmMaxHostWindows.setStatus('mandatory')
cmmMaxCmmWindows = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmMaxCmmWindows.setStatus('mandatory')
cmmNumOutHostAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmNumOutHostAcks.setStatus('mandatory')
cmmNumOutCmmAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmNumOutCmmAcks.setStatus('mandatory')
cmmToNetworkOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmToNetworkOctets.setStatus('mandatory')
cmmFromNetworkOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmFromNetworkOctets.setStatus('mandatory')
cmmToHostOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmToHostOctets.setStatus('mandatory')
cmmFromHostOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmFromHostOctets.setStatus('mandatory')
cmmToNetworkFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmToNetworkFrames.setStatus('mandatory')
cmmFromNetworkFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmFromNetworkFrames.setStatus('mandatory')
cmmOversizeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmOversizeFrames.setStatus('mandatory')
cmmOverrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmOverrunErrors.setStatus('mandatory')
cmmCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmCRCErrors.setStatus('mandatory')
cmmAbortedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmAbortedFrames.setStatus('mandatory')
cmmRetrainEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmRetrainEvents.setStatus('mandatory')
cmmARAEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmARAEvents.setStatus('mandatory')
cmmARAFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmARAFlag.setStatus('mandatory')
cmmCarrierLossEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmCarrierLossEvents.setStatus('mandatory')
cmmCarrierLossFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmCarrierLossFlag.setStatus('mandatory')
cmmRcvSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmRcvSignalLevel.setStatus('mandatory')
cmmRcvSignalEQM = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmRcvSignalEQM.setStatus('mandatory')
cmmTDMSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmTDMSlot.setStatus('mandatory')
cmmResetModemStats = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmResetModemStats.setStatus('mandatory')
cmmModemAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("down", 1), ("leave-service", 2), ("up", 3), ("run-diagnostics", 4), ("reset", 5), ("faulty", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmModemAdminStatus.setStatus('mandatory')
cmmModemOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 3, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("initializing", 1), ("idle", 2), ("active", 3), ("leaving-service", 4), ("out-of-service", 5), ("testing", 6), ("faulty", 7), ("resetting", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmModemOperStatus.setStatus('mandatory')
cmmFreeFormAtCmdGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 5))
cmmATCommand = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 5, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmATCommand.setStatus('mandatory')
cmmSelectedModem = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmSelectedModem.setStatus('mandatory')
cmmATCmdStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sending", 1), ("not-sending", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmATCmdStatus.setStatus('mandatory')
cmmATCmdResult = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 18, 1, 5, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmATCmdResult.setStatus('mandatory')
mibBuilder.exportSymbols("CT-CMMPHYS-MIB", cmmTDMSlot=cmmTDMSlot, cmmRobbedBitDetected=cmmRobbedBitDetected, cmmModuleID=cmmModuleID, cmmTxFlowCtlEvts=cmmTxFlowCtlEvts, cmmMaxHostWindows=cmmMaxHostWindows, cmmATCmdStatus=cmmATCmdStatus, cmmAsyncOperAnswerATCmdStr=cmmAsyncOperAnswerATCmdStr, cmmToNetworkOctets=cmmToNetworkOctets, cmmModuleOperStatus=cmmModuleOperStatus, cmmAbortedFrames=cmmAbortedFrames, cmmAsyncAnswerStrModifier=cmmAsyncAnswerStrModifier, cmmFromNetworkOctets=cmmFromNetworkOctets, cmmModemResetLimit=cmmModemResetLimit, cmmDDPInterrupts=cmmDDPInterrupts, cmmFromHostOctets=cmmFromHostOctets, cmmSessionNum=cmmSessionNum, cmmCorrectionType=cmmCorrectionType, cmmDdpFwRev=cmmDdpFwRev, cmmATCmdResult=cmmATCmdResult, cmmOversizeFrames=cmmOversizeFrames, cmmModemResetTime=cmmModemResetTime, cmmBoardID=cmmBoardID, cmmCpuType=cmmCpuType, cmmUpgradeFlag=cmmUpgradeFlag, cmmAsyncOperOrigATCmdStr=cmmAsyncOperOrigATCmdStr, cmmToHostOctets=cmmToHostOctets, cmmEpldRev=cmmEpldRev, cmmCallStatus=cmmCallStatus, cmmFraming=cmmFraming, cmmResetModemStats=cmmResetModemStats, cmmModemInfo=cmmModemInfo, cmmARAEvents=cmmARAEvents, cmmAsyncBaseAnswerATCmdStr=cmmAsyncBaseAnswerATCmdStr, cmmATCommand=cmmATCommand, cmmMaxCmmWindows=cmmMaxCmmWindows, cmmHdlcOrigStrModifier=cmmHdlcOrigStrModifier, cmmRcvSignalLevel=cmmRcvSignalLevel, cmmDpramSize=cmmDpramSize, cmmBoardEntry=cmmBoardEntry, cmmRetrainEvents=cmmRetrainEvents, cmmBoardType=cmmBoardType, cmmFromNetworkFrames=cmmFromNetworkFrames, cmmEpldId=cmmEpldId, cmmCpuSpeed=cmmCpuSpeed, cmmModuleNumModems=cmmModuleNumModems, cmmToNetworkFrames=cmmToNetworkFrames, cmmEncoding=cmmEncoding, cmmTFTPServer=cmmTFTPServer, cmmIFNum=cmmIFNum, cmmInitialConnectRate=cmmInitialConnectRate, cmmHdlcAnswerStrModifier=cmmHdlcAnswerStrModifier, cmmModuleEntry=cmmModuleEntry, cmmModuleTable=cmmModuleTable, cmmRxRate=cmmRxRate, cmmHdlcBaseOrigATCmdStr=cmmHdlcBaseOrigATCmdStr, cmmNumBadModems=cmmNumBadModems, cmmNumModules=cmmNumModules, cmmCompressionType=cmmCompressionType, cmmAsyncOrigStrModifier=cmmAsyncOrigStrModifier, cmmRxFlowCtlEvts=cmmRxFlowCtlEvts, cmmFreeFormAtCmdGroup=cmmFreeFormAtCmdGroup, cmmModemAdminStatus=cmmModemAdminStatus, cmmSelectedModem=cmmSelectedModem, cmmModuleAdminStatus=cmmModuleAdminStatus, cmmSdramSize=cmmSdramSize, cmmARAFlag=cmmARAFlag, cmmUpgradePath=cmmUpgradePath, cmmOverrunErrors=cmmOverrunErrors, cmmRcvSignalEQM=cmmRcvSignalEQM, cmmModemOperStatus=cmmModemOperStatus, cmmHdlcBaseAnswerATCmdStr=cmmHdlcBaseAnswerATCmdStr, cmmCommitFlag=cmmCommitFlag, cmmHdlcOperOrigATCmdStr=cmmHdlcOperOrigATCmdStr, cmmBoardAdminStatus=cmmBoardAdminStatus, cmmModemEntry=cmmModemEntry, cmmBoardTable=cmmBoardTable, cmmOutgoingInactivityTimeout=cmmOutgoingInactivityTimeout, cmmHdlcOperAnswerATCmdStr=cmmHdlcOperAnswerATCmdStr, cmmCRCErrors=cmmCRCErrors, cmmModemID=cmmModemID, cmmAsyncBaseOrigATCmdStr=cmmAsyncBaseOrigATCmdStr, cmmIncomingInactivityTimeout=cmmIncomingInactivityTimeout, cmmDdpRevLevel=cmmDdpRevLevel, cmmBoardOperStatus=cmmBoardOperStatus, cmmTxRate=cmmTxRate, cmmCarrierLossEvents=cmmCarrierLossEvents, cmmCallOrigin=cmmCallOrigin, cmmCarrierLossFlag=cmmCarrierLossFlag, cmmModemTable=cmmModemTable, cmmDdpPartNum=cmmDdpPartNum, cmmCpuFwRev=cmmCpuFwRev, cmmNumOutCmmAcks=cmmNumOutCmmAcks, cmmNumOutHostAcks=cmmNumOutHostAcks)
