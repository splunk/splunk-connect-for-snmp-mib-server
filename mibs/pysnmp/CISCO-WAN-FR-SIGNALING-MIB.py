#
# PySNMP MIB module CISCO-WAN-FR-SIGNALING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-WAN-FR-SIGNALING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:04:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
frPortCnfSig, frPortCntSig = mibBuilder.importSymbols("BASIS-MIB", "frPortCnfSig", "frPortCntSig")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32, Counter32, NotificationType, Bits, Counter64, IpAddress, iso, MibIdentifier, ObjectIdentity, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32", "Counter32", "NotificationType", "Bits", "Counter64", "IpAddress", "iso", "MibIdentifier", "ObjectIdentity", "Integer32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoWanFrSignalingMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 46))
ciscoWanFrSignalingMIB.setRevisions(('2003-03-24 00:00', '2002-09-04 00:00',))
if mibBuilder.loadTexts: ciscoWanFrSignalingMIB.setLastUpdated('200303240000Z')
if mibBuilder.loadTexts: ciscoWanFrSignalingMIB.setOrganization('Cisco Systems, Inc.')
frPortCnfSigLMIGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 1))
frPortCnfSigLMIGrpTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 1, 1), )
if mibBuilder.loadTexts: frPortCnfSigLMIGrpTable.setStatus('current')
frPortCnfSigLMIGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 1, 1, 1), ).setIndexNames((0, "CISCO-WAN-FR-SIGNALING-MIB", "lmiCnfPortNum"))
if mibBuilder.loadTexts: frPortCnfSigLMIGrpEntry.setStatus('current')
lmiCnfPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lmiCnfPortNum.setStatus('current')
signallingProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("noSignalling", 2), ("strataLMI", 3), ("annexAUNI", 4), ("annexDUNI", 5), ("annexANNI", 6), ("annexDNNI", 7))).clone('noSignalling')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: signallingProtocolType.setStatus('current')
asynchronousUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2), ("fsenable", 3), ("updfsenable", 4))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: asynchronousUpdates.setStatus('current')
t391LinkIntegrityTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: t391LinkIntegrityTimer.setStatus('current')
t392PollingVerificationTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(15)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: t392PollingVerificationTimer.setStatus('current')
n391FullStatusPollingCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setUnits('Polls').setMaxAccess("readwrite")
if mibBuilder.loadTexts: n391FullStatusPollingCounter.setStatus('current')
n392ErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: n392ErrorThreshold.setStatus('current')
n393MonitoredEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setUnits('Events').setMaxAccess("readwrite")
if mibBuilder.loadTexts: n393MonitoredEventCount.setStatus('current')
enhancedLmi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enhancedLmi.setStatus('current')
portFRF1Dot2Support = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portFRF1Dot2Support.setStatus('current')
portLmiSigConfMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("autosense", 2))).clone('manual')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portLmiSigConfMethod.setStatus('current')
frPortCntSigLMIGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 1))
frPortCntSigLMIGrpTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 1, 1), )
if mibBuilder.loadTexts: frPortCntSigLMIGrpTable.setStatus('current')
frPortCntSigLMIGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 1, 1, 1), ).setIndexNames((0, "CISCO-WAN-FR-SIGNALING-MIB", "lmiSigPortNum"))
if mibBuilder.loadTexts: frPortCntSigLMIGrpEntry.setStatus('current')
lmiSigPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lmiSigPortNum.setStatus('current')
rcvStatusInquiry = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rcvStatusInquiry.setStatus('current')
rcvInvalidRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rcvInvalidRequest.setStatus('current')
rcvUNISeqMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rcvUNISeqMismatch.setStatus('current')
xmtStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmtStatus.setStatus('current')
xmtAsynchUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmtAsynchUpdate.setStatus('current')
uniSignalingTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uniSignalingTimeout.setStatus('current')
xmtStatusInquiry = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmtStatusInquiry.setStatus('current')
rcvStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rcvStatus.setStatus('current')
rcvAsynchUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rcvAsynchUpdate.setStatus('current')
rcvNNISeqMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rcvNNISeqMismatch.setStatus('current')
nniSignalingTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nniSignalingTimeout.setStatus('current')
frPortCnfSigCLLMGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 2))
frPortCnfSigCLLMGrpTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 2, 1), )
if mibBuilder.loadTexts: frPortCnfSigCLLMGrpTable.setStatus('current')
frPortCnfSigCLLMGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 2, 1, 1), ).setIndexNames((0, "CISCO-WAN-FR-SIGNALING-MIB", "cllmCnfPortNum"))
if mibBuilder.loadTexts: frPortCnfSigCLLMGrpEntry.setStatus('current')
cllmCnfPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cllmCnfPortNum.setStatus('current')
cllmEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cllmEnable.setStatus('current')
xmtCLLMStatusTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(40, 5000)).clone(40)).setUnits('milli-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: xmtCLLMStatusTimer.setStatus('current')
rcvCLLMStatusTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1000))).clone(namedValues=NamedValues(("rcvCLLMTimerValue", 1000))).clone('rcvCLLMTimerValue')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rcvCLLMStatusTimer.setStatus('current')
frPortCntSigCLLMGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 2))
frPortCntSigCLLMGrpTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 2, 1), )
if mibBuilder.loadTexts: frPortCntSigCLLMGrpTable.setStatus('current')
frPortCntSigCLLMGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 2, 1, 1), ).setIndexNames((0, "CISCO-WAN-FR-SIGNALING-MIB", "cllmSigPortNum"))
if mibBuilder.loadTexts: frPortCntSigCLLMGrpEntry.setStatus('current')
cllmSigPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cllmSigPortNum.setStatus('current')
rcvFramesCLLM = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 2, 1, 1, 2), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: rcvFramesCLLM.setStatus('current')
rcvBytesCLLM = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 2, 1, 1, 3), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rcvBytesCLLM.setStatus('current')
xmtFramesCLLM = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 2, 1, 1, 4), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: xmtFramesCLLM.setStatus('current')
xmtBytesCLLM = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 2, 1, 1, 5), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: xmtBytesCLLM.setStatus('current')
cllmFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cllmFailures.setStatus('current')
cwfSignalingMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 46, 2))
cwfSignalingMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 46, 2, 1))
cwfSignalingMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 46, 2, 2))
cwfSignalingMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 46, 2, 2, 1)).setObjects(("CISCO-WAN-FR-SIGNALING-MIB", "ciscoWanFrLmiConfigGroup"), ("CISCO-WAN-FR-SIGNALING-MIB", "ciscoWanFrLmiStatsGroup"), ("CISCO-WAN-FR-SIGNALING-MIB", "ciscoWanFrCllmGroup"), ("CISCO-WAN-FR-SIGNALING-MIB", "ciscoWanFrCllmStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwfSignalingMIBCompliance = cwfSignalingMIBCompliance.setStatus('current')
ciscoWanFrLmiConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 46, 2, 1, 1)).setObjects(("CISCO-WAN-FR-SIGNALING-MIB", "lmiCnfPortNum"), ("CISCO-WAN-FR-SIGNALING-MIB", "signallingProtocolType"), ("CISCO-WAN-FR-SIGNALING-MIB", "asynchronousUpdates"), ("CISCO-WAN-FR-SIGNALING-MIB", "t391LinkIntegrityTimer"), ("CISCO-WAN-FR-SIGNALING-MIB", "t392PollingVerificationTimer"), ("CISCO-WAN-FR-SIGNALING-MIB", "n391FullStatusPollingCounter"), ("CISCO-WAN-FR-SIGNALING-MIB", "n392ErrorThreshold"), ("CISCO-WAN-FR-SIGNALING-MIB", "n393MonitoredEventCount"), ("CISCO-WAN-FR-SIGNALING-MIB", "enhancedLmi"), ("CISCO-WAN-FR-SIGNALING-MIB", "portFRF1Dot2Support"), ("CISCO-WAN-FR-SIGNALING-MIB", "portLmiSigConfMethod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanFrLmiConfigGroup = ciscoWanFrLmiConfigGroup.setStatus('current')
ciscoWanFrLmiStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 46, 2, 1, 2)).setObjects(("CISCO-WAN-FR-SIGNALING-MIB", "lmiSigPortNum"), ("CISCO-WAN-FR-SIGNALING-MIB", "rcvStatusInquiry"), ("CISCO-WAN-FR-SIGNALING-MIB", "rcvInvalidRequest"), ("CISCO-WAN-FR-SIGNALING-MIB", "rcvUNISeqMismatch"), ("CISCO-WAN-FR-SIGNALING-MIB", "xmtStatus"), ("CISCO-WAN-FR-SIGNALING-MIB", "xmtAsynchUpdate"), ("CISCO-WAN-FR-SIGNALING-MIB", "uniSignalingTimeout"), ("CISCO-WAN-FR-SIGNALING-MIB", "xmtStatusInquiry"), ("CISCO-WAN-FR-SIGNALING-MIB", "rcvStatus"), ("CISCO-WAN-FR-SIGNALING-MIB", "rcvAsynchUpdate"), ("CISCO-WAN-FR-SIGNALING-MIB", "rcvNNISeqMismatch"), ("CISCO-WAN-FR-SIGNALING-MIB", "nniSignalingTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanFrLmiStatsGroup = ciscoWanFrLmiStatsGroup.setStatus('current')
ciscoWanFrCllmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 46, 2, 1, 3)).setObjects(("CISCO-WAN-FR-SIGNALING-MIB", "cllmCnfPortNum"), ("CISCO-WAN-FR-SIGNALING-MIB", "cllmEnable"), ("CISCO-WAN-FR-SIGNALING-MIB", "xmtCLLMStatusTimer"), ("CISCO-WAN-FR-SIGNALING-MIB", "rcvCLLMStatusTimer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanFrCllmGroup = ciscoWanFrCllmGroup.setStatus('current')
ciscoWanFrCllmStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 46, 2, 1, 4)).setObjects(("CISCO-WAN-FR-SIGNALING-MIB", "cllmSigPortNum"), ("CISCO-WAN-FR-SIGNALING-MIB", "rcvFramesCLLM"), ("CISCO-WAN-FR-SIGNALING-MIB", "rcvBytesCLLM"), ("CISCO-WAN-FR-SIGNALING-MIB", "xmtFramesCLLM"), ("CISCO-WAN-FR-SIGNALING-MIB", "xmtBytesCLLM"), ("CISCO-WAN-FR-SIGNALING-MIB", "cllmFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanFrCllmStatsGroup = ciscoWanFrCllmStatsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-WAN-FR-SIGNALING-MIB", frPortCntSigCLLMGrpTable=frPortCntSigCLLMGrpTable, nniSignalingTimeout=nniSignalingTimeout, xmtBytesCLLM=xmtBytesCLLM, rcvAsynchUpdate=rcvAsynchUpdate, lmiSigPortNum=lmiSigPortNum, lmiCnfPortNum=lmiCnfPortNum, frPortCnfSigLMIGrpTable=frPortCnfSigLMIGrpTable, rcvInvalidRequest=rcvInvalidRequest, uniSignalingTimeout=uniSignalingTimeout, frPortCnfSigCLLMGrpEntry=frPortCnfSigCLLMGrpEntry, cllmEnable=cllmEnable, signallingProtocolType=signallingProtocolType, rcvStatusInquiry=rcvStatusInquiry, rcvFramesCLLM=rcvFramesCLLM, ciscoWanFrCllmStatsGroup=ciscoWanFrCllmStatsGroup, PYSNMP_MODULE_ID=ciscoWanFrSignalingMIB, xmtCLLMStatusTimer=xmtCLLMStatusTimer, cwfSignalingMIBGroups=cwfSignalingMIBGroups, t392PollingVerificationTimer=t392PollingVerificationTimer, frPortCntSigLMIGrp=frPortCntSigLMIGrp, xmtStatusInquiry=xmtStatusInquiry, frPortCntSigCLLMGrp=frPortCntSigCLLMGrp, frPortCnfSigCLLMGrp=frPortCnfSigCLLMGrp, asynchronousUpdates=asynchronousUpdates, ciscoWanFrSignalingMIB=ciscoWanFrSignalingMIB, xmtAsynchUpdate=xmtAsynchUpdate, cwfSignalingMIBCompliance=cwfSignalingMIBCompliance, frPortCnfSigLMIGrp=frPortCnfSigLMIGrp, cllmFailures=cllmFailures, rcvUNISeqMismatch=rcvUNISeqMismatch, ciscoWanFrLmiConfigGroup=ciscoWanFrLmiConfigGroup, rcvNNISeqMismatch=rcvNNISeqMismatch, n392ErrorThreshold=n392ErrorThreshold, cllmCnfPortNum=cllmCnfPortNum, t391LinkIntegrityTimer=t391LinkIntegrityTimer, ciscoWanFrLmiStatsGroup=ciscoWanFrLmiStatsGroup, frPortCnfSigCLLMGrpTable=frPortCnfSigCLLMGrpTable, ciscoWanFrCllmGroup=ciscoWanFrCllmGroup, n391FullStatusPollingCounter=n391FullStatusPollingCounter, portFRF1Dot2Support=portFRF1Dot2Support, xmtStatus=xmtStatus, portLmiSigConfMethod=portLmiSigConfMethod, rcvCLLMStatusTimer=rcvCLLMStatusTimer, xmtFramesCLLM=xmtFramesCLLM, enhancedLmi=enhancedLmi, frPortCntSigLMIGrpEntry=frPortCntSigLMIGrpEntry, cllmSigPortNum=cllmSigPortNum, rcvBytesCLLM=rcvBytesCLLM, frPortCnfSigLMIGrpEntry=frPortCnfSigLMIGrpEntry, frPortCntSigCLLMGrpEntry=frPortCntSigCLLMGrpEntry, cwfSignalingMIBConformance=cwfSignalingMIBConformance, cwfSignalingMIBCompliances=cwfSignalingMIBCompliances, n393MonitoredEventCount=n393MonitoredEventCount, frPortCntSigLMIGrpTable=frPortCntSigLMIGrpTable, rcvStatus=rcvStatus)
