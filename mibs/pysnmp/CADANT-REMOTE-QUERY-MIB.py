#
# PySNMP MIB module CADANT-REMOTE-QUERY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CADANT-REMOTE-QUERY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:28:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
cadIfCmtsCmStatusEntry, = mibBuilder.importSymbols("CADANT-CMTS-MAC-MIB", "cadIfCmtsCmStatusEntry")
cadCmRemoteQuery, = mibBuilder.importSymbols("CADANT-PRODUCTS-MIB", "cadCmRemoteQuery")
TenthdBmV, TenthdB = mibBuilder.importSymbols("DOCS-IF-MIB", "TenthdBmV", "TenthdB")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibIdentifier, ModuleIdentity, Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter64, ObjectIdentity, Unsigned32, TimeTicks, IpAddress, Counter32, Gauge32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ModuleIdentity", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter64", "ObjectIdentity", "Unsigned32", "TimeTicks", "IpAddress", "Counter32", "Gauge32", "iso")
MacAddress, TextualConvention, TimeStamp, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "TimeStamp", "TruthValue", "DisplayString")
cadCmRemoteQueryMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1))
cadCmRemoteQueryMib.setRevisions(('2004-08-31 00:00', '2006-09-27 00:00', '2009-01-15 00:00', '2009-01-20 00:00',))
if mibBuilder.loadTexts: cadCmRemoteQueryMib.setLastUpdated('200901200000Z')
if mibBuilder.loadTexts: cadCmRemoteQueryMib.setOrganization('Arris International')
cadCmRemoteQueryPoller = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 1))
cadCmRemoteQueryPollerEnable = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadCmRemoteQueryPollerEnable.setStatus('current')
cadCmRemoteQueryPollerInterval = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 86400)).clone(1800)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadCmRemoteQueryPollerInterval.setStatus('current')
cadCmRemoteQueryPollerStartTime = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 1, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadCmRemoteQueryPollerStartTime.setStatus('current')
cadCmRemoteQueryPollerStopTime = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 1, 4), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadCmRemoteQueryPollerStopTime.setStatus('current')
cadCmRemoteQueryPollerCommunity = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadCmRemoteQueryPollerCommunity.setStatus('current')
cadCmRemoteQueryMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 1, 6), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadCmRemoteQueryMacAddress.setStatus('current')
cadCmRemoteQuerySourceIpAddrType = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 1, 7), InetAddressType().clone('ipv4')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadCmRemoteQuerySourceIpAddrType.setStatus('current')
cadCmRemoteQuerySourceIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 1, 8), InetAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadCmRemoteQuerySourceIpAddr.setStatus('current')
cadCmRemoteQueryStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 2), )
if mibBuilder.loadTexts: cadCmRemoteQueryStatusTable.setStatus('current')
cadCmRemoteQueryStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 2, 1), )
cadIfCmtsCmStatusEntry.registerAugmentions(("CADANT-REMOTE-QUERY-MIB", "cadCmRemoteQueryStatusEntry"))
cadCmRemoteQueryStatusEntry.setIndexNames(*cadIfCmtsCmStatusEntry.getIndexNames())
if mibBuilder.loadTexts: cadCmRemoteQueryStatusEntry.setStatus('current')
cadCmRemoteQueryPollTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 2, 1, 1), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadCmRemoteQueryPollTime.setStatus('current')
cadCmRemoteQueryDownChannelPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 2, 1, 2), TenthdBmV()).setUnits('dBmV').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadCmRemoteQueryDownChannelPower.setStatus('current')
cadCmRemoteQueryStatusTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 2, 1, 3), TenthdBmV()).setUnits('dBmV').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadCmRemoteQueryStatusTxPower.setStatus('current')
cadCmRemoteQueryUpChnlTxTimingOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadCmRemoteQueryUpChnlTxTimingOffset.setStatus('current')
cadCmRemoteQuerySigQSignalNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 2, 1, 5), TenthdB()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadCmRemoteQuerySigQSignalNoise.setStatus('current')
cadCmRemoteQuerySigQMicroreflections = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('dBc').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadCmRemoteQuerySigQMicroreflections.setStatus('current')
cadCmRemoteQuerySysDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadCmRemoteQuerySysDescr.setStatus('current')
cadCmRemoteQueryConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 3))
cadCmRemoteQueryDocsRemoteQueryCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 3, 1))
cadCmRemoteQueryDocsRemoteQueryGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 3, 2))
cadCmRemoteQueryDocsRemoteQueryCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 3, 1, 1)).setObjects(("CADANT-REMOTE-QUERY-MIB", "cadCmRemoteQueryPollerGroup"), ("CADANT-REMOTE-QUERY-MIB", "cadCmRemoteQueryStatusGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cadCmRemoteQueryDocsRemoteQueryCompliance = cadCmRemoteQueryDocsRemoteQueryCompliance.setStatus('current')
cadCmRemoteQueryPollerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 3, 2, 1)).setObjects(("CADANT-REMOTE-QUERY-MIB", "cadCmRemoteQueryPollerEnable"), ("CADANT-REMOTE-QUERY-MIB", "cadCmRemoteQueryPollerInterval"), ("CADANT-REMOTE-QUERY-MIB", "cadCmRemoteQueryPollerStartTime"), ("CADANT-REMOTE-QUERY-MIB", "cadCmRemoteQueryPollerStopTime"), ("CADANT-REMOTE-QUERY-MIB", "cadCmRemoteQueryPollerCommunity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cadCmRemoteQueryPollerGroup = cadCmRemoteQueryPollerGroup.setStatus('current')
cadCmRemoteQueryStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55, 1, 3, 2, 2)).setObjects(("CADANT-REMOTE-QUERY-MIB", "cadCmRemoteQueryPollTime"), ("CADANT-REMOTE-QUERY-MIB", "cadCmRemoteQueryDownChannelPower"), ("CADANT-REMOTE-QUERY-MIB", "cadCmRemoteQueryStatusTxPower"), ("CADANT-REMOTE-QUERY-MIB", "cadCmRemoteQueryUpChnlTxTimingOffset"), ("CADANT-REMOTE-QUERY-MIB", "cadCmRemoteQuerySigQSignalNoise"), ("CADANT-REMOTE-QUERY-MIB", "cadCmRemoteQuerySigQMicroreflections"), ("CADANT-REMOTE-QUERY-MIB", "cadCmRemoteQuerySysDescr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cadCmRemoteQueryStatusGroup = cadCmRemoteQueryStatusGroup.setStatus('current')
mibBuilder.exportSymbols("CADANT-REMOTE-QUERY-MIB", cadCmRemoteQueryMacAddress=cadCmRemoteQueryMacAddress, cadCmRemoteQueryPollerCommunity=cadCmRemoteQueryPollerCommunity, cadCmRemoteQuerySourceIpAddrType=cadCmRemoteQuerySourceIpAddrType, cadCmRemoteQueryPollerInterval=cadCmRemoteQueryPollerInterval, cadCmRemoteQuerySigQMicroreflections=cadCmRemoteQuerySigQMicroreflections, cadCmRemoteQueryPollerEnable=cadCmRemoteQueryPollerEnable, cadCmRemoteQueryPollerStopTime=cadCmRemoteQueryPollerStopTime, cadCmRemoteQuerySourceIpAddr=cadCmRemoteQuerySourceIpAddr, PYSNMP_MODULE_ID=cadCmRemoteQueryMib, cadCmRemoteQuerySysDescr=cadCmRemoteQuerySysDescr, cadCmRemoteQueryDownChannelPower=cadCmRemoteQueryDownChannelPower, cadCmRemoteQueryPoller=cadCmRemoteQueryPoller, cadCmRemoteQueryDocsRemoteQueryCompliances=cadCmRemoteQueryDocsRemoteQueryCompliances, cadCmRemoteQueryDocsRemoteQueryCompliance=cadCmRemoteQueryDocsRemoteQueryCompliance, cadCmRemoteQueryUpChnlTxTimingOffset=cadCmRemoteQueryUpChnlTxTimingOffset, cadCmRemoteQueryDocsRemoteQueryGroups=cadCmRemoteQueryDocsRemoteQueryGroups, cadCmRemoteQueryStatusGroup=cadCmRemoteQueryStatusGroup, cadCmRemoteQueryPollerGroup=cadCmRemoteQueryPollerGroup, cadCmRemoteQueryPollTime=cadCmRemoteQueryPollTime, cadCmRemoteQuerySigQSignalNoise=cadCmRemoteQuerySigQSignalNoise, cadCmRemoteQueryPollerStartTime=cadCmRemoteQueryPollerStartTime, cadCmRemoteQueryStatusTable=cadCmRemoteQueryStatusTable, cadCmRemoteQueryMib=cadCmRemoteQueryMib, cadCmRemoteQueryStatusTxPower=cadCmRemoteQueryStatusTxPower, cadCmRemoteQueryStatusEntry=cadCmRemoteQueryStatusEntry, cadCmRemoteQueryConformance=cadCmRemoteQueryConformance)
