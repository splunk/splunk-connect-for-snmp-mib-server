#
# PySNMP MIB module HH3C-EPON-UNI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-EPON-UNI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:13:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
hh3cEpon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cEpon")
ifDescr, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifDescr", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, TimeTicks, MibIdentifier, iso, ObjectIdentity, NotificationType, Counter64, Integer32, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "TimeTicks", "MibIdentifier", "iso", "ObjectIdentity", "NotificationType", "Counter64", "Integer32", "ModuleIdentity", "Gauge32")
MacAddress, RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
hh3cEponUni = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5))
if mibBuilder.loadTexts: hh3cEponUni.setLastUpdated('200807281743Z')
if mibBuilder.loadTexts: hh3cEponUni.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
hh3cEponUniSysMan = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1))
hh3cEponUniSysManTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1), )
if mibBuilder.loadTexts: hh3cEponUniSysManTable.setStatus('current')
hh3cEponUniSysManEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniIndex"))
if mibBuilder.loadTexts: hh3cEponUniSysManEntry.setStatus('current')
hh3cEponUniIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cEponUniIndex.setStatus('current')
hh3cEponUniDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniDescr.setStatus('current')
hh3cEponUniAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniAdminStatus.setStatus('current')
hh3cEponUniMdi = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mdi-ii", 1), ("mdi-x", 2), ("mdi-auto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniMdi.setStatus('current')
hh3cEponUniPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniPriority.setStatus('current')
hh3cEponUniVlanType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("vlantrunk", 1), ("access", 2), ("hybrid", 3), ("untagged", 4), ("transparent", 5), ("doubletagged", 6), ("tag", 7), ("translation", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniVlanType.setStatus('current')
hh3cEponUniAccessVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniAccessVlan.setStatus('current')
hh3cEponUniTrunkPvid = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniTrunkPvid.setStatus('current')
hh3cEponUniVLANTrunkAllowListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniVLANTrunkAllowListLow.setStatus('current')
hh3cEponUniVLANTrunkAllowListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniVLANTrunkAllowListHigh.setStatus('current')
hh3cEponUniInboundLineRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniInboundLineRate.setStatus('current')
hh3cEponUniOutboundLineRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniOutboundLineRate.setStatus('current')
hh3cEponUniFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniFlowControl.setStatus('current')
hh3cEponUniSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 10, 100, 1000, 10000, 24000))).clone(namedValues=NamedValues(("auto", 0), ("s10M", 10), ("s100M", 100), ("s1000M", 1000), ("s10000M", 10000), ("s24000M", 24000)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniSpeed.setStatus('current')
hh3cEponUniDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("full", 1), ("half", 2), ("auto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniDuplex.setStatus('current')
hh3cEponUniVlanVPNStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniVlanVPNStatus.setStatus('current')
hh3cEponUniCountReset = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniCountReset.setStatus('current')
hh3cEponUniPortIsolate = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniPortIsolate.setStatus('current')
hh3cEponUniVlanConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniVlanConfiguration.setStatus('current')
hh3cEponUniAutoNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniAutoNegotiation.setStatus('current')
hh3cEponUniRestartAutoNeg = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("autoNegotiation", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniRestartAutoNeg.setStatus('current')
hh3cEponUniLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniLinkStatus.setStatus('current')
hh3cEponUniInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("gigabitethernetport", 1), ("fastethernetport", 2), ("voipport", 3), ("e1port", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniInterfaceType.setStatus('current')
hh3cEponUniVitualCableTest = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniVitualCableTest.setStatus('current')
hh3cEponUniVCTCableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("normal", 1), ("abnormal", 2), ("abnormalOpen", 3), ("abnormalShort", 4), ("failure", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniVCTCableStatus.setStatus('current')
hh3cEponUniVCTCableLength = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniVCTCableLength.setStatus('current')
hh3cEponUniVCTImpedanceMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("not-support", 1), ("true", 2), ("false", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniVCTImpedanceMismatch.setStatus('current')
hh3cEponUniVCTPairSkew = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniVCTPairSkew.setStatus('current')
hh3cEponUniVCTPairSwap = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupport", 1), ("true", 2), ("false", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniVCTPairSwap.setStatus('current')
hh3cEponUniVCTPolaritySwap = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupport", 1), ("true", 2), ("false", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniVCTPolaritySwap.setStatus('current')
hh3cEponUniVCTInsertionLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniVCTInsertionLoss.setStatus('current')
hh3cEponUniVCTReturnLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniVCTReturnLoss.setStatus('current')
hh3cEponUniVCTNearendCrosstalk = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 1, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniVCTNearendCrosstalk.setStatus('current')
hh3cEponUniCountTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2), )
if mibBuilder.loadTexts: hh3cEponUniCountTable.setStatus('current')
hh3cEponUniCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniIndex"))
if mibBuilder.loadTexts: hh3cEponUniCountEntry.setStatus('current')
hh3cEponUniInStatsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniInStatsPkts.setStatus('current')
hh3cEponUniInStatsUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniInStatsUnicastPkts.setStatus('current')
hh3cEponUniInStatsBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniInStatsBroadcastPkts.setStatus('current')
hh3cEponUniInStatsMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniInStatsMulticastPkts.setStatus('current')
hh3cEponUniInPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniInPausePkts.setStatus('current')
hh3cEponUniInTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniInTotalErrors.setStatus('current')
hh3cEponUniInStatsCRCAlignErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniInStatsCRCAlignErrors.setStatus('current')
hh3cEponUniInStatsUndersizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniInStatsUndersizePkts.setStatus('current')
hh3cEponUniInStatsOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniInStatsOversizePkts.setStatus('current')
hh3cEponUniInErrorbyOther = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniInErrorbyOther.setStatus('current')
hh3cEponUniOutStatsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniOutStatsPkts.setStatus('current')
hh3cEponUniOutStatsUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniOutStatsUnicastPkts.setStatus('current')
hh3cEponUniOutStatsBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniOutStatsBroadcastPkts.setStatus('current')
hh3cEponUniOutStatsMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniOutStatsMulticastPkts.setStatus('current')
hh3cEponUniOutStatsPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniOutStatsPausePkts.setStatus('current')
hh3cEponUniOutTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniOutTotalErrors.setStatus('current')
hh3cEponUniOutStatsCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniOutStatsCollisions.setStatus('current')
hh3cEponUniOutDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniOutDelayExceededDiscards.setStatus('current')
hh3cEponUniOutErrorbyOther = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniOutErrorbyOther.setStatus('current')
hh3cEponUniOutDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 2, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniOutDroppedFrames.setStatus('current')
hh3cEponUniIgmpInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 3), )
if mibBuilder.loadTexts: hh3cEponUniIgmpInfoTable.setStatus('current')
hh3cEponUniIgmpInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniMacIndex"))
if mibBuilder.loadTexts: hh3cEponUniIgmpInfoEntry.setStatus('current')
hh3cEponUniMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cEponUniMacIndex.setStatus('current')
hh3cEponUniIgmpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniIgmpMacAddress.setStatus('current')
hh3cEponUniIgmpVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniIgmpVlanId.setStatus('current')
hh3cEponUniParaMan = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 4))
hh3cEponUniLineRateMax = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniLineRateMax.setStatus('current')
hh3cEponUniLineRateStep = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniLineRateStep.setStatus('current')
hh3cEponUniNumberOnOnu = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniNumberOnOnu.setStatus('current')
hh3cEponUniScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 5))
hh3cEponUniPortPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 6), )
if mibBuilder.loadTexts: hh3cEponUniPortPolicyTable.setStatus('current')
hh3cEponUniPortPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniIndex"))
if mibBuilder.loadTexts: hh3cEponUniPortPolicyEntry.setStatus('current')
hh3cEponUniPortPolicyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniPortPolicyStatus.setStatus('current')
hh3cEponUniPortPolicyCir = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 6, 1, 2), Integer32().clone(102400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniPortPolicyCir.setStatus('current')
hh3cEponUniPortPolicyBucketDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 6, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniPortPolicyBucketDepth.setStatus('current')
hh3cEponUniPortPolicyExtraBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 6, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniPortPolicyExtraBurst.setStatus('current')
hh3cEponUniPortPolicyInboundCir = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 6, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniPortPolicyInboundCir.setStatus('current')
hh3cEponUniPortPolicyInboundBucketDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 6, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniPortPolicyInboundBucketDepth.setStatus('current')
hh3cEponUniPortPolicyInboundExtraBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 6, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniPortPolicyInboundExtraBurst.setStatus('current')
hh3cEponUniPortPolicyOutboundCir = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 6, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniPortPolicyOutboundCir.setStatus('current')
hh3cEponUniPortPolicyOutboundPir = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 6, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniPortPolicyOutboundPir.setStatus('current')
hh3cEponUniMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 7), )
if mibBuilder.loadTexts: hh3cEponUniMulticastTable.setStatus('current')
hh3cEponUniMulticastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniIndex"))
if mibBuilder.loadTexts: hh3cEponUniMulticastEntry.setStatus('current')
hh3cEponUniMulticastGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 7, 1, 1), Integer32().clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniMulticastGroupNumber.setStatus('current')
hh3cEponUniMulticastVlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniMulticastVlanList.setStatus('current')
hh3cEponUniMulticastStripStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniMulticastStripStatus.setStatus('current')
hh3cEponUniMulticastFastleave = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 7, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniMulticastFastleave.setStatus('current')
hh3cEponUniTechAbilityTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 8), )
if mibBuilder.loadTexts: hh3cEponUniTechAbilityTable.setStatus('current')
hh3cEponUniTechAbilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniIndex"))
if mibBuilder.loadTexts: hh3cEponUniTechAbilityEntry.setStatus('current')
hh3cEponUniLocalTechAbility = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 8, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniLocalTechAbility.setStatus('current')
hh3cEponUniAdvertisedTechAbility = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniAdvertisedTechAbility.setStatus('current')
hh3cEponUniMulticastControlTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 9), )
if mibBuilder.loadTexts: hh3cEponUniMulticastControlTable.setStatus('current')
hh3cEponUniMulticastControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniMulticastIndex"))
if mibBuilder.loadTexts: hh3cEponUniMulticastControlEntry.setStatus('current')
hh3cEponUniMulticastVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 9, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniMulticastVlanIndex.setStatus('current')
hh3cEponUniMulticastAddressList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 9, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniMulticastAddressList.setStatus('current')
hh3cEponUniMulticastAccessRule = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("deny", 1), ("permit", 2), ("preview", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniMulticastAccessRule.setStatus('current')
hh3cEponUniMulticastChannelLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 9, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniMulticastChannelLimit.setStatus('current')
hh3cEponUniMulticastPreTimeSlice = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 9, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniMulticastPreTimeSlice.setStatus('current')
hh3cEponUniMulticastPreTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 9, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniMulticastPreTimes.setStatus('current')
hh3cEponUniMulticastPreInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 9, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniMulticastPreInterval.setStatus('current')
hh3cEponUniMulticastRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 9, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniMulticastRowStatus.setStatus('current')
hh3cEponUniMulticastIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 9, 1, 9), Integer32())
if mibBuilder.loadTexts: hh3cEponUniMulticastIndex.setStatus('current')
hh3cEponUniMulticastSourceIpList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 9, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniMulticastSourceIpList.setStatus('current')
hh3cEponUniMulticastResetInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 9, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniMulticastResetInterval.setStatus('current')
hh3cEponUniQosIndexNextTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 10), )
if mibBuilder.loadTexts: hh3cEponUniQosIndexNextTable.setStatus('current')
hh3cEponUniQosIndexNextEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 10, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniIndex"))
if mibBuilder.loadTexts: hh3cEponUniQosIndexNextEntry.setStatus('current')
hh3cEponUniQosConfIndexNext = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniQosConfIndexNext.setStatus('current')
hh3cEponUniQosConfTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 11), )
if mibBuilder.loadTexts: hh3cEponUniQosConfTable.setStatus('current')
hh3cEponUniQosConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 11, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniQosConfIndex"))
if mibBuilder.loadTexts: hh3cEponUniQosConfEntry.setStatus('current')
hh3cEponUniQosConfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 11, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cEponUniQosConfIndex.setStatus('current')
hh3cEponUniQosConfRuleIndexNext = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniQosConfRuleIndexNext.setStatus('current')
hh3cEponUniQosConfMappedQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 11, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniQosConfMappedQueue.setStatus('current')
hh3cEponUniQosConfMarkedPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 11, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniQosConfMarkedPriority.setStatus('current')
hh3cEponUniQosConfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 11, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniQosConfRowStatus.setStatus('current')
hh3cEponUniQosRuleTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 12), )
if mibBuilder.loadTexts: hh3cEponUniQosRuleTable.setStatus('current')
hh3cEponUniQosRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 12, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniQosConfIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniQosRuleIndex"))
if mibBuilder.loadTexts: hh3cEponUniQosRuleEntry.setStatus('current')
hh3cEponUniQosRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hh3cEponUniQosRuleIndex.setStatus('current')
hh3cEponUniQosRuleSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("dstmac", 1), ("srcmac", 2), ("ethernetpriority", 3), ("vlanid", 4), ("ethernettype", 5), ("dstip", 6), ("srcip", 7), ("ipprototype", 8), ("ipv4tosdscp", 9), ("ipv6precedence", 10), ("srcport", 11), ("dstport", 12)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniQosRuleSelector.setStatus('current')
hh3cEponUniQosRuleValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 12, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniQosRuleValue.setStatus('current')
hh3cEponUniQosRuleMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 12, 1, 4), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniQosRuleMacAddress.setStatus('current')
hh3cEponUniQosRuleOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("nevermatch", 1), ("equal", 2), ("notequal", 3), ("lessthanequal", 4), ("greaterthanequal", 5), ("fieldexist", 6), ("fieldnotexist", 7), ("alwaysmatch", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniQosRuleOperator.setStatus('current')
hh3cEponUniQosRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 12, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniQosRuleRowStatus.setStatus('current')
hh3cEponUniMirrorGroupTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 13), )
if mibBuilder.loadTexts: hh3cEponUniMirrorGroupTable.setStatus('current')
hh3cEponUniMirrorGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 13, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniMirrorGroupID"))
if mibBuilder.loadTexts: hh3cEponUniMirrorGroupEntry.setStatus('current')
hh3cEponUniMirrorGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 13, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cEponUniMirrorGroupID.setStatus('current')
hh3cEponUniMirrorInboundPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 13, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEponUniMirrorInboundPortList.setStatus('current')
hh3cEponUniMirrorOutboundPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 13, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniMirrorOutboundPortList.setStatus('current')
hh3cEponUniMonitorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 13, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniMonitorPort.setStatus('current')
hh3cEponUniMirrorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 13, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEponUniMirrorRowStatus.setStatus('current')
hh3cEponUniMirrorGroupIdNextTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 14), )
if mibBuilder.loadTexts: hh3cEponUniMirrorGroupIdNextTable.setStatus('current')
hh3cEponUniMirrorGroupIdNextEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 14, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cEponUniMirrorGroupIdNextEntry.setStatus('current')
hh3cEponUniMirrorGroupIDNext = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniMirrorGroupIDNext.setStatus('current')
hh3cEponUniMulticastCtrlInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 15), )
if mibBuilder.loadTexts: hh3cEponUniMulticastCtrlInfoTable.setStatus('current')
hh3cEponUniMulticastCtrlInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 15, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniMultActVlan"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniMultActAddress"))
if mibBuilder.loadTexts: hh3cEponUniMulticastCtrlInfoEntry.setStatus('current')
hh3cEponUniMultActVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 15, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cEponUniMultActVlan.setStatus('current')
hh3cEponUniMultActAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 15, 1, 2), IpAddress())
if mibBuilder.loadTexts: hh3cEponUniMultActAddress.setStatus('current')
hh3cEponUniMultActAccessRule = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("deny", 1), ("permit", 2), ("preview", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniMultActAccessRule.setStatus('current')
hh3cEponUniMultActPreTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 15, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniMultActPreTimes.setStatus('current')
hh3cEponUniMultActPreRemain = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 15, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniMultActPreRemain.setStatus('current')
hh3cEponUniMulticastIndexNextTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 16), )
if mibBuilder.loadTexts: hh3cEponUniMulticastIndexNextTable.setStatus('current')
hh3cEponUniMulticastIndexNextEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 16, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EPON-UNI-MIB", "hh3cEponUniIndex"))
if mibBuilder.loadTexts: hh3cEponUniMulticastIndexNextEntry.setStatus('current')
hh3cEponUniMulticastConfIndexNext = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 1, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEponUniMulticastConfIndexNext.setStatus('current')
hh3cEponUniTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 2))
hh3cEponUniTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 2, 0))
hh3cEponUniLinkUpTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 2, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HH3C-EPON-UNI-MIB", "hh3cEponUniIndex"), ("HH3C-EPON-UNI-MIB", "hh3cEponUniDescr"), ("HH3C-EPON-UNI-MIB", "hh3cEponUniAdminStatus"))
if mibBuilder.loadTexts: hh3cEponUniLinkUpTrap.setStatus('current')
hh3cEponUniLinkDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 42, 5, 2, 0, 2)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HH3C-EPON-UNI-MIB", "hh3cEponUniIndex"), ("HH3C-EPON-UNI-MIB", "hh3cEponUniDescr"), ("HH3C-EPON-UNI-MIB", "hh3cEponUniAdminStatus"))
if mibBuilder.loadTexts: hh3cEponUniLinkDownTrap.setStatus('current')
mibBuilder.exportSymbols("HH3C-EPON-UNI-MIB", hh3cEponUniMultActPreTimes=hh3cEponUniMultActPreTimes, hh3cEponUniMulticastResetInterval=hh3cEponUniMulticastResetInterval, hh3cEponUniLinkUpTrap=hh3cEponUniLinkUpTrap, hh3cEponUniIgmpMacAddress=hh3cEponUniIgmpMacAddress, hh3cEponUniMulticastPreTimeSlice=hh3cEponUniMulticastPreTimeSlice, hh3cEponUniQosRuleSelector=hh3cEponUniQosRuleSelector, hh3cEponUniVitualCableTest=hh3cEponUniVitualCableTest, hh3cEponUniVLANTrunkAllowListHigh=hh3cEponUniVLANTrunkAllowListHigh, hh3cEponUniQosConfRuleIndexNext=hh3cEponUniQosConfRuleIndexNext, hh3cEponUniMultActVlan=hh3cEponUniMultActVlan, hh3cEponUniOutDroppedFrames=hh3cEponUniOutDroppedFrames, hh3cEponUniPortIsolate=hh3cEponUniPortIsolate, PYSNMP_MODULE_ID=hh3cEponUni, hh3cEponUniMirrorGroupIdNextEntry=hh3cEponUniMirrorGroupIdNextEntry, hh3cEponUniPortPolicyExtraBurst=hh3cEponUniPortPolicyExtraBurst, hh3cEponUniMirrorGroupTable=hh3cEponUniMirrorGroupTable, hh3cEponUniVCTCableStatus=hh3cEponUniVCTCableStatus, hh3cEponUniVCTCableLength=hh3cEponUniVCTCableLength, hh3cEponUniMulticastIndexNextTable=hh3cEponUniMulticastIndexNextTable, hh3cEponUniVCTPairSwap=hh3cEponUniVCTPairSwap, hh3cEponUniAdvertisedTechAbility=hh3cEponUniAdvertisedTechAbility, hh3cEponUniLinkStatus=hh3cEponUniLinkStatus, hh3cEponUniMirrorInboundPortList=hh3cEponUniMirrorInboundPortList, hh3cEponUniIgmpInfoEntry=hh3cEponUniIgmpInfoEntry, hh3cEponUniMultActAddress=hh3cEponUniMultActAddress, hh3cEponUniCountTable=hh3cEponUniCountTable, hh3cEponUniSysManTable=hh3cEponUniSysManTable, hh3cEponUniQosConfIndexNext=hh3cEponUniQosConfIndexNext, hh3cEponUniVCTImpedanceMismatch=hh3cEponUniVCTImpedanceMismatch, hh3cEponUniIndex=hh3cEponUniIndex, hh3cEponUniMulticastSourceIpList=hh3cEponUniMulticastSourceIpList, hh3cEponUniMulticastChannelLimit=hh3cEponUniMulticastChannelLimit, hh3cEponUniQosRuleIndex=hh3cEponUniQosRuleIndex, hh3cEponUniInStatsOversizePkts=hh3cEponUniInStatsOversizePkts, hh3cEponUniAccessVlan=hh3cEponUniAccessVlan, hh3cEponUniCountEntry=hh3cEponUniCountEntry, hh3cEponUniInTotalErrors=hh3cEponUniInTotalErrors, hh3cEponUniPortPolicyEntry=hh3cEponUniPortPolicyEntry, hh3cEponUniVlanVPNStatus=hh3cEponUniVlanVPNStatus, hh3cEponUniMulticastPreInterval=hh3cEponUniMulticastPreInterval, hh3cEponUniQosConfMappedQueue=hh3cEponUniQosConfMappedQueue, hh3cEponUniLineRateStep=hh3cEponUniLineRateStep, hh3cEponUniMulticastControlEntry=hh3cEponUniMulticastControlEntry, hh3cEponUniQosConfMarkedPriority=hh3cEponUniQosConfMarkedPriority, hh3cEponUniQosConfTable=hh3cEponUniQosConfTable, hh3cEponUniOutboundLineRate=hh3cEponUniOutboundLineRate, hh3cEponUniInStatsPkts=hh3cEponUniInStatsPkts, hh3cEponUniInStatsUnicastPkts=hh3cEponUniInStatsUnicastPkts, hh3cEponUniIgmpVlanId=hh3cEponUniIgmpVlanId, hh3cEponUniMonitorPort=hh3cEponUniMonitorPort, hh3cEponUniPortPolicyOutboundPir=hh3cEponUniPortPolicyOutboundPir, hh3cEponUniOutDelayExceededDiscards=hh3cEponUniOutDelayExceededDiscards, hh3cEponUniDuplex=hh3cEponUniDuplex, hh3cEponUniMirrorGroupEntry=hh3cEponUniMirrorGroupEntry, hh3cEponUniQosConfRowStatus=hh3cEponUniQosConfRowStatus, hh3cEponUniPortPolicyTable=hh3cEponUniPortPolicyTable, hh3cEponUniInboundLineRate=hh3cEponUniInboundLineRate, hh3cEponUniPortPolicyBucketDepth=hh3cEponUniPortPolicyBucketDepth, hh3cEponUniMirrorGroupIDNext=hh3cEponUniMirrorGroupIDNext, hh3cEponUniInStatsUndersizePkts=hh3cEponUniInStatsUndersizePkts, hh3cEponUniPortPolicyInboundBucketDepth=hh3cEponUniPortPolicyInboundBucketDepth, hh3cEponUniVCTInsertionLoss=hh3cEponUniVCTInsertionLoss, hh3cEponUniMultActAccessRule=hh3cEponUniMultActAccessRule, hh3cEponUniMulticastPreTimes=hh3cEponUniMulticastPreTimes, hh3cEponUniMultActPreRemain=hh3cEponUniMultActPreRemain, hh3cEponUniMulticastAddressList=hh3cEponUniMulticastAddressList, hh3cEponUniVLANTrunkAllowListLow=hh3cEponUniVLANTrunkAllowListLow, hh3cEponUniLineRateMax=hh3cEponUniLineRateMax, hh3cEponUniMulticastEntry=hh3cEponUniMulticastEntry, hh3cEponUniQosIndexNextTable=hh3cEponUniQosIndexNextTable, hh3cEponUniVlanType=hh3cEponUniVlanType, hh3cEponUniInterfaceType=hh3cEponUniInterfaceType, hh3cEponUniMacIndex=hh3cEponUniMacIndex, hh3cEponUniMulticastIndexNextEntry=hh3cEponUniMulticastIndexNextEntry, hh3cEponUniQosConfIndex=hh3cEponUniQosConfIndex, hh3cEponUniQosIndexNextEntry=hh3cEponUniQosIndexNextEntry, hh3cEponUniQosRuleOperator=hh3cEponUniQosRuleOperator, hh3cEponUniRestartAutoNeg=hh3cEponUniRestartAutoNeg, hh3cEponUniMulticastControlTable=hh3cEponUniMulticastControlTable, hh3cEponUniPortPolicyOutboundCir=hh3cEponUniPortPolicyOutboundCir, hh3cEponUniDescr=hh3cEponUniDescr, hh3cEponUniAutoNegotiation=hh3cEponUniAutoNegotiation, hh3cEponUniMulticastTable=hh3cEponUniMulticastTable, hh3cEponUniTrunkPvid=hh3cEponUniTrunkPvid, hh3cEponUniQosRuleEntry=hh3cEponUniQosRuleEntry, hh3cEponUniMirrorOutboundPortList=hh3cEponUniMirrorOutboundPortList, hh3cEponUniOutStatsPausePkts=hh3cEponUniOutStatsPausePkts, hh3cEponUniOutStatsBroadcastPkts=hh3cEponUniOutStatsBroadcastPkts, hh3cEponUniQosRuleMacAddress=hh3cEponUniQosRuleMacAddress, hh3cEponUniSysManEntry=hh3cEponUniSysManEntry, hh3cEponUni=hh3cEponUni, hh3cEponUniVCTReturnLoss=hh3cEponUniVCTReturnLoss, hh3cEponUniInStatsCRCAlignErrors=hh3cEponUniInStatsCRCAlignErrors, hh3cEponUniLocalTechAbility=hh3cEponUniLocalTechAbility, hh3cEponUniMulticastStripStatus=hh3cEponUniMulticastStripStatus, hh3cEponUniTechAbilityTable=hh3cEponUniTechAbilityTable, hh3cEponUniVCTPairSkew=hh3cEponUniVCTPairSkew, hh3cEponUniMulticastCtrlInfoTable=hh3cEponUniMulticastCtrlInfoTable, hh3cEponUniVCTPolaritySwap=hh3cEponUniVCTPolaritySwap, hh3cEponUniPriority=hh3cEponUniPriority, hh3cEponUniInPausePkts=hh3cEponUniInPausePkts, hh3cEponUniIgmpInfoTable=hh3cEponUniIgmpInfoTable, hh3cEponUniInStatsBroadcastPkts=hh3cEponUniInStatsBroadcastPkts, hh3cEponUniSpeed=hh3cEponUniSpeed, hh3cEponUniVCTNearendCrosstalk=hh3cEponUniVCTNearendCrosstalk, hh3cEponUniScalarGroup=hh3cEponUniScalarGroup, hh3cEponUniQosRuleRowStatus=hh3cEponUniQosRuleRowStatus, hh3cEponUniFlowControl=hh3cEponUniFlowControl, hh3cEponUniMulticastFastleave=hh3cEponUniMulticastFastleave, hh3cEponUniVlanConfiguration=hh3cEponUniVlanConfiguration, hh3cEponUniMirrorGroupID=hh3cEponUniMirrorGroupID, hh3cEponUniOutStatsPkts=hh3cEponUniOutStatsPkts, hh3cEponUniMulticastRowStatus=hh3cEponUniMulticastRowStatus, hh3cEponUniOutStatsMulticastPkts=hh3cEponUniOutStatsMulticastPkts, hh3cEponUniTrapPrefix=hh3cEponUniTrapPrefix, hh3cEponUniMirrorGroupIdNextTable=hh3cEponUniMirrorGroupIdNextTable, hh3cEponUniCountReset=hh3cEponUniCountReset, hh3cEponUniQosConfEntry=hh3cEponUniQosConfEntry, hh3cEponUniPortPolicyInboundCir=hh3cEponUniPortPolicyInboundCir, hh3cEponUniOutStatsCollisions=hh3cEponUniOutStatsCollisions, hh3cEponUniInErrorbyOther=hh3cEponUniInErrorbyOther, hh3cEponUniPortPolicyStatus=hh3cEponUniPortPolicyStatus, hh3cEponUniInStatsMulticastPkts=hh3cEponUniInStatsMulticastPkts, hh3cEponUniParaMan=hh3cEponUniParaMan, hh3cEponUniMulticastGroupNumber=hh3cEponUniMulticastGroupNumber, hh3cEponUniQosRuleTable=hh3cEponUniQosRuleTable, hh3cEponUniMirrorRowStatus=hh3cEponUniMirrorRowStatus, hh3cEponUniLinkDownTrap=hh3cEponUniLinkDownTrap, hh3cEponUniTrap=hh3cEponUniTrap, hh3cEponUniAdminStatus=hh3cEponUniAdminStatus, hh3cEponUniMulticastVlanList=hh3cEponUniMulticastVlanList, hh3cEponUniOutStatsUnicastPkts=hh3cEponUniOutStatsUnicastPkts, hh3cEponUniMulticastVlanIndex=hh3cEponUniMulticastVlanIndex, hh3cEponUniMulticastAccessRule=hh3cEponUniMulticastAccessRule, hh3cEponUniMulticastConfIndexNext=hh3cEponUniMulticastConfIndexNext, hh3cEponUniMulticastCtrlInfoEntry=hh3cEponUniMulticastCtrlInfoEntry, hh3cEponUniMulticastIndex=hh3cEponUniMulticastIndex, hh3cEponUniOutTotalErrors=hh3cEponUniOutTotalErrors, hh3cEponUniTechAbilityEntry=hh3cEponUniTechAbilityEntry, hh3cEponUniQosRuleValue=hh3cEponUniQosRuleValue, hh3cEponUniPortPolicyInboundExtraBurst=hh3cEponUniPortPolicyInboundExtraBurst, hh3cEponUniSysMan=hh3cEponUniSysMan, hh3cEponUniPortPolicyCir=hh3cEponUniPortPolicyCir, hh3cEponUniOutErrorbyOther=hh3cEponUniOutErrorbyOther, hh3cEponUniMdi=hh3cEponUniMdi, hh3cEponUniNumberOnOnu=hh3cEponUniNumberOnOnu)
