#
# PySNMP MIB module JETNEXUS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JETNEXUS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:47:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
iso, Counter32, ObjectIdentity, ModuleIdentity, Gauge32, Unsigned32, NotificationType, Bits, IpAddress, Integer32, MibIdentifier, Counter64, enterprises, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "ObjectIdentity", "ModuleIdentity", "Gauge32", "Unsigned32", "NotificationType", "Bits", "IpAddress", "Integer32", "MibIdentifier", "Counter64", "enterprises", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
jetnexusMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 38370))
jetnexusMIB.setRevisions(('2014-10-18 00:00',))
if mibBuilder.loadTexts: jetnexusMIB.setLastUpdated('201410180000Z')
if mibBuilder.loadTexts: jetnexusMIB.setOrganization('jetNEXUS')
jetnexusData = MibIdentifier((1, 3, 6, 1, 4, 1, 38370, 1))
jetnexusGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 38370, 1, 1))
jetnexusOverallInputBytes = MibScalar((1, 3, 6, 1, 4, 1, 38370, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jetnexusOverallInputBytes.setStatus('current')
jetnexusOverallOutputBytes = MibScalar((1, 3, 6, 1, 4, 1, 38370, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jetnexusOverallOutputBytes.setStatus('current')
jetnexusCompressedInputBytes = MibScalar((1, 3, 6, 1, 4, 1, 38370, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jetnexusCompressedInputBytes.setStatus('current')
jetnexusCompressedOutputBytes = MibScalar((1, 3, 6, 1, 4, 1, 38370, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jetnexusCompressedOutputBytes.setStatus('current')
jetnexusVersionInfo = MibScalar((1, 3, 6, 1, 4, 1, 38370, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jetnexusVersionInfo.setStatus('current')
jetnexusTotalClientConnections = MibScalar((1, 3, 6, 1, 4, 1, 38370, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jetnexusTotalClientConnections.setStatus('current')
jetnexusCpuPercent = MibScalar((1, 3, 6, 1, 4, 1, 38370, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jetnexusCpuPercent.setStatus('current')
jetnexusDiskFreePercent = MibScalar((1, 3, 6, 1, 4, 1, 38370, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jetnexusDiskFreePercent.setStatus('current')
jetnexusMemoryPercent = MibScalar((1, 3, 6, 1, 4, 1, 38370, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jetnexusMemoryPercent.setStatus('current')
jetnexusCurrentConnections = MibScalar((1, 3, 6, 1, 4, 1, 38370, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jetnexusCurrentConnections.setStatus('current')
jnvirtualserviceTable = MibTable((1, 3, 6, 1, 4, 1, 38370, 1, 2), )
if mibBuilder.loadTexts: jnvirtualserviceTable.setStatus('current')
jnvirtualserviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 38370, 1, 2, 1), ).setIndexNames((0, "JETNEXUS-MIB", "jnvirtualserviceIndexVirtualService"))
if mibBuilder.loadTexts: jnvirtualserviceEntry.setStatus('current')
jnvirtualserviceIndexVirtualService = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: jnvirtualserviceIndexVirtualService.setStatus('current')
jnvirtualserviceVSAddrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnvirtualserviceVSAddrPort.setStatus('current')
jnvirtualserviceOverallInputBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnvirtualserviceOverallInputBytes.setStatus('current')
jnvirtualserviceOverallOutputBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnvirtualserviceOverallOutputBytes.setStatus('current')
jnvirtualserviceCacheBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnvirtualserviceCacheBytes.setStatus('current')
jnvirtualserviceCompressionPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnvirtualserviceCompressionPercent.setStatus('current')
jnvirtualservicePresentClientConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnvirtualservicePresentClientConnections.setStatus('current')
jnvirtualserviceHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnvirtualserviceHitCount.setStatus('current')
jnvirtualserviceCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnvirtualserviceCacheHits.setStatus('current')
jnvirtualserviceCacheHitsPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnvirtualserviceCacheHitsPercent.setStatus('current')
jnvirtualserviceVSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 2, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnvirtualserviceVSStatus.setStatus('current')
jnrealserverTable = MibTable((1, 3, 6, 1, 4, 1, 38370, 1, 3), )
if mibBuilder.loadTexts: jnrealserverTable.setStatus('current')
jnrealserverEntry = MibTableRow((1, 3, 6, 1, 4, 1, 38370, 1, 3, 1), ).setIndexNames((0, "JETNEXUS-MIB", "jnrealserverIndexVirtualService"), (0, "JETNEXUS-MIB", "jnrealserverIndexRealServer"))
if mibBuilder.loadTexts: jnrealserverEntry.setStatus('current')
jnrealserverIndexVirtualService = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: jnrealserverIndexVirtualService.setStatus('current')
jnrealserverIndexRealServer = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: jnrealserverIndexRealServer.setStatus('current')
jnrealserverVSAddrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 3, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnrealserverVSAddrPort.setStatus('current')
jnrealserverRSAddrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 3, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnrealserverRSAddrPort.setStatus('current')
jnrealserverOverallInputBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnrealserverOverallInputBytes.setStatus('current')
jnrealserverOverallOutputBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnrealserverOverallOutputBytes.setStatus('current')
jnrealserverCompressionPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnrealserverCompressionPercent.setStatus('current')
jnrealserverPresentClientConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnrealserverPresentClientConnections.setStatus('current')
jnrealserverPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnrealserverPoolUsage.setStatus('current')
jnrealserverHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnrealserverHitCount.setStatus('current')
jnrealserverRSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 38370, 1, 3, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnrealserverRSStatus.setStatus('current')
jetnexusConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 38370, 2))
jetnexusGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 38370, 2, 1))
jetnexusCurrentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 38370, 2, 1, 1)).setObjects(("JETNEXUS-MIB", "jetnexusOverallInputBytes"), ("JETNEXUS-MIB", "jetnexusOverallOutputBytes"), ("JETNEXUS-MIB", "jetnexusCompressedInputBytes"), ("JETNEXUS-MIB", "jetnexusCompressedOutputBytes"), ("JETNEXUS-MIB", "jetnexusVersionInfo"), ("JETNEXUS-MIB", "jetnexusTotalClientConnections"), ("JETNEXUS-MIB", "jetnexusCpuPercent"), ("JETNEXUS-MIB", "jetnexusDiskFreePercent"), ("JETNEXUS-MIB", "jetnexusMemoryPercent"), ("JETNEXUS-MIB", "jetnexusCurrentConnections"), ("JETNEXUS-MIB", "jnvirtualserviceVSAddrPort"), ("JETNEXUS-MIB", "jnvirtualserviceOverallInputBytes"), ("JETNEXUS-MIB", "jnvirtualserviceOverallOutputBytes"), ("JETNEXUS-MIB", "jnvirtualserviceCacheBytes"), ("JETNEXUS-MIB", "jnvirtualserviceCompressionPercent"), ("JETNEXUS-MIB", "jnvirtualservicePresentClientConnections"), ("JETNEXUS-MIB", "jnvirtualserviceHitCount"), ("JETNEXUS-MIB", "jnvirtualserviceCacheHits"), ("JETNEXUS-MIB", "jnvirtualserviceCacheHitsPercent"), ("JETNEXUS-MIB", "jnvirtualserviceVSStatus"), ("JETNEXUS-MIB", "jnrealserverVSAddrPort"), ("JETNEXUS-MIB", "jnrealserverRSAddrPort"), ("JETNEXUS-MIB", "jnrealserverOverallInputBytes"), ("JETNEXUS-MIB", "jnrealserverOverallOutputBytes"), ("JETNEXUS-MIB", "jnrealserverCompressionPercent"), ("JETNEXUS-MIB", "jnrealserverPresentClientConnections"), ("JETNEXUS-MIB", "jnrealserverPoolUsage"), ("JETNEXUS-MIB", "jnrealserverHitCount"), ("JETNEXUS-MIB", "jnrealserverRSStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jetnexusCurrentGroup = jetnexusCurrentGroup.setStatus('current')
jetnexusCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 38370, 2, 2))
jetnexusBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 38370, 2, 2, 1)).setObjects(("JETNEXUS-MIB", "jetnexusCurrentGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jetnexusBasicCompliance = jetnexusBasicCompliance.setStatus('current')
mibBuilder.exportSymbols("JETNEXUS-MIB", jetnexusVersionInfo=jetnexusVersionInfo, jnvirtualserviceOverallOutputBytes=jnvirtualserviceOverallOutputBytes, jetnexusData=jetnexusData, jnvirtualserviceCacheHitsPercent=jnvirtualserviceCacheHitsPercent, jnrealserverOverallOutputBytes=jnrealserverOverallOutputBytes, jnrealserverCompressionPercent=jnrealserverCompressionPercent, jnvirtualserviceVSStatus=jnvirtualserviceVSStatus, jnrealserverHitCount=jnrealserverHitCount, jetnexusMemoryPercent=jetnexusMemoryPercent, jetnexusOverallOutputBytes=jetnexusOverallOutputBytes, jnvirtualserviceTable=jnvirtualserviceTable, PYSNMP_MODULE_ID=jetnexusMIB, jnrealserverPresentClientConnections=jnrealserverPresentClientConnections, jnvirtualserviceCacheBytes=jnvirtualserviceCacheBytes, jnvirtualserviceOverallInputBytes=jnvirtualserviceOverallInputBytes, jetnexusOverallInputBytes=jetnexusOverallInputBytes, jetnexusMIB=jetnexusMIB, jetnexusGroups=jetnexusGroups, jnvirtualserviceCompressionPercent=jnvirtualserviceCompressionPercent, jetnexusDiskFreePercent=jetnexusDiskFreePercent, jetnexusGlobal=jetnexusGlobal, jetnexusCompressedInputBytes=jetnexusCompressedInputBytes, jetnexusConformance=jetnexusConformance, jetnexusCpuPercent=jetnexusCpuPercent, jnvirtualserviceCacheHits=jnvirtualserviceCacheHits, jnvirtualserviceIndexVirtualService=jnvirtualserviceIndexVirtualService, jetnexusCompressedOutputBytes=jetnexusCompressedOutputBytes, jnvirtualservicePresentClientConnections=jnvirtualservicePresentClientConnections, jnrealserverTable=jnrealserverTable, jnrealserverRSStatus=jnrealserverRSStatus, jetnexusTotalClientConnections=jetnexusTotalClientConnections, jnvirtualserviceVSAddrPort=jnvirtualserviceVSAddrPort, jnrealserverEntry=jnrealserverEntry, jetnexusCurrentGroup=jetnexusCurrentGroup, jnrealserverVSAddrPort=jnrealserverVSAddrPort, jnvirtualserviceHitCount=jnvirtualserviceHitCount, jetnexusBasicCompliance=jetnexusBasicCompliance, jnrealserverOverallInputBytes=jnrealserverOverallInputBytes, jetnexusCompliances=jetnexusCompliances, jnvirtualserviceEntry=jnvirtualserviceEntry, jnrealserverPoolUsage=jnrealserverPoolUsage, jnrealserverIndexVirtualService=jnrealserverIndexVirtualService, jnrealserverRSAddrPort=jnrealserverRSAddrPort, jnrealserverIndexRealServer=jnrealserverIndexRealServer, jetnexusCurrentConnections=jetnexusCurrentConnections)
