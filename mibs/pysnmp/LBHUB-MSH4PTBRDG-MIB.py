#
# PySNMP MIB module LBHUB-MSH4PTBRDG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LBHUB-MSH4PTBRDG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:55:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Integer32, NotificationType, ModuleIdentity, Unsigned32, Bits, mgmt, internet, MibIdentifier, TimeTicks, NotificationType, iso, Counter64, ObjectIdentity, experimental, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Integer32", "NotificationType", "ModuleIdentity", "Unsigned32", "Bits", "mgmt", "internet", "MibIdentifier", "TimeTicks", "NotificationType", "iso", "Counter64", "ObjectIdentity", "experimental", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "IpAddress", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
mib_2 = MibIdentifier((1, 3, 6, 1, 2, 1)).setLabel("mib-2")
system = MibIdentifier((1, 3, 6, 1, 2, 1, 1))
interfaces = MibIdentifier((1, 3, 6, 1, 2, 1, 2))
ip = MibIdentifier((1, 3, 6, 1, 2, 1, 4))
icmp = MibIdentifier((1, 3, 6, 1, 2, 1, 5))
tcp = MibIdentifier((1, 3, 6, 1, 2, 1, 6))
udp = MibIdentifier((1, 3, 6, 1, 2, 1, 7))
egp = MibIdentifier((1, 3, 6, 1, 2, 1, 8))
transmission = MibIdentifier((1, 3, 6, 1, 2, 1, 10))
dot3 = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7))
snmp = MibIdentifier((1, 3, 6, 1, 2, 1, 11))
ifExtensions = MibIdentifier((1, 3, 6, 1, 2, 1, 12))
dot1dBridge = MibIdentifier((1, 3, 6, 1, 2, 1, 17))
constellation = MibIdentifier((1, 3, 6, 1, 4, 1, 187))
cExper = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 1))
class DisplayString(OctetString):
    pass

class PhysAddress(OctetString):
    pass

class Timeout(Integer32):
    pass

cProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 2))
cLittleDipper = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 2, 1))
cAuriga = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 2, 3))
cCarina = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 2, 4))
cCarinaAui = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 2, 4, 1))
cCarinaBnc = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 2, 4, 2))
cDuPont = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 2, 5))
cDuPontAui = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 2, 5, 1))
cDatabil = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 2, 6))
cDatability = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 2, 6, 1))
cPenr = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 2, 7))
cPenril = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 2, 7, 1))
cThreeCom = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 2, 8))
cThreeComMSH = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 2, 8, 1))
cStdExtensions = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 3))
cSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 3, 1))
cInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 3, 2))
cIp = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 3, 4))
cIcmp = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 3, 5))
cTcp = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 3, 6))
cUdp = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 3, 7))
cTransmission = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 3, 10))
cDot3 = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 3, 10, 7))
cSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 3, 11))
cConstellation = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 4))
cProxys = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 5))
cProxyLb = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 5, 1))
cProxyLb0 = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 5, 1, 1))
cProxyLb1 = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 5, 1, 2))
cProxyLb2 = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 5, 1, 3))
cProxyLb3 = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 5, 1, 4))
cProxyLr = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 5, 2))
cProxyLr0 = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 5, 2, 1))
cIpInLenErrors = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpInLenErrors.setStatus('mandatory')
cIpInVersionErrors = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpInVersionErrors.setStatus('mandatory')
cIpInCSErrors = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpInCSErrors.setStatus('mandatory')
cIpTTLZero = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpTTLZero.setStatus('mandatory')
cIpReasmTimeOuts = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpReasmTimeOuts.setStatus('mandatory')
cIpNetToMedia = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 3, 4, 7))
cIpNetToMediaTableSize = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaTableSize.setStatus('mandatory')
cIpNetToMediaCompleteTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cIpNetToMediaCompleteTimeOut.setStatus('mandatory')
cIpNetToMediaInCompleteTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cIpNetToMediaInCompleteTimeOut.setStatus('mandatory')
cIpNetToMediaIns = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaIns.setStatus('mandatory')
cIpNetToMediaInLenErrs = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaInLenErrs.setStatus('mandatory')
cIpNetToMediaInNotEther = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaInNotEther.setStatus('mandatory')
cIpNetToMediaInNoArpOnIf = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaInNoArpOnIf.setStatus('mandatory')
cIpNetToMediaInIp = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaInIp.setStatus('mandatory')
cIpNetToMediaInIpTrailers = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaInIpTrailers.setStatus('mandatory')
cIpNetToMediaInUnkProtos = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaInUnkProtos.setStatus('mandatory')
cIpNetToMediaInSourceBcast = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaInSourceBcast.setStatus('mandatory')
cIpNetToMediaInDups = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaInDups.setStatus('mandatory')
cIpNetToMediaInRequests = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaInRequests.setStatus('mandatory')
cIpNetToMediaInResponses = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaInResponses.setStatus('mandatory')
cIpNetToMediaInProxyOks = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaInProxyOks.setStatus('mandatory')
cIpNetToMediaOutReplys = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaOutReplys.setStatus('mandatory')
cIpNetToMediaOutRequests = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaOutRequests.setStatus('mandatory')
cIpNetToMediaReqBadAddrs = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaReqBadAddrs.setStatus('mandatory')
cIpNetToMediaNoResponses = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaNoResponses.setStatus('mandatory')
cIpNetToMediaAgeOuts = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaAgeOuts.setStatus('mandatory')
cIpNetToMediaTable = MibTable((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 21), )
if mibBuilder.loadTexts: cIpNetToMediaTable.setStatus('mandatory')
cIpNetToMediaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 21, 1), ).setIndexNames((0, "LBHUB-MSH4PTBRDG-MIB", "cIpNetToMediaIfIndex"), (0, "LBHUB-MSH4PTBRDG-MIB", "cIpNetToMediaNetAddress"))
if mibBuilder.loadTexts: cIpNetToMediaEntry.setStatus('mandatory')
cIpNetToMediaIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 21, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cIpNetToMediaIfIndex.setStatus('mandatory')
cIpNetToMediaNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 21, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cIpNetToMediaNetAddress.setStatus('mandatory')
cIpNetToMediaRefTime = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 21, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaRefTime.setStatus('mandatory')
cIpNetToMediaProxyRespond = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaProxyRespond.setStatus('mandatory')
cIpNetToMediaComplete = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaComplete.setStatus('mandatory')
cIpNetToMediaUseTrailers = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 4, 7, 21, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpNetToMediaUseTrailers.setStatus('mandatory')
cIcmpInRedirectNet = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInRedirectNet.setStatus('mandatory')
cIcmpInRedirectHost = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInRedirectHost.setStatus('mandatory')
cIcmpInRedirectNetTos = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInRedirectNetTos.setStatus('mandatory')
cIcmpInRedirectHostTos = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInRedirectHostTos.setStatus('mandatory')
cIcmpInTimeExcTTL = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInTimeExcTTL.setStatus('mandatory')
cIcmpInTimeExcReAsm = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInTimeExcReAsm.setStatus('mandatory')
cIcmpInDestUnNet = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInDestUnNet.setStatus('mandatory')
cIcmpInDestUnHost = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInDestUnHost.setStatus('mandatory')
cIcmpInDestUnProtocol = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInDestUnProtocol.setStatus('mandatory')
cIcmpInDestUnPort = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInDestUnPort.setStatus('mandatory')
cIcmpInDestUnFragNeeded = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInDestUnFragNeeded.setStatus('mandatory')
cIcmpInDestUnSourceRoute = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInDestUnSourceRoute.setStatus('mandatory')
cIcmpOutRedirectNet = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutRedirectNet.setStatus('mandatory')
cIcmpOutRedirectHost = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutRedirectHost.setStatus('mandatory')
cIcmpOutRedirectNetTos = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutRedirectNetTos.setStatus('mandatory')
cIcmpOutRedirectHostTos = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutRedirectHostTos.setStatus('mandatory')
cIcmpOutTimeExcTTL = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutTimeExcTTL.setStatus('mandatory')
cIcmpOutTimeExcReAsm = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutTimeExcReAsm.setStatus('mandatory')
cIcmpOutDestUnNet = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutDestUnNet.setStatus('mandatory')
cIcmpOutDestUnHost = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutDestUnHost.setStatus('mandatory')
cIcmpOutDestUnProtocol = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutDestUnProtocol.setStatus('mandatory')
cIcmpOutDestUnPort = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutDestUnPort.setStatus('mandatory')
cIcmpOutDestUnFragNeeded = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutDestUnFragNeeded.setStatus('mandatory')
cIcmpOutDestUnSourceRoute = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutDestUnSourceRoute.setStatus('mandatory')
cIcmpInLengthErrors = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInLengthErrors.setStatus('mandatory')
cIcmpInChecksumErrors = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInChecksumErrors.setStatus('mandatory')
cIcmpInUnkTypes = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInUnkTypes.setStatus('mandatory')
cIcmpInDestUnNetUnknown = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInDestUnNetUnknown.setStatus('mandatory')
cIcmpInDestUnHostUnknown = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInDestUnHostUnknown.setStatus('mandatory')
cIcmpInDestUnSrcIsolated = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInDestUnSrcIsolated.setStatus('mandatory')
cIcmpInDestUnHostProhib = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInDestUnHostProhib.setStatus('mandatory')
cIcmpInDestUnNetProhib = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInDestUnNetProhib.setStatus('mandatory')
cIcmpInDestUnNetTos = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInDestUnNetTos.setStatus('mandatory')
cIcmpInDestUnHostTos = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInDestUnHostTos.setStatus('mandatory')
cIcmpOutDestUnNetUnknown = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutDestUnNetUnknown.setStatus('mandatory')
cIcmpOutDestUnHostUnknown = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutDestUnHostUnknown.setStatus('mandatory')
cIcmpOutDestUnSrcIsolated = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutDestUnSrcIsolated.setStatus('mandatory')
cIcmpOutDestUnHostProhib = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutDestUnHostProhib.setStatus('mandatory')
cIcmpOutDestUnNetProhib = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutDestUnNetProhib.setStatus('mandatory')
cIcmpOutDestUnNetTos = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutDestUnNetTos.setStatus('mandatory')
cIcmpOutDestUnHostTos = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutDestUnHostTos.setStatus('mandatory')
cIcmpInParmProbMissingOpt = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpInParmProbMissingOpt.setStatus('mandatory')
cIcmpOutParmProbMissingOpt = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 5, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIcmpOutParmProbMissingOpt.setStatus('mandatory')
cUdpHdrDrops = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 7, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cUdpHdrDrops.setStatus('mandatory')
cUdpBadCheckSum = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 7, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cUdpBadCheckSum.setStatus('mandatory')
cUdpBadLength = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 7, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cUdpBadLength.setStatus('mandatory')
cUdpOtherErrors = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 7, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cUdpOtherErrors.setStatus('mandatory')
cUdpNoChecksum = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 7, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cUdpNoChecksum.setStatus('mandatory')
cSnmpCommunities = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 3, 11, 1))
cSnmpInCommunityMessages = MibScalar((1, 3, 6, 1, 4, 1, 187, 3, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSnmpInCommunityMessages.setStatus('mandatory')
ifExtnsTable = MibTable((1, 3, 6, 1, 2, 1, 12, 1), )
if mibBuilder.loadTexts: ifExtnsTable.setStatus('mandatory')
ifExtnsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 12, 1, 1), ).setIndexNames((0, "LBHUB-MSH4PTBRDG-MIB", "ifExtnsIfIndex"))
if mibBuilder.loadTexts: ifExtnsEntry.setStatus('mandatory')
ifExtnsIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 12, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifExtnsIfIndex.setStatus('mandatory')
ifExtnsChipSet = MibTableColumn((1, 3, 6, 1, 2, 1, 12, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifExtnsChipSet.setStatus('mandatory')
ifExtnsRevWare = MibTableColumn((1, 3, 6, 1, 2, 1, 12, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifExtnsRevWare.setStatus('mandatory')
ifExtnsMulticastsTransmittedOks = MibTableColumn((1, 3, 6, 1, 2, 1, 12, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifExtnsMulticastsTransmittedOks.setStatus('mandatory')
ifExtnsBroadcastsTransmittedOks = MibTableColumn((1, 3, 6, 1, 2, 1, 12, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifExtnsBroadcastsTransmittedOks.setStatus('mandatory')
ifExtnsMulticastsReceivedOks = MibTableColumn((1, 3, 6, 1, 2, 1, 12, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifExtnsMulticastsReceivedOks.setStatus('mandatory')
ifExtnsBroadcastsReceivedOks = MibTableColumn((1, 3, 6, 1, 2, 1, 12, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifExtnsBroadcastsReceivedOks.setStatus('mandatory')
ifExtnsPromiscuous = MibTableColumn((1, 3, 6, 1, 2, 1, 12, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifExtnsPromiscuous.setStatus('mandatory')
ifExtnsRcvAddrTable = MibTable((1, 3, 6, 1, 2, 1, 12, 3), )
if mibBuilder.loadTexts: ifExtnsRcvAddrTable.setStatus('mandatory')
ifExtnsRcvAddrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 12, 3, 1), ).setIndexNames((0, "LBHUB-MSH4PTBRDG-MIB", "ifExtnsRcvAddrIfIndex"), (0, "LBHUB-MSH4PTBRDG-MIB", "ifExtnsRcvAddress"))
if mibBuilder.loadTexts: ifExtnsRcvAddrEntry.setStatus('mandatory')
ifExtnsRcvAddrIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 12, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifExtnsRcvAddrIfIndex.setStatus('mandatory')
ifExtnsRcvAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 12, 3, 1, 2), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifExtnsRcvAddress.setStatus('mandatory')
ifExtnsRcvAddrStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 12, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("volatile", 3), ("nonVolatile", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifExtnsRcvAddrStatus.setStatus('mandatory')
dot3Table = MibTable((1, 3, 6, 1, 2, 1, 10, 7, 1), )
if mibBuilder.loadTexts: dot3Table.setStatus('mandatory')
dot3Entry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 7, 1, 1), ).setIndexNames((0, "LBHUB-MSH4PTBRDG-MIB", "dot3Index"))
if mibBuilder.loadTexts: dot3Entry.setStatus('mandatory')
dot3Index = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3Index.setStatus('mandatory')
dot3InitializeMac = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("initialized", 1), ("uninitialized", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3InitializeMac.setStatus('mandatory')
dot3MacSubLayerStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3MacSubLayerStatus.setStatus('mandatory')
dot3MulticastReceiveStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3MulticastReceiveStatus.setStatus('mandatory')
dot3TxEnabled = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3TxEnabled.setStatus('mandatory')
dot3TestTdrValue = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3TestTdrValue.setStatus('mandatory')
dot3StatsTable = MibTable((1, 3, 6, 1, 2, 1, 10, 7, 2), )
if mibBuilder.loadTexts: dot3StatsTable.setStatus('mandatory')
dot3StatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 7, 2, 1), ).setIndexNames((0, "LBHUB-MSH4PTBRDG-MIB", "dot3StatsIndex"))
if mibBuilder.loadTexts: dot3StatsEntry.setStatus('mandatory')
dot3StatsIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsIndex.setStatus('mandatory')
dot3StatsAlignmentErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsAlignmentErrors.setStatus('mandatory')
dot3StatsFCSErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsFCSErrors.setStatus('mandatory')
dot3StatsSingleCollisionFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsSingleCollisionFrames.setStatus('mandatory')
dot3StatsMultipleCollisionFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsMultipleCollisionFrames.setStatus('mandatory')
dot3StatsSQETestErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsSQETestErrors.setStatus('mandatory')
dot3StatsDeferredTransmissions = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsDeferredTransmissions.setStatus('mandatory')
dot3StatsLateCollisions = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsLateCollisions.setStatus('mandatory')
dot3StatsExcessiveCollisions = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsExcessiveCollisions.setStatus('mandatory')
dot3StatsInternalMacTransmitErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsInternalMacTransmitErrors.setStatus('mandatory')
dot3StatsCarrierSenseErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsCarrierSenseErrors.setStatus('mandatory')
dot3StatsExcessiveDeferrals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsExcessiveDeferrals.setStatus('mandatory')
dot3StatsFrameTooLongs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsFrameTooLongs.setStatus('mandatory')
dot3StatsInRangeLengthErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsInRangeLengthErrors.setStatus('mandatory')
dot3StatsOutOfRangeLengthFields = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsOutOfRangeLengthFields.setStatus('mandatory')
dot3StatsInternalMacReceiveErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsInternalMacReceiveErrors.setStatus('mandatory')
dot3ChipSets = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8))
dot3ChipSetAMD = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 1))
dot3ChipSetAMD7990 = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 1, 1))
dot3ChipSetAMD79900 = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 1, 2))
cConstellationAvailableBuffers = MibScalar((1, 3, 6, 1, 4, 1, 187, 4, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cConstellationAvailableBuffers.setStatus('mandatory')
cConstellationInitialBuffers = MibScalar((1, 3, 6, 1, 4, 1, 187, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cConstellationInitialBuffers.setStatus('mandatory')
cConstallationBufferDataLength = MibScalar((1, 3, 6, 1, 4, 1, 187, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cConstallationBufferDataLength.setStatus('mandatory')
cConstellationInstructionRam = MibScalar((1, 3, 6, 1, 4, 1, 187, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cConstellationInstructionRam.setStatus('mandatory')
cConstellationGlobalDataRam = MibScalar((1, 3, 6, 1, 4, 1, 187, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cConstellationGlobalDataRam.setStatus('mandatory')
cConstellationFastDataRam = MibScalar((1, 3, 6, 1, 4, 1, 187, 4, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cConstellationFastDataRam.setStatus('mandatory')
cDot3Table = MibTable((1, 3, 6, 1, 4, 1, 187, 3, 10, 7, 1), )
if mibBuilder.loadTexts: cDot3Table.setStatus('mandatory')
cDot3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 187, 3, 10, 7, 1, 1), ).setIndexNames((0, "LBHUB-MSH4PTBRDG-MIB", "cDot3Index"))
if mibBuilder.loadTexts: cDot3Entry.setStatus('mandatory')
cDot3Index = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 10, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cDot3Index.setStatus('mandatory')
cDot3Disables = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 10, 7, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cDot3Disables.setStatus('mandatory')
cDot3MauDisconnect = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 10, 7, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cDot3MauDisconnect.setStatus('mandatory')
cDot3Babbles = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 10, 7, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cDot3Babbles.setStatus('mandatory')
cDot3MerrDisconnect = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 10, 7, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cDot3MerrDisconnect.setStatus('mandatory')
cDot3TxonDisconnect = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 10, 7, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cDot3TxonDisconnect.setStatus('mandatory')
cDot3RxonDisconnect = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 10, 7, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cDot3RxonDisconnect.setStatus('mandatory')
cDot3XmitFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 10, 7, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cDot3XmitFailure.setStatus('mandatory')
cDot3XmitBuffErr = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 10, 7, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cDot3XmitBuffErr.setStatus('mandatory')
cDot3XmitUflo = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 10, 7, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cDot3XmitUflo.setStatus('mandatory')
cDot3RcvBuffErr = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 10, 7, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cDot3RcvBuffErr.setStatus('mandatory')
cDot3RcvOflo = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 10, 7, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cDot3RcvOflo.setStatus('mandatory')
cDot3Startless = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 10, 7, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cDot3Startless.setStatus('mandatory')
cDot3Endless = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 3, 10, 7, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cDot3Endless.setStatus('mandatory')
cConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6))
cMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7))
cConfigSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 1))
cConfSysInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 1, 1))
cConfOperAcct = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 1, 2))
cConfigLan = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 2))
cConfigEther = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 2, 1))
cConfigTwp = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 2, 2))
cConfigWan = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 3))
cConfigSerChan = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 3, 1))
cConfigWideAreaGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 3, 3))
cConfigBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 5))
cConfigLogicalBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 5, 1))
cIpAddress = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 6))
cConfigIpRouter = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 7))
cConfigAcceptLists = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 7, 5))
cConfigPropagateLists = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 7, 6))
cIpFilters = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 7, 9))
cConfigIpxRouter = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 8))
cConfigIpxBridgeIf = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 8, 1))
cConfigIpxRouterFilters = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 8, 2))
cConfigAppleTalk = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 9))
cConfigAtIf = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 9, 1))
cConfigNetProtocol = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 10))
cConfigSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 10, 1))
cConfigArp = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 10, 2))
cConfigTcp = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 10, 3))
cConfigTelnet = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 10, 4))
cConfigHostTable = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 10, 5))
cConfigSoftwareQueues = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 11))
cConfigFlashDnld = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 6, 14))
cMonitorSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 1))
cMonitorSystemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 1, 1))
cMonitorHeapStats = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 1, 2))
cMonitorLoginHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 1, 3))
cMonitorBridges = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 2))
cMonitorPhysInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 3))
cMonitorProto = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 4))
cTcpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 4, 3))
cIpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 4, 4))
cIcmpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 4, 5))
cWanStats = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 4, 9))
cMonitorIpRouter = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 5))
cIpRoutingStats = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 5, 1))
cEgpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 5, 3))
cRipStats = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 5, 5))
cHelloStats = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 5, 6))
cMonitorIpxRouter = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 6))
cIpxStats = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 6, 1))
cMonitorAtRouter = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 7))
cAtRouterStats = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 7, 1))
cDiagnostics = MibIdentifier((1, 3, 6, 1, 4, 1, 187, 7, 8))
cLocalTime = MibScalar((1, 3, 6, 1, 4, 1, 187, 6, 1, 1, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLocalTime.setStatus('mandatory')
cLocalDate = MibScalar((1, 3, 6, 1, 4, 1, 187, 6, 1, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLocalDate.setStatus('mandatory')
cLocalCtpMode = MibScalar((1, 3, 6, 1, 4, 1, 187, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standard", 1), ("extended", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLocalCtpMode.setStatus('mandatory')
cRemoteCtpMode = MibScalar((1, 3, 6, 1, 4, 1, 187, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standard", 1), ("extended", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cRemoteCtpMode.setStatus('mandatory')
cBridgeStatsAveraging = MibScalar((1, 3, 6, 1, 4, 1, 187, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cBridgeStatsAveraging.setStatus('mandatory')
cBranchTargetCache = MibScalar((1, 3, 6, 1, 4, 1, 187, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cBranchTargetCache.setStatus('mandatory')
cOperAcctTable = MibTable((1, 3, 6, 1, 4, 1, 187, 6, 1, 2, 1), )
if mibBuilder.loadTexts: cOperAcctTable.setStatus('mandatory')
cOperAcctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 187, 6, 1, 2, 1, 1), ).setIndexNames((0, "LBHUB-MSH4PTBRDG-MIB", "cOperIndex"))
if mibBuilder.loadTexts: cOperAcctEntry.setStatus('mandatory')
cOperIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 6, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cOperIndex.setStatus('mandatory')
cOperID = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 6, 1, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cOperID.setStatus('mandatory')
cOperPriv = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 6, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("privNone", 1), ("privOper", 2), ("privAdmin", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cOperPriv.setStatus('mandatory')
cOperPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 6, 1, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cOperPasswd.setStatus('mandatory')
cOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 6, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("valid", 1), ("createRequest", 2), ("underCreation", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cOperStatus.setStatus('mandatory')
cSnmpCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 187, 6, 10, 1, 1), )
if mibBuilder.loadTexts: cSnmpCommunityTable.setStatus('mandatory')
cSnmpCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 187, 6, 10, 1, 1, 1), ).setIndexNames((0, "LBHUB-MSH4PTBRDG-MIB", "cSnmpCommunityIndex"))
if mibBuilder.loadTexts: cSnmpCommunityEntry.setStatus('mandatory')
cSnmpCommunityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 6, 10, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSnmpCommunityIndex.setStatus('mandatory')
cSnmpCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 6, 10, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSnmpCommunity.setStatus('mandatory')
cSnmpCommunityIf = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 6, 10, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 1024))).clone(namedValues=NamedValues(("lb0", 1), ("lb1", 2), ("lb2", 3), ("lb3", 4), ("wa0", 5), ("wa1", 6), ("router", 1024)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSnmpCommunityIf.setStatus('mandatory')
cSnmpCommunityAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 6, 10, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("readOnly", 1), ("readWrite", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSnmpCommunityAccess.setStatus('mandatory')
cSnmpCommunityTrapAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 6, 10, 1, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSnmpCommunityTrapAddress.setStatus('mandatory')
cSnmpCommunityTrapPort = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 6, 10, 1, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSnmpCommunityTrapPort.setStatus('mandatory')
cSnmpCommunityTrapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 6, 10, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSnmpCommunityTrapEnabled.setStatus('mandatory')
cTcpKeepalive = MibScalar((1, 3, 6, 1, 4, 1, 187, 6, 10, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cTcpKeepalive.setStatus('mandatory')
cTelnetPort = MibScalar((1, 3, 6, 1, 4, 1, 187, 6, 10, 4, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cTelnetPort.setStatus('mandatory')
cTelnetNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 187, 6, 10, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cTelnetNegotiate.setStatus('mandatory')
cEtherSWQTable = MibTable((1, 3, 6, 1, 4, 1, 187, 6, 11, 1), )
if mibBuilder.loadTexts: cEtherSWQTable.setStatus('mandatory')
cEtherSWQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 187, 6, 11, 1, 1), ).setIndexNames((0, "LBHUB-MSH4PTBRDG-MIB", "cEtherSWQIndex"))
if mibBuilder.loadTexts: cEtherSWQEntry.setStatus('mandatory')
cEtherSWQIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 6, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cEtherSWQIndex.setStatus('mandatory')
cEtherSWQMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 6, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cEtherSWQMaxSize.setStatus('mandatory')
cEtherSWQMaxTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 6, 11, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cEtherSWQMaxTtl.setStatus('mandatory')
cResetNovram = MibScalar((1, 3, 6, 1, 4, 1, 187, 6, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cResetNovram.setStatus('mandatory')
cRestartSystem = MibScalar((1, 3, 6, 1, 4, 1, 187, 6, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cRestartSystem.setStatus('mandatory')
cFlashIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 187, 6, 14, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cFlashIpAddress.setStatus('mandatory')
cFlashFileName = MibScalar((1, 3, 6, 1, 4, 1, 187, 6, 14, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cFlashFileName.setStatus('mandatory')
cFlashBootFlag = MibScalar((1, 3, 6, 1, 4, 1, 187, 6, 14, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cFlashBootFlag.setStatus('mandatory')
cFlashGatewayIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 187, 6, 14, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cFlashGatewayIpAddr.setStatus('mandatory')
cLoginTable = MibTable((1, 3, 6, 1, 4, 1, 187, 7, 1, 3, 1), )
if mibBuilder.loadTexts: cLoginTable.setStatus('mandatory')
cLoginEntry = MibTableRow((1, 3, 6, 1, 4, 1, 187, 7, 1, 3, 1, 1), ).setIndexNames((0, "LBHUB-MSH4PTBRDG-MIB", "cLoginIndex"))
if mibBuilder.loadTexts: cLoginEntry.setStatus('mandatory')
cLoginIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLoginIndex.setStatus('mandatory')
cLoginUser = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 1, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLoginUser.setStatus('mandatory')
cLoginLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLoginLocal.setStatus('mandatory')
cLoginRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 1, 3, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLoginRemote.setStatus('mandatory')
cLoginFails = MibScalar((1, 3, 6, 1, 4, 1, 187, 7, 1, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLoginFails.setStatus('mandatory')
cNodeByAddressTable = MibTable((1, 3, 6, 1, 4, 1, 187, 7, 2, 3), )
if mibBuilder.loadTexts: cNodeByAddressTable.setStatus('mandatory')
cNodeByAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 187, 7, 2, 3, 1), ).setIndexNames((0, "LBHUB-MSH4PTBRDG-MIB", "cNodeByAddressAddr"))
if mibBuilder.loadTexts: cNodeByAddressEntry.setStatus('mandatory')
cNodeByAddressAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 2, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNodeByAddressAddr.setStatus('mandatory')
cNodeByAddressBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("lb0", 1), ("lb1", 2), ("lb2", 3), ("lb3", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNodeByAddressBridge.setStatus('mandatory')
cNodeByAddressPort = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNodeByAddressPort.setStatus('mandatory')
cNodeByAddressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("permanent", 1), ("port", 2), ("appeared", 3), ("notAppeared", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNodeByAddressStatus.setStatus('mandatory')
cNodeByHashTable = MibTable((1, 3, 6, 1, 4, 1, 187, 7, 2, 4), )
if mibBuilder.loadTexts: cNodeByHashTable.setStatus('mandatory')
cNodeByHashEntry = MibTableRow((1, 3, 6, 1, 4, 1, 187, 7, 2, 4, 1), ).setIndexNames((0, "LBHUB-MSH4PTBRDG-MIB", "cNodeByHashIndex"))
if mibBuilder.loadTexts: cNodeByHashEntry.setStatus('mandatory')
cNodeByHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNodeByHashIndex.setStatus('mandatory')
cNodeByHashBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNodeByHashBucket.setStatus('mandatory')
cNodeByHashAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 2, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNodeByHashAddress.setStatus('mandatory')
cNodeByHashBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("lb0", 1), ("lb1", 2), ("lb2", 3), ("lb3", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNodeByHashBridge.setStatus('mandatory')
cNodeByHashPort = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 2, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNodeByHashPort.setStatus('mandatory')
cNodeByHashStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("permanent", 1), ("port", 2), ("appeared", 3), ("notAppeared", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNodeByHashStatus.setStatus('mandatory')
cHardwareStatusTable = MibTable((1, 3, 6, 1, 4, 1, 187, 7, 3, 1), )
if mibBuilder.loadTexts: cHardwareStatusTable.setStatus('mandatory')
cHardwareStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 187, 7, 3, 1, 1), ).setIndexNames((0, "LBHUB-MSH4PTBRDG-MIB", "cHardwareStatusIndex"))
if mibBuilder.loadTexts: cHardwareStatusEntry.setStatus('mandatory')
cHardwareStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHardwareStatusIndex.setStatus('mandatory')
cHardwareStatusSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHardwareStatusSlot.setStatus('mandatory')
cHardwareStatusContents = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 3, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHardwareStatusContents.setStatus('mandatory')
cHardwareStatusMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 3, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHardwareStatusMacAddr.setStatus('mandatory')
cHardwareStatusSerialNo = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 3, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHardwareStatusSerialNo.setStatus('mandatory')
cHardwareStatusRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 3, 1, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHardwareStatusRevision.setStatus('mandatory')
cHardwareStatusStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 3, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHardwareStatusStatus.setStatus('mandatory')
cClearErrorLog = MibScalar((1, 3, 6, 1, 4, 1, 187, 7, 8, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cClearErrorLog.setStatus('mandatory')
cErrorLogTable = MibTable((1, 3, 6, 1, 4, 1, 187, 7, 8, 2), )
if mibBuilder.loadTexts: cErrorLogTable.setStatus('mandatory')
cErrorLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 187, 7, 8, 2, 1), ).setIndexNames((0, "LBHUB-MSH4PTBRDG-MIB", "cErrorLogIndex"))
if mibBuilder.loadTexts: cErrorLogEntry.setStatus('mandatory')
cErrorLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 8, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cErrorLogIndex.setStatus('mandatory')
cErrorLogMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 187, 7, 8, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cErrorLogMessage.setStatus('mandatory')
newRoot = NotificationType((1, 3, 6, 1, 2, 1, 17) + (0,1))
topologyChange = NotificationType((1, 3, 6, 1, 2, 1, 17) + (0,2))
mibBuilder.exportSymbols("LBHUB-MSH4PTBRDG-MIB", cFlashGatewayIpAddr=cFlashGatewayIpAddr, cIcmpInDestUnHostUnknown=cIcmpInDestUnHostUnknown, cIpFilters=cIpFilters, cSnmpCommunityTrapEnabled=cSnmpCommunityTrapEnabled, dot3StatsIndex=dot3StatsIndex, cProxys=cProxys, cEtherSWQTable=cEtherSWQTable, cEtherSWQMaxTtl=cEtherSWQMaxTtl, dot3ChipSetAMD=dot3ChipSetAMD, ifExtnsRcvAddrIfIndex=ifExtnsRcvAddrIfIndex, cIcmpInDestUnProtocol=cIcmpInDestUnProtocol, cIcmpInDestUnNetProhib=cIcmpInDestUnNetProhib, cSystem=cSystem, cLoginUser=cLoginUser, cIcmpInDestUnNet=cIcmpInDestUnNet, constellation=constellation, cConfigArp=cConfigArp, cConstellationAvailableBuffers=cConstellationAvailableBuffers, dot3StatsInRangeLengthErrors=dot3StatsInRangeLengthErrors, dot3StatsSQETestErrors=dot3StatsSQETestErrors, cIcmpInDestUnPort=cIcmpInDestUnPort, cIcmpInDestUnHostProhib=cIcmpInDestUnHostProhib, dot3StatsLateCollisions=dot3StatsLateCollisions, cIcmpOutDestUnHostProhib=cIcmpOutDestUnHostProhib, cConfigTcp=cConfigTcp, ifExtnsTable=ifExtnsTable, cLoginRemote=cLoginRemote, cIcmpInDestUnHostTos=cIcmpInDestUnHostTos, cSnmpCommunityTable=cSnmpCommunityTable, cOperID=cOperID, cIpNetToMediaTable=cIpNetToMediaTable, cIp=cIp, cPenril=cPenril, cIcmpOutDestUnHostUnknown=cIcmpOutDestUnHostUnknown, cIcmp=cIcmp, cIpInCSErrors=cIpInCSErrors, private=private, dot3=dot3, cConstallationBufferDataLength=cConstallationBufferDataLength, cBranchTargetCache=cBranchTargetCache, ifExtnsPromiscuous=ifExtnsPromiscuous, cIpNetToMediaInNoArpOnIf=cIpNetToMediaInNoArpOnIf, cProducts=cProducts, cIcmpInDestUnSrcIsolated=cIcmpInDestUnSrcIsolated, cProxyLb0=cProxyLb0, cDot3RcvOflo=cDot3RcvOflo, cConfigAtIf=cConfigAtIf, cOperStatus=cOperStatus, cConstellationInstructionRam=cConstellationInstructionRam, dot3MacSubLayerStatus=dot3MacSubLayerStatus, dot3StatsMultipleCollisionFrames=dot3StatsMultipleCollisionFrames, cIcmpInRedirectHost=cIcmpInRedirectHost, cNodeByHashBridge=cNodeByHashBridge, cThreeComMSH=cThreeComMSH, cNodeByAddressEntry=cNodeByAddressEntry, cOperIndex=cOperIndex, cIpTTLZero=cIpTTLZero, dot3ChipSetAMD79900=dot3ChipSetAMD79900, cDot3=cDot3, cDatabil=cDatabil, cIpInLenErrors=cIpInLenErrors, dot3StatsExcessiveDeferrals=dot3StatsExcessiveDeferrals, cHardwareStatusStatus=cHardwareStatusStatus, dot3StatsDeferredTransmissions=dot3StatsDeferredTransmissions, cIpNetToMediaIns=cIpNetToMediaIns, cConfigLan=cConfigLan, cIcmpOutDestUnNetTos=cIcmpOutDestUnNetTos, cIpAddress=cIpAddress, cAuriga=cAuriga, ifExtnsIfIndex=ifExtnsIfIndex, cConfigSerChan=cConfigSerChan, cUdpNoChecksum=cUdpNoChecksum, cIcmpInRedirectNet=cIcmpInRedirectNet, cDot3Startless=cDot3Startless, cLoginIndex=cLoginIndex, cConstellation=cConstellation, cMonitorSystem=cMonitorSystem, dot3StatsInternalMacTransmitErrors=dot3StatsInternalMacTransmitErrors, cCarinaBnc=cCarinaBnc, cDot3Index=cDot3Index, cTelnetNegotiate=cTelnetNegotiate, cMonitorPhysInterfaces=cMonitorPhysInterfaces, cDot3XmitFailure=cDot3XmitFailure, cConstellationGlobalDataRam=cConstellationGlobalDataRam, cDuPont=cDuPont, cIcmpInRedirectNetTos=cIcmpInRedirectNetTos, cIcmpOutParmProbMissingOpt=cIcmpOutParmProbMissingOpt, cUdp=cUdp, cFlashIpAddress=cFlashIpAddress, cIpNetToMediaInResponses=cIpNetToMediaInResponses, cIpNetToMediaComplete=cIpNetToMediaComplete, cConfigHostTable=cConfigHostTable, cDiagnostics=cDiagnostics, cOperAcctTable=cOperAcctTable, cProxyLb1=cProxyLb1, enterprises=enterprises, cHardwareStatusRevision=cHardwareStatusRevision, cCarinaAui=cCarinaAui, cErrorLogTable=cErrorLogTable, cOperPriv=cOperPriv, cLocalTime=cLocalTime, cClearErrorLog=cClearErrorLog, cOperAcctEntry=cOperAcctEntry, cDot3TxonDisconnect=cDot3TxonDisconnect, cFlashFileName=cFlashFileName, cCarina=cCarina, cDot3Endless=cDot3Endless, cEtherSWQIndex=cEtherSWQIndex, dot3StatsFrameTooLongs=dot3StatsFrameTooLongs, cLittleDipper=cLittleDipper, cIcmpOutTimeExcTTL=cIcmpOutTimeExcTTL, cIpNetToMediaAgeOuts=cIpNetToMediaAgeOuts, ifExtnsRevWare=ifExtnsRevWare, ifExtnsChipSet=ifExtnsChipSet, cExper=cExper, cInterfaces=cInterfaces, cIcmpOutDestUnHost=cIcmpOutDestUnHost, cConfigTelnet=cConfigTelnet, ifExtnsRcvAddrStatus=ifExtnsRcvAddrStatus, cRestartSystem=cRestartSystem, cSnmpCommunityIf=cSnmpCommunityIf, cConfigWideAreaGroups=cConfigWideAreaGroups, cIcmpOutDestUnFragNeeded=cIcmpOutDestUnFragNeeded, snmp=snmp, cNodeByHashStatus=cNodeByHashStatus, cResetNovram=cResetNovram, cIcmpOutDestUnSourceRoute=cIcmpOutDestUnSourceRoute, cConfigPropagateLists=cConfigPropagateLists, dot3StatsInternalMacReceiveErrors=dot3StatsInternalMacReceiveErrors, cIcmpInParmProbMissingOpt=cIcmpInParmProbMissingOpt, cIcmpOutDestUnNetUnknown=cIcmpOutDestUnNetUnknown, cSnmpCommunities=cSnmpCommunities, cSnmp=cSnmp, cTcpStats=cTcpStats, cIcmpInTimeExcReAsm=cIcmpInTimeExcReAsm, Timeout=Timeout, cDuPontAui=cDuPontAui, dot3Index=dot3Index, cNodeByHashIndex=cNodeByHashIndex, cThreeCom=cThreeCom, dot3MulticastReceiveStatus=dot3MulticastReceiveStatus, mib_2=mib_2, cDot3RxonDisconnect=cDot3RxonDisconnect, cIpNetToMediaInLenErrs=cIpNetToMediaInLenErrs, cConfigAppleTalk=cConfigAppleTalk, cIcmpInDestUnFragNeeded=cIcmpInDestUnFragNeeded, cIcmpStats=cIcmpStats, cConfigIpxBridgeIf=cConfigIpxBridgeIf, cIpxStats=cIpxStats, cConfigBridge=cConfigBridge, cSnmpCommunityIndex=cSnmpCommunityIndex, dot3Table=dot3Table, cConfSysInfo=cConfSysInfo, cIpNetToMediaRefTime=cIpNetToMediaRefTime, cConfOperAcct=cConfOperAcct, cMonitor=cMonitor, cDot3Table=cDot3Table, ifExtnsRcvAddrTable=ifExtnsRcvAddrTable, cConfigSystem=cConfigSystem, cConstellationInitialBuffers=cConstellationInitialBuffers, cConfigIpxRouter=cConfigIpxRouter, cIpNetToMediaInRequests=cIpNetToMediaInRequests, cIpNetToMediaOutRequests=cIpNetToMediaOutRequests, cIcmpOutRedirectHostTos=cIcmpOutRedirectHostTos, dot1dBridge=dot1dBridge, cIpInVersionErrors=cIpInVersionErrors, cIpNetToMediaInIp=cIpNetToMediaInIp, cAtRouterStats=cAtRouterStats, cConfig=cConfig, cIpRoutingStats=cIpRoutingStats, cProxyLr=cProxyLr, cIpNetToMediaOutReplys=cIpNetToMediaOutReplys, cNodeByAddressTable=cNodeByAddressTable, cIcmpInDestUnNetUnknown=cIcmpInDestUnNetUnknown, transmission=transmission, cIcmpOutTimeExcReAsm=cIcmpOutTimeExcReAsm, cIpNetToMedia=cIpNetToMedia, dot3TestTdrValue=dot3TestTdrValue, cLoginLocal=cLoginLocal, cDot3MauDisconnect=cDot3MauDisconnect, cIpNetToMediaTableSize=cIpNetToMediaTableSize, cIcmpInUnkTypes=cIcmpInUnkTypes, cNodeByAddressPort=cNodeByAddressPort, cConfigLogicalBridge=cConfigLogicalBridge, cIpNetToMediaInProxyOks=cIpNetToMediaInProxyOks, cMonitorIpxRouter=cMonitorIpxRouter, cHardwareStatusContents=cHardwareStatusContents, cTcpKeepalive=cTcpKeepalive, dot3StatsCarrierSenseErrors=dot3StatsCarrierSenseErrors, cWanStats=cWanStats, interfaces=interfaces, cMonitorProto=cMonitorProto, PhysAddress=PhysAddress, cProxyLb2=cProxyLb2, cIcmpOutDestUnNet=cIcmpOutDestUnNet, cIcmpInRedirectHostTos=cIcmpInRedirectHostTos, cDot3MerrDisconnect=cDot3MerrDisconnect, cProxyLb=cProxyLb, cIpNetToMediaNetAddress=cIpNetToMediaNetAddress, cIcmpOutDestUnProtocol=cIcmpOutDestUnProtocol, cLoginEntry=cLoginEntry, cErrorLogEntry=cErrorLogEntry, cIcmpOutRedirectNetTos=cIcmpOutRedirectNetTos, cSnmpInCommunityMessages=cSnmpInCommunityMessages, cDot3Entry=cDot3Entry, cIpNetToMediaInIpTrailers=cIpNetToMediaInIpTrailers, cLocalCtpMode=cLocalCtpMode, cIpReasmTimeOuts=cIpReasmTimeOuts, udp=udp, dot3TxEnabled=dot3TxEnabled, cSnmpCommunityTrapAddress=cSnmpCommunityTrapAddress, cDot3Disables=cDot3Disables, cDot3Babbles=cDot3Babbles, cProxyLb3=cProxyLb3, cHardwareStatusTable=cHardwareStatusTable, dot3StatsEntry=dot3StatsEntry, dot3StatsOutOfRangeLengthFields=dot3StatsOutOfRangeLengthFields, cIcmpInLengthErrors=cIcmpInLengthErrors, cOperPasswd=cOperPasswd, cHelloStats=cHelloStats, cRipStats=cRipStats, cTcp=cTcp, cIcmpOutRedirectHost=cIcmpOutRedirectHost, dot3StatsAlignmentErrors=dot3StatsAlignmentErrors, newRoot=newRoot, DisplayString=DisplayString, cIpNetToMediaReqBadAddrs=cIpNetToMediaReqBadAddrs, cHardwareStatusEntry=cHardwareStatusEntry, cMonitorBridges=cMonitorBridges, dot3StatsTable=dot3StatsTable, cUdpBadCheckSum=cUdpBadCheckSum, cEtherSWQEntry=cEtherSWQEntry, cConfigFlashDnld=cConfigFlashDnld, cMonitorLoginHistory=cMonitorLoginHistory, egp=egp, cMonitorHeapStats=cMonitorHeapStats, cIpNetToMediaInNotEther=cIpNetToMediaInNotEther, cConfigNetProtocol=cConfigNetProtocol, cIcmpOutDestUnHostTos=cIcmpOutDestUnHostTos, cIpNetToMediaInSourceBcast=cIpNetToMediaInSourceBcast, cErrorLogIndex=cErrorLogIndex, ifExtnsMulticastsReceivedOks=ifExtnsMulticastsReceivedOks, cHardwareStatusMacAddr=cHardwareStatusMacAddr, cDot3XmitBuffErr=cDot3XmitBuffErr, cNodeByHashBucket=cNodeByHashBucket, cUdpBadLength=cUdpBadLength, cSnmpCommunityAccess=cSnmpCommunityAccess, cSnmpCommunityEntry=cSnmpCommunityEntry, cHardwareStatusSlot=cHardwareStatusSlot, cIpNetToMediaInDups=cIpNetToMediaInDups, cIpNetToMediaCompleteTimeOut=cIpNetToMediaCompleteTimeOut, tcp=tcp, cIpNetToMediaIfIndex=cIpNetToMediaIfIndex, ifExtnsRcvAddress=ifExtnsRcvAddress)
mibBuilder.exportSymbols("LBHUB-MSH4PTBRDG-MIB", cIcmpInDestUnNetTos=cIcmpInDestUnNetTos, cProxyLr0=cProxyLr0, cTransmission=cTransmission, ifExtensions=ifExtensions, ifExtnsMulticastsTransmittedOks=ifExtnsMulticastsTransmittedOks, cNodeByAddressAddr=cNodeByAddressAddr, cConfigIpxRouterFilters=cConfigIpxRouterFilters, cIpStats=cIpStats, cIpNetToMediaNoResponses=cIpNetToMediaNoResponses, cIcmpOutDestUnSrcIsolated=cIcmpOutDestUnSrcIsolated, ifExtnsRcvAddrEntry=ifExtnsRcvAddrEntry, dot3Entry=dot3Entry, icmp=icmp, cRemoteCtpMode=cRemoteCtpMode, dot3ChipSetAMD7990=dot3ChipSetAMD7990, cIcmpOutDestUnNetProhib=cIcmpOutDestUnNetProhib, dot3StatsExcessiveCollisions=dot3StatsExcessiveCollisions, cNodeByHashEntry=cNodeByHashEntry, ifExtnsEntry=ifExtnsEntry, cFlashBootFlag=cFlashBootFlag, topologyChange=topologyChange, cEgpStats=cEgpStats, cHardwareStatusIndex=cHardwareStatusIndex, cMonitorAtRouter=cMonitorAtRouter, cDot3RcvBuffErr=cDot3RcvBuffErr, cConfigWan=cConfigWan, cEtherSWQMaxSize=cEtherSWQMaxSize, cIpNetToMediaProxyRespond=cIpNetToMediaProxyRespond, cPenr=cPenr, cUdpOtherErrors=cUdpOtherErrors, cDatability=cDatability, cConfigSoftwareQueues=cConfigSoftwareQueues, cMonitorSystemInfo=cMonitorSystemInfo, cIcmpInDestUnSourceRoute=cIcmpInDestUnSourceRoute, dot3StatsFCSErrors=dot3StatsFCSErrors, cTelnetPort=cTelnetPort, cSnmpCommunity=cSnmpCommunity, cLoginTable=cLoginTable, cBridgeStatsAveraging=cBridgeStatsAveraging, cNodeByAddressStatus=cNodeByAddressStatus, cIpNetToMediaInUnkProtos=cIpNetToMediaInUnkProtos, ifExtnsBroadcastsReceivedOks=ifExtnsBroadcastsReceivedOks, dot3StatsSingleCollisionFrames=dot3StatsSingleCollisionFrames, cConfigTwp=cConfigTwp, cIpNetToMediaUseTrailers=cIpNetToMediaUseTrailers, cHardwareStatusSerialNo=cHardwareStatusSerialNo, cStdExtensions=cStdExtensions, cIcmpInDestUnHost=cIcmpInDestUnHost, cConfigSnmp=cConfigSnmp, cErrorLogMessage=cErrorLogMessage, cLocalDate=cLocalDate, cLoginFails=cLoginFails, cIpNetToMediaEntry=cIpNetToMediaEntry, ifExtnsBroadcastsTransmittedOks=ifExtnsBroadcastsTransmittedOks, cIcmpOutDestUnPort=cIcmpOutDestUnPort, cIcmpOutRedirectNet=cIcmpOutRedirectNet, cSnmpCommunityTrapPort=cSnmpCommunityTrapPort, ip=ip, cConstellationFastDataRam=cConstellationFastDataRam, system=system, cMonitorIpRouter=cMonitorIpRouter, cNodeByHashPort=cNodeByHashPort, dot3ChipSets=dot3ChipSets, cConfigIpRouter=cConfigIpRouter, cConfigEther=cConfigEther, cUdpHdrDrops=cUdpHdrDrops, dot3InitializeMac=dot3InitializeMac, cNodeByHashTable=cNodeByHashTable, cIpNetToMediaInCompleteTimeOut=cIpNetToMediaInCompleteTimeOut, cConfigAcceptLists=cConfigAcceptLists, cNodeByHashAddress=cNodeByHashAddress, cIcmpInTimeExcTTL=cIcmpInTimeExcTTL, cNodeByAddressBridge=cNodeByAddressBridge, cDot3XmitUflo=cDot3XmitUflo, cIcmpInChecksumErrors=cIcmpInChecksumErrors)
