#
# PySNMP MIB module CAPWAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CAPWAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:29:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Unsigned32, ObjectIdentity, MibIdentifier, NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, iso, TimeTicks, mib_2, IpAddress, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Unsigned32", "ObjectIdentity", "MibIdentifier", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "iso", "TimeTicks", "mib-2", "IpAddress", "Bits", "Gauge32")
TruthValue, TimeStamp, DisplayString, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TimeStamp", "DisplayString", "TextualConvention", "MacAddress")
capwapMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 999901))
capwapMIB.setRevisions(('2007-07-31 00:00',))
if mibBuilder.loadTexts: capwapMIB.setLastUpdated('200707310000Z')
if mibBuilder.loadTexts: capwapMIB.setOrganization('IETF CAPWAP working Group')
class CapwapWTPId(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class CapwapStationId(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class CapwapRadioId(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class CapwapWTPTunnelMode(TextualConvention, Integer32):
    reference = 'Section 4.6.41. of CAPWAP Protocol Specification, RFC xxx.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("localBridging", 1), ("dot3Tunnel", 2), ("nativeTunnel", 3))

class CapwapWTPMACType(TextualConvention, Integer32):
    reference = 'Section 4.6.44. of CAPWAP Protocol Specification, RFC xxx.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("localMAC", 1), ("splitMAC", 2))

class CapwapWTPRadioTemplateIfIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class CapwapChannelType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("data", 1), ("control", 2))

class CapwapWTPAuthenMethod(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 8))
    namedValues = NamedValues(("clear", 1), ("x509", 2), ("psk", 3), ("other", 8))

capwapObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 999901, 1))
capwapConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 999901, 2))
capwapNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 999901, 0))
capwapObjectState = MibIdentifier((1, 3, 6, 1, 2, 1, 999901, 1, 1))
capwapObjectsStats = MibIdentifier((1, 3, 6, 1, 2, 1, 999901, 1, 2))
capwapNotifyVarObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 999901, 1, 3))
capwapACState = MibIdentifier((1, 3, 6, 1, 2, 1, 999901, 1, 1, 1))
capwapACWTPSessions = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapACWTPSessions.setStatus('current')
capwapACWTPSessionsLimit = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapACWTPSessionsLimit.setStatus('current')
capwapACStationSessions = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapACStationSessions.setStatus('current')
capwapACStationSessionsLimit = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapACStationSessionsLimit.setStatus('current')
capwapACDataChannelSecOptions = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapACDataChannelSecOptions.setStatus('current')
capwapACWTPAuthenOptions = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapACWTPAuthenOptions.setStatus('current')
capwapACHwVersion = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapACHwVersion.setStatus('current')
capwapACSwVersion = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapACSwVersion.setStatus('current')
capwapWTPFallbackEnable = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 1, 1, 9), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capwapWTPFallbackEnable.setStatus('current')
capwapWTPACNameList = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 1, 1, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capwapWTPACNameList.setStatus('current')
capwapMaxFailedDTLSSessionRetry = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 1, 1, 11), Unsigned32().clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapMaxFailedDTLSSessionRetry.setStatus('current')
capwapWTPIdleTimeout = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 1, 1, 12), Unsigned32().clone(300)).setUnits('kbtyes').setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPIdleTimeout.setStatus('current')
capwapWTPMaxDiscoveries = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 1, 1, 13), Unsigned32().clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPMaxDiscoveries.setStatus('current')
capwapWTPMaxRetransmit = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 1, 1, 14), Unsigned32().clone(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPMaxRetransmit.setStatus('current')
capwapWTPReportInterval = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 1, 1, 15), Unsigned32().clone(120)).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPReportInterval.setStatus('current')
capwapWTPStateTable = MibTable((1, 3, 6, 1, 2, 1, 999901, 1, 1, 2), )
if mibBuilder.loadTexts: capwapWTPStateTable.setStatus('current')
capwapWTPStateEntry = MibTableRow((1, 3, 6, 1, 2, 1, 999901, 1, 1, 2, 1), ).setIndexNames((0, "CAPWAP-MIB", "capwapWTPId"))
if mibBuilder.loadTexts: capwapWTPStateEntry.setStatus('current')
capwapWTPId = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 2, 1, 1), CapwapWTPId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: capwapWTPId.setStatus('current')
capwapWTPIPAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPIPAddress.setStatus('current')
capwapWTPSerialId = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPSerialId.setStatus('current')
capwapWTPState = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dtls", 1), ("join", 2), ("image", 3), ("configure", 4), ("run", 5), ("clear", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPState.setStatus('current')
capwapWTPTable = MibTable((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3), )
if mibBuilder.loadTexts: capwapWTPTable.setStatus('current')
capwapWTPEntry = MibTableRow((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1), ).setIndexNames((0, "CAPWAP-MIB", "capwapWTPCurrId"))
if mibBuilder.loadTexts: capwapWTPEntry.setStatus('current')
capwapWTPCurrId = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 1), CapwapWTPId())
if mibBuilder.loadTexts: capwapWTPCurrId.setStatus('current')
capwapWTPName = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capwapWTPName.setStatus('current')
capwapWTPLocation = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capwapWTPLocation.setStatus('current')
capwapWTPManufacturerId = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 4), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPManufacturerId.setStatus('current')
capwapWTPModelId = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPModelId.setStatus('current')
capwapWTPBoardId = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPBoardId.setStatus('current')
capwapWTPBoardRevision = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPBoardRevision.setStatus('current')
capwapWTPBaseMACAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 8), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPBaseMACAddress.setStatus('current')
capwapWTPTunnelModeOptions = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 9), CapwapWTPTunnelMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPTunnelModeOptions.setStatus('current')
capwapWTPMACTypeOptions = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 10), CapwapWTPMACType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPMACTypeOptions.setStatus('current')
capwapWTPDiscoveryType = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("staticConfig", 2), ("dhcp", 3), ("dns", 4), ("acRef", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPDiscoveryType.setStatus('current')
capwapWTPRadiosInUseNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPRadiosInUseNumber.setStatus('current')
capwapWTPRadioNumLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPRadioNumLimit.setStatus('current')
capwapWTPSwVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPSwVersion.setStatus('current')
capwapWTPSwSize = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 15), Unsigned32()).setUnits('kbtyes').setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPSwSize.setStatus('current')
capwapWTPHwVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPHwVersion.setStatus('current')
capwapWTPStaticIPEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 17), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capwapWTPStaticIPEnable.setStatus('current')
capwapWTPStaticIP = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 18), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capwapWTPStaticIP.setStatus('current')
capwapWTPNetmask = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 19), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capwapWTPNetmask.setStatus('current')
capwapWTPGateway = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 3, 1, 20), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capwapWTPGateway.setStatus('current')
capwapRadioTable = MibTable((1, 3, 6, 1, 2, 1, 999901, 1, 1, 4), )
if mibBuilder.loadTexts: capwapRadioTable.setStatus('current')
capwapRadioEntry = MibTableRow((1, 3, 6, 1, 2, 1, 999901, 1, 1, 4, 1), ).setIndexNames((0, "CAPWAP-MIB", "capwapWTPCurrId"), (0, "CAPWAP-MIB", "capwapRadioId"))
if mibBuilder.loadTexts: capwapRadioEntry.setStatus('current')
capwapRadioId = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 4, 1, 1), CapwapRadioId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: capwapRadioId.setStatus('current')
capwapWTPRadioTemplateIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 4, 1, 2), CapwapWTPRadioTemplateIfIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capwapWTPRadioTemplateIfIndex.setStatus('current')
capwapWirelessBinding = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("dot11", 2), ("dot16", 3), ("epc", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWirelessBinding.setStatus('current')
capwapAdminStatusEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 4, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capwapAdminStatusEnable.setStatus('current')
capwapOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 4, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapOperStatus.setStatus('current')
capwapStationTable = MibTable((1, 3, 6, 1, 2, 1, 999901, 1, 1, 5), )
if mibBuilder.loadTexts: capwapStationTable.setStatus('current')
capwapStationEntry = MibTableRow((1, 3, 6, 1, 2, 1, 999901, 1, 1, 5, 1), ).setIndexNames((0, "CAPWAP-MIB", "capwapWTPCurrId"), (0, "CAPWAP-MIB", "capwapRadioId"), (0, "CAPWAP-MIB", "capwapStationId"))
if mibBuilder.loadTexts: capwapStationEntry.setStatus('current')
capwapStationId = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 5, 1, 1), CapwapStationId())
if mibBuilder.loadTexts: capwapStationId.setStatus('current')
capwapStationAddedTime = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 5, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapStationAddedTime.setStatus('current')
capwapStationVlanName = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 1, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapStationVlanName.setStatus('current')
capwapWTPRebootStatsTable = MibTable((1, 3, 6, 1, 2, 1, 999901, 1, 2, 1), )
if mibBuilder.loadTexts: capwapWTPRebootStatsTable.setStatus('current')
capwapWTPRebootStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 999901, 1, 2, 1, 1), ).setIndexNames((0, "CAPWAP-MIB", "capwapWTPCurrId"))
if mibBuilder.loadTexts: capwapWTPRebootStatsEntry.setStatus('current')
capwapWTPRebootCount = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPRebootCount.setStatus('current')
capwapWTPInitCount = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPInitCount.setStatus('current')
capwapWTPLinkFailureCount = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPLinkFailureCount.setStatus('current')
capwapWTPSwFailureCount = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPSwFailureCount.setStatus('current')
capwapWTPHwFailureCount = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPHwFailureCount.setStatus('current')
capwapWTPOtherFailureCount = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPOtherFailureCount.setStatus('current')
capwapWTPUnknownFailureCount = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPUnknownFailureCount.setStatus('current')
capwapWTPLastFailureType = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 255))).clone(namedValues=NamedValues(("notSupport", 1), ("acInit", 2), ("linkfailure", 3), ("swFailure", 4), ("hwFailure", 5), ("other", 6), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapWTPLastFailureType.setStatus('current')
capwapRadioStatsTable = MibTable((1, 3, 6, 1, 2, 1, 999901, 1, 2, 2), )
if mibBuilder.loadTexts: capwapRadioStatsTable.setStatus('current')
capwapRadioStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 999901, 1, 2, 2, 1), ).setIndexNames((0, "CAPWAP-MIB", "capwapWTPCurrId"), (0, "CAPWAP-MIB", "capwapRadioId"))
if mibBuilder.loadTexts: capwapRadioStatsEntry.setStatus('current')
capwapRadioResetCount = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapRadioResetCount.setStatus('current')
capwapRadioSwFailCount = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapRadioSwFailCount.setStatus('current')
capwapRadioHwFailCount = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapRadioHwFailCount.setStatus('current')
capwapRadioOtherFailCount = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapRadioOtherFailCount.setStatus('current')
capwapRadioUnknownFailCount = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapRadioUnknownFailCount.setStatus('current')
capwapRadioConfigUpdateCount = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapRadioConfigUpdateCount.setStatus('current')
capwapRadioChannelChangeCount = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapRadioChannelChangeCount.setStatus('current')
capwapRadioBandChangeCount = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapRadioBandChangeCount.setStatus('current')
capwapRadioCurrentNoiseFloor = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 2, 1, 9), Integer32()).setUnits('dbm').setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapRadioCurrentNoiseFloor.setStatus('current')
capwapRadioDecryptErrorCount = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapRadioDecryptErrorCount.setStatus('current')
capwapRadioTxQueueLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapRadioTxQueueLevel.setStatus('current')
capwapRadioRFLinkFramesPerSec = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapRadioRFLinkFramesPerSec.setStatus('current')
capwapRadioLastFailType = MibTableColumn((1, 3, 6, 1, 2, 1, 999901, 1, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("notSupport", 1), ("swFailure", 2), ("hwFailure", 3), ("otherFailure", 4), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capwapRadioLastFailType.setStatus('current')
capwapChannelUp = NotificationType((1, 3, 6, 1, 2, 1, 999901, 0, 1)).setObjects(("CAPWAP-MIB", "capwapWTPId"), ("CAPWAP-MIB", "capwapChannelType"), ("CAPWAP-MIB", "capwapWTPAuthenMethod"))
if mibBuilder.loadTexts: capwapChannelUp.setStatus('current')
capwapChannelDown = NotificationType((1, 3, 6, 1, 2, 1, 999901, 0, 2)).setObjects(("CAPWAP-MIB", "capwapWTPId"), ("CAPWAP-MIB", "capwapChannelDownReason"))
if mibBuilder.loadTexts: capwapChannelDown.setStatus('current')
capwapDecryptErrorReport = NotificationType((1, 3, 6, 1, 2, 1, 999901, 0, 3)).setObjects(("CAPWAP-MIB", "capwapWTPId"), ("CAPWAP-MIB", "capwapRadioId"), ("CAPWAP-MIB", "capwapIdEntryNum"), ("CAPWAP-MIB", "capwapStationIdList"))
if mibBuilder.loadTexts: capwapDecryptErrorReport.setStatus('current')
capwapJoinFailure = NotificationType((1, 3, 6, 1, 2, 1, 999901, 0, 4)).setObjects(("CAPWAP-MIB", "capwapWTPId"), ("CAPWAP-MIB", "capwapJoinFailureReason"))
if mibBuilder.loadTexts: capwapJoinFailure.setStatus('current')
capwapImageUpgradeFailure = NotificationType((1, 3, 6, 1, 2, 1, 999901, 0, 5)).setObjects(("CAPWAP-MIB", "capwapWTPId"), ("CAPWAP-MIB", "capwapImageFailureReason"))
if mibBuilder.loadTexts: capwapImageUpgradeFailure.setStatus('current')
capwapConfigMsgError = NotificationType((1, 3, 6, 1, 2, 1, 999901, 0, 6)).setObjects(("CAPWAP-MIB", "capwapWTPId"), ("CAPWAP-MIB", "capwapConfigMsgErrorType"), ("CAPWAP-MIB", "capwapMsgErrorElements"))
if mibBuilder.loadTexts: capwapConfigMsgError.setStatus('current')
capwapRadioOperableStatus = NotificationType((1, 3, 6, 1, 2, 1, 999901, 0, 7)).setObjects(("CAPWAP-MIB", "capwapWTPId"), ("CAPWAP-MIB", "capwapRadioId"), ("CAPWAP-MIB", "capwapRadioOperStatusFlag"), ("CAPWAP-MIB", "capwapRadioFailureReason"))
if mibBuilder.loadTexts: capwapRadioOperableStatus.setStatus('current')
capwapWTPAuthenticationFailure = NotificationType((1, 3, 6, 1, 2, 1, 999901, 0, 8)).setObjects(("CAPWAP-MIB", "capwapWTPId"), ("CAPWAP-MIB", "capwapChannelType"), ("CAPWAP-MIB", "capwapWTPAuthenMethod"), ("CAPWAP-MIB", "capwapWTPAuthenFailureReason"))
if mibBuilder.loadTexts: capwapWTPAuthenticationFailure.setStatus('current')
capwapChannelType = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 3, 1), CapwapChannelType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: capwapChannelType.setStatus('current')
capwapWTPAuthenMethod = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 3, 2), CapwapWTPAuthenMethod()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: capwapWTPAuthenMethod.setStatus('current')
capwapChannelDownReason = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("timeout", 1), ("rekeyfailure", 2), ("apReboot", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: capwapChannelDownReason.setStatus('current')
capwapIdEntryNum = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 3, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: capwapIdEntryNum.setStatus('current')
capwapStationIdList = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 3, 5), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: capwapStationIdList.setStatus('current')
capwapWTPAuthenFailureReason = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 8))).clone(namedValues=NamedValues(("keyMismatch", 1), ("invalidCA", 2), ("micError", 3), ("timeout", 4), ("unknown", 8)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: capwapWTPAuthenFailureReason.setStatus('current')
capwapRadioOperStatusFlag = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("operable", 1), ("inoperable", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: capwapRadioOperStatusFlag.setStatus('current')
capwapRadioFailureReason = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 8))).clone(namedValues=NamedValues(("hwError", 1), ("swError", 2), ("adminSet", 3), ("unknown", 8)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: capwapRadioFailureReason.setStatus('current')
capwapJoinFailureReason = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unspecified", 1), ("resDepletion", 2), ("unknownSource", 3), ("incorrectData", 4), ("sessionInUse", 5), ("notSupportHw", 6), ("notSupportBinding", 7)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: capwapJoinFailureReason.setStatus('current')
capwapImageFailureReason = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("invalidChecksum", 1), ("invalidLength", 2), ("other", 3), ("inUse", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: capwapImageFailureReason.setStatus('current')
capwapConfigMsgErrorType = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknownElement", 1), ("unsupportedElement", 2), ("unknownValue", 3), ("unsupportedValue", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: capwapConfigMsgErrorType.setStatus('current')
capwapMsgErrorElements = MibScalar((1, 3, 6, 1, 2, 1, 999901, 1, 3, 12), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: capwapMsgErrorElements.setStatus('current')
capwapGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 999901, 2, 1))
capwapCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 999901, 2, 2))
capwapACNodeGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 999901, 2, 1, 1)).setObjects(("CAPWAP-MIB", "capwapACWTPSessions"), ("CAPWAP-MIB", "capwapACWTPSessionsLimit"), ("CAPWAP-MIB", "capwapACStationSessions"), ("CAPWAP-MIB", "capwapACStationSessionsLimit"), ("CAPWAP-MIB", "capwapACDataChannelSecOptions"), ("CAPWAP-MIB", "capwapACWTPAuthenOptions"), ("CAPWAP-MIB", "capwapACHwVersion"), ("CAPWAP-MIB", "capwapACSwVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    capwapACNodeGroup = capwapACNodeGroup.setStatus('current')
capwapWTPStateGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 999901, 2, 1, 2)).setObjects(("CAPWAP-MIB", "capwapWTPIPAddress"), ("CAPWAP-MIB", "capwapWTPSerialId"), ("CAPWAP-MIB", "capwapWTPState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    capwapWTPStateGroup = capwapWTPStateGroup.setStatus('current')
capwapWTPsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 999901, 2, 1, 3)).setObjects(("CAPWAP-MIB", "capwapWTPFallbackEnable"), ("CAPWAP-MIB", "capwapWTPACNameList"), ("CAPWAP-MIB", "capwapMaxFailedDTLSSessionRetry"), ("CAPWAP-MIB", "capwapWTPIdleTimeout"), ("CAPWAP-MIB", "capwapWTPMaxDiscoveries"), ("CAPWAP-MIB", "capwapWTPMaxRetransmit"), ("CAPWAP-MIB", "capwapWTPReportInterval"), ("CAPWAP-MIB", "capwapWTPName"), ("CAPWAP-MIB", "capwapWTPLocation"), ("CAPWAP-MIB", "capwapWTPManufacturerId"), ("CAPWAP-MIB", "capwapWTPModelId"), ("CAPWAP-MIB", "capwapWTPTunnelModeOptions"), ("CAPWAP-MIB", "capwapWTPMACTypeOptions"), ("CAPWAP-MIB", "capwapWTPDiscoveryType"), ("CAPWAP-MIB", "capwapWTPRadiosInUseNumber"), ("CAPWAP-MIB", "capwapWTPRadioNumLimit"), ("CAPWAP-MIB", "capwapWTPSwVersion"), ("CAPWAP-MIB", "capwapWTPSwSize"), ("CAPWAP-MIB", "capwapWTPHwVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    capwapWTPsGroup = capwapWTPsGroup.setStatus('current')
capwapRadiosGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 999901, 2, 1, 4)).setObjects(("CAPWAP-MIB", "capwapWTPRadioTemplateIfIndex"), ("CAPWAP-MIB", "capwapWirelessBinding"), ("CAPWAP-MIB", "capwapAdminStatusEnable"), ("CAPWAP-MIB", "capwapOperStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    capwapRadiosGroup = capwapRadiosGroup.setStatus('current')
capwapStationsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 999901, 2, 1, 5)).setObjects(("CAPWAP-MIB", "capwapStationAddedTime"), ("CAPWAP-MIB", "capwapStationVlanName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    capwapStationsGroup = capwapStationsGroup.setStatus('current')
capwapWTPsPhysicalGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 999901, 2, 1, 6)).setObjects(("CAPWAP-MIB", "capwapWTPBoardId"), ("CAPWAP-MIB", "capwapWTPBoardRevision"), ("CAPWAP-MIB", "capwapWTPBaseMACAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    capwapWTPsPhysicalGroup = capwapWTPsPhysicalGroup.setStatus('current')
capwapWTPsLayer3Group = ObjectGroup((1, 3, 6, 1, 2, 1, 999901, 2, 1, 7)).setObjects(("CAPWAP-MIB", "capwapWTPStaticIPEnable"), ("CAPWAP-MIB", "capwapWTPStaticIP"), ("CAPWAP-MIB", "capwapWTPNetmask"), ("CAPWAP-MIB", "capwapWTPGateway"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    capwapWTPsLayer3Group = capwapWTPsLayer3Group.setStatus('current')
capwapWTPRebootStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 999901, 2, 1, 8)).setObjects(("CAPWAP-MIB", "capwapWTPRebootCount"), ("CAPWAP-MIB", "capwapWTPInitCount"), ("CAPWAP-MIB", "capwapWTPLinkFailureCount"), ("CAPWAP-MIB", "capwapWTPSwFailureCount"), ("CAPWAP-MIB", "capwapWTPHwFailureCount"), ("CAPWAP-MIB", "capwapWTPOtherFailureCount"), ("CAPWAP-MIB", "capwapWTPUnknownFailureCount"), ("CAPWAP-MIB", "capwapWTPLastFailureType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    capwapWTPRebootStatsGroup = capwapWTPRebootStatsGroup.setStatus('current')
capwapRadioStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 999901, 2, 1, 9)).setObjects(("CAPWAP-MIB", "capwapRadioResetCount"), ("CAPWAP-MIB", "capwapRadioSwFailCount"), ("CAPWAP-MIB", "capwapRadioHwFailCount"), ("CAPWAP-MIB", "capwapRadioOtherFailCount"), ("CAPWAP-MIB", "capwapRadioUnknownFailCount"), ("CAPWAP-MIB", "capwapRadioConfigUpdateCount"), ("CAPWAP-MIB", "capwapRadioChannelChangeCount"), ("CAPWAP-MIB", "capwapRadioBandChangeCount"), ("CAPWAP-MIB", "capwapRadioCurrentNoiseFloor"), ("CAPWAP-MIB", "capwapRadioDecryptErrorCount"), ("CAPWAP-MIB", "capwapRadioTxQueueLevel"), ("CAPWAP-MIB", "capwapRadioRFLinkFramesPerSec"), ("CAPWAP-MIB", "capwapRadioLastFailType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    capwapRadioStatsGroup = capwapRadioStatsGroup.setStatus('current')
capwapNofificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 999901, 2, 1, 10)).setObjects(("CAPWAP-MIB", "capwapChannelUp"), ("CAPWAP-MIB", "capwapChannelDown"), ("CAPWAP-MIB", "capwapDecryptErrorReport"), ("CAPWAP-MIB", "capwapJoinFailure"), ("CAPWAP-MIB", "capwapImageUpgradeFailure"), ("CAPWAP-MIB", "capwapConfigMsgError"), ("CAPWAP-MIB", "capwapRadioOperableStatus"), ("CAPWAP-MIB", "capwapWTPAuthenticationFailure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    capwapNofificationGroup = capwapNofificationGroup.setStatus('current')
capwapNotifyVarGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 999901, 2, 1, 11)).setObjects(("CAPWAP-MIB", "capwapWTPId"), ("CAPWAP-MIB", "capwapRadioId"), ("CAPWAP-MIB", "capwapChannelType"), ("CAPWAP-MIB", "capwapWTPAuthenMethod"), ("CAPWAP-MIB", "capwapChannelDownReason"), ("CAPWAP-MIB", "capwapIdEntryNum"), ("CAPWAP-MIB", "capwapStationIdList"), ("CAPWAP-MIB", "capwapWTPAuthenFailureReason"), ("CAPWAP-MIB", "capwapRadioOperStatusFlag"), ("CAPWAP-MIB", "capwapRadioFailureReason"), ("CAPWAP-MIB", "capwapJoinFailureReason"), ("CAPWAP-MIB", "capwapImageFailureReason"), ("CAPWAP-MIB", "capwapConfigMsgErrorType"), ("CAPWAP-MIB", "capwapMsgErrorElements"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    capwapNotifyVarGroup = capwapNotifyVarGroup.setStatus('current')
capwapFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 999901, 2, 2, 1)).setObjects(("CAPWAP-MIB", "capwapACNodeGroup"), ("CAPWAP-MIB", "capwapWTPStateGroup"), ("CAPWAP-MIB", "capwapWTPsGroup"), ("CAPWAP-MIB", "capwapRadiosGroup"), ("CAPWAP-MIB", "capwapStationsGroup"), ("CAPWAP-MIB", "capwapWTPsPhysicalGroup"), ("CAPWAP-MIB", "capwapWTPsLayer3Group"), ("CAPWAP-MIB", "capwapWTPRebootStatsGroup"), ("CAPWAP-MIB", "capwapRadioStatsGroup"), ("CAPWAP-MIB", "capwapNofificationGroup"), ("CAPWAP-MIB", "capwapNotifyVarGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    capwapFullCompliance = capwapFullCompliance.setStatus('current')
mibBuilder.exportSymbols("CAPWAP-MIB", capwapACSwVersion=capwapACSwVersion, capwapACState=capwapACState, capwapConformance=capwapConformance, capwapACWTPSessionsLimit=capwapACWTPSessionsLimit, capwapRadioStatsTable=capwapRadioStatsTable, capwapImageUpgradeFailure=capwapImageUpgradeFailure, capwapNotifyVarGroup=capwapNotifyVarGroup, capwapObjects=capwapObjects, capwapStationsGroup=capwapStationsGroup, capwapACDataChannelSecOptions=capwapACDataChannelSecOptions, capwapRadioConfigUpdateCount=capwapRadioConfigUpdateCount, capwapWTPAuthenMethod=capwapWTPAuthenMethod, CapwapWTPRadioTemplateIfIndex=CapwapWTPRadioTemplateIfIndex, capwapStationEntry=capwapStationEntry, capwapACWTPSessions=capwapACWTPSessions, capwapRadioCurrentNoiseFloor=capwapRadioCurrentNoiseFloor, capwapGroups=capwapGroups, capwapNotifyVarObjects=capwapNotifyVarObjects, capwapDecryptErrorReport=capwapDecryptErrorReport, CapwapChannelType=CapwapChannelType, capwapWTPDiscoveryType=capwapWTPDiscoveryType, capwapWTPSerialId=capwapWTPSerialId, capwapWTPHwFailureCount=capwapWTPHwFailureCount, capwapMsgErrorElements=capwapMsgErrorElements, capwapWTPInitCount=capwapWTPInitCount, capwapMIB=capwapMIB, capwapWTPTable=capwapWTPTable, capwapRadioTable=capwapRadioTable, capwapRadioDecryptErrorCount=capwapRadioDecryptErrorCount, capwapIdEntryNum=capwapIdEntryNum, capwapACHwVersion=capwapACHwVersion, capwapWTPACNameList=capwapWTPACNameList, capwapStationIdList=capwapStationIdList, capwapOperStatus=capwapOperStatus, capwapRadioBandChangeCount=capwapRadioBandChangeCount, capwapWTPCurrId=capwapWTPCurrId, PYSNMP_MODULE_ID=capwapMIB, capwapRadioHwFailCount=capwapRadioHwFailCount, capwapACStationSessions=capwapACStationSessions, capwapWTPId=capwapWTPId, capwapRadioStatsGroup=capwapRadioStatsGroup, capwapJoinFailureReason=capwapJoinFailureReason, capwapWTPMaxRetransmit=capwapWTPMaxRetransmit, capwapRadioOtherFailCount=capwapRadioOtherFailCount, capwapWTPMACTypeOptions=capwapWTPMACTypeOptions, capwapStationTable=capwapStationTable, capwapObjectsStats=capwapObjectsStats, capwapWTPHwVersion=capwapWTPHwVersion, capwapWTPGateway=capwapWTPGateway, capwapWTPRebootCount=capwapWTPRebootCount, capwapRadioStatsEntry=capwapRadioStatsEntry, capwapWTPLastFailureType=capwapWTPLastFailureType, capwapWTPBaseMACAddress=capwapWTPBaseMACAddress, capwapACWTPAuthenOptions=capwapACWTPAuthenOptions, capwapWirelessBinding=capwapWirelessBinding, capwapWTPNetmask=capwapWTPNetmask, capwapRadioTxQueueLevel=capwapRadioTxQueueLevel, capwapWTPStaticIPEnable=capwapWTPStaticIPEnable, capwapWTPBoardRevision=capwapWTPBoardRevision, capwapChannelDown=capwapChannelDown, CapwapRadioId=CapwapRadioId, capwapWTPsGroup=capwapWTPsGroup, capwapWTPStaticIP=capwapWTPStaticIP, capwapFullCompliance=capwapFullCompliance, capwapRadioEntry=capwapRadioEntry, capwapRadioLastFailType=capwapRadioLastFailType, capwapWTPModelId=capwapWTPModelId, capwapCompliances=capwapCompliances, capwapWTPState=capwapWTPState, capwapWTPEntry=capwapWTPEntry, CapwapWTPId=CapwapWTPId, capwapWTPLocation=capwapWTPLocation, capwapWTPReportInterval=capwapWTPReportInterval, capwapWTPManufacturerId=capwapWTPManufacturerId, capwapRadioSwFailCount=capwapRadioSwFailCount, capwapWTPSwVersion=capwapWTPSwVersion, capwapStationAddedTime=capwapStationAddedTime, capwapStationId=capwapStationId, capwapWTPUnknownFailureCount=capwapWTPUnknownFailureCount, capwapWTPsPhysicalGroup=capwapWTPsPhysicalGroup, capwapWTPMaxDiscoveries=capwapWTPMaxDiscoveries, capwapRadioOperStatusFlag=capwapRadioOperStatusFlag, capwapWTPStateGroup=capwapWTPStateGroup, capwapRadioRFLinkFramesPerSec=capwapRadioRFLinkFramesPerSec, capwapWTPRadiosInUseNumber=capwapWTPRadiosInUseNumber, capwapWTPRadioTemplateIfIndex=capwapWTPRadioTemplateIfIndex, capwapRadioFailureReason=capwapRadioFailureReason, capwapWTPName=capwapWTPName, CapwapWTPTunnelMode=CapwapWTPTunnelMode, capwapConfigMsgErrorType=capwapConfigMsgErrorType, capwapWTPAuthenFailureReason=capwapWTPAuthenFailureReason, capwapWTPStateTable=capwapWTPStateTable, capwapAdminStatusEnable=capwapAdminStatusEnable, capwapRadioResetCount=capwapRadioResetCount, capwapNotifications=capwapNotifications, capwapWTPsLayer3Group=capwapWTPsLayer3Group, capwapWTPFallbackEnable=capwapWTPFallbackEnable, capwapWTPLinkFailureCount=capwapWTPLinkFailureCount, CapwapWTPAuthenMethod=CapwapWTPAuthenMethod, capwapWTPStateEntry=capwapWTPStateEntry, capwapWTPRebootStatsTable=capwapWTPRebootStatsTable, capwapACStationSessionsLimit=capwapACStationSessionsLimit, capwapChannelUp=capwapChannelUp, capwapWTPIPAddress=capwapWTPIPAddress, capwapStationVlanName=capwapStationVlanName, CapwapStationId=CapwapStationId, capwapMaxFailedDTLSSessionRetry=capwapMaxFailedDTLSSessionRetry, capwapWTPIdleTimeout=capwapWTPIdleTimeout, capwapRadioId=capwapRadioId, capwapWTPTunnelModeOptions=capwapWTPTunnelModeOptions, capwapWTPSwSize=capwapWTPSwSize, capwapObjectState=capwapObjectState, capwapRadioUnknownFailCount=capwapRadioUnknownFailCount, capwapWTPSwFailureCount=capwapWTPSwFailureCount, capwapRadiosGroup=capwapRadiosGroup, capwapRadioChannelChangeCount=capwapRadioChannelChangeCount, capwapChannelDownReason=capwapChannelDownReason, capwapACNodeGroup=capwapACNodeGroup, capwapChannelType=capwapChannelType, capwapNofificationGroup=capwapNofificationGroup, capwapConfigMsgError=capwapConfigMsgError, capwapWTPOtherFailureCount=capwapWTPOtherFailureCount, capwapWTPRebootStatsGroup=capwapWTPRebootStatsGroup, capwapWTPBoardId=capwapWTPBoardId, capwapWTPAuthenticationFailure=capwapWTPAuthenticationFailure, capwapImageFailureReason=capwapImageFailureReason, capwapWTPRebootStatsEntry=capwapWTPRebootStatsEntry, CapwapWTPMACType=CapwapWTPMACType, capwapJoinFailure=capwapJoinFailure, capwapWTPRadioNumLimit=capwapWTPRadioNumLimit, capwapRadioOperableStatus=capwapRadioOperableStatus)
