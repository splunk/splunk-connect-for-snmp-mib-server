#
# PySNMP MIB module HPN-ICF-DOT11-ROAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-DOT11-ROAM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:25:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
hpnicfDot11, = mibBuilder.importSymbols("HPN-ICF-DOT11-REF-MIB", "hpnicfDot11")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, iso, ObjectIdentity, IpAddress, Unsigned32, Gauge32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, NotificationType, Counter64, Bits, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "iso", "ObjectIdentity", "IpAddress", "Unsigned32", "Gauge32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "NotificationType", "Counter64", "Bits", "MibIdentifier", "Counter32")
MacAddress, DisplayString, RowStatus, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "RowStatus", "TextualConvention", "TruthValue")
hpnicfDot11ROAM = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10))
hpnicfDot11ROAM.setRevisions(('2010-08-04 18:00', '2009-05-07 20:00', '2008-07-23 12:00',))
if mibBuilder.loadTexts: hpnicfDot11ROAM.setLastUpdated('201008041800Z')
if mibBuilder.loadTexts: hpnicfDot11ROAM.setOrganization('')
class HpnicfDot11RoamMobileTunnelType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("ipv4", 1), ("ipv6", 2))

class HpnicfDot11RoamAuthMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("none", 1), ("md5", 2))

class HpnicfDot11RoamIACTPStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("init", 1), ("idle", 2), ("joinRequestWait", 3), ("joinResponseWait", 4), ("joinConfirmWait", 5), ("joinError", 6), ("run", 7))

hpnicfDot11RoamCfgGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 1))
hpnicfDot11RoamStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2))
hpnicfDot11RoamStatisGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 3))
hpnicfDot11RoamStatis2Group = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 4))
hpnicfDot11MobGrpTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 1, 1), )
if mibBuilder.loadTexts: hpnicfDot11MobGrpTable.setStatus('current')
hpnicfDot11MobGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-DOT11-ROAM-MIB", "hpnicfDot11MobGrpName"))
if mibBuilder.loadTexts: hpnicfDot11MobGrpEntry.setStatus('current')
hpnicfDot11MobGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 15)))
if mibBuilder.loadTexts: hpnicfDot11MobGrpName.setStatus('current')
hpnicfdot11MobGrpTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 1, 1, 1, 2), HpnicfDot11RoamMobileTunnelType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfdot11MobGrpTunnelType.setStatus('current')
hpnicfDot11MobGrpSrcIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 1, 1, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11MobGrpSrcIPAddr.setStatus('current')
hpnicfDot11MobGrpAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 1, 1, 1, 4), HpnicfDot11RoamAuthMode().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11MobGrpAuthMode.setStatus('current')
hpnicfDot11MobGrpAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11MobGrpAuthKey.setStatus('current')
hpnicfDot11MobGrpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 1, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11MobGrpEnable.setStatus('current')
hpnicfDot11MobGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 1, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11MobGrpRowStatus.setStatus('current')
hpnicfDot11MobGrpMemberTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 1, 2), )
if mibBuilder.loadTexts: hpnicfDot11MobGrpMemberTable.setStatus('current')
hpnicfDot11MobGrpMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11-ROAM-MIB", "hpnicfDot11MobGrpName"), (0, "HPN-ICF-DOT11-ROAM-MIB", "hpnicfDot11MobGrpMemberIpAddr"))
if mibBuilder.loadTexts: hpnicfDot11MobGrpMemberEntry.setStatus('current')
hpnicfDot11MobGrpMemberIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 1, 2, 1, 1), InetAddress())
if mibBuilder.loadTexts: hpnicfDot11MobGrpMemberIpAddr.setStatus('current')
hpnicfDot11MobGrpMemberStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 1, 2, 1, 2), HpnicfDot11RoamIACTPStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11MobGrpMemberStatus.setStatus('current')
hpnicfDot11MobGrpMemberIf = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 1, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11MobGrpMemberIf.setStatus('current')
hpnicfDot11MobGrpMemberUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 1, 2, 1, 4), Integer32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11MobGrpMemberUpTime.setStatus('current')
hpnicfDot11MobGrpMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11MobGrpMemberRowStatus.setStatus('current')
hpnicfDot11RoamInInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 1), )
if mibBuilder.loadTexts: hpnicfDot11RoamInInfoTable.setStatus('current')
hpnicfDot11RoamInInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-DOT11-ROAM-MIB", "hpnicfDot11RoamClientMAC"))
if mibBuilder.loadTexts: hpnicfDot11RoamInInfoEntry.setStatus('current')
hpnicfDot11RoamClientMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfDot11RoamClientMAC.setStatus('current')
hpnicfDot11RoamInClientBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RoamInClientBSSID.setStatus('current')
hpnicfDot11RoamInClientVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RoamInClientVlanID.setStatus('current')
hpnicfDot11RoamInHomeACIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 1, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RoamInHomeACIPType.setStatus('current')
hpnicfDot11RoamInHomeACIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 1, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RoamInHomeACIPAddr.setStatus('current')
hpnicfDot11RoamOutInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 2), )
if mibBuilder.loadTexts: hpnicfDot11RoamOutInfoTable.setStatus('current')
hpnicfDot11RoamOutInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11-ROAM-MIB", "hpnicfDot11RoamClientMAC"))
if mibBuilder.loadTexts: hpnicfDot11RoamOutInfoEntry.setStatus('current')
hpnicfDot11RoamOutClientBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RoamOutClientBSSID.setStatus('current')
hpnicfDot11RoamOutClientVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RoamOutClientVlanID.setStatus('current')
hpnicfDot11RoamOutForeignACIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 2, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RoamOutForeignACIPType.setStatus('current')
hpnicfDot11RoamOutForeignACIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 2, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RoamOutForeignACIPAddr.setStatus('current')
hpnicfDot11RoamOutClientUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 2, 1, 5), Integer32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RoamOutClientUpTime.setStatus('current')
hpnicfDot11RoamTrackTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 3), )
if mibBuilder.loadTexts: hpnicfDot11RoamTrackTable.setStatus('current')
hpnicfDot11RoamTrackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 3, 1), ).setIndexNames((0, "HPN-ICF-DOT11-ROAM-MIB", "hpnicfDot11RoamTrackIndex"))
if mibBuilder.loadTexts: hpnicfDot11RoamTrackEntry.setStatus('current')
hpnicfDot11RoamTrackIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfDot11RoamTrackIndex.setStatus('current')
hpnicfDot11RoamTrackClientMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RoamTrackClientMAC.setStatus('current')
hpnicfDot11RoamTrackBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 3, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RoamTrackBSSID.setStatus('current')
hpnicfDot11RoamTrackUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 3, 1, 4), Integer32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RoamTrackUpTime.setStatus('current')
hpnicfDot11RoamTrackACIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 3, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RoamTrackACIPType.setStatus('current')
hpnicfDot11RoamTrackACIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 2, 3, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RoamTrackACIPAddr.setStatus('current')
hpnicfDot11IntraACRoamingSuccCnt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11IntraACRoamingSuccCnt.setStatus('current')
hpnicfDot11InterACRoamingSuccCnt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11InterACRoamingSuccCnt.setStatus('current')
hpnicfDot11InterACRoamOutSuccCnt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11InterACRoamOutSuccCnt.setStatus('current')
hpnicfDot11IntraACRoamingSuccCnt2 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11IntraACRoamingSuccCnt2.setStatus('current')
hpnicfDot11InterACRoamingSuccCnt2 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11InterACRoamingSuccCnt2.setStatus('current')
hpnicfDot11InterACRoamOutSuccCnt2 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 10, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11InterACRoamOutSuccCnt2.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-DOT11-ROAM-MIB", hpnicfDot11InterACRoamOutSuccCnt2=hpnicfDot11InterACRoamOutSuccCnt2, hpnicfDot11MobGrpSrcIPAddr=hpnicfDot11MobGrpSrcIPAddr, PYSNMP_MODULE_ID=hpnicfDot11ROAM, hpnicfDot11RoamOutInfoTable=hpnicfDot11RoamOutInfoTable, hpnicfdot11MobGrpTunnelType=hpnicfdot11MobGrpTunnelType, HpnicfDot11RoamAuthMode=HpnicfDot11RoamAuthMode, hpnicfDot11RoamStatusGroup=hpnicfDot11RoamStatusGroup, hpnicfDot11MobGrpMemberIpAddr=hpnicfDot11MobGrpMemberIpAddr, hpnicfDot11RoamTrackIndex=hpnicfDot11RoamTrackIndex, hpnicfDot11MobGrpTable=hpnicfDot11MobGrpTable, hpnicfDot11MobGrpAuthKey=hpnicfDot11MobGrpAuthKey, HpnicfDot11RoamIACTPStatus=HpnicfDot11RoamIACTPStatus, hpnicfDot11RoamClientMAC=hpnicfDot11RoamClientMAC, hpnicfDot11RoamOutClientUpTime=hpnicfDot11RoamOutClientUpTime, hpnicfDot11RoamOutForeignACIPAddr=hpnicfDot11RoamOutForeignACIPAddr, hpnicfDot11RoamTrackACIPType=hpnicfDot11RoamTrackACIPType, hpnicfDot11RoamTrackBSSID=hpnicfDot11RoamTrackBSSID, hpnicfDot11RoamTrackClientMAC=hpnicfDot11RoamTrackClientMAC, hpnicfDot11ROAM=hpnicfDot11ROAM, HpnicfDot11RoamMobileTunnelType=HpnicfDot11RoamMobileTunnelType, hpnicfDot11RoamOutForeignACIPType=hpnicfDot11RoamOutForeignACIPType, hpnicfDot11InterACRoamingSuccCnt=hpnicfDot11InterACRoamingSuccCnt, hpnicfDot11IntraACRoamingSuccCnt=hpnicfDot11IntraACRoamingSuccCnt, hpnicfDot11IntraACRoamingSuccCnt2=hpnicfDot11IntraACRoamingSuccCnt2, hpnicfDot11InterACRoamingSuccCnt2=hpnicfDot11InterACRoamingSuccCnt2, hpnicfDot11RoamTrackTable=hpnicfDot11RoamTrackTable, hpnicfDot11MobGrpMemberIf=hpnicfDot11MobGrpMemberIf, hpnicfDot11RoamInClientBSSID=hpnicfDot11RoamInClientBSSID, hpnicfDot11MobGrpMemberStatus=hpnicfDot11MobGrpMemberStatus, hpnicfDot11RoamInHomeACIPType=hpnicfDot11RoamInHomeACIPType, hpnicfDot11RoamInInfoEntry=hpnicfDot11RoamInInfoEntry, hpnicfDot11RoamTrackACIPAddr=hpnicfDot11RoamTrackACIPAddr, hpnicfDot11InterACRoamOutSuccCnt=hpnicfDot11InterACRoamOutSuccCnt, hpnicfDot11MobGrpName=hpnicfDot11MobGrpName, hpnicfDot11RoamCfgGroup=hpnicfDot11RoamCfgGroup, hpnicfDot11RoamTrackEntry=hpnicfDot11RoamTrackEntry, hpnicfDot11MobGrpMemberTable=hpnicfDot11MobGrpMemberTable, hpnicfDot11RoamStatisGroup=hpnicfDot11RoamStatisGroup, hpnicfDot11MobGrpAuthMode=hpnicfDot11MobGrpAuthMode, hpnicfDot11RoamInInfoTable=hpnicfDot11RoamInInfoTable, hpnicfDot11RoamOutClientVlanID=hpnicfDot11RoamOutClientVlanID, hpnicfDot11MobGrpMemberUpTime=hpnicfDot11MobGrpMemberUpTime, hpnicfDot11RoamInClientVlanID=hpnicfDot11RoamInClientVlanID, hpnicfDot11RoamTrackUpTime=hpnicfDot11RoamTrackUpTime, hpnicfDot11MobGrpMemberRowStatus=hpnicfDot11MobGrpMemberRowStatus, hpnicfDot11RoamStatis2Group=hpnicfDot11RoamStatis2Group, hpnicfDot11RoamOutInfoEntry=hpnicfDot11RoamOutInfoEntry, hpnicfDot11MobGrpMemberEntry=hpnicfDot11MobGrpMemberEntry, hpnicfDot11RoamOutClientBSSID=hpnicfDot11RoamOutClientBSSID, hpnicfDot11MobGrpEnable=hpnicfDot11MobGrpEnable, hpnicfDot11MobGrpRowStatus=hpnicfDot11MobGrpRowStatus, hpnicfDot11MobGrpEntry=hpnicfDot11MobGrpEntry, hpnicfDot11RoamInHomeACIPAddr=hpnicfDot11RoamInHomeACIPAddr)
