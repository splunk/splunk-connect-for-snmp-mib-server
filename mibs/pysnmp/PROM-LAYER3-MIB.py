#
# PySNMP MIB module PROM-LAYER3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PROM-LAYER3-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:33:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
promSwitching, MacAddress = mibBuilder.importSymbols("PROMINET-MIB", "promSwitching", "MacAddress")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Integer32, TimeTicks, Counter32, IpAddress, Gauge32, Unsigned32, Bits, NotificationType, ObjectIdentity, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "TimeTicks", "Counter32", "IpAddress", "Gauge32", "Unsigned32", "Bits", "NotificationType", "ObjectIdentity", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
promSwitchingLayerIII = MibIdentifier((1, 3, 6, 1, 4, 1, 2167, 5, 6))
promL3AddrFwdMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1))
class IPIPXNetNumber(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

class PromL3AddrFwdTblType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("ipunicast", 1), ("ipmulticast", 2), ("ipx", 3))

promL3AddrFwdDataBaseMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1))
promL3AddrFwdIPUnicastStatus = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipunicastEnabled", 1), ("ipunicastDisabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdIPUnicastStatus.setStatus('mandatory')
promL3AddrFwdIPUnicastMode = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipunicastDA", 1), ("ipunicastSADA", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: promL3AddrFwdIPUnicastMode.setStatus('mandatory')
promL3AddrFwdIPUnicastHash = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ipunicast8bit", 1), ("ipunicast10bit", 2), ("ipunicast12bit", 3))).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: promL3AddrFwdIPUnicastHash.setStatus('mandatory')
promL3AddrFwdIPUnicastAgeStatus = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipunicastAgeEnabled", 1), ("ipunicastAgeDisabled", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: promL3AddrFwdIPUnicastAgeStatus.setStatus('mandatory')
promL3AddrFwdIPUnicastAgePeriod = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 360)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: promL3AddrFwdIPUnicastAgePeriod.setStatus('mandatory')
promL3AddrFwdIPUnicastMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99999)).clone(15000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: promL3AddrFwdIPUnicastMaxEntries.setStatus('mandatory')
promL3AddrFwdIPUnicastActiveEntries = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdIPUnicastActiveEntries.setStatus('mandatory')
promL3AddrFwdIPUnicastAddedEntries = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdIPUnicastAddedEntries.setStatus('mandatory')
promL3AddrFwdIPUnicastRemovedEntries = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdIPUnicastRemovedEntries.setStatus('mandatory')
promL3AddrFwdIPUnicastAgedEntries = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdIPUnicastAgedEntries.setStatus('mandatory')
promL3AddrFwdIPMulticastStatus = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipmulticastEnabled", 1), ("ipmulticastDisabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdIPMulticastStatus.setStatus('mandatory')
promL3AddrFwdIPMulticastMode = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipmulticastDA", 1), ("ipmulticastSADA", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: promL3AddrFwdIPMulticastMode.setStatus('mandatory')
promL3AddrFwdIPMulticastHash = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ipmulticast8bit", 1), ("ipmulticast10bit", 2), ("ipmulticast12bit", 3))).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: promL3AddrFwdIPMulticastHash.setStatus('mandatory')
promL3AddrFwdIPMulticastAgeStatus = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipmulticastAgeEnabled", 1), ("ipmulticastAgeDisabled", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: promL3AddrFwdIPMulticastAgeStatus.setStatus('mandatory')
promL3AddrFwdIPMulticastAgePeriod = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 360)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: promL3AddrFwdIPMulticastAgePeriod.setStatus('mandatory')
promL3AddrFwdIPMulticastMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99999)).clone(15000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: promL3AddrFwdIPMulticastMaxEntries.setStatus('mandatory')
promL3AddrFwdIPMulticastActiveEntries = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdIPMulticastActiveEntries.setStatus('mandatory')
promL3AddrFwdIPMulticastAddedEntries = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdIPMulticastAddedEntries.setStatus('mandatory')
promL3AddrFwdIPMulticastRemovedEntries = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdIPMulticastRemovedEntries.setStatus('mandatory')
promL3AddrFwdIPMulticastAgedEntries = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdIPMulticastAgedEntries.setStatus('mandatory')
promL3AddrFwdIPXStatus = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipxEnabled", 1), ("ipxDisabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdIPXStatus.setStatus('mandatory')
promL3AddrFwdIPXMode = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipxDA", 1), ("ipxSADA", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: promL3AddrFwdIPXMode.setStatus('mandatory')
promL3AddrFwdIPXHash = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ipx8bit", 1), ("ipx10bit", 2), ("ipx12bit", 3))).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: promL3AddrFwdIPXHash.setStatus('mandatory')
promL3AddrFwdIPXAgeStatus = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipxAgeEnabled", 1), ("ipxAgeDisabled", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: promL3AddrFwdIPXAgeStatus.setStatus('mandatory')
promL3AddrFwdIPXAgePeriod = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 360)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: promL3AddrFwdIPXAgePeriod.setStatus('mandatory')
promL3AddrFwdIPXMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99999)).clone(15000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: promL3AddrFwdIPXMaxEntries.setStatus('mandatory')
promL3AddrFwdIPXActiveEntries = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdIPXActiveEntries.setStatus('mandatory')
promL3AddrFwdIPXAddedEntries = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdIPXAddedEntries.setStatus('mandatory')
promL3AddrFwdIPXRemovedEntries = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdIPXRemovedEntries.setStatus('mandatory')
promL3AddrFwdIPXAgedEntries = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdIPXAgedEntries.setStatus('mandatory')
promL3AddrFwdSysMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999999)).clone(130000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: promL3AddrFwdSysMaxEntries.setStatus('mandatory')
promL3AddrFwdCacheTable = MibTable((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32), )
if mibBuilder.loadTexts: promL3AddrFwdCacheTable.setStatus('mandatory')
promL3AddrFwdCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1), ).setIndexNames((0, "PROM-LAYER3-MIB", "promL3AddrFwdCacheFabricPortID"), (0, "PROM-LAYER3-MIB", "promL3AddrFwdCacheTblType"), (0, "PROM-LAYER3-MIB", "promL3AddrFwdCacheDstAddr"), (0, "PROM-LAYER3-MIB", "promL3AddrFwdCacheSrcAddr"), (0, "PROM-LAYER3-MIB", "promL3AddrFwdCacheDstVlanID"), (0, "PROM-LAYER3-MIB", "promL3AddrFwdCacheSrcVlanID"), (0, "PROM-LAYER3-MIB", "promL3AddrFwdCacheDstPort"), (0, "PROM-LAYER3-MIB", "promL3AddrFwdCacheSrcPort"), (0, "PROM-LAYER3-MIB", "promL3AddrFwdCacheComp"))
if mibBuilder.loadTexts: promL3AddrFwdCacheEntry.setStatus('mandatory')
promL3AddrFwdCacheFabricPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdCacheFabricPortID.setStatus('mandatory')
promL3AddrFwdCacheTblType = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1, 2), PromL3AddrFwdTblType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdCacheTblType.setStatus('mandatory')
promL3AddrFwdCacheDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1, 3), IPIPXNetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdCacheDstAddr.setStatus('mandatory')
promL3AddrFwdCacheSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1, 4), IPIPXNetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdCacheSrcAddr.setStatus('mandatory')
promL3AddrFwdCacheDstVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdCacheDstVlanID.setStatus('mandatory')
promL3AddrFwdCacheSrcVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdCacheSrcVlanID.setStatus('mandatory')
promL3AddrFwdCacheDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdCacheDstPort.setStatus('mandatory')
promL3AddrFwdCacheSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdCacheSrcPort.setStatus('mandatory')
promL3AddrFwdCacheComp = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("da", 1), ("da-sa", 2), ("da-prot", 3), ("da-dp", 4), ("da-sa-prot", 5), ("da-sa-dp-sp", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdCacheComp.setStatus('mandatory')
promL3AddrFwdCacheNxtHopMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1, 10), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdCacheNxtHopMac.setStatus('mandatory')
promL3AddrFwdCacheIPXUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("usePDUhost", 1), ("useFWDhost", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdCacheIPXUse.setStatus('mandatory')
promL3AddrFwdCacheFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("etherV2", 1), ("etherIPXDSAP", 2), ("etherSNAP", 3), ("etherIPXRAW", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdCacheFormat.setStatus('mandatory')
promL3AddrFwdCacheTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ttl-IGNORE", 1), ("ttl-GT32", 2), ("ttl-GT64", 3), ("ttl-GT128", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdCacheTTL.setStatus('mandatory')
promL3AddrFwdCacheFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("filterON", 1), ("filterOFF", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdCacheFilter.setStatus('mandatory')
promL3AddrFwdCachePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdCachePriority.setStatus('mandatory')
promL3AddrFwdCachePersistence = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("permanent", 2), ("deleteOnTimeout", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdCachePersistence.setStatus('mandatory')
promL3AddrFwdCacheStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 32, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("learned", 1), ("mgmt", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdCacheStatus.setStatus('mandatory')
promL3AddrFwdControlTable = MibTable((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33), )
if mibBuilder.loadTexts: promL3AddrFwdControlTable.setStatus('mandatory')
promL3AddrFwdControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33, 1), ).setIndexNames((0, "PROM-LAYER3-MIB", "promL3AddrFwdControlFabricPortID"), (0, "PROM-LAYER3-MIB", "promL3AddrFwdControlTblType"), (0, "PROM-LAYER3-MIB", "promL3AddrFwdControlDstAddr"), (0, "PROM-LAYER3-MIB", "promL3AddrFwdControlSrcAddr"), (0, "PROM-LAYER3-MIB", "promL3AddrFwdControlDstVlanID"), (0, "PROM-LAYER3-MIB", "promL3AddrFwdControlSrcVlanID"), (0, "PROM-LAYER3-MIB", "promL3AddrFwdControlDstPort"), (0, "PROM-LAYER3-MIB", "promL3AddrFwdControlSrcPort"), (0, "PROM-LAYER3-MIB", "promL3AddrFwdControlComp"))
if mibBuilder.loadTexts: promL3AddrFwdControlEntry.setStatus('mandatory')
promL3AddrFwdControlFabricPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdControlFabricPortID.setStatus('mandatory')
promL3AddrFwdControlTblType = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33, 1, 2), PromL3AddrFwdTblType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdControlTblType.setStatus('mandatory')
promL3AddrFwdControlDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33, 1, 3), IPIPXNetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdControlDstAddr.setStatus('mandatory')
promL3AddrFwdControlSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33, 1, 4), IPIPXNetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdControlSrcAddr.setStatus('mandatory')
promL3AddrFwdControlDstVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdControlDstVlanID.setStatus('mandatory')
promL3AddrFwdControlSrcVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdControlSrcVlanID.setStatus('mandatory')
promL3AddrFwdControlDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdControlDstPort.setStatus('mandatory')
promL3AddrFwdControlSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdControlSrcPort.setStatus('mandatory')
promL3AddrFwdControlComp = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("da", 1), ("da-sa", 2), ("da-prot", 3), ("da-dp", 4), ("da-sa-prot", 5), ("da-sa-dp-sp", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdControlComp.setStatus('mandatory')
promL3AddrFwdControlNxtHopMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33, 1, 10), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdControlNxtHopMac.setStatus('mandatory')
promL3AddrFwdControlIPXUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("usePDUhost", 1), ("useFWDhost", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdControlIPXUse.setStatus('mandatory')
promL3AddrFwdControlFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("etherV2", 1), ("etherIPXDSAP", 2), ("etherSNAP", 3), ("etherIPXRAW", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdControlFormat.setStatus('mandatory')
promL3AddrFwdControlTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ttl-IGNORE", 1), ("ttl-GT32", 2), ("ttl-GT64", 3), ("ttl-GT128", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdControlTTL.setStatus('mandatory')
promL3AddrFwdControlFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("filterON", 1), ("filterOFF", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdControlFilter.setStatus('mandatory')
promL3AddrFwdControlPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdControlPriority.setStatus('mandatory')
promL3AddrFwdControlPersistence = MibTableColumn((1, 3, 6, 1, 4, 1, 2167, 5, 6, 1, 1, 33, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("permanent", 2), ("deleteOnTimeout", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: promL3AddrFwdControlPersistence.setStatus('mandatory')
mibBuilder.exportSymbols("PROM-LAYER3-MIB", promL3AddrFwdCacheEntry=promL3AddrFwdCacheEntry, promL3AddrFwdCacheDstAddr=promL3AddrFwdCacheDstAddr, promL3AddrFwdCacheTblType=promL3AddrFwdCacheTblType, promL3AddrFwdControlPersistence=promL3AddrFwdControlPersistence, promL3AddrFwdIPMulticastAgeStatus=promL3AddrFwdIPMulticastAgeStatus, promL3AddrFwdCacheDstPort=promL3AddrFwdCacheDstPort, promL3AddrFwdIPXStatus=promL3AddrFwdIPXStatus, promL3AddrFwdControlFilter=promL3AddrFwdControlFilter, promL3AddrFwdIPMulticastAgePeriod=promL3AddrFwdIPMulticastAgePeriod, promL3AddrFwdCachePriority=promL3AddrFwdCachePriority, promL3AddrFwdControlEntry=promL3AddrFwdControlEntry, promL3AddrFwdIPMulticastAgedEntries=promL3AddrFwdIPMulticastAgedEntries, promL3AddrFwdIPXRemovedEntries=promL3AddrFwdIPXRemovedEntries, promL3AddrFwdIPUnicastAgeStatus=promL3AddrFwdIPUnicastAgeStatus, promL3AddrFwdIPUnicastStatus=promL3AddrFwdIPUnicastStatus, promL3AddrFwdIPMulticastHash=promL3AddrFwdIPMulticastHash, promL3AddrFwdIPUnicastHash=promL3AddrFwdIPUnicastHash, promL3AddrFwdIPXMode=promL3AddrFwdIPXMode, PromL3AddrFwdTblType=PromL3AddrFwdTblType, promL3AddrFwdIPMulticastAddedEntries=promL3AddrFwdIPMulticastAddedEntries, promL3AddrFwdIPXAgedEntries=promL3AddrFwdIPXAgedEntries, promL3AddrFwdCacheTable=promL3AddrFwdCacheTable, promL3AddrFwdCacheSrcAddr=promL3AddrFwdCacheSrcAddr, promL3AddrFwdCacheIPXUse=promL3AddrFwdCacheIPXUse, promL3AddrFwdControlFabricPortID=promL3AddrFwdControlFabricPortID, promL3AddrFwdCacheDstVlanID=promL3AddrFwdCacheDstVlanID, promL3AddrFwdCacheSrcVlanID=promL3AddrFwdCacheSrcVlanID, promL3AddrFwdCacheTTL=promL3AddrFwdCacheTTL, promL3AddrFwdCacheSrcPort=promL3AddrFwdCacheSrcPort, promL3AddrFwdControlIPXUse=promL3AddrFwdControlIPXUse, promL3AddrFwdCacheComp=promL3AddrFwdCacheComp, promL3AddrFwdIPUnicastAgedEntries=promL3AddrFwdIPUnicastAgedEntries, promL3AddrFwdIPUnicastMaxEntries=promL3AddrFwdIPUnicastMaxEntries, promL3AddrFwdIPMulticastActiveEntries=promL3AddrFwdIPMulticastActiveEntries, promL3AddrFwdIPXAddedEntries=promL3AddrFwdIPXAddedEntries, promL3AddrFwdIPUnicastMode=promL3AddrFwdIPUnicastMode, promL3AddrFwdControlTblType=promL3AddrFwdControlTblType, promL3AddrFwdCacheFabricPortID=promL3AddrFwdCacheFabricPortID, promL3AddrFwdIPXMaxEntries=promL3AddrFwdIPXMaxEntries, promL3AddrFwdCacheFormat=promL3AddrFwdCacheFormat, promL3AddrFwdControlSrcAddr=promL3AddrFwdControlSrcAddr, promL3AddrFwdControlSrcPort=promL3AddrFwdControlSrcPort, promL3AddrFwdControlComp=promL3AddrFwdControlComp, promL3AddrFwdControlNxtHopMac=promL3AddrFwdControlNxtHopMac, promL3AddrFwdIPMulticastRemovedEntries=promL3AddrFwdIPMulticastRemovedEntries, promL3AddrFwdCacheFilter=promL3AddrFwdCacheFilter, promSwitchingLayerIII=promSwitchingLayerIII, promL3AddrFwdControlTable=promL3AddrFwdControlTable, promL3AddrFwdControlFormat=promL3AddrFwdControlFormat, promL3AddrFwdIPUnicastActiveEntries=promL3AddrFwdIPUnicastActiveEntries, promL3AddrFwdIPUnicastRemovedEntries=promL3AddrFwdIPUnicastRemovedEntries, promL3AddrFwdControlDstPort=promL3AddrFwdControlDstPort, IPIPXNetNumber=IPIPXNetNumber, promL3AddrFwdIPMulticastMode=promL3AddrFwdIPMulticastMode, promL3AddrFwdCacheStatus=promL3AddrFwdCacheStatus, promL3AddrFwdControlDstAddr=promL3AddrFwdControlDstAddr, promL3AddrFwdControlPriority=promL3AddrFwdControlPriority, promL3AddrFwdIPUnicastAddedEntries=promL3AddrFwdIPUnicastAddedEntries, promL3AddrFwdControlSrcVlanID=promL3AddrFwdControlSrcVlanID, promL3AddrFwdCachePersistence=promL3AddrFwdCachePersistence, promL3AddrFwdIPXActiveEntries=promL3AddrFwdIPXActiveEntries, promL3AddrFwdCacheNxtHopMac=promL3AddrFwdCacheNxtHopMac, promL3AddrFwdIPUnicastAgePeriod=promL3AddrFwdIPUnicastAgePeriod, promL3AddrFwdIPMulticastMaxEntries=promL3AddrFwdIPMulticastMaxEntries, promL3AddrFwdControlTTL=promL3AddrFwdControlTTL, promL3AddrFwdIPXAgeStatus=promL3AddrFwdIPXAgeStatus, promL3AddrFwdMgmt=promL3AddrFwdMgmt, promL3AddrFwdIPXHash=promL3AddrFwdIPXHash, promL3AddrFwdDataBaseMgmt=promL3AddrFwdDataBaseMgmt, promL3AddrFwdSysMaxEntries=promL3AddrFwdSysMaxEntries, promL3AddrFwdIPMulticastStatus=promL3AddrFwdIPMulticastStatus, promL3AddrFwdIPXAgePeriod=promL3AddrFwdIPXAgePeriod, promL3AddrFwdControlDstVlanID=promL3AddrFwdControlDstVlanID)
