#
# PySNMP MIB module CISCO-PROCESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-PROCESS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:53:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
EntPhysicalIndexOrZero, Unsigned64 = mibBuilder.importSymbols("CISCO-TC", "EntPhysicalIndexOrZero", "Unsigned64")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity, iso, Bits, MibIdentifier, Counter64, Unsigned32, TimeTicks, ObjectIdentity, IpAddress, Counter32, Gauge32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity", "iso", "Bits", "MibIdentifier", "Counter64", "Unsigned32", "TimeTicks", "ObjectIdentity", "IpAddress", "Counter32", "Gauge32", "NotificationType")
RowStatus, TruthValue, DisplayString, TextualConvention, TimeStamp, RowPointer = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "DisplayString", "TextualConvention", "TimeStamp", "RowPointer")
ciscoProcessMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 109))
ciscoProcessMIB.setRevisions(('2011-06-23 00:00', '2010-05-06 00:00', '2009-10-12 00:00', '2009-01-23 00:00', '2007-03-23 00:00', '2003-01-22 00:00', '2001-05-18 00:00', '1998-04-15 00:00',))
if mibBuilder.loadTexts: ciscoProcessMIB.setLastUpdated('201106230000Z')
if mibBuilder.loadTexts: ciscoProcessMIB.setOrganization('Cisco Systems, Inc.')
class CPULoadAverage(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'

ciscoProcessMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 109, 1))
cpmCPU = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1))
cpmProcess = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2))
cpmThread = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 3))
cpmVirtualProcess = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 4))
cpmCPUHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 5))
cpmCPUTotalTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1), )
if mibBuilder.loadTexts: cpmCPUTotalTable.setStatus('current')
cpmCPUTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-PROCESS-MIB", "cpmCPUTotalIndex"))
if mibBuilder.loadTexts: cpmCPUTotalEntry.setStatus('current')
cpmCPUTotalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cpmCPUTotalIndex.setStatus('current')
cpmCPUTotalPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 2), EntPhysicalIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUTotalPhysicalIndex.setStatus('current')
cpmCPUTotal5sec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUTotal5sec.setStatus('deprecated')
cpmCPUTotal1min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUTotal1min.setStatus('deprecated')
cpmCPUTotal5min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUTotal5min.setStatus('deprecated')
cpmCPUTotal5secRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUTotal5secRev.setStatus('deprecated')
cpmCPUTotal1minRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUTotal1minRev.setStatus('current')
cpmCPUTotal5minRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUTotal5minRev.setStatus('current')
cpmCPUMonInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 9), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUMonInterval.setStatus('current')
cpmCPUTotalMonIntervalValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUTotalMonIntervalValue.setStatus('current')
cpmCPUInterruptMonIntervalValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUInterruptMonIntervalValue.setStatus('current')
cpmCPUMemoryUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 12), Gauge32()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUMemoryUsed.setStatus('current')
cpmCPUMemoryFree = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 13), Gauge32()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUMemoryFree.setStatus('current')
cpmCPUMemoryKernelReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 14), Gauge32()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUMemoryKernelReserved.setStatus('current')
cpmCPUMemoryLowest = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 15), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUMemoryLowest.setStatus('current')
cpmCPUMemoryUsedOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 16), Gauge32()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUMemoryUsedOvrflw.setStatus('current')
cpmCPUMemoryHCUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 17), CounterBasedGauge64()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUMemoryHCUsed.setStatus('current')
cpmCPUMemoryFreeOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 18), Gauge32()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUMemoryFreeOvrflw.setStatus('current')
cpmCPUMemoryHCFree = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 19), Counter64()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUMemoryHCFree.setStatus('current')
cpmCPUMemoryKernelReservedOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 20), Gauge32()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUMemoryKernelReservedOvrflw.setStatus('current')
cpmCPUMemoryHCKernelReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 21), CounterBasedGauge64()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUMemoryHCKernelReserved.setStatus('current')
cpmCPUMemoryLowestOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 22), Gauge32()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUMemoryLowestOvrflw.setStatus('current')
cpmCPUMemoryHCLowest = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 23), CounterBasedGauge64()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUMemoryHCLowest.setStatus('current')
cpmCPULoadAvg1min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 24), CPULoadAverage()).setUnits('hundredths of processes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPULoadAvg1min.setStatus('current')
cpmCPULoadAvg5min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 25), CPULoadAverage()).setUnits('hundredths of processes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPULoadAvg5min.setStatus('current')
cpmCPULoadAvg15min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 26), CPULoadAverage()).setUnits('hundredths of processes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPULoadAvg15min.setStatus('current')
cpmCPUMemoryCommitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUMemoryCommitted.setStatus('current')
cpmCPUMemoryCommittedOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUMemoryCommittedOvrflw.setStatus('current')
cpmCPUMemoryHCCommitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 1, 1, 29), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUMemoryHCCommitted.setStatus('current')
cpmCoreTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 2), )
if mibBuilder.loadTexts: cpmCoreTable.setStatus('current')
cpmCoreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-PROCESS-MIB", "cpmCPUTotalIndex"), (0, "CISCO-PROCESS-MIB", "cpmCoreIndex"))
if mibBuilder.loadTexts: cpmCoreEntry.setStatus('current')
cpmCoreIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cpmCoreIndex.setStatus('current')
cpmCorePhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 2, 1, 2), EntPhysicalIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCorePhysicalIndex.setStatus('current')
cpmCore5sec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 2, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCore5sec.setStatus('current')
cpmCore1min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 2, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCore1min.setStatus('current')
cpmCore5min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 2, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCore5min.setStatus('current')
cpmCoreLoadAvg1min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 2, 1, 6), CPULoadAverage()).setUnits('hundredths of processes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCoreLoadAvg1min.setStatus('current')
cpmCoreLoadAvg5min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 2, 1, 7), CPULoadAverage()).setUnits('hundredths of processes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCoreLoadAvg5min.setStatus('current')
cpmCoreLoadAvg15min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 1, 2, 1, 8), CPULoadAverage()).setUnits('hundredths of processes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCoreLoadAvg15min.setStatus('current')
cpmProcessTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 1), )
if mibBuilder.loadTexts: cpmProcessTable.setStatus('current')
cpmProcessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-PROCESS-MIB", "cpmCPUTotalIndex"), (0, "CISCO-PROCESS-MIB", "cpmProcessPID"))
if mibBuilder.loadTexts: cpmProcessEntry.setStatus('current')
cpmProcessPID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessPID.setStatus('current')
cpmProcessName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessName.setStatus('current')
cpmProcessuSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 1, 1, 4), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessuSecs.setStatus('deprecated')
cpmProcessTimeCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 1, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessTimeCreated.setStatus('current')
cpmProcessAverageUSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 1, 1, 6), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessAverageUSecs.setStatus('current')
cpmProcessExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 2), )
if mibBuilder.loadTexts: cpmProcessExtTable.setStatus('deprecated')
cpmProcessExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 2, 1), )
cpmProcessEntry.registerAugmentions(("CISCO-PROCESS-MIB", "cpmProcessExtEntry"))
cpmProcessExtEntry.setIndexNames(*cpmProcessEntry.getIndexNames())
if mibBuilder.loadTexts: cpmProcessExtEntry.setStatus('deprecated')
cpmProcExtMemAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 2, 1, 1), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtMemAllocated.setStatus('deprecated')
cpmProcExtMemFreed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 2, 1, 2), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtMemFreed.setStatus('deprecated')
cpmProcExtInvoked = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtInvoked.setStatus('deprecated')
cpmProcExtRuntime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 2, 1, 4), Counter32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtRuntime.setStatus('deprecated')
cpmProcExtUtil5Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 2, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtUtil5Sec.setStatus('deprecated')
cpmProcExtUtil1Min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 2, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtUtil1Min.setStatus('deprecated')
cpmProcExtUtil5Min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 2, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtUtil5Min.setStatus('deprecated')
cpmProcExtPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("critical", 1), ("high", 2), ("normal", 3), ("low", 4), ("notAssigned", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpmProcExtPriority.setStatus('deprecated')
cpmProcessExtRevTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3), )
if mibBuilder.loadTexts: cpmProcessExtRevTable.setStatus('current')
cpmProcessExtRevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-PROCESS-MIB", "cpmCPUTotalIndex"), (0, "CISCO-PROCESS-MIB", "cpmProcessPID"))
if mibBuilder.loadTexts: cpmProcessExtRevEntry.setStatus('current')
cpmProcExtMemAllocatedRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 1), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtMemAllocatedRev.setStatus('current')
cpmProcExtMemFreedRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 2), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtMemFreedRev.setStatus('current')
cpmProcExtInvokedRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtInvokedRev.setStatus('current')
cpmProcExtRuntimeRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 4), Counter32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtRuntimeRev.setStatus('current')
cpmProcExtUtil5SecRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtUtil5SecRev.setStatus('current')
cpmProcExtUtil1MinRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtUtil1MinRev.setStatus('current')
cpmProcExtUtil5MinRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtUtil5MinRev.setStatus('current')
cpmProcExtPriorityRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("critical", 1), ("high", 2), ("normal", 3), ("low", 4), ("notAssigned", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtPriorityRev.setStatus('current')
cpmProcessType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("posix", 2), ("ios", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessType.setStatus('current')
cpmProcessRespawn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessRespawn.setStatus('current')
cpmProcessRespawnCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessRespawnCount.setStatus('current')
cpmProcessRespawnAfterLastPatch = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessRespawnAfterLastPatch.setStatus('current')
cpmProcessMemoryCore = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("mainmem", 2), ("mainmemSharedmem", 3), ("mainmemText", 4), ("mainmemTextSharedmem", 5), ("sharedmem", 6), ("sparse", 7), ("off", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessMemoryCore.setStatus('current')
cpmProcessLastRestartUser = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessLastRestartUser.setStatus('current')
cpmProcessTextSegmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 15), Unsigned32()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessTextSegmentSize.setStatus('current')
cpmProcessDataSegmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 16), Gauge32()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessDataSegmentSize.setStatus('current')
cpmProcessStackSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 17), Gauge32()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessStackSize.setStatus('current')
cpmProcessDynamicMemorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 18), Gauge32()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessDynamicMemorySize.setStatus('current')
cpmProcExtMemAllocatedRevOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 19), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtMemAllocatedRevOvrflw.setStatus('current')
cpmProcExtHCMemAllocatedRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 20), CounterBasedGauge64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtHCMemAllocatedRev.setStatus('current')
cpmProcExtMemFreedRevOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 21), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtMemFreedRevOvrflw.setStatus('current')
cpmProcExtHCMemFreedRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 22), CounterBasedGauge64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcExtHCMemFreedRev.setStatus('current')
cpmProcessTextSegmentSizeOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 23), Unsigned32()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessTextSegmentSizeOvrflw.setStatus('current')
cpmProcessHCTextSegmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 24), Unsigned64()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessHCTextSegmentSize.setStatus('current')
cpmProcessDataSegmentSizeOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 25), Gauge32()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessDataSegmentSizeOvrflw.setStatus('current')
cpmProcessHCDataSegmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 26), CounterBasedGauge64()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessHCDataSegmentSize.setStatus('current')
cpmProcessStackSizeOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 27), Gauge32()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessStackSizeOvrflw.setStatus('current')
cpmProcessHCStackSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 28), CounterBasedGauge64()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessHCStackSize.setStatus('current')
cpmProcessDynamicMemorySizeOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 29), Gauge32()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessDynamicMemorySizeOvrflw.setStatus('current')
cpmProcessHCDynamicMemorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 3, 1, 30), CounterBasedGauge64()).setUnits('kilo-bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmProcessHCDynamicMemorySize.setStatus('current')
cpmCPUThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 4), )
if mibBuilder.loadTexts: cpmCPUThresholdTable.setStatus('current')
cpmCPUThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 4, 1), ).setIndexNames((0, "CISCO-PROCESS-MIB", "cpmCPUTotalIndex"), (0, "CISCO-PROCESS-MIB", "cpmCPUThresholdClass"))
if mibBuilder.loadTexts: cpmCPUThresholdEntry.setStatus('current')
cpmCPUThresholdClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("total", 1), ("interrupt", 2), ("process", 3))))
if mibBuilder.loadTexts: cpmCPUThresholdClass.setStatus('current')
cpmCPURisingThresholdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpmCPURisingThresholdValue.setStatus('current')
cpmCPURisingThresholdPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 4294967295)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpmCPURisingThresholdPeriod.setStatus('current')
cpmCPUFallingThresholdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpmCPUFallingThresholdValue.setStatus('current')
cpmCPUFallingThresholdPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 4294967295)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpmCPUFallingThresholdPeriod.setStatus('current')
cpmCPUThresholdEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpmCPUThresholdEntryStatus.setStatus('current')
cpmCPUHistoryThreshold = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 5, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpmCPUHistoryThreshold.setStatus('current')
cpmCPUHistorySize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 5, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpmCPUHistorySize.setStatus('current')
cpmCPUHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 5, 3), )
if mibBuilder.loadTexts: cpmCPUHistoryTable.setStatus('current')
cpmCPUHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 5, 3, 1), ).setIndexNames((0, "CISCO-PROCESS-MIB", "cpmCPUTotalIndex"), (0, "CISCO-PROCESS-MIB", "cpmCPUHistoryReportId"))
if mibBuilder.loadTexts: cpmCPUHistoryEntry.setStatus('current')
cpmCPUHistoryReportId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 5, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cpmCPUHistoryReportId.setStatus('current')
cpmCPUHistoryReportSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 5, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUHistoryReportSize.setStatus('current')
cpmCPUHistoryTotalUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 5, 3, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUHistoryTotalUtil.setStatus('current')
cpmCPUHistoryInterruptUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 5, 3, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUHistoryInterruptUtil.setStatus('current')
cpmCPUHistoryCreatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 5, 3, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUHistoryCreatedTime.setStatus('current')
cpmThreadTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 3, 1), )
if mibBuilder.loadTexts: cpmThreadTable.setStatus('current')
cpmThreadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-PROCESS-MIB", "cpmCPUTotalIndex"), (0, "CISCO-PROCESS-MIB", "cpmProcessPID"), (0, "CISCO-PROCESS-MIB", "cpmThreadID"))
if mibBuilder.loadTexts: cpmThreadEntry.setStatus('current')
cpmThreadID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cpmThreadID.setStatus('current')
cpmThreadName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 3, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmThreadName.setStatus('current')
cpmThreadPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 3, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmThreadPriority.setStatus('current')
cpmThreadState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("other", 1), ("dead", 2), ("running", 3), ("ready", 4), ("stopped", 5), ("send", 6), ("receive", 7), ("reply", 8), ("stack", 9), ("waitpage", 10), ("sigsuspend", 11), ("sigwaitinfo", 12), ("nanosleep", 13), ("mutex", 14), ("condvar", 15), ("join", 16), ("intr", 17), ("sem", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmThreadState.setStatus('current')
cpmThreadBlockingProcess = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 3, 1, 1, 5), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmThreadBlockingProcess.setStatus('current')
cpmThreadCpuUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 3, 1, 1, 6), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmThreadCpuUtilization.setStatus('current')
cpmThreadStackSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 3, 1, 1, 7), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmThreadStackSize.setStatus('current')
cpmThreadStackSizeOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 3, 1, 1, 8), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmThreadStackSizeOvrflw.setStatus('current')
cpmThreadHCStackSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 3, 1, 1, 9), CounterBasedGauge64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmThreadHCStackSize.setStatus('current')
cpmVirtualProcessTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 4, 1), )
if mibBuilder.loadTexts: cpmVirtualProcessTable.setStatus('current')
cpmVirtualProcessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-PROCESS-MIB", "cpmCPUTotalIndex"), (0, "CISCO-PROCESS-MIB", "cpmProcessPID"), (0, "CISCO-PROCESS-MIB", "cpmVirtualProcessID"))
if mibBuilder.loadTexts: cpmVirtualProcessEntry.setStatus('current')
cpmVirtualProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 4, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cpmVirtualProcessID.setStatus('current')
cpmVirtualProcessName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 4, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVirtualProcessName.setStatus('current')
cpmVirtualProcessUtil5Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 4, 1, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVirtualProcessUtil5Sec.setStatus('current')
cpmVirtualProcessUtil1Min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 4, 1, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVirtualProcessUtil1Min.setStatus('current')
cpmVirtualProcessUtil5Min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 4, 1, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVirtualProcessUtil5Min.setStatus('current')
cpmVirtualProcessMemAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 4, 1, 1, 6), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVirtualProcessMemAllocated.setStatus('current')
cpmVirtualProcessMemFreed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 4, 1, 1, 7), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVirtualProcessMemFreed.setStatus('current')
cpmVirtualProcessInvokeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 4, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVirtualProcessInvokeCount.setStatus('current')
cpmVirtualProcessRuntime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 4, 1, 1, 9), Counter32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVirtualProcessRuntime.setStatus('current')
cpmVirtualProcessMemAllocatedOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 4, 1, 1, 10), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVirtualProcessMemAllocatedOvrflw.setStatus('current')
cpmVirtualProcessHCMemAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 4, 1, 1, 11), CounterBasedGauge64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVirtualProcessHCMemAllocated.setStatus('current')
cpmVirtualProcessMemFreedOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 4, 1, 1, 12), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVirtualProcessMemFreedOvrflw.setStatus('current')
cpmVirtualProcessHCMemFreed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 4, 1, 1, 13), CounterBasedGauge64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVirtualProcessHCMemFreed.setStatus('current')
cpmCPUProcessHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 5, 4), )
if mibBuilder.loadTexts: cpmCPUProcessHistoryTable.setStatus('current')
cpmCPUProcessHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 5, 4, 1), ).setIndexNames((0, "CISCO-PROCESS-MIB", "cpmCPUTotalIndex"), (0, "CISCO-PROCESS-MIB", "cpmCPUHistoryReportId"), (0, "CISCO-PROCESS-MIB", "cpmCPUProcessHistoryIndex"))
if mibBuilder.loadTexts: cpmCPUProcessHistoryEntry.setStatus('current')
cpmCPUProcessHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 5, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cpmCPUProcessHistoryIndex.setStatus('current')
cpmCPUHistoryProcId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 5, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUHistoryProcId.setStatus('current')
cpmCPUHistoryProcName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 5, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUHistoryProcName.setStatus('current')
cpmCPUHistoryProcCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 5, 4, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUHistoryProcCreated.setStatus('current')
cpmCPUHistoryProcUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 109, 1, 2, 5, 4, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmCPUHistoryProcUtil.setStatus('current')
ciscoProcessMIBNotifPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 109, 2))
ciscoProcessMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 109, 2, 0))
cpmCPURisingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 109, 2, 0, 1)).setObjects(("CISCO-PROCESS-MIB", "cpmCPURisingThresholdValue"), ("CISCO-PROCESS-MIB", "cpmCPUTotalMonIntervalValue"), ("CISCO-PROCESS-MIB", "cpmCPUInterruptMonIntervalValue"), ("CISCO-PROCESS-MIB", "cpmProcExtUtil5SecRev"), ("CISCO-PROCESS-MIB", "cpmProcessTimeCreated"))
if mibBuilder.loadTexts: cpmCPURisingThreshold.setStatus('current')
cpmCPUFallingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 109, 2, 0, 2)).setObjects(("CISCO-PROCESS-MIB", "cpmCPUFallingThresholdValue"), ("CISCO-PROCESS-MIB", "cpmCPUTotalMonIntervalValue"), ("CISCO-PROCESS-MIB", "cpmCPUInterruptMonIntervalValue"))
if mibBuilder.loadTexts: cpmCPUFallingThreshold.setStatus('current')
ciscoProcessMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 109, 3))
cpmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 1))
cpmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2))
cProcessMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 1, 1)).setObjects(("CISCO-PROCESS-MIB", "cpmCPUTotalGroup"), ("CISCO-PROCESS-MIB", "cpmProcessGroup"), ("CISCO-PROCESS-MIB", "cpmProcessExtGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cProcessMIBCompliance = cProcessMIBCompliance.setStatus('deprecated')
cProcessMIBComplianceRev = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 1, 2)).setObjects(("CISCO-PROCESS-MIB", "cpmCPUTotalGroupRev"), ("CISCO-PROCESS-MIB", "cpmProcessGroupRev"), ("CISCO-PROCESS-MIB", "cpmProcessExtGroupRev"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cProcessMIBComplianceRev = cProcessMIBComplianceRev.setStatus('deprecated')
cProcessMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 1, 3)).setObjects(("CISCO-PROCESS-MIB", "cpmCPUThresholdGroup"), ("CISCO-PROCESS-MIB", "cpmCPUTotalGroupRev1"), ("CISCO-PROCESS-MIB", "cpmCPUHistoryGroup"), ("CISCO-PROCESS-MIB", "cpmCPUThresholdNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cProcessMIBComplianceRev1 = cProcessMIBComplianceRev1.setStatus('deprecated')
cProcessMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 1, 4)).setObjects(("CISCO-PROCESS-MIB", "cpmCPUTotalGroupRev1"), ("CISCO-PROCESS-MIB", "cpmCPUHistoryGroup"), ("CISCO-PROCESS-MIB", "cpmCPUThresholdNotificationGroup"), ("CISCO-PROCESS-MIB", "cpmProcessExtGroupRev"), ("CISCO-PROCESS-MIB", "cpmCPUThresholdGroup"), ("CISCO-PROCESS-MIB", "cpmProcessGroupRev"), ("CISCO-PROCESS-MIB", "cpmCPUPosixMemoryGroup"), ("CISCO-PROCESS-MIB", "cpmPosixProcessGroup"), ("CISCO-PROCESS-MIB", "cpmThreadGroup"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cProcessMIBComplianceRev2 = cProcessMIBComplianceRev2.setStatus('deprecated')
cProcessMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 1, 5)).setObjects(("CISCO-PROCESS-MIB", "cpmCPUTotalGroupRev1"), ("CISCO-PROCESS-MIB", "cpmCPUHistoryGroup"), ("CISCO-PROCESS-MIB", "cpmCPUThresholdNotificationGroup"), ("CISCO-PROCESS-MIB", "cpmProcessExtGroupRev"), ("CISCO-PROCESS-MIB", "cpmCPUThresholdGroup"), ("CISCO-PROCESS-MIB", "cpmProcessGroupRev"), ("CISCO-PROCESS-MIB", "cpmCPUPosixMemoryGroup"), ("CISCO-PROCESS-MIB", "cpmPosixProcessGroup"), ("CISCO-PROCESS-MIB", "cpmThreadGroup"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessGroup"), ("CISCO-PROCESS-MIB", "cpmCPUTotalOverflowGroup"), ("CISCO-PROCESS-MIB", "cpmCPUTotalHCGroup"), ("CISCO-PROCESS-MIB", "cpmProcessExtRevOverflowGroup"), ("CISCO-PROCESS-MIB", "cpmProcessExtRevHCGroup"), ("CISCO-PROCESS-MIB", "cpmThreadOverflowGroup"), ("CISCO-PROCESS-MIB", "cpmThreadHCGroup"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessOverflowGroup"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessHCGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cProcessMIBComplianceRev3 = cProcessMIBComplianceRev3.setStatus('deprecated')
cProcessMIBComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 1, 6)).setObjects(("CISCO-PROCESS-MIB", "cpmCPUTotalGroupRev1"), ("CISCO-PROCESS-MIB", "cpmCPUHistoryGroup"), ("CISCO-PROCESS-MIB", "cpmCPUThresholdNotificationGroup"), ("CISCO-PROCESS-MIB", "cpmProcessExtGroupRev"), ("CISCO-PROCESS-MIB", "cpmCPUThresholdGroup"), ("CISCO-PROCESS-MIB", "cpmProcessGroupRev"), ("CISCO-PROCESS-MIB", "cpmCPUPosixMemoryGroup"), ("CISCO-PROCESS-MIB", "cpmPosixProcessGroup"), ("CISCO-PROCESS-MIB", "cpmThreadGroup"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessGroup"), ("CISCO-PROCESS-MIB", "cpmCPUTotalOverflowGroup"), ("CISCO-PROCESS-MIB", "cpmCPUTotalHCGroup"), ("CISCO-PROCESS-MIB", "cpmProcessExtRevOverflowGroup"), ("CISCO-PROCESS-MIB", "cpmProcessExtRevHCGroup"), ("CISCO-PROCESS-MIB", "cpmThreadOverflowGroup"), ("CISCO-PROCESS-MIB", "cpmThreadHCGroup"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessOverflowGroup"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessHCGroup"), ("CISCO-PROCESS-MIB", "cpmCPULoadAvgGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cProcessMIBComplianceRev4 = cProcessMIBComplianceRev4.setStatus('deprecated')
cProcessMIBComplianceRev5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 1, 7)).setObjects(("CISCO-PROCESS-MIB", "cpmCPUTotalGroupRev1"), ("CISCO-PROCESS-MIB", "cpmCoreGroup"), ("CISCO-PROCESS-MIB", "cpmCPUHistoryGroup"), ("CISCO-PROCESS-MIB", "cpmCPUThresholdNotificationGroup"), ("CISCO-PROCESS-MIB", "cpmProcessExtGroupRev"), ("CISCO-PROCESS-MIB", "cpmCPUThresholdGroup"), ("CISCO-PROCESS-MIB", "cpmProcessGroupRev"), ("CISCO-PROCESS-MIB", "cpmCPUPosixMemoryGroup"), ("CISCO-PROCESS-MIB", "cpmPosixProcessGroup"), ("CISCO-PROCESS-MIB", "cpmThreadGroup"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessGroup"), ("CISCO-PROCESS-MIB", "cpmCPUTotalOverflowGroup"), ("CISCO-PROCESS-MIB", "cpmCPUTotalHCGroup"), ("CISCO-PROCESS-MIB", "cpmProcessExtRevOverflowGroup"), ("CISCO-PROCESS-MIB", "cpmProcessExtRevHCGroup"), ("CISCO-PROCESS-MIB", "cpmThreadOverflowGroup"), ("CISCO-PROCESS-MIB", "cpmThreadHCGroup"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessOverflowGroup"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessHCGroup"), ("CISCO-PROCESS-MIB", "cpmCPULoadAvgGroup"), ("CISCO-PROCESS-MIB", "cpmCPUTotalMemoryCommitGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cProcessMIBComplianceRev5 = cProcessMIBComplianceRev5.setStatus('current')
cpmCPUTotalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 1)).setObjects(("CISCO-PROCESS-MIB", "cpmCPUTotalPhysicalIndex"), ("CISCO-PROCESS-MIB", "cpmCPUTotal5sec"), ("CISCO-PROCESS-MIB", "cpmCPUTotal1min"), ("CISCO-PROCESS-MIB", "cpmCPUTotal5min"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmCPUTotalGroup = cpmCPUTotalGroup.setStatus('deprecated')
cpmProcessGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 2)).setObjects(("CISCO-PROCESS-MIB", "cpmProcessPID"), ("CISCO-PROCESS-MIB", "cpmProcessName"), ("CISCO-PROCESS-MIB", "cpmProcessuSecs"), ("CISCO-PROCESS-MIB", "cpmProcessTimeCreated"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmProcessGroup = cpmProcessGroup.setStatus('deprecated')
cpmProcessExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 3)).setObjects(("CISCO-PROCESS-MIB", "cpmProcExtMemAllocated"), ("CISCO-PROCESS-MIB", "cpmProcExtMemFreed"), ("CISCO-PROCESS-MIB", "cpmProcExtInvoked"), ("CISCO-PROCESS-MIB", "cpmProcExtRuntime"), ("CISCO-PROCESS-MIB", "cpmProcExtUtil5Sec"), ("CISCO-PROCESS-MIB", "cpmProcExtUtil1Min"), ("CISCO-PROCESS-MIB", "cpmProcExtUtil5Min"), ("CISCO-PROCESS-MIB", "cpmProcExtPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmProcessExtGroup = cpmProcessExtGroup.setStatus('deprecated')
cpmCPUTotalGroupRev = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 4)).setObjects(("CISCO-PROCESS-MIB", "cpmCPUTotalPhysicalIndex"), ("CISCO-PROCESS-MIB", "cpmCPUTotal5secRev"), ("CISCO-PROCESS-MIB", "cpmCPUTotal1minRev"), ("CISCO-PROCESS-MIB", "cpmCPUTotal5minRev"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmCPUTotalGroupRev = cpmCPUTotalGroupRev.setStatus('deprecated')
cpmProcessExtGroupRev = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 5)).setObjects(("CISCO-PROCESS-MIB", "cpmProcExtMemAllocatedRev"), ("CISCO-PROCESS-MIB", "cpmProcExtMemFreedRev"), ("CISCO-PROCESS-MIB", "cpmProcExtInvokedRev"), ("CISCO-PROCESS-MIB", "cpmProcExtRuntimeRev"), ("CISCO-PROCESS-MIB", "cpmProcExtUtil5SecRev"), ("CISCO-PROCESS-MIB", "cpmProcExtUtil1MinRev"), ("CISCO-PROCESS-MIB", "cpmProcExtUtil5MinRev"), ("CISCO-PROCESS-MIB", "cpmProcExtPriorityRev"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmProcessExtGroupRev = cpmProcessExtGroupRev.setStatus('current')
cpmProcessGroupRev = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 6)).setObjects(("CISCO-PROCESS-MIB", "cpmProcessPID"), ("CISCO-PROCESS-MIB", "cpmProcessName"), ("CISCO-PROCESS-MIB", "cpmProcessAverageUSecs"), ("CISCO-PROCESS-MIB", "cpmProcessTimeCreated"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmProcessGroupRev = cpmProcessGroupRev.setStatus('current')
cpmCPUTotalGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 7)).setObjects(("CISCO-PROCESS-MIB", "cpmCPUTotalPhysicalIndex"), ("CISCO-PROCESS-MIB", "cpmCPUTotal1minRev"), ("CISCO-PROCESS-MIB", "cpmCPUTotal5minRev"), ("CISCO-PROCESS-MIB", "cpmCPUMonInterval"), ("CISCO-PROCESS-MIB", "cpmCPUTotalMonIntervalValue"), ("CISCO-PROCESS-MIB", "cpmCPUInterruptMonIntervalValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmCPUTotalGroupRev1 = cpmCPUTotalGroupRev1.setStatus('current')
cpmCPUThresholdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 8)).setObjects(("CISCO-PROCESS-MIB", "cpmCPURisingThresholdValue"), ("CISCO-PROCESS-MIB", "cpmCPURisingThresholdPeriod"), ("CISCO-PROCESS-MIB", "cpmCPUFallingThresholdValue"), ("CISCO-PROCESS-MIB", "cpmCPUFallingThresholdPeriod"), ("CISCO-PROCESS-MIB", "cpmCPUThresholdEntryStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmCPUThresholdGroup = cpmCPUThresholdGroup.setStatus('current')
cpmCPUHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 9)).setObjects(("CISCO-PROCESS-MIB", "cpmCPUHistorySize"), ("CISCO-PROCESS-MIB", "cpmCPUHistoryThreshold"), ("CISCO-PROCESS-MIB", "cpmCPUHistoryTotalUtil"), ("CISCO-PROCESS-MIB", "cpmCPUHistoryInterruptUtil"), ("CISCO-PROCESS-MIB", "cpmCPUHistoryCreatedTime"), ("CISCO-PROCESS-MIB", "cpmCPUHistoryReportSize"), ("CISCO-PROCESS-MIB", "cpmCPUHistoryProcId"), ("CISCO-PROCESS-MIB", "cpmCPUHistoryProcName"), ("CISCO-PROCESS-MIB", "cpmCPUHistoryProcCreated"), ("CISCO-PROCESS-MIB", "cpmCPUHistoryProcUtil"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmCPUHistoryGroup = cpmCPUHistoryGroup.setStatus('current')
cpmCPUThresholdNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 10)).setObjects(("CISCO-PROCESS-MIB", "cpmCPURisingThreshold"), ("CISCO-PROCESS-MIB", "cpmCPUFallingThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmCPUThresholdNotificationGroup = cpmCPUThresholdNotificationGroup.setStatus('current')
cpmCPUPosixMemoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 11)).setObjects(("CISCO-PROCESS-MIB", "cpmCPUMemoryUsed"), ("CISCO-PROCESS-MIB", "cpmCPUMemoryFree"), ("CISCO-PROCESS-MIB", "cpmCPUMemoryKernelReserved"), ("CISCO-PROCESS-MIB", "cpmCPUMemoryLowest"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmCPUPosixMemoryGroup = cpmCPUPosixMemoryGroup.setStatus('current')
cpmPosixProcessGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 12)).setObjects(("CISCO-PROCESS-MIB", "cpmProcessType"), ("CISCO-PROCESS-MIB", "cpmProcessRespawn"), ("CISCO-PROCESS-MIB", "cpmProcessRespawnCount"), ("CISCO-PROCESS-MIB", "cpmProcessRespawnAfterLastPatch"), ("CISCO-PROCESS-MIB", "cpmProcessMemoryCore"), ("CISCO-PROCESS-MIB", "cpmProcessLastRestartUser"), ("CISCO-PROCESS-MIB", "cpmProcessTextSegmentSize"), ("CISCO-PROCESS-MIB", "cpmProcessDataSegmentSize"), ("CISCO-PROCESS-MIB", "cpmProcessStackSize"), ("CISCO-PROCESS-MIB", "cpmProcessDynamicMemorySize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmPosixProcessGroup = cpmPosixProcessGroup.setStatus('current')
cpmThreadGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 13)).setObjects(("CISCO-PROCESS-MIB", "cpmThreadName"), ("CISCO-PROCESS-MIB", "cpmThreadPriority"), ("CISCO-PROCESS-MIB", "cpmThreadState"), ("CISCO-PROCESS-MIB", "cpmThreadBlockingProcess"), ("CISCO-PROCESS-MIB", "cpmThreadCpuUtilization"), ("CISCO-PROCESS-MIB", "cpmThreadStackSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmThreadGroup = cpmThreadGroup.setStatus('current')
cpmVirtualProcessGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 14)).setObjects(("CISCO-PROCESS-MIB", "cpmVirtualProcessName"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessUtil5Sec"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessUtil1Min"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessUtil5Min"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessMemAllocated"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessMemFreed"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessInvokeCount"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessRuntime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmVirtualProcessGroup = cpmVirtualProcessGroup.setStatus('current')
cpmCPUTotalOverflowGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 15)).setObjects(("CISCO-PROCESS-MIB", "cpmCPUMemoryUsedOvrflw"), ("CISCO-PROCESS-MIB", "cpmCPUMemoryFreeOvrflw"), ("CISCO-PROCESS-MIB", "cpmCPUMemoryKernelReservedOvrflw"), ("CISCO-PROCESS-MIB", "cpmCPUMemoryLowestOvrflw"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmCPUTotalOverflowGroup = cpmCPUTotalOverflowGroup.setStatus('current')
cpmCPUTotalHCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 16)).setObjects(("CISCO-PROCESS-MIB", "cpmCPUMemoryHCUsed"), ("CISCO-PROCESS-MIB", "cpmCPUMemoryHCFree"), ("CISCO-PROCESS-MIB", "cpmCPUMemoryHCKernelReserved"), ("CISCO-PROCESS-MIB", "cpmCPUMemoryHCLowest"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmCPUTotalHCGroup = cpmCPUTotalHCGroup.setStatus('current')
cpmProcessExtRevOverflowGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 17)).setObjects(("CISCO-PROCESS-MIB", "cpmProcExtMemAllocatedRevOvrflw"), ("CISCO-PROCESS-MIB", "cpmProcExtMemFreedRevOvrflw"), ("CISCO-PROCESS-MIB", "cpmProcessTextSegmentSizeOvrflw"), ("CISCO-PROCESS-MIB", "cpmProcessDataSegmentSizeOvrflw"), ("CISCO-PROCESS-MIB", "cpmProcessStackSizeOvrflw"), ("CISCO-PROCESS-MIB", "cpmProcessDynamicMemorySizeOvrflw"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmProcessExtRevOverflowGroup = cpmProcessExtRevOverflowGroup.setStatus('current')
cpmProcessExtRevHCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 18)).setObjects(("CISCO-PROCESS-MIB", "cpmProcExtHCMemAllocatedRev"), ("CISCO-PROCESS-MIB", "cpmProcExtHCMemFreedRev"), ("CISCO-PROCESS-MIB", "cpmProcessHCTextSegmentSize"), ("CISCO-PROCESS-MIB", "cpmProcessHCDataSegmentSize"), ("CISCO-PROCESS-MIB", "cpmProcessHCStackSize"), ("CISCO-PROCESS-MIB", "cpmProcessHCDynamicMemorySize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmProcessExtRevHCGroup = cpmProcessExtRevHCGroup.setStatus('current')
cpmThreadOverflowGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 19)).setObjects(("CISCO-PROCESS-MIB", "cpmThreadStackSizeOvrflw"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmThreadOverflowGroup = cpmThreadOverflowGroup.setStatus('current')
cpmThreadHCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 20)).setObjects(("CISCO-PROCESS-MIB", "cpmThreadHCStackSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmThreadHCGroup = cpmThreadHCGroup.setStatus('current')
cpmVirtualProcessOverflowGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 21)).setObjects(("CISCO-PROCESS-MIB", "cpmVirtualProcessMemAllocatedOvrflw"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessMemFreedOvrflw"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmVirtualProcessOverflowGroup = cpmVirtualProcessOverflowGroup.setStatus('current')
cpmVirtualProcessHCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 22)).setObjects(("CISCO-PROCESS-MIB", "cpmVirtualProcessHCMemAllocated"), ("CISCO-PROCESS-MIB", "cpmVirtualProcessHCMemFreed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmVirtualProcessHCGroup = cpmVirtualProcessHCGroup.setStatus('current')
cpmCPULoadAvgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 23)).setObjects(("CISCO-PROCESS-MIB", "cpmCPULoadAvg1min"), ("CISCO-PROCESS-MIB", "cpmCPULoadAvg5min"), ("CISCO-PROCESS-MIB", "cpmCPULoadAvg15min"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmCPULoadAvgGroup = cpmCPULoadAvgGroup.setStatus('current')
cpmCPUTotalMemoryCommitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 24)).setObjects(("CISCO-PROCESS-MIB", "cpmCPUMemoryCommitted"), ("CISCO-PROCESS-MIB", "cpmCPUMemoryCommittedOvrflw"), ("CISCO-PROCESS-MIB", "cpmCPUMemoryHCCommitted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmCPUTotalMemoryCommitGroup = cpmCPUTotalMemoryCommitGroup.setStatus('current')
cpmCoreGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 109, 3, 2, 25)).setObjects(("CISCO-PROCESS-MIB", "cpmCorePhysicalIndex"), ("CISCO-PROCESS-MIB", "cpmCore5sec"), ("CISCO-PROCESS-MIB", "cpmCore1min"), ("CISCO-PROCESS-MIB", "cpmCore5min"), ("CISCO-PROCESS-MIB", "cpmCoreLoadAvg1min"), ("CISCO-PROCESS-MIB", "cpmCoreLoadAvg5min"), ("CISCO-PROCESS-MIB", "cpmCoreLoadAvg15min"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpmCoreGroup = cpmCoreGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-PROCESS-MIB", cpmCPUHistoryReportSize=cpmCPUHistoryReportSize, cpmCPUMemoryUsed=cpmCPUMemoryUsed, cpmProcExtInvoked=cpmProcExtInvoked, cpmCPUThresholdNotificationGroup=cpmCPUThresholdNotificationGroup, cpmCPUTotal1min=cpmCPUTotal1min, cpmCPUHistoryProcName=cpmCPUHistoryProcName, cpmCPUHistoryProcUtil=cpmCPUHistoryProcUtil, cpmCoreIndex=cpmCoreIndex, cpmProcessTextSegmentSize=cpmProcessTextSegmentSize, cpmCPUMemoryKernelReserved=cpmCPUMemoryKernelReserved, cpmCPUFallingThreshold=cpmCPUFallingThreshold, cpmCPURisingThresholdValue=cpmCPURisingThresholdValue, cpmThread=cpmThread, cpmPosixProcessGroup=cpmPosixProcessGroup, cpmProcessStackSizeOvrflw=cpmProcessStackSizeOvrflw, cpmProcessType=cpmProcessType, cpmVirtualProcessTable=cpmVirtualProcessTable, ciscoProcessMIBNotifPrefix=ciscoProcessMIBNotifPrefix, cProcessMIBComplianceRev5=cProcessMIBComplianceRev5, ciscoProcessMIBConformance=ciscoProcessMIBConformance, cpmCPUFallingThresholdValue=cpmCPUFallingThresholdValue, cpmProcessDataSegmentSize=cpmProcessDataSegmentSize, cpmVirtualProcessInvokeCount=cpmVirtualProcessInvokeCount, cpmProcExtMemFreedRev=cpmProcExtMemFreedRev, cpmCPUThresholdClass=cpmCPUThresholdClass, cpmProcExtInvokedRev=cpmProcExtInvokedRev, cpmCPUHistoryEntry=cpmCPUHistoryEntry, cpmProcessStackSize=cpmProcessStackSize, cpmCPUMemoryHCUsed=cpmCPUMemoryHCUsed, cpmProcExtHCMemFreedRev=cpmProcExtHCMemFreedRev, cpmVirtualProcessMemFreedOvrflw=cpmVirtualProcessMemFreedOvrflw, cpmThreadEntry=cpmThreadEntry, cpmCPUTotalPhysicalIndex=cpmCPUTotalPhysicalIndex, cpmCPUTotalGroup=cpmCPUTotalGroup, cpmCPUTotalMonIntervalValue=cpmCPUTotalMonIntervalValue, cpmProcessName=cpmProcessName, cpmGroups=cpmGroups, cpmProcExtUtil5Sec=cpmProcExtUtil5Sec, cpmThreadOverflowGroup=cpmThreadOverflowGroup, cpmProcessTable=cpmProcessTable, cpmCPUHistoryTable=cpmCPUHistoryTable, cpmThreadGroup=cpmThreadGroup, cpmProcessHCTextSegmentSize=cpmProcessHCTextSegmentSize, cpmProcessLastRestartUser=cpmProcessLastRestartUser, cpmCPUPosixMemoryGroup=cpmCPUPosixMemoryGroup, ciscoProcessMIBNotifs=ciscoProcessMIBNotifs, cpmProcessTimeCreated=cpmProcessTimeCreated, cpmProcessAverageUSecs=cpmProcessAverageUSecs, cpmProcessGroup=cpmProcessGroup, cpmCPUHistory=cpmCPUHistory, cpmVirtualProcessName=cpmVirtualProcessName, cpmCPUHistoryCreatedTime=cpmCPUHistoryCreatedTime, cpmCPUTotal5min=cpmCPUTotal5min, cpmProcessExtTable=cpmProcessExtTable, cpmCPULoadAvg5min=cpmCPULoadAvg5min, cpmCPURisingThreshold=cpmCPURisingThreshold, cpmCPUTotalGroupRev=cpmCPUTotalGroupRev, cpmVirtualProcessUtil5Min=cpmVirtualProcessUtil5Min, ciscoProcessMIBObjects=ciscoProcessMIBObjects, cpmCompliances=cpmCompliances, cpmCPUTotal1minRev=cpmCPUTotal1minRev, cpmProcessExtRevTable=cpmProcessExtRevTable, cpmCPUHistoryGroup=cpmCPUHistoryGroup, cpmCPUHistoryReportId=cpmCPUHistoryReportId, cpmThreadCpuUtilization=cpmThreadCpuUtilization, cpmProcessEntry=cpmProcessEntry, cpmProcessDynamicMemorySize=cpmProcessDynamicMemorySize, cpmCoreEntry=cpmCoreEntry, cpmCPUMemoryHCKernelReserved=cpmCPUMemoryHCKernelReserved, cpmVirtualProcessMemAllocated=cpmVirtualProcessMemAllocated, cpmProcessRespawn=cpmProcessRespawn, cpmCPUMemoryFree=cpmCPUMemoryFree, cpmCoreLoadAvg15min=cpmCoreLoadAvg15min, cpmCPUTotalIndex=cpmCPUTotalIndex, cpmThreadStackSizeOvrflw=cpmThreadStackSizeOvrflw, cpmCPUThresholdGroup=cpmCPUThresholdGroup, cpmCPUHistorySize=cpmCPUHistorySize, cpmVirtualProcessMemAllocatedOvrflw=cpmVirtualProcessMemAllocatedOvrflw, cpmCoreLoadAvg1min=cpmCoreLoadAvg1min, cpmCPUMemoryHCLowest=cpmCPUMemoryHCLowest, cpmThreadPriority=cpmThreadPriority, cpmCore5sec=cpmCore5sec, cpmProcessRespawnAfterLastPatch=cpmProcessRespawnAfterLastPatch, cpmThreadID=cpmThreadID, cpmCPUMemoryLowestOvrflw=cpmCPUMemoryLowestOvrflw, cpmCPUMemoryCommitted=cpmCPUMemoryCommitted, cpmCoreTable=cpmCoreTable, cpmProcessExtEntry=cpmProcessExtEntry, cpmProcExtUtil5Min=cpmProcExtUtil5Min, cpmVirtualProcessGroup=cpmVirtualProcessGroup, cpmProcessTextSegmentSizeOvrflw=cpmProcessTextSegmentSizeOvrflw, cpmVirtualProcessID=cpmVirtualProcessID, cpmProcessDataSegmentSizeOvrflw=cpmProcessDataSegmentSizeOvrflw, cProcessMIBCompliance=cProcessMIBCompliance, cpmCPU=cpmCPU, cpmCPUMonInterval=cpmCPUMonInterval, cpmProcessHCStackSize=cpmProcessHCStackSize, cpmProcExtRuntimeRev=cpmProcExtRuntimeRev, cpmProcessMemoryCore=cpmProcessMemoryCore, cpmProcExtPriorityRev=cpmProcExtPriorityRev, cpmThreadHCStackSize=cpmThreadHCStackSize, cProcessMIBComplianceRev4=cProcessMIBComplianceRev4, cpmCPUMemoryUsedOvrflw=cpmCPUMemoryUsedOvrflw, cpmProcessGroupRev=cpmProcessGroupRev, cpmCoreLoadAvg5min=cpmCoreLoadAvg5min, cpmProcessHCDataSegmentSize=cpmProcessHCDataSegmentSize, cpmProcessRespawnCount=cpmProcessRespawnCount, cpmCPUProcessHistoryTable=cpmCPUProcessHistoryTable, cpmProcExtUtil1MinRev=cpmProcExtUtil1MinRev, cpmCPURisingThresholdPeriod=cpmCPURisingThresholdPeriod, cpmCPUHistoryThreshold=cpmCPUHistoryThreshold, cProcessMIBComplianceRev2=cProcessMIBComplianceRev2, cpmCPUInterruptMonIntervalValue=cpmCPUInterruptMonIntervalValue, cpmProcessExtRevEntry=cpmProcessExtRevEntry, cpmProcExtUtil5MinRev=cpmProcExtUtil5MinRev, cpmProcExtHCMemAllocatedRev=cpmProcExtHCMemAllocatedRev, cpmCPUMemoryFreeOvrflw=cpmCPUMemoryFreeOvrflw, cpmCPUThresholdEntry=cpmCPUThresholdEntry, PYSNMP_MODULE_ID=ciscoProcessMIB, cpmCPUTotalEntry=cpmCPUTotalEntry, cpmCoreGroup=cpmCoreGroup, cpmProcessExtRevHCGroup=cpmProcessExtRevHCGroup, cpmCPULoadAvgGroup=cpmCPULoadAvgGroup, cpmThreadState=cpmThreadState, cpmCore1min=cpmCore1min, cpmThreadName=cpmThreadName, cpmProcExtMemFreed=cpmProcExtMemFreed, cpmCPULoadAvg15min=cpmCPULoadAvg15min, cpmCPUHistoryProcCreated=cpmCPUHistoryProcCreated, cProcessMIBComplianceRev3=cProcessMIBComplianceRev3, cpmVirtualProcessUtil5Sec=cpmVirtualProcessUtil5Sec, cpmCPULoadAvg1min=cpmCPULoadAvg1min, cpmVirtualProcessEntry=cpmVirtualProcessEntry, cpmProcExtMemAllocated=cpmProcExtMemAllocated, cProcessMIBComplianceRev1=cProcessMIBComplianceRev1, cpmCPUProcessHistoryIndex=cpmCPUProcessHistoryIndex, cpmCPUTotalTable=cpmCPUTotalTable, cpmVirtualProcessHCMemFreed=cpmVirtualProcessHCMemFreed, cpmCore5min=cpmCore5min, cpmCPUProcessHistoryEntry=cpmCPUProcessHistoryEntry, cpmProcessExtGroupRev=cpmProcessExtGroupRev, cpmCPUTotalGroupRev1=cpmCPUTotalGroupRev1, cpmCPUFallingThresholdPeriod=cpmCPUFallingThresholdPeriod, cpmProcExtMemAllocatedRevOvrflw=cpmProcExtMemAllocatedRevOvrflw, cpmProcess=cpmProcess, CPULoadAverage=CPULoadAverage, cpmCPUTotal5secRev=cpmCPUTotal5secRev, cProcessMIBComplianceRev=cProcessMIBComplianceRev, cpmProcExtRuntime=cpmProcExtRuntime, cpmCPUMemoryKernelReservedOvrflw=cpmCPUMemoryKernelReservedOvrflw, cpmVirtualProcessHCGroup=cpmVirtualProcessHCGroup, cpmProcExtMemFreedRevOvrflw=cpmProcExtMemFreedRevOvrflw, cpmVirtualProcessUtil1Min=cpmVirtualProcessUtil1Min, cpmCPUMemoryHCCommitted=cpmCPUMemoryHCCommitted, cpmVirtualProcess=cpmVirtualProcess, cpmVirtualProcessRuntime=cpmVirtualProcessRuntime, cpmThreadHCGroup=cpmThreadHCGroup, cpmProcExtMemAllocatedRev=cpmProcExtMemAllocatedRev, cpmCPUTotalMemoryCommitGroup=cpmCPUTotalMemoryCommitGroup, cpmCPUThresholdEntryStatus=cpmCPUThresholdEntryStatus, cpmCPUMemoryCommittedOvrflw=cpmCPUMemoryCommittedOvrflw, cpmProcessPID=cpmProcessPID, cpmCPUTotal5sec=cpmCPUTotal5sec, cpmProcessuSecs=cpmProcessuSecs, cpmThreadStackSize=cpmThreadStackSize, cpmCPUTotalOverflowGroup=cpmCPUTotalOverflowGroup, cpmProcessExtRevOverflowGroup=cpmProcessExtRevOverflowGroup, cpmCPUHistoryProcId=cpmCPUHistoryProcId, cpmProcExtPriority=cpmProcExtPriority, cpmCPUMemoryHCFree=cpmCPUMemoryHCFree, cpmCPUThresholdTable=cpmCPUThresholdTable, cpmProcExtUtil1Min=cpmProcExtUtil1Min, cpmThreadBlockingProcess=cpmThreadBlockingProcess, cpmCorePhysicalIndex=cpmCorePhysicalIndex, cpmCPUMemoryLowest=cpmCPUMemoryLowest, cpmVirtualProcessOverflowGroup=cpmVirtualProcessOverflowGroup, cpmProcExtUtil5SecRev=cpmProcExtUtil5SecRev, ciscoProcessMIB=ciscoProcessMIB, cpmCPUHistoryTotalUtil=cpmCPUHistoryTotalUtil, cpmCPUTotalHCGroup=cpmCPUTotalHCGroup, cpmProcessHCDynamicMemorySize=cpmProcessHCDynamicMemorySize, cpmCPUTotal5minRev=cpmCPUTotal5minRev, cpmVirtualProcessHCMemAllocated=cpmVirtualProcessHCMemAllocated, cpmVirtualProcessMemFreed=cpmVirtualProcessMemFreed, cpmProcessExtGroup=cpmProcessExtGroup, cpmThreadTable=cpmThreadTable, cpmCPUHistoryInterruptUtil=cpmCPUHistoryInterruptUtil, cpmProcessDynamicMemorySizeOvrflw=cpmProcessDynamicMemorySizeOvrflw)
