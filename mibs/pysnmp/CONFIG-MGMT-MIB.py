#
# PySNMP MIB module CONFIG-MGMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CONFIG-MGMT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:10:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ntEnterpriseDataTasmanMgmt, = mibBuilder.importSymbols("NT-ENTERPRISE-DATA-MIB", "ntEnterpriseDataTasmanMgmt")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, Unsigned32, NotificationType, ObjectIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32, Integer32, Bits, Counter64, TimeTicks, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Unsigned32", "NotificationType", "ObjectIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32", "Integer32", "Bits", "Counter64", "TimeTicks", "iso", "IpAddress")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
nnconfigMgmtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4))
nnconfigMgmtMib.setRevisions(('1900-08-16 00:00',))
if mibBuilder.loadTexts: nnconfigMgmtMib.setLastUpdated('0008160000Z')
if mibBuilder.loadTexts: nnconfigMgmtMib.setOrganization('Nortel Networks')
nncfgOperations = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 1))
nncfgMgmtEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 2))
nncfgNotificationEnables = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 3))
nncfgMgmtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 4))
nncfgMgmtTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 4, 0))
nncfgNetOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 1, 1), )
if mibBuilder.loadTexts: nncfgNetOperTable.setStatus('current')
nncfgNetOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 1, 1, 1), ).setIndexNames((0, "CONFIG-MGMT-MIB", "nncfgNetOperRandomNumber"))
if mibBuilder.loadTexts: nncfgNetOperEntry.setStatus('current')
nncfgNetOperRandomNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: nncfgNetOperRandomNumber.setStatus('current')
nncfgNetOperCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("config", 1), ("save", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nncfgNetOperCommand.setStatus('current')
nncfgNetOperAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nncfgNetOperAddress.setStatus('current')
nncfgNetOperFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nncfgNetOperFileName.setStatus('current')
nncfgNetOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("idle", 0), ("inProgress", 1), ("operationSuccess", 2), ("networkError", 3), ("fileAccessError", 4), ("serverAccessError", 5), ("fileOpenError", 6), ("notEnoughMemory", 7), ("unknownFailure", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncfgNetOperStatus.setStatus('current')
class CfgMedium(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("commandSource", 1), ("current", 2), ("flash", 3), ("erase-flash", 4), ("network", 5))

nncfgCurrentLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 2, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncfgCurrentLastChanged.setStatus('current')
nncfgCurrentLastSaved = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 2, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncfgCurrentLastSaved.setStatus('current')
nncfgMaxEvents = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncfgMaxEvents.setStatus('current')
nncfgEventTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 2, 4), )
if mibBuilder.loadTexts: nncfgEventTable.setStatus('current')
nncfgEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 2, 4, 1), ).setIndexNames((0, "CONFIG-MGMT-MIB", "nncfgEventIndex"))
if mibBuilder.loadTexts: nncfgEventEntry.setStatus('current')
nncfgEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 19)))
if mibBuilder.loadTexts: nncfgEventIndex.setStatus('current')
nncfgEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 2, 4, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncfgEventTime.setStatus('current')
nncfgEventConfigProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("commandLine", 1), ("snmp", 2), ("http", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncfgEventConfigProtocol.setStatus('current')
nncfgEventConfigSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 2, 4, 1, 4), CfgMedium()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncfgEventConfigSrc.setStatus('current')
nncfgEventConfigDst = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 2, 4, 1, 5), CfgMedium()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncfgEventConfigDst.setStatus('current')
nncfgEventLoginType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("console", 2), ("telnet", 3), ("rlogin", 4), ("dial", 5), ("other", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncfgEventLoginType.setStatus('current')
nncfgEventTerminalUser = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 2, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncfgEventTerminalUser.setStatus('current')
nncfgEventConfigSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 2, 4, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncfgEventConfigSrcAddress.setStatus('current')
nncfgEventFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 2, 4, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncfgEventFileName.setStatus('current')
nncfgEnableChangeNotification = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 3, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nncfgEnableChangeNotification.setStatus('current')
nncfgEnableSaveNotification = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 3, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nncfgEnableSaveNotification.setStatus('current')
nncfgEventChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 4, 0, 1)).setObjects(("CONFIG-MGMT-MIB", "nncfgEventConfigProtocol"), ("CONFIG-MGMT-MIB", "nncfgEventConfigSrc"), ("CONFIG-MGMT-MIB", "nncfgEventConfigDst"))
if mibBuilder.loadTexts: nncfgEventChangeNotification.setStatus('current')
nncfgEventSaveNotification = NotificationType((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 4, 0, 2)).setObjects(("CONFIG-MGMT-MIB", "nncfgEventConfigProtocol"), ("CONFIG-MGMT-MIB", "nncfgEventConfigSrc"), ("CONFIG-MGMT-MIB", "nncfgEventConfigDst"))
if mibBuilder.loadTexts: nncfgEventSaveNotification.setStatus('current')
nnconfigMgmtNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 4, 5)).setObjects(("CONFIG-MGMT-MIB", "nncfgEventChangeNotification"), ("CONFIG-MGMT-MIB", "nncfgEventSaveNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nnconfigMgmtNotificationGroup = nnconfigMgmtNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("CONFIG-MGMT-MIB", nncfgEventEntry=nncfgEventEntry, nncfgEventIndex=nncfgEventIndex, nncfgMgmtEvents=nncfgMgmtEvents, nncfgEnableSaveNotification=nncfgEnableSaveNotification, nncfgMgmtNotifications=nncfgMgmtNotifications, nncfgCurrentLastChanged=nncfgCurrentLastChanged, nncfgNetOperRandomNumber=nncfgNetOperRandomNumber, nncfgEventChangeNotification=nncfgEventChangeNotification, nncfgEventSaveNotification=nncfgEventSaveNotification, nncfgEventConfigProtocol=nncfgEventConfigProtocol, nncfgEventFileName=nncfgEventFileName, nnconfigMgmtNotificationGroup=nnconfigMgmtNotificationGroup, nncfgEventTime=nncfgEventTime, nncfgEventConfigSrcAddress=nncfgEventConfigSrcAddress, nncfgNetOperTable=nncfgNetOperTable, nncfgEventLoginType=nncfgEventLoginType, nncfgNetOperCommand=nncfgNetOperCommand, nncfgEventConfigSrc=nncfgEventConfigSrc, nncfgMgmtTraps=nncfgMgmtTraps, nncfgNotificationEnables=nncfgNotificationEnables, nncfgCurrentLastSaved=nncfgCurrentLastSaved, nncfgEventTable=nncfgEventTable, PYSNMP_MODULE_ID=nnconfigMgmtMib, nncfgOperations=nncfgOperations, nncfgEventTerminalUser=nncfgEventTerminalUser, nncfgEnableChangeNotification=nncfgEnableChangeNotification, CfgMedium=CfgMedium, nncfgEventConfigDst=nncfgEventConfigDst, nnconfigMgmtMib=nnconfigMgmtMib, nncfgNetOperEntry=nncfgNetOperEntry, nncfgNetOperAddress=nncfgNetOperAddress, nncfgNetOperFileName=nncfgNetOperFileName, nncfgMaxEvents=nncfgMaxEvents, nncfgNetOperStatus=nncfgNetOperStatus)
