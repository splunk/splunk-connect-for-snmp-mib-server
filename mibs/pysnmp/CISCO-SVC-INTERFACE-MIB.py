#
# PySNMP MIB module CISCO-SVC-INTERFACE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SVC-INTERFACE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:56:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
VsanIndex, FcNameId = mibBuilder.importSymbols("CISCO-ST-TC", "VsanIndex", "FcNameId")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ModuleIdentity, Counter64, IpAddress, iso, MibIdentifier, Gauge32, Integer32, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Bits, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter64", "IpAddress", "iso", "MibIdentifier", "Gauge32", "Integer32", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Bits", "NotificationType", "Unsigned32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
ciscoSvcInterfaceMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 378))
ciscoSvcInterfaceMIB.setRevisions(('2004-09-21 00:00',))
if mibBuilder.loadTexts: ciscoSvcInterfaceMIB.setLastUpdated('200409210000Z')
if mibBuilder.loadTexts: ciscoSvcInterfaceMIB.setOrganization('Cisco Systems Inc. ')
ciscoSvcInterfaceMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 378, 1))
ciscoSvcInterfaceMIBTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 378, 2))
cSvcInterfaceConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1))
cSvcInterfaceTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 2))
class NportType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 3)

csiNportTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 1), )
if mibBuilder.loadTexts: csiNportTable.setStatus('current')
csiNportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-SVC-INTERFACE-MIB", "csiNportIfIndex"), (0, "CISCO-SVC-INTERFACE-MIB", "csiNportType"), (0, "CISCO-SVC-INTERFACE-MIB", "csiNportVsanId"))
if mibBuilder.loadTexts: csiNportEntry.setStatus('current')
csiNportIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: csiNportIfIndex.setStatus('current')
csiNportType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 1, 1, 2), NportType())
if mibBuilder.loadTexts: csiNportType.setStatus('current')
csiNportVsanId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 1, 1, 3), VsanIndex())
if mibBuilder.loadTexts: csiNportVsanId.setStatus('current')
csiNportPwwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 1, 1, 4), FcNameId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csiNportPwwn.setStatus('current')
csiNportFcid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiNportFcid.setStatus('current')
csiNportState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiNportState.setStatus('current')
csiNportDownReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 1), ("adminDown", 2), ("ifSoftwareDown", 3), ("lineCardSwDown", 4), ("vsanDown", 5), ("inRemovalState", 6), ("ifHardwareDown", 7), ("uninitialized", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiNportDownReason.setStatus('current')
csiNportRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csiNportRowStatus.setStatus('current')
csiSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 2), )
if mibBuilder.loadTexts: csiSessionTable.setStatus('current')
csiSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-SVC-INTERFACE-MIB", "csiSessionIfIndex"), (0, "CISCO-SVC-INTERFACE-MIB", "csiSessionType"), (0, "CISCO-SVC-INTERFACE-MIB", "csiSessionVsanId"), (0, "CISCO-SVC-INTERFACE-MIB", "csiSessionId"))
if mibBuilder.loadTexts: csiSessionEntry.setStatus('current')
csiSessionIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: csiSessionIfIndex.setStatus('current')
csiSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 2, 1, 2), NportType())
if mibBuilder.loadTexts: csiSessionType.setStatus('current')
csiSessionVsanId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 2, 1, 3), VsanIndex())
if mibBuilder.loadTexts: csiSessionVsanId.setStatus('current')
csiSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: csiSessionId.setStatus('current')
csiSessionNportPwwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 2, 1, 5), FcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionNportPwwn.setStatus('current')
csiSessionPeerPwwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 2, 1, 6), FcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionPeerPwwn.setStatus('current')
csiSessionPeerNwwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 2, 1, 7), FcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionPeerNwwn.setStatus('current')
csiSessionPeerFcid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionPeerFcid.setStatus('current')
csiInterfaceStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 3), )
if mibBuilder.loadTexts: csiInterfaceStatsTable.setStatus('current')
csiInterfaceStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-SVC-INTERFACE-MIB", "csiNportIfIndex"))
if mibBuilder.loadTexts: csiInterfaceStatsEntry.setStatus('current')
csiInterfaceInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiInterfaceInFrames.setStatus('current')
csiInterfaceInFrameRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiInterfaceInFrameRate.setStatus('current')
csiInterfaceInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiInterfaceInBytes.setStatus('current')
csiInterfaceInBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiInterfaceInBytesRate.setStatus('current')
csiInterfaceOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiInterfaceOutFrames.setStatus('current')
csiInterfaceOutFrameRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiInterfaceOutFrameRate.setStatus('current')
csiInterfaceOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiInterfaceOutBytes.setStatus('current')
csiInterfaceOutBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiInterfaceOutBytesRate.setStatus('current')
csiNportStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 4), )
if mibBuilder.loadTexts: csiNportStatsTable.setStatus('current')
csiNportStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-SVC-INTERFACE-MIB", "csiNportIfIndex"), (0, "CISCO-SVC-INTERFACE-MIB", "csiNportType"), (0, "CISCO-SVC-INTERFACE-MIB", "csiNportVsanId"))
if mibBuilder.loadTexts: csiNportStatsEntry.setStatus('current')
csiNportSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiNportSessions.setStatus('current')
csiNportInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiNportInFrames.setStatus('current')
csiNportInFrameRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiNportInFrameRate.setStatus('current')
csiNportInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiNportInBytes.setStatus('current')
csiNportInBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiNportInBytesRate.setStatus('current')
csiNportOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiNportOutFrames.setStatus('current')
csiNportOutFrameRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 4, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiNportOutFrameRate.setStatus('current')
csiNportOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiNportOutBytes.setStatus('current')
csiNportOutBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 4, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiNportOutBytesRate.setStatus('current')
csiSessionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5), )
if mibBuilder.loadTexts: csiSessionStatsTable.setStatus('current')
csiSessionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-SVC-INTERFACE-MIB", "csiSessionIfIndex"), (0, "CISCO-SVC-INTERFACE-MIB", "csiSessionType"), (0, "CISCO-SVC-INTERFACE-MIB", "csiSessionVsanId"), (0, "CISCO-SVC-INTERFACE-MIB", "csiSessionId"))
if mibBuilder.loadTexts: csiSessionStatsEntry.setStatus('current')
csiSessionInELSFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionInELSFrames.setStatus('current')
csiSessionInBLSFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionInBLSFrames.setStatus('current')
csiSessionInFCPCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionInFCPCmds.setStatus('current')
csiSessionInFCPXferRdys = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionInFCPXferRdys.setStatus('current')
csiSessionInFCPDataFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionInFCPDataFrames.setStatus('current')
csiSessionInFCPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionInFCPStatus.setStatus('current')
csiSessionInFCPDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionInFCPDataBytes.setStatus('current')
csiSessionInFCPOverRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionInFCPOverRuns.setStatus('current')
csiSessionInFCPUnderRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionInFCPUnderRuns.setStatus('current')
csiSessionInAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionInAborts.setStatus('current')
csiSessionOutELSFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionOutELSFrames.setStatus('current')
csiSessionOutBLSFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionOutBLSFrames.setStatus('current')
csiSessionOutFCPCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionOutFCPCmds.setStatus('current')
csiSessionOutFCPXferRdys = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionOutFCPXferRdys.setStatus('current')
csiSessionOutFCPDataFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionOutFCPDataFrames.setStatus('current')
csiSessionOutFCPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionOutFCPStatus.setStatus('current')
csiSessionOutFCPDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionOutFCPDataBytes.setStatus('current')
csiSessionOutFCPOverRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionOutFCPOverRuns.setStatus('current')
csiSessionOutFCPUnderRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionOutFCPUnderRuns.setStatus('current')
csiSessionOutAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionOutAborts.setStatus('current')
csiSessionOpenXchanges = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionOpenXchanges.setStatus('current')
csiSessionInBadFc2Drops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionInBadFc2Drops.setStatus('current')
csiSessionInBadFcPDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionInBadFcPDrops.setStatus('current')
csiSessionInFCPDataExcess = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiSessionInFCPDataExcess.setStatus('current')
csiInterfaceNwwnTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 6), )
if mibBuilder.loadTexts: csiInterfaceNwwnTable.setStatus('current')
csiInterfaceNwwnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 6, 1), ).setIndexNames((0, "CISCO-SVC-INTERFACE-MIB", "csiNportIfIndex"))
if mibBuilder.loadTexts: csiInterfaceNwwnEntry.setStatus('current')
csiInterfaceNwwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 6, 1, 1), FcNameId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csiInterfaceNwwn.setStatus('current')
csiInterfaceOperStateCause = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 1, 6, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csiInterfaceOperStateCause.setStatus('current')
csiErrorId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: csiErrorId.setStatus('current')
csiErrorSeqNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: csiErrorSeqNumber.setStatus('current')
csiSlotNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: csiSlotNumber.setStatus('current')
csiPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: csiPortNumber.setStatus('current')
csiObjName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 2, 5), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: csiObjName.setStatus('current')
csiErrorText = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 2, 6), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: csiErrorText.setStatus('current')
csiMachineType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 2, 7), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: csiMachineType.setStatus('current')
csiCardSerialNo = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 2, 8), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: csiCardSerialNo.setStatus('current')
csiSwVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 2, 9), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: csiSwVersion.setStatus('current')
csiSwitchName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 2, 10), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: csiSwitchName.setStatus('current')
csiClusterName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 2, 11), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: csiClusterName.setStatus('current')
csiNodeName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 378, 1, 2, 12), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: csiNodeName.setStatus('current')
csiMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 378, 2, 0))
csiErrorTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 378, 2, 0, 1)).setObjects(("CISCO-SVC-INTERFACE-MIB", "csiErrorId"), ("CISCO-SVC-INTERFACE-MIB", "csiErrorSeqNumber"), ("CISCO-SVC-INTERFACE-MIB", "csiSlotNumber"), ("CISCO-SVC-INTERFACE-MIB", "csiPortNumber"), ("CISCO-SVC-INTERFACE-MIB", "csiObjName"), ("CISCO-SVC-INTERFACE-MIB", "csiErrorText"), ("CISCO-SVC-INTERFACE-MIB", "csiMachineType"), ("CISCO-SVC-INTERFACE-MIB", "csiCardSerialNo"), ("CISCO-SVC-INTERFACE-MIB", "csiSwVersion"), ("CISCO-SVC-INTERFACE-MIB", "csiSwitchName"), ("CISCO-SVC-INTERFACE-MIB", "csiClusterName"), ("CISCO-SVC-INTERFACE-MIB", "csiNodeName"))
if mibBuilder.loadTexts: csiErrorTrap.setStatus('current')
csiWarningTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 378, 2, 0, 2)).setObjects(("CISCO-SVC-INTERFACE-MIB", "csiErrorId"), ("CISCO-SVC-INTERFACE-MIB", "csiErrorSeqNumber"), ("CISCO-SVC-INTERFACE-MIB", "csiSlotNumber"), ("CISCO-SVC-INTERFACE-MIB", "csiPortNumber"), ("CISCO-SVC-INTERFACE-MIB", "csiObjName"), ("CISCO-SVC-INTERFACE-MIB", "csiErrorText"), ("CISCO-SVC-INTERFACE-MIB", "csiMachineType"), ("CISCO-SVC-INTERFACE-MIB", "csiCardSerialNo"), ("CISCO-SVC-INTERFACE-MIB", "csiSwVersion"), ("CISCO-SVC-INTERFACE-MIB", "csiSwitchName"), ("CISCO-SVC-INTERFACE-MIB", "csiClusterName"), ("CISCO-SVC-INTERFACE-MIB", "csiNodeName"))
if mibBuilder.loadTexts: csiWarningTrap.setStatus('current')
csiInformationTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 378, 2, 0, 3)).setObjects(("CISCO-SVC-INTERFACE-MIB", "csiErrorId"), ("CISCO-SVC-INTERFACE-MIB", "csiErrorSeqNumber"), ("CISCO-SVC-INTERFACE-MIB", "csiSlotNumber"), ("CISCO-SVC-INTERFACE-MIB", "csiPortNumber"), ("CISCO-SVC-INTERFACE-MIB", "csiObjName"), ("CISCO-SVC-INTERFACE-MIB", "csiErrorText"), ("CISCO-SVC-INTERFACE-MIB", "csiMachineType"), ("CISCO-SVC-INTERFACE-MIB", "csiCardSerialNo"), ("CISCO-SVC-INTERFACE-MIB", "csiSwVersion"), ("CISCO-SVC-INTERFACE-MIB", "csiSwitchName"), ("CISCO-SVC-INTERFACE-MIB", "csiClusterName"), ("CISCO-SVC-INTERFACE-MIB", "csiNodeName"))
if mibBuilder.loadTexts: csiInformationTrap.setStatus('current')
ciscoSvcMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 378, 3))
ciscoSvcMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 378, 3, 1))
ciscoSvcMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 378, 3, 2))
ciscoSvcMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 378, 3, 1, 1)).setObjects(("CISCO-SVC-INTERFACE-MIB", "csiNportGroup"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionGroup"), ("CISCO-SVC-INTERFACE-MIB", "csiInterfaceStatsGroup"), ("CISCO-SVC-INTERFACE-MIB", "csiNportStatsGroup"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionStatsGroup"), ("CISCO-SVC-INTERFACE-MIB", "csiInterfaceNwwnGroup"), ("CISCO-SVC-INTERFACE-MIB", "csiNotifObjectsGroup"), ("CISCO-SVC-INTERFACE-MIB", "cefcMgmtNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSvcMIBCompliance = ciscoSvcMIBCompliance.setStatus('current')
csiNportGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 378, 3, 2, 1)).setObjects(("CISCO-SVC-INTERFACE-MIB", "csiNportPwwn"), ("CISCO-SVC-INTERFACE-MIB", "csiNportFcid"), ("CISCO-SVC-INTERFACE-MIB", "csiNportState"), ("CISCO-SVC-INTERFACE-MIB", "csiNportDownReason"), ("CISCO-SVC-INTERFACE-MIB", "csiNportRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csiNportGroup = csiNportGroup.setStatus('current')
csiSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 378, 3, 2, 2)).setObjects(("CISCO-SVC-INTERFACE-MIB", "csiSessionNportPwwn"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionPeerPwwn"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionPeerNwwn"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionPeerFcid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csiSessionGroup = csiSessionGroup.setStatus('current')
csiInterfaceStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 378, 3, 2, 3)).setObjects(("CISCO-SVC-INTERFACE-MIB", "csiInterfaceInFrames"), ("CISCO-SVC-INTERFACE-MIB", "csiInterfaceInFrameRate"), ("CISCO-SVC-INTERFACE-MIB", "csiInterfaceInBytes"), ("CISCO-SVC-INTERFACE-MIB", "csiInterfaceInBytesRate"), ("CISCO-SVC-INTERFACE-MIB", "csiInterfaceOutFrames"), ("CISCO-SVC-INTERFACE-MIB", "csiInterfaceOutFrameRate"), ("CISCO-SVC-INTERFACE-MIB", "csiInterfaceOutBytes"), ("CISCO-SVC-INTERFACE-MIB", "csiInterfaceOutBytesRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csiInterfaceStatsGroup = csiInterfaceStatsGroup.setStatus('current')
csiNportStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 378, 3, 2, 4)).setObjects(("CISCO-SVC-INTERFACE-MIB", "csiNportSessions"), ("CISCO-SVC-INTERFACE-MIB", "csiNportInFrames"), ("CISCO-SVC-INTERFACE-MIB", "csiNportInFrameRate"), ("CISCO-SVC-INTERFACE-MIB", "csiNportInBytes"), ("CISCO-SVC-INTERFACE-MIB", "csiNportInBytesRate"), ("CISCO-SVC-INTERFACE-MIB", "csiNportOutFrames"), ("CISCO-SVC-INTERFACE-MIB", "csiNportOutFrameRate"), ("CISCO-SVC-INTERFACE-MIB", "csiNportOutBytes"), ("CISCO-SVC-INTERFACE-MIB", "csiNportOutBytesRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csiNportStatsGroup = csiNportStatsGroup.setStatus('current')
csiSessionStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 378, 3, 2, 5)).setObjects(("CISCO-SVC-INTERFACE-MIB", "csiSessionInELSFrames"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionInBLSFrames"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionInFCPCmds"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionInFCPXferRdys"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionInFCPDataFrames"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionInFCPStatus"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionInFCPDataBytes"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionInFCPOverRuns"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionInFCPUnderRuns"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionInAborts"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionOutELSFrames"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionOutBLSFrames"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionOutFCPCmds"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionOutFCPXferRdys"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionOutFCPDataFrames"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionOutFCPStatus"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionOutFCPDataBytes"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionOutFCPOverRuns"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionOutFCPUnderRuns"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionOutAborts"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionOpenXchanges"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionInBadFc2Drops"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionInBadFcPDrops"), ("CISCO-SVC-INTERFACE-MIB", "csiSessionInFCPDataExcess"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csiSessionStatsGroup = csiSessionStatsGroup.setStatus('current')
csiInterfaceNwwnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 378, 3, 2, 6)).setObjects(("CISCO-SVC-INTERFACE-MIB", "csiInterfaceNwwn"), ("CISCO-SVC-INTERFACE-MIB", "csiInterfaceOperStateCause"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csiInterfaceNwwnGroup = csiInterfaceNwwnGroup.setStatus('current')
csiNotifObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 378, 3, 2, 7)).setObjects(("CISCO-SVC-INTERFACE-MIB", "csiErrorId"), ("CISCO-SVC-INTERFACE-MIB", "csiErrorSeqNumber"), ("CISCO-SVC-INTERFACE-MIB", "csiSlotNumber"), ("CISCO-SVC-INTERFACE-MIB", "csiPortNumber"), ("CISCO-SVC-INTERFACE-MIB", "csiObjName"), ("CISCO-SVC-INTERFACE-MIB", "csiErrorText"), ("CISCO-SVC-INTERFACE-MIB", "csiMachineType"), ("CISCO-SVC-INTERFACE-MIB", "csiCardSerialNo"), ("CISCO-SVC-INTERFACE-MIB", "csiSwVersion"), ("CISCO-SVC-INTERFACE-MIB", "csiSwitchName"), ("CISCO-SVC-INTERFACE-MIB", "csiClusterName"), ("CISCO-SVC-INTERFACE-MIB", "csiNodeName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csiNotifObjectsGroup = csiNotifObjectsGroup.setStatus('current')
cefcMgmtNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 378, 3, 2, 8)).setObjects(("CISCO-SVC-INTERFACE-MIB", "csiErrorTrap"), ("CISCO-SVC-INTERFACE-MIB", "csiWarningTrap"), ("CISCO-SVC-INTERFACE-MIB", "csiInformationTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cefcMgmtNotificationsGroup = cefcMgmtNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-SVC-INTERFACE-MIB", csiSessionOutFCPDataFrames=csiSessionOutFCPDataFrames, csiSessionInFCPXferRdys=csiSessionInFCPXferRdys, csiNportStatsTable=csiNportStatsTable, csiSessionOutBLSFrames=csiSessionOutBLSFrames, csiNportOutBytes=csiNportOutBytes, csiInterfaceNwwnGroup=csiInterfaceNwwnGroup, csiSessionInFCPDataFrames=csiSessionInFCPDataFrames, csiNportType=csiNportType, csiSwitchName=csiSwitchName, csiNportGroup=csiNportGroup, csiWarningTrap=csiWarningTrap, csiSessionGroup=csiSessionGroup, csiInterfaceStatsTable=csiInterfaceStatsTable, csiInterfaceNwwn=csiInterfaceNwwn, PYSNMP_MODULE_ID=ciscoSvcInterfaceMIB, csiNotifObjectsGroup=csiNotifObjectsGroup, csiSessionInFCPUnderRuns=csiSessionInFCPUnderRuns, csiInterfaceNwwnTable=csiInterfaceNwwnTable, ciscoSvcMIBGroups=ciscoSvcMIBGroups, csiCardSerialNo=csiCardSerialNo, csiInterfaceInBytes=csiInterfaceInBytes, csiInterfaceOutFrameRate=csiInterfaceOutFrameRate, csiSessionPeerPwwn=csiSessionPeerPwwn, csiInterfaceOutBytesRate=csiInterfaceOutBytesRate, csiInterfaceInFrames=csiInterfaceInFrames, csiNportFcid=csiNportFcid, csiNportRowStatus=csiNportRowStatus, csiNportOutBytesRate=csiNportOutBytesRate, csiSessionInBadFcPDrops=csiSessionInBadFcPDrops, csiNportOutFrameRate=csiNportOutFrameRate, NportType=NportType, csiNportOutFrames=csiNportOutFrames, ciscoSvcMIBCompliance=ciscoSvcMIBCompliance, csiNportPwwn=csiNportPwwn, csiSessionOutFCPOverRuns=csiSessionOutFCPOverRuns, cSvcInterfaceConfiguration=cSvcInterfaceConfiguration, csiSessionInFCPDataBytes=csiSessionInFCPDataBytes, csiSessionPeerNwwn=csiSessionPeerNwwn, csiSessionEntry=csiSessionEntry, csiSessionTable=csiSessionTable, csiNportInBytes=csiNportInBytes, csiSessionInELSFrames=csiSessionInELSFrames, csiErrorTrap=csiErrorTrap, csiInterfaceOutFrames=csiInterfaceOutFrames, csiSessionIfIndex=csiSessionIfIndex, csiErrorSeqNumber=csiErrorSeqNumber, csiSessionInBLSFrames=csiSessionInBLSFrames, csiNportState=csiNportState, csiInterfaceOperStateCause=csiInterfaceOperStateCause, csiInterfaceStatsGroup=csiInterfaceStatsGroup, csiInterfaceNwwnEntry=csiInterfaceNwwnEntry, csiPortNumber=csiPortNumber, csiClusterName=csiClusterName, csiSessionStatsEntry=csiSessionStatsEntry, csiNportDownReason=csiNportDownReason, csiSessionInBadFc2Drops=csiSessionInBadFc2Drops, csiSessionOutELSFrames=csiSessionOutELSFrames, csiSlotNumber=csiSlotNumber, csiSessionOutAborts=csiSessionOutAborts, ciscoSvcInterfaceMIBTrapPrefix=ciscoSvcInterfaceMIBTrapPrefix, csiNportIfIndex=csiNportIfIndex, csiSessionInFCPCmds=csiSessionInFCPCmds, csiInformationTrap=csiInformationTrap, csiSessionInAborts=csiSessionInAborts, csiNportVsanId=csiNportVsanId, csiInterfaceInFrameRate=csiInterfaceInFrameRate, csiInterfaceOutBytes=csiInterfaceOutBytes, csiSessionOutFCPStatus=csiSessionOutFCPStatus, csiSessionNportPwwn=csiSessionNportPwwn, csiSessionInFCPDataExcess=csiSessionInFCPDataExcess, cefcMgmtNotificationsGroup=cefcMgmtNotificationsGroup, csiSessionVsanId=csiSessionVsanId, csiSwVersion=csiSwVersion, cSvcInterfaceTrapObjects=cSvcInterfaceTrapObjects, csiNportInBytesRate=csiNportInBytesRate, csiErrorText=csiErrorText, csiNportStatsGroup=csiNportStatsGroup, csiNportSessions=csiNportSessions, csiNportTable=csiNportTable, ciscoSvcMIBCompliances=ciscoSvcMIBCompliances, csiSessionOutFCPXferRdys=csiSessionOutFCPXferRdys, csiSessionOutFCPUnderRuns=csiSessionOutFCPUnderRuns, csiNportInFrames=csiNportInFrames, csiSessionStatsTable=csiSessionStatsTable, csiMIBTraps=csiMIBTraps, ciscoSvcInterfaceMIB=ciscoSvcInterfaceMIB, csiSessionId=csiSessionId, ciscoSvcMIBConformance=ciscoSvcMIBConformance, csiInterfaceStatsEntry=csiInterfaceStatsEntry, csiSessionPeerFcid=csiSessionPeerFcid, csiSessionInFCPOverRuns=csiSessionInFCPOverRuns, csiMachineType=csiMachineType, csiInterfaceInBytesRate=csiInterfaceInBytesRate, csiSessionOutFCPDataBytes=csiSessionOutFCPDataBytes, csiSessionType=csiSessionType, csiErrorId=csiErrorId, csiSessionOutFCPCmds=csiSessionOutFCPCmds, csiSessionStatsGroup=csiSessionStatsGroup, csiNportInFrameRate=csiNportInFrameRate, csiNportStatsEntry=csiNportStatsEntry, csiNportEntry=csiNportEntry, csiObjName=csiObjName, csiSessionInFCPStatus=csiSessionInFCPStatus, csiNodeName=csiNodeName, ciscoSvcInterfaceMIBObjects=ciscoSvcInterfaceMIBObjects, csiSessionOpenXchanges=csiSessionOpenXchanges)
