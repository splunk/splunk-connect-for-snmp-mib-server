#
# PySNMP MIB module CODIMA-GLOBAL-REG (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CODIMA-GLOBAL-REG
# Produced by pysmi-0.3.4 at Mon Apr 29 18:09:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ModuleIdentity, iso, MibIdentifier, Unsigned32, Integer32, IpAddress, Counter32, enterprises, Gauge32, TimeTicks, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ModuleIdentity", "iso", "MibIdentifier", "Unsigned32", "Integer32", "IpAddress", "Counter32", "enterprises", "Gauge32", "TimeTicks", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
codima = ObjectIdentity((1, 3, 6, 1, 4, 1, 226))
if mibBuilder.loadTexts: codima.setStatus('current')
codimaReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 1))
if mibBuilder.loadTexts: codimaReg.setStatus('current')
codimaModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 1, 1))
if mibBuilder.loadTexts: codimaModules.setStatus('current')
codimaRegMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 226, 1, 1, 1))
codimaRegMIB.setRevisions(('2003-05-29 15:50',))
if mibBuilder.loadTexts: codimaRegMIB.setLastUpdated('200305291550Z')
if mibBuilder.loadTexts: codimaRegMIB.setOrganization('CODIMA Technologies Ltd')
networkManagementProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 1, 2))
if mibBuilder.loadTexts: networkManagementProducts.setStatus('current')
expressConsoleManagerReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 1, 2, 1))
if mibBuilder.loadTexts: expressConsoleManagerReg.setStatus('current')
expressFoundationManagerReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 1, 2, 2))
if mibBuilder.loadTexts: expressFoundationManagerReg.setStatus('current')
expressFProbeReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 1, 2, 3))
if mibBuilder.loadTexts: expressFProbeReg.setStatus('current')
expressSProbeReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 1, 2, 4))
if mibBuilder.loadTexts: expressSProbeReg.setStatus('current')
expressPortableAnalyzerReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 1, 2, 5))
if mibBuilder.loadTexts: expressPortableAnalyzerReg.setStatus('current')
expressDeveloperReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 1, 2, 6))
if mibBuilder.loadTexts: expressDeveloperReg.setStatus('current')
codimaGeneric = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 2))
if mibBuilder.loadTexts: codimaGeneric.setStatus('current')
codimaProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3))
if mibBuilder.loadTexts: codimaProducts.setStatus('current')
codimaCaps = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 4))
if mibBuilder.loadTexts: codimaCaps.setStatus('current')
codimaReqs = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 5))
if mibBuilder.loadTexts: codimaReqs.setStatus('current')
codimaExpr = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 6))
if mibBuilder.loadTexts: codimaExpr.setStatus('current')
mibBuilder.exportSymbols("CODIMA-GLOBAL-REG", expressFoundationManagerReg=expressFoundationManagerReg, codimaReqs=codimaReqs, codimaExpr=codimaExpr, expressDeveloperReg=expressDeveloperReg, expressSProbeReg=expressSProbeReg, PYSNMP_MODULE_ID=codimaRegMIB, expressConsoleManagerReg=expressConsoleManagerReg, codimaProducts=codimaProducts, codimaCaps=codimaCaps, codima=codima, networkManagementProducts=networkManagementProducts, expressPortableAnalyzerReg=expressPortableAnalyzerReg, codimaRegMIB=codimaRegMIB, codimaGeneric=codimaGeneric, expressFProbeReg=expressFProbeReg, codimaReg=codimaReg, codimaModules=codimaModules)
