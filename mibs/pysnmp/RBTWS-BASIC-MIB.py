#
# PySNMP MIB module RBTWS-BASIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RBTWS-BASIC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:45:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
rbtwsMibs, = mibBuilder.importSymbols("RBTWS-ROOT-MIB", "rbtwsMibs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, MibIdentifier, Bits, TimeTicks, IpAddress, ObjectIdentity, Gauge32, iso, NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter64, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibIdentifier", "Bits", "TimeTicks", "IpAddress", "ObjectIdentity", "Gauge32", "iso", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter64", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
rbtwsBasic = ModuleIdentity((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2))
rbtwsBasic.setRevisions(('2006-07-10 00:08', '2006-04-14 00:07', '2005-01-01 00:00',))
if mibBuilder.loadTexts: rbtwsBasic.setLastUpdated('200607102335Z')
if mibBuilder.loadTexts: rbtwsBasic.setOrganization('Enterasys Networks')
class RbtwsLicenseFeature(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("none", 1), ("maxSupportedAPsOrDAPs", 2))

rbtwsBasicSystemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 1))
rbtwsSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbtwsSerialNumber.setStatus('current')
rbtwsSwMajorVersionNumber = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbtwsSwMajorVersionNumber.setStatus('current')
rbtwsSwMinorVersionNumber = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbtwsSwMinorVersionNumber.setStatus('current')
rbtwsVersionString = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbtwsVersionString.setStatus('current')
rbtwsMobilityDomainInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 2))
rbtwsMobilityDomainName = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbtwsMobilityDomainName.setStatus('current')
rbtwsMobilitySeedIp = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 2, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbtwsMobilitySeedIp.setStatus('current')
rbtwsMobilityMemberTableSize = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbtwsMobilityMemberTableSize.setStatus('current')
rbtwsMobilityMemberTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 2, 4), )
if mibBuilder.loadTexts: rbtwsMobilityMemberTable.setStatus('current')
rbtwsMobilityMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 2, 4, 1), ).setIndexNames((0, "RBTWS-BASIC-MIB", "rbtwsMobilityMemberEntryAddr"))
if mibBuilder.loadTexts: rbtwsMobilityMemberEntry.setStatus('current')
rbtwsMobilityMemberEntryAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 2, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbtwsMobilityMemberEntryAddr.setStatus('current')
rbtwsLicenseInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 3))
rbtwsLicenseInfoTableSize = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbtwsLicenseInfoTableSize.setStatus('current')
rbtwsLicenseInfoTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 3, 2), )
if mibBuilder.loadTexts: rbtwsLicenseInfoTable.setStatus('current')
rbtwsLicenseInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 3, 2, 1), ).setIndexNames((0, "RBTWS-BASIC-MIB", "rbtwsLicenseInfoEntryFeature"))
if mibBuilder.loadTexts: rbtwsLicenseInfoEntry.setStatus('current')
rbtwsLicenseInfoEntryFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 3, 2, 1, 1), RbtwsLicenseFeature())
if mibBuilder.loadTexts: rbtwsLicenseInfoEntryFeature.setStatus('current')
rbtwsLicenseInfoEntryValue = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbtwsLicenseInfoEntryValue.setStatus('current')
rbtwsLicenseInfoEntryDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 2, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbtwsLicenseInfoEntryDescr.setStatus('current')
mibBuilder.exportSymbols("RBTWS-BASIC-MIB", PYSNMP_MODULE_ID=rbtwsBasic, rbtwsVersionString=rbtwsVersionString, rbtwsMobilitySeedIp=rbtwsMobilitySeedIp, rbtwsBasicSystemInfo=rbtwsBasicSystemInfo, RbtwsLicenseFeature=RbtwsLicenseFeature, rbtwsLicenseInfoEntryDescr=rbtwsLicenseInfoEntryDescr, rbtwsMobilityMemberTableSize=rbtwsMobilityMemberTableSize, rbtwsSwMinorVersionNumber=rbtwsSwMinorVersionNumber, rbtwsMobilityMemberTable=rbtwsMobilityMemberTable, rbtwsMobilityDomainInfo=rbtwsMobilityDomainInfo, rbtwsMobilityMemberEntry=rbtwsMobilityMemberEntry, rbtwsMobilityMemberEntryAddr=rbtwsMobilityMemberEntryAddr, rbtwsMobilityDomainName=rbtwsMobilityDomainName, rbtwsBasic=rbtwsBasic, rbtwsLicenseInfoEntryValue=rbtwsLicenseInfoEntryValue, rbtwsSerialNumber=rbtwsSerialNumber, rbtwsLicenseInfoGroup=rbtwsLicenseInfoGroup, rbtwsLicenseInfoTable=rbtwsLicenseInfoTable, rbtwsLicenseInfoEntry=rbtwsLicenseInfoEntry, rbtwsLicenseInfoEntryFeature=rbtwsLicenseInfoEntryFeature, rbtwsSwMajorVersionNumber=rbtwsSwMajorVersionNumber, rbtwsLicenseInfoTableSize=rbtwsLicenseInfoTableSize)
