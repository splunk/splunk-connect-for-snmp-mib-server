#
# PySNMP MIB module CADANT-CMTS-PACKETCABLE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CADANT-CMTS-PACKETCABLE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:27:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
cadIfCmtsCardNumber, = mibBuilder.importSymbols("CADANT-CMTS-DOWNCHANNEL-MIB", "cadIfCmtsCardNumber")
cadOvSysCpuStatus, = mibBuilder.importSymbols("CADANT-CMTS-PROCESS-MIB", "cadOvSysCpuStatus")
cadCable, = mibBuilder.importSymbols("CADANT-PRODUCTS-MIB", "cadCable")
CardId, AdminState = mibBuilder.importSymbols("CADANT-TC", "CardId", "AdminState")
IfDirection, = mibBuilder.importSymbols("DOCS-QOS3-MIB", "IfDirection")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, MibIdentifier, IpAddress, Gauge32, TimeTicks, Counter32, iso, NotificationType, ModuleIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "MibIdentifier", "IpAddress", "Gauge32", "TimeTicks", "Counter32", "iso", "NotificationType", "ModuleIdentity", "Counter64")
RowStatus, DisplayString, TimeStamp, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TimeStamp", "TextualConvention", "TruthValue")
cadPCMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115))
cadPCMIB.setRevisions(('2015-12-21 00:00', '2011-08-04 00:00', '2011-07-26 00:00', '2009-02-26 00:00', '2007-11-12 00:00', '2007-10-24 00:00', '2007-09-06 00:00', '2005-08-10 00:00', '2005-05-16 00:00', '2004-11-10 00:00', '2004-10-04 00:00', '2004-02-19 00:00', '2004-02-18 00:00', '2004-02-15 00:00', '2003-09-04 00:00', '2003-07-28 00:00', '2003-05-20 00:00', '2002-08-26 00:00', '2001-07-24 00:00',))
if mibBuilder.loadTexts: cadPCMIB.setLastUpdated('201512210000Z')
if mibBuilder.loadTexts: cadPCMIB.setOrganization('Arris Internaional')
class CadPCAnomalyCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 127, 65535, 65537, 65538, 65539, 65540, 65541, 65542, 65543, 65663, 131072, 196608, 262144, 327680, 393216, 458752, 8323072))
    namedValues = NamedValues(("deletedLocalGateCoordinationFailure", 1), ("deletedRemoteGateCoordinationFailure", 2), ("deletedRevokedAuthorization", 3), ("deletedUnexpectedGateOpen", 4), ("deletedLocalGateCloseFailure", 5), ("deletedUnknownReason", 127), ("failedNoGatesAvailable", 65535), ("closedPreemptionOfResources", 65537), ("closedLackOfReservationMaintenance", 65538), ("closedMTADeregistration", 65539), ("closedTimerT0Expiry", 65540), ("closedTimerT1Rxpiry", 65541), ("closedTimerT7Rxpiry", 65542), ("closedTimerT8Rxpiry", 65543), ("closedUnknownReason", 65663), ("failedUnknownGateId", 131072), ("failedIllegalSessionClassValue", 196608), ("failedMTAExceededGateLimit", 262144), ("failedGateAlreadySet", 327680), ("failedMissingRequiredObject", 393216), ("failedInvalidObject", 458752), ("failedUnknownReason", 8323072))

class CadPCAdmCtlPriority(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("eightPriority", 1), ("seventhPriority", 2), ("sixthPriority", 3), ("fifthPriority", 4), ("fourthPriority", 5), ("thirdPriority", 6), ("secondPriority", 7), ("firstPriority", 8))

cadPCMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1))
cadPCMibBase = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1))
cadPCPreemptionAllowed = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCPreemptionAllowed.setStatus('current')
cadPCUpNormAllowedUsage = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(50)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCUpNormAllowedUsage.setStatus('current')
cadPCUpNormResUsage = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCUpNormResUsage.setStatus('current')
cadPCUpEmerAllowedUsage = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(70)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCUpEmerAllowedUsage.setStatus('current')
cadPCUpEmerResUsage = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCUpEmerResUsage.setStatus('current')
cadPCDownNormAllowedUsage = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(50)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCDownNormAllowedUsage.setStatus('current')
cadPCDownNormResUsage = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCDownNormResUsage.setStatus('current')
cadPCDownEmerAllowedUsage = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(70)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCDownEmerAllowedUsage.setStatus('current')
cadPCDownEmerResUsage = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCDownEmerResUsage.setStatus('current')
cadPCCAMTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 12), )
if mibBuilder.loadTexts: cadPCCAMTable.setStatus('current')
cadPCCAMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 12, 1), ).setIndexNames((0, "CADANT-CMTS-PACKETCABLE-MIB", "cadPCCardId"))
if mibBuilder.loadTexts: cadPCCAMEntry.setStatus('current')
cadFreeDSxAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 12, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadFreeDSxAllowed.setStatus('current')
cadPCMaxOverloadDSaCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('connections per 10 seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCMaxOverloadDSaCalls.setStatus('current')
cadPCMaxYellowOverloadDSaCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('connections per 10 seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCMaxYellowOverloadDSaCalls.setStatus('current')
cadPCMaxRedOverloadDSaCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(3000)).setUnits('connections per 10 seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCMaxRedOverloadDSaCalls.setStatus('current')
cadPCCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 12, 1, 5), CardId())
if mibBuilder.loadTexts: cadPCCardId.setStatus('current')
cadPCAdminState = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 13), AdminState().clone('down')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCAdminState.setStatus('current')
cadPCMaxOverloadCalls = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(450)).setUnits('connections per 10 seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCMaxOverloadCalls.setStatus('obsolete')
cadPCMaxYellowOverloadCalls = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(450)).setUnits('connections per 10 seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCMaxYellowOverloadCalls.setStatus('obsolete')
cadPCMaxRedOverloadCalls = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(41)).setUnits('connections per 10 seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCMaxRedOverloadCalls.setStatus('obsolete')
cadPCDownTotalAllowedUsage = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(70)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCDownTotalAllowedUsage.setStatus('current')
cadPCUpTotalAllowedUsage = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(70)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCUpTotalAllowedUsage.setStatus('current')
cadPCMaxOverloadGateMsgs = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(900)).setUnits('gate messages per 10 seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCMaxOverloadGateMsgs.setStatus('current')
cadPCMaxYellowOverloadGateMsgs = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(900)).setUnits('gate messages per 10 seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCMaxYellowOverloadGateMsgs.setStatus('current')
cadPCMaxRedOverloadGateMsgs = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(300)).setUnits('gate messages per 10 seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCMaxRedOverloadGateMsgs.setStatus('current')
cadPCClearGateCounts = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 25), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCClearGateCounts.setStatus('current')
cadPCClearAnomalyCounts = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 26), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCClearAnomalyCounts.setStatus('current')
cadPCClearConnRateOverloadCounts = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 27), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCClearConnRateOverloadCounts.setStatus('current')
cadPCClearEvMsgCounts = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 28), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCClearEvMsgCounts.setStatus('current')
cadPCClearCopsCounts = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 29), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCClearCopsCounts.setStatus('current')
cadPCClearGateCtlCounts = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 30), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCClearGateCtlCounts.setStatus('current')
cadPCMibGateCounts = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 40))
cadPCTotalGateCount = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 40, 1), Counter32()).setUnits('gates').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCTotalGateCount.setStatus('current')
cadPCGateAllocatedStateCount = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 40, 2), Counter32()).setUnits('gates').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCGateAllocatedStateCount.setStatus('current')
cadPCGateAuthorizedStateCount = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 40, 3), Counter32()).setUnits('gates').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCGateAuthorizedStateCount.setStatus('current')
cadPCGateReservedStateCount = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 40, 4), Counter32()).setUnits('gates').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCGateReservedStateCount.setStatus('current')
cadPCGateCommittedStateCount = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 40, 5), Counter32()).setUnits('gates').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCGateCommittedStateCount.setStatus('current')
cadPCGateLastCleared = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 40, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCGateLastCleared.setStatus('current')
cadPCAnomalyCountTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 45), )
if mibBuilder.loadTexts: cadPCAnomalyCountTable.setStatus('current')
cadPCAnomalyCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 45, 1), ).setIndexNames((0, "CADANT-CMTS-PACKETCABLE-MIB", "cadPCAnomalyCode"))
if mibBuilder.loadTexts: cadPCAnomalyCountEntry.setStatus('current')
cadPCAnomalyCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 45, 1, 1), CadPCAnomalyCode())
if mibBuilder.loadTexts: cadPCAnomalyCode.setStatus('current')
cadPCAnomalyCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 45, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCAnomalyCount.setStatus('current')
cadPCAnomalyLastCleared = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 46), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCAnomalyLastCleared.setStatus('current')
cadPCSendSubId = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 47), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCSendSubId.setStatus('current')
cadPCConnRateReqHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 50), )
if mibBuilder.loadTexts: cadPCConnRateReqHistoryTable.setStatus('current')
cadPCConnRateReqHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 50, 1), ).setIndexNames((0, "CADANT-CMTS-PACKETCABLE-MIB", "cadPCConnRateReqHistoryTimeStamp"))
if mibBuilder.loadTexts: cadPCConnRateReqHistoryEntry.setStatus('current')
cadPCConnRateReqHistoryTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 50, 1, 1), TimeStamp())
if mibBuilder.loadTexts: cadPCConnRateReqHistoryTimeStamp.setStatus('current')
cadPCConnRateReqHistoryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 50, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCConnRateReqHistoryCount.setStatus('current')
cadPCConnReqMaxHistRate = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 51), Counter32()).setUnits('gates').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCConnReqMaxHistRate.setStatus('current')
cadPCConnRateOverloadRejTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 55), )
if mibBuilder.loadTexts: cadPCConnRateOverloadRejTable.setStatus('current')
cadPCConnRateOverloadRejEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 55, 1), ).setIndexNames((0, "CADANT-CMTS-PACKETCABLE-MIB", "cadPCConnRateOverloadRejCardId"), (0, "CADANT-CMTS-PROCESS-MIB", "cadOvSysCpuStatus"))
if mibBuilder.loadTexts: cadPCConnRateOverloadRejEntry.setStatus('current')
cadPCConnRateOverloadRejCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 55, 1, 1), Counter32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCConnRateOverloadRejCount.setStatus('current')
cadPCConnRateOverloadRejCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 55, 1, 2), CardId())
if mibBuilder.loadTexts: cadPCConnRateOverloadRejCardId.setStatus('current')
cadPCConnRateOverloadLastCleared = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 56), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCConnRateOverloadLastCleared.setStatus('current')
cadPCEvMsgCountTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 60), )
if mibBuilder.loadTexts: cadPCEvMsgCountTable.setStatus('current')
cadPCEvMsgCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 60, 1), ).setIndexNames((0, "CADANT-CMTS-PACKETCABLE-MIB", "cadPCEvMsgCountServer"), (0, "CADANT-CMTS-PACKETCABLE-MIB", "cadPCEvMsgServerIsDF"))
if mibBuilder.loadTexts: cadPCEvMsgCountEntry.setStatus('current')
cadPCEvMsgCountServer = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 60, 1, 1), IpAddress())
if mibBuilder.loadTexts: cadPCEvMsgCountServer.setStatus('current')
cadPCEvMsgServerIsDF = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 60, 1, 2), TruthValue().clone('false'))
if mibBuilder.loadTexts: cadPCEvMsgServerIsDF.setStatus('current')
cadPCEvMsgType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 60, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 8, 17, 19, 9999))).clone(namedValues=NamedValues(("qos-reserve", 7), ("qos-release", 8), ("time-change", 17), ("qos-commit", 19), ("total-packets", 9999)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCEvMsgType.setStatus('current')
cadPCEvMsgCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 60, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCEvMsgCount.setStatus('current')
cadPCEvMsgCountLastCleared = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 61), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCEvMsgCountLastCleared.setStatus('current')
cadPCCopsCountTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 65), )
if mibBuilder.loadTexts: cadPCCopsCountTable.setStatus('current')
cadPCCopsCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 65, 1), ).setIndexNames((0, "CADANT-CMTS-PACKETCABLE-MIB", "cadPCCopsServer"), (0, "CADANT-CMTS-PACKETCABLE-MIB", "cadPCCopsDirection"), (0, "CADANT-CMTS-PACKETCABLE-MIB", "cadPCCopsOpcode"))
if mibBuilder.loadTexts: cadPCCopsCountEntry.setStatus('current')
cadPCCopsServer = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 65, 1, 1), IpAddress())
if mibBuilder.loadTexts: cadPCCopsServer.setStatus('current')
cadPCCopsDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 65, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("receive", 1), ("transmit", 2))))
if mibBuilder.loadTexts: cadPCCopsDirection.setStatus('current')
cadPCCopsOpcode = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 65, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("tcpCxt", 0), ("copsReq", 1), ("copsDec", 2), ("copsRpt", 3), ("copsDrq", 4), ("copsSsq", 5), ("copsOpn", 6), ("copsCat", 7), ("copsCC", 8), ("copsKa", 9), ("copsSsc", 10))))
if mibBuilder.loadTexts: cadPCCopsOpcode.setStatus('current')
cadPCCopsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 65, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCCopsCount.setStatus('current')
cadPCCopsCountLastCleared = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 66), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCCopsCountLastCleared.setStatus('current')
cadPCGateCtlCountTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 70), )
if mibBuilder.loadTexts: cadPCGateCtlCountTable.setStatus('current')
cadPCGateCtlCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 70, 1), ).setIndexNames((0, "CADANT-CMTS-PACKETCABLE-MIB", "cadPCCopsServer"), (0, "CADANT-CMTS-PACKETCABLE-MIB", "cadPCGateCtlOpcode"))
if mibBuilder.loadTexts: cadPCGateCtlCountEntry.setStatus('current')
cadPCGateCtlOpcode = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 70, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("gateAllocReq", 1), ("gateAllocAck", 2), ("gateAllocErr", 3), ("gateSetReq", 4), ("gateSetAck", 5), ("gateSetErr", 6), ("gateInfoReq", 7), ("gateInfoAck", 8), ("gateInfoErr", 9), ("gateDeleteReq", 10), ("gateDeleteAck", 11), ("gateDeleteErr", 12), ("gateOpen", 13), ("gateClose", 14), ("gateReportState", 15))))
if mibBuilder.loadTexts: cadPCGateCtlOpcode.setStatus('current')
cadPCGateCtlCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 70, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCGateCtlCount.setStatus('current')
cadPCGateCtlCountLastCleared = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 71), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCGateCtlCountLastCleared.setStatus('current')
cadPCDefAdmCtlTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 75), )
if mibBuilder.loadTexts: cadPCDefAdmCtlTable.setStatus('current')
cadPCDefAdmCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 75, 1), ).setIndexNames((0, "CADANT-CMTS-PACKETCABLE-MIB", "cadPCDefAdmCtlDirection"), (0, "CADANT-CMTS-PACKETCABLE-MIB", "cadPCDefAdmCtlPriority"))
if mibBuilder.loadTexts: cadPCDefAdmCtlEntry.setStatus('current')
cadPCDefAdmCtlDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 75, 1, 1), IfDirection())
if mibBuilder.loadTexts: cadPCDefAdmCtlDirection.setStatus('current')
cadPCDefAdmCtlPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 75, 1, 2), CadPCAdmCtlPriority())
if mibBuilder.loadTexts: cadPCDefAdmCtlPriority.setStatus('current')
cadPCDefAdmCtlAllowedUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 75, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 90)).clone(50)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCDefAdmCtlAllowedUsage.setStatus('current')
cadPCDefAdmCtlReservedUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 75, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 90))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCDefAdmCtlReservedUsage.setStatus('current')
cadPC1xAdmCtlMapTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 80), )
if mibBuilder.loadTexts: cadPC1xAdmCtlMapTable.setStatus('current')
cadPC1xAdmCtlMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 80, 1), ).setIndexNames((0, "CADANT-CMTS-PACKETCABLE-MIB", "cadPC1xAdmCtlMapPriority"))
if mibBuilder.loadTexts: cadPC1xAdmCtlMapEntry.setStatus('current')
cadPC1xAdmCtlMapPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 80, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undefined", 1), ("normal", 2), ("emergency", 3))))
if mibBuilder.loadTexts: cadPC1xAdmCtlMapPriority.setStatus('current')
cadPCAdmCtlMapPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 80, 1, 2), CadPCAdmCtlPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPCAdmCtlMapPriority.setStatus('current')
cadPCInterfaceAdmCtlTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 85), )
if mibBuilder.loadTexts: cadPCInterfaceAdmCtlTable.setStatus('current')
cadPCInterfaceAdmCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 85, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CADANT-CMTS-PACKETCABLE-MIB", "cadPCInterfaceAdmCtlPriority"))
if mibBuilder.loadTexts: cadPCInterfaceAdmCtlEntry.setStatus('current')
cadPCInterfaceAdmCtlPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 85, 1, 1), CadPCAdmCtlPriority())
if mibBuilder.loadTexts: cadPCInterfaceAdmCtlPriority.setStatus('current')
cadPCInterfaceAdmCtlAllowedUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 85, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 90)).clone(50)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCInterfaceAdmCtlAllowedUsage.setStatus('current')
cadPCInterfaceAdmCtlReservedUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 85, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 90))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCInterfaceAdmCtlReservedUsage.setStatus('current')
cadPCCAMCblMacTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 86), )
if mibBuilder.loadTexts: cadPCCAMCblMacTable.setStatus('current')
cadPCCAMCblMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 86, 1), ).setIndexNames((0, "CADANT-CMTS-PACKETCABLE-MIB", "cadPCCAMCblMacIfIndex"))
if mibBuilder.loadTexts: cadPCCAMCblMacEntry.setStatus('current')
cadPCCAMCblMacIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 86, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cadPCCAMCblMacIfIndex.setStatus('current')
cadPCCAMCblMacFreeDSxAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 86, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCCAMCblMacFreeDSxAllowed.setStatus('current')
cadPCCblMacMaxOverloadDSaCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 86, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('connections per 10 seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCCblMacMaxOverloadDSaCalls.setStatus('current')
cadPCCblMacMaxYellowOverloadDSaCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 86, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('connections per 10 seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCCblMacMaxYellowOverloadDSaCalls.setStatus('current')
cadPCCblMacMaxRedOverloadDSaCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 86, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(3000)).setUnits('connections per 10 seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCCblMacMaxRedOverloadDSaCalls.setStatus('current')
cadPCPEPIDHostname = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 115, 1, 1, 90), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadPCPEPIDHostname.setStatus('current')
mibBuilder.exportSymbols("CADANT-CMTS-PACKETCABLE-MIB", cadPCCAMCblMacTable=cadPCCAMCblMacTable, PYSNMP_MODULE_ID=cadPCMIB, cadPCClearGateCounts=cadPCClearGateCounts, cadPCDefAdmCtlPriority=cadPCDefAdmCtlPriority, cadPCCAMCblMacIfIndex=cadPCCAMCblMacIfIndex, cadPCGateCommittedStateCount=cadPCGateCommittedStateCount, cadPCUpEmerAllowedUsage=cadPCUpEmerAllowedUsage, cadPCDefAdmCtlAllowedUsage=cadPCDefAdmCtlAllowedUsage, cadPCConnRateOverloadRejCardId=cadPCConnRateOverloadRejCardId, cadPCConnRateOverloadRejCount=cadPCConnRateOverloadRejCount, cadPCCopsServer=cadPCCopsServer, cadPCConnRateReqHistoryTimeStamp=cadPCConnRateReqHistoryTimeStamp, cadPCEvMsgType=cadPCEvMsgType, cadPCAnomalyCountTable=cadPCAnomalyCountTable, cadPCUpEmerResUsage=cadPCUpEmerResUsage, cadPCConnRateReqHistoryEntry=cadPCConnRateReqHistoryEntry, cadPCCAMCblMacFreeDSxAllowed=cadPCCAMCblMacFreeDSxAllowed, cadPCClearEvMsgCounts=cadPCClearEvMsgCounts, cadPCDefAdmCtlEntry=cadPCDefAdmCtlEntry, cadPCAdminState=cadPCAdminState, cadPCEvMsgServerIsDF=cadPCEvMsgServerIsDF, cadPCDefAdmCtlTable=cadPCDefAdmCtlTable, cadPCCblMacMaxRedOverloadDSaCalls=cadPCCblMacMaxRedOverloadDSaCalls, cadPCMIB=cadPCMIB, cadPCCopsDirection=cadPCCopsDirection, cadPCClearGateCtlCounts=cadPCClearGateCtlCounts, cadPCGateCtlCountTable=cadPCGateCtlCountTable, cadPCTotalGateCount=cadPCTotalGateCount, cadPCCopsOpcode=cadPCCopsOpcode, cadPCConnRateOverloadLastCleared=cadPCConnRateOverloadLastCleared, cadPCMibObjects=cadPCMibObjects, cadPCDownNormAllowedUsage=cadPCDownNormAllowedUsage, cadPCGateLastCleared=cadPCGateLastCleared, cadPCConnRateReqHistoryCount=cadPCConnRateReqHistoryCount, cadPCGateReservedStateCount=cadPCGateReservedStateCount, cadPCMaxRedOverloadCalls=cadPCMaxRedOverloadCalls, CadPCAnomalyCode=CadPCAnomalyCode, cadPCMaxRedOverloadDSaCalls=cadPCMaxRedOverloadDSaCalls, cadPCDownEmerResUsage=cadPCDownEmerResUsage, cadPCAnomalyCountEntry=cadPCAnomalyCountEntry, cadPCDefAdmCtlDirection=cadPCDefAdmCtlDirection, cadPCUpTotalAllowedUsage=cadPCUpTotalAllowedUsage, cadPCCopsCount=cadPCCopsCount, cadPCMaxOverloadDSaCalls=cadPCMaxOverloadDSaCalls, cadPC1xAdmCtlMapTable=cadPC1xAdmCtlMapTable, cadPCCAMTable=cadPCCAMTable, cadPCMaxOverloadCalls=cadPCMaxOverloadCalls, cadPCUpNormResUsage=cadPCUpNormResUsage, cadPCSendSubId=cadPCSendSubId, cadPC1xAdmCtlMapEntry=cadPC1xAdmCtlMapEntry, cadPCAnomalyCount=cadPCAnomalyCount, cadPCCopsCountTable=cadPCCopsCountTable, cadPCMaxYellowOverloadDSaCalls=cadPCMaxYellowOverloadDSaCalls, cadPCConnReqMaxHistRate=cadPCConnReqMaxHistRate, cadPCClearAnomalyCounts=cadPCClearAnomalyCounts, cadPCAnomalyCode=cadPCAnomalyCode, cadPCInterfaceAdmCtlPriority=cadPCInterfaceAdmCtlPriority, cadPCAnomalyLastCleared=cadPCAnomalyLastCleared, cadPCDefAdmCtlReservedUsage=cadPCDefAdmCtlReservedUsage, cadPCCopsCountEntry=cadPCCopsCountEntry, cadPCCAMCblMacEntry=cadPCCAMCblMacEntry, cadPCDownEmerAllowedUsage=cadPCDownEmerAllowedUsage, cadPCCardId=cadPCCardId, cadPCGateCtlCount=cadPCGateCtlCount, cadPC1xAdmCtlMapPriority=cadPC1xAdmCtlMapPriority, cadPCClearConnRateOverloadCounts=cadPCClearConnRateOverloadCounts, cadPCEvMsgCountTable=cadPCEvMsgCountTable, cadPCMaxYellowOverloadGateMsgs=cadPCMaxYellowOverloadGateMsgs, cadPCGateAllocatedStateCount=cadPCGateAllocatedStateCount, cadPCCblMacMaxYellowOverloadDSaCalls=cadPCCblMacMaxYellowOverloadDSaCalls, CadPCAdmCtlPriority=CadPCAdmCtlPriority, cadPCMibBase=cadPCMibBase, cadPCEvMsgCountServer=cadPCEvMsgCountServer, cadPCCblMacMaxOverloadDSaCalls=cadPCCblMacMaxOverloadDSaCalls, cadPCMaxOverloadGateMsgs=cadPCMaxOverloadGateMsgs, cadPCInterfaceAdmCtlTable=cadPCInterfaceAdmCtlTable, cadPCDownNormResUsage=cadPCDownNormResUsage, cadPCAdmCtlMapPriority=cadPCAdmCtlMapPriority, cadPCGateCtlOpcode=cadPCGateCtlOpcode, cadPCEvMsgCountLastCleared=cadPCEvMsgCountLastCleared, cadPCConnRateOverloadRejTable=cadPCConnRateOverloadRejTable, cadPCInterfaceAdmCtlReservedUsage=cadPCInterfaceAdmCtlReservedUsage, cadPCPEPIDHostname=cadPCPEPIDHostname, cadPCUpNormAllowedUsage=cadPCUpNormAllowedUsage, cadPCConnRateReqHistoryTable=cadPCConnRateReqHistoryTable, cadPCEvMsgCountEntry=cadPCEvMsgCountEntry, cadPCMibGateCounts=cadPCMibGateCounts, cadPCInterfaceAdmCtlEntry=cadPCInterfaceAdmCtlEntry, cadPCInterfaceAdmCtlAllowedUsage=cadPCInterfaceAdmCtlAllowedUsage, cadPCPreemptionAllowed=cadPCPreemptionAllowed, cadPCMaxYellowOverloadCalls=cadPCMaxYellowOverloadCalls, cadPCGateCtlCountLastCleared=cadPCGateCtlCountLastCleared, cadPCConnRateOverloadRejEntry=cadPCConnRateOverloadRejEntry, cadFreeDSxAllowed=cadFreeDSxAllowed, cadPCCopsCountLastCleared=cadPCCopsCountLastCleared, cadPCEvMsgCount=cadPCEvMsgCount, cadPCCAMEntry=cadPCCAMEntry, cadPCClearCopsCounts=cadPCClearCopsCounts, cadPCGateCtlCountEntry=cadPCGateCtlCountEntry, cadPCMaxRedOverloadGateMsgs=cadPCMaxRedOverloadGateMsgs, cadPCGateAuthorizedStateCount=cadPCGateAuthorizedStateCount, cadPCDownTotalAllowedUsage=cadPCDownTotalAllowedUsage)
