#
# PySNMP MIB module DNSHOTEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DNSHOTEXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:37:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
dnshotExt, = mibBuilder.importSymbols("APENT-MIB", "dnshotExt")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Counter64, iso, MibIdentifier, NotificationType, Integer32, Bits, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, TimeTicks, Counter32, Unsigned32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "iso", "MibIdentifier", "NotificationType", "Integer32", "Bits", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "TimeTicks", "Counter32", "Unsigned32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
apDnshotExtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2467, 1, 48, 1))
if mibBuilder.loadTexts: apDnshotExtMib.setLastUpdated('9710092000Z')
if mibBuilder.loadTexts: apDnshotExtMib.setOrganization('ArrowPoint Communications Inc.')
apDnshotExtEnable = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 48, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enable", 1), ("disable", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apDnshotExtEnable.setStatus('current')
apDnshotExtSize = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 48, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apDnshotExtSize.setStatus('current')
apDnshotExtInterval = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 48, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apDnshotExtInterval.setStatus('current')
apDnshotExtThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 48, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apDnshotExtThreshold.setStatus('current')
apDnshotExtTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 48, 6), )
if mibBuilder.loadTexts: apDnshotExtTable.setStatus('current')
apDnshotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 48, 6, 1), ).setIndexNames((0, "DNSHOTEXT-MIB", "apDnshotIndex"))
if mibBuilder.loadTexts: apDnshotEntry.setStatus('current')
apDnshotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 48, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnshotIndex.setStatus('current')
apDnshotName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 48, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnshotName.setStatus('current')
apDnshotHits = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 48, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnshotHits.setStatus('current')
mibBuilder.exportSymbols("DNSHOTEXT-MIB", apDnshotExtMib=apDnshotExtMib, apDnshotExtInterval=apDnshotExtInterval, apDnshotExtThreshold=apDnshotExtThreshold, apDnshotIndex=apDnshotIndex, apDnshotExtSize=apDnshotExtSize, apDnshotExtEnable=apDnshotExtEnable, apDnshotEntry=apDnshotEntry, PYSNMP_MODULE_ID=apDnshotExtMib, apDnshotExtTable=apDnshotExtTable, apDnshotHits=apDnshotHits, apDnshotName=apDnshotName)
