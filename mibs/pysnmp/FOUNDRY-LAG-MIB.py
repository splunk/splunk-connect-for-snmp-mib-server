#
# PySNMP MIB module FOUNDRY-LAG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FOUNDRY-LAG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:01:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
snSwitch, snTraps = mibBuilder.importSymbols("FOUNDRY-SN-ROOT-MIB", "snSwitch", "snTraps")
InterfaceIndexOrZero, InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, NotificationType, IpAddress, MibIdentifier, Unsigned32, Counter64, Bits, TimeTicks, Gauge32, ModuleIdentity, iso, Counter32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "NotificationType", "IpAddress", "MibIdentifier", "Unsigned32", "Counter64", "Bits", "TimeTicks", "Gauge32", "ModuleIdentity", "iso", "Counter32", "ObjectIdentity")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
fdryLinkAggregationGroupMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33))
fdryLinkAggregationGroupMIB.setRevisions(('2010-06-02 00:00', '2009-09-30 00:00',))
if mibBuilder.loadTexts: fdryLinkAggregationGroupMIB.setLastUpdated('201006020000Z')
if mibBuilder.loadTexts: fdryLinkAggregationGroupMIB.setOrganization('Brocade Communications Systems, Inc.')
fdryLinkAggregationGroupNotifyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 0))
fdryLinkAggregationGroupTableObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 1))
fdryLinkAggregationGroupPortTableObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 2))
fdryLinkAggregationGroupTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 1, 1), )
if mibBuilder.loadTexts: fdryLinkAggregationGroupTable.setStatus('current')
fdryLinkAggregationGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 1, 1, 1), ).setIndexNames((0, "FOUNDRY-LAG-MIB", "fdryLinkAggregationGroupName"))
if mibBuilder.loadTexts: fdryLinkAggregationGroupEntry.setStatus('current')
fdryLinkAggregationGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: fdryLinkAggregationGroupName.setStatus('current')
fdryLinkAggregationGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("keepalive", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryLinkAggregationGroupType.setStatus('current')
fdryLinkAggregationGroupAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("deploy", 1), ("deployPassive", 2), ("undeploy", 3), ("undeployForced", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryLinkAggregationGroupAdminStatus.setStatus('current')
fdryLinkAggregationGroupIfList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 1, 1, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryLinkAggregationGroupIfList.setStatus('current')
fdryLinkAggregationGroupPrimaryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 1, 1, 1, 5), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryLinkAggregationGroupPrimaryPort.setStatus('current')
fdryLinkAggregationGroupTrunkType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hashBased", 1), ("perPacket", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryLinkAggregationGroupTrunkType.setStatus('current')
fdryLinkAggregationGroupTrunkThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 1, 1, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryLinkAggregationGroupTrunkThreshold.setStatus('current')
fdryLinkAggregationGroupLacpTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("default", 1), ("long", 2), ("short", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryLinkAggregationGroupLacpTimeout.setStatus('current')
fdryLinkAggregationGroupIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 1, 1, 1, 9), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fdryLinkAggregationGroupIfIndex.setStatus('current')
fdryLinkAggregationGroupPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 1, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fdryLinkAggregationGroupPortCount.setStatus('current')
fdryLinkAggregationGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 1, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryLinkAggregationGroupRowStatus.setStatus('current')
fdryLinkAggregationGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 1, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fdryLinkAggregationGroupId.setStatus('current')
fdryLinkAggregationGroupPortTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 2, 1), )
if mibBuilder.loadTexts: fdryLinkAggregationGroupPortTable.setStatus('current')
fdryLinkAggregationGroupPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 2, 1, 1), ).setIndexNames((0, "FOUNDRY-LAG-MIB", "fdryLinkAggregationGroupName"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: fdryLinkAggregationGroupPortEntry.setStatus('current')
fdryLinkAggregationGroupPortLacpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fdryLinkAggregationGroupPortLacpPriority.setStatus('current')
fdryLAGName = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 33, 0, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: fdryLAGName.setStatus('current')
fdryTrapLagDeployed = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1204)).setObjects(("FOUNDRY-LAG-MIB", "fdryLAGName"), ("FOUNDRY-LAG-MIB", "fdryLinkAggregationGroupIfIndex"))
if mibBuilder.loadTexts: fdryTrapLagDeployed.setStatus('current')
fdryTrapLagUndeployed = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1205)).setObjects(("FOUNDRY-LAG-MIB", "fdryLAGName"), ("FOUNDRY-LAG-MIB", "fdryLinkAggregationGroupIfIndex"))
if mibBuilder.loadTexts: fdryTrapLagUndeployed.setStatus('current')
mibBuilder.exportSymbols("FOUNDRY-LAG-MIB", fdryLinkAggregationGroupPrimaryPort=fdryLinkAggregationGroupPrimaryPort, fdryLinkAggregationGroupPortTableObjects=fdryLinkAggregationGroupPortTableObjects, fdryLAGName=fdryLAGName, fdryLinkAggregationGroupMIB=fdryLinkAggregationGroupMIB, fdryLinkAggregationGroupId=fdryLinkAggregationGroupId, fdryTrapLagDeployed=fdryTrapLagDeployed, fdryLinkAggregationGroupName=fdryLinkAggregationGroupName, fdryLinkAggregationGroupAdminStatus=fdryLinkAggregationGroupAdminStatus, fdryLinkAggregationGroupTable=fdryLinkAggregationGroupTable, fdryLinkAggregationGroupPortTable=fdryLinkAggregationGroupPortTable, fdryLinkAggregationGroupTrunkThreshold=fdryLinkAggregationGroupTrunkThreshold, fdryLinkAggregationGroupIfList=fdryLinkAggregationGroupIfList, fdryLinkAggregationGroupLacpTimeout=fdryLinkAggregationGroupLacpTimeout, fdryLinkAggregationGroupEntry=fdryLinkAggregationGroupEntry, fdryTrapLagUndeployed=fdryTrapLagUndeployed, fdryLinkAggregationGroupType=fdryLinkAggregationGroupType, PYSNMP_MODULE_ID=fdryLinkAggregationGroupMIB, fdryLinkAggregationGroupPortLacpPriority=fdryLinkAggregationGroupPortLacpPriority, fdryLinkAggregationGroupPortCount=fdryLinkAggregationGroupPortCount, fdryLinkAggregationGroupNotifyObjects=fdryLinkAggregationGroupNotifyObjects, fdryLinkAggregationGroupTableObjects=fdryLinkAggregationGroupTableObjects, fdryLinkAggregationGroupTrunkType=fdryLinkAggregationGroupTrunkType, fdryLinkAggregationGroupIfIndex=fdryLinkAggregationGroupIfIndex, fdryLinkAggregationGroupPortEntry=fdryLinkAggregationGroupPortEntry, fdryLinkAggregationGroupRowStatus=fdryLinkAggregationGroupRowStatus)
