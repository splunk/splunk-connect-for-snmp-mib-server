#
# PySNMP MIB module ENTERASYS-LICENSE-KEY-OIDS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-LICENSE-KEY-OIDS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:49:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
etsysOidOtherLicenseKeyId, = mibBuilder.importSymbols("ENTERASYS-OIDS-MIB", "etsysOidOtherLicenseKeyId")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Gauge32, Counter64, Counter32, iso, Unsigned32, ModuleIdentity, ObjectIdentity, IpAddress, MibIdentifier, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Gauge32", "Counter64", "Counter32", "iso", "Unsigned32", "ModuleIdentity", "ObjectIdentity", "IpAddress", "MibIdentifier", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
etsysLicenseKeyOidsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 56))
etsysLicenseKeyOidsMIB.setRevisions(('2009-08-05 20:14', '2008-02-26 13:51', '2008-01-18 15:56', '2007-06-11 14:24', '2006-11-13 15:29', '2006-09-05 17:37', '2006-08-15 19:56', '2005-12-13 21:12', '2004-11-03 17:01', '2004-08-24 13:29',))
if mibBuilder.loadTexts: etsysLicenseKeyOidsMIB.setLastUpdated('200908052014Z')
if mibBuilder.loadTexts: etsysLicenseKeyOidsMIB.setOrganization('Enterasys Networks')
etsysLicKeyIdNSeries = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 1))
etsysLicKeyIdNL3AdvancedFeature = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 1, 1))
if mibBuilder.loadTexts: etsysLicKeyIdNL3AdvancedFeature.setStatus('current')
etsysLicKeyIdNGoldRedundancy = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 1, 2))
if mibBuilder.loadTexts: etsysLicKeyIdNGoldRedundancy.setStatus('current')
etsysLicKeyIdNPlatinumHighCapacity = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 1, 3))
if mibBuilder.loadTexts: etsysLicKeyIdNPlatinumHighCapacity.setStatus('current')
etsysLicKeyIdNPlatinumPortCapacity = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 1, 4))
if mibBuilder.loadTexts: etsysLicKeyIdNPlatinumPortCapacity.setStatus('current')
etsysLicKeyIdNGoldPolicy = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 1, 5))
if mibBuilder.loadTexts: etsysLicKeyIdNGoldPolicy.setStatus('current')
etsysLicKeyIdNL3DiamondFeature = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 1, 6))
if mibBuilder.loadTexts: etsysLicKeyIdNL3DiamondFeature.setStatus('current')
etsysLicKeyIdCSeries = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 2))
etsysLicKeyIdCAdvancedRouting = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 2, 1))
if mibBuilder.loadTexts: etsysLicKeyIdCAdvancedRouting.setStatus('current')
etsysLicKeyIdC3IpV6Routing = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 2, 2))
if mibBuilder.loadTexts: etsysLicKeyIdC3IpV6Routing.setStatus('current')
etsysLicKeyIdBSeries = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 3))
etsysLicKeyIdBPolicy = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 3, 1))
if mibBuilder.loadTexts: etsysLicKeyIdBPolicy.setStatus('current')
etsysLicKeyIdBRouting = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 3, 2))
if mibBuilder.loadTexts: etsysLicKeyIdBRouting.setStatus('current')
etsysLicKeyIdDSeries = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 4))
etsysLicKeyIdDPolicy = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 4, 1))
if mibBuilder.loadTexts: etsysLicKeyIdDPolicy.setStatus('current')
etsysLicKeyIdGSeries = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 5))
etsysLicKeyIdGRouting = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 5, 1))
if mibBuilder.loadTexts: etsysLicKeyIdGRouting.setStatus('current')
etsysLicKeyIdSSeries = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 6))
etsysLicKeyIdSxEOSxPPC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 6, 1))
if mibBuilder.loadTexts: etsysLicKeyIdSxEOSxPPC.setStatus('current')
etsysLicKeyIdSxEOSxL3xACCESS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 6, 2))
if mibBuilder.loadTexts: etsysLicKeyIdSxEOSxL3xACCESS.setStatus('current')
etsysLicKeyIdSxEOSxL3xCORE = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2, 6, 3))
if mibBuilder.loadTexts: etsysLicKeyIdSxEOSxL3xCORE.setStatus('current')
mibBuilder.exportSymbols("ENTERASYS-LICENSE-KEY-OIDS-MIB", etsysLicKeyIdSxEOSxPPC=etsysLicKeyIdSxEOSxPPC, etsysLicKeyIdGRouting=etsysLicKeyIdGRouting, etsysLicKeyIdCSeries=etsysLicKeyIdCSeries, etsysLicKeyIdSxEOSxL3xCORE=etsysLicKeyIdSxEOSxL3xCORE, etsysLicenseKeyOidsMIB=etsysLicenseKeyOidsMIB, etsysLicKeyIdCAdvancedRouting=etsysLicKeyIdCAdvancedRouting, etsysLicKeyIdNL3DiamondFeature=etsysLicKeyIdNL3DiamondFeature, etsysLicKeyIdNSeries=etsysLicKeyIdNSeries, etsysLicKeyIdSSeries=etsysLicKeyIdSSeries, etsysLicKeyIdSxEOSxL3xACCESS=etsysLicKeyIdSxEOSxL3xACCESS, etsysLicKeyIdNGoldPolicy=etsysLicKeyIdNGoldPolicy, etsysLicKeyIdBSeries=etsysLicKeyIdBSeries, PYSNMP_MODULE_ID=etsysLicenseKeyOidsMIB, etsysLicKeyIdNPlatinumPortCapacity=etsysLicKeyIdNPlatinumPortCapacity, etsysLicKeyIdBPolicy=etsysLicKeyIdBPolicy, etsysLicKeyIdDSeries=etsysLicKeyIdDSeries, etsysLicKeyIdNPlatinumHighCapacity=etsysLicKeyIdNPlatinumHighCapacity, etsysLicKeyIdDPolicy=etsysLicKeyIdDPolicy, etsysLicKeyIdNL3AdvancedFeature=etsysLicKeyIdNL3AdvancedFeature, etsysLicKeyIdNGoldRedundancy=etsysLicKeyIdNGoldRedundancy, etsysLicKeyIdBRouting=etsysLicKeyIdBRouting, etsysLicKeyIdGSeries=etsysLicKeyIdGSeries, etsysLicKeyIdC3IpV6Routing=etsysLicKeyIdC3IpV6Routing)
