#
# PySNMP MIB module SUN-MASTER-AGENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SUN-MASTER-AGENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:04:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, IpAddress, ModuleIdentity, TimeTicks, Gauge32, Counter32, Integer32, NotificationType, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ObjectIdentity, enterprises, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "IpAddress", "ModuleIdentity", "TimeTicks", "Gauge32", "Counter32", "Integer32", "NotificationType", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ObjectIdentity", "enterprises", "Unsigned32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sun = MibIdentifier((1, 3, 6, 1, 4, 1, 42))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2))
sunMasterAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 15))
sunMasterAgentStatusFile = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunMasterAgentStatusFile.setStatus('mandatory')
sunMasterAgentResourceConfigFile = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunMasterAgentResourceConfigFile.setStatus('mandatory')
sunMasterAgentConfigurationDir = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunMasterAgentConfigurationDir.setStatus('mandatory')
sunMasterAgentTrapPort = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunMasterAgentTrapPort.setStatus('mandatory')
sunCheckSubAgentName = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunCheckSubAgentName.setStatus('mandatory')
sunMasterAgentPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunMasterAgentPollInterval.setStatus('mandatory')
sunMasterAgentMaxAgentTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunMasterAgentMaxAgentTimeOut.setStatus('mandatory')
sunSubAgentTable = MibTable((1, 3, 6, 1, 4, 1, 42, 2, 15, 8), )
if mibBuilder.loadTexts: sunSubAgentTable.setStatus('mandatory')
sunSubAgentTableIndex = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentTableIndex.setStatus('mandatory')
sunSubAgentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1), ).setIndexNames((0, "SUN-MASTER-AGENT-MIB", "sunSubAgentID"))
if mibBuilder.loadTexts: sunSubAgentEntry.setStatus('mandatory')
sunSubAgentID = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSubAgentID.setStatus('mandatory')
sunSubAgentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("init", 1), ("load", 2), ("active", 3), ("inactive", 4), ("destroy", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentStatus.setStatus('mandatory')
sunSubAgentTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentTimeout.setStatus('mandatory')
sunSubAgentPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentPortNumber.setStatus('mandatory')
sunSubAgentRegistrationFile = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentRegistrationFile.setStatus('mandatory')
sunSubAgentAccessControlFile = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentAccessControlFile.setStatus('mandatory')
sunSubAgentExecutable = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentExecutable.setStatus('mandatory')
sunSubAgentVersionNum = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentVersionNum.setStatus('mandatory')
sunSubAgentProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentProcessID.setStatus('mandatory')
sunSubAgentName = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentName.setStatus('mandatory')
sunSubAgentSystemUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 11), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentSystemUpTime.setStatus('mandatory')
sunSubAgentWatchDogTime = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentWatchDogTime.setStatus('mandatory')
sunSubTreeConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 42, 2, 15, 10), )
if mibBuilder.loadTexts: sunSubTreeConfigurationTable.setStatus('mandatory')
sunSubTreeConfigurationTableIndex = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSubTreeConfigurationTableIndex.setStatus('mandatory')
sunSubTreeConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1), ).setIndexNames((0, "SUN-MASTER-AGENT-MIB", "sunSubTreeAgentID"), (0, "SUN-MASTER-AGENT-MIB", "sunSubTreeIndex"))
if mibBuilder.loadTexts: sunSubTreeConfigurationEntry.setStatus('mandatory')
sunSubTreeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSubTreeIndex.setStatus('mandatory')
sunSubTreeAgentID = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSubTreeAgentID.setStatus('mandatory')
sunSubTreeOID = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1, 3), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubTreeOID.setStatus('mandatory')
sunSubTreeStartColumn = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubTreeStartColumn.setStatus('mandatory')
sunSubTreeEndColumn = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubTreeEndColumn.setStatus('mandatory')
sunSubTreeStartRow = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubTreeStartRow.setStatus('mandatory')
sunSubTreeEndRow = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubTreeEndRow.setStatus('mandatory')
sunSubTreeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubTreeStatus.setStatus('mandatory')
sunSubTreeDispatchTable = MibTable((1, 3, 6, 1, 4, 1, 42, 2, 15, 12), )
if mibBuilder.loadTexts: sunSubTreeDispatchTable.setStatus('mandatory')
sunSubTreeDispatchTableIndex = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSubTreeDispatchTableIndex.setStatus('mandatory')
sunSubTreeDispatchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42, 2, 15, 12, 1), ).setIndexNames((0, "SUN-MASTER-AGENT-MIB", "sunSubTreeDispatchAgentID"), (0, "SUN-MASTER-AGENT-MIB", "sunSubTreeDispatchIndex"))
if mibBuilder.loadTexts: sunSubTreeDispatchEntry.setStatus('mandatory')
sunSubTreeDispatchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSubTreeDispatchIndex.setStatus('mandatory')
sunSubTreeDispatchAgentID = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSubTreeDispatchAgentID.setStatus('mandatory')
sunSubTreeDispatchOID = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 12, 1, 3), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubTreeDispatchOID.setStatus('mandatory')
sunSubTreeDispatchStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubTreeDispatchStatus.setStatus('mandatory')
mibBuilder.exportSymbols("SUN-MASTER-AGENT-MIB", products=products, sunSubAgentEntry=sunSubAgentEntry, sunSubAgentTimeout=sunSubAgentTimeout, sunSubAgentID=sunSubAgentID, sunSubAgentStatus=sunSubAgentStatus, sunSubTreeOID=sunSubTreeOID, sunSubTreeConfigurationTableIndex=sunSubTreeConfigurationTableIndex, sunMasterAgentStatusFile=sunMasterAgentStatusFile, sunSubAgentVersionNum=sunSubAgentVersionNum, sunSubTreeDispatchIndex=sunSubTreeDispatchIndex, sunSubAgentPortNumber=sunSubAgentPortNumber, sun=sun, sunSubAgentTableIndex=sunSubAgentTableIndex, sunMasterAgentTrapPort=sunMasterAgentTrapPort, sunSubTreeConfigurationEntry=sunSubTreeConfigurationEntry, sunSubTreeIndex=sunSubTreeIndex, sunSubTreeDispatchEntry=sunSubTreeDispatchEntry, sunSubAgentAccessControlFile=sunSubAgentAccessControlFile, sunSubTreeAgentID=sunSubTreeAgentID, sunSubTreeDispatchOID=sunSubTreeDispatchOID, sunSubAgentRegistrationFile=sunSubAgentRegistrationFile, sunCheckSubAgentName=sunCheckSubAgentName, sunSubTreeEndColumn=sunSubTreeEndColumn, sunSubTreeDispatchAgentID=sunSubTreeDispatchAgentID, sunMasterAgentConfigurationDir=sunMasterAgentConfigurationDir, sunSubAgentProcessID=sunSubAgentProcessID, sunSubTreeDispatchTable=sunSubTreeDispatchTable, sunSubTreeDispatchTableIndex=sunSubTreeDispatchTableIndex, sunSubAgentExecutable=sunSubAgentExecutable, sunSubTreeStartColumn=sunSubTreeStartColumn, sunSubTreeStartRow=sunSubTreeStartRow, sunSubAgentName=sunSubAgentName, sunSubTreeDispatchStatus=sunSubTreeDispatchStatus, sunSubTreeConfigurationTable=sunSubTreeConfigurationTable, sunMasterAgentMaxAgentTimeOut=sunMasterAgentMaxAgentTimeOut, sunSubTreeEndRow=sunSubTreeEndRow, sunMasterAgentPollInterval=sunMasterAgentPollInterval, sunMasterAgent=sunMasterAgent, sunSubAgentTable=sunSubAgentTable, sunSubAgentSystemUpTime=sunSubAgentSystemUpTime, sunSubAgentWatchDogTime=sunSubAgentWatchDogTime, sunMasterAgentResourceConfigFile=sunMasterAgentResourceConfigFile, sunSubTreeStatus=sunSubTreeStatus)
