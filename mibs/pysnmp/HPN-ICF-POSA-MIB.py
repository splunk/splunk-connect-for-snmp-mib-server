#
# PySNMP MIB module HPN-ICF-POSA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-POSA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifDescr, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifDescr", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Gauge32, IpAddress, Bits, Counter64, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter32, Unsigned32, MibIdentifier, iso, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "IpAddress", "Bits", "Counter64", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter32", "Unsigned32", "MibIdentifier", "iso", "Integer32", "ModuleIdentity")
RowStatus, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "DisplayString", "TextualConvention")
hpnicfPosa = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92))
hpnicfPosa.setRevisions(('2014-05-29 00:00', '2008-03-12 09:33',))
if mibBuilder.loadTexts: hpnicfPosa.setLastUpdated('201405290000Z')
if mibBuilder.loadTexts: hpnicfPosa.setOrganization('')
class HpnicfAppServiceType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("tcp", 1), ("flow", 2))

class HpnicfAppMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("normal", 1), ("temporary", 2))

class HpnicfPeerState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("notset", 1), ("down", 2), ("up", 3), ("kept", 4), ("linking", 5), ("linked", 6), ("multilink", 7), ("blocked", 8), ("error", 9))

class HpnicfTerminalAccessType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("fcm", 1), ("flow", 2), ("tcp", 3))

class HpnicfTpduChangeStrategy(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("changeTpduSrc", 1), ("changeTpduDest", 2))

hpnicfPosaControl = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1))
hpnicfPosaServerEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaServerEnable.setStatus('current')
hpnicfPosaFcmAnswerTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(500, 2000)).clone(2000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaFcmAnswerTimeout.setStatus('current')
hpnicfPosaFcmTradeTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30000, 12000000)).clone(12000000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaFcmTradeTimeout.setStatus('current')
hpnicfPosaFcmIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12000)).clone(180)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaFcmIdleTimeout.setStatus('current')
hpnicfPosaSrvStateChangeTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 5), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaSrvStateChangeTrapEnable.setStatus('current')
hpnicfPosaAppStateChangeTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 6), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaAppStateChangeTrapEnable.setStatus('current')
hpnicfPosaTerminalHangUpTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 7), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaTerminalHangUpTrapEnable.setStatus('current')
hpnicfPosaFcmLnkNegoFailTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 8), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaFcmLnkNegoFailTrapEnable.setStatus('current')
hpnicfPosaFcmPhyNegoFailTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 9), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaFcmPhyNegoFailTrapEnable.setStatus('current')
hpnicfPosaTcpConnectionNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaTcpConnectionNumber.setStatus('current')
hpnicfPosaFcmConnectionNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaFcmConnectionNumber.setStatus('current')
hpnicfPosaTcpConnectionThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 12), Integer32().clone(4096)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaTcpConnectionThreshold.setStatus('current')
hpnicfPosaFcmConnectionThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 13), Integer32().clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaFcmConnectionThreshold.setStatus('current')
hpnicfPosaTcpConnectionTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 14), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaTcpConnectionTrapEnable.setStatus('current')
hpnicfPosaFcmConnectionTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 15), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaFcmConnectionTrapEnable.setStatus('current')
hpnicfPosaTcpTradeLimit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaTcpTradeLimit.setStatus('current')
hpnicfPosaTcpTradeTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 17), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaTcpTradeTrapEnable.setStatus('current')
hpnicfPosaTcpTradeTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 1, 18), Integer32().clone(240)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaTcpTradeTimeout.setStatus('current')
hpnicfPosaTables = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2))
hpnicfPosaAppTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1), )
if mibBuilder.loadTexts: hpnicfPosaAppTable.setStatus('current')
hpnicfPosaAppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-POSA-MIB", "hpnicfPosaAppID"))
if mibBuilder.loadTexts: hpnicfPosaAppEntry.setStatus('current')
hpnicfPosaAppID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfPosaAppID.setStatus('current')
hpnicfPosaAppServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 2), HpnicfAppServiceType().clone('tcp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaAppServiceType.setStatus('current')
hpnicfPosaAppIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaAppIfIndex.setStatus('current')
hpnicfPosaAppMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 4), HpnicfAppMode().clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaAppMode.setStatus('current')
hpnicfPosaAppHostIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaAppHostIPType.setStatus('current')
hpnicfPosaAppHostIP = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaAppHostIP.setStatus('current')
hpnicfPosaAppHostPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaAppHostPort.setStatus('current')
hpnicfPosaAppRouterIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 8), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaAppRouterIPType.setStatus('current')
hpnicfPosaAppRouterIP = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 9), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaAppRouterIP.setStatus('current')
hpnicfPosaAppKeepAliveInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7200)).clone(2)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaAppKeepAliveInterval.setStatus('current')
hpnicfPosaAppKeepAliveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 100)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaAppKeepAliveCount.setStatus('current')
hpnicfPosaAppConnectTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(20)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaAppConnectTimeout.setStatus('current')
hpnicfPosaAppState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 13), HpnicfPeerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaAppState.setStatus('current')
hpnicfPosaAppRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaAppRowStatus.setStatus('current')
hpnicfPosaAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaAppName.setStatus('current')
hpnicfPosaCallerIDTransEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 16), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaCallerIDTransEnable.setStatus('current')
hpnicfPosaTpduChangeStrategy = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 17), HpnicfTpduChangeStrategy().clone('changeTpduSrc')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaTpduChangeStrategy.setStatus('current')
hpnicfPosaBackupAppID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaBackupAppID.setStatus('current')
hpnicfPosaQuietTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 600))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaQuietTimeOut.setStatus('current')
hpnicfPosaAppHello = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 20), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaAppHello.setStatus('current')
hpnicfPosaAppHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaAppHelloInterval.setStatus('current')
hpnicfPosaAppRouterPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaAppRouterPort.setStatus('current')
hpnicfPosaTerminalTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 2), )
if mibBuilder.loadTexts: hpnicfPosaTerminalTable.setStatus('current')
hpnicfPosaTerminalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-POSA-MIB", "hpnicfPosaTerminalID"))
if mibBuilder.loadTexts: hpnicfPosaTerminalEntry.setStatus('current')
hpnicfPosaTerminalID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfPosaTerminalID.setStatus('current')
hpnicfPosaTerminalAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 2, 1, 2), HpnicfTerminalAccessType().clone('fcm')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaTerminalAccessType.setStatus('current')
hpnicfPosaTerminalIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 2, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaTerminalIfIndex.setStatus('current')
hpnicfPosaTerminalTransAppID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaTerminalTransAppID.setStatus('current')
hpnicfPosaTerminalListenPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaTerminalListenPort.setStatus('current')
hpnicfPosaTerminalState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 2, 1, 6), HpnicfPeerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaTerminalState.setStatus('current')
hpnicfPosaTerminalRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaTerminalRowStatus.setStatus('current')
hpnicfPosaTerminalName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaTerminalName.setStatus('current')
hpnicfPosaTerminalCfgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaTerminalCfgIfIndex.setStatus('current')
hpnicfPosaMapTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 3), )
if mibBuilder.loadTexts: hpnicfPosaMapTable.setStatus('current')
hpnicfPosaMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 3, 1), ).setIndexNames((0, "HPN-ICF-POSA-MIB", "hpnicfPosaMapSrcCode"), (0, "HPN-ICF-POSA-MIB", "hpnicfPosaMapDestCode"))
if mibBuilder.loadTexts: hpnicfPosaMapEntry.setStatus('current')
hpnicfPosaMapDestCode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 7)))
if mibBuilder.loadTexts: hpnicfPosaMapDestCode.setStatus('current')
hpnicfPosaMapAppID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaMapAppID.setStatus('current')
hpnicfPosaMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaMapRowStatus.setStatus('current')
hpnicfPosaMapSrcCode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 7)))
if mibBuilder.loadTexts: hpnicfPosaMapSrcCode.setStatus('current')
hpnicfPosaFcmStatTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 4), )
if mibBuilder.loadTexts: hpnicfPosaFcmStatTable.setStatus('current')
hpnicfPosaFcmStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 4, 1), ).setIndexNames((0, "HPN-ICF-POSA-MIB", "hpnicfPosaFcmStatIfIndex"))
if mibBuilder.loadTexts: hpnicfPosaFcmStatEntry.setStatus('current')
hpnicfPosaFcmStatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfPosaFcmStatIfIndex.setStatus('current')
hpnicfPosaFcmStatTimeoutCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaFcmStatTimeoutCnts.setStatus('current')
hpnicfPosaFcmStatConnectFailCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaFcmStatConnectFailCnts.setStatus('current')
hpnicfPosaFcmStatTransCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaFcmStatTransCnts.setStatus('current')
hpnicfPosaFcmStatTransSuccessCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaFcmStatTransSuccessCnts.setStatus('current')
hpnicfPosaFcmStatTransCntsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 4, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaFcmStatTransCntsClear.setStatus('current')
hpnicfPosaAppStatTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 5), )
if mibBuilder.loadTexts: hpnicfPosaAppStatTable.setStatus('current')
hpnicfPosaAppStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 5, 1), ).setIndexNames((0, "HPN-ICF-POSA-MIB", "hpnicfPosaAppID"))
if mibBuilder.loadTexts: hpnicfPosaAppStatEntry.setStatus('current')
hpnicfPosaAppRecvPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaAppRecvPkts.setStatus('current')
hpnicfPosaAppSendPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaAppSendPkts.setStatus('current')
hpnicfPosaAppErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaAppErrPkts.setStatus('current')
hpnicfPosaAppDistributeErrCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaAppDistributeErrCnts.setStatus('current')
hpnicfPosaAppInDiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaAppInDiscardedPkts.setStatus('current')
hpnicfPosaAppOutDiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaAppOutDiscardedPkts.setStatus('current')
hpnicfPosaTerminalStatTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 6), )
if mibBuilder.loadTexts: hpnicfPosaTerminalStatTable.setStatus('current')
hpnicfPosaTerminalStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 6, 1), ).setIndexNames((0, "HPN-ICF-POSA-MIB", "hpnicfPosaTerminalID"))
if mibBuilder.loadTexts: hpnicfPosaTerminalStatEntry.setStatus('current')
hpnicfPosaTerminalRecvPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaTerminalRecvPkts.setStatus('current')
hpnicfPosaTerminalSendPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaTerminalSendPkts.setStatus('current')
hpnicfPosaTerminalErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaTerminalErrPkts.setStatus('current')
hpnicfPosaTerminalMapErrCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaTerminalMapErrCnts.setStatus('current')
hpnicfPosaTerminalInDiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaTerminalInDiscardedPkts.setStatus('current')
hpnicfPosaTerminalOutDiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaTerminalOutDiscardedPkts.setStatus('current')
hpnicfPosaBatchTerminalTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 7), )
if mibBuilder.loadTexts: hpnicfPosaBatchTerminalTable.setStatus('current')
hpnicfPosaBatchTerminalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPosaBatchTerminalEntry.setStatus('current')
hpnicfPosaBatchTerminalFirstID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaBatchTerminalFirstID.setStatus('current')
hpnicfPosaBatchTerminalRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaBatchTerminalRowStatus.setStatus('current')
hpnicfPosaTcpTermStatTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 8), )
if mibBuilder.loadTexts: hpnicfPosaTcpTermStatTable.setStatus('current')
hpnicfPosaTcpTermStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 8, 1), ).setIndexNames((0, "HPN-ICF-POSA-MIB", "hpnicfPosaTcpTermStatIndex"))
if mibBuilder.loadTexts: hpnicfPosaTcpTermStatEntry.setStatus('current')
hpnicfPosaTcpTermStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: hpnicfPosaTcpTermStatIndex.setStatus('current')
hpnicfPosaTcpTermStatIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 8, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaTcpTermStatIPType.setStatus('current')
hpnicfPosaTcpTermStatIP = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 8, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaTcpTermStatIP.setStatus('current')
hpnicfPosaTcpTermStatIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 8, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaTcpTermStatIPMask.setStatus('current')
hpnicfPosaTcpTermRecvPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 8, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaTcpTermRecvPkts.setStatus('current')
hpnicfPosaTcpTermSendPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 8, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaTcpTermSendPkts.setStatus('current')
hpnicfPosaTcpTermErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 8, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaTcpTermErrPkts.setStatus('current')
hpnicfPosaTcpTermMapErrCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 8, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaTcpTermMapErrCnts.setStatus('current')
hpnicfPosaTcpTermInDiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 8, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaTcpTermInDiscardedPkts.setStatus('current')
hpnicfPosaTcpTermOutDiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 8, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaTcpTermOutDiscardedPkts.setStatus('current')
hpnicfPosaTcpTermStatRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 8, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaTcpTermStatRowStatus.setStatus('current')
hpnicfPosaFcmConfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 9), )
if mibBuilder.loadTexts: hpnicfPosaFcmConfTable.setStatus('current')
hpnicfPosaFcmConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPosaFcmConfEntry.setStatus('current')
hpnicfPosaFcmNegoHookOff = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 6000)).clone(500)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaFcmNegoHookOff.setStatus('current')
hpnicfPosaFcmNegoSilence = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaFcmNegoSilence.setStatus('current')
hpnicfPosaFcmNegoScrmbBinary1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1500)).clone(250)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaFcmNegoScrmbBinary1.setStatus('current')
hpnicfPosaFcmNegoUnscrmbBinary1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1500)).clone(400)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaFcmNegoUnscrmbBinary1.setStatus('current')
hpnicfPosaFcmThresholdRlsdOff = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 75)).clone(48)).setUnits('-dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaFcmThresholdRlsdOff.setStatus('current')
hpnicfPosaFcmThresholdRlsdOn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 75)).clone(43)).setUnits('-dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaFcmThresholdRlsdOn.setStatus('current')
hpnicfPosaFcmThresholdTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 42)).clone(10)).setUnits('-dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaFcmThresholdTxPower.setStatus('current')
hpnicfPosaFcmThresholdAnswerTone = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 9, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 42)).clone(9)).setUnits('-dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosaFcmThresholdAnswerTone.setStatus('current')
hpnicfPosaCallerStatTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 10), )
if mibBuilder.loadTexts: hpnicfPosaCallerStatTable.setStatus('current')
hpnicfPosaCallerStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 10, 1), ).setIndexNames((0, "HPN-ICF-POSA-MIB", "hpnicfPosaCallerStatCallerID"))
if mibBuilder.loadTexts: hpnicfPosaCallerStatEntry.setStatus('current')
hpnicfPosaCallerStatCallerID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 10, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64)))
if mibBuilder.loadTexts: hpnicfPosaCallerStatCallerID.setStatus('current')
hpnicfPosaCallerRecvPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaCallerRecvPkts.setStatus('current')
hpnicfPosaCallerSendPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaCallerSendPkts.setStatus('current')
hpnicfPosaCallerErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaCallerErrPkts.setStatus('current')
hpnicfPosaCallerMapErrCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaCallerMapErrCnts.setStatus('current')
hpnicfPosaCallerInDiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaCallerInDiscardedPkts.setStatus('current')
hpnicfPosaCallerOutDiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosaCallerOutDiscardedPkts.setStatus('current')
hpnicfPosaCallerStatRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 2, 10, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPosaCallerStatRowStatus.setStatus('current')
hpnicfPosaTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 3))
hpnicfPosaTrapPrex = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 3, 0))
hpnicfPosaServerStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 3, 0, 1)).setObjects(("HPN-ICF-POSA-MIB", "hpnicfPosaServerEnable"))
if mibBuilder.loadTexts: hpnicfPosaServerStatusChange.setStatus('current')
hpnicfPosaAppStateChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 3, 0, 2)).setObjects(("HPN-ICF-POSA-MIB", "hpnicfPosaAppID"), ("HPN-ICF-POSA-MIB", "hpnicfPosaAppStateChangeObject"))
if mibBuilder.loadTexts: hpnicfPosaAppStateChange.setStatus('current')
hpnicfPosaTerminalHangUp = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 3, 0, 3)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfPosaTerminalHangUp.setStatus('current')
hpnicfPosaFcmLinkNegoFailed = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 3, 0, 4)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfPosaFcmLinkNegoFailed.setStatus('current')
hpnicfPosaFcmPhyNegoFailed = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 3, 0, 5)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfPosaFcmPhyNegoFailed.setStatus('current')
hpnicfPosaTcpConnectionExceed = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 3, 0, 6)).setObjects(("HPN-ICF-POSA-MIB", "hpnicfPosaTcpConnectionThreshold"))
if mibBuilder.loadTexts: hpnicfPosaTcpConnectionExceed.setStatus('current')
hpnicfPosaFcmConnectionExceed = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 3, 0, 7)).setObjects(("HPN-ICF-POSA-MIB", "hpnicfPosaFcmConnectionThreshold"))
if mibBuilder.loadTexts: hpnicfPosaFcmConnectionExceed.setStatus('current')
hpnicfPosaTcpTradeExceed = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 3, 0, 8)).setObjects(("HPN-ICF-POSA-MIB", "hpnicfPosaTcpTradeLimit"), ("HPN-ICF-POSA-MIB", "hpnicfPosaTerminalID"))
if mibBuilder.loadTexts: hpnicfPosaTcpTradeExceed.setStatus('current')
hpnicfPosaTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 3, 1))
hpnicfPosaAppStateChangeObject = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 92, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("available", 1), ("unavailable", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfPosaAppStateChangeObject.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-POSA-MIB", hpnicfPosaFcmConnectionThreshold=hpnicfPosaFcmConnectionThreshold, hpnicfPosaAppInDiscardedPkts=hpnicfPosaAppInDiscardedPkts, hpnicfPosaTerminalState=hpnicfPosaTerminalState, hpnicfPosaFcmStatTimeoutCnts=hpnicfPosaFcmStatTimeoutCnts, hpnicfPosaFcmPhyNegoFailTrapEnable=hpnicfPosaFcmPhyNegoFailTrapEnable, PYSNMP_MODULE_ID=hpnicfPosa, hpnicfPosaTcpConnectionNumber=hpnicfPosaTcpConnectionNumber, hpnicfPosaTcpConnectionThreshold=hpnicfPosaTcpConnectionThreshold, hpnicfPosaTerminalHangUp=hpnicfPosaTerminalHangUp, hpnicfPosaAppMode=hpnicfPosaAppMode, hpnicfPosaFcmStatTransSuccessCnts=hpnicfPosaFcmStatTransSuccessCnts, hpnicfPosaTcpTermStatIP=hpnicfPosaTcpTermStatIP, hpnicfPosaMapEntry=hpnicfPosaMapEntry, hpnicfPosaFcmConfEntry=hpnicfPosaFcmConfEntry, hpnicfPosaAppHelloInterval=hpnicfPosaAppHelloInterval, hpnicfPosaTcpTradeTimeout=hpnicfPosaTcpTradeTimeout, hpnicfPosaAppStatTable=hpnicfPosaAppStatTable, hpnicfPosaTerminalOutDiscardedPkts=hpnicfPosaTerminalOutDiscardedPkts, hpnicfPosaQuietTimeOut=hpnicfPosaQuietTimeOut, hpnicfPosaAppServiceType=hpnicfPosaAppServiceType, hpnicfPosaTerminalListenPort=hpnicfPosaTerminalListenPort, hpnicfPosaTerminalSendPkts=hpnicfPosaTerminalSendPkts, hpnicfPosaAppHello=hpnicfPosaAppHello, hpnicfPosaTcpTermStatIndex=hpnicfPosaTcpTermStatIndex, hpnicfPosaAppRouterPort=hpnicfPosaAppRouterPort, hpnicfPosaAppKeepAliveInterval=hpnicfPosaAppKeepAliveInterval, hpnicfPosaFcmIdleTimeout=hpnicfPosaFcmIdleTimeout, hpnicfPosaAppStatEntry=hpnicfPosaAppStatEntry, hpnicfPosaTcpConnectionTrapEnable=hpnicfPosaTcpConnectionTrapEnable, hpnicfPosaTerminalStatTable=hpnicfPosaTerminalStatTable, hpnicfPosaFcmThresholdRlsdOff=hpnicfPosaFcmThresholdRlsdOff, hpnicfPosaCallerMapErrCnts=hpnicfPosaCallerMapErrCnts, hpnicfPosaFcmNegoSilence=hpnicfPosaFcmNegoSilence, hpnicfPosaAppIfIndex=hpnicfPosaAppIfIndex, hpnicfPosaFcmNegoUnscrmbBinary1=hpnicfPosaFcmNegoUnscrmbBinary1, hpnicfPosaAppName=hpnicfPosaAppName, hpnicfPosaCallerOutDiscardedPkts=hpnicfPosaCallerOutDiscardedPkts, hpnicfPosaTerminalIfIndex=hpnicfPosaTerminalIfIndex, hpnicfPosaFcmStatTransCntsClear=hpnicfPosaFcmStatTransCntsClear, hpnicfPosaTcpTradeLimit=hpnicfPosaTcpTradeLimit, hpnicfPosa=hpnicfPosa, hpnicfPosaFcmNegoHookOff=hpnicfPosaFcmNegoHookOff, hpnicfPosaAppRouterIPType=hpnicfPosaAppRouterIPType, hpnicfPosaFcmStatTable=hpnicfPosaFcmStatTable, hpnicfPosaTerminalEntry=hpnicfPosaTerminalEntry, hpnicfPosaFcmConnectionExceed=hpnicfPosaFcmConnectionExceed, hpnicfPosaMapAppID=hpnicfPosaMapAppID, hpnicfPosaTerminalStatEntry=hpnicfPosaTerminalStatEntry, hpnicfPosaCallerStatCallerID=hpnicfPosaCallerStatCallerID, hpnicfPosaAppKeepAliveCount=hpnicfPosaAppKeepAliveCount, hpnicfPosaTerminalCfgIfIndex=hpnicfPosaTerminalCfgIfIndex, hpnicfPosaAppRowStatus=hpnicfPosaAppRowStatus, hpnicfPosaTrapPrex=hpnicfPosaTrapPrex, HpnicfAppMode=HpnicfAppMode, hpnicfPosaTcpTermErrPkts=hpnicfPosaTcpTermErrPkts, hpnicfPosaTerminalName=hpnicfPosaTerminalName, hpnicfPosaTcpTermStatTable=hpnicfPosaTcpTermStatTable, hpnicfPosaTcpTermStatRowStatus=hpnicfPosaTcpTermStatRowStatus, hpnicfPosaTerminalAccessType=hpnicfPosaTerminalAccessType, hpnicfPosaMapTable=hpnicfPosaMapTable, hpnicfPosaTcpTradeExceed=hpnicfPosaTcpTradeExceed, hpnicfPosaTerminalID=hpnicfPosaTerminalID, hpnicfPosaMapDestCode=hpnicfPosaMapDestCode, hpnicfPosaServerStatusChange=hpnicfPosaServerStatusChange, hpnicfPosaSrvStateChangeTrapEnable=hpnicfPosaSrvStateChangeTrapEnable, hpnicfPosaCallerStatRowStatus=hpnicfPosaCallerStatRowStatus, hpnicfPosaAppHostIPType=hpnicfPosaAppHostIPType, HpnicfPeerState=HpnicfPeerState, hpnicfPosaAppTable=hpnicfPosaAppTable, hpnicfPosaTpduChangeStrategy=hpnicfPosaTpduChangeStrategy, hpnicfPosaCallerInDiscardedPkts=hpnicfPosaCallerInDiscardedPkts, HpnicfTpduChangeStrategy=HpnicfTpduChangeStrategy, hpnicfPosaAppRouterIP=hpnicfPosaAppRouterIP, hpnicfPosaTerminalInDiscardedPkts=hpnicfPosaTerminalInDiscardedPkts, hpnicfPosaBatchTerminalEntry=hpnicfPosaBatchTerminalEntry, hpnicfPosaBatchTerminalRowStatus=hpnicfPosaBatchTerminalRowStatus, hpnicfPosaTables=hpnicfPosaTables, hpnicfPosaAppStateChangeTrapEnable=hpnicfPosaAppStateChangeTrapEnable, hpnicfPosaControl=hpnicfPosaControl, hpnicfPosaCallerSendPkts=hpnicfPosaCallerSendPkts, hpnicfPosaAppOutDiscardedPkts=hpnicfPosaAppOutDiscardedPkts, hpnicfPosaCallerStatEntry=hpnicfPosaCallerStatEntry, hpnicfPosaTerminalErrPkts=hpnicfPosaTerminalErrPkts, hpnicfPosaFcmStatIfIndex=hpnicfPosaFcmStatIfIndex, hpnicfPosaTerminalTable=hpnicfPosaTerminalTable, hpnicfPosaFcmLinkNegoFailed=hpnicfPosaFcmLinkNegoFailed, hpnicfPosaAppEntry=hpnicfPosaAppEntry, hpnicfPosaFcmStatConnectFailCnts=hpnicfPosaFcmStatConnectFailCnts, hpnicfPosaAppID=hpnicfPosaAppID, hpnicfPosaTcpTermSendPkts=hpnicfPosaTcpTermSendPkts, hpnicfPosaServerEnable=hpnicfPosaServerEnable, hpnicfPosaFcmAnswerTimeout=hpnicfPosaFcmAnswerTimeout, hpnicfPosaTcpTermStatIPMask=hpnicfPosaTcpTermStatIPMask, hpnicfPosaTcpTermMapErrCnts=hpnicfPosaTcpTermMapErrCnts, hpnicfPosaBatchTerminalFirstID=hpnicfPosaBatchTerminalFirstID, hpnicfPosaTcpTermOutDiscardedPkts=hpnicfPosaTcpTermOutDiscardedPkts, hpnicfPosaFcmThresholdRlsdOn=hpnicfPosaFcmThresholdRlsdOn, hpnicfPosaTcpConnectionExceed=hpnicfPosaTcpConnectionExceed, hpnicfPosaTcpTermStatEntry=hpnicfPosaTcpTermStatEntry, hpnicfPosaFcmStatEntry=hpnicfPosaFcmStatEntry, hpnicfPosaTcpTermInDiscardedPkts=hpnicfPosaTcpTermInDiscardedPkts, hpnicfPosaCallerStatTable=hpnicfPosaCallerStatTable, hpnicfPosaCallerErrPkts=hpnicfPosaCallerErrPkts, hpnicfPosaAppHostIP=hpnicfPosaAppHostIP, HpnicfAppServiceType=HpnicfAppServiceType, hpnicfPosaFcmTradeTimeout=hpnicfPosaFcmTradeTimeout, hpnicfPosaFcmThresholdTxPower=hpnicfPosaFcmThresholdTxPower, hpnicfPosaCallerRecvPkts=hpnicfPosaCallerRecvPkts, hpnicfPosaAppStateChange=hpnicfPosaAppStateChange, hpnicfPosaAppConnectTimeout=hpnicfPosaAppConnectTimeout, hpnicfPosaFcmThresholdAnswerTone=hpnicfPosaFcmThresholdAnswerTone, hpnicfPosaAppErrPkts=hpnicfPosaAppErrPkts, hpnicfPosaCallerIDTransEnable=hpnicfPosaCallerIDTransEnable, hpnicfPosaTcpTermRecvPkts=hpnicfPosaTcpTermRecvPkts, hpnicfPosaTerminalRecvPkts=hpnicfPosaTerminalRecvPkts, hpnicfPosaAppRecvPkts=hpnicfPosaAppRecvPkts, hpnicfPosaTerminalMapErrCnts=hpnicfPosaTerminalMapErrCnts, hpnicfPosaAppSendPkts=hpnicfPosaAppSendPkts, hpnicfPosaTrap=hpnicfPosaTrap, hpnicfPosaMapSrcCode=hpnicfPosaMapSrcCode, hpnicfPosaFcmConfTable=hpnicfPosaFcmConfTable, hpnicfPosaBatchTerminalTable=hpnicfPosaBatchTerminalTable, hpnicfPosaTcpTradeTrapEnable=hpnicfPosaTcpTradeTrapEnable, hpnicfPosaFcmConnectionTrapEnable=hpnicfPosaFcmConnectionTrapEnable, HpnicfTerminalAccessType=HpnicfTerminalAccessType, hpnicfPosaFcmStatTransCnts=hpnicfPosaFcmStatTransCnts, hpnicfPosaAppState=hpnicfPosaAppState, hpnicfPosaAppHostPort=hpnicfPosaAppHostPort, hpnicfPosaBackupAppID=hpnicfPosaBackupAppID, hpnicfPosaFcmConnectionNumber=hpnicfPosaFcmConnectionNumber, hpnicfPosaTrapObjects=hpnicfPosaTrapObjects, hpnicfPosaTerminalRowStatus=hpnicfPosaTerminalRowStatus, hpnicfPosaTerminalTransAppID=hpnicfPosaTerminalTransAppID, hpnicfPosaFcmNegoScrmbBinary1=hpnicfPosaFcmNegoScrmbBinary1, hpnicfPosaTerminalHangUpTrapEnable=hpnicfPosaTerminalHangUpTrapEnable, hpnicfPosaFcmLnkNegoFailTrapEnable=hpnicfPosaFcmLnkNegoFailTrapEnable, hpnicfPosaMapRowStatus=hpnicfPosaMapRowStatus, hpnicfPosaTcpTermStatIPType=hpnicfPosaTcpTermStatIPType, hpnicfPosaFcmPhyNegoFailed=hpnicfPosaFcmPhyNegoFailed, hpnicfPosaAppStateChangeObject=hpnicfPosaAppStateChangeObject, hpnicfPosaAppDistributeErrCnts=hpnicfPosaAppDistributeErrCnts)
