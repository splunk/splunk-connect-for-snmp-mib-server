#
# PySNMP MIB module GRE (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GRE
# Produced by pysmi-0.3.4 at Mon Apr 29 19:06:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
NotificationType, Integer32, Counter32, enterprises, TimeTicks, MibIdentifier, Unsigned32, iso, ObjectIdentity, IpAddress, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Integer32", "Counter32", "enterprises", "TimeTicks", "MibIdentifier", "Unsigned32", "iso", "ObjectIdentity", "IpAddress", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ModuleIdentity", "Gauge32")
TextualConvention, TruthValue, DisplayString, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "MacAddress", "RowStatus")
pepwave = MibIdentifier((1, 3, 6, 1, 4, 1, 27662))
productMib = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200))
generalMib = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1))
greMib = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1, 11))
greInfo = ModuleIdentity((1, 3, 6, 1, 4, 1, 27662, 200, 1, 11, 1))
if mibBuilder.loadTexts: greInfo.setLastUpdated('201502110000Z')
if mibBuilder.loadTexts: greInfo.setOrganization('PEPWAVE')
greStatusTable = MibTable((1, 3, 6, 1, 4, 1, 27662, 200, 1, 11, 1, 1), )
if mibBuilder.loadTexts: greStatusTable.setStatus('current')
greStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 27662, 200, 1, 11, 1, 1, 1), ).setIndexNames((0, "GRE", "greStatusId"))
if mibBuilder.loadTexts: greStatusEntry.setStatus('current')
greStatusId = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 11, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusId.setStatus('current')
greStatusProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 11, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusProfileName.setStatus('current')
greStatusConnectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 11, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disconnected", 0), ("connected", 1), ("connecting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusConnectionState.setStatus('current')
greStatusLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 11, 1, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusLocalIpAddress.setStatus('current')
greStatusRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 11, 1, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusRemoteIpAddress.setStatus('current')
greStatusTunnelLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 11, 1, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusTunnelLocalIpAddress.setStatus('current')
greStatusTunnelRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 11, 1, 1, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusTunnelRemoteIpAddress.setStatus('current')
greStatusRemoteNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 27662, 200, 1, 11, 1, 2), )
if mibBuilder.loadTexts: greStatusRemoteNetworkTable.setStatus('current')
greStatusRemoteNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 27662, 200, 1, 11, 1, 2, 1), ).setIndexNames((0, "GRE", "greStatusId"), (0, "GRE", "greStatusRemoteNetworkId"))
if mibBuilder.loadTexts: greStatusRemoteNetworkEntry.setStatus('current')
greStatusRemoteNetworkId = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 11, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusRemoteNetworkId.setStatus('current')
greStatusRemoteNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 11, 1, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusRemoteNetwork.setStatus('current')
greStatusRemoteSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 11, 1, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusRemoteSubnet.setStatus('current')
mibBuilder.exportSymbols("GRE", greStatusProfileName=greStatusProfileName, greStatusRemoteIpAddress=greStatusRemoteIpAddress, greStatusRemoteNetwork=greStatusRemoteNetwork, greStatusEntry=greStatusEntry, pepwave=pepwave, greStatusTunnelLocalIpAddress=greStatusTunnelLocalIpAddress, greInfo=greInfo, greStatusConnectionState=greStatusConnectionState, PYSNMP_MODULE_ID=greInfo, greStatusRemoteSubnet=greStatusRemoteSubnet, greStatusId=greStatusId, greStatusRemoteNetworkId=greStatusRemoteNetworkId, productMib=productMib, greMib=greMib, greStatusTunnelRemoteIpAddress=greStatusTunnelRemoteIpAddress, greStatusRemoteNetworkEntry=greStatusRemoteNetworkEntry, greStatusTable=greStatusTable, generalMib=generalMib, greStatusRemoteNetworkTable=greStatusRemoteNetworkTable, greStatusLocalIpAddress=greStatusLocalIpAddress)
