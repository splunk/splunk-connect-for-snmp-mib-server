#
# PySNMP MIB module ZYXEL-POWER-ETHERNET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-POWER-ETHERNET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:45:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, iso, ObjectIdentity, Counter64, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Unsigned32, MibIdentifier, ModuleIdentity, IpAddress, Gauge32, Bits, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "iso", "ObjectIdentity", "Counter64", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Unsigned32", "MibIdentifier", "ModuleIdentity", "IpAddress", "Gauge32", "Bits", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelPoe = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59))
if mibBuilder.loadTexts: zyxelPoe.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelPoe.setOrganization('Enterprise Solution ZyXEL')
zyxelPoeSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 1))
zyxelPoeStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 2))
zyxelPoeTrapInfoObject = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 3))
zyxelPoeNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 4))
zyPoeMode = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("consumption", 0), ("classification", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyPoeMode.setStatus('current')
zyxelPoePsePortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 1, 2), )
if mibBuilder.loadTexts: zyxelPoePsePortTable.setStatus('current')
zyxelPoePsePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 1, 2, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelPoePsePortEntry.setStatus('current')
zyPoePsePortMaxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 1, 2, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyPoePsePortMaxPower.setStatus('current')
zyxelPoePsePortInfoTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 2, 1), )
if mibBuilder.loadTexts: zyxelPoePsePortInfoTable.setStatus('current')
zyxelPoePsePortInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 2, 1, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelPoePsePortInfoEntry.setStatus('current')
zyPoePsePortInfoPowerConsumption = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyPoePsePortInfoPowerConsumption.setStatus('current')
zyPoeTrapPsePowerSupplyFailedReason = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("internalPowerSupplyForPoeFailed", 0), ("rpsForPoeFailed", 1), ("rpsFanFailed", 2), ("rpsOverTemperature", 3))))
if mibBuilder.loadTexts: zyPoeTrapPsePowerSupplyFailedReason.setStatus('current')
zyPoePowerPortOverload = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 4, 1)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zyPoePowerPortOverload.setStatus('current')
zyPoePowerPortShortCircuit = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 4, 2)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zyPoePowerPortShortCircuit.setStatus('current')
zyPoePowerPortOverSystemBudget = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 4, 3)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zyPoePowerPortOverSystemBudget.setStatus('current')
zyPoePsePowerSupplyFailed = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 4, 4)).setObjects(("ZYXEL-POWER-ETHERNET-MIB", "zyPoeTrapPsePowerSupplyFailedReason"))
if mibBuilder.loadTexts: zyPoePsePowerSupplyFailed.setStatus('current')
zyPoePowerPortOverloadRecovered = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 4, 5)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zyPoePowerPortOverloadRecovered.setStatus('current')
zyPoePowerPortShortCircuitRecovered = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 4, 6)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zyPoePowerPortShortCircuitRecovered.setStatus('current')
zyPoePowerPortOverSystemBudgetRecovered = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 59, 4, 7)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zyPoePowerPortOverSystemBudgetRecovered.setStatus('current')
mibBuilder.exportSymbols("ZYXEL-POWER-ETHERNET-MIB", zyxelPoeTrapInfoObject=zyxelPoeTrapInfoObject, zyPoeMode=zyPoeMode, zyxelPoePsePortInfoEntry=zyxelPoePsePortInfoEntry, PYSNMP_MODULE_ID=zyxelPoe, zyPoePowerPortOverSystemBudget=zyPoePowerPortOverSystemBudget, zyPoePsePortMaxPower=zyPoePsePortMaxPower, zyxelPoeStatus=zyxelPoeStatus, zyPoeTrapPsePowerSupplyFailedReason=zyPoeTrapPsePowerSupplyFailedReason, zyPoePowerPortShortCircuitRecovered=zyPoePowerPortShortCircuitRecovered, zyxelPoeSetup=zyxelPoeSetup, zyxelPoePsePortEntry=zyxelPoePsePortEntry, zyxelPoe=zyxelPoe, zyPoePowerPortOverload=zyPoePowerPortOverload, zyPoePowerPortOverSystemBudgetRecovered=zyPoePowerPortOverSystemBudgetRecovered, zyPoePsePowerSupplyFailed=zyPoePsePowerSupplyFailed, zyPoePsePortInfoPowerConsumption=zyPoePsePortInfoPowerConsumption, zyxelPoeNotifications=zyxelPoeNotifications, zyxelPoePsePortTable=zyxelPoePsePortTable, zyxelPoePsePortInfoTable=zyxelPoePsePortInfoTable, zyPoePowerPortShortCircuit=zyPoePowerPortShortCircuit, zyPoePowerPortOverloadRecovered=zyPoePowerPortOverloadRecovered)
