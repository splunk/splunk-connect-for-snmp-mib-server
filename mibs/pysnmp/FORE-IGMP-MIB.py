#
# PySNMP MIB module FORE-IGMP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FORE-IGMP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:00:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
preDot1qVlanMIB, = mibBuilder.importSymbols("Fore-Common-MIB", "preDot1qVlanMIB")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Bits, MibIdentifier, NotificationType, Counter32, ObjectIdentity, iso, ModuleIdentity, IpAddress, Counter64, Gauge32, Integer32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Bits", "MibIdentifier", "NotificationType", "Counter32", "ObjectIdentity", "iso", "ModuleIdentity", "IpAddress", "Counter64", "Gauge32", "Integer32", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
foreIgmpModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 326, 1, 8, 3))
if mibBuilder.loadTexts: foreIgmpModule.setLastUpdated('9911050000Z')
if mibBuilder.loadTexts: foreIgmpModule.setOrganization('MARCONI')
igmpIpmcTable = MibTable((1, 3, 6, 1, 4, 1, 326, 1, 8, 3, 1), )
if mibBuilder.loadTexts: igmpIpmcTable.setStatus('current')
igmpIpmcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 1, 8, 3, 1, 1), ).setIndexNames((0, "FORE-IGMP-MIB", "vlan"), (0, "FORE-IGMP-MIB", "ipMulticastAddress"))
if mibBuilder.loadTexts: igmpIpmcEntry.setStatus('current')
ipMulticastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 8, 3, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipMulticastAddress.setStatus('current')
ipmcPortGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 8, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmcPortGroup.setStatus('current')
igmpRouterTable = MibTable((1, 3, 6, 1, 4, 1, 326, 1, 8, 3, 2), )
if mibBuilder.loadTexts: igmpRouterTable.setStatus('current')
igmpRouterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 1, 8, 3, 2, 1), ).setIndexNames((0, "FORE-IGMP-MIB", "vlan"))
if mibBuilder.loadTexts: igmpRouterEntry.setStatus('current')
vlan = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 8, 3, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlan.setStatus('current')
routerPortGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 8, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: routerPortGroup.setStatus('current')
mibBuilder.exportSymbols("FORE-IGMP-MIB", foreIgmpModule=foreIgmpModule, ipMulticastAddress=ipMulticastAddress, ipmcPortGroup=ipmcPortGroup, igmpIpmcEntry=igmpIpmcEntry, routerPortGroup=routerPortGroup, igmpIpmcTable=igmpIpmcTable, vlan=vlan, PYSNMP_MODULE_ID=foreIgmpModule, igmpRouterTable=igmpRouterTable, igmpRouterEntry=igmpRouterEntry)
