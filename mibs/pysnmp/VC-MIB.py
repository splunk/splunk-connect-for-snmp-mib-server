#
# PySNMP MIB module VC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:26:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
neStatistics, = mibBuilder.importSymbols("NE-STAT-MIB", "neStatistics")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, MibIdentifier, Counter32, NotificationType, Bits, Gauge32, Integer32, iso, Counter64, ObjectIdentity, Unsigned32, IpAddress, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "Counter32", "NotificationType", "Bits", "Gauge32", "Integer32", "iso", "Counter64", "ObjectIdentity", "Unsigned32", "IpAddress", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
vcStatMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 2603, 1, 3))
vcStat = MibIdentifier((1, 3, 6, 1, 4, 1, 2603, 1, 3, 1))
vcStatTable = MibTable((1, 3, 6, 1, 4, 1, 2603, 1, 3, 1, 1), )
if mibBuilder.loadTexts: vcStatTable.setStatus('mandatory')
vcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2603, 1, 3, 1, 1, 1), ).setIndexNames((0, "VC-MIB", "vcPipePosition"), (0, "VC-MIB", "vcPipeInstancePosition"), (0, "VC-MIB", "vcPosition"), (0, "VC-MIB", "vcInstancePosition"))
if mibBuilder.loadTexts: vcEntry.setStatus('mandatory')
vcPipePosition = MibTableColumn((1, 3, 6, 1, 4, 1, 2603, 1, 3, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcPipePosition.setStatus('mandatory')
vcPipeInstancePosition = MibTableColumn((1, 3, 6, 1, 4, 1, 2603, 1, 3, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcPipeInstancePosition.setStatus('mandatory')
vcPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 2603, 1, 3, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcPosition.setStatus('mandatory')
vcInstancePosition = MibTableColumn((1, 3, 6, 1, 4, 1, 2603, 1, 3, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcInstancePosition.setStatus('mandatory')
vcName = MibTableColumn((1, 3, 6, 1, 4, 1, 2603, 1, 3, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcName.setStatus('mandatory')
vcByteCountIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2603, 1, 3, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcByteCountIn.setStatus('mandatory')
vcByteCountOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2603, 1, 3, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcByteCountOut.setStatus('mandatory')
vcByteCountTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2603, 1, 3, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcByteCountTotal.setStatus('mandatory')
vcLiveConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 2603, 1, 3, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcLiveConnections.setStatus('mandatory')
vcNewConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 2603, 1, 3, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcNewConnections.setStatus('mandatory')
vcPacketsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2603, 1, 3, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcPacketsIn.setStatus('mandatory')
vcPacketsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2603, 1, 3, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcPacketsOut.setStatus('mandatory')
vcPacketsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2603, 1, 3, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcPacketsTotal.setStatus('mandatory')
mibBuilder.exportSymbols("VC-MIB", vcStat=vcStat, vcInstancePosition=vcInstancePosition, vcName=vcName, vcPacketsTotal=vcPacketsTotal, vcStatTable=vcStatTable, vcByteCountTotal=vcByteCountTotal, vcByteCountIn=vcByteCountIn, vcPosition=vcPosition, vcPacketsOut=vcPacketsOut, vcPipeInstancePosition=vcPipeInstancePosition, vcPacketsIn=vcPacketsIn, vcLiveConnections=vcLiveConnections, vcNewConnections=vcNewConnections, vcPipePosition=vcPipePosition, vcEntry=vcEntry, vcStatMIB=vcStatMIB, vcByteCountOut=vcByteCountOut)
