#
# PySNMP MIB module INTEL-L3TC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTEL-L3TC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:43:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
mib2ext, = mibBuilder.importSymbols("INTEL-GEN-MIB", "mib2ext")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Gauge32, NotificationType, IpAddress, ModuleIdentity, Unsigned32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Integer32, ObjectIdentity, TimeTicks, Counter32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Gauge32", "NotificationType", "IpAddress", "ModuleIdentity", "Unsigned32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Integer32", "ObjectIdentity", "TimeTicks", "Counter32", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
l3tcache = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 37))
l3tcFrontPorts = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 37, 1))
l3tcServers = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 37, 2))
l3tcTcpPorts = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 37, 3))
l3tcStaticIPs = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 37, 4))
l3tcSingleAttrs = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 37, 5))
l3tcFrontPortsTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 37, 1, 1), )
if mibBuilder.loadTexts: l3tcFrontPortsTable.setStatus('mandatory')
l3tcFrontPortsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 37, 1, 1, 1), ).setIndexNames((0, "INTEL-L3TC-MIB", "l3tcFrontPortsNumber"))
if mibBuilder.loadTexts: l3tcFrontPortsEntry.setStatus('mandatory')
l3tcFrontPortsNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 37, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l3tcFrontPortsNumber.setStatus('mandatory')
l3tcFrontPortsMode = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 37, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("client", 2), ("server", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3tcFrontPortsMode.setStatus('mandatory')
l3tcServersTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 37, 2, 1), )
if mibBuilder.loadTexts: l3tcServersTable.setStatus('mandatory')
l3tcServersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 37, 2, 1, 1), ).setIndexNames((0, "INTEL-L3TC-MIB", "l3tcServersIndex"))
if mibBuilder.loadTexts: l3tcServersEntry.setStatus('mandatory')
l3tcServersIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 37, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l3tcServersIndex.setStatus('mandatory')
l3tcServersIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 37, 2, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3tcServersIpAddress.setStatus('mandatory')
l3tcServersDeleteEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 37, 2, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3tcServersDeleteEntry.setStatus('mandatory')
l3tcServersPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 37, 2, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3tcServersPortNumber.setStatus('mandatory')
l3tcServersHeartBeatUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 37, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(80, 80)).setFixedLength(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3tcServersHeartBeatUrl.setStatus('mandatory')
l3tcServersName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 37, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3tcServersName.setStatus('mandatory')
l3tcServersHeartBeatStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 37, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("retrying", 2), ("noResponse", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l3tcServersHeartBeatStatus.setStatus('mandatory')
l3tcTcpPortsTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 37, 3, 1), )
if mibBuilder.loadTexts: l3tcTcpPortsTable.setStatus('mandatory')
l3tcTcpPortsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 37, 3, 1, 1), ).setIndexNames((0, "INTEL-L3TC-MIB", "l3tcTcpPortsNumber"))
if mibBuilder.loadTexts: l3tcTcpPortsEntry.setStatus('mandatory')
l3tcTcpPortsNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 37, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l3tcTcpPortsNumber.setStatus('mandatory')
l3tcTcpPortsDeleteEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 37, 3, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3tcTcpPortsDeleteEntry.setStatus('mandatory')
l3tcStaticIPsTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 37, 4, 1), )
if mibBuilder.loadTexts: l3tcStaticIPsTable.setStatus('mandatory')
l3tcStaticIPsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 37, 4, 1, 1), ).setIndexNames((0, "INTEL-L3TC-MIB", "l3tcStaticIPsPacketDestIP"))
if mibBuilder.loadTexts: l3tcStaticIPsEntry.setStatus('mandatory')
l3tcStaticIPsPacketDestIP = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 37, 4, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l3tcStaticIPsPacketDestIP.setStatus('mandatory')
l3tcStaticIPsDeleteEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 37, 4, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3tcStaticIPsDeleteEntry.setStatus('mandatory')
l3tcStaticIPsServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 37, 4, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3tcStaticIPsServerIndex.setStatus('mandatory')
l3tcPollingInterval = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 37, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3tcPollingInterval.setStatus('mandatory')
l3tcEnabled = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 37, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3tcEnabled.setStatus('mandatory')
l3tcRevertToDefaults = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 37, 5, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3tcRevertToDefaults.setStatus('mandatory')
mibBuilder.exportSymbols("INTEL-L3TC-MIB", l3tcServersPortNumber=l3tcServersPortNumber, l3tcServers=l3tcServers, l3tcache=l3tcache, l3tcServersHeartBeatStatus=l3tcServersHeartBeatStatus, l3tcStaticIPsServerIndex=l3tcStaticIPsServerIndex, l3tcFrontPortsMode=l3tcFrontPortsMode, l3tcFrontPortsTable=l3tcFrontPortsTable, l3tcTcpPortsDeleteEntry=l3tcTcpPortsDeleteEntry, l3tcStaticIPsDeleteEntry=l3tcStaticIPsDeleteEntry, l3tcStaticIPs=l3tcStaticIPs, l3tcFrontPortsNumber=l3tcFrontPortsNumber, l3tcRevertToDefaults=l3tcRevertToDefaults, l3tcPollingInterval=l3tcPollingInterval, l3tcTcpPortsTable=l3tcTcpPortsTable, l3tcServersIpAddress=l3tcServersIpAddress, l3tcStaticIPsEntry=l3tcStaticIPsEntry, l3tcTcpPortsEntry=l3tcTcpPortsEntry, l3tcStaticIPsPacketDestIP=l3tcStaticIPsPacketDestIP, l3tcTcpPortsNumber=l3tcTcpPortsNumber, l3tcServersIndex=l3tcServersIndex, l3tcFrontPortsEntry=l3tcFrontPortsEntry, l3tcTcpPorts=l3tcTcpPorts, l3tcServersDeleteEntry=l3tcServersDeleteEntry, l3tcSingleAttrs=l3tcSingleAttrs, l3tcServersEntry=l3tcServersEntry, l3tcFrontPorts=l3tcFrontPorts, l3tcServersHeartBeatUrl=l3tcServersHeartBeatUrl, l3tcStaticIPsTable=l3tcStaticIPsTable, l3tcServersName=l3tcServersName, l3tcServersTable=l3tcServersTable, l3tcEnabled=l3tcEnabled)
