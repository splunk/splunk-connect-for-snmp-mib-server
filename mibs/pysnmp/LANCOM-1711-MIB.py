#
# PySNMP MIB module LANCOM-1711-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LANCOM-1711-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:54:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysName, sysDescr = mibBuilder.importSymbols("SNMPv2-MIB", "sysName", "sysDescr")
ModuleIdentity, Unsigned32, ObjectIdentity, TimeTicks, Bits, enterprises, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Integer32, MibIdentifier, iso, Counter32, IpAddress, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Unsigned32", "ObjectIdentity", "TimeTicks", "Bits", "enterprises", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Integer32", "MibIdentifier", "iso", "Counter32", "IpAddress", "NotificationType")
MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "TextualConvention")
lancom_1711_plus = ModuleIdentity((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712)).setLabel("lancom-1711-plus")
lancom_1711_plus.setRevisions(('2009-08-12 17:08',))
if mibBuilder.loadTexts: lancom_1711_plus.setLastUpdated('200908121708Z')
if mibBuilder.loadTexts: lancom_1711_plus.setOrganization('LANCOM Systems')
sta = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1))
set = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2))
fir = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3))
oth = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4))
staOper = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staOper.setStatus('current')
staWan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4))
staWanBytetransTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1), )
if mibBuilder.loadTexts: staWanBytetransTable.setStatus('current')
staWanBytetransEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staWanBytetransIfc"))
if mibBuilder.loadTexts: staWanBytetransEntry.setStatus('current')
staWanBytetransIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransIfc.setStatus('current')
staWanBytetransCrx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransCrx.setStatus('current')
staWanBytetransRxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransRxb.setStatus('current')
staWanBytetransTxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransTxb.setStatus('current')
staWanBytetransCtx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransCtx.setStatus('current')
staWanPackettraTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2), )
if mibBuilder.loadTexts: staWanPackettraTable.setStatus('current')
staWanPackettraEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staWanPackettraIfc"))
if mibBuilder.loadTexts: staWanPackettraEntry.setStatus('current')
staWanPackettraIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraIfc.setStatus('current')
staWanPackettraRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraRx.setStatus('current')
staWanPackettraTxt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraTxt.setStatus('current')
staWanPackettraTxn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraTxn.setStatus('current')
staWanPackettraTxr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraTxr.setStatus('current')
staWanPackettraTxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraTxu.setStatus('current')
staWanErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3), )
if mibBuilder.loadTexts: staWanErrorsTable.setStatus('current')
staWanErrorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staWanErrorsIfc"))
if mibBuilder.loadTexts: staWanErrorsEntry.setStatus('current')
staWanErrorsIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsIfc.setStatus('current')
staWanErrorsRxl1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsRxl1.setStatus('current')
staWanErrorsRxl2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsRxl2.setStatus('current')
staWanErrorsRxl3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsRxl3.setStatus('current')
staWanErrorsStac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsStac.setStatus('current')
staWanErrorsTxer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsTxer.setStatus('current')
staWanWantxdisc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWantxdisc.setStatus('current')
staWanWanheappa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWanheappa.setStatus('current')
staWanWanqueuep = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWanqueuep.setStatus('current')
staWanWanqueuee = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWanqueuee.setStatus('current')
staWanWanqueuem = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWanqueuem.setStatus('current')
staWanThroughpuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8), )
if mibBuilder.loadTexts: staWanThroughpuTable.setStatus('current')
staWanThroughpuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staWanThroughpuIfc"))
if mibBuilder.loadTexts: staWanThroughpuEntry.setStatus('current')
staWanThroughpuIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuIfc.setStatus('current')
staWanThroughpuRxsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuRxsc.setStatus('current')
staWanThroughpuTxsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuTxsc.setStatus('current')
staWanThroughpuRxsa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuRxsa.setStatus('current')
staWanThroughpuTxsa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuTxsa.setStatus('current')
staWanDeleteval = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staWanDeleteval.setStatus('current')
staWanConnectio = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanConnectio.setStatus('current')
staWanMtuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 11), )
if mibBuilder.loadTexts: staWanMtuTable.setStatus('current')
staWanMtuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staWanMtuPee"))
if mibBuilder.loadTexts: staWanMtuEntry.setStatus('current')
staWanMtuPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staWanMtuPee.setStatus('current')
staWanMtuMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staWanMtuMtu.setStatus('current')
staWanActions = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20))
staWanActionsActTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 1), )
if mibBuilder.loadTexts: staWanActionsActTable.setStatus('current')
staWanActionsActEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staWanActionsActTim"))
if mibBuilder.loadTexts: staWanActionsActEntry.setStatus('current')
staWanActionsActTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsActTim.setStatus('current')
staWanActionsActAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsActAct.setStatus('current')
staWanActionsActRes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsActRes.setStatus('current')
staWanActionsLocTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 2), )
if mibBuilder.loadTexts: staWanActionsLocTable.setStatus('current')
staWanActionsLocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staWanActionsLocInd"))
if mibBuilder.loadTexts: staWanActionsLocEntry.setStatus('current')
staWanActionsLocInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsLocInd.setStatus('current')
staWanActionsLocRem = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsLocRem.setStatus('current')
staLan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5))
staLanLanh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanLanh.setStatus('current')
staLanDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staLanDele.setStatus('current')
staLanLanq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanLanq.setStatus('current')
staLanInteTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 51), )
if mibBuilder.loadTexts: staLanInteTable.setStatus('current')
staLanInteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 51, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staLanInteIfc"))
if mibBuilder.loadTexts: staLanInteEntry.setStatus('current')
staLanInteIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 51, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanInteIfc.setStatus('current')
staLanInteQue = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 51, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanInteQue.setStatus('current')
staLanByteTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52), )
if mibBuilder.loadTexts: staLanByteTable.setStatus('current')
staLanByteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staLanByteIfc"))
if mibBuilder.loadTexts: staLanByteEntry.setStatus('current')
staLanByteIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteIfc.setStatus('current')
staLanByteTxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteTxbyte.setStatus('current')
staLanByteRxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteRxbyte.setStatus('current')
staLanByteThroug = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteThroug.setStatus('current')
staLanByteMaxthr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteMaxthr.setStatus('current')
staLanByteBytest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteBytest.setStatus('current')
staLanByteBytesm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteBytesm.setStatus('current')
staLanPackTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53), )
if mibBuilder.loadTexts: staLanPackTable.setStatus('current')
staLanPackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staLanPackIfc"))
if mibBuilder.loadTexts: staLanPackEntry.setStatus('current')
staLanPackIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackIfc.setStatus('current')
staLanPackRxp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackRxp.setStatus('current')
staLanPackTxp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackTxp.setStatus('current')
staLanPackRxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackRxb.setStatus('current')
staLanPackRxm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackRxm.setStatus('current')
staLanPackRxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackRxu.setStatus('current')
staLanPackTxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackTxb.setStatus('current')
staLanPackTxm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackTxm.setStatus('current')
staLanPackTxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackTxu.setStatus('current')
staLanErroTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54), )
if mibBuilder.loadTexts: staLanErroTable.setStatus('current')
staLanErroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staLanErroIfc"))
if mibBuilder.loadTexts: staLanErroEntry.setStatus('current')
staLanErroIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroIfc.setStatus('current')
staLanErroRxerro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroRxerro.setStatus('current')
staLanErroTxerro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroTxerro.setStatus('current')
staLanErroStacke = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroStacke.setStatus('current')
staLanErroNicerr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroNicerr.setStatus('current')
staLanErroQueuee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroQueuee.setStatus('current')
staLanErroRxcrce = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroRxcrce.setStatus('current')
staLanErroCollis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroCollis.setStatus('current')
staLanErroSingle = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroSingle.setStatus('current')
staLanErroMultip = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroMultip.setStatus('current')
staLanErroLateco = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroLateco.setStatus('current')
staLanErroExcess = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroExcess.setStatus('current')
staLanErroRxalig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroRxalig.setStatus('current')
staLanErroRxtoos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroRxtoos.setStatus('current')
staLanErroRxtool = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroRxtool.setStatus('current')
staLanErroTxcarr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroTxcarr.setStatus('current')
staLanErroTxdefe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroTxdefe.setStatus('current')
staPpp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6))
staPppPppTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1), )
if mibBuilder.loadTexts: staPppPppTable.setStatus('current')
staPppPppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staPppPppIfc"))
if mibBuilder.loadTexts: staPppPppEntry.setStatus('current')
staPppPppIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppIfc.setStatus('current')
staPppPppPha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dead", 1), ("establish", 2), ("terminate", 3), ("authenticate", 4), ("callback", 5), ("network", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppPha.setStatus('current')
staPppPppLcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initial", 1), ("startng", 2), ("closed", 3), ("stopped", 4), ("closing", 5), ("stoppng", 6), ("reqsent", 7), ("ackrcvd", 8), ("acksent", 9), ("opened", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppLcp.setStatus('current')
staPppPppIpc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initial", 1), ("startng", 2), ("closed", 3), ("stopped", 4), ("closing", 5), ("stoppng", 6), ("reqsent", 7), ("ackrcvd", 8), ("acksent", 9), ("opened", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppIpc.setStatus('current')
staPppPppCcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initial", 1), ("startng", 2), ("closed", 3), ("stopped", 4), ("closing", 5), ("stoppng", 6), ("reqsent", 7), ("ackrcvd", 8), ("acksent", 9), ("opened", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppCcp.setStatus('current')
staPppPppBac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initial", 1), ("startng", 2), ("closed", 3), ("stopped", 4), ("closing", 5), ("stoppng", 6), ("reqsent", 7), ("ackrcvd", 8), ("acksent", 9), ("opened", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppBac.setStatus('current')
staPppLcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2))
staPppLcpRxerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxerrors.setStatus('current')
staPppLcpRxdiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxdiscarded.setStatus('current')
staPppLcpRxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxconfigrequ.setStatus('current')
staPppLcpRxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxconfigack.setStatus('current')
staPppLcpRxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxconfignak.setStatus('current')
staPppLcpRxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxconfigreje.setStatus('current')
staPppLcpRxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxterminater.setStatus('current')
staPppLcpRxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxterminatea.setStatus('current')
staPppLcpRxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxcodereject.setStatus('current')
staPppLcpRxprotocolre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxprotocolre.setStatus('current')
staPppLcpRxechoreques = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxechoreques.setStatus('current')
staPppLcpRxechoreply = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxechoreply.setStatus('current')
staPppLcpRxdiscardreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxdiscardreq.setStatus('current')
staPppLcpTxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxconfigrequ.setStatus('current')
staPppLcpTxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxconfigack.setStatus('current')
staPppLcpTxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxconfignak.setStatus('current')
staPppLcpTxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxconfigreje.setStatus('current')
staPppLcpTxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxterminater.setStatus('current')
staPppLcpTxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxterminatea.setStatus('current')
staPppLcpTxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxcodereject.setStatus('current')
staPppLcpTxprotocolre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxprotocolre.setStatus('current')
staPppLcpTxechoreques = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxechoreques.setStatus('current')
staPppLcpTxechoreply = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxechoreply.setStatus('current')
staPppLcpTxdiscardreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxdiscardreq.setStatus('current')
staPppLcpDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppLcpDeletevalues.setStatus('current')
staPppPap = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3))
staPppPapRxdis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapRxdis.setStatus('current')
staPppPapRxreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapRxreq.setStatus('current')
staPppPapRxsuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapRxsuc.setStatus('current')
staPppPapRxfai = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapRxfai.setStatus('current')
staPppPapTxret = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapTxret.setStatus('current')
staPppPapTxreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapTxreq.setStatus('current')
staPppPapTxsuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapTxsuc.setStatus('current')
staPppPapTxfai = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapTxfai.setStatus('current')
staPppPapDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppPapDelet.setStatus('current')
staPppCha = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4))
staPppChaRxdis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxdis.setStatus('current')
staPppChaRxcha = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxcha.setStatus('current')
staPppChaRxres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxres.setStatus('current')
staPppChaRxsuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxsuc.setStatus('current')
staPppChaRxfai = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxfai.setStatus('current')
staPppChaTxret = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxret.setStatus('current')
staPppChaTxcha = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxcha.setStatus('current')
staPppChaTxres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxres.setStatus('current')
staPppChaTxsuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxsuc.setStatus('current')
staPppChaTxfai = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxfai.setStatus('current')
staPppChaDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppChaDelet.setStatus('current')
staPppCbc = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7))
staPppCbcRxdis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCbcRxdis.setStatus('current')
staPppCbcRxreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCbcRxreq.setStatus('current')
staPppCbcRxres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCbcRxres.setStatus('current')
staPppCbcRxack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCbcRxack.setStatus('current')
staPppCbcTxreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCbcTxreq.setStatus('current')
staPppCbcTxres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCbcTxres.setStatus('current')
staPppCbcTxack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCbcTxack.setStatus('current')
staPppCbcDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppCbcDelet.setStatus('current')
staPppIpc = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6))
staPppIpcRxdiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxdiscarded.setStatus('current')
staPppIpcRxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxconfigrequ.setStatus('current')
staPppIpcRxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxconfigack.setStatus('current')
staPppIpcRxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxconfignak.setStatus('current')
staPppIpcRxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxconfigreje.setStatus('current')
staPppIpcRxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxterminater.setStatus('current')
staPppIpcRxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxterminatea.setStatus('current')
staPppIpcRxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxcodereject.setStatus('current')
staPppIpcTxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxconfigrequ.setStatus('current')
staPppIpcTxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxconfigack.setStatus('current')
staPppIpcTxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxconfignak.setStatus('current')
staPppIpcTxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxconfigreje.setStatus('current')
staPppIpcTxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxterminater.setStatus('current')
staPppIpcTxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxterminatea.setStatus('current')
staPppIpcTxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxcodereject.setStatus('current')
staPppIpcDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppIpcDeletevalues.setStatus('current')
staPppCcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10))
staPppCcpRxdiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxdiscarded.setStatus('current')
staPppCcpRxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxconfigrequ.setStatus('current')
staPppCcpRxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxconfigack.setStatus('current')
staPppCcpRxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxconfignak.setStatus('current')
staPppCcpRxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxconfigreje.setStatus('current')
staPppCcpRxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxterminater.setStatus('current')
staPppCcpRxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxterminatea.setStatus('current')
staPppCcpRxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxcodereject.setStatus('current')
staPppCcpRxresetreque = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxresetreque.setStatus('current')
staPppCcpRxresetack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxresetack.setStatus('current')
staPppCcpTxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxconfigrequ.setStatus('current')
staPppCcpTxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxconfigack.setStatus('current')
staPppCcpTxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxconfignak.setStatus('current')
staPppCcpTxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxconfigreje.setStatus('current')
staPppCcpTxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxterminater.setStatus('current')
staPppCcpTxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxterminatea.setStatus('current')
staPppCcpTxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxcodereject.setStatus('current')
staPppCcpTxresetreque = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxresetreque.setStatus('current')
staPppCcpTxresetack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxresetack.setStatus('current')
staPppCcpCompressione = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpCompressione.setStatus('current')
staPppCcpDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppCcpDeletevalues.setStatus('current')
staPppMl = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11))
staPppMlBundlec = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlBundlec.setStatus('current')
staPppMlRxseqlo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxseqlo.setStatus('current')
staPppMlRxseqre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxseqre.setStatus('current')
staPppMlRxmrrue = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxmrrue.setStatus('current')
staPppMlRxheade = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxheade.setStatus('current')
staPppMlRxdisca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxdisca.setStatus('current')
staPppMlRxfrags = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxfrags.setStatus('current')
staPppMlRxfragm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxfragm.setStatus('current')
staPppMlRxfrage = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxfrage.setStatus('current')
staPppMlRxnotfr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxnotfr.setStatus('current')
staPppMlDeletev = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppMlDeletev.setStatus('current')
staPppBac = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12))
staPppBacRxerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxerrors.setStatus('current')
staPppBacRxdiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxdiscarded.setStatus('current')
staPppBacRxcallrequest = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxcallrequest.setStatus('current')
staPppBacRxcallrespons = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxcallrespons.setStatus('current')
staPppBacRxcallbackreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxcallbackreq.setStatus('current')
staPppBacRxcallbackres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxcallbackres.setStatus('current')
staPppBacRxlinkdropreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxlinkdropreq.setStatus('current')
staPppBacRxlinkdropres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxlinkdropres.setStatus('current')
staPppBacRxstatusindic = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxstatusindic.setStatus('current')
staPppBacRxstatusrespo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxstatusrespo.setStatus('current')
staPppBacTxcallrequest = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacTxcallrequest.setStatus('current')
staPppBacTxcallrespons = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacTxcallrespons.setStatus('current')
staPppBacTxcallbackreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacTxcallbackreq.setStatus('current')
staPppBacTxcallbackres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacTxcallbackres.setStatus('current')
staPppBacTxlinkdropreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacTxlinkdropreq.setStatus('current')
staPppBacTxlinkdropres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacTxlinkdropres.setStatus('current')
staPppBacTxstatusindic = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacTxstatusindic.setStatus('current')
staPppBacTxstatusrespo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacTxstatusrespo.setStatus('current')
staPppBacDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppBacDeletevalues.setStatus('current')
staPppRxo = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8))
staPppRxoLcpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1), )
if mibBuilder.loadTexts: staPppRxoLcpTable.setStatus('current')
staPppRxoLcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staPppRxoLcpIfc"))
if mibBuilder.loadTexts: staPppRxoLcpEntry.setStatus('current')
staPppRxoLcpIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpIfc.setStatus('current')
staPppRxoLcpMru = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpMru.setStatus('current')
staPppRxoLcpAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpAcc.setStatus('current')
staPppRxoLcpAut = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 32, 16, 8, 4))).clone(namedValues=NamedValues(("none", 0), ("ms-chapv2", 32), ("ms-chap", 16), ("chap", 8), ("pap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpAut.setStatus('current')
staPppRxoLcpMag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpMag.setStatus('current')
staPppRxoLcpPfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpPfc.setStatus('current')
staPppRxoLcpAcf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpAcf.setStatus('current')
staPppRxoLcpCal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 255, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 0), ("none", 255), ("lcp", 1), ("lcp", 2), ("lcp", 3), ("lcp", 4), ("lcp", 5), ("cbcp", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpCal.setStatus('current')
staPppRxoIpcTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3), )
if mibBuilder.loadTexts: staPppRxoIpcTable.setStatus('current')
staPppRxoIpcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staPppRxoIpcIfc"))
if mibBuilder.loadTexts: staPppRxoIpcEntry.setStatus('current')
staPppRxoIpcIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcIfc.setStatus('current')
staPppRxoIpcIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcIpadd.setStatus('current')
staPppRxoIpcDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcDnsde.setStatus('current')
staPppRxoIpcDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcDnsba.setStatus('current')
staPppRxoIpcNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcNbnsd.setStatus('current')
staPppRxoIpcNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcNbnsb.setStatus('current')
staPppTxo = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9))
staPppTxoLcpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1), )
if mibBuilder.loadTexts: staPppTxoLcpTable.setStatus('current')
staPppTxoLcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staPppTxoLcpIfc"))
if mibBuilder.loadTexts: staPppTxoLcpEntry.setStatus('current')
staPppTxoLcpIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpIfc.setStatus('current')
staPppTxoLcpMru = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpMru.setStatus('current')
staPppTxoLcpAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpAcc.setStatus('current')
staPppTxoLcpAut = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 32, 16, 8, 4))).clone(namedValues=NamedValues(("none", 0), ("ms-chapv2", 32), ("ms-chap", 16), ("chap", 8), ("pap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpAut.setStatus('current')
staPppTxoLcpMag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpMag.setStatus('current')
staPppTxoLcpPfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpPfc.setStatus('current')
staPppTxoLcpAcf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpAcf.setStatus('current')
staPppTxoLcpCal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 255, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 0), ("none", 255), ("lcp", 1), ("lcp", 2), ("lcp", 3), ("lcp", 4), ("lcp", 5), ("cbcp", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpCal.setStatus('current')
staPppTxoIpcTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3), )
if mibBuilder.loadTexts: staPppTxoIpcTable.setStatus('current')
staPppTxoIpcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staPppTxoIpcIfc"))
if mibBuilder.loadTexts: staPppTxoIpcEntry.setStatus('current')
staPppTxoIpcIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcIfc.setStatus('current')
staPppTxoIpcIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcIpadd.setStatus('current')
staPppTxoIpcDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcDnsde.setStatus('current')
staPppTxoIpcDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcDnsba.setStatus('current')
staPppTxoIpcNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcNbnsd.setStatus('current')
staPppTxoIpcNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcNbnsb.setStatus('current')
staPppDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppDel.setStatus('current')
staTcpi = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9))
staTcpiArp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1))
staTcpiArpLanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpLanr.setStatus('current')
staTcpiArpLant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpLant.setStatus('current')
staTcpiArpLane = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpLane.setStatus('current')
staTcpiArpWanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpWanr.setStatus('current')
staTcpiArpWant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpWant.setStatus('current')
staTcpiArpWane = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpWane.setStatus('current')
staTcpiArpTablTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7), )
if mibBuilder.loadTexts: staTcpiArpTablTable.setStatus('current')
staTcpiArpTablEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiArpTablIpa"))
if mibBuilder.loadTexts: staTcpiArpTablEntry.setStatus('current')
staTcpiArpTablIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpTablIpa.setStatus('current')
staTcpiArpTablMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpTablMac.setStatus('current')
staTcpiArpTablLas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpTablLas.setStatus('current')
staTcpiArpTablCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("wan", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpTablCon.setStatus('current')
staTcpiArpTablEth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 0))).clone(namedValues=NamedValues(("wan", 1), ("eth-1", 2), ("eth-2", 3), ("eth-3", 4), ("eth-4", 5), ("unknown", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpTablEth.setStatus('current')
staTcpiArpTablVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpTablVla.setStatus('current')
staTcpiArpTablPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpTablPee.setStatus('current')
staTcpiArpDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiArpDele.setStatus('current')
staTcpiIp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2))
staTcpiIpLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpLanrx.setStatus('current')
staTcpiIpLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpLantx.setStatus('current')
staTcpiIpLanchecksumerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpLanchecksumerrors.setStatus('current')
staTcpiIpLanserviceerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpLanserviceerrors.setStatus('current')
staTcpiIpLanfragmentationer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpLanfragmentationer.setStatus('current')
staTcpiIpLanfragmentations = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpLanfragmentations.setStatus('current')
staTcpiIpLanfragmentationsf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpLanfragmentationsf.setStatus('current')
staTcpiIpWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpWanrx.setStatus('current')
staTcpiIpWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpWantx.setStatus('current')
staTcpiIpWanchecksumerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpWanchecksumerrors.setStatus('current')
staTcpiIpWanserviceerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpWanserviceerrors.setStatus('current')
staTcpiIpWanfragmentationer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpWanfragmentationer.setStatus('current')
staTcpiIpWanfragmentations = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpWanfragmentations.setStatus('current')
staTcpiIpWanfragmentationsf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpWanfragmentationsf.setStatus('current')
staTcpiIpWanrxdisconnect = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpWanrxdisconnect.setStatus('current')
staTcpiIpLooperror = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpLooperror.setStatus('current')
staTcpiIpDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiIpDeletevalues.setStatus('current')
staTcpiIcmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3))
staTcpiIcmpLanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIcmpLanr.setStatus('current')
staTcpiIcmpLant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIcmpLant.setStatus('current')
staTcpiIcmpLanc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIcmpLanc.setStatus('current')
staTcpiIcmpLans = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIcmpLans.setStatus('current')
staTcpiIcmpWanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIcmpWanr.setStatus('current')
staTcpiIcmpWant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIcmpWant.setStatus('current')
staTcpiIcmpWanc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIcmpWanc.setStatus('current')
staTcpiIcmpWans = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIcmpWans.setStatus('current')
staTcpiIcmpDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiIcmpDele.setStatus('current')
staTcpiTftp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4))
staTcpiTftpLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLanrx.setStatus('current')
staTcpiTftpLanrxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLanrxr.setStatus('current')
staTcpiTftpLanrxw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLanrxw.setStatus('current')
staTcpiTftpLanrxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLanrxd.setStatus('current')
staTcpiTftpLanrxa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLanrxa.setStatus('current')
staTcpiTftpLanrxo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLanrxo.setStatus('current')
staTcpiTftpLanrxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLanrxe.setStatus('current')
staTcpiTftpLanrxb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLanrxb.setStatus('current')
staTcpiTftpLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLantx.setStatus('current')
staTcpiTftpLantxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLantxd.setStatus('current')
staTcpiTftpLantxa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLantxa.setStatus('current')
staTcpiTftpLantxo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLantxo.setStatus('current')
staTcpiTftpLantxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLantxe.setStatus('current')
staTcpiTftpLantxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLantxr.setStatus('current')
staTcpiTftpLancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLancon.setStatus('current')
staTcpiTftpWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWanrx.setStatus('current')
staTcpiTftpWanrxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWanrxr.setStatus('current')
staTcpiTftpWanrxw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWanrxw.setStatus('current')
staTcpiTftpWanrxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWanrxd.setStatus('current')
staTcpiTftpWanrxa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWanrxa.setStatus('current')
staTcpiTftpWanrxo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWanrxo.setStatus('current')
staTcpiTftpWanrxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWanrxe.setStatus('current')
staTcpiTftpWanrxb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWanrxb.setStatus('current')
staTcpiTftpWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWantx.setStatus('current')
staTcpiTftpWantxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWantxd.setStatus('current')
staTcpiTftpWantxa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWantxa.setStatus('current')
staTcpiTftpWantxo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWantxo.setStatus('current')
staTcpiTftpWantxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWantxe.setStatus('current')
staTcpiTftpWantxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWantxr.setStatus('current')
staTcpiTftpWancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWancon.setStatus('current')
staTcpiTftpDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiTftpDelete.setStatus('current')
staTcpiTcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5))
staTcpiTcpLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpLanrx.setStatus('current')
staTcpiTcpLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpLantx.setStatus('current')
staTcpiTcpLantxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpLantxr.setStatus('current')
staTcpiTcpLanche = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpLanche.setStatus('current')
staTcpiTcpLanser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpLanser.setStatus('current')
staTcpiTcpLancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpLancon.setStatus('current')
staTcpiTcpWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpWanrx.setStatus('current')
staTcpiTcpWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpWantx.setStatus('current')
staTcpiTcpWantxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpWantxr.setStatus('current')
staTcpiTcpWanche = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpWanche.setStatus('current')
staTcpiTcpWanser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpWanser.setStatus('current')
staTcpiTcpWancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpWancon.setStatus('current')
staTcpiTcpDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiTcpDelete.setStatus('current')
staTcpiDhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6))
staTcpiDhcpLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpLanrx.setStatus('current')
staTcpiDhcpLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpLantx.setStatus('current')
staTcpiDhcpWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpWanrx.setStatus('current')
staTcpiDhcpWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpWantx.setStatus('current')
staTcpiDhcpDisca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDisca.setStatus('current')
staTcpiDhcpRxdis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpRxdis.setStatus('current')
staTcpiDhcpRxreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpRxreq.setStatus('current')
staTcpiDhcpRxdec = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpRxdec.setStatus('current')
staTcpiDhcpRxinf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpRxinf.setStatus('current')
staTcpiDhcpRxrel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpRxrel.setStatus('current')
staTcpiDhcpTxoff = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpTxoff.setStatus('current')
staTcpiDhcpTxack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpTxack.setStatus('current')
staTcpiDhcpTxnak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpTxnak.setStatus('current')
staTcpiDhcpServe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpServe.setStatus('current')
staTcpiDhcpAssig = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpAssig.setStatus('current')
staTcpiDhcpMacco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpMacco.setStatus('current')
staTcpiDhcpNetwoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20), )
if mibBuilder.loadTexts: staTcpiDhcpNetwoTable.setStatus('current')
staTcpiDhcpNetwoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiDhcpNetwoNetworknam"))
if mibBuilder.loadTexts: staTcpiDhcpNetwoEntry.setStatus('current')
staTcpiDhcpNetwoNetworknam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoNetworknam.setStatus('current')
staTcpiDhcpNetwoStartaddre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoStartaddre.setStatus('current')
staTcpiDhcpNetwoEndaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoEndaddress.setStatus('current')
staTcpiDhcpNetwoNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoNetmask.setStatus('current')
staTcpiDhcpNetwoBroadcasta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoBroadcasta.setStatus('current')
staTcpiDhcpNetwoGatewayadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoGatewayadd.setStatus('current')
staTcpiDhcpNetwoDnsdefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoDnsdefault.setStatus('current')
staTcpiDhcpNetwoDnsbackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoDnsbackup.setStatus('current')
staTcpiDhcpNetwoNbnsdefaul = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoNbnsdefaul.setStatus('current')
staTcpiDhcpNetwoNbnsbackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoNbnsbackup.setStatus('current')
staTcpiDhcpNetwoServerflag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoServerflag.setStatus('current')
staTcpiDhcpNetwoBroadcastb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoBroadcastb.setStatus('current')
staTcpiDhcpNetwoServerid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoServerid.setStatus('current')
staTcpiDhcpNetwoLanifc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoLanifc.setStatus('current')
staTcpiDhcpNetwoVlanid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoVlanid.setStatus('current')
staTcpiDhcpNetwoMasterserv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 17), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoMasterserv.setStatus('current')
staTcpiDhcpNetwoCache = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoCache.setStatus('current')
staTcpiDhcpNetwoAdaption = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoAdaption.setStatus('current')
staTcpiDhcpDhcptTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16), )
if mibBuilder.loadTexts: staTcpiDhcpDhcptTable.setStatus('current')
staTcpiDhcpDhcptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiDhcpDhcptIpa"), (0, "LANCOM-1711-MIB", "staTcpiDhcpDhcptNet"))
if mibBuilder.loadTexts: staTcpiDhcpDhcptEntry.setStatus('current')
staTcpiDhcpDhcptIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptIpa.setStatus('current')
staTcpiDhcpDhcptMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptMac.setStatus('current')
staTcpiDhcpDhcptTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptTim.setStatus('current')
staTcpiDhcpDhcptHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptHos.setStatus('current')
staTcpiDhcpDhcptTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 5), Bits().clone(namedValues=NamedValues(("new", 15), ("new", 14), ("dyn", 11), ("unkn", 13), ("stat", 12), ("bootp", 10), ("relay", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptTyp.setStatus('current')
staTcpiDhcpDhcptLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptLan.setStatus('current')
staTcpiDhcpDhcptEth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 0))).clone(namedValues=NamedValues(("wan", 1), ("eth-1", 2), ("eth-2", 3), ("eth-3", 4), ("eth-4", 5), ("unknown", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptEth.setStatus('current')
staTcpiDhcpDhcptVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptVla.setStatus('current')
staTcpiDhcpDhcptNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptNet.setStatus('current')
staTcpiDhcpDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiDhcpDelet.setStatus('current')
staTcpiDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiDele.setStatus('current')
staTcpiNetb = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8))
staTcpiNetbLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbLanrx.setStatus('current')
staTcpiNetbLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbLantx.setStatus('current')
staTcpiNetbWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbWanrx.setStatus('current')
staTcpiNetbWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbWantx.setStatus('current')
staTcpiNetbRegist = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbRegist.setStatus('current')
staTcpiNetbConfli = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbConfli.setStatus('current')
staTcpiNetbReleas = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbReleas.setStatus('current')
staTcpiNetbRefres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbRefres.setStatus('current')
staTcpiNetbTimeou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbTimeou.setStatus('current')
staTcpiNetbHosts = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHosts.setStatus('current')
staTcpiNetbGroups = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGroups.setStatus('current')
staTcpiNetbBnodes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBnodes.setStatus('current')
staTcpiNetbPnodes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbPnodes.setStatus('current')
staTcpiNetbMnodes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbMnodes.setStatus('current')
staTcpiNetbWnodes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbWnodes.setStatus('current')
staTcpiNetbPeersTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16), )
if mibBuilder.loadTexts: staTcpiNetbPeersTable.setStatus('current')
staTcpiNetbPeersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiNetbPeersNam"))
if mibBuilder.loadTexts: staTcpiNetbPeersEntry.setStatus('current')
staTcpiNetbPeersNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbPeersNam.setStatus('current')
staTcpiNetbPeersTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("workstation", 1), ("router", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbPeersTyp.setStatus('current')
staTcpiNetbPeersBac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbPeersBac.setStatus('current')
staTcpiNetbPeersTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbPeersTim.setStatus('current')
staTcpiNetbNetworTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18), )
if mibBuilder.loadTexts: staTcpiNetbNetworTable.setStatus('current')
staTcpiNetbNetworEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiNetbNetworNet"))
if mibBuilder.loadTexts: staTcpiNetbNetworEntry.setStatus('current')
staTcpiNetbNetworNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbNetworNet.setStatus('current')
staTcpiNetbNetworNtd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbNetworNtd.setStatus('current')
staTcpiNetbNetworRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbNetworRtg.setStatus('current')
staTcpiNetbNetworInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbNetworInt.setStatus('current')
staTcpiNetbNetworVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbNetworVla.setStatus('current')
staTcpiNetbGrouplTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19), )
if mibBuilder.loadTexts: staTcpiNetbGrouplTable.setStatus('current')
staTcpiNetbGrouplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiNetbGrouplGro"), (0, "LANCOM-1711-MIB", "staTcpiNetbGrouplTyp"), (0, "LANCOM-1711-MIB", "staTcpiNetbGrouplIpa"), (0, "LANCOM-1711-MIB", "staTcpiNetbGrouplRtg"))
if mibBuilder.loadTexts: staTcpiNetbGrouplEntry.setStatus('current')
staTcpiNetbGrouplGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGrouplGro.setStatus('current')
staTcpiNetbGrouplTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGrouplTyp.setStatus('current')
staTcpiNetbGrouplIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGrouplIpa.setStatus('current')
staTcpiNetbGrouplRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGrouplRtg.setStatus('current')
staTcpiNetbGrouplPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGrouplPee.setStatus('current')
staTcpiNetbGrouplNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGrouplNet.setStatus('current')
staTcpiNetbGrouplTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGrouplTim.setStatus('current')
staTcpiNetbGrouplFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGrouplFla.setStatus('current')
staTcpiNetbHostliTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20), )
if mibBuilder.loadTexts: staTcpiNetbHostliTable.setStatus('current')
staTcpiNetbHostliEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiNetbHostliNam"), (0, "LANCOM-1711-MIB", "staTcpiNetbHostliTyp"), (0, "LANCOM-1711-MIB", "staTcpiNetbHostliIpa"), (0, "LANCOM-1711-MIB", "staTcpiNetbHostliRtg"))
if mibBuilder.loadTexts: staTcpiNetbHostliEntry.setStatus('current')
staTcpiNetbHostliNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHostliNam.setStatus('current')
staTcpiNetbHostliTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHostliTyp.setStatus('current')
staTcpiNetbHostliIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHostliIpa.setStatus('current')
staTcpiNetbHostliRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHostliRtg.setStatus('current')
staTcpiNetbHostliPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHostliPee.setStatus('current')
staTcpiNetbHostliNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHostliNet.setStatus('current')
staTcpiNetbHostliTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHostliTim.setStatus('current')
staTcpiNetbHostliFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHostliFla.setStatus('current')
staTcpiNetbServerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21), )
if mibBuilder.loadTexts: staTcpiNetbServerTable.setStatus('current')
staTcpiNetbServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiNetbServerHos"), (0, "LANCOM-1711-MIB", "staTcpiNetbServerGro"), (0, "LANCOM-1711-MIB", "staTcpiNetbServerIpa"), (0, "LANCOM-1711-MIB", "staTcpiNetbServerRtg"))
if mibBuilder.loadTexts: staTcpiNetbServerEntry.setStatus('current')
staTcpiNetbServerHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerHos.setStatus('current')
staTcpiNetbServerGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerGro.setStatus('current')
staTcpiNetbServerIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerIpa.setStatus('current')
staTcpiNetbServerRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerRtg.setStatus('current')
staTcpiNetbServerOsv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerOsv.setStatus('current')
staTcpiNetbServerSmb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerSmb.setStatus('current')
staTcpiNetbServerSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerSer.setStatus('current')
staTcpiNetbServerPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerPee.setStatus('current')
staTcpiNetbServerNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerNet.setStatus('current')
staTcpiNetbServerTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerTim.setStatus('current')
staTcpiNetbServerFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerFla.setStatus('current')
staTcpiNetbBrowseTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22), )
if mibBuilder.loadTexts: staTcpiNetbBrowseTable.setStatus('current')
staTcpiNetbBrowseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiNetbBrowseBro"), (0, "LANCOM-1711-MIB", "staTcpiNetbBrowseGro"), (0, "LANCOM-1711-MIB", "staTcpiNetbBrowseIpa"), (0, "LANCOM-1711-MIB", "staTcpiNetbBrowseRtg"))
if mibBuilder.loadTexts: staTcpiNetbBrowseEntry.setStatus('current')
staTcpiNetbBrowseBro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseBro.setStatus('current')
staTcpiNetbBrowseGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseGro.setStatus('current')
staTcpiNetbBrowseIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseIpa.setStatus('current')
staTcpiNetbBrowseRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseRtg.setStatus('current')
staTcpiNetbBrowseOsv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseOsv.setStatus('current')
staTcpiNetbBrowseSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseSer.setStatus('current')
staTcpiNetbBrowsePee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowsePee.setStatus('current')
staTcpiNetbBrowseNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseNet.setStatus('current')
staTcpiNetbBrowseTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseTim.setStatus('current')
staTcpiNetbBrowseFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseFla.setStatus('current')
staTcpiNetbDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiNetbDelete.setStatus('current')
staTcpiDns = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9))
staTcpiDnsLanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsLanr.setStatus('current')
staTcpiDnsLant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsLant.setStatus('current')
staTcpiDnsWanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsWanr.setStatus('current')
staTcpiDnsWant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsWant.setStatus('current')
staTcpiDnsForw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsForw.setStatus('current')
staTcpiDnsErro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsErro.setStatus('current')
staTcpiDnsDnsa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsDnsa.setStatus('current')
staTcpiDnsDhcp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsDhcp.setStatus('current')
staTcpiDnsNetb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsNetb.setStatus('current')
staTcpiDnsFilt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsFilt.setStatus('current')
staTcpiDnsHitlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11), )
if mibBuilder.loadTexts: staTcpiDnsHitlTable.setStatus('current')
staTcpiDnsHitlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiDnsHitlDom"))
if mibBuilder.loadTexts: staTcpiDnsHitlEntry.setStatus('current')
staTcpiDnsHitlDom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsHitlDom.setStatus('current')
staTcpiDnsHitlReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsHitlReq.setStatus('current')
staTcpiDnsHitlTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsHitlTim.setStatus('current')
staTcpiDnsHitlIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsHitlIpa.setStatus('current')
staTcpiDnsDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiDnsDele.setStatus('current')
staTcpiHttp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10))
staTcpiHttpHttpac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpHttpac.setStatus('current')
staTcpiHttpHttpsa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpHttpsa.setStatus('current')
staTcpiHttpHttpno = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpHttpno.setStatus('current')
staTcpiHttpHttpau = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpHttpau.setStatus('current')
staTcpiHttpHttppr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpHttppr.setStatus('current')
staTcpiHttpAgentlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 7), )
if mibBuilder.loadTexts: staTcpiHttpAgentlTable.setStatus('current')
staTcpiHttpAgentlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiHttpAgentlAge"))
if mibBuilder.loadTexts: staTcpiHttpAgentlEntry.setStatus('current')
staTcpiHttpAgentlAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 67))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpAgentlAge.setStatus('current')
staTcpiHttpAgentlAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpAgentlAcc.setStatus('current')
staTcpiHttpDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiHttpDelete.setStatus('current')
staTcpiHttpActiveTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8), )
if mibBuilder.loadTexts: staTcpiHttpActiveTable.setStatus('current')
staTcpiHttpActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiHttpActiveIndex"))
if mibBuilder.loadTexts: staTcpiHttpActiveEntry.setStatus('current')
staTcpiHttpActiveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpActiveIndex.setStatus('current')
staTcpiHttpActiveRemotea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpActiveRemotea.setStatus('current')
staTcpiHttpActiveRemotep = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpActiveRemotep.setStatus('current')
staTcpiHttpActiveLocalho = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpActiveLocalho.setStatus('current')
staTcpiHttpActiveLocalpo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpActiveLocalpo.setStatus('current')
staTcpiHttpActiveLocalrt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpActiveLocalrt.setStatus('current')
staTcpiHttpActiveIdletim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpActiveIdletim.setStatus('current')
staTcpiHttpActiveNumconn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpActiveNumconn.setStatus('current')
staTcpiNetwTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20), )
if mibBuilder.loadTexts: staTcpiNetwTable.setStatus('current')
staTcpiNetwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiNetwNet"))
if mibBuilder.loadTexts: staTcpiNetwEntry.setStatus('current')
staTcpiNetwNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetwNet.setStatus('current')
staTcpiNetwIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetwIpa.setStatus('current')
staTcpiNetwIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetwIpn.setStatus('current')
staTcpiNetwVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetwVla.setStatus('current')
staTcpiNetwInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(256, 257, 258, 259, 65535))).clone(namedValues=NamedValues(("lan-1", 256), ("lan-2", 257), ("lan-3", 258), ("lan-4", 259), ("any", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetwInt.setStatus('current')
staTcpiNetwSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("strict", 1), ("loose", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetwSrc.setStatus('current')
staTcpiNetwTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("intranet", 1), ("dmz", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetwTyp.setStatus('current')
staTcpiNetwRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetwRtg.setStatus('current')
staTcpiSysl = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11))
staTcpiSyslLasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11), )
if mibBuilder.loadTexts: staTcpiSyslLasTable.setStatus('current')
staTcpiSyslLasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiSyslLasIdx"))
if mibBuilder.loadTexts: staTcpiSyslLasEntry.setStatus('current')
staTcpiSyslLasIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiSyslLasIdx.setStatus('current')
staTcpiSyslLasTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiSyslLasTim.setStatus('current')
staTcpiSyslLasSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("kern", 0), ("user", 1), ("mail", 2), ("daemon", 3), ("auth", 4), ("syslog", 5), ("lpr", 6), ("news", 7), ("uucp", 8), ("cron", 9), ("authpriv", 10), ("local0", 16), ("local1", 17), ("local2", 18), ("local3", 19), ("local4", 20), ("local5", 21), ("local6", 22), ("local7", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiSyslLasSou.setStatus('current')
staTcpiSyslLasLev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("emergency", 0), ("alarm", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("info", 6), ("debug", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiSyslLasLev.setStatus('current')
staTcpiSyslLasMes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiSyslLasMes.setStatus('current')
staTcpiSyslDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 99), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiSyslDel.setStatus('current')
staTcpiRadi = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13))
staTcpiRadiInvalidau = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiInvalidau.setStatus('current')
staTcpiRadiAuthenticTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2), )
if mibBuilder.loadTexts: staTcpiRadiAuthenticTable.setStatus('current')
staTcpiRadiAuthenticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiRadiAuthenticIpaddress"), (0, "LANCOM-1711-MIB", "staTcpiRadiAuthenticPort"))
if mibBuilder.loadTexts: staTcpiRadiAuthenticEntry.setStatus('current')
staTcpiRadiAuthenticIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticIpaddress.setStatus('current')
staTcpiRadiAuthenticPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticPort.setStatus('current')
staTcpiRadiAuthenticLastreque = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticLastreque.setStatus('current')
staTcpiRadiAuthenticRoundtrip = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticRoundtrip.setStatus('current')
staTcpiRadiAuthenticAccessreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticAccessreq.setStatus('current')
staTcpiRadiAuthenticAccessret = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticAccessret.setStatus('current')
staTcpiRadiAuthenticAccessacc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticAccessacc.setStatus('current')
staTcpiRadiAuthenticAccessrej = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticAccessrej.setStatus('current')
staTcpiRadiAuthenticAccesscha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticAccesscha.setStatus('current')
staTcpiRadiAuthenticMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticMalformed.setStatus('current')
staTcpiRadiAuthenticBadauthen = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticBadauthen.setStatus('current')
staTcpiRadiAuthenticPendingre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticPendingre.setStatus('current')
staTcpiRadiAuthenticTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticTimeouts.setStatus('current')
staTcpiRadiAuthenticUnknownty = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticUnknownty.setStatus('current')
staTcpiRadiAuthenticDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticDropped.setStatus('current')
staTcpiRadiInvalidac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiInvalidac.setStatus('current')
staTcpiRadiAccountinTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12), )
if mibBuilder.loadTexts: staTcpiRadiAccountinTable.setStatus('current')
staTcpiRadiAccountinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiRadiAccountinIpaddress"), (0, "LANCOM-1711-MIB", "staTcpiRadiAccountinPort"))
if mibBuilder.loadTexts: staTcpiRadiAccountinEntry.setStatus('current')
staTcpiRadiAccountinIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinIpaddress.setStatus('current')
staTcpiRadiAccountinPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinPort.setStatus('current')
staTcpiRadiAccountinLastrequest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinLastrequest.setStatus('current')
staTcpiRadiAccountinRoundtriptime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinRoundtriptime.setStatus('current')
staTcpiRadiAccountinAccountingreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinAccountingreq.setStatus('current')
staTcpiRadiAccountinAccountingret = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinAccountingret.setStatus('current')
staTcpiRadiAccountinAccountingres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinAccountingres.setStatus('current')
staTcpiRadiAccountinMalformedacco = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinMalformedacco.setStatus('current')
staTcpiRadiAccountinBadauthentica = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinBadauthentica.setStatus('current')
staTcpiRadiAccountinPendingreques = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinPendingreques.setStatus('current')
staTcpiRadiAccountinTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinTimeouts.setStatus('current')
staTcpiRadiAccountinUnknowntypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinUnknowntypes.setStatus('current')
staTcpiRadiAccountinDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinDropped.setStatus('current')
staIpro = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10))
staIproLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLanrx.setStatus('current')
staIproLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLantx.setStatus('current')
staIproLanloca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLanloca.setStatus('current')
staIproLannetw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLannetw.setStatus('current')
staIproLanrout = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLanrout.setStatus('current')
staIproLanttle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLanttle.setStatus('current')
staIproLanfilt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLanfilt.setStatus('current')
staIproLandisc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLandisc.setStatus('current')
staIproWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproWanrx.setStatus('current')
staIproWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproWantx.setStatus('current')
staIproWannetw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproWannetw.setStatus('current')
staIproWanttle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproWanttle.setStatus('current')
staIproWanfilt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproWanfilt.setStatus('current')
staIproWandisc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproWandisc.setStatus('current')
staIproWantype = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproWantype.setStatus('current')
staIproArperro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproArperro.setStatus('current')
staIproEstabliTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17), )
if mibBuilder.loadTexts: staIproEstabliTable.setStatus('current')
staIproEstabliEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproEstabliTim"), (0, "LANCOM-1711-MIB", "staIproEstabliCou"))
if mibBuilder.loadTexts: staIproEstabliEntry.setStatus('current')
staIproEstabliTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproEstabliTim.setStatus('current')
staIproEstabliDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproEstabliDes.setStatus('current')
staIproEstabliSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproEstabliSrc.setStatus('current')
staIproEstabliPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 8, 17, 47, 50, 51, 62, 108, 112, 119))).clone(namedValues=NamedValues(("icmp", 1), ("igmp", 2), ("ggt", 3), ("ipip", 4), ("tcp", 6), ("egp", 8), ("udp", 17), ("gre", 47), ("esp", 50), ("ah", 51), ("cftp", 62), ("ipcomp", 108), ("vrrp", 112), ("srp", 119)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproEstabliPro.setStatus('current')
staIproEstabliDpo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproEstabliDpo.setStatus('current')
staIproEstabliSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproEstabliSou.setStatus('current')
staIproEstabliCou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproEstabliCou.setStatus('current')
staIproProtocoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 18), )
if mibBuilder.loadTexts: staIproProtocoTable.setStatus('current')
staIproProtocoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 18, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproProtocoPro"))
if mibBuilder.loadTexts: staIproProtocoEntry.setStatus('current')
staIproProtocoPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 8, 17, 47, 50, 51, 62, 108, 112, 119))).clone(namedValues=NamedValues(("icmp", 1), ("igmp", 2), ("ggt", 3), ("ipip", 4), ("tcp", 6), ("egp", 8), ("udp", 17), ("gre", 47), ("esp", 50), ("ah", 51), ("cftp", 62), ("ipcomp", 108), ("vrrp", 112), ("srp", 119)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproProtocoPro.setStatus('current')
staIproProtocoLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 18, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproProtocoLan.setStatus('current')
staIproProtocoWan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 18, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproProtocoWan.setStatus('current')
staIproRip = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19))
staIproRipRx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipRx.setStatus('current')
staIproRipRequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipRequ.setStatus('current')
staIproRipResp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipResp.setStatus('current')
staIproRipDisc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDisc.setStatus('current')
staIproRipErro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipErro.setStatus('current')
staIproRipEntr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipEntr.setStatus('current')
staIproRipTx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipTx.setStatus('current')
staIproRipIpriTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8), )
if mibBuilder.loadTexts: staIproRipIpriTable.setStatus('current')
staIproRipIpriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproRipIpriIpa"), (0, "LANCOM-1711-MIB", "staIproRipIpriIpn"), (0, "LANCOM-1711-MIB", "staIproRipIpriRtg"))
if mibBuilder.loadTexts: staIproRipIpriEntry.setStatus('current')
staIproRipIpriIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriIpa.setStatus('current')
staIproRipIpriIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriIpn.setStatus('current')
staIproRipIpriRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriRtg.setStatus('current')
staIproRipIpriTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriTim.setStatus('current')
staIproRipIpriDis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriDis.setStatus('current')
staIproRipIpriGat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriGat.setStatus('current')
staIproRipIpriPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriPee.setStatus('current')
staIproRipIpriPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriPor.setStatus('current')
staIproRipIpriVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriVla.setStatus('current')
staIproRipIpriNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriNet.setStatus('current')
staIproRipDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staIproRipDele.setStatus('current')
staIproRipLansTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10), )
if mibBuilder.loadTexts: staIproRipLansTable.setStatus('current')
staIproRipLansEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproRipLansNetw"))
if mibBuilder.loadTexts: staIproRipLansEntry.setStatus('current')
staIproRipLansNetw = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansNetw.setStatus('current')
staIproRipLansRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansRipt.setStatus('current')
staIproRipLansRips = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansRips.setStatus('current')
staIproRipLansRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansRipa.setStatus('current')
staIproRipLansProp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansProp.setStatus('current')
staIproRipLansPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansPois.setStatus('current')
staIproRipLansDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansDftr.setStatus('current')
staIproRipLansRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansRtgt.setStatus('current')
staIproRipLansRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansRxfi.setStatus('current')
staIproRipLansTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansTxfi.setStatus('current')
staIproRipLansPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansPort.setStatus('current')
staIproRipLansVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansVlan.setStatus('current')
staIproRipVrrpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 12), )
if mibBuilder.loadTexts: staIproRipVrrpTable.setStatus('current')
staIproRipVrrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproRipVrrpNet"), (0, "LANCOM-1711-MIB", "staIproRipVrrpRou"))
if mibBuilder.loadTexts: staIproRipVrrpEntry.setStatus('current')
staIproRipVrrpNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipVrrpNet.setStatus('current')
staIproRipVrrpRip = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipVrrpRip.setStatus('current')
staIproRipVrrpRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipVrrpRou.setStatus('current')
staIproRipWansTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11), )
if mibBuilder.loadTexts: staIproRipWansTable.setStatus('current')
staIproRipWansEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproRipWansPeer"))
if mibBuilder.loadTexts: staIproRipWansEntry.setStatus('current')
staIproRipWansPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansPeer.setStatus('current')
staIproRipWansRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansRipt.setStatus('current')
staIproRipWansRips = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansRips.setStatus('current')
staIproRipWansRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansRipa.setStatus('current')
staIproRipWansMasq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansMasq.setStatus('current')
staIproRipWansPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansPois.setStatus('current')
staIproRipWansRfc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansRfc2.setStatus('current')
staIproRipWansGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansGate.setStatus('current')
staIproRipWansDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansDftr.setStatus('current')
staIproRipWansRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansRtgt.setStatus('current')
staIproRipWansRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansRxfi.setStatus('current')
staIproRipWansTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansTxfi.setStatus('current')
staIproRipDynlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13), )
if mibBuilder.loadTexts: staIproRipDynlTable.setStatus('current')
staIproRipDynlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproRipDynlGate"))
if mibBuilder.loadTexts: staIproRipDynlEntry.setStatus('current')
staIproRipDynlGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlGate.setStatus('current')
staIproRipDynlRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlRipt.setStatus('current')
staIproRipDynlRips = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlRips.setStatus('current')
staIproRipDynlRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlRipa.setStatus('current')
staIproRipDynlPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlPois.setStatus('current')
staIproRipDynlDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlDftr.setStatus('current')
staIproRipDynlRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlRtgt.setStatus('current')
staIproRipDynlRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlRxfi.setStatus('current')
staIproRipDynlTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlTxfi.setStatus('current')
staIproRipDynlPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlPort.setStatus('current')
staIproRipDynlVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlVlan.setStatus('current')
staIproRipDynwTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14), )
if mibBuilder.loadTexts: staIproRipDynwTable.setStatus('current')
staIproRipDynwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproRipDynwPeer"))
if mibBuilder.loadTexts: staIproRipDynwEntry.setStatus('current')
staIproRipDynwPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwPeer.setStatus('current')
staIproRipDynwRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwRipt.setStatus('current')
staIproRipDynwRips = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwRips.setStatus('current')
staIproRipDynwRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwRipa.setStatus('current')
staIproRipDynwMasq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwMasq.setStatus('current')
staIproRipDynwPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwPois.setStatus('current')
staIproRipDynwRfc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwRfc2.setStatus('current')
staIproRipDynwGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwGate.setStatus('current')
staIproRipDynwDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwDftr.setStatus('current')
staIproRipDynwRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwRtgt.setStatus('current')
staIproRipDynwRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwRxfi.setStatus('current')
staIproRipDynwTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwTxfi.setStatus('current')
staIproRipWildTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16), )
if mibBuilder.loadTexts: staIproRipWildTable.setStatus('current')
staIproRipWildEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproRipWildPeer"))
if mibBuilder.loadTexts: staIproRipWildEntry.setStatus('current')
staIproRipWildPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildPeer.setStatus('current')
staIproRipWildRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildRipt.setStatus('current')
staIproRipWildRips = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildRips.setStatus('current')
staIproRipWildRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildRipa.setStatus('current')
staIproRipWildMasq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildMasq.setStatus('current')
staIproRipWildPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildPois.setStatus('current')
staIproRipWildRfc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildRfc2.setStatus('current')
staIproRipWildGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildGate.setStatus('current')
staIproRipWildDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildDftr.setStatus('current')
staIproRipWildRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildRtgt.setStatus('current')
staIproRipWildRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildRxfi.setStatus('current')
staIproRipWildTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildTxfi.setStatus('current')
staIproRipFiltTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15), )
if mibBuilder.loadTexts: staIproRipFiltTable.setStatus('current')
staIproRipFiltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproRipFiltIdx"))
if mibBuilder.loadTexts: staIproRipFiltEntry.setStatus('current')
staIproRipFiltIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipFiltIdx.setStatus('current')
staIproRipFiltNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipFiltNam.setStatus('current')
staIproRipFiltIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipFiltIpa.setStatus('current')
staIproRipFiltIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipFiltIpn.setStatus('current')
staIproRipFiltTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("positive", 1), ("negative", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipFiltTyp.setStatus('current')
staIproDeletev = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staIproDeletev.setStatus('current')
staIproServiceTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21), )
if mibBuilder.loadTexts: staIproServiceTable.setStatus('current')
staIproServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproServiceService"))
if mibBuilder.loadTexts: staIproServiceEntry.setStatus('current')
staIproServiceService = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("icmp", 1), ("ftp", 2), ("http", 3), ("smtp", 4), ("dns", 5), ("telnet", 6), ("tftp", 7), ("dhcp", 8), ("pop3", 9), ("netbios", 10), ("imap2", 11), ("news", 12), ("irc", 13), ("snmp", 14), ("other", 15), ("total", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproServiceService.setStatus('current')
staIproServicePacketrx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproServicePacketrx.setStatus('current')
staIproServicePackettx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproServicePackettx.setStatus('current')
staIproServicePacketre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproServicePacketre.setStatus('current')
staIproServiceKbytesrx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproServiceKbytesrx.setStatus('current')
staIproServiceKbytestx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproServiceKbytestx.setStatus('current')
staIproServiceKbytesre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproServiceKbytesre.setStatus('current')
staIproFilterlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22), )
if mibBuilder.loadTexts: staIproFilterlTable.setStatus('current')
staIproFilterlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproFilterlIdx"))
if mibBuilder.loadTexts: staIproFilterlEntry.setStatus('current')
staIproFilterlIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlIdx.setStatus('current')
staIproFilterlProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlProt.setStatus('current')
staIproFilterlSrcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlSrcm.setStatus('current')
staIproFilterlSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlSrca.setStatus('current')
staIproFilterlSrcn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlSrcn.setStatus('current')
staIproFilterlSst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlSst.setStatus('current')
staIproFilterlSend = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlSend.setStatus('current')
staIproFilterlDstm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlDstm.setStatus('current')
staIproFilterlDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlDsta.setStatus('current')
staIproFilterlDstn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlDstn.setStatus('current')
staIproFilterlDst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlDst.setStatus('current')
staIproFilterlDend = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlDend.setStatus('current')
staIproFilterlActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlActi.setStatus('current')
staIproFilterlLink = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlLink.setStatus('current')
staIproFilterlPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlPrio.setStatus('current')
staIproFilterlRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlRtgt.setStatus('current')
staIproConnectTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23), )
if mibBuilder.loadTexts: staIproConnectTable.setStatus('current')
staIproConnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproConnectSrca"), (0, "LANCOM-1711-MIB", "staIproConnectDsta"), (0, "LANCOM-1711-MIB", "staIproConnectProt"), (0, "LANCOM-1711-MIB", "staIproConnectSrcp"), (0, "LANCOM-1711-MIB", "staIproConnectDstp"))
if mibBuilder.loadTexts: staIproConnectEntry.setStatus('current')
staIproConnectSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectSrca.setStatus('current')
staIproConnectDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectDsta.setStatus('current')
staIproConnectProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectProt.setStatus('current')
staIproConnectSrcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectSrcp.setStatus('current')
staIproConnectDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectDstp.setStatus('current')
staIproConnectRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectRtgt.setStatus('current')
staIproConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectTime.setStatus('current')
staIproConnectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectFlag.setStatus('current')
staIproConnectFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectFilt.setStatus('current')
staIproConnectSrcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectSrcr.setStatus('current')
staIproConnectDest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectDest.setStatus('current')
staIproOpenporTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29), )
if mibBuilder.loadTexts: staIproOpenporTable.setStatus('current')
staIproOpenporEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproOpenporSrca"), (0, "LANCOM-1711-MIB", "staIproOpenporDsta"), (0, "LANCOM-1711-MIB", "staIproOpenporProt"), (0, "LANCOM-1711-MIB", "staIproOpenporDstp"))
if mibBuilder.loadTexts: staIproOpenporEntry.setStatus('current')
staIproOpenporSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproOpenporSrca.setStatus('current')
staIproOpenporDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproOpenporDsta.setStatus('current')
staIproOpenporProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproOpenporProt.setStatus('current')
staIproOpenporDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproOpenporDstp.setStatus('current')
staIproOpenporTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproOpenporTime.setStatus('current')
staIproOpenporFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproOpenporFilt.setStatus('current')
staIproOpenporSrcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproOpenporSrcr.setStatus('current')
staIproHostbloTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 24), )
if mibBuilder.loadTexts: staIproHostbloTable.setStatus('current')
staIproHostbloEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 24, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproHostbloSrc"))
if mibBuilder.loadTexts: staIproHostbloEntry.setStatus('current')
staIproHostbloSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 24, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproHostbloSrc.setStatus('current')
staIproHostbloTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 24, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproHostbloTim.setStatus('current')
staIproHostbloFil = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 24, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproHostbloFil.setStatus('current')
staIproPortbloTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25), )
if mibBuilder.loadTexts: staIproPortbloTable.setStatus('current')
staIproPortbloEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproPortbloDsta"))
if mibBuilder.loadTexts: staIproPortbloEntry.setStatus('current')
staIproPortbloDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproPortbloDsta.setStatus('current')
staIproPortbloProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproPortbloProt.setStatus('current')
staIproPortbloDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproPortbloDstp.setStatus('current')
staIproPortbloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproPortbloTime.setStatus('current')
staIproPortbloFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproPortbloFilt.setStatus('current')
staIproLogtablTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26), )
if mibBuilder.loadTexts: staIproLogtablTable.setStatus('current')
staIproLogtablEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproLogtablIdx"))
if mibBuilder.loadTexts: staIproLogtablEntry.setStatus('current')
staIproLogtablIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablIdx.setStatus('current')
staIproLogtablSyst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablSyst.setStatus('current')
staIproLogtablSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablSrca.setStatus('current')
staIproLogtablDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablDsta.setStatus('current')
staIproLogtablProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablProt.setStatus('current')
staIproLogtablSrcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablSrcp.setStatus('current')
staIproLogtablDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablDstp.setStatus('current')
staIproLogtablFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablFilt.setStatus('current')
staIproLogtablLimi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablLimi.setStatus('current')
staIproLogtablThre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablThre.setStatus('current')
staIproLogtablActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablActi.setStatus('current')
staIproHoconnlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 27), )
if mibBuilder.loadTexts: staIproHoconnlTable.setStatus('current')
staIproHoconnlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 27, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproHoconnlDst"))
if mibBuilder.loadTexts: staIproHoconnlEntry.setStatus('current')
staIproHoconnlDst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 27, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproHoconnlDst.setStatus('current')
staIproHoconnlNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 27, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproHoconnlNum.setStatus('current')
staIproHoconnlTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 27, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproHoconnlTim.setStatus('current')
staIproQosTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28), )
if mibBuilder.loadTexts: staIproQosTable.setStatus('current')
staIproQosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproQosIfc"))
if mibBuilder.loadTexts: staIproQosEntry.setStatus('current')
staIproQosIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosIfc.setStatus('current')
staIproQosPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosPeer.setStatus('current')
staIproQosUpstr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosUpstr.setStatus('current')
staIproQosDowns = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosDowns.setStatus('current')
staIproQosRxres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosRxres.setStatus('current')
staIproQosRxreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosRxreq.setStatus('current')
staIproQosRxblo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosRxblo.setStatus('current')
staIproQosTxres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosTxres.setStatus('current')
staIproQosTxreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosTxreq.setStatus('current')
staIproQosTxfav = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosTxfav.setStatus('current')
staIproQosTxblo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosTxblo.setStatus('current')
staIproQosFragm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosFragm.setStatus('current')
staIproQosPmtus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosPmtus.setStatus('current')
staIproRules = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRules.setStatus('current')
staIproFilter = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilter.setStatus('current')
staIproL4error = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproL4error.setStatus('current')
staIproLoadbal = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32))
staIproLoadbalOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLoadbalOpe.setStatus('current')
staIproLoadbalConTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2), )
if mibBuilder.loadTexts: staIproLoadbalConTable.setStatus('current')
staIproLoadbalConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproLoadbalConPee"), (0, "LANCOM-1711-MIB", "staIproLoadbalConBun"))
if mibBuilder.loadTexts: staIproLoadbalConEntry.setStatus('current')
staIproLoadbalConPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLoadbalConPee.setStatus('current')
staIproLoadbalConBun = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLoadbalConBun.setStatus('current')
staIproLoadbalConSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 7, 8))).clone(namedValues=NamedValues(("ready", 2), ("connection", 7), ("disconnecting", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLoadbalConSta.setStatus('current')
staIproLoadbalConTcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLoadbalConTcp.setStatus('current')
staIproLoadbalConPpt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLoadbalConPpt.setStatus('current')
staIproLoadbalConVpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLoadbalConVpn.setStatus('current')
staIproVrrp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33))
staIproVrrpOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpOpe.setStatus('current')
staIproVrrpRx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpRx.setStatus('current')
staIproVrrpTx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpTx.setStatus('current')
staIproVrrpErr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpErr.setStatus('current')
staIproVrrpDro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpDro.setStatus('current')
staIproVrrpInt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpInt.setStatus('current')
staIproVrrpVirTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10), )
if mibBuilder.loadTexts: staIproVrrpVirTable.setStatus('current')
staIproVrrpVirEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproVrrpVirRou"))
if mibBuilder.loadTexts: staIproVrrpVirEntry.setStatus('current')
staIproVrrpVirRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirRou.setStatus('current')
staIproVrrpVirVir = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirVir.setStatus('current')
staIproVrrpVirPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirPri.setStatus('current')
staIproVrrpVirBpr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirBpr.setStatus('current')
staIproVrrpVirPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirPee.setStatus('current')
staIproVrrpVirSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("init", 0), ("listen", 1), ("standby", 2), ("master", 3), ("down", 4), ("reconnect", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirSta.setStatus('current')
staIproVrrpVirBac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirBac.setStatus('current')
staIproVrrpVirMas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirMas.setStatus('current')
staIproVrrpVirPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirPor.setStatus('current')
staIproVrrpVirVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirVla.setStatus('current')
staIproVrrpVirNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirNet.setStatus('current')
staIproVrrpMacTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 11), )
if mibBuilder.loadTexts: staIproVrrpMacTable.setStatus('current')
staIproVrrpMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproVrrpMacVir"))
if mibBuilder.loadTexts: staIproVrrpMacEntry.setStatus('current')
staIproVrrpMacVir = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 11, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpMacVir.setStatus('current')
staIproVrrpMacMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 11, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpMacMac.setStatus('current')
staIproVrrpMacRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpMacRou.setStatus('current')
staIproVrrpEveTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12), )
if mibBuilder.loadTexts: staIproVrrpEveTable.setStatus('current')
staIproVrrpEveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproVrrpEveIdx"))
if mibBuilder.loadTexts: staIproVrrpEveEntry.setStatus('current')
staIproVrrpEveIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpEveIdx.setStatus('current')
staIproVrrpEveSys = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpEveSys.setStatus('current')
staIproVrrpEveSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpEveSrc.setStatus('current')
staIproVrrpEveVri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpEveVri.setStatus('current')
staIproVrrpEveEve = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("invalid-ttl", 1), ("invalid-version", 2), ("bad-number-of-virtual-addresses", 3), ("bad-authentication-type", 4), ("bad-advertisement-interval", 5), ("invalid-vrid", 6), ("invalid-router-address", 7), ("invalid-priority", 8), ("virtual-router-stopped", 9), ("virtual-router-started", 10), ("link-up", 11), ("link-down", 12), ("new-master", 13), ("backup-started", 14), ("backup-ended", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpEveEve.setStatus('current')
staIproVrrpEveInf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpEveInf.setStatus('current')
staIproVrrpDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staIproVrrpDel.setStatus('current')
staIproActiproTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30), )
if mibBuilder.loadTexts: staIproActiproTable.setStatus('current')
staIproActiproEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproActiproIpa"), (0, "LANCOM-1711-MIB", "staIproActiproIpn"), (0, "LANCOM-1711-MIB", "staIproActiproRtg"))
if mibBuilder.loadTexts: staIproActiproEntry.setStatus('current')
staIproActiproIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproActiproIpa.setStatus('current')
staIproActiproIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproActiproIpn.setStatus('current')
staIproActiproRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproActiproRtg.setStatus('current')
staIproActiproGat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproActiproGat.setStatus('current')
staIproActiproPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproActiproPee.setStatus('current')
staIproActiproDis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproActiproDis.setStatus('current')
staIproActiproMas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))).clone(namedValues=NamedValues(("no", 0), ("on", 1), ("intranet", 2), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproActiproMas.setStatus('current')
staIproActiproTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("static", 1), ("rip", 2), ("vpn", 3), ("capwap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproActiproTyp.setStatus('current')
staConf = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11))
staConfLanactiv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLanactiv.setStatus('current')
staConfLantotal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLantotal.setStatus('current')
staConfWanactiv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfWanactiv.setStatus('current')
staConfWantotal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfWantotal.setStatus('current')
staConfOutbanda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfOutbanda.setStatus('current')
staConfOutbandt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfOutbandt.setStatus('current')
staConfOutbandb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfOutbandb.setStatus('current')
staConfLoginerr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLoginerr.setStatus('current')
staConfLoginloc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLoginloc.setStatus('current')
staConfLoginrej = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLoginrej.setStatus('current')
staConfStartsca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staConfStartsca.setStatus('current')
staConfScanresuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14), )
if mibBuilder.loadTexts: staConfScanresuTable.setStatus('current')
staConfScanresuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staConfScanresuIpadd"), (0, "LANCOM-1711-MIB", "staConfScanresuRtgta"))
if mibBuilder.loadTexts: staConfScanresuEntry.setStatus('current')
staConfScanresuIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuIpadd.setStatus('current')
staConfScanresuRtgta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuRtgta.setStatus('current')
staConfScanresuName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuName.setStatus('current')
staConfScanresuDevic = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuDevic.setStatus('current')
staConfScanresuVersi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuVersi.setStatus('current')
staConfScanresuCapip = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuCapip.setStatus('current')
staConfScanresuHttpp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuHttpp.setStatus('current')
staConfScanresuHttps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuHttps.setStatus('current')
staConfScanresuState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("scanning", 0), ("ready", 1), ("error", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuState.setStatus('current')
staConfFeaturesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 16), )
if mibBuilder.loadTexts: staConfFeaturesTable.setStatus('current')
staConfFeaturesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 16, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staConfFeaturesFea"))
if mibBuilder.loadTexts: staConfFeaturesEntry.setStatus('current')
staConfFeaturesFea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39))).clone(namedValues=NamedValues(("ipx", 1), ("lan-bridge", 2), ("lancapi", 3), ("leased-line", 4), ("switched-line", 5), ("dsl-interface", 6), ("fax", 7), ("modem", 8), ("vpn-5", 9), ("vpn-25", 10), ("vpn-25-old", 11), ("vpn-50-old", 12), ("vpn-100", 13), ("wlc-4025-100", 14), ("wlan-point-to-point", 15), ("public-spot", 16), ("vpn-200", 17), ("vpn-500", 18), ("vpn-1000", 19), ("hermes1-wpa", 20), ("vpn-3", 21), ("umts", 22), ("dynamic-vpn", 23), ("wlan-5ghz", 24), ("wlan-no-encryption", 25), ("voip-advanced-32", 26), ("voip-basic", 27), ("wlan-fcc-restrictions", 28), ("wlc-4025-50", 29), ("wlc-4006-12", 30), ("voip-advanced-8", 31), ("unused", 32), ("unused", 33), ("utm-antivirus-small", 34), ("utm-antispam-small", 35), ("utm-contentfilter-small", 36), ("wlc-public-spot", 37), ("wlan-monitor-mode", 38), ("wlan-no-5ghz", 39)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfFeaturesFea.setStatus('current')
staConfFeaturesExp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 16, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfFeaturesExp.setStatus('current')
staConfAntithef = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15))
staConfAntithefState = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("active", 1), ("successfull", 2), ("locked", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfAntithefState.setStatus('current')
staConfAntithefSendi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfAntithefSendi.setStatus('current')
staConfAntithefWaiti = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfAntithefWaiti.setStatus('current')
staConfAntithefLasts = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfAntithefLasts.setStatus('current')
staConfAntithefCalla = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfAntithefCalla.setStatus('current')
staConfAntithefIncom = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfAntithefIncom.setStatus('current')
staConfAntithefLaste = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 16, 17, 18, 19, 21, 22, 26, 27, 31, 34, 42, 81, 88, 41, 50, 63))).clone(namedValues=NamedValues(("unknown", 0), ("unallocated-number", 1), ("no-route-to-destination", 3), ("normal-call-clearing", 16), ("user-busy", 17), ("no-user-responding", 18), ("user-alerting-no-answer", 19), ("call-rejected", 21), ("number-changed", 22), ("non-selected-user-clearing", 26), ("destination-out-of-order", 27), ("normal-unspecified", 31), ("no-channel-available", 34), ("switching-equipment-congestion", 42), ("invalid-call-reference-number", 81), ("incompatible-destination", 88), ("temp-failure", 41), ("facility-not-subscribed", 50), ("facility-not-available", 63)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfAntithefLaste.setStatus('current')
staConfAntithefMetho = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("basic-call", 0), ("facility", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfAntithefMetho.setStatus('current')
staConfLl2m = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65))
staConfLl2mRxpa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mRxpa.setStatus('current')
staConfLl2mRxbr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mRxbr.setStatus('current')
staConfLl2mRxmu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mRxmu.setStatus('current')
staConfLl2mRxun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mRxun.setStatus('current')
staConfLl2mRxdi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mRxdi.setStatus('current')
staConfLl2mRxma = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mRxma.setStatus('current')
staConfLl2mServ = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20))
staConfLl2mServRxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mServRxp.setStatus('current')
staConfLl2mServRxb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mServRxb.setStatus('current')
staConfLl2mServRxm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mServRxm.setStatus('current')
staConfLl2mServRxu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mServRxu.setStatus('current')
staConfLl2mServRxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mServRxd.setStatus('current')
staConfLl2mServDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 99), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staConfLl2mServDel.setStatus('current')
staConfLl2mClie = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30))
staConfLl2mClieRxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mClieRxp.setStatus('current')
staConfLl2mClieRxb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mClieRxb.setStatus('current')
staConfLl2mClieRxm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mClieRxm.setStatus('current')
staConfLl2mClieRxu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mClieRxu.setStatus('current')
staConfLl2mClieRxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mClieRxd.setStatus('current')
staConfLl2mClieDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 99), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staConfLl2mClieDel.setStatus('current')
staConfLl2mDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 99), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staConfLl2mDele.setStatus('current')
staConfDeleteva = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staConfDeleteva.setStatus('current')
staConfEventlogTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12), )
if mibBuilder.loadTexts: staConfEventlogTable.setStatus('current')
staConfEventlogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staConfEventlogIdx"))
if mibBuilder.loadTexts: staConfEventlogEntry.setStatus('current')
staConfEventlogIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfEventlogIdx.setStatus('current')
staConfEventlogSyste = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfEventlogSyste.setStatus('current')
staConfEventlogEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29))).clone(namedValues=NamedValues(("fwuplstart", 4), ("uplsucc", 5), ("uplfailto", 6), ("uplfailincl", 7), ("uplfailbaddev", 8), ("login", 9), ("logout", 10), ("cnfuplstart", 11), ("cnfdnlstart", 12), ("cnfdnlsucc", 13), ("errlogin", 29)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfEventlogEvent.setStatus('current')
staConfEventlogAcces = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 254, 255))).clone(namedValues=NamedValues(("outband", 0), ("telnet", 1), ("tftp", 2), ("http", 3), ("snmp", 4), ("https", 5), ("telnet-ssl", 6), ("ssh", 7), ("ll2m", 8), ("ppp", 254), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfEventlogAcces.setStatus('current')
staConfEventlogIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfEventlogIpadd.setStatus('current')
staConfEventlogInfo1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfEventlogInfo1.setStatus('current')
staConfEventlogInfo2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfEventlogInfo2.setStatus('current')
staQueu = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12))
staQueuLanheap = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuLanheap.setStatus('current')
staQueuQueuepa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuQueuepa.setStatus('current')
staQueuWanheap = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuWanheap.setStatus('current')
staQueuWanqueu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuWanqueu.setStatus('current')
staQueuArpquer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuArpquer.setStatus('current')
staQueuArpqueu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuArpqueu.setStatus('current')
staQueuIpqueue = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuIpqueue.setStatus('current')
staQueuIpurgen = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuIpurgen.setStatus('current')
staQueuIcmpque = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuIcmpque.setStatus('current')
staQueuTcpqueu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuTcpqueu.setStatus('current')
staQueuTftpser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuTftpser.setStatus('current')
staQueuSnmpque = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuSnmpque.setStatus('current')
staQueuProthea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuProthea.setStatus('current')
staQueuDhcpser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuDhcpser.setStatus('current')
staQueuDhcpcli = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuDhcpcli.setStatus('current')
staQueuIprripq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuIprripq.setStatus('current')
staQueuDnstxqu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuDnstxqu.setStatus('current')
staQueuDnsrxqu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuDnsrxqu.setStatus('current')
staConnTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13), )
if mibBuilder.loadTexts: staConnTable.setStatus('current')
staConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staConnIfc"))
if mibBuilder.loadTexts: staConnEntry.setStatus('current')
staConnIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConnIfc.setStatus('current')
staConnConn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConnConn.setStatus('current')
staConnActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConnActi.setStatus('current')
staConnPass = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConnPass.setStatus('current')
staConnErro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConnErro.setStatus('current')
staConnCont = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConnCont.setStatus('current')
staConnChar = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConnChar.setStatus('current')
staInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14), )
if mibBuilder.loadTexts: staInfoTable.setStatus('current')
staInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staInfoIfc"))
if mibBuilder.loadTexts: staInfoEntry.setStatus('current')
staInfoIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfoIfc.setStatus('current')
staInfoSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfoSta.setStatus('current')
staInfoMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 9))).clone(namedValues=NamedValues(("unknown", 0), ("active", 4), ("passive", 5), ("callback", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfoMod.setStatus('current')
staInfoDia = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfoDia.setStatus('current')
staInfoPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfoPee.setStatus('current')
staInfoB1d = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfoB1d.setStatus('current')
staInfoB2d = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfoB2d.setStatus('current')
staLayeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15), )
if mibBuilder.loadTexts: staLayeTable.setStatus('current')
staLayeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staLayeIfc"))
if mibBuilder.loadTexts: staLayeEntry.setStatus('current')
staLayeIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayeIfc.setStatus('current')
staLayeWanl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayeWanl.setStatus('current')
staLayeEnca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 255))).clone(namedValues=NamedValues(("ether", 0), ("trans", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayeEnca.setStatus('current')
staLayeLay3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 6, 7, 8, 9, 255))).clone(namedValues=NamedValues(("trans", 0), ("ppp", 4), ("appp", 5), ("scppp", 6), ("scappp", 7), ("sctrans", 8), ("dhcp", 9), ("trans", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayeLay3.setStatus('current')
staLayeLay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 5, 0, 1))).clone(namedValues=NamedValues(("sscop", 6), ("pppoe", 5), ("x-75lapb", 0), ("trans", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayeLay2.setStatus('current')
staLayeL2op = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 0, 1, 2))).clone(namedValues=NamedValues(("none", 255), ("compr", 0), ("bundle", 1), ("bnd-plus-cmpr", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayeL2op.setStatus('current')
staLayeLay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4, 0, 1, 3, 67, 131, 5))).clone(namedValues=NamedValues(("aal-5", 2), ("eth", 4), ("hdlc64k", 0), ("hdlc56k", 1), ("v110-9k6", 3), ("v110-19k2", 67), ("v110-38k4", 131), ("modem", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayeLay1.setStatus('current')
staLayeL1pa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("none", 0), ("v-21-300", 1), ("v-23-600", 2), ("v-23-1200", 3), ("v-22-1200", 4), ("v-22bis-2400", 5), ("v-32qam-4800", 6), ("v-32qam-9600", 7), ("v-32bis-7200", 8), ("v-32tcm-9600", 9), ("v-32bis-12000", 10), ("v-32bis-14400", 11), ("v-34-2400", 12), ("v-34-4800", 13), ("v-34-7200", 14), ("v-34-9600", 15), ("v-34-12000", 16), ("v-34-14400", 17), ("v-34-16800", 18), ("v-34-19200", 19), ("v-34-21600", 20), ("v-34-24000", 21), ("v-34-26400", 22), ("v-34-28800", 23), ("v-34-31200", 24), ("v-34-33600", 25), ("v-90-28000", 26), ("v-90-29333", 27), ("v-90-30667", 28), ("v-90-32000", 29), ("v-90-33333", 30), ("v-90-34667", 31), ("v-90-36000", 32), ("v-90-37333", 33), ("v-90-38667", 34), ("v-90-40000", 35), ("v-90-41333", 36), ("v-90-42667", 37), ("v-90-44000", 38), ("v-90-45333", 39), ("v-90-46667", 40), ("v-90-48000", 41), ("v-90-49333", 42), ("v-90-50667", 43), ("v-90-52000", 44), ("v-90-53333", 45), ("v-90-54667", 46), ("v-90-56000", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayeL1pa.setStatus('current')
staCallTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16), )
if mibBuilder.loadTexts: staCallTable.setStatus('current')
staCallEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCallSys"), (0, "LANCOM-1711-MIB", "staCallCou"))
if mibBuilder.loadTexts: staCallEntry.setStatus('current')
staCallSys = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCallSys.setStatus('current')
staCallIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCallIfc.setStatus('current')
staCallCli = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCallCli.setStatus('current')
staCallDia = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCallDia.setStatus('current')
staCallCap = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 0, 1, 3, 67, 131, 5, 13, 14, 15))).clone(namedValues=NamedValues(("unknown", 255), ("hdlc64k", 0), ("hdlc56k", 1), ("v110-9k6", 3), ("v110-19k2", 67), ("v110-38k4", 131), ("modem", 5), ("a-3-1khz", 13), ("speech", 14), ("fax-g2-3", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCallCap.setStatus('current')
staCallBch = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCallBch.setStatus('current')
staCallCou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCallCou.setStatus('current')
staRemoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17), )
if mibBuilder.loadTexts: staRemoTable.setStatus('current')
staRemoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staRemoConns"), (0, "LANCOM-1711-MIB", "staRemoCount"))
if mibBuilder.loadTexts: staRemoEntry.setStatus('current')
staRemoConns = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemoConns.setStatus('current')
staRemoRemot = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemoRemot.setStatus('current')
staRemoMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 9))).clone(namedValues=NamedValues(("unknown", 0), ("active", 4), ("passive", 5), ("callback", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemoMode.setStatus('current')
staRemoIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemoIfc.setStatus('current')
staRemoConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemoConnt.setStatus('current')
staRemoCharg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemoCharg.setStatus('current')
staRemoCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemoCount.setStatus('current')
staCurr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCurr.setStatus('current')
staTime = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21))
staTimeCur = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeCur.setStatus('current')
staTimeSou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 9, 8, 0))).clone(namedValues=NamedValues(("manual", 1), ("isdn", 2), ("lan", 3), ("ram", 4), ("ntp", 9), ("lanconfig", 8), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeSou.setStatus('current')
staTimeSet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeSet.setStatus('current')
staTimeIsd = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4))
staTimeIsdConne = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeIsdConne.setStatus('current')
staTimeIsdInfor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeIsdInfor.setStatus('current')
staTimeIsdInfoe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeIsdInfoe.setStatus('current')
staTimeIsdUnits = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeIsdUnits.setStatus('current')
staTimeIsdDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeIsdDelet.setStatus('current')
staTimeUtc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeUtc.setStatus('current')
staTimeTim = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244))).clone(namedValues=NamedValues(("e0", 0), ("plus-1", 1), ("plus-2", 2), ("plus-3", 3), ("plus-4", 4), ("plus-5", 5), ("plus-6", 6), ("plus-7", 7), ("plus-8", 8), ("plus-9", 9), ("plus-10", 10), ("plus-11", 11), ("plus-12", 12), ("plus-13", 13), ("plus-14", 14), ("minus-1", 255), ("minus-2", 254), ("minus-3", 253), ("minus-4", 252), ("minus-5", 251), ("minus-6", 250), ("minus-7", 249), ("minus-8", 248), ("minus-9", 247), ("minus-10", 246), ("minus-11", 245), ("minus-12", 244)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeTim.setStatus('current')
staTimeDay = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("europe-eu", 2), ("russia", 3), ("usa", 4), ("user-defined", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeDay.setStatus('current')
staTimeDstTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12), )
if mibBuilder.loadTexts: staTimeDstTable.setStatus('current')
staTimeDstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTimeDstEve"))
if mibBuilder.loadTexts: staTimeDstEntry.setStatus('current')
staTimeDstEve = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("end", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeDstEve.setStatus('current')
staTimeDstInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(252, 253, 254, 255, 1, 2, 3, 4))).clone(namedValues=NamedValues(("e4-last", 252), ("e3-last", 253), ("e2-last", 254), ("last", 255), ("first", 1), ("second", 2), ("third", 3), ("fourth", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstInd.setStatus('current')
staTimeDstDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 0))).clone(namedValues=NamedValues(("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6), ("sunday", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstDay.setStatus('current')
staTimeDstMon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("january", 1), ("february", 2), ("march", 3), ("april", 4), ("may", 5), ("june", 6), ("july", 7), ("august", 8), ("september", 9), ("october", 10), ("november", 11), ("december", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstMon.setStatus('current')
staTimeDstHou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstHou.setStatus('current')
staTimeDstMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstMin.setStatus('current')
staTimeDstTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("utc", 1), ("lst", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstTim.setStatus('current')
staLcr = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22))
staLcrTot = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrTot.setStatus('current')
staLcrFou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrFou.setStatus('current')
staLcrNot = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrNot.setStatus('current')
staLcrMis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrMis.setStatus('current')
staLcrProTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 6), )
if mibBuilder.loadTexts: staLcrProTable.setStatus('current')
staLcrProEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staLcrProPro"))
if mibBuilder.loadTexts: staLcrProEntry.setStatus('current')
staLcrProPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrProPro.setStatus('current')
staLcrProFai = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrProFai.setStatus('current')
staLcrProSuc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrProSuc.setStatus('current')
staLcrDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staLcrDel.setStatus('current')
staChar = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24))
staCharSpareda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharSpareda.setStatus('current')
staCharSpareun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharSpareun.setStatus('current')
staCharRouteru = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharRouteru.setStatus('current')
staCharTotalun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTotalun.setStatus('current')
staCharTablebuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5), )
if mibBuilder.loadTexts: staCharTablebuTable.setStatus('current')
staCharTablebuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCharTablebuIfc"))
if mibBuilder.loadTexts: staCharTablebuEntry.setStatus('current')
staCharTablebuIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 255))).clone(namedValues=NamedValues(("router-isdn-serial", 1), ("lancapi", 2), ("ab-1", 3), ("ab-2", 4), ("ab-3", 5), ("ab-4", 6), ("time-modul", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTablebuIfc.setStatus('current')
staCharTablebuBud = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTablebuBud.setStatus('current')
staCharTablebuSpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTablebuSpa.setStatus('current')
staCharTablebuTot = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTablebuTot.setStatus('current')
staCharSparedi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharSparedi.setStatus('current')
staCharRouteri = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharRouteri.setStatus('current')
staCharSpareds = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharSpareds.setStatus('current')
staCharRouterd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharRouterd.setStatus('current')
staCharTimetabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2), )
if mibBuilder.loadTexts: staCharTimetabTable.setStatus('current')
staCharTimetabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCharTimetabIfc"))
if mibBuilder.loadTexts: staCharTimetabEntry.setStatus('current')
staCharTimetabIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 255))).clone(namedValues=NamedValues(("router-dsl-broadband", 1), ("router-isdn-serial", 2), ("lancapi", 3), ("ab-1", 4), ("ab-2", 5), ("ab-3", 6), ("ab-4", 7), ("time-modul", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTimetabIfc.setStatus('current')
staCharTimetabBudgetmi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTimetabBudgetmi.setStatus('current')
staCharTimetabSparemin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTimetabSparemin.setStatus('current')
staCharTimetabMinutesa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTimetabMinutesa.setStatus('current')
staCharTimetabMinutesp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTimetabMinutesp.setStatus('current')
staCharDeletev = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staCharDeletev.setStatus('current')
staDsl = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25))
staDslIntTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 1), )
if mibBuilder.loadTexts: staDslIntTable.setStatus('current')
staDslIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staDslIntIfc"))
if mibBuilder.loadTexts: staDslIntEntry.setStatus('current')
staDslIntIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslIntIfc.setStatus('current')
staDslIntLin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslIntLin.setStatus('current')
staDslBytTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 2), )
if mibBuilder.loadTexts: staDslBytTable.setStatus('current')
staDslBytEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staDslBytIfc"))
if mibBuilder.loadTexts: staDslBytEntry.setStatus('current')
staDslBytIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslBytIfc.setStatus('current')
staDslBytTxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslBytTxb.setStatus('current')
staDslBytRxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslBytRxb.setStatus('current')
staDslPacTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3), )
if mibBuilder.loadTexts: staDslPacTable.setStatus('current')
staDslPacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staDslPacIfc"))
if mibBuilder.loadTexts: staDslPacEntry.setStatus('current')
staDslPacIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacIfc.setStatus('current')
staDslPacRxp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacRxp.setStatus('current')
staDslPacTxp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacTxp.setStatus('current')
staDslPacRxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacRxb.setStatus('current')
staDslPacRxm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacRxm.setStatus('current')
staDslPacRxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacRxu.setStatus('current')
staDslPacTxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacTxb.setStatus('current')
staDslPacTxm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacTxm.setStatus('current')
staDslPacTxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacTxu.setStatus('current')
staDslErrTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4), )
if mibBuilder.loadTexts: staDslErrTable.setStatus('current')
staDslErrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staDslErrIfc"))
if mibBuilder.loadTexts: staDslErrEntry.setStatus('current')
staDslErrIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrIfc.setStatus('current')
staDslErrRxerro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrRxerro.setStatus('current')
staDslErrTxerro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrTxerro.setStatus('current')
staDslErrStacke = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrStacke.setStatus('current')
staDslErrNicerr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrNicerr.setStatus('current')
staDslErrQueuee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrQueuee.setStatus('current')
staDslErrRxcrce = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrRxcrce.setStatus('current')
staDslErrCollis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrCollis.setStatus('current')
staDslErrSingle = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrSingle.setStatus('current')
staDslErrMultip = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrMultip.setStatus('current')
staDslErrLateco = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrLateco.setStatus('current')
staDslErrExcess = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrExcess.setStatus('current')
staDslErrRxalig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrRxalig.setStatus('current')
staDslErrRxtoos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrRxtoos.setStatus('current')
staDslErrRxtool = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrRxtool.setStatus('current')
staDslErrTxcarr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrTxcarr.setStatus('current')
staDslErrTxdefe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrTxdefe.setStatus('current')
staDslPpp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23))
staDslPppTxpadi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppTxpadi.setStatus('current')
staDslPppRxpado = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppRxpado.setStatus('current')
staDslPppTxpadr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppTxpadr.setStatus('current')
staDslPppRxpads = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppRxpads.setStatus('current')
staDslPppTxpadt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppTxpadt.setStatus('current')
staDslPppRxpadt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppRxpadt.setStatus('current')
staDslPppTxprot = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppTxprot.setStatus('current')
staDslPppRxprot = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppRxprot.setStatus('current')
staDslPppTxdata = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppTxdata.setStatus('current')
staDslPppRxdata = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppRxdata.setStatus('current')
staDslPppRxbad = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppRxbad.setStatus('current')
staDslPppAcname = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppAcname.setStatus('current')
staDslPppServic = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppServic.setStatus('current')
staDslPppDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staDslPppDelete.setStatus('current')
staDslDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staDslDel.setStatus('current')
staVpn = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26))
staVpnPeers = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnPeers.setStatus('current')
staVpnRules = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnRules.setStatus('current')
staVpnTunnel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnTunnel.setStatus('current')
staVpnIkesas = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkesas.setStatus('current')
staVpnEspsas = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspsas.setStatus('current')
staVpnAhsas = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhsas.setStatus('current')
staVpnIpcomps = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcomps.setStatus('current')
staVpnIkeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8), )
if mibBuilder.loadTexts: staVpnIkeTable.setStatus('current')
staVpnIkeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staVpnIkeIdx"))
if mibBuilder.loadTexts: staVpnIkeEntry.setStatus('current')
staVpnIkeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeIdx.setStatus('current')
staVpnIkePeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkePeer.setStatus('current')
staVpnIkeDesta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeDesta.setStatus('current')
staVpnIkeDstpo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeDstpo.setStatus('current')
staVpnIkeSrcad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeSrcad.setStatus('current')
staVpnIkeSrcpo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeSrcpo.setStatus('current')
staVpnIkeCrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeCrypt.setStatus('current')
staVpnIkeHasha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeHasha.setStatus('current')
staVpnIkeIkeau = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 65001, 65002, 65003, 65004, 65005, 65006))).clone(namedValues=NamedValues(("no", 0), ("pre-shared", 1), ("dss", 2), ("rsa-sig", 3), ("rsa-enc", 4), ("rsa-enc-rev", 5), ("el-gamal-enc", 6), ("el-gamal-enc-rev", 7), ("ecdsa-sig", 8), ("pre-shared-init-xauth", 65001), ("pre-shared-resp-xauth", 65002), ("dss-init-xauth", 65003), ("dss-resp-xauth", 65004), ("rsa-init-xauth", 65005), ("rsa-resp-xauth", 65006)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeIkeau.setStatus('current')
staVpnIkeIniti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeIniti.setStatus('current')
staVpnIkeAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeAge.setStatus('current')
staVpnIkeSofts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeSofts.setStatus('current')
staVpnIkeMaxse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeMaxse.setStatus('current')
staVpnIkeKbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeKbyte.setStatus('current')
staVpnIkeSoftk = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeSoftk.setStatus('current')
staVpnIkeMaxkb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeMaxkb.setStatus('current')
staVpnEspTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9), )
if mibBuilder.loadTexts: staVpnEspTable.setStatus('current')
staVpnEspEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staVpnEspIdx"))
if mibBuilder.loadTexts: staVpnEspEntry.setStatus('current')
staVpnEspIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspIdx.setStatus('current')
staVpnEspPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspPeer.setStatus('current')
staVpnEspDesta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspDesta.setStatus('current')
staVpnEspSrcad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspSrcad.setStatus('current')
staVpnEspMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspMode.setStatus('current')
staVpnEspCrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspCrypt.setStatus('current')
staVpnEspHasha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspHasha.setStatus('current')
staVpnEspSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspSpi.setStatus('current')
staVpnEspAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspAge.setStatus('current')
staVpnEspSofts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspSofts.setStatus('current')
staVpnEspMaxse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspMaxse.setStatus('current')
staVpnEspKbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspKbyte.setStatus('current')
staVpnEspSoftk = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspSoftk.setStatus('current')
staVpnEspMaxkb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspMaxkb.setStatus('current')
staVpnAhTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10), )
if mibBuilder.loadTexts: staVpnAhTable.setStatus('current')
staVpnAhEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staVpnAhIdx"))
if mibBuilder.loadTexts: staVpnAhEntry.setStatus('current')
staVpnAhIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhIdx.setStatus('current')
staVpnAhPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhPeer.setStatus('current')
staVpnAhDesta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhDesta.setStatus('current')
staVpnAhSrcad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhSrcad.setStatus('current')
staVpnAhMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhMode.setStatus('current')
staVpnAhCrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhCrypt.setStatus('current')
staVpnAhHasha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhHasha.setStatus('current')
staVpnAhSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhSpi.setStatus('current')
staVpnAhAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhAge.setStatus('current')
staVpnAhSofts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhSofts.setStatus('current')
staVpnAhMaxse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhMaxse.setStatus('current')
staVpnAhKbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhKbyte.setStatus('current')
staVpnAhSoftk = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhSoftk.setStatus('current')
staVpnAhMaxkb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhMaxkb.setStatus('current')
staVpnIpcompTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14), )
if mibBuilder.loadTexts: staVpnIpcompTable.setStatus('current')
staVpnIpcompEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staVpnIpcompIdx"))
if mibBuilder.loadTexts: staVpnIpcompEntry.setStatus('current')
staVpnIpcompIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompIdx.setStatus('current')
staVpnIpcompPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompPeer.setStatus('current')
staVpnIpcompDesta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompDesta.setStatus('current')
staVpnIpcompSrcad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompSrcad.setStatus('current')
staVpnIpcompMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompMode.setStatus('current')
staVpnIpcompCrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompCrypt.setStatus('current')
staVpnIpcompHasha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompHasha.setStatus('current')
staVpnIpcompSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompSpi.setStatus('current')
staVpnIpcompAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompAge.setStatus('current')
staVpnIpcompSofts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompSofts.setStatus('current')
staVpnIpcompMaxse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompMaxse.setStatus('current')
staVpnIpcompKbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompKbyte.setStatus('current')
staVpnIpcompSoftk = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompSoftk.setStatus('current')
staVpnIpcompMaxkb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompMaxkb.setStatus('current')
staVpnConnectTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17), )
if mibBuilder.loadTexts: staVpnConnectTable.setStatus('current')
staVpnConnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staVpnConnectPeer"))
if mibBuilder.loadTexts: staVpnConnectEntry.setStatus('current')
staVpnConnectPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectPeer.setStatus('current')
staVpnConnectState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("init", 0), ("setup-wan", 1), ("ready", 2), ("wait-for-cb", 3), ("dial", 4), ("incoming-call", 5), ("protocol", 6), ("connection", 7), ("disconnecting", 8), ("call-back", 9), ("bundle-connect", 10), ("protocol-2", 11), ("reserved", 12), ("bundle", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectState.setStatus('current')
staVpnConnectLaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 275, 4353, 4609, 4354, 4610, 4355, 4611, 4356, 4612, 4357, 4613, 4358, 4614, 4871, 4360, 4361, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4385, 4386, 4387, 4388, 4389, 4390, 4391, 4904, 8705, 8706, 8451, 8707, 8708, 8709, 8710, 8711, 8712, 8713, 8458, 8714, 8715, 8716, 8461, 8717, 8462, 8718, 8463, 8719, 8464, 8720, 8465, 8721, 8466, 8722, 8467, 8723, 8468, 8724, 8469, 8725, 8470, 8726, 8471, 8727, 8472, 8728, 8473, 8729, 8474, 8730, 8475, 8731, 8476, 8732, 8477, 8733, 8478, 8734, 8479, 8735, 8480, 8736, 8481, 8737, 8482, 8738, 8483, 8739, 8484, 8740, 8485, 8741, 8486, 8742, 8487, 8743, 8488, 8744, 8489, 8745, 8490, 8746, 8491, 8747, 8492, 8748, 8493, 8749, 8494, 8750, 8495, 8751, 8496, 8752, 8497, 8753, 8498, 8754, 8499, 8755, 8500, 8756, 8501, 8757, 8502, 8758, 8503, 8759, 8504, 8760, 8505, 8761, 8506, 8762, 8507, 8763, 8508, 8764, 8509, 8765, 8703, 8959, 8702, 8958, 12801, 12546, 12802, 12803, 17153, 17154, 17155, 17156, 17157, 17158, 17159, 17160))).clone(namedValues=NamedValues(("none", 0), ("icmp-conn-error", 275), ("ifc-i-license-exceeded", 4353), ("ifc-r-license-exceeded", 4609), ("ifc-i-no-channel-available", 4354), ("ifc-r-no-channel-available", 4610), ("ifc-i-no-route-to-remote-gateway", 4355), ("ifc-r-no-route-to-remote-gateway", 4611), ("ifc-i-no-ppp-table-entry-matched", 4356), ("ifc-r-no-ppp-table-entry-matched", 4612), ("ifc-i-connection-timeout-dynamic", 4357), ("ifc-r-connection-timeout-dynamic", 4613), ("ifc-i-connection-timeout-ike-ipsec", 4358), ("ifc-r-connection-timeout-ike-ipsec", 4614), ("ifc-x-line-polling-failed", 4871), ("ifc-i-no-poll-table-entry-matched", 4360), ("ifc-i-name-resolution-failed", 4361), ("ifc-i-negotiator-charge-locked", 4369), ("ifc-i-negotiator-time-locked", 4370), ("ifc-i-negotiator-no-dial-number", 4371), ("ifc-i-negotiator-no-remote", 4372), ("ifc-i-negotiator-remote-blocked", 4373), ("ifc-i-negotiator-no-multiconnect", 4374), ("ifc-i-negotiator-line-error", 4375), ("ifc-i-physical-charge-locked", 4385), ("ifc-i-physical-time-locked", 4386), ("ifc-i-physical-no-dial-number", 4387), ("ifc-i-physical-no-remote", 4388), ("ifc-i-physical-no-server-address", 4389), ("ifc-i-physical-remote-locked", 4390), ("ifc-i-physical-no-multiconnect", 4391), ("ifc-x-physical-line-error", 4904), ("ike-r-license-exceeded", 8705), ("ike-r-exchange-type-mismatch", 8706), ("ike-i-no-proposal-matched", 8451), ("ike-r-no-proposal-matched", 8707), ("ike-r-ike-group-mismatch", 8708), ("ike-r-life-type-unsupported", 8709), ("ike-r-life-duration-mismatch", 8710), ("ike-r-id-type-unsupported", 8711), ("ike-r-id-type-mismatch", 8712), ("ike-r-no-rule-matched-id", 8713), ("ike-i-ike-key-mismatch", 8458), ("ike-r-ike-key-mismatch", 8714), ("ike-r-license-demosn-exceeded", 8715), ("ike-r-license-sn-exceeded", 8716), ("ike-i-dpd-timeout", 8461), ("ike-r-dpd-timeout", 8717), ("ike-i-unable-to-get-issuer-cert", 8462), ("ike-r-unable-to-get-issuer-cert", 8718), ("ike-i-unable-to-get-crl", 8463), ("ike-r-unable-to-get-crl", 8719), ("ike-i-unable-to-decrypt-cert-signature", 8464), ("ike-r-unable-to-decrypt-cert-signature", 8720), ("ike-i-unable-to-decrypt-crl-signature", 8465), ("ike-r-unable-to-decrypt-crl-signature", 8721), ("ike-i-unable-to-decode-issuer-public-key", 8466), ("ike-r-unable-to-decode-issuer-public-key", 8722), ("ike-i-cert-signature-failure", 8467), ("ike-r-cert-signature-failure", 8723), ("ike-i-crl-signature-failure", 8468), ("ike-r-crl-signature-failure", 8724), ("ike-i-cert-not-yet-valid", 8469), ("ike-r-cert-not-yet-valid", 8725), ("ike-i-cert-has-expired", 8470), ("ike-r-cert-has-expired", 8726), ("ike-i-crl-not-yet-valid", 8471), ("ike-r-crl-not-yet-valid", 8727), ("ike-i-crl-has-expired", 8472), ("ike-r-crl-has-expired", 8728), ("ike-i-error-in-cert-not-before-field", 8473), ("ike-r-error-in-cert-not-before-field", 8729), ("ike-i-error-in-cert-not-after-field", 8474), ("ike-r-error-in-cert-not-after-field", 8730), ("ike-i-error-in-crl-last-update-field", 8475), ("ike-r-error-in-crl-last-update-field", 8731), ("ike-i-error-in-crl-next-update-field", 8476), ("ike-r-error-in-crl-next-update-field", 8732), ("ike-i-out-of-mem", 8477), ("ike-r-out-of-mem", 8733), ("ike-i-depth-zero-self-signed-cert", 8478), ("ike-r-depth-zero-self-signed-cert", 8734), ("ike-i-self-signed-cert-in-chain", 8479), ("ike-r-self-signed-cert-in-chain", 8735), ("ike-i-unable-to-get-issuer-cert-locally", 8480), ("ike-r-unable-to-get-issuer-cert-locally", 8736), ("ike-i-unable-to-verify-leaf-signature", 8481), ("ike-r-unable-to-verify-leaf-signature", 8737), ("ike-i-cert-chain-too-long", 8482), ("ike-r-cert-chain-too-long", 8738), ("ike-i-cert-revoked", 8483), ("ike-r-cert-revoked", 8739), ("ike-i-invalid-ca", 8484), ("ike-r-invalid-ca", 8740), ("ike-i-path-length-exceeded", 8485), ("ike-r-path-length-exceeded", 8741), ("ike-i-invalid-purpose", 8486), ("ike-r-invalid-purpose", 8742), ("ike-i-cert-untrusted", 8487), ("ike-r-cert-untrusted", 8743), ("ike-i-cert-rejected", 8488), ("ike-r-cert-rejected", 8744), ("ike-i-subject-issuer-mismatch", 8489), ("ike-r-subject-issuer-mismatch", 8745), ("ike-i-akid-skid-mismatch", 8490), ("ike-r-akid-skid-mismatch", 8746), ("ike-i-akid-issuer-serial-mismatch", 8491), ("ike-r-akid-issuer-serial-mismatch", 8747), ("ike-i-keyusage-no-certsign", 8492), ("ike-r-keyusage-no-certsign", 8748), ("ike-i-unable-to-get-crl-issuer", 8493), ("ike-r-unable-to-get-crl-issuer", 8749), ("ike-i-unhandled-critical-extension", 8494), ("ike-r-unhandled-critical-extension", 8750), ("ike-i-keyusage-no-crl-sign", 8495), ("ike-r-keyusage-no-crl-sign", 8751), ("ike-i-unhandled-critical-crl-extension", 8496), ("ike-r-unhandled-critical-crl-extension", 8752), ("ike-i-crl-has-exceeded-exceedance", 8497), ("ike-r-crl-has-exceeded-exceedance", 8753), ("ike-i-application-verification", 8498), ("ike-r-application-verification", 8754), ("ike-i-cert-revoked-unspecified", 8499), ("ike-r-cert-revoked-unspecified", 8755), ("ike-i-cert-revoked-key-compromise", 8500), ("ike-r-cert-revoked-key-compromise", 8756), ("ike-i-cert-revoked-ca-compromise", 8501), ("ike-r-cert-revoked-ca-compromise", 8757), ("ike-i-cert-revoked-affiliation-changed", 8502), ("ike-r-cert-revoked-affiliation-changed", 8758), ("ike-i-cert-revoked-superseded", 8503), ("ike-r-cert-revoked-superseded", 8759), ("ike-i-cert-revoked-cessation-of-operation", 8504), ("ike-r-cert-revoked-cessation-of-operation", 8760), ("ike-i-cert-revoked-certificate-hold", 8505), ("ike-r-cert-revoked-certificate-hold", 8761), ("ike-i-cert-revoked-remove-from-crl", 8506), ("ike-r-cert-revoked-remove-from-crl", 8762), ("ike-i-cert-revoked-privilege-withdrawn", 8507), ("ike-r-cert-revoked-privilege-withdrawn", 8763), ("ike-i-cert-revoked-a-a-compromise", 8508), ("ike-r-cert-revoked-a-a-compromise", 8764), ("ike-i-cert-revoked-unknown-reason", 8509), ("ike-r-cert-revoked-unknown-reason", 8765), ("ike-i-general-failure", 8703), ("ike-r-general-failure", 8959), ("ike-i-out-of-memory", 8702), ("ike-r-out-of-memory", 8958), ("ipsec-r-no-rule-matched-ids", 12801), ("ipsec-i-no-proposal-matched", 12546), ("ipsec-r-no-proposal-matched", 12802), ("ipsec-r-pfs-group-mismatch", 12803), ("remote-disconnected", 17153), ("manual-disconnect", 17154), ("shorthold-expired", 17155), ("physical-disconnected", 17156), ("invalid-physical-channel", 17157), ("dynamic-vpn-reconnect", 17158), ("configuration-changed", 17159), ("removed-from-config", 17160)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staVpnConnectLaster.setStatus('current')
staVpnConnectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(128, 0))).clone(namedValues=NamedValues(("active", 128), ("passive", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectMode.setStatus('current')
staVpnConnectShtime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectShtime.setStatus('current')
staVpnConnectPhysco = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectPhysco.setStatus('current')
staVpnConnectB1dt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectB1dt.setStatus('current')
staVpnConnectRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectRemote.setStatus('current')
staVpnConnectNatdet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("no-nat", 0), ("nat-local", 1), ("nat-remote", 2), ("nat-both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectNatdet.setStatus('current')
staVpnConnectCrypta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectCrypta.setStatus('current')
staVpnConnectCryptl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectCryptl.setStatus('current')
staVpnConnectHashal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectHashal.setStatus('current')
staVpnConnectHashle = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectHashle.setStatus('current')
staVpnConnectHmacal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectHmacal.setStatus('current')
staVpnConnectHmacle = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectHmacle.setStatus('current')
staVpnConnectCompra = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectCompra.setStatus('current')
staVpnConnectClient = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0))).clone(namedValues=NamedValues(("not-available", -1), ("demo-version", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectClient.setStatus('current')
staVpnConnectConnti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectConnti.setStatus('current')
staVpnDeletev = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staVpnDeletev.setStatus('current')
staPptp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27))
staPptpRxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpRxp.setStatus('current')
staPptpTxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpTxp.setStatus('current')
staPptpEch = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpEch.setStatus('current')
staPptpAck = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpAck.setStatus('current')
staPptpDro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpDro.setStatus('current')
staPptpRxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpRxe.setStatus('current')
staPptpTcp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpTcp.setStatus('current')
staPptpCal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpCal.setStatus('current')
staPptpConTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9), )
if mibBuilder.loadTexts: staPptpConTable.setStatus('current')
staPptpConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staPptpConChann"))
if mibBuilder.loadTexts: staPptpConEntry.setStatus('current')
staPptpConChann = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConChann.setStatus('current')
staPptpConState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("init", 0), ("setup-wan", 1), ("ready", 2), ("wait-for-cb", 3), ("dial", 4), ("incoming-call", 5), ("protocol", 6), ("connection", 7), ("disconnecting", 8), ("call-back", 9), ("bundle-connect", 10), ("protocol-2", 11), ("reserved", 12), ("bundle", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConState.setStatus('current')
staPptpConLaste = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 17153, 17154, 17155, 17156, 17157, 17158, 17159, 17160, 267, 275, 277, 278, 279, 280, 513, 514, 515, 516, 517, 518, 32768, 32769, 32770, 32771, 32784, 32785, 32786, 32787, 32788, 32789, 32800, 32801, 32802, 32803, 32804, 32805, 32816, 32817, 32818, 32819, 32832, 32848, 33008))).clone(namedValues=NamedValues(("none", 0), ("remote-disconnected", 17153), ("manual-disconnect", 17154), ("shorthold-expired", 17155), ("physical-disconnected", 17156), ("invalid-physical-channel", 17157), ("dynamic-vpn-reconnect", 17158), ("configuration-changed", 17159), ("removed-from-config", 17160), ("remote-doubled", 267), ("icmp-conn-error", 275), ("dhcp-timeout", 277), ("pptp-no-response", 278), ("vpn-no-response", 279), ("arp-no-response", 280), ("pptp-no-channel", 513), ("pptp-bad-format", 514), ("pptp-bad-value", 515), ("pptp-no-ressource", 516), ("pptp-bad-call-id", 517), ("pptp-gen-error", 518), ("lcp-rejected", 32768), ("auth-error", 32769), ("auth-rejected", 32770), ("lcp-conn-error", 32771), ("pap-rejected", 32784), ("pap-rx-timeout", 32785), ("pap-tx-timeout", 32786), ("wrong-pap-req", 32787), ("pap-nak-received", 32788), ("unkn-pap-peer", 32789), ("chap-rejected", 32800), ("chap-rx-timeout", 32801), ("chap-tx-timeout", 32802), ("wrong-chap-resp", 32803), ("chap-fail-recvd", 32804), ("unkn-chap-peer", 32805), ("ipxcp-rejected", 32816), ("wrong-ipxcp-net", 32817), ("ipxcp-net-reject", 32818), ("ipxcp-route-unkn", 32819), ("ipcp-rejected", 32832), ("ccp-rejected", 32848), ("no-ncp-available", 33008)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPptpConLaste.setStatus('current')
staPptpConMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(128, 0))).clone(namedValues=NamedValues(("active", 128), ("passive", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConMode.setStatus('current')
staPptpConShtim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConShtim.setStatus('current')
staPptpConPhysc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConPhysc.setStatus('current')
staPptpConPeera = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConPeera.setStatus('current')
staPptpConIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConIpadd.setStatus('current')
staPptpConDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConDnsde.setStatus('current')
staPptpConDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConDnsba.setStatus('current')
staPptpConNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConNbnsd.setStatus('current')
staPptpConNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConNbnsb.setStatus('current')
staPptpConConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConConnt.setStatus('current')
staPptpConGatew = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConGatew.setStatus('current')
staPptpTun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpTun.setStatus('current')
staPptpDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPptpDel.setStatus('current')
staPptpFlo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpFlo.setStatus('current')
staDhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32))
staDhcpWanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20), )
if mibBuilder.loadTexts: staDhcpWanTable.setStatus('current')
staDhcpWanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staDhcpWanIfc"))
if mibBuilder.loadTexts: staDhcpWanEntry.setStatus('current')
staDhcpWanIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanIfc.setStatus('current')
staDhcpWanIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanIpadd.setStatus('current')
staDhcpWanIpnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanIpnet.setStatus('current')
staDhcpWanGatew = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanGatew.setStatus('current')
staDhcpWanDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanDnsde.setStatus('current')
staDhcpWanDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanDnsba.setStatus('current')
staDhcpWanNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanNbnsd.setStatus('current')
staDhcpWanNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanNbnsb.setStatus('current')
staDhcpWanDomai = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanDomai.setStatus('current')
staDhcpWanDhcps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanDhcps.setStatus('current')
staDhcpLanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21), )
if mibBuilder.loadTexts: staDhcpLanTable.setStatus('current')
staDhcpLanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staDhcpLanIfc"))
if mibBuilder.loadTexts: staDhcpLanEntry.setStatus('current')
staDhcpLanIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanIfc.setStatus('current')
staDhcpLanIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanIpadd.setStatus('current')
staDhcpLanIpnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanIpnet.setStatus('current')
staDhcpLanGatew = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanGatew.setStatus('current')
staDhcpLanDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanDnsde.setStatus('current')
staDhcpLanDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanDnsba.setStatus('current')
staDhcpLanNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanNbnsd.setStatus('current')
staDhcpLanNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanNbnsb.setStatus('current')
staDhcpLanDomai = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanDomai.setStatus('current')
staDhcpLanDhcps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanDhcps.setStatus('current')
staIsdn = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33))
staIsdnLin = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 1))
staIsdnLinS0Table = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 1, 1), )
if mibBuilder.loadTexts: staIsdnLinS0Table.setStatus('current')
staIsdnLinS0Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 1, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIsdnLinS0Ifc"))
if mibBuilder.loadTexts: staIsdnLinS0Entry.setStatus('current')
staIsdnLinS0Ifc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnLinS0Ifc.setStatus('current')
staIsdnLinS0Ope = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnLinS0Ope.setStatus('current')
staIsdnFra = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2))
staIsdnFraS0Table = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1), )
if mibBuilder.loadTexts: staIsdnFraS0Table.setStatus('current')
staIsdnFraS0Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIsdnFraS0Ifc"))
if mibBuilder.loadTexts: staIsdnFraS0Entry.setStatus('current')
staIsdnFraS0Ifc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnFraS0Ifc.setStatus('current')
staIsdnFraS0Sta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnFraS0Sta.setStatus('current')
staIsdnFraS0B1f = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1, 1, 3), Bits().clone(namedValues=NamedValues(("loop", 7), ("rx-data", 6), ("tx-data", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnFraS0B1f.setStatus('current')
staIsdnFraS0B2f = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1, 1, 4), Bits().clone(namedValues=NamedValues(("loop", 7), ("rx-data", 6), ("tx-data", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnFraS0B2f.setStatus('current')
staIsdnSig = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3))
staIsdnSigLay = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1))
staIsdnSigLayLapTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1), )
if mibBuilder.loadTexts: staIsdnSigLayLapTable.setStatus('current')
staIsdnSigLayLapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIsdnSigLayLapCha"))
if mibBuilder.loadTexts: staIsdnSigLayLapEntry.setStatus('current')
staIsdnSigLayLapCha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("e1-1", 1), ("e1-2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigLayLapCha.setStatus('current')
staIsdnSigLayLapTei = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(128))).clone(namedValues=NamedValues(("none", 128)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigLayLapTei.setStatus('current')
staIsdnSigLayLapL2a = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigLayLapL2a.setStatus('current')
staIsdnSigLayLapCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigLayLapCon.setStatus('current')
staIsdnSigMan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3))
staIsdnSigManDinTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1), )
if mibBuilder.loadTexts: staIsdnSigManDinTable.setStatus('current')
staIsdnSigManDinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIsdnSigManDinCha"))
if mibBuilder.loadTexts: staIsdnSigManDinEntry.setStatus('current')
staIsdnSigManDinCha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManDinCha.setStatus('current')
staIsdnSigManDinPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 255))).clone(namedValues=NamedValues(("no", 0), ("dss1", 1), ("e1tr6", 2), ("p2p-dss1", 4), ("auto", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManDinPro.setStatus('current')
staIsdnSigManDinLay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManDinLay.setStatus('current')
staIsdnSigManDinTei = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManDinTei.setStatus('current')
staIsdnSigManDinS0a = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManDinS0a.setStatus('current')
staIsdnSigManErrTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2), )
if mibBuilder.loadTexts: staIsdnSigManErrTable.setStatus('current')
staIsdnSigManErrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIsdnSigManErrIfc"))
if mibBuilder.loadTexts: staIsdnSigManErrEntry.setStatus('current')
staIsdnSigManErrIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrIfc.setStatus('current')
staIsdnSigManErrA = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrA.setStatus('current')
staIsdnSigManErrB = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrB.setStatus('current')
staIsdnSigManErrC = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrC.setStatus('current')
staIsdnSigManErrD = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrD.setStatus('current')
staIsdnSigManErrE = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrE.setStatus('current')
staIsdnSigManErrF = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrF.setStatus('current')
staIsdnSigManErrG = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrG.setStatus('current')
staIsdnSigManErrH = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrH.setStatus('current')
staIsdnSigManErrI = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrI.setStatus('current')
staIsdnSigManErrJ = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrJ.setStatus('current')
staIsdnSigManErrK = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrK.setStatus('current')
staIsdnSigManErrL = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrL.setStatus('current')
staIsdnSigManErrM = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrM.setStatus('current')
staIsdnSigManErrN = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrN.setStatus('current')
staIsdnSigManErrO = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrO.setStatus('current')
staIsdnDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 99), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staIsdnDel.setStatus('current')
staSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35))
staSnmpEveTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35, 1), )
if mibBuilder.loadTexts: staSnmpEveTable.setStatus('current')
staSnmpEveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staSnmpEveTra"), (0, "LANCOM-1711-MIB", "staSnmpEveVen"))
if mibBuilder.loadTexts: staSnmpEveEntry.setStatus('current')
staSnmpEveTra = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("coldstart", 255), ("warmstart", 1), ("linkdown", 2), ("linkup", 3), ("authfail", 4), ("epgnloss", 5), ("enterprise", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staSnmpEveTra.setStatus('current')
staSnmpEveVen = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29, 28, 39, 27, 2000, 2001, 26, 38, 41, 5002, 5003, 5004, 1))).clone(namedValues=NamedValues(("fwuplstart", 4), ("uplsucc", 5), ("uplfailto", 6), ("uplfailincl", 7), ("uplfailbaddev", 8), ("login", 9), ("logout", 10), ("cnfuplstart", 11), ("cnfdnlstart", 12), ("cnfdnlsucc", 13), ("errlogin", 29), ("pptpconn", 28), ("pppoesconn", 39), ("vpnconn", 27), ("http-tunnel-open", 2000), ("http-tunnel-close", 2001), ("ipfwflt", 26), ("ldblconn", 38), ("vrrp", 41), ("lan-overtemp-throttle", 5002), ("lan-overtemp-throttle-end", 5003), ("lan-overtemp-throttle-recommend", 5004), ("statchan", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staSnmpEveVen.setStatus('current')
staSnmpEveCou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staSnmpEveCou.setStatus('current')
staMail = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43))
staMailBuf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staMailBuf.setStatus('current')
staMailSen = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staMailSen.setStatus('current')
staMailDis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staMailDis.setStatus('current')
staMailCle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staMailCle.setStatus('current')
staMailDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staMailDel.setStatus('current')
staHard = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47))
staHardMode = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardMode.setStatus('current')
staHardSeri = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardSeri.setStatus('current')
staHardBoar = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardBoar.setStatus('current')
staHardCput = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardCput.setStatus('current')
staHardCpuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardCpuc.setStatus('current')
staHardCpul = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardCpul.setStatus('current')
staHardTota = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardTota.setStatus('current')
staHardFree = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardFree.setStatus('current')
staHardVpnh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardVpnh.setStatus('current')
staHardSwve = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardSwve.setStatus('current')
staHardEthe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardEthe.setStatus('current')
staChanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48), )
if mibBuilder.loadTexts: staChanTable.setStatus('current')
staChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staChanChan"))
if mibBuilder.loadTexts: staChanEntry.setStatus('current')
staChanChan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("dsl-err", 1), ("dsl-ch-1", 2), ("dsl-ch-2", 3), ("dsl-ch-3", 4), ("dsl-ch-4", 5), ("dsl-ch-5", 6), ("dsl-ch-6", 7), ("dsl-ch-7", 8), ("dsl-ch-8", 9), ("s0-1-err", 10), ("s0-1-b1", 11), ("s0-1-b2", 12), ("ext-err", 13), ("ext", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanChan.setStatus('current')
staChanPhcha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanPhcha.setStatus('current')
staChanPlci = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanPlci.setStatus('current')
staChanBus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanBus.setStatus('current')
staChanState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanState.setStatus('current')
staChanApp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("none", 0), ("router", 1), ("capi", 2), ("a-b", 3), ("time-module", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanApp.setStatus('current')
staChanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unk", 0), ("act", 1), ("pas", 2), ("perm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanMode.setStatus('current')
staChanCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staChanCause.setStatus('current')
staChanNumbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanNumbe.setStatus('current')
staChanSubad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanSubad.setStatus('current')
staChanCharg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanCharg.setStatus('current')
staChanConns = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanConns.setStatus('current')
staChanConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanConnt.setStatus('current')
staChanExtra = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanExtra.setStatus('current')
staChanIsdnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 34))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanIsdnd.setStatus('current')
staChanPptpc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanPptpc.setStatus('current')
staChanVpnco = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanVpnco.setStatus('current')
staMode = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49))
staModeOperating = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("modem", 1), ("umts-gprs", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeOperating.setStatus('current')
staModeModeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeModeminfo.setStatus('current')
staModeConnectinfo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeConnectinfo.setStatus('current')
staModeState = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("wait-for-device", 15), ("deactivated", 0), ("device-detection", 1), ("reset", 2), ("initializing", 3), ("modem-id", 4), ("ready", 5), ("connecting", 6), ("pass-connecting", 7), ("data-mode", 8), ("network-scan", 9), ("set-pin", 10), ("pin-invalid", 11), ("unexpected-response", 12), ("puk-required", 13), ("network", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeState.setStatus('current')
staModeDatarate = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeDatarate.setStatus('current')
staModeSignaldbm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeSignaldbm.setStatus('current')
staModeRegistration = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("no-network", 0), ("home-network", 1), ("searching", 2), ("denied", 3), ("unknown", 4), ("roaming", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeRegistration.setStatus('current')
staModeNetwork = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeNetwork.setStatus('current')
staModeMode = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("umts", 1), ("gprs", 2), ("gsm", 3), ("edge", 4), ("hsdpa", 5), ("hsupa", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeMode.setStatus('current')
staModePort = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("outband", 1), ("usb", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModePort.setStatus('current')
staModePinstatus = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModePinstatus.setStatus('current')
staModeHardwareresets = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeHardwareresets.setStatus('current')
staModeTemperaturesta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("normal", 1), ("low", 2), ("high", 3), ("low-critical", 5), ("high-critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeTemperaturesta.setStatus('current')
staModeTemperaturedeg = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeTemperaturedeg.setStatus('current')
staModeSupplyvoltages = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("normal", 1), ("low", 2), ("high", 3), ("low-critical", 5), ("high-critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeSupplyvoltages.setStatus('current')
staModeSupplyvoltagem = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeSupplyvoltagem.setStatus('current')
staModeSimidiccid = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 22))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeSimidiccid.setStatus('current')
staModeNetworklistTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9), )
if mibBuilder.loadTexts: staModeNetworklistTable.setStatus('current')
staModeNetworklistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staModeNetworklistNet"))
if mibBuilder.loadTexts: staModeNetworklistEntry.setStatus('current')
staModeNetworklistNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeNetworklistNet.setStatus('current')
staModeNetworklistNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeNetworklistNum.setStatus('current')
staModeNetworklistSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("available", 2), ("current", 3), ("forbidden", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeNetworklistSta.setStatus('current')
staModeNetworklistMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9, 1, 3), Bits().clone(namedValues=NamedValues(("gprs", 31), ("umts", 30)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeNetworklistMod.setStatus('current')
staModeHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16), )
if mibBuilder.loadTexts: staModeHistoryTable.setStatus('current')
staModeHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staModeHistoryInd"))
if mibBuilder.loadTexts: staModeHistoryEntry.setStatus('current')
staModeHistoryInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeHistoryInd.setStatus('current')
staModeHistoryTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeHistoryTim.setStatus('current')
staModeHistorySig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeHistorySig.setStatus('current')
staModeHistoryNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeHistoryNet.setStatus('current')
staModeHistoryMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("umts", 1), ("gprs", 2), ("gsm", 3), ("edge", 4), ("hsdpa", 5), ("hsupa", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeHistoryMod.setStatus('current')
staModeHistoryReg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("no-network", 0), ("home-network", 1), ("searching", 2), ("denied", 3), ("unknown", 4), ("roaming", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeHistoryReg.setStatus('current')
staModeScannetworks = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staModeScannetworks.setStatus('current')
staModeInputpuk = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staModeInputpuk.setStatus('current')
staModeDroppedtxpacke = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeDroppedtxpacke.setStatus('current')
staModeRxtimeouts = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeRxtimeouts.setStatus('current')
staFile = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 50))
staFileConTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 50, 1), )
if mibBuilder.loadTexts: staFileConTable.setStatus('current')
staFileConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 50, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staFileConNam"))
if mibBuilder.loadTexts: staFileConEntry.setStatus('current')
staFileConNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 50, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staFileConNam.setStatus('current')
staFileConSiz = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 50, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staFileConSiz.setStatus('current')
staEthe = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51))
staEthePortsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1), )
if mibBuilder.loadTexts: staEthePortsTable.setStatus('current')
staEthePortsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staEthePortsPor"))
if mibBuilder.loadTexts: staEthePortsEntry.setStatus('current')
staEthePortsPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 0))).clone(namedValues=NamedValues(("wan", 1), ("eth-1", 2), ("eth-2", 3), ("eth-3", 4), ("eth-4", 5), ("unknown", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEthePortsPor.setStatus('current')
staEthePortsAss = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(512, 513, 514, 515, 0, 1, 2, 3, 65533, 65534, 65535))).clone(namedValues=NamedValues(("dsl-1", 512), ("dsl-2", 513), ("dsl-3", 514), ("dsl-4", 515), ("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("idle", 65533), ("monitor", 65534), ("power-down", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEthePortsAss.setStatus('current')
staEthePortsPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEthePortsPri.setStatus('current')
staEthePortsLin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEthePortsLin.setStatus('current')
staEthePortsCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("e10b-t", 1), ("fd10b-tx", 2), ("e100b-tx", 3), ("fd100b-tx", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEthePortsCon.setStatus('current')
staEthePortsAut = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("pending", 0), ("completed", 1), ("disabled", 2), ("not-available", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEthePortsAut.setStatus('current')
staEthePortsFlo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEthePortsFlo.setStatus('current')
staEthePortsMdi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("mdi", 0), ("mdix", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEthePortsMdi.setStatus('current')
staEtheCabletest = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staEtheCabletest.setStatus('current')
staEtheCabletestrTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3), )
if mibBuilder.loadTexts: staEtheCabletestrTable.setStatus('current')
staEtheCabletestrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staEtheCabletestrIfc"))
if mibBuilder.loadTexts: staEtheCabletestrEntry.setStatus('current')
staEtheCabletestrIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 0))).clone(namedValues=NamedValues(("wan", 1), ("eth-1", 2), ("eth-2", 3), ("eth-3", 4), ("eth-4", 5), ("unknown", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEtheCabletestrIfc.setStatus('current')
staEtheCabletestrTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("ok", 1), ("open", 2), ("short", 3), ("impedance-fault", 4), ("fail", 5), ("busy", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEtheCabletestrTxs.setStatus('current')
staEtheCabletestrTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEtheCabletestrTxd.setStatus('current')
staEtheCabletestrRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("ok", 1), ("open", 2), ("short", 3), ("impedance-fault", 4), ("fail", 5), ("busy", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEtheCabletestrRxs.setStatus('current')
staEtheCabletestrRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEtheCabletestrRxd.setStatus('current')
staPppo = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52))
staPppoRxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoRxp.setStatus('current')
staPppoTxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoTxp.setStatus('current')
staPppoDro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoDro.setStatus('current')
staPppoRxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoRxe.setStatus('current')
staPppoSes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoSes.setStatus('current')
staPppoConTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9), )
if mibBuilder.loadTexts: staPppoConTable.setStatus('current')
staPppoConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staPppoConCha"), (0, "LANCOM-1711-MIB", "staPppoConMac"))
if mibBuilder.loadTexts: staPppoConEntry.setStatus('current')
staPppoConCha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoConCha.setStatus('current')
staPppoConMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoConMac.setStatus('current')
staPppoConSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("init", 0), ("setup-wan", 1), ("ready", 2), ("wait-for-cb", 3), ("dial", 4), ("incoming-call", 5), ("protocol", 6), ("connection", 7), ("disconnecting", 8), ("call-back", 9), ("bundle-connect", 10), ("protocol-2", 11), ("reserved", 12), ("bundle", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoConSta.setStatus('current')
staPppoConLas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 17153, 17154, 17155, 17156, 17157, 17158, 17159, 17160, 267, 275, 277, 278, 279, 280, 513, 514, 515, 516, 517, 518, 32768, 32769, 32770, 32771, 32784, 32785, 32786, 32787, 32788, 32789, 32800, 32801, 32802, 32803, 32804, 32805, 32816, 32817, 32818, 32819, 32832, 32848, 33008))).clone(namedValues=NamedValues(("none", 0), ("remote-disconnected", 17153), ("manual-disconnect", 17154), ("shorthold-expired", 17155), ("physical-disconnected", 17156), ("invalid-physical-channel", 17157), ("dynamic-vpn-reconnect", 17158), ("configuration-changed", 17159), ("removed-from-config", 17160), ("remote-doubled", 267), ("icmp-conn-error", 275), ("dhcp-timeout", 277), ("pptp-no-response", 278), ("vpn-no-response", 279), ("arp-no-response", 280), ("pptp-no-channel", 513), ("pptp-bad-format", 514), ("pptp-bad-value", 515), ("pptp-no-ressource", 516), ("pptp-bad-call-id", 517), ("pptp-gen-error", 518), ("lcp-rejected", 32768), ("auth-error", 32769), ("auth-rejected", 32770), ("lcp-conn-error", 32771), ("pap-rejected", 32784), ("pap-rx-timeout", 32785), ("pap-tx-timeout", 32786), ("wrong-pap-req", 32787), ("pap-nak-received", 32788), ("unkn-pap-peer", 32789), ("chap-rejected", 32800), ("chap-rx-timeout", 32801), ("chap-tx-timeout", 32802), ("wrong-chap-resp", 32803), ("chap-fail-recvd", 32804), ("unkn-chap-peer", 32805), ("ipxcp-rejected", 32816), ("wrong-ipxcp-net", 32817), ("ipxcp-net-reject", 32818), ("ipxcp-route-unkn", 32819), ("ipcp-rejected", 32832), ("ccp-rejected", 32848), ("no-ncp-available", 33008)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppoConLas.setStatus('current')
staPppoConSht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoConSht.setStatus('current')
staPppoConPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoConPee.setStatus('current')
staPppoConCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoConCon.setStatus('current')
staPppoNum = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoNum.setStatus('current')
staPppoDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppoDel.setStatus('current')
staUsb = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54))
staUsbDevTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1), )
if mibBuilder.loadTexts: staUsbDevTable.setStatus('current')
staUsbDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staUsbDevBus"), (0, "LANCOM-1711-MIB", "staUsbDevAddress"))
if mibBuilder.loadTexts: staUsbDevEntry.setStatus('current')
staUsbDevBus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevBus.setStatus('current')
staUsbDevAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevAddress.setStatus('current')
staUsbDevVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevVendor.setStatus('current')
staUsbDevVendorid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevVendorid.setStatus('current')
staUsbDevProduct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevProduct.setStatus('current')
staUsbDevProducti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevProducti.setStatus('current')
staUsbDevDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevDepth.setStatus('current')
staUsbDevSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevSpeed.setStatus('current')
staUsbDevInterfac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevInterfac.setStatus('current')
staUsbDevPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevPower.setStatus('current')
staUsbDevDriver = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevDriver.setStatus('current')
staUsbDevParent = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevParent.setStatus('current')
staUsbRei = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staUsbRei.setStatus('current')
staAcco = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56))
staAccoCurTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1), )
if mibBuilder.loadTexts: staAccoCurTable.setStatus('current')
staAccoCurEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staAccoCurUsern"), (0, "LANCOM-1711-MIB", "staAccoCurMacad"), (0, "LANCOM-1711-MIB", "staAccoCurPeer"), (0, "LANCOM-1711-MIB", "staAccoCurConnt"))
if mibBuilder.loadTexts: staAccoCurEntry.setStatus('current')
staAccoCurUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoCurUsern.setStatus('current')
staAccoCurMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoCurMacad.setStatus('current')
staAccoCurPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoCurPeer.setStatus('current')
staAccoCurConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoCurConnt.setStatus('current')
staAccoCurRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoCurRxkby.setStatus('current')
staAccoCurTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoCurTxkby.setStatus('current')
staAccoCurTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoCurTotal.setStatus('current')
staAccoCurConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoCurConne.setStatus('current')
staAccoAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2), )
if mibBuilder.loadTexts: staAccoAccTable.setStatus('current')
staAccoAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staAccoAccUsern"), (0, "LANCOM-1711-MIB", "staAccoAccMacad"), (0, "LANCOM-1711-MIB", "staAccoAccPeer"), (0, "LANCOM-1711-MIB", "staAccoAccConnt"))
if mibBuilder.loadTexts: staAccoAccEntry.setStatus('current')
staAccoAccUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoAccUsern.setStatus('current')
staAccoAccMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoAccMacad.setStatus('current')
staAccoAccPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoAccPeer.setStatus('current')
staAccoAccConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoAccConnt.setStatus('current')
staAccoAccRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoAccRxkby.setStatus('current')
staAccoAccTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoAccTxkby.setStatus('current')
staAccoAccTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoAccTotal.setStatus('current')
staAccoAccConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoAccConne.setStatus('current')
staAccoLasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3), )
if mibBuilder.loadTexts: staAccoLasTable.setStatus('current')
staAccoLasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staAccoLasUsern"), (0, "LANCOM-1711-MIB", "staAccoLasMacad"), (0, "LANCOM-1711-MIB", "staAccoLasPeer"), (0, "LANCOM-1711-MIB", "staAccoLasConnt"))
if mibBuilder.loadTexts: staAccoLasEntry.setStatus('current')
staAccoLasUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoLasUsern.setStatus('current')
staAccoLasMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoLasMacad.setStatus('current')
staAccoLasPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoLasPeer.setStatus('current')
staAccoLasConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoLasConnt.setStatus('current')
staAccoLasRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoLasRxkby.setStatus('current')
staAccoLasTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoLasTxkby.setStatus('current')
staAccoLasTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoLasTotal.setStatus('current')
staAccoLasConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoLasConne.setStatus('current')
staAccoTimTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 5), )
if mibBuilder.loadTexts: staAccoTimTable.setStatus('current')
staAccoTimEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staAccoTimSys"))
if mibBuilder.loadTexts: staAccoTimEntry.setStatus('current')
staAccoTimSys = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoTimSys.setStatus('current')
staAccoDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staAccoDel.setStatus('current')
staCert = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61))
staCertSce = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1))
staCertSceNumca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceNumca.setStatus('current')
staCertSceNumra = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceNumra.setStatus('current')
staCertSceNumce = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceNumce.setStatus('current')
staCertSceCasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4), )
if mibBuilder.loadTexts: staCertSceCasTable.setStatus('current')
staCertSceCasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCertSceCasIdx"))
if mibBuilder.loadTexts: staCertSceCasEntry.setStatus('current')
staCertSceCasIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasIdx.setStatus('current')
staCertSceCasName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasName.setStatus('current')
staCertSceCasExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasExpire.setStatus('current')
staCertSceCasIssued = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasIssued.setStatus('current')
staCertSceCasKeyusa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasKeyusa.setStatus('current')
staCertSceCasIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasIssuer.setStatus('current')
staCertSceCasSubjec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasSubjec.setStatus('current')
staCertSceCasStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("status-unknown", 0), ("enroll-requested", 1), ("enroll-received", 2), ("enroll-ok", 3), ("enroll-bad", 4), ("enroll-bad-config", 5), ("enroll-pending", 6), ("enroll-rejected", 7), ("enroll-rejected-badalg", 8), ("enroll-rejected-badmsgchk", 9), ("enroll-rejected-badreq", 10), ("enroll-rejected-badtime", 11), ("enroll-rejected-badcertid", 12), ("enroll-ca-missing", 13), ("enroll-exp-unknown", 14), ("enroll-key-missing", 15), ("enroll-req-missing", 16), ("enroll-bad-reply", 17), ("ca-ra-requested", 18), ("ca-ra-received", 19), ("ca-ra-ok", 20), ("ca-ra-need-update", 21), ("ca-ra-bad", 22), ("ca-ra-bad-config", 23), ("not-a-ca-cert", 24), ("fingerprint-check-failed", 25), ("job-busy", 26), ("job-timeout", 27), ("job-scep-not-free", 28), ("job-no-url", 29), ("job-no-scep-msg", 30), ("utc-err", 31), ("mem-err", 32), ("msg-len-err", 33), ("selfsigned-err", 34), ("pkcs7-wrap-err", 35), ("pkcs7-unwrap-err", 36), ("gen-err", 37), ("job-httpc-err", 38), ("job-httpc-con-err", 39), ("job-httpc-dns-err", 40), ("job-httpc-prot-err", 41), ("job-httpc-mem-err", 42), ("job-wdog-err", 43), ("ok", 44), ("dn-normalization-failed", 45), ("io-err", 46), ("disabled", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasStatus.setStatus('current')
staCertSceCasIkecer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasIkecer.setStatus('current')
staCertSceCasMd5fin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasMd5fin.setStatus('current')
staCertSceCasSha1fi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 58))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasSha1fi.setStatus('current')
staCertSceCasExpsnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasExpsnm.setStatus('current')
staCertSceCasIsssnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasIsssnm.setStatus('current')
staCertSceRasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5), )
if mibBuilder.loadTexts: staCertSceRasTable.setStatus('current')
staCertSceRasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCertSceRasIdx"))
if mibBuilder.loadTexts: staCertSceRasEntry.setStatus('current')
staCertSceRasIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasIdx.setStatus('current')
staCertSceRasName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasName.setStatus('current')
staCertSceRasExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasExpire.setStatus('current')
staCertSceRasIssued = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasIssued.setStatus('current')
staCertSceRasKeyusa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasKeyusa.setStatus('current')
staCertSceRasIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasIssuer.setStatus('current')
staCertSceRasSubjec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasSubjec.setStatus('current')
staCertSceRasStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("status-unknown", 0), ("enroll-requested", 1), ("enroll-received", 2), ("enroll-ok", 3), ("enroll-bad", 4), ("enroll-bad-config", 5), ("enroll-pending", 6), ("enroll-rejected", 7), ("enroll-rejected-badalg", 8), ("enroll-rejected-badmsgchk", 9), ("enroll-rejected-badreq", 10), ("enroll-rejected-badtime", 11), ("enroll-rejected-badcertid", 12), ("enroll-ca-missing", 13), ("enroll-exp-unknown", 14), ("enroll-key-missing", 15), ("enroll-req-missing", 16), ("enroll-bad-reply", 17), ("ca-ra-requested", 18), ("ca-ra-received", 19), ("ca-ra-ok", 20), ("ca-ra-need-update", 21), ("ca-ra-bad", 22), ("ca-ra-bad-config", 23), ("not-a-ca-cert", 24), ("fingerprint-check-failed", 25), ("job-busy", 26), ("job-timeout", 27), ("job-scep-not-free", 28), ("job-no-url", 29), ("job-no-scep-msg", 30), ("utc-err", 31), ("mem-err", 32), ("msg-len-err", 33), ("selfsigned-err", 34), ("pkcs7-wrap-err", 35), ("pkcs7-unwrap-err", 36), ("gen-err", 37), ("job-httpc-err", 38), ("job-httpc-con-err", 39), ("job-httpc-dns-err", 40), ("job-httpc-prot-err", 41), ("job-httpc-mem-err", 42), ("job-wdog-err", 43), ("ok", 44), ("dn-normalization-failed", 45), ("io-err", 46), ("disabled", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasStatus.setStatus('current')
staCertSceRasExpsnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasExpsnm.setStatus('current')
staCertSceRasIsssnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasIsssnm.setStatus('current')
staCertSceCertsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6), )
if mibBuilder.loadTexts: staCertSceCertsTable.setStatus('current')
staCertSceCertsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCertSceCertsIdx"))
if mibBuilder.loadTexts: staCertSceCertsEntry.setStatus('current')
staCertSceCertsIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsIdx.setStatus('current')
staCertSceCertsName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsName.setStatus('current')
staCertSceCertsExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsExpires.setStatus('current')
staCertSceCertsIssued = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsIssued.setStatus('current')
staCertSceCertsKeyusage = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsKeyusage.setStatus('current')
staCertSceCertsExtended = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsExtended.setStatus('current')
staCertSceCertsSubjecta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsSubjecta.setStatus('current')
staCertSceCertsIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsIssuer.setStatus('current')
staCertSceCertsSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsSubject.setStatus('current')
staCertSceCertsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("status-unknown", 0), ("enroll-requested", 1), ("enroll-received", 2), ("enroll-ok", 3), ("enroll-bad", 4), ("enroll-bad-config", 5), ("enroll-pending", 6), ("enroll-rejected", 7), ("enroll-rejected-badalg", 8), ("enroll-rejected-badmsgchk", 9), ("enroll-rejected-badreq", 10), ("enroll-rejected-badtime", 11), ("enroll-rejected-badcertid", 12), ("enroll-ca-missing", 13), ("enroll-exp-unknown", 14), ("enroll-key-missing", 15), ("enroll-req-missing", 16), ("enroll-bad-reply", 17), ("ca-ra-requested", 18), ("ca-ra-received", 19), ("ca-ra-ok", 20), ("ca-ra-need-update", 21), ("ca-ra-bad", 22), ("ca-ra-bad-config", 23), ("not-a-ca-cert", 24), ("fingerprint-check-failed", 25), ("job-busy", 26), ("job-timeout", 27), ("job-scep-not-free", 28), ("job-no-url", 29), ("job-no-scep-msg", 30), ("utc-err", 31), ("mem-err", 32), ("msg-len-err", 33), ("selfsigned-err", 34), ("pkcs7-wrap-err", 35), ("pkcs7-unwrap-err", 36), ("gen-err", 37), ("job-httpc-err", 38), ("job-httpc-con-err", 39), ("job-httpc-dns-err", 40), ("job-httpc-prot-err", 41), ("job-httpc-mem-err", 42), ("job-wdog-err", 43), ("ok", 44), ("dn-normalization-failed", 45), ("io-err", 46), ("disabled", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsStatus.setStatus('current')
staCertSceCertsExpsnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsExpsnmp.setStatus('current')
staCertSceCertsIsssnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsIsssnmp.setStatus('current')
staCertSceDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staCertSceDelet.setStatus('current')
staCertCrl = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3))
staCertCrlNum = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlNum.setStatus('current')
staCertCrlCrlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2), )
if mibBuilder.loadTexts: staCertCrlCrlTable.setStatus('current')
staCertCrlCrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCertCrlCrlIdx"))
if mibBuilder.loadTexts: staCertCrlCrlEntry.setStatus('current')
staCertCrlCrlIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlCrlIdx.setStatus('current')
staCertCrlCrlExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlCrlExpire.setStatus('current')
staCertCrlCrlIssued = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlCrlIssued.setStatus('current')
staCertCrlCrlIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlCrlIssuer.setStatus('current')
staCertCrlCrlDistri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlCrlDistri.setStatus('current')
staCertCrlCrlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30))).clone(namedValues=NamedValues(("status-unknown", 0), ("update-requested", 1), ("update-received", 2), ("update-ok", 3), ("update-bad", 4), ("crl-job-busy", 5), ("crl-job-timeout", 6), ("crl-not-free-err", 7), ("no-url-passed-err", 8), ("no-crl-received-err", 9), ("no-utc-err", 10), ("crl-job-mem-err", 11), ("crl-len-err", 12), ("crl-gen-err", 13), ("httpc-err", 14), ("httpc-con-err", 15), ("httpc-dns-err", 16), ("httpc-prot-err", 17), ("httpc-mem-err", 18), ("crl-job-wdog-err", 19), ("prefetching", 20), ("retrieving", 21), ("crl-ok", 22), ("not-a-crl", 23), ("no-root-issuer", 24), ("issuer-mismatch", 25), ("no-lu-in-crl", 26), ("crl-not-gmt", 27), ("invalid-field", 28), ("update-expired", 29), ("crls-disabled", 30)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlCrlStatus.setStatus('current')
staCertCrlCrlExpsnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlCrlExpsnm.setStatus('current')
staCertCrlCrlIsssnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlCrlIsssnm.setStatus('current')
staVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62))
staVlanOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanOpe.setStatus('current')
staVlanNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 1), )
if mibBuilder.loadTexts: staVlanNetTable.setStatus('current')
staVlanNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staVlanNetVla"))
if mibBuilder.loadTexts: staVlanNetEntry.setStatus('current')
staVlanNetVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanNetVla.setStatus('current')
staVlanNetPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanNetPor.setStatus('current')
staVlanPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 2), )
if mibBuilder.loadTexts: staVlanPorTable.setStatus('current')
staVlanPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staVlanPorPor"))
if mibBuilder.loadTexts: staVlanPorEntry.setStatus('current')
staVlanPorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanPorPor.setStatus('current')
staVlanPorTag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ingress-mixed", 0), ("never", 1), ("mixed", 2), ("always", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanPorTag.setStatus('current')
staComp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67))
staCompDevTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1), )
if mibBuilder.loadTexts: staCompDevTable.setStatus('current')
staCompDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCompDevIndex"))
if mibBuilder.loadTexts: staCompDevEntry.setStatus('current')
staCompDevIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevIndex.setStatus('current')
staCompDevDevicet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1, 17, 26, 39, 30, 31, 23, 33, 34, 35))).clone(namedValues=NamedValues(("outband-modem", 2), ("outband", 1), ("option-icon", 17), ("novatel-merlin-mc950d", 26), ("sierra-compass-885", 39), ("sierra-aircard-875u", 30), ("huawei-e172-e220-e870", 31), ("e4g-systems-uxs1", 23), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevDevicet.setStatus('current')
staCompDevBus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("outband", 1), ("cardbus", 2), ("usb", 3), ("virtual", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevBus.setStatus('current')
staCompDevDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevDevice.setStatus('current')
staCompDevVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevVendor.setStatus('current')
staCompDevUsbdriv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("ubsa", 1), ("uchcom", 2), ("uftdi", 3), ("ugensa", 4), ("uhmodem", 5), ("ukyopon", 6), ("uplcom", 7), ("uslsa", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevUsbdriv.setStatus('current')
staCompDevState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("initialize", 1), ("wait-for-firmware", 2), ("ready", 3), ("in-use", 4), ("exclusive", 5), ("initialize", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevState.setStatus('current')
staCompDevFirmwar = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevFirmwar.setStatus('current')
staCompDevService = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wan", 1), ("com-port-server", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevService.setStatus('current')
staCompDevFullnam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 99), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevFullnam.setStatus('current')
staCompCom = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2))
staCompComNetworksTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1), )
if mibBuilder.loadTexts: staCompComNetworksTable.setStatus('current')
staCompComNetworksEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCompComNetworksDevicet"), (0, "LANCOM-1711-MIB", "staCompComNetworksPortnum"))
if mibBuilder.loadTexts: staCompComNetworksEntry.setStatus('current')
staCompComNetworksDevicet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComNetworksDevicet.setStatus('current')
staCompComNetworksPortnum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComNetworksPortnum.setStatus('current')
staCompComNetworksFullnam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 99), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComNetworksFullnam.setStatus('current')
staCompComNetworksConnect = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 0), ("listening", 1), ("connecting", 2), ("connected", 3), ("not-listening", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComNetworksConnect.setStatus('current')
staCompComNetworksLasterr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dns-error", 1), ("tcp-connect-error", 2), ("remote-disconnect", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComNetworksLasterr.setStatus('current')
staCompComNetworksRemotea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComNetworksRemotea.setStatus('current')
staCompComNetworksLocalpo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComNetworksLocalpo.setStatus('current')
staCompComNetworksRemotep = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComNetworksRemotep.setStatus('current')
staCompComComportsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2), )
if mibBuilder.loadTexts: staCompComComportsTable.setStatus('current')
staCompComComportsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCompComComportsDev"), (0, "LANCOM-1711-MIB", "staCompComComportsPor"))
if mibBuilder.loadTexts: staCompComComportsEntry.setStatus('current')
staCompComComportsDev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsDev.setStatus('current')
staCompComComportsPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsPor.setStatus('current')
staCompComComportsFul = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 99), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsFul.setStatus('current')
staCompComComportsInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("not-present", 0), ("not-ready", 1), ("ready", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsInt.setStatus('current')
staCompComComportsBit = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(110, 300, 600, 1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200, 125000, 230400))).clone(namedValues=NamedValues(("e110", 110), ("e300", 300), ("e600", 600), ("e1200", 1200), ("e2400", 2400), ("e4800", 4800), ("e9600", 9600), ("e19200", 19200), ("e38400", 38400), ("e57600", 57600), ("e115200", 115200), ("e125000", 125000), ("e230400", 230400)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsBit.setStatus('current')
staCompComComportsDat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 8))).clone(namedValues=NamedValues(("e7", 7), ("e8", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsDat.setStatus('current')
staCompComComportsPar = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsPar.setStatus('current')
staCompComComportsSto = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("e1", 1), ("e2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsSto.setStatus('current')
staCompComComportsHan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("rts-cts", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsHan.setStatus('current')
staCompComBytecounTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3), )
if mibBuilder.loadTexts: staCompComBytecounTable.setStatus('current')
staCompComBytecounEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCompComBytecounDevicety"), (0, "LANCOM-1711-MIB", "staCompComBytecounPortnumb"))
if mibBuilder.loadTexts: staCompComBytecounEntry.setStatus('current')
staCompComBytecounDevicety = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComBytecounDevicety.setStatus('current')
staCompComBytecounPortnumb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComBytecounPortnumb.setStatus('current')
staCompComBytecounFullname = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 99), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComBytecounFullname.setStatus('current')
staCompComBytecounSerialtx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComBytecounSerialtx.setStatus('current')
staCompComBytecounSerialrx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComBytecounSerialrx.setStatus('current')
staCompComBytecounNetworkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComBytecounNetworkt.setStatus('current')
staCompComBytecounNetworkr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComBytecounNetworkr.setStatus('current')
staCompComComporteTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4), )
if mibBuilder.loadTexts: staCompComComporteTable.setStatus('current')
staCompComComporteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCompComComporteDev"), (0, "LANCOM-1711-MIB", "staCompComComportePor"))
if mibBuilder.loadTexts: staCompComComporteEntry.setStatus('current')
staCompComComporteDev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComporteDev.setStatus('current')
staCompComComportePor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportePor.setStatus('current')
staCompComComporteFul = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1, 99), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComporteFul.setStatus('current')
staCompComComportePar = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportePar.setStatus('current')
staCompComComporteFra = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComporteFra.setStatus('current')
staCompComConnectiTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5), )
if mibBuilder.loadTexts: staCompComConnectiTable.setStatus('current')
staCompComConnectiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCompComConnectiDevicet"), (0, "LANCOM-1711-MIB", "staCompComConnectiPortnum"))
if mibBuilder.loadTexts: staCompComConnectiEntry.setStatus('current')
staCompComConnectiDevicet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiDevicet.setStatus('current')
staCompComConnectiPortnum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiPortnum.setStatus('current')
staCompComConnectiFullnam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 99), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiFullnam.setStatus('current')
staCompComConnectiServerg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiServerg.setStatus('current')
staCompComConnectiServerr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiServerr.setStatus('current')
staCompComConnectiClients = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiClients.setStatus('current')
staCompComConnectiClientd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiClientd.setStatus('current')
staCompComConnectiClientt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiClientt.setStatus('current')
staCompComConnectiClientr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiClientr.setStatus('current')
staCompComDeleteva = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 99), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staCompComDeleteva.setStatus('current')
staTaca = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 69))
staTacaAuthe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 69, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTacaAuthe.setStatus('current')
staTacaAutho = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 69, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTacaAutho.setStatus('current')
staTacaDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 69, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTacaDelet.setStatus('current')
staDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 100), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staDele.setStatus('current')
setName = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setName.setStatus('current')
setWan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2))
setWanDialuppTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2), )
if mibBuilder.loadTexts: setWanDialuppTable.setStatus('current')
setWanDialuppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanDialuppPee"))
if mibBuilder.loadTexts: setWanDialuppEntry.setStatus('current')
setWanDialuppPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppPee.setStatus('current')
setWanDialuppDia = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppDia.setStatus('current')
setWanDialuppB1d = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppB1d.setStatus('current')
setWanDialuppB2d = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppB2d.setStatus('current')
setWanDialuppWan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppWan.setStatus('current')
setWanDialuppCal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 5, 9, 2))).clone(namedValues=NamedValues(("no", 0), ("auto", 1), ("name", 5), ("fast", 9), ("looser", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppCal.setStatus('current')
setWanRoundroTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 3), )
if mibBuilder.loadTexts: setWanRoundroTable.setStatus('current')
setWanRoundroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanRoundroPee"))
if mibBuilder.loadTexts: setWanRoundroEntry.setStatus('current')
setWanRoundroPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRoundroPee.setStatus('current')
setWanRoundroRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 53))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRoundroRou.setStatus('current')
setWanRoundroHea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("last", 0), ("first", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRoundroHea.setStatus('current')
setWanLayerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4), )
if mibBuilder.loadTexts: setWanLayerTable.setStatus('current')
setWanLayerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanLayerWanl"))
if mibBuilder.loadTexts: setWanLayerEntry.setStatus('current')
setWanLayerWanl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerWanl.setStatus('current')
setWanLayerEnca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 255))).clone(namedValues=NamedValues(("ether", 0), ("trans", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerEnca.setStatus('current')
setWanLayerLay3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9, 255))).clone(namedValues=NamedValues(("ppp", 4), ("appp", 5), ("scppp", 6), ("scappp", 7), ("sctrans", 8), ("dhcp", 9), ("trans", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerLay3.setStatus('current')
setWanLayerLay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 0, 1))).clone(namedValues=NamedValues(("pppoe", 5), ("x-75lapb", 0), ("trans", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerLay2.setStatus('current')
setWanLayerL2op = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 0, 1, 2))).clone(namedValues=NamedValues(("none", 255), ("compr", 0), ("bundle", 1), ("bnd-plus-cmpr", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerL2op.setStatus('current')
setWanLayerLay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 0, 1, 3, 67, 131, 6))).clone(namedValues=NamedValues(("eth", 4), ("hdlc64k", 0), ("hdlc56k", 1), ("v110-9k6", 3), ("v110-19k2", 67), ("v110-38k4", 131), ("serial", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerLay1.setStatus('current')
setWanPppTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5), )
if mibBuilder.loadTexts: setWanPppTable.setStatus('current')
setWanPppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanPppPeer"))
if mibBuilder.loadTexts: setWanPppEntry.setStatus('current')
setWanPppPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppPeer.setStatus('current')
setWanPppAuthentreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 2), Bits().clone(namedValues=NamedValues(("ms-chapv2", 2), ("ms-chap", 3), ("chap", 4), ("pap", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppAuthentreq.setStatus('current')
setWanPppAuthentres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 11), Bits().clone(namedValues=NamedValues(("ms-chapv2", 2), ("ms-chap", 3), ("chap", 4), ("pap", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppAuthentres.setStatus('current')
setWanPppKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppKey.setStatus('current')
setWanPppTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppTime.setStatus('current')
setWanPppTry = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppTry.setStatus('current')
setWanPppConf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppConf.setStatus('current')
setWanPppFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppFail.setStatus('current')
setWanPppTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppTerm.setStatus('current')
setWanPppUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppUsername.setStatus('current')
setWanPppRights = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("none", 0), ("ip", 1), ("ip-plus-nbt", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppRights.setStatus('current')
setWanDslbroaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19), )
if mibBuilder.loadTexts: setWanDslbroaTable.setStatus('current')
setWanDslbroaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanDslbroaPee"))
if mibBuilder.loadTexts: setWanDslbroaEntry.setStatus('current')
setWanDslbroaPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaPee.setStatus('current')
setWanDslbroaSht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaSht.setStatus('current')
setWanDslbroaAcn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaAcn.setStatus('current')
setWanDslbroaSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaSer.setStatus('current')
setWanDslbroaWan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaWan.setStatus('current')
setWanDslbroaMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("global", 1), ("local", 0), ("user-def", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaMac.setStatus('current')
setWanDslbroaUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 13), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaUse.setStatus('current')
setWanDslbroaDsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaDsl.setStatus('current')
setWanDslbroaVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaVla.setStatus('current')
setWanMtulistTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 26), )
if mibBuilder.loadTexts: setWanMtulistTable.setStatus('current')
setWanMtulistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 26, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanMtulistPee"))
if mibBuilder.loadTexts: setWanMtulistEntry.setStatus('current')
setWanMtulistPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 26, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanMtulistPee.setStatus('current')
setWanMtulistMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 26, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanMtulistMtu.setStatus('current')
setWanIplistTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20), )
if mibBuilder.loadTexts: setWanIplistTable.setStatus('current')
setWanIplistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanIplistPeer"))
if mibBuilder.loadTexts: setWanIplistEntry.setStatus('current')
setWanIplistPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistPeer.setStatus('current')
setWanIplistIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistIpadd.setStatus('current')
setWanIplistIpnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistIpnet.setStatus('current')
setWanIplistMasqi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistMasqi.setStatus('current')
setWanIplistGatew = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistGatew.setStatus('current')
setWanIplistDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistDnsde.setStatus('current')
setWanIplistDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistDnsba.setStatus('current')
setWanIplistNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistNbnsd.setStatus('current')
setWanIplistNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistNbnsb.setStatus('current')
setWanPptppeeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21), )
if mibBuilder.loadTexts: setWanPptppeeTable.setStatus('current')
setWanPptppeeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanPptppeePee"))
if mibBuilder.loadTexts: setWanPptppeeEntry.setStatus('current')
setWanPptppeePee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeePee.setStatus('current')
setWanPptppeeIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeeIpa.setStatus('current')
setWanPptppeeRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeeRtg.setStatus('current')
setWanPptppeePor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeePor.setStatus('current')
setWanPptppeeSht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeeSht.setStatus('current')
setWanRadius = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22))
setWanRadiusOperat = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusOperat.setStatus('current')
setWanRadiusServer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusServer.setStatus('current')
setWanRadiusAuthpo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusAuthpo.setStatus('current')
setWanRadiusLoopba = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusLoopba.setStatus('current')
setWanRadiusProtoc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusProtoc.setStatus('current')
setWanRadiusSecret = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusSecret.setStatus('current')
setWanRadiusPppope = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusPppope.setStatus('current')
setWanRadiusAuthpr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 10), Bits().clone(namedValues=NamedValues(("ms-chapv2", 2), ("ms-chap", 3), ("chap", 4), ("pap", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusAuthpr.setStatus('current')
setWanRadiusClipop = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusClipop.setStatus('current')
setWanRadiusClippa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusClippa.setStatus('current')
setWanPollingTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23), )
if mibBuilder.loadTexts: setWanPollingTable.setStatus('current')
setWanPollingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanPollingPeer"))
if mibBuilder.loadTexts: setWanPollingEntry.setStatus('current')
setWanPollingPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingPeer.setStatus('current')
setWanPollingIpaddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingIpaddress1.setStatus('current')
setWanPollingIpaddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingIpaddress2.setStatus('current')
setWanPollingIpaddress3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingIpaddress3.setStatus('current')
setWanPollingIpaddress4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingIpaddress4.setStatus('current')
setWanPollingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingTime.setStatus('current')
setWanPollingTry = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingTry.setStatus('current')
setWanPollingLoopbackad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingLoopbackad.setStatus('current')
setWanBackuppTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 24), )
if mibBuilder.loadTexts: setWanBackuppTable.setStatus('current')
setWanBackuppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 24, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanBackuppPee"))
if mibBuilder.loadTexts: setWanBackuppEntry.setStatus('current')
setWanBackuppPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 24, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanBackuppPee.setStatus('current')
setWanBackuppAlt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 24, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 53))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanBackuppAlt.setStatus('current')
setWanBackuppHea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 24, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("last", 0), ("first", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanBackuppHea.setStatus('current')
setWanActiontTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25), )
if mibBuilder.loadTexts: setWanActiontTable.setStatus('current')
setWanActiontEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanActiontIndex"))
if mibBuilder.loadTexts: setWanActiontEntry.setStatus('current')
setWanActiontIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontIndex.setStatus('current')
setWanActiontActiv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontActiv.setStatus('current')
setWanActiontHostn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontHostn.setStatus('current')
setWanActiontPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontPeer.setStatus('current')
setWanActiontLockt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontLockt.setStatus('current')
setWanActiontCondi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("establish", 0), ("disconnect", 1), ("end", 2), ("failure", 3), ("establish-failure", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontCondi.setStatus('current')
setWanActiontActio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 250))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontActio.setStatus('current')
setWanActiontCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontCheck.setStatus('current')
setWanActiontOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontOwner.setStatus('current')
setWanBackupd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanBackupd.setStatus('current')
setWanIncominTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 6), )
if mibBuilder.loadTexts: setWanIncominTable.setStatus('current')
setWanIncominEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanIncominDia"))
if mibBuilder.loadTexts: setWanIncominEntry.setStatus('current')
setWanIncominDia = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIncominDia.setStatus('current')
setWanIncominPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIncominPee.setStatus('current')
setWanScriptsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 8), )
if mibBuilder.loadTexts: setWanScriptsTable.setStatus('current')
setWanScriptsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 8, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanScriptsPee"))
if mibBuilder.loadTexts: setWanScriptsEntry.setStatus('current')
setWanScriptsPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanScriptsPee.setStatus('current')
setWanScriptsScr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 58))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanScriptsScr.setStatus('current')
setWanProtect = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 4))).clone(namedValues=NamedValues(("none", 0), ("number", 2), ("screened", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanProtect.setStatus('current')
setWanCallbac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanCallbac.setStatus('current')
setWanManuald = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 13))
setWanManualdCon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 13, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanManualdCon.setStatus('current')
setWanManualdDis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 13, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanManualdDis.setStatus('current')
setWanRouteriTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11), )
if mibBuilder.loadTexts: setWanRouteriTable.setStatus('current')
setWanRouteriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanRouteriIfc"))
if mibBuilder.loadTexts: setWanRouteriEntry.setStatus('current')
setWanRouteriIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setWanRouteriIfc.setStatus('current')
setWanRouteriMsn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRouteriMsn.setStatus('current')
setWanRouteriYc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRouteriYc.setStatus('current')
setWanRouteriCli = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRouteriCli.setStatus('current')
setWanRouteriAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 1, 128))).clone(namedValues=NamedValues(("all", 0), ("analog", 2), ("digital", 1), ("none", 128)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRouteriAcc.setStatus('current')
setWanRouteriTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setWanRouteriTyp.setStatus('current')
setWanDialpre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8)))
if mibBuilder.loadTexts: setWanDialpre.setStatus('current')
setAcco = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18))
setAccoOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoOpe.setStatus('current')
setAccoSav = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoSav.setStatus('current')
setAccoDis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("mac-address", 0), ("ip-address", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoDis.setStatus('current')
setAccoSor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("time", 0), ("data", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoSor.setStatus('current')
setAccoCurTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4), )
if mibBuilder.loadTexts: setAccoCurTable.setStatus('current')
setAccoCurEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setAccoCurUsern"), (0, "LANCOM-1711-MIB", "setAccoCurMacad"), (0, "LANCOM-1711-MIB", "setAccoCurPeer"), (0, "LANCOM-1711-MIB", "setAccoCurConnt"))
if mibBuilder.loadTexts: setAccoCurEntry.setStatus('current')
setAccoCurUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoCurUsern.setStatus('current')
setAccoCurMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoCurMacad.setStatus('current')
setAccoCurPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoCurPeer.setStatus('current')
setAccoCurConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoCurConnt.setStatus('current')
setAccoCurRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoCurRxkby.setStatus('current')
setAccoCurTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoCurTxkby.setStatus('current')
setAccoCurTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoCurTotal.setStatus('current')
setAccoCurConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoCurConne.setStatus('current')
setAccoAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5), )
if mibBuilder.loadTexts: setAccoAccTable.setStatus('current')
setAccoAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setAccoAccUsern"), (0, "LANCOM-1711-MIB", "setAccoAccMacad"), (0, "LANCOM-1711-MIB", "setAccoAccPeer"), (0, "LANCOM-1711-MIB", "setAccoAccConnt"))
if mibBuilder.loadTexts: setAccoAccEntry.setStatus('current')
setAccoAccUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoAccUsern.setStatus('current')
setAccoAccMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoAccMacad.setStatus('current')
setAccoAccPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoAccPeer.setStatus('current')
setAccoAccConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoAccConnt.setStatus('current')
setAccoAccRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoAccRxkby.setStatus('current')
setAccoAccTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoAccTxkby.setStatus('current')
setAccoAccTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoAccTotal.setStatus('current')
setAccoAccConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoAccConne.setStatus('current')
setAccoDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoDel.setStatus('current')
setAccoTimTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8), )
if mibBuilder.loadTexts: setAccoTimTable.setStatus('current')
setAccoTimEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setAccoTimInde"))
if mibBuilder.loadTexts: setAccoTimEntry.setStatus('current')
setAccoTimInde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoTimInde.setStatus('current')
setAccoTimActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoTimActi.setStatus('current')
setAccoTimType = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("monthly", 0), ("weekly", 1), ("daily", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoTimType.setStatus('current')
setAccoTimDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoTimDay.setStatus('current')
setAccoTimDayo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 0), ("sunday", 1), ("monday", 2), ("tuesday", 3), ("wednesday", 4), ("thursday", 5), ("friday", 6), ("saturday", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoTimDayo.setStatus('current')
setAccoTimHour = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoTimHour.setStatus('current')
setAccoTimMinu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoTimMinu.setStatus('current')
setAccoLasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9), )
if mibBuilder.loadTexts: setAccoLasTable.setStatus('current')
setAccoLasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setAccoLasUsern"), (0, "LANCOM-1711-MIB", "setAccoLasMacad"), (0, "LANCOM-1711-MIB", "setAccoLasPeer"), (0, "LANCOM-1711-MIB", "setAccoLasConnt"))
if mibBuilder.loadTexts: setAccoLasEntry.setStatus('current')
setAccoLasUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoLasUsern.setStatus('current')
setAccoLasMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoLasMacad.setStatus('current')
setAccoLasPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoLasPeer.setStatus('current')
setAccoLasConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoLasConnt.setStatus('current')
setAccoLasRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoLasRxkby.setStatus('current')
setAccoLasTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoLasTxkby.setStatus('current')
setAccoLasTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoLasTotal.setStatus('current')
setAccoLasConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoLasConne.setStatus('current')
setChar = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3))
setCharDaysper = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCharDaysper.setStatus('current')
setCharBudgetu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCharBudgetu.setStatus('current')
setCharSpareun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharSpareun.setStatus('current')
setCharRouteru = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharRouteru.setStatus('current')
setCharTotalun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTotalun.setStatus('current')
setCharTablebuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5), )
if mibBuilder.loadTexts: setCharTablebuTable.setStatus('current')
setCharTablebuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCharTablebuIfc"))
if mibBuilder.loadTexts: setCharTablebuEntry.setStatus('current')
setCharTablebuIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 255))).clone(namedValues=NamedValues(("router-isdn-serial", 1), ("lancapi", 2), ("ab-1", 3), ("ab-2", 4), ("ab-3", 5), ("ab-4", 6), ("time-modul", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTablebuIfc.setStatus('current')
setCharTablebuBud = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTablebuBud.setStatus('current')
setCharTablebuSpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTablebuSpa.setStatus('current')
setCharTablebuTot = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTablebuTot.setStatus('current')
setCharDialupm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCharDialupm.setStatus('current')
setCharSparedi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharSparedi.setStatus('current')
setCharRouteri = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharRouteri.setStatus('current')
setCharTimetabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7), )
if mibBuilder.loadTexts: setCharTimetabTable.setStatus('current')
setCharTimetabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCharTimetabIfc"))
if mibBuilder.loadTexts: setCharTimetabEntry.setStatus('current')
setCharTimetabIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 255))).clone(namedValues=NamedValues(("router-dsl-broadband", 1), ("router-isdn-serial", 2), ("lancapi", 3), ("ab-1", 4), ("ab-2", 5), ("ab-3", 6), ("ab-4", 7), ("time-modul", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTimetabIfc.setStatus('current')
setCharTimetabBudgetmi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTimetabBudgetmi.setStatus('current')
setCharTimetabSparemin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTimetabSparemin.setStatus('current')
setCharTimetabMinutesa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTimetabMinutesa.setStatus('current')
setCharTimetabMinutesp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTimetabMinutesp.setStatus('current')
setCharDslbroa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCharDslbroa.setStatus('current')
setCharAdditio = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCharAdditio.setStatus('current')
setCharSpareds = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharSpareds.setStatus('current')
setCharRouterd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharRouterd.setStatus('current')
setCharActivat = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCharActivat.setStatus('current')
setCharResetbu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCharResetbu.setStatus('current')
setLan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 4))
setLanMacadd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 4, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setLanMacadd.setStatus('current')
setLanSpareh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanSpareh.setStatus('current')
setLanTracem = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 4, 8), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanTracem.setStatus('current')
setLanTracel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 4, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanTracel.setStatus('current')
setTcpi = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7))
setTcpiOpera = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiOpera.setStatus('current')
setTcpiNetwoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30), )
if mibBuilder.loadTexts: setTcpiNetwoTable.setStatus('current')
setTcpiNetwoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setTcpiNetwoNet"))
if mibBuilder.loadTexts: setTcpiNetwoEntry.setStatus('current')
setTcpiNetwoNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoNet.setStatus('current')
setTcpiNetwoIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoIpa.setStatus('current')
setTcpiNetwoIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoIpn.setStatus('current')
setTcpiNetwoVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoVla.setStatus('current')
setTcpiNetwoInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(256, 257, 258, 259, 65535))).clone(namedValues=NamedValues(("lan-1", 256), ("lan-2", 257), ("lan-3", 258), ("lan-4", 259), ("any", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoInt.setStatus('current')
setTcpiNetwoSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("strict", 1), ("loose", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoSrc.setStatus('current')
setTcpiNetwoTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("intranet", 1), ("dmz", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoTyp.setStatus('current')
setTcpiNetwoRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoRtg.setStatus('current')
setTcpiNetwoCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoCom.setStatus('current')
setTcpiLoopbTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 17), )
if mibBuilder.loadTexts: setTcpiLoopbTable.setStatus('current')
setTcpiLoopbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 17, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setTcpiLoopbNam"))
if mibBuilder.loadTexts: setTcpiLoopbEntry.setStatus('current')
setTcpiLoopbNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiLoopbNam.setStatus('current')
setTcpiLoopbLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 17, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiLoopbLoo.setStatus('current')
setTcpiLoopbRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 17, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiLoopbRtg.setStatus('current')
setTcpiAccesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 6), )
if mibBuilder.loadTexts: setTcpiAccesTable.setStatus('current')
setTcpiAccesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setTcpiAccesIpa"), (0, "LANCOM-1711-MIB", "setTcpiAccesIpn"), (0, "LANCOM-1711-MIB", "setTcpiAccesRtg"))
if mibBuilder.loadTexts: setTcpiAccesEntry.setStatus('current')
setTcpiAccesIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 6, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAccesIpa.setStatus('current')
setTcpiAccesIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 6, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAccesIpn.setStatus('current')
setTcpiAccesRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAccesRtg.setStatus('current')
setTcpiDnsde = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiDnsde.setStatus('current')
setTcpiDnsba = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiDnsba.setStatus('current')
setTcpiNbnsd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNbnsd.setStatus('current')
setTcpiNbnsb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNbnsb.setStatus('current')
setTcpiArptaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16), )
if mibBuilder.loadTexts: setTcpiArptaTable.setStatus('current')
setTcpiArptaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setTcpiArptaIpa"))
if mibBuilder.loadTexts: setTcpiArptaEntry.setStatus('current')
setTcpiArptaIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpiArptaIpa.setStatus('current')
setTcpiArptaMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpiArptaMac.setStatus('current')
setTcpiArptaLas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpiArptaLas.setStatus('current')
setTcpiArptaCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("wan", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpiArptaCon.setStatus('current')
setTcpiArptaEth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 0))).clone(namedValues=NamedValues(("wan", 1), ("eth-1", 2), ("eth-2", 3), ("eth-3", 4), ("eth-4", 5), ("unknown", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpiArptaEth.setStatus('current')
setTcpiArptaVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpiArptaVla.setStatus('current')
setTcpiArptaPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpiArptaPee.setStatus('current')
setTcpiNonlo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNonlo.setStatus('current')
setTcpiIcmpo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiIcmpo.setStatus('current')
setTcpiArpag = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiArpag.setStatus('current')
setTcpiAlive = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21))
setTcpiAliveTarget = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAliveTarget.setStatus('current')
setTcpiAliveTestin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAliveTestin.setStatus('current')
setTcpiAliveRetryc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAliveRetryc.setStatus('current')
setTcpiAliveRetryi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAliveRetryi.setStatus('current')
setTcpiAliveFailli = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAliveFailli.setStatus('current')
setTcpiAliveBootty = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("warm-boot", 0), ("cold-boot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAliveBootty.setStatus('current')
setIpro = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8))
setIproOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproOpe.setStatus('current')
setIproIprTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2), )
if mibBuilder.loadTexts: setIproIprTable.setStatus('current')
setIproIprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproIprIpa"), (0, "LANCOM-1711-MIB", "setIproIprIpn"), (0, "LANCOM-1711-MIB", "setIproIprRtg"))
if mibBuilder.loadTexts: setIproIprEntry.setStatus('current')
setIproIprIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproIprIpa.setStatus('current')
setIproIprIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproIprIpn.setStatus('current')
setIproIprRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproIprRtg.setStatus('current')
setIproIprPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproIprPee.setStatus('current')
setIproIprDis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproIprDis.setStatus('current')
setIproIprMas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproIprMas.setStatus('current')
setIproIprAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 0), ("semi", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproIprAct.setStatus('current')
setIproIprCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproIprCom.setStatus('current')
setIproDefTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13), )
if mibBuilder.loadTexts: setIproDefTable.setStatus('current')
setIproDefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproDefInd"))
if mibBuilder.loadTexts: setIproDefEntry.setStatus('current')
setIproDefInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproDefInd.setStatus('current')
setIproDefDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1, 2), Bits().clone(namedValues=NamedValues(("monday", 7), ("tuesday", 6), ("wednesday", 5), ("thursday", 4), ("friday", 3), ("saturday", 2), ("sunday", 1), ("holiday", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproDefDay.setStatus('current')
setIproDefSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproDefSta.setStatus('current')
setIproDefSto = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproDefSto.setStatus('current')
setIproDefPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproDefPee.setStatus('current')
setIproUsa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproUsa.setStatus('current')
setIproPro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproPro.setStatus('current')
setIproSen = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproSen.setStatus('current')
setIproSta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproSta.setStatus('current')
setIproEnd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproEnd.setStatus('current')
setIproLoa = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20))
setIproLoaOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproLoaOpe.setStatus('current')
setIproLoaBunTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2), )
if mibBuilder.loadTexts: setIproLoaBunTable.setStatus('current')
setIproLoaBunEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproLoaBunPeer"))
if mibBuilder.loadTexts: setIproLoaBunEntry.setStatus('current')
setIproLoaBunPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproLoaBunPeer.setStatus('current')
setIproLoaBunBundlepeer1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproLoaBunBundlepeer1.setStatus('current')
setIproLoaBunBundlepeer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproLoaBunBundlepeer2.setStatus('current')
setIproLoaBunBundlepeer3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproLoaBunBundlepeer3.setStatus('current')
setIproLoaBunBundlepeer4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproLoaBunBundlepeer4.setStatus('current')
setIproVrr = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21))
setIproVrrOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrOpe.setStatus('current')
setIproVrrVrrTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2), )
if mibBuilder.loadTexts: setIproVrrVrrTable.setStatus('current')
setIproVrrVrrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproVrrVrrRou"))
if mibBuilder.loadTexts: setIproVrrVrrEntry.setStatus('current')
setIproVrrVrrRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrVrrRou.setStatus('current')
setIproVrrVrrVir = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrVrrVir.setStatus('current')
setIproVrrVrrPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrVrrPri.setStatus('current')
setIproVrrVrrBpr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrVrrBpr.setStatus('current')
setIproVrrVrrPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrVrrPee.setStatus('current')
setIproVrrVrrCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrVrrCom.setStatus('current')
setIproVrrRec = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrRec.setStatus('current')
setIproVrrAdv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrAdv.setStatus('current')
setIproVrrInt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrInt.setStatus('current')
setIproRou = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7))
setIproRouRou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("type-of-service", 1), ("diffserv", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRouRou.setStatus('current')
setIproRouIcm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("reliable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRouIcm.setStatus('current')
setIproRouSyn = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRouSyn.setStatus('current')
setIproRouL2l = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRouL2l.setStatus('current')
setIproRouL3l = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRouL3l.setStatus('current')
setIproRip = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8))
setIproRipLanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5), )
if mibBuilder.loadTexts: setIproRipLanTable.setStatus('current')
setIproRipLanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproRipLanNetw"))
if mibBuilder.loadTexts: setIproRipLanEntry.setStatus('current')
setIproRipLanNetw = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanNetw.setStatus('current')
setIproRipLanRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanRipt.setStatus('current')
setIproRipLanRips = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanRips.setStatus('current')
setIproRipLanRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanRipa.setStatus('current')
setIproRipLanProp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanProp.setStatus('current')
setIproRipLanPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanPois.setStatus('current')
setIproRipLanDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanDftr.setStatus('current')
setIproRipLanRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanRtgt.setStatus('current')
setIproRipLanRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanRxfi.setStatus('current')
setIproRipLanTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanTxfi.setStatus('current')
setIproRipR1m = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("class", 0), ("address", 1), ("cl-plus-addr", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipR1m.setStatus('current')
setIproRipIprTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3), )
if mibBuilder.loadTexts: setIproRipIprTable.setStatus('current')
setIproRipIprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproRipIprIpa"), (0, "LANCOM-1711-MIB", "setIproRipIprIpn"), (0, "LANCOM-1711-MIB", "setIproRipIprRtg"))
if mibBuilder.loadTexts: setIproRipIprEntry.setStatus('current')
setIproRipIprIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprIpa.setStatus('current')
setIproRipIprIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprIpn.setStatus('current')
setIproRipIprRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprRtg.setStatus('current')
setIproRipIprTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprTim.setStatus('current')
setIproRipIprDis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprDis.setStatus('current')
setIproRipIprGat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprGat.setStatus('current')
setIproRipIprPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprPee.setStatus('current')
setIproRipIprPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprPor.setStatus('current')
setIproRipIprVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprVla.setStatus('current')
setIproRipIprNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprNet.setStatus('current')
setIproRipWanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4), )
if mibBuilder.loadTexts: setIproRipWanTable.setStatus('current')
setIproRipWanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproRipWanPeer"))
if mibBuilder.loadTexts: setIproRipWanEntry.setStatus('current')
setIproRipWanPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanPeer.setStatus('current')
setIproRipWanRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanRipt.setStatus('current')
setIproRipWanRips = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanRips.setStatus('current')
setIproRipWanRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanRipa.setStatus('current')
setIproRipWanMasq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanMasq.setStatus('current')
setIproRipWanPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanPois.setStatus('current')
setIproRipWanRfc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanRfc2.setStatus('current')
setIproRipWanGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanGate.setStatus('current')
setIproRipWanDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanDftr.setStatus('current')
setIproRipWanRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanRtgt.setStatus('current')
setIproRipWanRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanRxfi.setStatus('current')
setIproRipWanTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanTxfi.setStatus('current')
setIproRipFilTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 7), )
if mibBuilder.loadTexts: setIproRipFilTable.setStatus('current')
setIproRipFilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproRipFilNam"))
if mibBuilder.loadTexts: setIproRipFilEntry.setStatus('current')
setIproRipFilNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipFilNam.setStatus('current')
setIproRipFilFil = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipFilFil.setStatus('current')
setIproRipPar = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6))
setIproRipParUpda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipParUpda.setStatus('current')
setIproRipParHold = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipParHold.setStatus('current')
setIproRipParInva = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipParInva.setStatus('current')
setIproRipParFlus = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipParFlus.setStatus('current')
setIproRipParUpdd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipParUpdd.setStatus('current')
setIproRipParMaxh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipParMaxh.setStatus('current')
setIproRipParRout = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipParRout.setStatus('current')
setIpro1nn = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9))
setIpro1nnTcpagings = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnTcpagings.setStatus('current')
setIpro1nnUdpagings = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnUdpagings.setStatus('current')
setIpro1nnIcmpaging = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnIcmpaging.setStatus('current')
setIpro1nnServicetaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4), )
if mibBuilder.loadTexts: setIpro1nnServicetaTable.setStatus('current')
setIpro1nnServicetaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIpro1nnServicetaDportf"), (0, "LANCOM-1711-MIB", "setIpro1nnServicetaDportt"), (0, "LANCOM-1711-MIB", "setIpro1nnServicetaProtoc"), (0, "LANCOM-1711-MIB", "setIpro1nnServicetaPeer"), (0, "LANCOM-1711-MIB", "setIpro1nnServicetaWanadd"))
if mibBuilder.loadTexts: setIpro1nnServicetaEntry.setStatus('current')
setIpro1nnServicetaDportf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaDportf.setStatus('current')
setIpro1nnServicetaDportt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaDportt.setStatus('current')
setIpro1nnServicetaProtoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 0))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("tcp-plus-udp", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaProtoc.setStatus('current')
setIpro1nnServicetaPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaPeer.setStatus('current')
setIpro1nnServicetaWanadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaWanadd.setStatus('current')
setIpro1nnServicetaIntran = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaIntran.setStatus('current')
setIpro1nnServicetaMappor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaMappor.setStatus('current')
setIpro1nnServicetaActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaActive.setStatus('current')
setIpro1nnServicetaCommen = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaCommen.setStatus('current')
setIpro1nnTable1nnaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5), )
if mibBuilder.loadTexts: setIpro1nnTable1nnaTable.setStatus('current')
setIpro1nnTable1nnaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIpro1nnTable1nnaInt"))
if mibBuilder.loadTexts: setIpro1nnTable1nnaEntry.setStatus('current')
setIpro1nnTable1nnaInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnTable1nnaInt.setStatus('current')
setIpro1nnTable1nnaSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnTable1nnaSou.setStatus('current')
setIpro1nnTable1nnaPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 17, 1))).clone(namedValues=NamedValues(("tcp", 6), ("udp", 17), ("icmp", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnTable1nnaPro.setStatus('current')
setIpro1nnTable1nnaTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnTable1nnaTim.setStatus('current')
setIpro1nnTable1nnaHan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnTable1nnaHan.setStatus('current')
setIpro1nnTable1nnaRem = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnTable1nnaRem.setStatus('current')
setIpro1nnFragments = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("filter", 0), ("route", 1), ("reassemble", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnFragments.setStatus('current')
setIpro1nnFragmenta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnFragmenta.setStatus('current')
setIpro1nnIpsecagin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnIpsecagin.setStatus('current')
setIpro1nnIpsectablTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9), )
if mibBuilder.loadTexts: setIpro1nnIpsectablTable.setStatus('current')
setIpro1nnIpsectablEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIpro1nnIpsectablRemotea"))
if mibBuilder.loadTexts: setIpro1nnIpsectablEntry.setStatus('current')
setIpro1nnIpsectablRemotea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablRemotea.setStatus('current')
setIpro1nnIpsectablLocalad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablLocalad.setStatus('current')
setIpro1nnIpsectablRchi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablRchi.setStatus('current')
setIpro1nnIpsectablRclo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablRclo.setStatus('current')
setIpro1nnIpsectablLchi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablLchi.setStatus('current')
setIpro1nnIpsectablLclo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablLclo.setStatus('current')
setIpro1nnIpsectablRemotes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablRemotes.setStatus('current')
setIpro1nnIpsectablLocalsp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablLocalsp.setStatus('current')
setIpro1nnIpsectablTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablTimeout.setStatus('current')
setIpro1nnIpsectablCo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablCo.setStatus('current')
setIpro1nnIpsectablNl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablNl.setStatus('current')
setIpro1nnIpsectablNr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablNr.setStatus('current')
setIpro1nnIpsectablDp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablDp.setStatus('current')
setIpro1nnIpsectablFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablFlags.setStatus('current')
setIpro1nnIdspoofin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnIdspoofin.setStatus('current')
setIproFir = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10))
setIproFirOpera = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirOpera.setStatus('current')
setIproFirActioTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 4), )
if mibBuilder.loadTexts: setIproFirActioTable.setStatus('current')
setIproFirActioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproFirActioNam"))
if mibBuilder.loadTexts: setIproFirActioEntry.setStatus('current')
setIproFirActioNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirActioNam.setStatus('current')
setIproFirActioDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirActioDes.setStatus('current')
setIproFirObjecTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 1), )
if mibBuilder.loadTexts: setIproFirObjecTable.setStatus('current')
setIproFirObjecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproFirObjecNam"))
if mibBuilder.loadTexts: setIproFirObjecEntry.setStatus('current')
setIproFirObjecNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirObjecNam.setStatus('current')
setIproFirObjecDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirObjecDes.setStatus('current')
setIproFirRulesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2), )
if mibBuilder.loadTexts: setIproFirRulesTable.setStatus('current')
setIproFirRulesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproFirRulesNam"))
if mibBuilder.loadTexts: setIproFirRulesEntry.setStatus('current')
setIproFirRulesNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesNam.setStatus('current')
setIproFirRulesPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesPro.setStatus('current')
setIproFirRulesSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesSou.setStatus('current')
setIproFirRulesDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesDes.setStatus('current')
setIproFirRulesAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesAct.setStatus('current')
setIproFirRulesLin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesLin.setStatus('current')
setIproFirRulesPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesPri.setStatus('current')
setIproFirRulesFir = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesFir.setStatus('current')
setIproFirRulesVpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesVpn.setStatus('current')
setIproFirRulesSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesSta.setStatus('current')
setIproFirRulesRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesRtg.setStatus('current')
setIproFirRulesCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesCom.setStatus('current')
setIproFirFilteTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3), )
if mibBuilder.loadTexts: setIproFirFilteTable.setStatus('current')
setIproFirFilteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproFirFilteIdx"))
if mibBuilder.loadTexts: setIproFirFilteEntry.setStatus('current')
setIproFirFilteIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteIdx.setStatus('current')
setIproFirFilteProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteProt.setStatus('current')
setIproFirFilteSrcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteSrcm.setStatus('current')
setIproFirFilteSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteSrca.setStatus('current')
setIproFirFilteSrcn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteSrcn.setStatus('current')
setIproFirFilteSst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteSst.setStatus('current')
setIproFirFilteSend = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteSend.setStatus('current')
setIproFirFilteDstm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteDstm.setStatus('current')
setIproFirFilteDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteDsta.setStatus('current')
setIproFirFilteDstn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteDstn.setStatus('current')
setIproFirFilteDst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteDst.setStatus('current')
setIproFirFilteDend = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteDend.setStatus('current')
setIproFirFilteActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteActi.setStatus('current')
setIproFirFilteLink = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteLink.setStatus('current')
setIproFirFiltePrio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFiltePrio.setStatus('current')
setIproFirFilteRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteRtgt.setStatus('current')
setIproFirConneTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5), )
if mibBuilder.loadTexts: setIproFirConneTable.setStatus('current')
setIproFirConneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproFirConneSrca"), (0, "LANCOM-1711-MIB", "setIproFirConneDsta"), (0, "LANCOM-1711-MIB", "setIproFirConneProt"), (0, "LANCOM-1711-MIB", "setIproFirConneSrcp"), (0, "LANCOM-1711-MIB", "setIproFirConneDstp"))
if mibBuilder.loadTexts: setIproFirConneEntry.setStatus('current')
setIproFirConneSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneSrca.setStatus('current')
setIproFirConneDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneDsta.setStatus('current')
setIproFirConneProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneProt.setStatus('current')
setIproFirConneSrcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneSrcp.setStatus('current')
setIproFirConneDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneDstp.setStatus('current')
setIproFirConneRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneRtgt.setStatus('current')
setIproFirConneTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneTime.setStatus('current')
setIproFirConneFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneFlag.setStatus('current')
setIproFirConneFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneFilt.setStatus('current')
setIproFirConneSrcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneSrcr.setStatus('current')
setIproFirConneDest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneDest.setStatus('current')
setIproFirOpenpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19), )
if mibBuilder.loadTexts: setIproFirOpenpTable.setStatus('current')
setIproFirOpenpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproFirOpenpSrca"), (0, "LANCOM-1711-MIB", "setIproFirOpenpDsta"), (0, "LANCOM-1711-MIB", "setIproFirOpenpProt"), (0, "LANCOM-1711-MIB", "setIproFirOpenpDstp"))
if mibBuilder.loadTexts: setIproFirOpenpEntry.setStatus('current')
setIproFirOpenpSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirOpenpSrca.setStatus('current')
setIproFirOpenpDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirOpenpDsta.setStatus('current')
setIproFirOpenpProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirOpenpProt.setStatus('current')
setIproFirOpenpDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirOpenpDstp.setStatus('current')
setIproFirOpenpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirOpenpTime.setStatus('current')
setIproFirOpenpFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirOpenpFilt.setStatus('current')
setIproFirOpenpSrcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirOpenpSrcr.setStatus('current')
setIproFirHostbTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 6), )
if mibBuilder.loadTexts: setIproFirHostbTable.setStatus('current')
setIproFirHostbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproFirHostbSrc"))
if mibBuilder.loadTexts: setIproFirHostbEntry.setStatus('current')
setIproFirHostbSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirHostbSrc.setStatus('current')
setIproFirHostbTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirHostbTim.setStatus('current')
setIproFirHostbFil = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirHostbFil.setStatus('current')
setIproFirPortbTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7), )
if mibBuilder.loadTexts: setIproFirPortbTable.setStatus('current')
setIproFirPortbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproFirPortbDsta"))
if mibBuilder.loadTexts: setIproFirPortbEntry.setStatus('current')
setIproFirPortbDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirPortbDsta.setStatus('current')
setIproFirPortbProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirPortbProt.setStatus('current')
setIproFirPortbDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirPortbDstp.setStatus('current')
setIproFirPortbTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirPortbTime.setStatus('current')
setIproFirPortbFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirPortbFilt.setStatus('current')
setIproFirMaxha = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirMaxha.setStatus('current')
setIproFirDosac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirDosac.setStatus('current')
setIproFirPorts = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirPorts.setStatus('current')
setIproFirIdsac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirIdsac.setStatus('current')
setIproFirAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAdmin.setStatus('current')
setIproFirPingb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirPingb.setStatus('current')
setIproFirSteal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirSteal.setStatus('current')
setIproFirAuthp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("closed", 0), ("stealth", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAuthp.setStatus('current')
setIproFirDenys = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirDenys.setStatus('current')
setIproFirAppli = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20))
setIproFirAppliFtp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1))
setIproFirAppliFtpFtp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliFtpFtp.setStatus('current')
setIproFirAppliFtpAct = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliFtpAct.setStatus('current')
setIproFirAppliFtpMin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliFtpMin.setStatus('current')
setIproFirAppliFtpChe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliFtpChe.setStatus('current')
setIproFirAppliFtpFxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliFtpFxp.setStatus('current')
setIproFirAppliIrc = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 2))
setIproFirAppliIrcIrc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliIrcIrc.setStatus('current')
setIproFirAppliIrcDdc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliIrcDdc.setStatus('current')
setIproFirAppliIrcMin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliIrcMin.setStatus('current')
setIproFirAppliIrcChe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliIrcChe.setStatus('current')
setIproFirAppliApp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliApp.setStatus('current')
setIproNnnTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19), )
if mibBuilder.loadTexts: setIproNnnTable.setStatus('current')
setIproNnnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproNnnIdx"))
if mibBuilder.loadTexts: setIproNnnEntry.setStatus('current')
setIproNnnIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproNnnIdx.setStatus('current')
setIproNnnSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproNnnSrca.setStatus('current')
setIproNnnSrcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproNnnSrcm.setStatus('current')
setIproNnnDsts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproNnnDsts.setStatus('current')
setIproNnnMapp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproNnnMapp.setStatus('current')
setIproWan = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("manual", 0), ("auto", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproWan.setStatus('current')
setIproTagTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23), )
if mibBuilder.loadTexts: setIproTagTable.setStatus('current')
setIproTagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproTagPee"))
if mibBuilder.loadTexts: setIproTagEntry.setStatus('current')
setIproTagPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproTagPee.setStatus('current')
setIproTagRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproTagRtg.setStatus('current')
setIproTagSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproTagSta.setStatus('current')
setIproTagEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproTagEnd.setStatus('current')
setSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9))
setSnmpSendtrap = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpSendtrap.setStatus('current')
setSnmpIptrapsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 2), )
if mibBuilder.loadTexts: setSnmpIptrapsTable.setStatus('current')
setSnmpIptrapsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setSnmpIptrapsTra"))
if mibBuilder.loadTexts: setSnmpIptrapsEntry.setStatus('current')
setSnmpIptrapsTra = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpIptrapsTra.setStatus('current')
setSnmpIptrapsLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpIptrapsLoo.setStatus('current')
setSnmpIptrapsVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("snmpv1", 1), ("snmpv2", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpIptrapsVer.setStatus('current')
setSnmpAdminist = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpAdminist.setStatus('current')
setSnmpLocation = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpLocation.setStatus('current')
setSnmpRegister = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpRegister.setStatus('current')
setSnmpDeletemo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpDeletemo.setStatus('current')
setSnmpMonitortTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7), )
if mibBuilder.loadTexts: setSnmpMonitortTable.setStatus('current')
setSnmpMonitortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setSnmpMonitortIpa"), (0, "LANCOM-1711-MIB", "setSnmpMonitortPor"))
if mibBuilder.loadTexts: setSnmpMonitortEntry.setStatus('current')
setSnmpMonitortIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortIpa.setStatus('current')
setSnmpMonitortPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortPor.setStatus('current')
setSnmpMonitortMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortMac.setStatus('current')
setSnmpMonitortVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortVla.setStatus('current')
setSnmpMonitortTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortTim.setStatus('current')
setSnmpMonitortPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortPee.setStatus('current')
setSnmpMonitortLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortLoo.setStatus('current')
setSnmpMonitortLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortLan.setStatus('current')
setSnmpMonitortEth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortEth.setStatus('current')
setSnmpPassword = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpPassword.setStatus('current')
setSnmpReadonly = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpReadonly.setStatus('current')
setSnmpComment1 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpComment1.setStatus('current')
setSnmpComment2 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpComment2.setStatus('current')
setSnmpComment3 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpComment3.setStatus('current')
setSnmpComment4 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpComment4.setStatus('current')
setDhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10))
setDhcpNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20), )
if mibBuilder.loadTexts: setDhcpNetTable.setStatus('current')
setDhcpNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDhcpNetNetworknam"))
if mibBuilder.loadTexts: setDhcpNetEntry.setStatus('current')
setDhcpNetNetworknam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetNetworknam.setStatus('current')
setDhcpNetStartaddre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetStartaddre.setStatus('current')
setDhcpNetEndaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetEndaddress.setStatus('current')
setDhcpNetNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetNetmask.setStatus('current')
setDhcpNetBroadcasta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetBroadcasta.setStatus('current')
setDhcpNetGatewayadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetGatewayadd.setStatus('current')
setDhcpNetDnsdefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetDnsdefault.setStatus('current')
setDhcpNetDnsbackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetDnsbackup.setStatus('current')
setDhcpNetNbnsdefaul = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetNbnsdefaul.setStatus('current')
setDhcpNetNbnsbackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetNbnsbackup.setStatus('current')
setDhcpNetOperating = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 16, 4))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("auto", 2), ("relay", 16), ("client", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetOperating.setStatus('current')
setDhcpNetBroadcastb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetBroadcastb.setStatus('current')
setDhcpNetMasterserv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetMasterserv.setStatus('current')
setDhcpNetCache = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetCache.setStatus('current')
setDhcpNetAdaption = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetAdaption.setStatus('current')
setDhcpPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 18), )
if mibBuilder.loadTexts: setDhcpPorTable.setStatus('current')
setDhcpPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 18, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDhcpPorPor"))
if mibBuilder.loadTexts: setDhcpPorEntry.setStatus('current')
setDhcpPorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 18, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpPorPor.setStatus('current')
setDhcpPorEna = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpPorEna.setStatus('current')
setDhcpMax = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpMax.setStatus('current')
setDhcpDef = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpDef.setStatus('current')
setDhcpDhcTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8), )
if mibBuilder.loadTexts: setDhcpDhcTable.setStatus('current')
setDhcpDhcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDhcpDhcIpa"), (0, "LANCOM-1711-MIB", "setDhcpDhcNet"))
if mibBuilder.loadTexts: setDhcpDhcEntry.setStatus('current')
setDhcpDhcIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcIpa.setStatus('current')
setDhcpDhcMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcMac.setStatus('current')
setDhcpDhcTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcTim.setStatus('current')
setDhcpDhcHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcHos.setStatus('current')
setDhcpDhcTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 5), Bits().clone(namedValues=NamedValues(("new", 15), ("new", 14), ("dyn", 11), ("unkn", 13), ("stat", 12), ("bootp", 10), ("relay", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcTyp.setStatus('current')
setDhcpDhcLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcLan.setStatus('current')
setDhcpDhcEth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 0))).clone(namedValues=NamedValues(("wan", 1), ("eth-1", 2), ("eth-2", 3), ("eth-3", 4), ("eth-4", 5), ("unknown", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcEth.setStatus('current')
setDhcpDhcVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcVla.setStatus('current')
setDhcpDhcNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcNet.setStatus('current')
setDhcpHosTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9), )
if mibBuilder.loadTexts: setDhcpHosTable.setStatus('current')
setDhcpHosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDhcpHosMac"), (0, "LANCOM-1711-MIB", "setDhcpHosNet"))
if mibBuilder.loadTexts: setDhcpHosEntry.setStatus('current')
setDhcpHosMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosMac.setStatus('current')
setDhcpHosNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosNet.setStatus('current')
setDhcpHosIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosIpa.setStatus('current')
setDhcpHosHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosHos.setStatus('current')
setDhcpHosIma = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosIma.setStatus('current')
setDhcpAliTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 10), )
if mibBuilder.loadTexts: setDhcpAliTable.setStatus('current')
setDhcpAliEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 10, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDhcpAliImagea"))
if mibBuilder.loadTexts: setDhcpAliEntry.setStatus('current')
setDhcpAliImagea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAliImagea.setStatus('current')
setDhcpAliImages = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 10, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAliImages.setStatus('current')
setDhcpAliImagef = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAliImagef.setStatus('current')
setDhcpAddTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21), )
if mibBuilder.loadTexts: setDhcpAddTable.setStatus('current')
setDhcpAddEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDhcpAddOptionn"), (0, "LANCOM-1711-MIB", "setDhcpAddNetwork"))
if mibBuilder.loadTexts: setDhcpAddEntry.setStatus('current')
setDhcpAddOptionn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAddOptionn.setStatus('current')
setDhcpAddNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAddNetwork.setStatus('current')
setDhcpAddOptiont = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4, 2))).clone(namedValues=NamedValues(("string", 0), ("integer32", 1), ("integer16", 3), ("integer8", 4), ("ip-address", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAddOptiont.setStatus('current')
setDhcpAddOptionv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAddOptionv.setStatus('current')
setDhcpUse = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpUse.setStatus('current')
setDns = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17))
setDnsOper = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsOper.setStatus('current')
setDnsDoma = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDoma.setStatus('current')
setDnsSubdTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 13), )
if mibBuilder.loadTexts: setDnsSubdTable.setStatus('current')
setDnsSubdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 13, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDnsSubdNet"))
if mibBuilder.loadTexts: setDnsSubdEntry.setStatus('current')
setDnsSubdNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 13, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsSubdNet.setStatus('current')
setDnsSubdSub = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 13, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsSubdSub.setStatus('current')
setDnsReso = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsReso.setStatus('current')
setDnsDhcp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDhcp.setStatus('current')
setDnsNetb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsNetb.setStatus('current')
setDnsDnslTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 5), )
if mibBuilder.loadTexts: setDnsDnslTable.setStatus('current')
setDnsDnslEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDnsDnslHos"))
if mibBuilder.loadTexts: setDnsDnslEntry.setStatus('current')
setDnsDnslHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDnslHos.setStatus('current')
setDnsDnslIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 5, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDnslIpa.setStatus('current')
setDnsFiltTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6), )
if mibBuilder.loadTexts: setDnsFiltTable.setStatus('current')
setDnsFiltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDnsFiltIdx"))
if mibBuilder.loadTexts: setDnsFiltEntry.setStatus('current')
setDnsFiltIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsFiltIdx.setStatus('current')
setDnsFiltDom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsFiltDom.setStatus('current')
setDnsFiltIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsFiltIpa.setStatus('current')
setDnsFiltNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsFiltNet.setStatus('current')
setDnsDyndTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 8), )
if mibBuilder.loadTexts: setDnsDyndTable.setStatus('current')
setDnsDyndEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 8, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDnsDyndHos"))
if mibBuilder.loadTexts: setDnsDyndEntry.setStatus('current')
setDnsDyndHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDyndHos.setStatus('current')
setDnsDyndIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDyndIpa.setStatus('current')
setDnsDyndTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDyndTim.setStatus('current')
setDnsDnsdTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 9), )
if mibBuilder.loadTexts: setDnsDnsdTable.setStatus('current')
setDnsDnsdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDnsDnsdDom"))
if mibBuilder.loadTexts: setDnsDnsdEntry.setStatus('current')
setDnsDnsdDom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDnsdDom.setStatus('current')
setDnsDnsdDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDnsdDes.setStatus('current')
setDnsLeas = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsLeas.setStatus('current')
setDnsServTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 10), )
if mibBuilder.loadTexts: setDnsServTable.setStatus('current')
setDnsServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 10, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDnsServSer"))
if mibBuilder.loadTexts: setDnsServEntry.setStatus('current')
setDnsServSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsServSer.setStatus('current')
setDnsServHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsServHos.setStatus('current')
setDnsServPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsServPor.setStatus('current')
setDnsDynaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 11), )
if mibBuilder.loadTexts: setDnsDynaTable.setStatus('current')
setDnsDynaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDnsDynaSer"))
if mibBuilder.loadTexts: setDnsDynaEntry.setStatus('current')
setDnsDynaSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDynaSer.setStatus('current')
setDnsDynaHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDynaHos.setStatus('current')
setDnsDynaPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDynaPor.setStatus('current')
setNetb = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16))
setNetbOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbOpe.setStatus('current')
setNetbNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 12), )
if mibBuilder.loadTexts: setNetbNetTable.setStatus('current')
setNetbNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setNetbNetNet"))
if mibBuilder.loadTexts: setNetbNetEntry.setStatus('current')
setNetbNetNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbNetNet.setStatus('current')
setNetbNetOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbNetOpe.setStatus('current')
setNetbNetNtd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 12, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbNetNtd.setStatus('current')
setNetbSco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbSco.setStatus('current')
setNetbPeeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 4), )
if mibBuilder.loadTexts: setNetbPeeTable.setStatus('current')
setNetbPeeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setNetbPeeNam"))
if mibBuilder.loadTexts: setNetbPeeEntry.setStatus('current')
setNetbPeeNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbPeeNam.setStatus('current')
setNetbPeeTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("workstation", 1), ("router", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbPeeTyp.setStatus('current')
setNetbGroTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5), )
if mibBuilder.loadTexts: setNetbGroTable.setStatus('current')
setNetbGroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setNetbGroGro"), (0, "LANCOM-1711-MIB", "setNetbGroTyp"), (0, "LANCOM-1711-MIB", "setNetbGroIpa"), (0, "LANCOM-1711-MIB", "setNetbGroRtg"))
if mibBuilder.loadTexts: setNetbGroEntry.setStatus('current')
setNetbGroGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbGroGro.setStatus('current')
setNetbGroTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbGroTyp.setStatus('current')
setNetbGroIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbGroIpa.setStatus('current')
setNetbGroRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbGroRtg.setStatus('current')
setNetbGroPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbGroPee.setStatus('current')
setNetbGroNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbGroNet.setStatus('current')
setNetbGroTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbGroTim.setStatus('current')
setNetbGroFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbGroFla.setStatus('current')
setNetbHosTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6), )
if mibBuilder.loadTexts: setNetbHosTable.setStatus('current')
setNetbHosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setNetbHosNam"), (0, "LANCOM-1711-MIB", "setNetbHosTyp"), (0, "LANCOM-1711-MIB", "setNetbHosIpa"), (0, "LANCOM-1711-MIB", "setNetbHosRtg"))
if mibBuilder.loadTexts: setNetbHosEntry.setStatus('current')
setNetbHosNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbHosNam.setStatus('current')
setNetbHosTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbHosTyp.setStatus('current')
setNetbHosIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbHosIpa.setStatus('current')
setNetbHosRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbHosRtg.setStatus('current')
setNetbHosPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbHosPee.setStatus('current')
setNetbHosNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbHosNet.setStatus('current')
setNetbHosTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbHosTim.setStatus('current')
setNetbHosFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbHosFla.setStatus('current')
setNetbSerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7), )
if mibBuilder.loadTexts: setNetbSerTable.setStatus('current')
setNetbSerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setNetbSerHos"), (0, "LANCOM-1711-MIB", "setNetbSerGro"), (0, "LANCOM-1711-MIB", "setNetbSerIpa"), (0, "LANCOM-1711-MIB", "setNetbSerRtg"))
if mibBuilder.loadTexts: setNetbSerEntry.setStatus('current')
setNetbSerHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerHos.setStatus('current')
setNetbSerGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerGro.setStatus('current')
setNetbSerIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerIpa.setStatus('current')
setNetbSerRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerRtg.setStatus('current')
setNetbSerOsv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerOsv.setStatus('current')
setNetbSerSmb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerSmb.setStatus('current')
setNetbSerSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerSer.setStatus('current')
setNetbSerPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerPee.setStatus('current')
setNetbSerNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerNet.setStatus('current')
setNetbSerTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerTim.setStatus('current')
setNetbSerFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerFla.setStatus('current')
setNetbBroTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13), )
if mibBuilder.loadTexts: setNetbBroTable.setStatus('current')
setNetbBroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setNetbBroBro"), (0, "LANCOM-1711-MIB", "setNetbBroGro"), (0, "LANCOM-1711-MIB", "setNetbBroIpa"), (0, "LANCOM-1711-MIB", "setNetbBroRtg"))
if mibBuilder.loadTexts: setNetbBroEntry.setStatus('current')
setNetbBroBro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroBro.setStatus('current')
setNetbBroGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroGro.setStatus('current')
setNetbBroIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroIpa.setStatus('current')
setNetbBroRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroRtg.setStatus('current')
setNetbBroOsv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroOsv.setStatus('current')
setNetbBroSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroSer.setStatus('current')
setNetbBroPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroPee.setStatus('current')
setNetbBroNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroNet.setStatus('current')
setNetbBroTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroTim.setStatus('current')
setNetbBroFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroFla.setStatus('current')
setNetbSup = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbSup.setStatus('current')
setNetbWat = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("spoof", 1), ("route", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbWat.setStatus('current')
setNetbUpd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("pback", 0), ("trig", 1), ("time", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbUpd.setStatus('current')
setNetbWan = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbWan.setStatus('current')
setNetbLea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbLea.setStatus('current')
setConf = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11))
setConfPasswor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfPasswor.setStatus('current')
setConfAdminea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAdminea.setStatus('current')
setConfMaximum = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfMaximum.setStatus('current')
setConfConfiga = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfConfiga.setStatus('current')
setConfOutband = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfOutband.setStatus('current')
setConfLoginer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfLoginer.setStatus('current')
setConfLockmin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfLockmin.setStatus('current')
setConfLanguag = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("english", 1), ("deutsch", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfLanguag.setStatus('current')
setConfTftpcli = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13))
setConfTftpcliConfigadd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTftpcliConfigadd.setStatus('current')
setConfTftpcliConfigfil = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTftpcliConfigfil.setStatus('current')
setConfTftpcliFirmwarea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTftpcliFirmwarea.setStatus('current')
setConfTftpcliFirmwaref = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTftpcliFirmwaref.setStatus('current')
setConfTftpcliScriptadd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTftpcliScriptadd.setStatus('current')
setConfTftpcliScriptfil = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTftpcliScriptfil.setStatus('current')
setConfTftpcliBytesperh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTftpcliBytesperh.setStatus('current')
setConfAccesstTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15), )
if mibBuilder.loadTexts: setConfAccesstTable.setStatus('current')
setConfAccesstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setConfAccesstIfc"))
if mibBuilder.loadTexts: setConfAccesstEntry.setStatus('current')
setConfAccesstIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lan", 1), ("wan", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfAccesstIfc.setStatus('current')
setConfAccesstTelnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1, 4, 0))).clone(namedValues=NamedValues(("vpn", 16), ("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAccesstTelnet.setStatus('current')
setConfAccesstTftp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1, 4, 0))).clone(namedValues=NamedValues(("vpn", 16), ("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAccesstTftp.setStatus('current')
setConfAccesstHttp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1, 4, 0))).clone(namedValues=NamedValues(("vpn", 16), ("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAccesstHttp.setStatus('current')
setConfAccesstSnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1, 4, 0))).clone(namedValues=NamedValues(("vpn", 16), ("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAccesstSnmp.setStatus('current')
setConfAccesstHttps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1, 4, 0))).clone(namedValues=NamedValues(("vpn", 16), ("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAccesstHttps.setStatus('current')
setConfAccesstTelnets = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1, 4, 0))).clone(namedValues=NamedValues(("vpn", 16), ("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAccesstTelnets.setStatus('current')
setConfAccesstSsh = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1, 4, 0))).clone(namedValues=NamedValues(("vpn", 16), ("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAccesstSsh.setStatus('current')
setConfScreenh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfScreenh.setStatus('current')
setConfFunctioTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 43), )
if mibBuilder.loadTexts: setConfFunctioTable.setStatus('current')
setConfFunctioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 43, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setConfFunctioKey"))
if mibBuilder.loadTexts: setConfFunctioEntry.setStatus('current')
setConfFunctioKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 43, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("f1", 1), ("f2", 2), ("f3", 3), ("f4", 4), ("f5", 5), ("f6", 6), ("f7", 7), ("f8", 8), ("f9", 9), ("f10", 10), ("f11", 11), ("f12", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfFunctioKey.setStatus('current')
setConfFunctioMap = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 43, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfFunctioMap.setStatus('current')
setConfLl2m = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 50))
setConfLl2mOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 50, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfLl2mOpe.setStatus('current')
setConfLl2mTim = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 50, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfLl2mTim.setStatus('current')
setConfCrashme = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrashme.setStatus('current')
setConfAdminge = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("male", 1), ("female", 2), ("geek", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAdminge.setStatus('current')
setConfAsserta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("log-only", 0), ("reboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAsserta.setStatus('current')
setConfPrompt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfPrompt.setStatus('current')
setConfLedtest = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 1, 255))).clone(namedValues=NamedValues(("off", 0), ("green", 2), ("red", 1), ("no-test", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfLedtest.setStatus('current')
setConfCrontabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20), )
if mibBuilder.loadTexts: setConfCrontabTable.setStatus('current')
setConfCrontabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setConfCrontabInde"))
if mibBuilder.loadTexts: setConfCrontabEntry.setStatus('current')
setConfCrontabInde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabInde.setStatus('current')
setConfCrontabActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabActi.setStatus('current')
setConfCrontabBase = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("real-time", 0), ("operation-time", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabBase.setStatus('current')
setConfCrontabVari = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabVari.setStatus('current')
setConfCrontabMinu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabMinu.setStatus('current')
setConfCrontabHour = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabHour.setStatus('current')
setConfCrontabDayo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabDayo.setStatus('current')
setConfCrontabDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabDay.setStatus('current')
setConfCrontabMont = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabMont.setStatus('current')
setConfCrontabComm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabComm.setStatus('current')
setConfCrontabOwne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabOwne.setStatus('current')
setConfAdminsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21), )
if mibBuilder.loadTexts: setConfAdminsTable.setStatus('current')
setConfAdminsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setConfAdminsAdm"))
if mibBuilder.loadTexts: setConfAdminsEntry.setStatus('current')
setConfAdminsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAdminsAdm.setStatus('current')
setConfAdminsPas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAdminsPas.setStatus('current')
setConfAdminsAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAdminsAct.setStatus('current')
setConfAdminsAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 8388608, 8388864, 16777216, 16777472, -1))).clone(namedValues=NamedValues(("none", 0), ("admin-ro-limit", 8388608), ("admin-rw-limit", 8388864), ("admin-ro", 16777216), ("admin-rw", 16777472), ("supervisor", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAdminsAcc.setStatus('current')
setConfAdminsFun = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1, 3), Bits().clone(namedValues=NamedValues(("basic-wizard", 31), ("security-wizard", 30), ("internet-wizard", 29), ("ras-wizard", 27), ("provider-selection", 28), ("lanlan-wizard", 26), ("time-setting", 25), ("device-search", 24), ("rollout-wizard", 18), ("dynamic-dns-wizard", 17)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAdminsFun.setStatus('current')
setConfPredefaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 27), )
if mibBuilder.loadTexts: setConfPredefaTable.setStatus('current')
setConfPredefaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 27, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setConfPredefaNam"))
if mibBuilder.loadTexts: setConfPredefaEntry.setStatus('current')
setConfPredefaNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 27, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfPredefaNam.setStatus('current')
setConfLan = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 1), Integer32())
if mibBuilder.loadTexts: setConfLan.setStatus('current')
setConfWan = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 2), Integer32())
if mibBuilder.loadTexts: setConfWan.setStatus('current')
setConfTelnetp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTelnetp.setStatus('current')
setConfTelnets = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTelnets.setStatus('current')
setConfResetbu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ignore", 0), ("boot-only", 1), ("reset-or-boot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfResetbu.setStatus('current')
setConfMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 35))
setConfMonitorTracemask1 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 35, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfMonitorTracemask1.setStatus('current')
setConfMonitorTracemask2 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 35, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfMonitorTracemask2.setStatus('current')
setConfUpdatec = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30))
setConfUpdatecOperati = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfUpdatecOperati.setStatus('current')
setConfUpdatecServern = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfUpdatecServern.setStatus('current')
setConfUpdatecServerp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfUpdatecServerp.setStatus('current')
setConfUpdatecRespons = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfUpdatecRespons.setStatus('current')
setConfUpdatecRetryfa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfUpdatecRetryfa.setStatus('current')
setConfUpdatecRetryok = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfUpdatecRetryok.setStatus('current')
setConfUpdatecLastfir = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfUpdatecLastfir.setStatus('current')
setConfUpdatecLastcon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfUpdatecLastcon.setStatus('current')
setConfAntithe = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31))
setConfAntitheEna = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAntitheEna.setStatus('current')
setConfAntitheMet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("basic-call", 0), ("facility", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAntitheMet.setStatus('current')
setConfAntitheIsd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("s0-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAntitheIsd.setStatus('current')
setConfAntitheCal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAntitheCal.setStatus('current')
setConfAntitheOut = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAntitheOut.setStatus('current')
setConfAntitheChe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAntitheChe.setStatus('current')
setConfSshport = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfSshport.setStatus('current')
setConfSshauthTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 26), )
if mibBuilder.loadTexts: setConfSshauthTable.setStatus('current')
setConfSshauthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 26, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setConfSshauthIfc"))
if mibBuilder.loadTexts: setConfSshauthEntry.setStatus('current')
setConfSshauthIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 26, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lan", 1), ("wan", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfSshauthIfc.setStatus('current')
setConfSshauthMet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 26, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("public-key", 1), ("password", 2), ("all", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfSshauthMet.setStatus('current')
setLanc = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13))
setLancAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 1), )
if mibBuilder.loadTexts: setLancAccTable.setStatus('current')
setLancAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setLancAccIpa"), (0, "LANCOM-1711-MIB", "setLancAccIpn"), (0, "LANCOM-1711-MIB", "setLancAccRtg"))
if mibBuilder.loadTexts: setLancAccEntry.setStatus('current')
setLancAccIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 1, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancAccIpa.setStatus('current')
setLancAccIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancAccIpn.setStatus('current')
setLancAccRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancAccRtg.setStatus('current')
setLancUdp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancUdp.setStatus('current')
setLancIntTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6), )
if mibBuilder.loadTexts: setLancIntTable.setStatus('current')
setLancIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setLancIntIfc"))
if mibBuilder.loadTexts: setLancIntEntry.setStatus('current')
setLancIntIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("s0-1", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setLancIntIfc.setStatus('current')
setLancIntOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("dial-only", 2), ("dial-in-only", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancIntOpe.setStatus('current')
setLancIntMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancIntMax.setStatus('current')
setLancIntEaz = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancIntEaz.setStatus('current')
setLancIntFor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancIntFor.setStatus('current')
setLancPriTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 7), )
if mibBuilder.loadTexts: setLancPriTable.setStatus('current')
setLancPriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setLancPriIfc"))
if mibBuilder.loadTexts: setLancPriEntry.setStatus('current')
setLancPriIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("s0-1", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setLancPriIfc.setStatus('current')
setLancPriPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("p1", 0), ("p2", 1), ("p3", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancPriPri.setStatus('current')
setLcr = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15))
setLcrRou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrRou.setStatus('current')
setLcrLan = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrLan.setStatus('current')
setLcrTimTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4), )
if mibBuilder.loadTexts: setLcrTimTable.setStatus('current')
setLcrTimEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setLcrTimInd"))
if mibBuilder.loadTexts: setLcrTimEntry.setStatus('current')
setLcrTimInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimInd.setStatus('current')
setLcrTimPre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimPre.setStatus('current')
setLcrTimDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 3), Bits().clone(namedValues=NamedValues(("monday", 7), ("tuesday", 6), ("wednesday", 5), ("thursday", 4), ("friday", 3), ("saturday", 2), ("sunday", 1), ("holiday", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimDay.setStatus('current')
setLcrTimSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimSta.setStatus('current')
setLcrTimSto = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimSto.setStatus('current')
setLcrTimNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimNum.setStatus('current')
setLcrTimFal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimFal.setStatus('current')
setLcrHolTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 5), )
if mibBuilder.loadTexts: setLcrHolTable.setStatus('current')
setLcrHolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setLcrHolInd"))
if mibBuilder.loadTexts: setLcrHolEntry.setStatus('current')
setLcrHolInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrHolInd.setStatus('current')
setLcrHolDat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrHolDat.setStatus('current')
setTime = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14))
setTimeFetch = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("isdn", 1), ("ntp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeFetch.setStatus('current')
setTimeCurre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTimeCurre.setStatus('current')
setTimeTimec = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeTimec.setStatus('current')
setTimeCalla = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeCalla.setStatus('current')
setTimeUtcin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTimeUtcin.setStatus('current')
setTimeTimez = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244))).clone(namedValues=NamedValues(("e0", 0), ("plus-1", 1), ("plus-2", 2), ("plus-3", 3), ("plus-4", 4), ("plus-5", 5), ("plus-6", 6), ("plus-7", 7), ("plus-8", 8), ("plus-9", 9), ("plus-10", 10), ("plus-11", 11), ("plus-12", 12), ("plus-13", 13), ("plus-14", 14), ("minus-1", 255), ("minus-2", 254), ("minus-3", 253), ("minus-4", 252), ("minus-5", 251), ("minus-6", 250), ("minus-7", 249), ("minus-8", 248), ("minus-9", 247), ("minus-10", 246), ("minus-11", 245), ("minus-12", 244)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeTimez.setStatus('current')
setTimeDayli = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("europe-eu", 2), ("russia", 3), ("usa", 4), ("user-defined", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDayli.setStatus('current')
setTimeDstclTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12), )
if mibBuilder.loadTexts: setTimeDstclTable.setStatus('current')
setTimeDstclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setTimeDstclEve"))
if mibBuilder.loadTexts: setTimeDstclEntry.setStatus('current')
setTimeDstclEve = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("end", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTimeDstclEve.setStatus('current')
setTimeDstclInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(252, 253, 254, 255, 1, 2, 3, 4))).clone(namedValues=NamedValues(("e4-last", 252), ("e3-last", 253), ("e2-last", 254), ("last", 255), ("first", 1), ("second", 2), ("third", 3), ("fourth", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstclInd.setStatus('current')
setTimeDstclDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 0))).clone(namedValues=NamedValues(("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6), ("sunday", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstclDay.setStatus('current')
setTimeDstclMon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("january", 1), ("february", 2), ("march", 3), ("april", 4), ("may", 5), ("june", 6), ("july", 7), ("august", 8), ("september", 9), ("october", 10), ("november", 11), ("december", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstclMon.setStatus('current')
setTimeDstclHou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstclHou.setStatus('current')
setTimeDstclMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstclMin.setStatus('current')
setTimeDstclTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("utc", 1), ("lst", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstclTim.setStatus('current')
setTimeGetti = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeGetti.setStatus('current')
setVpn = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19))
setVpnOperating = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnOperating.setStatus('current')
setVpnNattoperati = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnNattoperati.setStatus('current')
setVpnSimplecertr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnSimplecertr.setStatus('current')
setVpnAllowremote = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAllowremote.setStatus('current')
setVpnEstablishsa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("only-with-keepalive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnEstablishsa.setStatus('current')
setVpnVpnpeersTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9), )
if mibBuilder.loadTexts: setVpnVpnpeersTable.setStatus('current')
setVpnVpnpeersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnVpnpeersPeer"))
if mibBuilder.loadTexts: setVpnVpnpeersEntry.setStatus('current')
setVpnVpnpeersPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersPeer.setStatus('current')
setVpnVpnpeersShti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersShti.setStatus('current')
setVpnVpnpeersExtr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersExtr.setStatus('current')
setVpnVpnpeersRemo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersRemo.setStatus('current')
setVpnVpnpeersRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersRtgt.setStatus('current')
setVpnVpnpeersLaye = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersLaye.setStatus('current')
setVpnVpnpeersDyna = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 8, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("icmp", 4), ("udp", 8), ("b-channel", 1), ("d-channel", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersDyna.setStatus('current')
setVpnVpnpeersIkee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("main-mode", 0), ("aggressive-mode", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersIkee.setStatus('current')
setVpnVpnpeersRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("manually", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersRule.setStatus('current')
setVpnVpnpeersDpdi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersDpdi.setStatus('current')
setVpnVpnpeersIkec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("client", 1), ("server", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersIkec.setStatus('current')
setVpnVpnpeersXaut = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("client", 1), ("server", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersXaut.setStatus('current')
setVpnAdditionalgTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12), )
if mibBuilder.loadTexts: setVpnAdditionalgTable.setStatus('current')
setVpnAdditionalgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnAdditionalgPeer"))
if mibBuilder.loadTexts: setVpnAdditionalgEntry.setStatus('current')
setVpnAdditionalgPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgPeer.setStatus('current')
setVpnAdditionalgRemotegateway1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway1.setStatus('current')
setVpnAdditionalgRtgtag1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag1.setStatus('current')
setVpnAdditionalgRemotegateway2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway2.setStatus('current')
setVpnAdditionalgRtgtag2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag2.setStatus('current')
setVpnAdditionalgRemotegateway3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway3.setStatus('current')
setVpnAdditionalgRtgtag3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag3.setStatus('current')
setVpnAdditionalgRemotegateway4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway4.setStatus('current')
setVpnAdditionalgRtgtag4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag4.setStatus('current')
setVpnAdditionalgRemotegateway5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway5.setStatus('current')
setVpnAdditionalgRtgtag5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag5.setStatus('current')
setVpnAdditionalgRemotegateway6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway6.setStatus('current')
setVpnAdditionalgRtgtag6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag6.setStatus('current')
setVpnAdditionalgRemotegateway7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway7.setStatus('current')
setVpnAdditionalgRtgtag7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag7.setStatus('current')
setVpnAdditionalgRemotegateway8 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway8.setStatus('current')
setVpnAdditionalgRtgtag8 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag8.setStatus('current')
setVpnAdditionalgRemotegateway9 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway9.setStatus('current')
setVpnAdditionalgRtgtag9 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag9.setStatus('current')
setVpnAdditionalgRemotegateway10 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway10.setStatus('current')
setVpnAdditionalgRtgtag10 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag10.setStatus('current')
setVpnAdditionalgRemotegateway11 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway11.setStatus('current')
setVpnAdditionalgRtgtag11 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag11.setStatus('current')
setVpnAdditionalgRemotegateway12 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway12.setStatus('current')
setVpnAdditionalgRtgtag12 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag12.setStatus('current')
setVpnAdditionalgRemotegateway13 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway13.setStatus('current')
setVpnAdditionalgRtgtag13 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag13.setStatus('current')
setVpnAdditionalgRemotegateway14 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway14.setStatus('current')
setVpnAdditionalgRtgtag14 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag14.setStatus('current')
setVpnAdditionalgRemotegateway15 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway15.setStatus('current')
setVpnAdditionalgRtgtag15 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag15.setStatus('current')
setVpnAdditionalgRemotegateway16 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway16.setStatus('current')
setVpnAdditionalgRtgtag16 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag16.setStatus('current')
setVpnAdditionalgBeginwith = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("last-used", 0), ("first", 1), ("random", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgBeginwith.setStatus('current')
setVpnLayerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7), )
if mibBuilder.loadTexts: setVpnLayerTable.setStatus('current')
setVpnLayerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnLayerName"))
if mibBuilder.loadTexts: setVpnLayerEntry.setStatus('current')
setVpnLayerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnLayerName.setStatus('current')
setVpnLayerPfsg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnLayerPfsg.setStatus('current')
setVpnLayerIkeg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnLayerIkeg.setStatus('current')
setVpnLayerIkep = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnLayerIkep.setStatus('current')
setVpnLayerIpse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnLayerIpse.setStatus('current')
setVpnLayerIkek = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnLayerIkek.setStatus('current')
setVpnProposals = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4))
setVpnProposalsIkeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11), )
if mibBuilder.loadTexts: setVpnProposalsIkeTable.setStatus('current')
setVpnProposalsIkeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnProposalsIkeName"))
if mibBuilder.loadTexts: setVpnProposalsIkeEntry.setStatus('current')
setVpnProposalsIkeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeName.setStatus('current')
setVpnProposalsIkeIkecrypta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 3, 6, 5, 1, 42))).clone(namedValues=NamedValues(("aes-cbc", 7), ("blowfish-cbc", 3), ("cast128-cbc", 6), ("e3des-cbc", 5), ("des-cbc", 1), ("null", 42)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeIkecrypta.setStatus('current')
setVpnProposalsIkeIkecryptk = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeIkecryptk.setStatus('current')
setVpnProposalsIkeIkeauthal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("md5", 1), ("sha1", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeIkeauthal.setStatus('current')
setVpnProposalsIkeIkeauthmo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("preshared-key", 1), ("rsa-signature", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeIkeauthmo.setStatus('current')
setVpnProposalsIkeLifetimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeLifetimes.setStatus('current')
setVpnProposalsIkeLifetimek = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeLifetimek.setStatus('current')
setVpnProposalsIpsecTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12), )
if mibBuilder.loadTexts: setVpnProposalsIpsecTable.setStatus('current')
setVpnProposalsIpsecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnProposalsIpsecName"))
if mibBuilder.loadTexts: setVpnProposalsIpsecEntry.setStatus('current')
setVpnProposalsIpsecName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecName.setStatus('current')
setVpnProposalsIpsecEncapsmod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 65001))).clone(namedValues=NamedValues(("tunnel", 1), ("transport", 2), ("mixed-lcos4", 65001)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecEncapsmod.setStatus('current')
setVpnProposalsIpsecEspcrypta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 12, 7, 6, 3, 2, 11))).clone(namedValues=NamedValues(("none", 0), ("aes-cbc", 12), ("blowfish-cbc", 7), ("cast128-cbc", 6), ("e3des-cbc", 3), ("des-cbc", 2), ("null", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecEspcrypta.setStatus('current')
setVpnProposalsIpsecEspcryptk = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecEspcryptk.setStatus('current')
setVpnProposalsIpsecEspauthal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("hmac-md5", 1), ("hmac-sha1", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecEspauthal.setStatus('current')
setVpnProposalsIpsecAhauthalg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("hmac-md5", 1), ("hmac-sha1", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecAhauthalg.setStatus('current')
setVpnProposalsIpsecIpcompalg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("deflate", 2), ("lzs", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecIpcompalg.setStatus('current')
setVpnProposalsIpsecLifetimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecLifetimes.setStatus('current')
setVpnProposalsIpsecLifetimek = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecLifetimek.setStatus('current')
setVpnProposalsIkeproTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9), )
if mibBuilder.loadTexts: setVpnProposalsIkeproTable.setStatus('current')
setVpnProposalsIkeproEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnProposalsIkeproIkeproposall"))
if mibBuilder.loadTexts: setVpnProposalsIkeproEntry.setStatus('current')
setVpnProposalsIkeproIkeproposall = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposall.setStatus('current')
setVpnProposalsIkeproIkeproposal1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal1.setStatus('current')
setVpnProposalsIkeproIkeproposal2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal2.setStatus('current')
setVpnProposalsIkeproIkeproposal3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal3.setStatus('current')
setVpnProposalsIkeproIkeproposal4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal4.setStatus('current')
setVpnProposalsIkeproIkeproposal5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal5.setStatus('current')
setVpnProposalsIkeproIkeproposal6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal6.setStatus('current')
setVpnProposalsIkeproIkeproposal7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal7.setStatus('current')
setVpnProposalsIkeproIkeproposal8 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal8.setStatus('current')
setVpnProposalsIpsecpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10), )
if mibBuilder.loadTexts: setVpnProposalsIpsecpTable.setStatus('current')
setVpnProposalsIpsecpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnProposalsIpsecpIpsecproposall"))
if mibBuilder.loadTexts: setVpnProposalsIpsecpEntry.setStatus('current')
setVpnProposalsIpsecpIpsecproposall = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposall.setStatus('current')
setVpnProposalsIpsecpIpsecproposal1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal1.setStatus('current')
setVpnProposalsIpsecpIpsecproposal2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal2.setStatus('current')
setVpnProposalsIpsecpIpsecproposal3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal3.setStatus('current')
setVpnProposalsIpsecpIpsecproposal4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal4.setStatus('current')
setVpnProposalsIpsecpIpsecproposal5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal5.setStatus('current')
setVpnProposalsIpsecpIpsecproposal6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal6.setStatus('current')
setVpnProposalsIpsecpIpsecproposal7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal7.setStatus('current')
setVpnProposalsIpsecpIpsecproposal8 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal8.setStatus('current')
setVpnCertificate = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5))
setVpnCertificateIkeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3), )
if mibBuilder.loadTexts: setVpnCertificateIkeTable.setStatus('current')
setVpnCertificateIkeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnCertificateIkeName"))
if mibBuilder.loadTexts: setVpnCertificateIkeEntry.setStatus('current')
setVpnCertificateIkeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnCertificateIkeName.setStatus('current')
setVpnCertificateIkeLocalidtyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 9, 11))).clone(namedValues=NamedValues(("no-identity", 0), ("ip-address", 1), ("domain-name", 2), ("email-address", 3), ("distinguished-name", 9), ("key-id", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnCertificateIkeLocalidtyp.setStatus('current')
setVpnCertificateIkeLocalident = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnCertificateIkeLocalident.setStatus('current')
setVpnCertificateIkeRemoteidty = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 9, 11))).clone(namedValues=NamedValues(("no-identity", 0), ("ip-address", 1), ("domain-name", 2), ("email-address", 3), ("distinguished-name", 9), ("key-id", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnCertificateIkeRemoteidty.setStatus('current')
setVpnCertificateIkeRemoteiden = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnCertificateIkeRemoteiden.setStatus('current')
setVpnCertificateIkeSharedsec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnCertificateIkeSharedsec.setStatus('current')
setVpnCertificateIkeSharedsecf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnCertificateIkeSharedsecf.setStatus('current')
setVpnIsakmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3))
setVpnIsakmpTimTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4), )
if mibBuilder.loadTexts: setVpnIsakmpTimTable.setStatus('current')
setVpnIsakmpTimEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnIsakmpTimIdx"))
if mibBuilder.loadTexts: setVpnIsakmpTimEntry.setStatus('current')
setVpnIsakmpTimIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setVpnIsakmpTimIdx.setStatus('current')
setVpnIsakmpTimRetrlim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnIsakmpTimRetrlim.setStatus('current')
setVpnIsakmpTimRetrtim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnIsakmpTimRetrtim.setStatus('current')
setVpnIsakmpTimRetrtimu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnIsakmpTimRetrtimu.setStatus('current')
setVpnIsakmpTimRetrtimm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnIsakmpTimRetrtimm.setStatus('current')
setVpnIsakmpTimExptim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnIsakmpTimExptim.setStatus('current')
setVpnMainmodepro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnMainmodepro.setStatus('current')
setVpnMainmodeike = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnMainmodeike.setStatus('current')
setVpnAggrmodepro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAggrmodepro.setStatus('current')
setVpnAggrmodeike = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAggrmodeike.setStatus('current')
setVpnQuickmodepr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnQuickmodepr.setStatus('current')
setVpnQuickmodepf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnQuickmodepf.setStatus('current')
setVpnQuickmodesh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnQuickmodesh.setStatus('current')
setVpnLegacydynvp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnLegacydynvp.setStatus('current')
setHttp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21))
setHttpDoc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpDoc.setStatus('current')
setHttpUse = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpUse.setStatus('current')
setHttpFon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpFon.setStatus('current')
setHttpErr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("standard", 0), ("nifty", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpErr.setStatus('current')
setHttpPor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpPor.setStatus('current')
setHttpSsl = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpSsl.setStatus('current')
setHttpSes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpSes.setStatus('current')
setHttpSta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal-design", 0), ("design-for-small-resolutions", 1), ("design-with-high-contrast", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpSta.setStatus('current')
setHttpShoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 14), )
if mibBuilder.loadTexts: setHttpShoTable.setStatus('current')
setHttpShoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 14, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setHttpShoDev"))
if mibBuilder.loadTexts: setHttpShoEntry.setStatus('current')
setHttpShoDev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20))).clone(namedValues=NamedValues(("cpu", 1), ("memory", 2), ("ethernet-ports", 5), ("troughput-ethernet", 6), ("umts-modem-interface", 7), ("router", 8), ("firewall", 9), ("dhcp", 10), ("dns", 11), ("vpn", 12), ("isdn", 14), ("dsl-dslol", 15), ("time", 18), ("ip-addresses", 19), ("operating-time", 20)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpShoDev.setStatus('current')
setHttpShoPos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 14, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpShoPos.setStatus('current')
setHttpHtt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("activated", 0), ("only-for-wan", 1), ("deactivated", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpHtt.setStatus('current')
setHttpMax = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpMax.setStatus('current')
setHttpTun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpTun.setStatus('current')
setHttpRol = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20))
setHttpRolOperating = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolOperating.setStatus('current')
setHttpRolTitle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolTitle.setStatus('current')
setHttpRolVariablesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3), )
if mibBuilder.loadTexts: setHttpRolVariablesTable.setStatus('current')
setHttpRolVariablesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setHttpRolVariablesInd"))
if mibBuilder.loadTexts: setHttpRolVariablesEntry.setStatus('current')
setHttpRolVariablesInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesInd.setStatus('current')
setHttpRolVariablesIde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesIde.setStatus('current')
setHttpRolVariablesTit = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesTit.setStatus('current')
setHttpRolVariablesTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("label", 0), ("integer", 1), ("string", 2), ("password", 3), ("checkmark", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesTyp.setStatus('current')
setHttpRolVariablesMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesMin.setStatus('current')
setHttpRolVariablesMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesMax.setStatus('current')
setHttpRolVariablesDef = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesDef.setStatus('current')
setHttpRolRenumberv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolRenumberv.setStatus('current')
setHttpRolActionsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 4), )
if mibBuilder.loadTexts: setHttpRolActionsTable.setStatus('current')
setHttpRolActionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setHttpRolActionsInd"))
if mibBuilder.loadTexts: setHttpRolActionsEntry.setStatus('current')
setHttpRolActionsInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolActionsInd.setStatus('current')
setHttpRolActionsAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolActionsAct.setStatus('current')
setHttpRolActionsDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolActionsDes.setStatus('current')
setHttpRolRenumbera = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolRenumbera.setStatus('current')
setHttpRolDisplayco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 7), Bits().clone(namedValues=NamedValues(("isdn", 30), ("vpn", 29), ("dsl", 28)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolDisplayco.setStatus('current')
setSysl = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22))
setSyslOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslOpe.setStatus('current')
setSyslSerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2), )
if mibBuilder.loadTexts: setSyslSerTable.setStatus('current')
setSyslSerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setSyslSerIdx"))
if mibBuilder.loadTexts: setSyslSerEntry.setStatus('current')
setSyslSerIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslSerIdx.setStatus('current')
setSyslSerIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslSerIpa.setStatus('current')
setSyslSerSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslSerSou.setStatus('current')
setSyslSerLev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslSerLev.setStatus('current')
setSyslSerLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslSerLoo.setStatus('current')
setSyslFacTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 3), )
if mibBuilder.loadTexts: setSyslFacTable.setStatus('current')
setSyslFacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setSyslFacSou"))
if mibBuilder.loadTexts: setSyslFacEntry.setStatus('current')
setSyslFacSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128))).clone(namedValues=NamedValues(("system", 1), ("login", 2), ("systemtime", 4), ("console-login", 8), ("connections", 16), ("accounting", 32), ("administration", 64), ("router", 128)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSyslFacSou.setStatus('current')
setSyslFacFac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("kern", 0), ("user", 1), ("mail", 2), ("daemon", 3), ("auth", 4), ("syslog", 5), ("lpr", 6), ("news", 7), ("uucp", 8), ("cron", 9), ("authpriv", 10), ("local0", 16), ("local1", 17), ("local2", 18), ("local3", 19), ("local4", 20), ("local5", 21), ("local6", 22), ("local7", 23)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslFacFac.setStatus('current')
setSyslPor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslPor.setStatus('current')
setSyslMes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("oldest-on-top", 0), ("newest-on-top", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslMes.setStatus('current')
setInte = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23))
setInteModem = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40))
setInteModemRingcou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemRingcou.setStatus('current')
setInteModemEchooff = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemEchooff.setStatus('current')
setInteModemResetco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemResetco.setStatus('current')
setInteModemInitcom = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemInitcom.setStatus('current')
setInteModemRequest = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemRequest.setStatus('current')
setInteModemInitdia = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemInitdia.setStatus('current')
setInteModemDialcom = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemDialcom.setStatus('current')
setInteModemInitans = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemInitans.setStatus('current')
setInteModemAnswerc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemAnswerc.setStatus('current')
setInteModemDisconn = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemDisconn.setStatus('current')
setInteModemEscapes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemEscapes.setStatus('current')
setInteModemEscapep = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemEscapep.setStatus('current')
setInteModemCycleti = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemCycleti.setStatus('current')
setInteModemAtpollc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemAtpollc.setStatus('current')
setInteMobile = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41))
setInteMobileProTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1), )
if mibBuilder.loadTexts: setInteMobileProTable.setStatus('current')
setInteMobileProEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setInteMobileProProf"))
if mibBuilder.loadTexts: setInteMobileProEntry.setStatus('current')
setInteMobileProProf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileProProf.setStatus('current')
setInteMobileProPin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileProPin.setStatus('current')
setInteMobileProApn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileProApn.setStatus('current')
setInteMobileProNetw = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileProNetw.setStatus('current')
setInteMobileProSele = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("auto", 0), ("manual", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileProSele.setStatus('current')
setInteMobileProMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("umts", 1), ("gprs", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileProMode.setStatus('current')
setInteMobileProQosd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileProQosd.setStatus('current')
setInteMobileProQosu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileProQosu.setStatus('current')
setInteMobileCon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("none", 0), ("ppp", 1), ("ppp-plus-ip", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileCon.setStatus('current')
setInteMobileTri = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileTri.setStatus('current')
setInteMobileHis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileHis.setStatus('current')
setInteMobileSys = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileSys.setStatus('current')
setInteMobileSca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileSca.setStatus('current')
setInteMobileInp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileInp.setStatus('current')
setInteEthernTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30), )
if mibBuilder.loadTexts: setInteEthernTable.setStatus('current')
setInteEthernEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setInteEthernPor"))
if mibBuilder.loadTexts: setInteEthernEntry.setStatus('current')
setInteEthernPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 0))).clone(namedValues=NamedValues(("wan", 1), ("eth-1", 2), ("eth-2", 3), ("eth-3", 4), ("eth-4", 5), ("unknown", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInteEthernPor.setStatus('current')
setInteEthernAss = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(512, 513, 514, 515, 0, 1, 2, 3, 65533, 65534, 65535))).clone(namedValues=NamedValues(("dsl-1", 512), ("dsl-2", 513), ("dsl-3", 514), ("dsl-4", 515), ("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("idle", 65533), ("monitor", 65534), ("power-down", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteEthernAss.setStatus('current')
setInteEthernCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("auto", 0), ("e10b-t", 1), ("fd10b-tx", 2), ("e100b-tx", 3), ("fd100b-tx", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteEthernCon.setStatus('current')
setInteEthernMdi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("mdi", 1), ("mdix", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteEthernMdi.setStatus('current')
setInteEthernPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteEthernPri.setStatus('current')
setInteDslTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4), )
if mibBuilder.loadTexts: setInteDslTable.setStatus('current')
setInteDslEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setInteDslIfc"))
if mibBuilder.loadTexts: setInteDslEntry.setStatus('current')
setInteDslIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInteDslIfc.setStatus('current')
setInteDslOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 16))).clone(namedValues=NamedValues(("no", 0), ("yes", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteDslOpe.setStatus('current')
setInteDslUps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteDslUps.setStatus('current')
setInteDslExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteDslExt.setStatus('current')
setInteDslDow = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteDslDow.setStatus('current')
setInteDslTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInteDslTyp.setStatus('current')
setInteS0Table = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1), )
if mibBuilder.loadTexts: setInteS0Table.setStatus('current')
setInteS0Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setInteS0Ifc"))
if mibBuilder.loadTexts: setInteS0Entry.setStatus('current')
setInteS0Ifc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInteS0Ifc.setStatus('current')
setInteS0Prot = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 16, 255))).clone(namedValues=NamedValues(("no", 0), ("dss1", 1), ("e1tr6", 2), ("p2p-dss1", 4), ("grp0", 16), ("auto", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteS0Prot.setStatus('current')
setInteS0Llbc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("b1", 1), ("b2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteS0Llbc.setStatus('current')
setInteS0Dial = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteS0Dial.setStatus('current')
setInteS0Maxi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1, 0))).clone(namedValues=NamedValues(("zero", 2), ("one", 1), ("two", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteS0Maxi.setStatus('current')
setInteS0Maxo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1, 0))).clone(namedValues=NamedValues(("zero", 2), ("one", 1), ("two", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteS0Maxo.setStatus('current')
setInteS0Type = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInteS0Type.setStatus('current')
setInteModemmTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7), )
if mibBuilder.loadTexts: setInteModemmTable.setStatus('current')
setInteModemmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setInteModemmIfc"))
if mibBuilder.loadTexts: setInteModemmEntry.setStatus('current')
setInteModemmIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInteModemmIfc.setStatus('current')
setInteModemmOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("modem", 1), ("umts-gprs", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemmOpe.setStatus('current')
setInteModemmTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInteModemmTyp.setStatus('current')
setInteModemmDat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(19200, 38400, 57600, 115200))).clone(namedValues=NamedValues(("e19200", 19200), ("e38400", 38400), ("e57600", 57600), ("e115200", 115200)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemmDat.setStatus('current')
setInteModemmPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemmPro.setStatus('current')
setRadi = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 25))
setRadiAutht = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 25, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiAutht.setStatus('current')
setRadiAuthr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 25, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiAuthr.setStatus('current')
setRadiBacku = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 25, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("block", 0), ("cyclic", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiBacku.setStatus('current')
setNtp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26))
setNtpSer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpSer.setStatus('current')
setNtpBcm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpBcm.setStatus('current')
setNtpBci = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpBci.setStatus('current')
setNtpRqi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpRqi.setStatus('current')
setNtpRqt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpRqt.setStatus('current')
setNtpRqaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 11), )
if mibBuilder.loadTexts: setNtpRqaTable.setStatus('current')
setNtpRqaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setNtpRqaRqa"))
if mibBuilder.loadTexts: setNtpRqaEntry.setStatus('current')
setNtpRqaRqa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpRqaRqa.setStatus('current')
setNtpRqaLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpRqaLoo.setStatus('current')
setMail = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27))
setMailSmtps = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailSmtps.setStatus('current')
setMailSmtpp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailSmtpp.setStatus('current')
setMailPop3s = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailPop3s.setStatus('current')
setMailPop3p = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailPop3p.setStatus('current')
setMailLoopb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailLoopb.setStatus('current')
setMailUsern = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailUsern.setStatus('current')
setMailPassw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailPassw.setStatus('current')
setMailEmail = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailEmail.setStatus('current')
setMailSenda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailSenda.setStatus('current')
setMailHoldt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailHoldt.setStatus('current')
setMailBuffe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailBuffe.setStatus('current')
setPppo = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31))
setPppoOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoOpe.setStatus('current')
setPppoNamTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 2), )
if mibBuilder.loadTexts: setPppoNamTable.setStatus('current')
setPppoNamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setPppoNamPee"))
if mibBuilder.loadTexts: setPppoNamEntry.setStatus('current')
setPppoNamPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoNamPee.setStatus('current')
setPppoNamSht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoNamSht.setStatus('current')
setPppoNamMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoNamMac.setStatus('current')
setPppoSer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoSer.setStatus('current')
setPppoSes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoSes.setStatus('current')
setPppoPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 5), )
if mibBuilder.loadTexts: setPppoPorTable.setStatus('current')
setPppoPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setPppoPorPor"))
if mibBuilder.loadTexts: setPppoPorEntry.setStatus('current')
setPppoPorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPppoPorPor.setStatus('current')
setPppoPorEna = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoPorEna.setStatus('current')
setVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32))
setVlanOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanOpe.setStatus('current')
setVlanNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 1), )
if mibBuilder.loadTexts: setVlanNetTable.setStatus('current')
setVlanNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVlanNetNam"))
if mibBuilder.loadTexts: setVlanNetEntry.setStatus('current')
setVlanNetNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanNetNam.setStatus('current')
setVlanNetVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanNetVla.setStatus('current')
setVlanNetPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanNetPor.setStatus('current')
setVlanTag = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanTag.setStatus('current')
setVlanPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2), )
if mibBuilder.loadTexts: setVlanPorTable.setStatus('current')
setVlanPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVlanPorPort"))
if mibBuilder.loadTexts: setVlanPorEntry.setStatus('current')
setVlanPorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setVlanPorPort.setStatus('current')
setVlanPorTaggi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ingress-mixed", 0), ("never", 1), ("mixed", 2), ("always", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanPorTaggi.setStatus('current')
setVlanPorAllow = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanPorAllow.setStatus('current')
setVlanPorPortv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanPorPortv.setStatus('current')
setPrin = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34))
setPrinPriTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1), )
if mibBuilder.loadTexts: setPrinPriTable.setStatus('current')
setPrinPriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setPrinPriPri"))
if mibBuilder.loadTexts: setPrinPriEntry.setStatus('current')
setPrinPriPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinPriPri.setStatus('current')
setPrinPriRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinPriRaw.setStatus('current')
setPrinPriLpd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinPriLpd.setStatus('current')
setPrinPriAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinPriAct.setStatus('current')
setPrinPriBid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinPriBid.setStatus('current')
setPrinPriRes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinPriRes.setStatus('current')
setPrinAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 2), )
if mibBuilder.loadTexts: setPrinAccTable.setStatus('current')
setPrinAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setPrinAccIpa"), (0, "LANCOM-1711-MIB", "setPrinAccIpn"), (0, "LANCOM-1711-MIB", "setPrinAccRtg"))
if mibBuilder.loadTexts: setPrinAccEntry.setStatus('current')
setPrinAccIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinAccIpa.setStatus('current')
setPrinAccIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinAccIpn.setStatus('current')
setPrinAccRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinAccRtg.setStatus('current')
setCert = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39))
setCertSce = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1))
setCertSceSce = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceSce.setStatus('current')
setCertSceRet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceRet.setStatus('current')
setCertSceChe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceChe.setStatus('current')
setCertSceDev = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceDev.setStatus('current')
setCertSceCac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCac.setStatus('current')
setCertSceCasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6), )
if mibBuilder.loadTexts: setCertSceCasTable.setStatus('current')
setCertSceCasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCertSceCasName"))
if mibBuilder.loadTexts: setCertSceCasEntry.setStatus('current')
setCertSceCasName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasName.setStatus('current')
setCertSceCasUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasUrl.setStatus('current')
setCertSceCasDn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasDn.setStatus('current')
setCertSceCasEncalg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("des", 0), ("e3des", 1), ("blowfish", 2), ("aes128", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasEncalg.setStatus('current')
setCertSceCasIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasIdentifier.setStatus('current')
setCertSceCasRaautoapprove = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasRaautoapprove.setStatus('current')
setCertSceCasCasignaturealg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("md5", 0), ("sha1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasCasignaturealg.setStatus('current')
setCertSceCasCafingerprinta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("sha1", 1), ("md5", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasCafingerprinta.setStatus('current')
setCertSceCasCafingerprint = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasCafingerprint.setStatus('current')
setCertSceCasApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 0))).clone(namedValues=NamedValues(("general", 2), ("vpn", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasApplication.setStatus('current')
setCertSceCasLoopbackaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasLoopbackaddr.setStatus('current')
setCertSceCerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7), )
if mibBuilder.loadTexts: setCertSceCerTable.setStatus('current')
setCertSceCerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCertSceCerName"))
if mibBuilder.loadTexts: setCertSceCerEntry.setStatus('current')
setCertSceCerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerName.setStatus('current')
setCertSceCerCadn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerCadn.setStatus('current')
setCertSceCerSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerSubject.setStatus('current')
setCertSceCerChalleng = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerChalleng.setStatus('current')
setCertSceCerSubjecta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerSubjecta.setStatus('current')
setCertSceCerKeyusage = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerKeyusage.setStatus('current')
setCertSceCerExtended = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerExtended.setStatus('current')
setCertSceCerDevicece = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerDevicece.setStatus('current')
setCertSceCerApplicat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("vpn", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerApplicat.setStatus('current')
setCertSceRei = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceRei.setStatus('current')
setCertSceUpd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceUpd.setStatus('current')
setCertSceCle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCle.setStatus('current')
setCertCrl = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3))
setCertCrlCrl = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertCrlCrl.setStatus('current')
setCertCrlAlt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertCrlAlt.setStatus('current')
setCertCrlUse = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("fallback", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertCrlUse.setStatus('current')
setCertCrlUpd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertCrlUpd.setStatus('current')
setCertCrlPre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertCrlPre.setStatus('current')
setCertCrlVal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertCrlVal.setStatus('current')
setCertCrlRef = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertCrlRef.setStatus('current')
setComp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52))
setCompDevTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 1), )
if mibBuilder.loadTexts: setCompDevTable.setStatus('current')
setCompDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCompDevDev"))
if mibBuilder.loadTexts: setCompDevEntry.setStatus('current')
setCompDevDev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 17, 26, 39, 30, 31, 23, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("option-icon", 17), ("novatel-merlin-mc950d", 26), ("sierra-compass-885", 39), ("sierra-aircard-875u", 30), ("huawei-e172-e220-e870", 31), ("e4g-systems-uxs1", 23), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompDevDev.setStatus('current')
setCompDevSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wan", 1), ("com-port-server", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompDevSer.setStatus('current')
setCompWan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 3))
setCompWanDevTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 3, 1), )
if mibBuilder.loadTexts: setCompWanDevTable.setStatus('current')
setCompWanDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 3, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCompWanDevDev"))
if mibBuilder.loadTexts: setCompWanDevEntry.setStatus('current')
setCompWanDevDev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 17, 26, 39, 30, 31, 23, 33, 34, 35))).clone(namedValues=NamedValues(("outband-modem", 2), ("option-icon", 17), ("novatel-merlin-mc950d", 26), ("sierra-compass-885", 39), ("sierra-aircard-875u", 30), ("huawei-e172-e220-e870", 31), ("e4g-systems-uxs1", 23), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompWanDevDev.setStatus('current')
setCompWanDevOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompWanDevOpe.setStatus('current')
setCompCom = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2))
setCompComOpeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 1), )
if mibBuilder.loadTexts: setCompComOpeTable.setStatus('current')
setCompComOpeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCompComOpeDev"), (0, "LANCOM-1711-MIB", "setCompComOpePor"))
if mibBuilder.loadTexts: setCompComOpeEntry.setStatus('current')
setCompComOpeDev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComOpeDev.setStatus('current')
setCompComOpePor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComOpePor.setStatus('current')
setCompComOpeOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComOpeOpe.setStatus('current')
setCompComComTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2), )
if mibBuilder.loadTexts: setCompComComTable.setStatus('current')
setCompComComEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCompComComDevice"), (0, "LANCOM-1711-MIB", "setCompComComPortnu"))
if mibBuilder.loadTexts: setCompComComEntry.setStatus('current')
setCompComComDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComDevice.setStatus('current')
setCompComComPortnu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComPortnu.setStatus('current')
setCompComComBitrat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(110, 300, 600, 1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200, 125000, 230400))).clone(namedValues=NamedValues(("e110", 110), ("e300", 300), ("e600", 600), ("e1200", 1200), ("e2400", 2400), ("e4800", 4800), ("e9600", 9600), ("e19200", 19200), ("e38400", 38400), ("e57600", 57600), ("e115200", 115200), ("e125000", 125000), ("e230400", 230400)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComBitrat.setStatus('current')
setCompComComDatabi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 8))).clone(namedValues=NamedValues(("e7", 7), ("e8", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComDatabi.setStatus('current')
setCompComComParity = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComParity.setStatus('current')
setCompComComStopbi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("e1", 1), ("e2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComStopbi.setStatus('current')
setCompComComHandsh = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("rts-cts", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComHandsh.setStatus('current')
setCompComComReadyc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dtr", 0), ("data", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComReadyc.setStatus('current')
setCompComComReadyd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComReadyd.setStatus('current')
setCompComNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3), )
if mibBuilder.loadTexts: setCompComNetTable.setStatus('current')
setCompComNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCompComNetDevicety"), (0, "LANCOM-1711-MIB", "setCompComNetPortnumb"))
if mibBuilder.loadTexts: setCompComNetEntry.setStatus('current')
setCompComNetDevicety = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetDevicety.setStatus('current')
setCompComNetPortnumb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetPortnumb.setStatus('current')
setCompComNetTcpmode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("server", 0), ("client", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetTcpmode.setStatus('current')
setCompComNetListenpo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetListenpo.setStatus('current')
setCompComNetConnecth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetConnecth.setStatus('current')
setCompComNetConnectp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetConnectp.setStatus('current')
setCompComNetLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetLoopback.setStatus('current')
setCompComNetRfc2217e = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetRfc2217e.setStatus('current')
setCompComNetNewlinec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("crlf", 0), ("cr", 1), ("lf", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetNewlinec.setStatus('current')
setTaca = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54))
setTacaAuthentication = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("deactivated", 0), ("activated", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaAuthentication.setStatus('current')
setTacaAuthorisation = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("deactivated", 0), ("activated", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaAuthorisation.setStatus('current')
setTacaAccounting = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("deactivated", 0), ("activated", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaAccounting.setStatus('current')
setTacaServerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 9), )
if mibBuilder.loadTexts: setTacaServerTable.setStatus('current')
setTacaServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setTacaServerSer"))
if mibBuilder.loadTexts: setTacaServerEntry.setStatus('current')
setTacaServerSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaServerSer.setStatus('current')
setTacaServerLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaServerLoo.setStatus('current')
setTacaServerCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("deactivated", 0), ("activated", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaServerCom.setStatus('current')
setTacaSharedsecret = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaSharedsecret.setStatus('current')
setTacaEncryption = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("deactivated", 0), ("activated", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaEncryption.setStatus('current')
setTacaFallbacktolocalus = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("allowed", 0), ("prohibited", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaFallbacktolocalus.setStatus('current')
setTacaSnmpgetrequestsau = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("only-for-setup-tree", 0), ("all", 1), ("none", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaSnmpgetrequestsau.setStatus('current')
setTacaSnmpgetrequestsac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("only-for-setup-tree", 0), ("all", 1), ("none", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaSnmpgetrequestsac.setStatus('current')
setPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36))
setPerfRttmonaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2), )
if mibBuilder.loadTexts: setPerfRttmonaTable.setStatus('current')
setPerfRttmonaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setPerfRttmonaInd"))
if mibBuilder.loadTexts: setPerfRttmonaEntry.setStatus('current')
setPerfRttmonaInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmonaInd.setStatus('current')
setPerfRttmonaTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(9))).clone(namedValues=NamedValues(("jitter", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmonaTyp.setStatus('current')
setPerfRttmonaFre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmonaFre.setStatus('current')
setPerfRttmonaTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmonaTim.setStatus('current')
setPerfRttmonaSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("not-in-service", 2), ("not-ready", 3), ("create", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmonaSta.setStatus('current')
setPerfRttmoneTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3), )
if mibBuilder.loadTexts: setPerfRttmoneTable.setStatus('current')
setPerfRttmoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setPerfRttmoneIndex"))
if mibBuilder.loadTexts: setPerfRttmoneEntry.setStatus('current')
setPerfRttmoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 255), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmoneIndex.setStatus('current')
setPerfRttmoneProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("echo", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmoneProtocol.setStatus('current')
setPerfRttmoneDestinationa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmoneDestinationa.setStatus('current')
setPerfRttmonePacketsize = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmonePacketsize.setStatus('current')
setPerfRttmoneDestinationp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmoneDestinationp.setStatus('current')
setPerfRttmoneInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmoneInterval.setStatus('current')
setPerfRttmonePacketcount = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmonePacketcount.setStatus('current')
setPerfRttmonsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4), )
if mibBuilder.loadTexts: setPerfRttmonsTable.setStatus('current')
setPerfRttmonsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setPerfRttmonsIndex"))
if mibBuilder.loadTexts: setPerfRttmonsEntry.setStatus('current')
setPerfRttmonsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 255), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsIndex.setStatus('current')
setPerfRttmonsCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsCompletions.setStatus('current')
setPerfRttmonsRttcount = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsRttcount.setStatus('current')
setPerfRttmonsRttsum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsRttsum.setStatus('current')
setPerfRttmonsRttmin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsRttmin.setStatus('current')
setPerfRttmonsRttmax = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsRttmax.setStatus('current')
setPerfRttmonsJitterminpossd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJitterminpossd.setStatus('current')
setPerfRttmonsJittermaxpossd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittermaxpossd.setStatus('current')
setPerfRttmonsJittercountposs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittercountposs.setStatus('current')
setPerfRttmonsJittersumpossd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittersumpossd.setStatus('current')
setPerfRttmonsJitterminposds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJitterminposds.setStatus('current')
setPerfRttmonsJittermaxposds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittermaxposds.setStatus('current')
setPerfRttmonsJittercountposd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittercountposd.setStatus('current')
setPerfRttmonsJittersumposds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittersumposds.setStatus('current')
setPerfRttmonsJitterminnegsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJitterminnegsd.setStatus('current')
setPerfRttmonsJittermaxnegsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittermaxnegsd.setStatus('current')
setPerfRttmonsJittercountnegs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittercountnegs.setStatus('current')
setPerfRttmonsJittersumnegsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittersumnegsd.setStatus('current')
setPerfRttmonsJitterminnegds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJitterminnegds.setStatus('current')
setPerfRttmonsJittermaxnegds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittermaxnegds.setStatus('current')
setPerfRttmonsJittercountnegd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittercountnegd.setStatus('current')
setPerfRttmonsJittersumnegds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittersumnegds.setStatus('current')
setPerfRttmonsPacketlosssd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsPacketlosssd.setStatus('current')
setPerfRttmonsPacketlossds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsPacketlossds.setStatus('current')
setPerfRttmonsAveragejitter = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsAveragejitter.setStatus('current')
setPerfRttmonsAveragejittersd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsAveragejittersd.setStatus('current')
setPerfRttmonsAveragejitterds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsAveragejitterds.setStatus('current')
setEcho = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35))
setEchoOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchoOpe.setStatus('current')
setEchoAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2), )
if mibBuilder.loadTexts: setEchoAccTable.setStatus('current')
setEchoAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setEchoAccIpa"), (0, "LANCOM-1711-MIB", "setEchoAccNet"))
if mibBuilder.loadTexts: setEchoAccEntry.setStatus('current')
setEchoAccIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchoAccIpa.setStatus('current')
setEchoAccNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchoAccNet.setStatus('current')
setEchoAccPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("tcp", 1), ("udp", 2), ("tcp-plus-udp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchoAccPro.setStatus('current')
setEchoAccAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchoAccAct.setStatus('current')
setEchoAccCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchoAccCom.setStatus('current')
setEchoTcp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchoTcp.setStatus('current')
firVerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1), )
if mibBuilder.loadTexts: firVerTable.setStatus('current')
firVerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "firVerIfc"))
if mibBuilder.loadTexts: firVerEntry.setStatus('current')
firVerIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ifc", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firVerIfc.setStatus('current')
firVerMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firVerMod.setStatus('current')
firVerVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firVerVer.setStatus('current')
firVerSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firVerSer.setStatus('current')
firTabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2), )
if mibBuilder.loadTexts: firTabTable.setStatus('current')
firTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "firTabPos"))
if mibBuilder.loadTexts: firTabEntry.setStatus('current')
firTabPos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabPos.setStatus('current')
firTabSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1, 0, 5, 4))).clone(namedValues=NamedValues(("loader", 2), ("active", 1), ("inactive", 0), ("minimal-plus-active", 5), ("minimal-plus-inactive", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firTabSta.setStatus('current')
firTabVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabVer.setStatus('current')
firTabDat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabDat.setStatus('current')
firTabSiz = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabSiz.setStatus('current')
firTabInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabInd.setStatus('current')
firMod = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("immediate", 0), ("login", 1), ("manual", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firMod.setStatus('current')
firTim = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firTim.setStatus('current')
firFea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 34))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firFea.setStatus('current')
othMan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4, 1))
othManCon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: othManCon.setStatus('current')
othManDis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: othManDis.setStatus('current')
othBoo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: othBoo.setStatus('current')
othCol = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: othCol.setStatus('current')
trapgrp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0))
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0))
trpStatChan = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 1)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staWanConnectio"), ("LANCOM-1711-MIB", "staChanState"), ("LANCOM-1711-MIB", "staChanApp"), ("LANCOM-1711-MIB", "staChanMode"), ("LANCOM-1711-MIB", "staChanCause"), ("LANCOM-1711-MIB", "staChanNumbe"), ("LANCOM-1711-MIB", "staChanSubad"), ("LANCOM-1711-MIB", "staChanCharg"), ("LANCOM-1711-MIB", "staChanExtra"), ("LANCOM-1711-MIB", "staChanConnt"), ("LANCOM-1711-MIB", "staChanConns"), ("LANCOM-1711-MIB", "staChanIsdnd"), ("LANCOM-1711-MIB", "staChanPhcha"), ("LANCOM-1711-MIB", "staChanPptpc"), ("LANCOM-1711-MIB", "staChanVpnco"))
if mibBuilder.loadTexts: trpStatChan.setStatus('current')
trpFwUplStart = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 4)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
if mibBuilder.loadTexts: trpFwUplStart.setStatus('current')
trpUplSucc = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 5)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"), ("LANCOM-1711-MIB", "staConfEventlogInfo1"), ("LANCOM-1711-MIB", "staConfEventlogInfo2"))
if mibBuilder.loadTexts: trpUplSucc.setStatus('current')
trpUplFailTo = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 6)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"), ("LANCOM-1711-MIB", "staConfEventlogInfo1"), ("LANCOM-1711-MIB", "staConfEventlogInfo2"))
if mibBuilder.loadTexts: trpUplFailTo.setStatus('current')
trpUplFailIncl = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 7)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"), ("LANCOM-1711-MIB", "staConfEventlogInfo1"), ("LANCOM-1711-MIB", "staConfEventlogInfo2"))
if mibBuilder.loadTexts: trpUplFailIncl.setStatus('current')
trpUplFailBadDev = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 8)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"), ("LANCOM-1711-MIB", "staConfEventlogInfo1"), ("LANCOM-1711-MIB", "staConfEventlogInfo2"))
if mibBuilder.loadTexts: trpUplFailBadDev.setStatus('current')
trpLogin = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 9)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
if mibBuilder.loadTexts: trpLogin.setStatus('current')
trpLogout = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 10)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
if mibBuilder.loadTexts: trpLogout.setStatus('current')
trpCnfUplStart = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 11)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
if mibBuilder.loadTexts: trpCnfUplStart.setStatus('current')
trpCnfDnlStart = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 12)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
if mibBuilder.loadTexts: trpCnfDnlStart.setStatus('current')
trpCnfDnlSucc = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 13)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"), ("LANCOM-1711-MIB", "staConfEventlogInfo1"), ("LANCOM-1711-MIB", "staConfEventlogInfo2"))
if mibBuilder.loadTexts: trpCnfDnlSucc.setStatus('current')
trpIpFwFlt = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 26)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staIproLogtablSyst"), ("LANCOM-1711-MIB", "staIproLogtablSrca"), ("LANCOM-1711-MIB", "staIproLogtablDsta"), ("LANCOM-1711-MIB", "staIproLogtablProt"), ("LANCOM-1711-MIB", "staIproLogtablSrcp"), ("LANCOM-1711-MIB", "staIproLogtablDstp"), ("LANCOM-1711-MIB", "staIproLogtablFilt"), ("LANCOM-1711-MIB", "staIproLogtablLimi"), ("LANCOM-1711-MIB", "staIproLogtablThre"), ("LANCOM-1711-MIB", "staIproLogtablActi"))
if mibBuilder.loadTexts: trpIpFwFlt.setStatus('current')
trpVPNConn = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 27)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staVpnTunnel"), ("LANCOM-1711-MIB", "staVpnConnectPeer"), ("LANCOM-1711-MIB", "staVpnConnectState"), ("LANCOM-1711-MIB", "staVpnConnectLaster"), ("LANCOM-1711-MIB", "staVpnConnectMode"), ("LANCOM-1711-MIB", "staVpnConnectShtime"), ("LANCOM-1711-MIB", "staVpnConnectPhysco"), ("LANCOM-1711-MIB", "staVpnConnectB1dt"), ("LANCOM-1711-MIB", "staVpnConnectRemote"), ("LANCOM-1711-MIB", "staVpnConnectNatdet"), ("LANCOM-1711-MIB", "staVpnConnectCrypta"), ("LANCOM-1711-MIB", "staVpnConnectCryptl"), ("LANCOM-1711-MIB", "staVpnConnectHashal"), ("LANCOM-1711-MIB", "staVpnConnectHashle"), ("LANCOM-1711-MIB", "staVpnConnectHmacal"), ("LANCOM-1711-MIB", "staVpnConnectHmacle"), ("LANCOM-1711-MIB", "staVpnConnectCompra"), ("LANCOM-1711-MIB", "staVpnConnectClient"))
if mibBuilder.loadTexts: trpVPNConn.setStatus('current')
trpPptpConn = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 28)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staPptpTun"), ("LANCOM-1711-MIB", "staPptpConChann"), ("LANCOM-1711-MIB", "staPptpConState"), ("LANCOM-1711-MIB", "staPptpConMode"), ("LANCOM-1711-MIB", "staPptpConShtim"), ("LANCOM-1711-MIB", "staPptpConPhysc"), ("LANCOM-1711-MIB", "staPptpConPeera"), ("LANCOM-1711-MIB", "staPptpConIpadd"), ("LANCOM-1711-MIB", "staPptpConDnsde"), ("LANCOM-1711-MIB", "staPptpConNbnsd"), ("LANCOM-1711-MIB", "staPptpConLaste"), ("LANCOM-1711-MIB", "staPptpConDnsba"), ("LANCOM-1711-MIB", "staPptpConNbnsb"))
if mibBuilder.loadTexts: trpPptpConn.setStatus('current')
trpErrLogin = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 29)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
if mibBuilder.loadTexts: trpErrLogin.setStatus('current')
trpLdblConn = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 38)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staIproLoadbalConPee"), ("LANCOM-1711-MIB", "staIproLoadbalConBun"), ("LANCOM-1711-MIB", "staIproLoadbalConSta"))
if mibBuilder.loadTexts: trpLdblConn.setStatus('current')
trpPPPoESConn = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 39)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staPppoNum"), ("LANCOM-1711-MIB", "staPppoConCha"), ("LANCOM-1711-MIB", "staPppoConMac"), ("LANCOM-1711-MIB", "staPppoConSta"), ("LANCOM-1711-MIB", "staPppoConLas"), ("LANCOM-1711-MIB", "staPppoConSht"), ("LANCOM-1711-MIB", "staPppoConPee"))
if mibBuilder.loadTexts: trpPPPoESConn.setStatus('current')
trpVrrp = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 41)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staIproVrrpEveSys"), ("LANCOM-1711-MIB", "staIproVrrpEveSrc"), ("LANCOM-1711-MIB", "staIproVrrpEveVri"), ("LANCOM-1711-MIB", "staIproVrrpEveEve"), ("LANCOM-1711-MIB", "staIproVrrpEveInf"))
if mibBuilder.loadTexts: trpVrrp.setStatus('current')
trpHTTP_Tunnel_Open = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 2000)).setLabel("trpHTTP-Tunnel-Open").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staTcpiHttpActiveIndex"), ("LANCOM-1711-MIB", "staTcpiHttpActiveRemotea"), ("LANCOM-1711-MIB", "staTcpiHttpActiveRemotep"), ("LANCOM-1711-MIB", "staTcpiHttpActiveLocalho"), ("LANCOM-1711-MIB", "staTcpiHttpActiveLocalpo"), ("LANCOM-1711-MIB", "staTcpiHttpActiveIdletim"), ("LANCOM-1711-MIB", "staTcpiHttpActiveLocalrt"))
if mibBuilder.loadTexts: trpHTTP_Tunnel_Open.setStatus('current')
trpHTTP_Tunnel_Close = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 2001)).setLabel("trpHTTP-Tunnel-Close").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staTcpiHttpActiveIndex"))
if mibBuilder.loadTexts: trpHTTP_Tunnel_Close.setStatus('current')
trpLAN_Overtemp_Throttle = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 5002)).setLabel("trpLAN-Overtemp-Throttle").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"))
if mibBuilder.loadTexts: trpLAN_Overtemp_Throttle.setStatus('current')
trpLAN_Overtemp_Throttle_End = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 5003)).setLabel("trpLAN-Overtemp-Throttle-End").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"))
if mibBuilder.loadTexts: trpLAN_Overtemp_Throttle_End.setStatus('current')
trpLAN_Overtemp_Throttle_Recommend = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 5004)).setLabel("trpLAN-Overtemp-Throttle-Recommend").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"))
if mibBuilder.loadTexts: trpLAN_Overtemp_Throttle_Recommend.setStatus('current')
mibBuilder.exportSymbols("LANCOM-1711-MIB", staTcpiDnsFilt=staTcpiDnsFilt, staUsbDevAddress=staUsbDevAddress, staIsdnSigManErrI=staIsdnSigManErrI, staDslPacTxu=staDslPacTxu, setCharTablebuSpa=setCharTablebuSpa, setIproNnnEntry=setIproNnnEntry, staIproOpenporTime=staIproOpenporTime, setMailSmtpp=setMailSmtpp, staIproHoconnlDst=staIproHoconnlDst, staIproRipDynwRipt=staIproRipDynwRipt, setAccoCurTotal=setAccoCurTotal, setVpnAdditionalgRtgtag3=setVpnAdditionalgRtgtag3, staConfStartsca=staConfStartsca, setCertSceRet=setCertSceRet, staVpnIkeSoftk=staVpnIkeSoftk, setIproFirRulesAct=setIproFirRulesAct, staCertSceRasSubjec=staCertSceRasSubjec, setLcrTimSto=setLcrTimSto, setConfUpdatecRespons=setConfUpdatecRespons, staPppBacDeletevalues=staPppBacDeletevalues, setConfSshauthMet=setConfSshauthMet, staIproActiproEntry=staIproActiproEntry, staLanErroQueuee=staLanErroQueuee, staDslErrExcess=staDslErrExcess, staIproVrrpTx=staIproVrrpTx, setIproVrrVrrPri=setIproVrrVrrPri, staTcpiNetbGrouplEntry=staTcpiNetbGrouplEntry, staVpnConnectConnti=staVpnConnectConnti, setConfCrashme=setConfCrashme, staIproRipWildEntry=staIproRipWildEntry, staVpnAhMode=staVpnAhMode, staTcpiTftp=staTcpiTftp, staCharTablebuEntry=staCharTablebuEntry, staConfEventlogSyste=staConfEventlogSyste, staModeHistorySig=staModeHistorySig, staTcpiNetbHostliEntry=staTcpiNetbHostliEntry, staLanPackRxp=staLanPackRxp, staTcpiIcmpLanc=staTcpiIcmpLanc, setWanActiontLockt=setWanActiontLockt, setConfLl2mTim=setConfLl2mTim, setEchoAccNet=setEchoAccNet, staPppBacTxcallbackreq=staPppBacTxcallbackreq, setCertSceCerExtended=setCertSceCerExtended, setDnsFiltIpa=setDnsFiltIpa, setVpnProposalsIpsecEntry=setVpnProposalsIpsecEntry, setTimeGetti=setTimeGetti, staTcpiNetbBrowseTable=staTcpiNetbBrowseTable, setIproRipLanPois=setIproRipLanPois, setDhcpDhcVla=setDhcpDhcVla, trpLogin=trpLogin, staVpnEspCrypt=staVpnEspCrypt, setPrinPriRes=setPrinPriRes, staConfScanresuIpadd=staConfScanresuIpadd, staPppoConSht=staPppoConSht, staInfoSta=staInfoSta, staUsbDevVendor=staUsbDevVendor, setIproLoaBunTable=setIproLoaBunTable, staDslErrIfc=staDslErrIfc, staTcpiIpLanfragmentationer=staTcpiIpLanfragmentationer, staPptpConGatew=staPptpConGatew, setIproRouL2l=setIproRouL2l, firTabEntry=firTabEntry, staTcpiSyslLasLev=staTcpiSyslLasLev, setConfOutband=setConfOutband, staTcpiNetbHostliIpa=staTcpiNetbHostliIpa, staIsdnSigLayLapCha=staIsdnSigLayLapCha, staDhcpWanDnsba=staDhcpWanDnsba, setWanDslbroaAcn=setWanDslbroaAcn, setIproIprCom=setIproIprCom, setWanBackuppPee=setWanBackuppPee, setInteModemRingcou=setInteModemRingcou, setPrin=setPrin, setPerfRttmonsJitterminposds=setPerfRttmonsJitterminposds, setLancIntTable=setLancIntTable, staTcpiRadiAccountinTimeouts=staTcpiRadiAccountinTimeouts, setWanIplistDnsba=setWanIplistDnsba, setAccoOpe=setAccoOpe, staAccoLasEntry=staAccoLasEntry, setNetbHosTyp=setNetbHosTyp, setIpro=setIpro, setInteMobileProQosd=setInteMobileProQosd, setWanPppKey=setWanPppKey, setWanScriptsScr=setWanScriptsScr, setIproFirPortbEntry=setIproFirPortbEntry, staConfLl2mClie=staConfLl2mClie, staTcpiDns=staTcpiDns, staTcpiTftpWantxo=staTcpiTftpWantxo, staIsdnLinS0Ope=staIsdnLinS0Ope, setWanRouteriYc=setWanRouteriYc, setVpnProposalsIkeproTable=setVpnProposalsIkeproTable, setAccoTimDayo=setAccoTimDayo, setWanDialuppPee=setWanDialuppPee, staModeOperating=staModeOperating, staIproRipFiltTable=staIproRipFiltTable, staTimeDstEntry=staTimeDstEntry, staIproServicePacketre=staIproServicePacketre, staCertSceCasSubjec=staCertSceCasSubjec, staInfoEntry=staInfoEntry, setInteMobileSca=setInteMobileSca, staTcpiDhcpNetwoDnsbackup=staTcpiDhcpNetwoDnsbackup, setIproFirRulesSta=setIproFirRulesSta, staConfLl2mRxpa=staConfLl2mRxpa, setVpnAdditionalgRtgtag16=setVpnAdditionalgRtgtag16, setWanIncominPee=setWanIncominPee, setIproIprRtg=setIproIprRtg, setConfCrontabComm=setConfCrontabComm, staLanPackRxm=staLanPackRxm, setHttpDoc=setHttpDoc, staTcpiDnsHitlEntry=staTcpiDnsHitlEntry, setWanActiontOwner=setWanActiontOwner, staCallDia=staCallDia, setIproRipWanRipa=setIproRipWanRipa, staCharTablebuTable=staCharTablebuTable, staHardSeri=staHardSeri, setAccoCurEntry=setAccoCurEntry, staUsbDevParent=staUsbDevParent, setVpnAdditionalgRemotegateway12=setVpnAdditionalgRemotegateway12, staLanErroRxtool=staLanErroRxtool, setVpnProposalsIpsecpIpsecproposal4=setVpnProposalsIpsecpIpsecproposal4, setVlanPorPort=setVlanPorPort, setPppoNamEntry=setPppoNamEntry, staTcpiNetbDelete=staTcpiNetbDelete, setVpnProposalsIpsecLifetimes=setVpnProposalsIpsecLifetimes, staIproQosTxfav=staIproQosTxfav, staDslPppTxdata=staDslPppTxdata, setIproFirAppliIrcMin=setIproFirAppliIrcMin, staIproQosPmtus=staIproQosPmtus, staIproArperro=staIproArperro, setIproRipPar=setIproRipPar, staPppChaDelet=staPppChaDelet, staVpnEspMode=staVpnEspMode, setCompDevTable=setCompDevTable, setPerfRttmoneEntry=setPerfRttmoneEntry, staPppLcpRxechoreques=staPppLcpRxechoreques, staConfOutbandt=staConfOutbandt, staIproProtocoTable=staIproProtocoTable, staChanCause=staChanCause, setInteEthernPri=setInteEthernPri, staIsdnSigManDinCha=staIsdnSigManDinCha, staPppCcpRxterminater=staPppCcpRxterminater, staPppIpcTxterminater=staPppIpcTxterminater, staIproRip=staIproRip, staIproLogtablEntry=staIproLogtablEntry, staLanErroTable=staLanErroTable, staVpnEspIdx=staVpnEspIdx, setTcpiArptaVla=setTcpiArptaVla, staConfLl2mRxmu=staConfLl2mRxmu, staWanErrorsTable=staWanErrorsTable, staVpnAhMaxse=staVpnAhMaxse, setHttpErr=setHttpErr, staDslPacTxp=staDslPacTxp, setDnsDynaEntry=setDnsDynaEntry, staPppTxoIpcDnsba=staPppTxoIpcDnsba, staIproHoconnlTable=staIproHoconnlTable, setIproFirOpenpFilt=setIproFirOpenpFilt, setInteModemAnswerc=setInteModemAnswerc, staConfLl2mServRxp=staConfLl2mServRxp, staIproVrrpVirRou=staIproVrrpVirRou, trpErrLogin=trpErrLogin, staTcpiTftpWanrxw=staTcpiTftpWanrxw, staVlanOpe=staVlanOpe, staSnmpEveTra=staSnmpEveTra, staPppIpcRxdiscarded=staPppIpcRxdiscarded, staIproActiproRtg=staIproActiproRtg, staIproOpenporDsta=staIproOpenporDsta, staCertSceRasIsssnm=staCertSceRasIsssnm, setTimeDstclMin=setTimeDstclMin, staIproFilterlDsta=staIproFilterlDsta, setWanBackuppAlt=setWanBackuppAlt, staCharTablebuSpa=staCharTablebuSpa, setWanActiontActio=setWanActiontActio, staInfoDia=staInfoDia, staIproPortbloDstp=staIproPortbloDstp, setIproRipIprVla=setIproRipIprVla, staQueuIpurgen=staQueuIpurgen, staPppIpcRxconfigrequ=staPppIpcRxconfigrequ, setNtpBci=setNtpBci, staCompComNetworksConnect=staCompComNetworksConnect, staAccoAccMacad=staAccoAccMacad, staTcpiNetbLanrx=staTcpiNetbLanrx, staTcpiTftpWancon=staTcpiTftpWancon, staTcpiRadiAccountinAccountingret=staTcpiRadiAccountinAccountingret, setConfUpdatecOperati=setConfUpdatecOperati, setTcpiAliveTestin=setTcpiAliveTestin, staCertCrlCrlTable=staCertCrlCrlTable, staWanActions=staWanActions, staHardCpul=staHardCpul, setAccoLasMacad=setAccoLasMacad, setTime=setTime, staIproOpenporTable=staIproOpenporTable, staInfoPee=staInfoPee, staVpnIkeSofts=staVpnIkeSofts, staWanThroughpuRxsa=staWanThroughpuRxsa, staWanPackettraRx=staWanPackettraRx, setNetbPeeNam=setNetbPeeNam, staIproLogtablThre=staIproLogtablThre, setLcrTimTable=setLcrTimTable, staIproRipWansPeer=staIproRipWansPeer, staQueuArpquer=staQueuArpquer, staChanTable=staChanTable, staTcpiNetbGrouplIpa=staTcpiNetbGrouplIpa, staTcpiNetbPeersEntry=staTcpiNetbPeersEntry, staDele=staDele, setWanManualdCon=setWanManualdCon, staLayeL2op=staLayeL2op, setTimeDstclTim=setTimeDstclTim, staDslPppRxpadt=staDslPppRxpadt, staCompComConnectiTable=staCompComConnectiTable, staIproHostbloTim=staIproHostbloTim, setTcpi=setTcpi, staIproEstabliCou=staIproEstabliCou, setDhcpNetCache=setDhcpNetCache, staVpnAhEntry=staVpnAhEntry, staPppRxoIpcIfc=staPppRxoIpcIfc, staModeMode=staModeMode, setCompComOpeOpe=setCompComOpeOpe, staDslPppTxprot=staDslPppTxprot, setSysl=setSysl, setWanMtulistPee=setWanMtulistPee, setAccoAccTable=setAccoAccTable, setVpnProposalsIpsecpIpsecproposall=setVpnProposalsIpsecpIpsecproposall, setDnsDynaSer=setDnsDynaSer, staIproRipWildPeer=staIproRipWildPeer, setTimeUtcin=setTimeUtcin, staIproRipTx=staIproRipTx, staModeHistoryReg=staModeHistoryReg, staTcpiTcpWancon=staTcpiTcpWancon, staIproVrrpVirNet=staIproVrrpVirNet, staPppLcpTxconfigack=staPppLcpTxconfigack, setAccoTimType=setAccoTimType, setWanRadiusClipop=setWanRadiusClipop, staCompComComportsPor=staCompComComportsPor, staIsdnSigManErrH=staIsdnSigManErrH, staLayeLay1=staLayeLay1, setPerfRttmonsJittermaxpossd=setPerfRttmonsJittermaxpossd, staPppMlRxfrags=staPppMlRxfrags, staIproVrrpVirBac=staIproVrrpVirBac, staPppBacRxlinkdropres=staPppBacRxlinkdropres, staIproOpenporSrca=staIproOpenporSrca, staTcpiHttpActiveNumconn=staTcpiHttpActiveNumconn, staPppIpcTxterminatea=staPppIpcTxterminatea, staTcpiNetbServerSer=staTcpiNetbServerSer, setVlanNetEntry=setVlanNetEntry, setPerfRttmonsJittercountnegd=setPerfRttmonsJittercountnegd, staWanMtuTable=staWanMtuTable, setNetbLea=setNetbLea, staConfDeleteva=staConfDeleteva, setPerfRttmoneIndex=setPerfRttmoneIndex, staIproVrrpVirPri=staIproVrrpVirPri, staPppPppIfc=staPppPppIfc, staPppLcpRxconfigack=staPppLcpRxconfigack, staTcpiRadiAccountinLastrequest=staTcpiRadiAccountinLastrequest, staChanExtra=staChanExtra, setCompComNetListenpo=setCompComNetListenpo)
mibBuilder.exportSymbols("LANCOM-1711-MIB", staTcpiNetbServerGro=staTcpiNetbServerGro, staConfLl2mRxun=staConfLl2mRxun, setDhcp=setDhcp, setDnsDnsdDes=setDnsDnsdDes, staConfAntithefMetho=staConfAntithefMetho, setConfAccesstIfc=setConfAccesstIfc, setHttpRolDisplayco=setHttpRolDisplayco, setCharTimetabBudgetmi=setCharTimetabBudgetmi, staTcpiRadiAccountinEntry=staTcpiRadiAccountinEntry, setAccoTimTable=setAccoTimTable, setIproFirOpenpSrcr=setIproFirOpenpSrcr, setTcpiLoopbLoo=setTcpiLoopbLoo, setDnsServPor=setDnsServPor, setPerfRttmonsJittersumpossd=setPerfRttmonsJittersumpossd, setCompComNetPortnumb=setCompComNetPortnumb, setIproFirObjecEntry=setIproFirObjecEntry, staAccoCurConne=staAccoCurConne, staPppBacRxstatusindic=staPppBacRxstatusindic, staIproVrrpMacTable=staIproVrrpMacTable, staCertSce=staCertSce, staIsdnSigManDinTei=staIsdnSigManDinTei, setVpnLayerName=setVpnLayerName, staCertSceCertsExpires=staCertSceCertsExpires, staWanActionsLocTable=staWanActionsLocTable, staIproRipDynlTxfi=staIproRipDynlTxfi, staChanCharg=staChanCharg, staTcpiIpLanfragmentationsf=staTcpiIpLanfragmentationsf, staTcpiTftpWanrx=staTcpiTftpWanrx, setEchoAccCom=setEchoAccCom, staCertSceCertsIdx=staCertSceCertsIdx, staPppIpcRxcodereject=staPppIpcRxcodereject, setInteMobileProProf=setInteMobileProProf, setInteModem=setInteModem, staPppCcpRxconfignak=staPppCcpRxconfignak, staCertSceCasIkecer=staCertSceCasIkecer, setCertSceCasCafingerprinta=setCertSceCasCafingerprinta, staConnChar=staConnChar, setTcpiArptaEth=setTcpiArptaEth, staDslErrTxdefe=staDslErrTxdefe, setVpnProposalsIpsecpIpsecproposal5=setVpnProposalsIpsecpIpsecproposal5, staAccoLasRxkby=staAccoLasRxkby, staPppBacTxcallrespons=staPppBacTxcallrespons, staTcpiTftpLantxe=staTcpiTftpLantxe, staInfoB2d=staInfoB2d, setPppoNamPee=setPppoNamPee, staIproRipWildRfc2=staIproRipWildRfc2, setPerfRttmonsRttsum=setPerfRttmonsRttsum, staLanPackTxm=staLanPackTxm, staIproRipIpriIpa=staIproRipIpriIpa, staPppLcpTxconfigrequ=staPppLcpTxconfigrequ, staTcpiDnsNetb=staTcpiDnsNetb, staCharSpareda=staCharSpareda, staTcpiRadiAccountinUnknowntypes=staTcpiRadiAccountinUnknowntypes, staIproRipDynwRipa=staIproRipDynwRipa, setEchoAccEntry=setEchoAccEntry, setAccoCurRxkby=setAccoCurRxkby, staVpnAhTable=staVpnAhTable, staTcpiTftpWanrxe=staTcpiTftpWanrxe, staPppPapRxfai=staPppPapRxfai, staIproRipFiltIpn=staIproRipFiltIpn, setAccoLasTable=setAccoLasTable, staCharSparedi=staCharSparedi, staDhcpWanDhcps=staDhcpWanDhcps, staAccoAccTxkby=staAccoAccTxkby, staTcpiHttpAgentlTable=staTcpiHttpAgentlTable, staIproConnectEntry=staIproConnectEntry, staCertSceCertsIsssnmp=staCertSceCertsIsssnmp, firVerEntry=firVerEntry, staTcpiTftpWanrxb=staTcpiTftpWanrxb, setNetbBroFla=setNetbBroFla, setIproFirAppliFtpChe=setIproFirAppliFtpChe, setTcpiAliveRetryc=setTcpiAliveRetryc, setIproIprTable=setIproIprTable, staCertSceCertsSubjecta=staCertSceCertsSubjecta, setWanDslbroaPee=setWanDslbroaPee, staPppBacTxlinkdropres=staPppBacTxlinkdropres, staIsdnSigLayLapL2a=staIsdnSigLayLapL2a, staLanErroSingle=staLanErroSingle, setVpnProposalsIkeEntry=setVpnProposalsIkeEntry, setCompComNetEntry=setCompComNetEntry, staDhcpWanDnsde=staDhcpWanDnsde, setVpnAdditionalgRemotegateway6=setVpnAdditionalgRemotegateway6, setHttpPor=setHttpPor, setInteS0Dial=setInteS0Dial, setIproDefPee=setIproDefPee, staUsbDevEntry=staUsbDevEntry, setCertCrlRef=setCertCrlRef, staTaca=staTaca, staPppTxoIpcTable=staPppTxoIpcTable, setPerfRttmonePacketcount=setPerfRttmonePacketcount, setNetbNetOpe=setNetbNetOpe, setIproFirFilteTable=setIproFirFilteTable, setHttpFon=setHttpFon, setCertSceCasApplication=setCertSceCasApplication, setDhcpPorTable=setDhcpPorTable, staPppMlRxfragm=staPppMlRxfragm, setIpro1nnServicetaIntran=setIpro1nnServicetaIntran, staCompComComportsHan=staCompComComportsHan, setPerfRttmonaEntry=setPerfRttmonaEntry, setVpnAdditionalgRemotegateway14=setVpnAdditionalgRemotegateway14, staIproQosFragm=staIproQosFragm, staPppCcpDeletevalues=staPppCcpDeletevalues, staPppTxoIpcDnsde=staPppTxoIpcDnsde, setSyslOpe=setSyslOpe, staTimeSet=staTimeSet, staPppIpcTxconfigrequ=staPppIpcTxconfigrequ, staTcpiNetwEntry=staTcpiNetwEntry, setWanRouteriCli=setWanRouteriCli, setNetbHosFla=setNetbHosFla, setInteMobileSys=setInteMobileSys, setCompComNetConnecth=setCompComNetConnecth, staVpnIpcompSofts=staVpnIpcompSofts, setIproFirHostbTim=setIproFirHostbTim, setIproFirConneRtgt=setIproFirConneRtgt, staTcpiNetbBrowseNet=staTcpiNetbBrowseNet, setAccoAccTxkby=setAccoAccTxkby, staPppCcpTxterminatea=staPppCcpTxterminatea, staConfAntithef=staConfAntithef, staCertSceCertsIssued=staCertSceCertsIssued, staConfLl2mServRxm=staConfLl2mServRxm, staPppMlRxheade=staPppMlRxheade, staIproEstabliEntry=staIproEstabliEntry, staModeNetworklistTable=staModeNetworklistTable, setIproRipFilTable=setIproRipFilTable, setTimeDstclEntry=setTimeDstclEntry, setPppoPorEntry=setPppoPorEntry, staIproActiproDis=staIproActiproDis, setSnmpComment3=setSnmpComment3, setIproFirConneSrca=setIproFirConneSrca, staTcpiArpTablEth=staTcpiArpTablEth, staPppChaTxcha=staPppChaTxcha, setIproFirFilteSrca=setIproFirFilteSrca, setTimeDstclMon=setTimeDstclMon, staPppRxoIpcDnsba=staPppRxoIpcDnsba, staVpnAhsas=staVpnAhsas, staTcpiDhcpDhcptTyp=staTcpiDhcpDhcptTyp, staTcpiNetbPeersTyp=staTcpiNetbPeersTyp, staCertCrlCrlExpire=staCertCrlCrlExpire, setVpnAdditionalgRemotegateway3=setVpnAdditionalgRemotegateway3, staConnConn=staConnConn, staTcpiNetbHostliTim=staTcpiNetbHostliTim, setPerfRttmoneInterval=setPerfRttmoneInterval, staVpnIkeSrcad=staVpnIkeSrcad, staPppPapRxreq=staPppPapRxreq, staDslPacRxp=staDslPacRxp, staIproRipWansRtgt=staIproRipWansRtgt, staAccoAccTotal=staAccoAccTotal, staIproConnectFilt=staIproConnectFilt, setConfPredefaTable=setConfPredefaTable, setWanIplistDnsde=setWanIplistDnsde, setAccoAccMacad=setAccoAccMacad, setVpnIsakmpTimRetrtimm=setVpnIsakmpTimRetrtimm, staTcpiDhcpNetwoNetworknam=staTcpiDhcpNetwoNetworknam, setDnsReso=setDnsReso, staIproRipLansDftr=staIproRipLansDftr, staIproRipDynlPort=staIproRipDynlPort, setWanBackuppHea=setWanBackuppHea, setVpnProposalsIkeTable=setVpnProposalsIkeTable, setIproIprPee=setIproIprPee, setVpnAdditionalgRtgtag11=setVpnAdditionalgRtgtag11, setPppoPorPor=setPppoPorPor, staTcpiDhcpDhcptEth=staTcpiDhcpDhcptEth, staMailCle=staMailCle, setTcpiAccesTable=setTcpiAccesTable, setVpnLayerTable=setVpnLayerTable, trpUplFailIncl=trpUplFailIncl, setIpro1nnTable1nnaPro=setIpro1nnTable1nnaPro, staIsdnSigManDinPro=staIsdnSigManDinPro, setIpro1nnServicetaMappor=setIpro1nnServicetaMappor, setIproVrrVrrRou=setIproVrrVrrRou, setIproFirConneFlag=setIproFirConneFlag, setInteMobileCon=setInteMobileCon, setTcpiArptaCon=setTcpiArptaCon, setIproIprDis=setIproIprDis, setIpro1nnServicetaProtoc=setIpro1nnServicetaProtoc, staTcpiDnsWanr=staTcpiDnsWanr, setIproRipWanRtgt=setIproRipWanRtgt, staIsdnFraS0Ifc=staIsdnFraS0Ifc, staInfoMod=staInfoMod, othMan=othMan, setAccoLasConne=setAccoLasConne, setSnmpMonitortPee=setSnmpMonitortPee, setDhcpAddOptiont=setDhcpAddOptiont, setIproVrrAdv=setIproVrrAdv, staTcpiArpTablTable=staTcpiArpTablTable, staPppPppCcp=staPppPppCcp, setTacaServerCom=setTacaServerCom, staTcpiRadiAuthenticPendingre=staTcpiRadiAuthenticPendingre, setAccoAccRxkby=setAccoAccRxkby, staVpnIpcompMaxkb=staVpnIpcompMaxkb, setLancPriIfc=setLancPriIfc, staPptpConPeera=staPptpConPeera, setVpnProposalsIpsecpIpsecproposal7=setVpnProposalsIpsecpIpsecproposal7, setWanDslbroaSer=setWanDslbroaSer, staIproRipWansDftr=staIproRipWansDftr, setConfTftpcliFirmwarea=setConfTftpcliFirmwarea, setSnmpIptrapsEntry=setSnmpIptrapsEntry, staTcpiHttpActiveIndex=staTcpiHttpActiveIndex, setLanc=setLanc, staAccoLasConne=staAccoLasConne, staCompDevService=staCompDevService, setWanLayerLay1=setWanLayerLay1, staDhcpWanNbnsb=staDhcpWanNbnsb, staCompDevIndex=staCompDevIndex, setWanPppRights=setWanPppRights, setDhcpNetStartaddre=setDhcpNetStartaddre, staTcpiNetbGrouplRtg=staTcpiNetbGrouplRtg, staCompComComportsTable=staCompComComportsTable, setIproFirFilteDend=setIproFirFilteDend, setInteDslTable=setInteDslTable, staPppRxo=staPppRxo, staDhcpLanDhcps=staDhcpLanDhcps, staDslIntIfc=staDslIntIfc, staPppCcpRxresetreque=staPppCcpRxresetreque, setNetbOpe=setNetbOpe, staLanInteQue=staLanInteQue, setWanRadius=setWanRadius, setWanDslbroaTable=setWanDslbroaTable, setSyslFacTable=setSyslFacTable, staVpnConnectPhysco=staVpnConnectPhysco, setDnsSubdEntry=setDnsSubdEntry, staPppBacRxstatusrespo=staPppBacRxstatusrespo, staVpnIkePeer=staVpnIkePeer, setIproFirIdsac=setIproFirIdsac, staPppPppEntry=staPppPppEntry, staConfFeaturesEntry=staConfFeaturesEntry, staConfLanactiv=staConfLanactiv, setCompComComReadyd=setCompComComReadyd, setInteModemmTable=setInteModemmTable, trpCnfDnlStart=trpCnfDnlStart, setRadiAutht=setRadiAutht, staCertSceDelet=staCertSceDelet, staLcrMis=staLcrMis, staAccoTimTable=staAccoTimTable, staTcpiTftpLantxr=staTcpiTftpLantxr, staIproServicePackettx=staIproServicePackettx, staVpnEspSofts=staVpnEspSofts, staTcpiNetbBrowseBro=staTcpiNetbBrowseBro, staIproLogtablProt=staIproLogtablProt, staTcpiArpTablIpa=staTcpiArpTablIpa, setVpnSimplecertr=setVpnSimplecertr, staWanPackettraTxn=staWanPackettraTxn, setIproFirConneSrcp=setIproFirConneSrcp, staIproFilterlDstn=staIproFilterlDstn, staTcpiDhcpRxrel=staTcpiDhcpRxrel, setNetbBroPee=setNetbBroPee, setIproRipLanProp=setIproRipLanProp, setVpnAdditionalgRemotegateway10=setVpnAdditionalgRemotegateway10, setAccoDis=setAccoDis, setWanIplistMasqi=setWanIplistMasqi, setPerfRttmonsRttmin=setPerfRttmonsRttmin, staOper=staOper, staCompComConnectiClientr=staCompComConnectiClientr, staIproRipLansTable=staIproRipLansTable)
mibBuilder.exportSymbols("LANCOM-1711-MIB", staChanNumbe=staChanNumbe, setCharTablebuIfc=setCharTablebuIfc, staIproRipWansRfc2=staIproRipWansRfc2, staCharSpareun=staCharSpareun, staVpnAhSoftk=staVpnAhSoftk, setWanLayerWanl=setWanLayerWanl, setTimeTimez=setTimeTimez, staPppPapRxsuc=staPppPapRxsuc, staDslBytIfc=staDslBytIfc, setIpro1nnServicetaDportt=setIpro1nnServicetaDportt, staLanPackTxu=staLanPackTxu, staTcpiSyslLasMes=staTcpiSyslLasMes, setIproFirHostbSrc=setIproFirHostbSrc, setNetbBroGro=setNetbBroGro, staPptpConDnsba=staPptpConDnsba, staIproRipLansVlan=staIproRipLansVlan, staTcpiDnsLant=staTcpiDnsLant, staDslPacTxm=staDslPacTxm, setIproFirAppliIrcIrc=setIproFirAppliIrcIrc, staIproVrrpVirEntry=staIproVrrpVirEntry, staConnIfc=staConnIfc, setHttpSes=setHttpSes, setIproRipWanTable=setIproRipWanTable, firTim=firTim, staLanErroLateco=staLanErroLateco, setCompComNetTcpmode=setCompComNetTcpmode, staWanThroughpuEntry=staWanThroughpuEntry, staDslErrRxtoos=staDslErrRxtoos, setIproLoaBunBundlepeer2=setIproLoaBunBundlepeer2, setDhcpDhcMac=setDhcpDhcMac, staPppIpcTxcodereject=staPppIpcTxcodereject, setInteS0Llbc=setInteS0Llbc, staQueuSnmpque=staQueuSnmpque, setCharTablebuEntry=setCharTablebuEntry, setIproTagRtg=setIproTagRtg, staIproFilterlSst=staIproFilterlSst, staConfLl2mClieRxm=staConfLl2mClieRxm, staVpnIpcompIdx=staVpnIpcompIdx, staPppIpcRxterminatea=staPppIpcRxterminatea, staTcpiIcmpLant=staTcpiIcmpLant, staTimeIsdDelet=staTimeIsdDelet, staWanActionsActTable=staWanActionsActTable, setWanActiontIndex=setWanActiontIndex, setConfAdminsEntry=setConfAdminsEntry, staTcpiHttpHttppr=staTcpiHttpHttppr, staDslErrRxcrce=staDslErrRxcrce, staTcpiDhcpMacco=staTcpiDhcpMacco, staTimeDstMin=staTimeDstMin, staPppBac=staPppBac, staIproActiproTyp=staIproActiproTyp, sta=sta, staWanPackettraTxr=staWanPackettraTxr, staTcpiNetbReleas=staTcpiNetbReleas, setIproRipWanGate=setIproRipWanGate, setEchoAccIpa=setEchoAccIpa, staPppTxoIpcIpadd=staPppTxoIpcIpadd, staWanPackettraTxt=staWanPackettraTxt, staVpnAhPeer=staVpnAhPeer, staVpnIkeAge=staVpnIkeAge, staCallCou=staCallCou, setWanActiontEntry=setWanActiontEntry, setPerfRttmonsCompletions=setPerfRttmonsCompletions, setVpnIsakmpTimExptim=setVpnIsakmpTimExptim, staPppLcpRxterminater=staPppLcpRxterminater, setCertSceCasEntry=setCertSceCasEntry, setEchoAccPro=setEchoAccPro, staVpnAhAge=staVpnAhAge, setDhcpHosIpa=setDhcpHosIpa, staPptpTxp=staPptpTxp, trpFwUplStart=trpFwUplStart, staPptpConState=staPptpConState, setInteMobileProEntry=setInteMobileProEntry, staTcpiDhcpRxdis=staTcpiDhcpRxdis, staTimeSou=staTimeSou, setVpnOperating=setVpnOperating, staCertSceCertsStatus=staCertSceCertsStatus, staTcpiTcpLantxr=staTcpiTcpLantxr, staLcrProFai=staLcrProFai, setIproVrrVrrVir=setIproVrrVrrVir, staIproRipDynwPeer=staIproRipDynwPeer, staPppCcpCompressione=staPppCcpCompressione, staConfFeaturesExp=staConfFeaturesExp, setVpnVpnpeersRule=setVpnVpnpeersRule, staRemoEntry=staRemoEntry, setTcpiAccesIpa=setTcpiAccesIpa, setWanPppConf=setWanPppConf, setSnmpIptrapsTable=setSnmpIptrapsTable, setDns=setDns, setVpnLayerEntry=setVpnLayerEntry, staEthePortsEntry=staEthePortsEntry, setVpnAdditionalgRemotegateway11=setVpnAdditionalgRemotegateway11, setLcrTimEntry=setLcrTimEntry, setIproFirObjecDes=setIproFirObjecDes, staIsdnSigManErrC=staIsdnSigManErrC, staPppCcp=staPppCcp, staIproRipEntr=staIproRipEntr, staWanBytetransTxb=staWanBytetransTxb, staPppIpcRxconfignak=staPppIpcRxconfignak, staLanErroExcess=staLanErroExcess, staIsdnSigManErrM=staIsdnSigManErrM, staModeHistoryEntry=staModeHistoryEntry, setVpnAdditionalgRemotegateway13=setVpnAdditionalgRemotegateway13, staVpnEspMaxse=staVpnEspMaxse, setVpnLayerIkek=setVpnLayerIkek, setWanRadiusProtoc=setWanRadiusProtoc, staTcpiHttpActiveIdletim=staTcpiHttpActiveIdletim, setTcpiNetwoCom=setTcpiNetwoCom, trpCnfUplStart=trpCnfUplStart, staPptpRxe=staPptpRxe, setPerfRttmonsJittermaxposds=setPerfRttmonsJittermaxposds, staEtheCabletestrTable=staEtheCabletestrTable, setVpnCertificateIkeRemoteiden=setVpnCertificateIkeRemoteiden, setWanCallbac=setWanCallbac, staTcpiTftpDelete=staTcpiTftpDelete, setCertSceCasIdentifier=setCertSceCasIdentifier, setIproFirFilteIdx=setIproFirFilteIdx, staWan=staWan, staIproVrrpVirVir=staIproVrrpVirVir, othManCon=othManCon, staPppIpcDeletevalues=staPppIpcDeletevalues, setSnmpMonitortLan=setSnmpMonitortLan, staIproVrrpMacEntry=staIproVrrpMacEntry, setAccoCurPeer=setAccoCurPeer, staTacaAutho=staTacaAutho, staPppMlDeletev=staPppMlDeletev, setAccoAccEntry=setAccoAccEntry, staConfAntithefCalla=staConfAntithefCalla, setNetbBroRtg=setNetbBroRtg, setNtpBcm=setNtpBcm, setMailEmail=setMailEmail, staRemoConns=staRemoConns, staModePort=staModePort, setVpnAdditionalgRtgtag14=setVpnAdditionalgRtgtag14, setIproRipLanRipa=setIproRipLanRipa, setNetbGroFla=setNetbGroFla, setIproFirFilteRtgt=setIproFirFilteRtgt, staVpnConnectPeer=staVpnConnectPeer, setCompComNetDevicety=setCompComNetDevicety, setInteModemmPro=setInteModemmPro, setConfAccesstTelnet=setConfAccesstTelnet, staIproRipWansTxfi=staIproRipWansTxfi, staPppTxo=staPppTxo, staDslErrTxerro=staDslErrTxerro, staLanByteEntry=staLanByteEntry, setIproEnd=setIproEnd, staVpnAhDesta=staVpnAhDesta, setConfAccesstHttp=setConfAccesstHttp, staTcpiDhcpNetwoNbnsbackup=staTcpiDhcpNetwoNbnsbackup, setWanPptppeeSht=setWanPptppeeSht, staIproRipWildDftr=staIproRipWildDftr, staIsdnLinS0Entry=staIsdnLinS0Entry, staTcpiDnsErro=staTcpiDnsErro, setCertCrlUpd=setCertCrlUpd, setIproLoaOpe=setIproLoaOpe, staIproVrrpVirTable=staIproVrrpVirTable, staPppTxoLcpIfc=staPppTxoLcpIfc, setVpnIsakmp=setVpnIsakmp, setIproFirHostbEntry=setIproFirHostbEntry, setCharTimetabMinutesp=setCharTimetabMinutesp, setIpro1nnServicetaEntry=setIpro1nnServicetaEntry, setSnmpDeletemo=setSnmpDeletemo, staIproEstabliPro=staIproEstabliPro, setTcpiNbnsb=setTcpiNbnsb, staWanBytetransCtx=staWanBytetransCtx, setDhcpNetEndaddress=setDhcpNetEndaddress, setEchoAccAct=setEchoAccAct, staLanErroTxcarr=staLanErroTxcarr, staPppLcpTxechoreques=staPppLcpTxechoreques, setIproFirDosac=setIproFirDosac, setPerfRttmonsAveragejitterds=setPerfRttmonsAveragejitterds, staTcpiTftpLantxo=staTcpiTftpLantxo, setConfSshauthEntry=setConfSshauthEntry, firFea=firFea, setConfPredefaNam=setConfPredefaNam, setIproFirOpenpDsta=setIproFirOpenpDsta, setIproVrrInt=setIproVrrInt, setTimeDstclHou=setTimeDstclHou, staCompComConnectiFullnam=staCompComConnectiFullnam, staIproConnectFlag=staIproConnectFlag, staVpnEspKbyte=staVpnEspKbyte, setPerfRttmonsAveragejitter=setPerfRttmonsAveragejitter, setVpnAdditionalgRemotegateway15=setVpnAdditionalgRemotegateway15, staTcpiArpTablEntry=staTcpiArpTablEntry, setVpnAggrmodepro=setVpnAggrmodepro, staPppTxoLcpAut=staPppTxoLcpAut, setVpnProposalsIpsecpIpsecproposal6=setVpnProposalsIpsecpIpsecproposal6, staIproRules=staIproRules, staIproLanfilt=staIproLanfilt, setDnsDnsdDom=setDnsDnsdDom, staCompComConnectiClientd=staCompComConnectiClientd, staTcpiDhcpTxnak=staTcpiDhcpTxnak, setVpnProposalsIpsecEspcryptk=setVpnProposalsIpsecEspcryptk, staIproRipWansRipa=staIproRipWansRipa, setTimeDstclDay=setTimeDstclDay, staTcpiDnsDnsa=staTcpiDnsDnsa, staCompComComportsFul=staCompComComportsFul, staIproVrrpOpe=staIproVrrpOpe, staPppLcpRxconfigrequ=staPppLcpRxconfigrequ, staVpnEspSoftk=staVpnEspSoftk, staEthePortsTable=staEthePortsTable, setLancIntIfc=setLancIntIfc, staVpnConnectTable=staVpnConnectTable, setEchoAccTable=setEchoAccTable, setNetbGroRtg=setNetbGroRtg, staWanPackettraIfc=staWanPackettraIfc, staCharTimetabTable=staCharTimetabTable, trpLAN_Overtemp_Throttle_End=trpLAN_Overtemp_Throttle_End, setVpnLayerPfsg=setVpnLayerPfsg, setIproRip=setIproRip, staUsbDevPower=staUsbDevPower, staWanConnectio=staWanConnectio, setLancPriPri=setLancPriPri, setHttpRolActionsEntry=setHttpRolActionsEntry, staIsdnFraS0Table=staIsdnFraS0Table, setIpro1nnServicetaCommen=setIpro1nnServicetaCommen, setIproTagEntry=setIproTagEntry, setRadi=setRadi, staLayeLay2=staLayeLay2, staLanErroCollis=staLanErroCollis, setName=setName, setConfTelnetp=setConfTelnetp, setSyslSerIdx=setSyslSerIdx, staTimeIsdUnits=staTimeIsdUnits, setConfTelnets=setConfTelnets, staTcpiDhcpDhcptEntry=staTcpiDhcpDhcptEntry, staPppoConTable=staPppoConTable, trpLAN_Overtemp_Throttle_Recommend=trpLAN_Overtemp_Throttle_Recommend, setVpnProposalsIkeproIkeproposall=setVpnProposalsIkeproIkeproposall, staFile=staFile, firVerTable=firVerTable, setCompComComEntry=setCompComComEntry, staTcpiDhcpLanrx=staTcpiDhcpLanrx, staIproRipLansProp=staIproRipLansProp, staIproRipIpriNet=staIproRipIpriNet, staIproHostbloSrc=staIproHostbloSrc, staIproLogtablSyst=staIproLogtablSyst, staVpnEspHasha=staVpnEspHasha, setPppo=setPppo, setCompComComTable=setCompComComTable, staCompComNetworksRemotea=staCompComNetworksRemotea, staTime=staTime, setNetbBroTim=setNetbBroTim, setInteModemmTyp=setInteModemmTyp, setIproFirRulesTable=setIproFirRulesTable, staPppMlRxfrage=staPppMlRxfrage, staPppIpcTxconfigreje=staPppIpcTxconfigreje, staEtheCabletestrEntry=staEtheCabletestrEntry, setPerfRttmonsJitterminpossd=setPerfRttmonsJitterminpossd, oth=oth, staIproProtocoPro=staIproProtocoPro, staPptpConEntry=staPptpConEntry, setVpnLayerIpse=setVpnLayerIpse, staPppBacTxstatusrespo=staPppBacTxstatusrespo, staLayeL1pa=staLayeL1pa)
mibBuilder.exportSymbols("LANCOM-1711-MIB", staAccoDel=staAccoDel, setInteDslExt=setInteDslExt, staIproConnectDsta=staIproConnectDsta, staTcpiArpLanr=staTcpiArpLanr, staIsdnSigManErrF=staIsdnSigManErrF, staIsdnLinS0Ifc=staIsdnLinS0Ifc, staTcpiRadiInvalidac=staTcpiRadiInvalidac, staIproRipDynlRipt=staIproRipDynlRipt, setIproVrrVrrPee=setIproVrrVrrPee, setVpnVpnpeersRemo=setVpnVpnpeersRemo, setCompComComStopbi=setCompComComStopbi, setTcpiAccesIpn=setTcpiAccesIpn, staIsdnSigManErrK=staIsdnSigManErrK, staEtheCabletest=staEtheCabletest, setVpnLegacydynvp=setVpnLegacydynvp, setCertSceDev=setCertSceDev, staTcpiHttp=staTcpiHttp, setSnmpIptrapsTra=setSnmpIptrapsTra, staIproRipLansEntry=staIproRipLansEntry, setNtpRqaLoo=setNtpRqaLoo, setConfTftpcliScriptfil=setConfTftpcliScriptfil, staTcpiDhcpNetwoMasterserv=staTcpiDhcpNetwoMasterserv, staWanErrorsRxl3=staWanErrorsRxl3, staIsdnSigManDinEntry=staIsdnSigManDinEntry, setIproRou=setIproRou, staVpnIkeTable=staVpnIkeTable, staVpnEspPeer=staVpnEspPeer, staModeNetworklistNet=staModeNetworklistNet, staCompComDeleteva=staCompComDeleteva, setConfAccesstSsh=setConfAccesstSsh, setPerfRttmonsPacketlossds=setPerfRttmonsPacketlossds, staIproRipDynwRxfi=staIproRipDynwRxfi, setPppoSes=setPppoSes, staCertSceCertsEntry=staCertSceCertsEntry, staPppIpcRxconfigreje=staPppIpcRxconfigreje, setTimeCurre=setTimeCurre, staPppBacTxstatusindic=staPppBacTxstatusindic, staChanConnt=staChanConnt, setWanPppUsername=setWanPppUsername, staTcpiNetbServerEntry=staTcpiNetbServerEntry, setTacaServerTable=setTacaServerTable, staDhcpLanGatew=staDhcpLanGatew, staCertSceRasName=staCertSceRasName, setLcrLan=setLcrLan, staIproRipVrrpNet=staIproRipVrrpNet, staQueuTcpqueu=staQueuTcpqueu, setTcpiArptaIpa=setTcpiArptaIpa, setIpro1nnTcpagings=setIpro1nnTcpagings, staIproLogtablLimi=staIproLogtablLimi, setIproFirAppliIrcChe=setIproFirAppliIrcChe, setIproTagSta=setIproTagSta, staPppLcpRxerrors=staPppLcpRxerrors, staPppTxoLcpPfc=staPppTxoLcpPfc, setCertSce=setCertSce, staModeHistoryInd=staModeHistoryInd, staTcpiDhcpNetwoDnsdefault=staTcpiDhcpNetwoDnsdefault, setConfUpdatecRetryfa=setConfUpdatecRetryfa, staVpnConnectCrypta=staVpnConnectCrypta, staCompComNetworksPortnum=staCompComNetworksPortnum, staCallIfc=staCallIfc, setIproFirAppliFtp=setIproFirAppliFtp, staConnEntry=staConnEntry, setNetbSerPee=setNetbSerPee, setInteMobile=setInteMobile, staTcpiIcmpLans=staTcpiIcmpLans, setLancPriEntry=setLancPriEntry, setIproFirOpenpTime=setIproFirOpenpTime, setPerfRttmonsAveragejittersd=setPerfRttmonsAveragejittersd, setSnmpMonitortMac=setSnmpMonitortMac, staIproFilterlIdx=staIproFilterlIdx, setCompComNetLoopback=setCompComNetLoopback, staUsbDevDriver=staUsbDevDriver, setNetbBroOsv=setNetbBroOsv, staIproConnectRtgt=staIproConnectRtgt, staDslPacRxb=staDslPacRxb, setVpnCertificateIkeSharedsecf=setVpnCertificateIkeSharedsecf, setWanPppFail=setWanPppFail, setIproLoaBunBundlepeer3=setIproLoaBunBundlepeer3, setInteEthernEntry=setInteEthernEntry, staDhcp=staDhcp, setMailPop3s=setMailPop3s, staIproRipDynlRips=staIproRipDynlRips, setVlanPorTable=setVlanPorTable, setIproRipWanRxfi=setIproRipWanRxfi, setIpro1nnTable1nnaSou=setIpro1nnTable1nnaSou, setWanScriptsPee=setWanScriptsPee, staIproEstabliSrc=staIproEstabliSrc, staIproRipFiltEntry=staIproRipFiltEntry, staWanPackettraTxu=staWanPackettraTxu, staConfEventlogAcces=staConfEventlogAcces, setNtpRqaRqa=setNtpRqaRqa, staTcpiNetbServerTim=staTcpiNetbServerTim, setLancIntMax=setLancIntMax, setCharTablebuBud=setCharTablebuBud, staCompCom=staCompCom, staDslErrLateco=staDslErrLateco, staTcpiTcpWanrx=staTcpiTcpWanrx, staTcpiDhcp=staTcpiDhcp, staTcpiRadiAccountinAccountingres=staTcpiRadiAccountinAccountingres, setInteModemInitcom=setInteModemInitcom, setWanLayerEntry=setWanLayerEntry, staLanPackRxb=staLanPackRxb, trpVrrp=trpVrrp, staLanByteBytest=staLanByteBytest, staTimeIsdInfoe=staTimeIsdInfoe, setAccoCurMacad=setAccoCurMacad, staCharTimetabMinutesa=staCharTimetabMinutesa, staIsdnFraS0B2f=staIsdnFraS0B2f, staCompComConnectiServerg=staCompComConnectiServerg, setPerfRttmonsJitterminnegds=setPerfRttmonsJitterminnegds, staWanActionsActEntry=staWanActionsActEntry, setWanBackuppTable=setWanBackuppTable, staIproFilterlSrcn=staIproFilterlSrcn, setConfCrontabActi=setConfCrontabActi, firTabPos=firTabPos, setMailSenda=setMailSenda, staTcpiRadiAccountinRoundtriptime=staTcpiRadiAccountinRoundtriptime, staIproHostbloFil=staIproHostbloFil, setPerfRttmoneTable=setPerfRttmoneTable, staVpnDeletev=staVpnDeletev, setVpnCertificateIkeRemoteidty=setVpnCertificateIkeRemoteidty, staDhcpWanIpadd=staDhcpWanIpadd, staCompComComportsBit=staCompComComportsBit, staWanThroughpuTable=staWanThroughpuTable, staCompComBytecounPortnumb=staCompComBytecounPortnumb, staIproVrrpEveEntry=staIproVrrpEveEntry, staDslPppServic=staDslPppServic, setConfResetbu=setConfResetbu, setWanRadiusLoopba=setWanRadiusLoopba, staConfAntithefSendi=staConfAntithefSendi, staWanActionsActRes=staWanActionsActRes, setIproFirObjecTable=setIproFirObjecTable, staAccoAccPeer=staAccoAccPeer, setIproRipIprRtg=setIproRipIprRtg, staTcpiNetbGrouplNet=staTcpiNetbGrouplNet, staPppMlRxseqlo=staPppMlRxseqlo, staModeNetworklistSta=staModeNetworklistSta, staCertCrlCrlIssuer=staCertCrlCrlIssuer, setConfScreenh=setConfScreenh, staPppBacRxcallbackres=staPppBacRxcallbackres, staDslPppRxbad=staDslPppRxbad, setIproFirRulesSou=setIproFirRulesSou, staTcpiNetbNetworNtd=staTcpiNetbNetworNtd, staIsdnFra=staIsdnFra, setIproLoaBunBundlepeer4=setIproLoaBunBundlepeer4, staConfEventlogInfo1=staConfEventlogInfo1, setIproFirRulesLin=setIproFirRulesLin, setWanMtulistMtu=setWanMtulistMtu, staPppCbcDelet=staPppCbcDelet, setDnsOper=setDnsOper, setLancUdp=setLancUdp, staModeSupplyvoltagem=staModeSupplyvoltagem, setConfCrontabInde=setConfCrontabInde, staDslPppTxpadi=staDslPppTxpadi, setWanMtulistEntry=setWanMtulistEntry, staCertSceCasExpsnm=staCertSceCasExpsnm, setWanDslbroaUse=setWanDslbroaUse, staTimeDstTim=staTimeDstTim, setMailSmtps=setMailSmtps, staTcpiNetbPeersTable=staTcpiNetbPeersTable, setHttpRolActionsDes=setHttpRolActionsDes, staPppTxoLcpTable=staPppTxoLcpTable, staWanErrorsEntry=staWanErrorsEntry, staVpnAhSrcad=staVpnAhSrcad, setConfAntitheCal=setConfAntitheCal, staIproRipRx=staIproRipRx, setConfMonitorTracemask1=setConfMonitorTracemask1, setConfAntitheChe=setConfAntitheChe, setWanDslbroaWan=setWanDslbroaWan, setSnmpIptrapsVer=setSnmpIptrapsVer, staPppCbc=staPppCbc, staIproLogtablDstp=staIproLogtablDstp, setConfLl2mOpe=setConfLl2mOpe, setLcrTimSta=setLcrTimSta, setCharTotalun=setCharTotalun, staQueuWanheap=staQueuWanheap, staTcpiHttpActiveRemotep=staTcpiHttpActiveRemotep, staCharTablebuTot=staCharTablebuTot, setIproRouSyn=setIproRouSyn, setIproFirOpenpProt=setIproFirOpenpProt, staCompDevFirmwar=staCompDevFirmwar, staCharTimetabSparemin=staCharTimetabSparemin, staCharTimetabIfc=staCharTimetabIfc, staPptpConTable=staPptpConTable, staVpnEspsas=staVpnEspsas, setWanPptppeeRtg=setWanPptppeeRtg, staTcpiIcmp=staTcpiIcmp, staDhcpLanEntry=staDhcpLanEntry, setTcpiLoopbNam=setTcpiLoopbNam, setIproFirPingb=setIproFirPingb, setHttpRolActionsAct=setHttpRolActionsAct, staIproRipIpriTim=staIproRipIpriTim, setIproRipLanRxfi=setIproRipLanRxfi, setDhcpAddNetwork=setDhcpAddNetwork, setInteEthernPor=setInteEthernPor, staVpnIpcompMode=staVpnIpcompMode, staTcpiNetwSrc=staTcpiNetwSrc, setWanPollingTry=setWanPollingTry, staVlanNetPor=staVlanNetPor, staSnmp=staSnmp, staIproRipWansRipt=staIproRipWansRipt, staPppBacRxcallrequest=staPppBacRxcallrequest, setWanPptppeePor=setWanPptppeePor, setHttpRolOperating=setHttpRolOperating, setVpnNattoperati=setVpnNattoperati, staConfLl2mServDel=staConfLl2mServDel, staWanDeleteval=staWanDeleteval, setInteDslTyp=setInteDslTyp, staCertSceCertsKeyusage=staCertSceCertsKeyusage, firVerVer=firVerVer, setCertSceCerName=setCertSceCerName, staConfAntithefLaste=staConfAntithefLaste, staPppCcpRxcodereject=staPppCcpRxcodereject, staDslPppAcname=staDslPppAcname, setIproRipIprPee=setIproRipIprPee, setCertSceCerApplicat=setCertSceCerApplicat, staUsb=staUsb, staPptpTun=staPptpTun, staIproWanfilt=staIproWanfilt, staPptpRxp=staPptpRxp, staIproRipWildRipt=staIproRipWildRipt, staConfAntithefWaiti=staConfAntithefWaiti, setCertCrlCrl=setCertCrlCrl, staCompDevFullnam=staCompDevFullnam, staTcpiRadiAccountinIpaddress=staTcpiRadiAccountinIpaddress, staPppCcpTxresetreque=staPppCcpTxresetreque, setIproFirPortbDsta=setIproFirPortbDsta, setCertSceSce=setCertSceSce, staConnCont=staConnCont, setDhcpDhcLan=setDhcpDhcLan, setVpnProposalsIpsecEncapsmod=setVpnProposalsIpsecEncapsmod, setWanRoundroHea=setWanRoundroHea, staPppBacRxlinkdropreq=staPppBacRxlinkdropreq, staModeTemperaturedeg=staModeTemperaturedeg, staPppLcpRxdiscardreq=staPppLcpRxdiscardreq, staIproServiceTable=staIproServiceTable, setWanPppTable=setWanPppTable, staCompComBytecounSerialtx=staCompComBytecounSerialtx, setConfSshauthTable=setConfSshauthTable, setDhcpPorPor=setDhcpPorPor, staPppPppIpc=staPppPppIpc, setLcrHolTable=setLcrHolTable, setDnsDyndTim=setDnsDyndTim, staModeInputpuk=staModeInputpuk, setConfLockmin=setConfLockmin, setDnsDhcp=setDnsDhcp, staIproFilterlActi=staIproFilterlActi, staFileConTable=staFileConTable, setNetbNetNtd=setNetbNetNtd, setWanDslbroaVla=setWanDslbroaVla, staCompDevDevicet=staCompDevDevicet, setCertSceRei=setCertSceRei, staQueu=staQueu, setIproFirOpenpEntry=setIproFirOpenpEntry)
mibBuilder.exportSymbols("LANCOM-1711-MIB", staTcpiArpTablCon=staTcpiArpTablCon, staVpnAhMaxkb=staVpnAhMaxkb, setDnsServTable=setDnsServTable, staIproLoadbalConPpt=staIproLoadbalConPpt, staIproRipWildPois=staIproRipWildPois, staPppCha=staPppCha, staVpnConnectClient=staVpnConnectClient, staCompDevDevice=staCompDevDevice, setVpnIsakmpTimIdx=setVpnIsakmpTimIdx, setVpnProposalsIpsecEspauthal=setVpnProposalsIpsecEspauthal, setConfAntitheOut=setConfAntitheOut, setSyslFacFac=setSyslFacFac, staTcpiIpLantx=staTcpiIpLantx, staChar=staChar, setVpnAdditionalgRtgtag5=setVpnAdditionalgRtgtag5, setEcho=setEcho, staPppCcpRxconfigrequ=staPppCcpRxconfigrequ, staTcpiNetbLantx=staTcpiNetbLantx, setDhcpAliTable=setDhcpAliTable, setDnsServSer=setDnsServSer, staEthePortsMdi=staEthePortsMdi, setVpnIsakmpTimRetrtim=setVpnIsakmpTimRetrtim, staCertSceRasEntry=staCertSceRasEntry, staChanBus=staChanBus, setCompWan=setCompWan, staDslPppRxpado=staDslPppRxpado, staMail=staMail, staCertSceCertsName=staCertSceCertsName, setDhcpDef=setDhcpDef, setNetbBroIpa=setNetbBroIpa, setPrinPriPri=setPrinPriPri, setNetbHosEntry=setNetbHosEntry, staTcpiNetbHostliRtg=staTcpiNetbHostliRtg, staTcpiDnsHitlTim=staTcpiDnsHitlTim, staIproRipWildTable=staIproRipWildTable, staVpnConnectState=staVpnConnectState, setPrinPriBid=setPrinPriBid, setTacaSharedsecret=setTacaSharedsecret, staHardCput=staHardCput, setWanScriptsEntry=setWanScriptsEntry, staPppPppLcp=staPppPppLcp, setVpnProposals=setVpnProposals, staDslPacTable=staDslPacTable, setDnsServHos=setDnsServHos, staIproLoadbalConVpn=staIproLoadbalConVpn, staLcrFou=staLcrFou, setVpnAdditionalgRtgtag10=setVpnAdditionalgRtgtag10, staConfScanresuCapip=staConfScanresuCapip, setInteMobileProNetw=setInteMobileProNetw, setCompDevEntry=setCompDevEntry, staIproRipIpriTable=staIproRipIpriTable, setVpnProposalsIkeproIkeproposal3=setVpnProposalsIkeproIkeproposal3, setTacaAccounting=setTacaAccounting, staCompComBytecounEntry=staCompComBytecounEntry, setIproRipLanRipt=setIproRipLanRipt, staAccoLasUsern=staAccoLasUsern, staPppBacTxcallbackres=staPppBacTxcallbackres, setIpro1nnIpsectablRemotes=setIpro1nnIpsectablRemotes, setIproFirOpenpTable=setIproFirOpenpTable, setVpnIsakmpTimEntry=setVpnIsakmpTimEntry, setVpnVpnpeersIkec=setVpnVpnpeersIkec, setDhcpAliImagea=setDhcpAliImagea, setNetbSerNet=setNetbSerNet, setWanPptppeeEntry=setWanPptppeeEntry, setConfFunctioMap=setConfFunctioMap, staPppMlRxdisca=staPppMlRxdisca, staIproRipIpriRtg=staIproRipIpriRtg, staConfFeaturesFea=staConfFeaturesFea, setInteMobileProPin=setInteMobileProPin, setVlanOpe=setVlanOpe, setInteModemInitdia=setInteModemInitdia, setVpnAdditionalgRtgtag1=setVpnAdditionalgRtgtag1, setCertSceCerEntry=setCertSceCerEntry, setDnsFiltDom=setDnsFiltDom, setSyslFacEntry=setSyslFacEntry, staTcpiDhcpNetwoLanifc=staTcpiDhcpNetwoLanifc, staIproActiproIpa=staIproActiproIpa, setNetbSerGro=setNetbSerGro, staConfScanresuHttpp=staConfScanresuHttpp, staVpnAhHasha=staVpnAhHasha, setVpnAdditionalgRemotegateway2=setVpnAdditionalgRemotegateway2, setTacaServerSer=setTacaServerSer, setEchoTcp=setEchoTcp, staLanPackRxu=staLanPackRxu, setTacaSnmpgetrequestsac=setTacaSnmpgetrequestsac, staVlanNetVla=staVlanNetVla, setDnsFiltEntry=setDnsFiltEntry, staIproRipWildGate=staIproRipWildGate, staEthePortsPor=staEthePortsPor, staEtheCabletestrIfc=staEtheCabletestrIfc, staComp=staComp, setIpro1nnServicetaDportf=setIpro1nnServicetaDportf, staIproRipIpriGat=staIproRipIpriGat, staVpn=staVpn, staIproFilterlEntry=staIproFilterlEntry, staIproRipDynwRfc2=staIproRipDynwRfc2, staLcrDel=staLcrDel, setTacaSnmpgetrequestsau=setTacaSnmpgetrequestsau, setNetbNetTable=setNetbNetTable, staAccoTimSys=staAccoTimSys, staChanMode=staChanMode, staAccoCurConnt=staAccoCurConnt, setWanProtect=setWanProtect, staCertCrlCrlIsssnm=staCertCrlCrlIsssnm, setDhcpNetTable=setDhcpNetTable, setConfUpdatecLastfir=setConfUpdatecLastfir, staTcpiTftpWantxr=staTcpiTftpWantxr, setVpnAdditionalgBeginwith=setVpnAdditionalgBeginwith, setVlanTag=setVlanTag, setLanTracel=setLanTracel, staModeSimidiccid=staModeSimidiccid, setWanRoundroPee=setWanRoundroPee, setTcpiArptaPee=setTcpiArptaPee, setDnsSubdTable=setDnsSubdTable, staPppoConSta=staPppoConSta, staLanErroNicerr=staLanErroNicerr, setInteModemDialcom=setInteModemDialcom, setIproFir=setIproFir, setNetbNetEntry=setNetbNetEntry, setVpnProposalsIkeIkeauthal=setVpnProposalsIkeIkeauthal, setIpro1nnIcmpaging=setIpro1nnIcmpaging, staIproConnectSrca=staIproConnectSrca, staTcpiTftpLancon=staTcpiTftpLancon, setInteEthernAss=setInteEthernAss, setTcpiNetwoSrc=setTcpiNetwoSrc, staDslErrStacke=staDslErrStacke, staTcpiTftpLantx=staTcpiTftpLantx, staTcpiHttpHttpau=staTcpiHttpHttpau, setWanIplistIpnet=setWanIplistIpnet, staIproOpenporFilt=staIproOpenporFilt, setVpnAdditionalgRtgtag13=setVpnAdditionalgRtgtag13, staIproLanttle=staIproLanttle, staDslErrQueuee=staDslErrQueuee, setTimeDstclEve=setTimeDstclEve, setWanDslbroaDsl=setWanDslbroaDsl, staCompComComportsInt=staCompComComportsInt, staPppChaRxcha=staPppChaRxcha, setVpnProposalsIpsecpIpsecproposal8=setVpnProposalsIpsecpIpsecproposal8, setSnmpMonitortIpa=setSnmpMonitortIpa, staWanMtuPee=staWanMtuPee, setIproRouIcm=setIproRouIcm, setIproVrrVrrCom=setIproVrrVrrCom, setIproOpe=setIproOpe, setLcrHolInd=setLcrHolInd, setInteEthernCon=setInteEthernCon, staTcpiNetbServerFla=staTcpiNetbServerFla, setInteMobileProQosu=setInteMobileProQosu, staIsdnSigManErrO=staIsdnSigManErrO, staPptp=staPptp, staCompComComporteFra=staCompComComporteFra, staPppRxoIpcEntry=staPppRxoIpcEntry, staCharTablebuIfc=staCharTablebuIfc, setIpro1nnServicetaPeer=setIpro1nnServicetaPeer, staTcpiArpTablPee=staTcpiArpTablPee, staTcpiRadiAccountinPort=staTcpiRadiAccountinPort, staWanActionsActTim=staWanActionsActTim, staIproFilterlDst=staIproFilterlDst, setIpro1nnServicetaActive=setIpro1nnServicetaActive, setPerfRttmonsEntry=setPerfRttmonsEntry, staTcpiRadiAuthenticUnknownty=staTcpiRadiAuthenticUnknownty, setCompComComReadyc=setCompComComReadyc, staConfEventlogIdx=staConfEventlogIdx, staCertSceCasExpire=staCertSceCasExpire, setIproNnnDsts=setIproNnnDsts, setCertSceCasDn=setCertSceCasDn, setTcpiLoopbTable=setTcpiLoopbTable, staAcco=staAcco, staPppLcpRxdiscarded=staPppLcpRxdiscarded, setAcco=setAcco, staIproWantx=staIproWantx, staIproEstabliSou=staIproEstabliSou, firTabDat=firTabDat, setCompComNetRfc2217e=setCompComNetRfc2217e, setCertSceCerCadn=setCertSceCerCadn, setDnsFiltIdx=setDnsFiltIdx, staTcpiTcpWantx=staTcpiTcpWantx, setDnsSubdNet=setDnsSubdNet, setIproFirConneTable=setIproFirConneTable, staVpnIkeIdx=staVpnIkeIdx, staWanErrorsIfc=staWanErrorsIfc, setConfAdminsPas=setConfAdminsPas, staHardSwve=staHardSwve, staCallCap=staCallCap, setVpnMainmodepro=setVpnMainmodepro, setNetbHosIpa=setNetbHosIpa, staAccoCurTxkby=staAccoCurTxkby, staEthePortsAss=staEthePortsAss, setTacaAuthorisation=setTacaAuthorisation, setComp=setComp, setNetbBroBro=setNetbBroBro, staCertCrlCrlIdx=staCertCrlCrlIdx, setDhcpNetNbnsbackup=setDhcpNetNbnsbackup, setNetbSerFla=setNetbSerFla, staPppCcpTxconfigack=staPppCcpTxconfigack, staTcpiTcpLanser=staTcpiTcpLanser, staCertSceCasIssued=staCertSceCasIssued, staTcpiDhcpDhcptLan=staTcpiDhcpDhcptLan, staTimeTim=staTimeTim, setVpnVpnpeersPeer=setVpnVpnpeersPeer, setVlanNetPor=setVlanNetPor, setPrinPriTable=setPrinPriTable, staIproVrrpVirSta=staIproVrrpVirSta, staTcpiNetbBrowseGro=staTcpiNetbBrowseGro, staIproLoadbal=staIproLoadbal, staIproRipWildRips=staIproRipWildRips, staDslIntLin=staDslIntLin, setSnmpMonitortTable=setSnmpMonitortTable, setConfAdminsAct=setConfAdminsAct, staIproRipVrrpTable=staIproRipVrrpTable, staVlanPorTag=staVlanPorTag, staWanMtuEntry=staWanMtuEntry, setCompComNetTable=setCompComNetTable, staInfoIfc=staInfoIfc, setConfTftpcliConfigfil=setConfTftpcliConfigfil, staLayeTable=staLayeTable, setIproRipWanPeer=setIproRipWanPeer, staPppTxoIpcEntry=staPppTxoIpcEntry, setWanPollingEntry=setWanPollingEntry, setTacaAuthentication=setTacaAuthentication, staTcpiTftpLanrxa=staTcpiTftpLanrxa, staPppLcpTxcodereject=staPppLcpTxcodereject, staTcpiNetbBrowseSer=staTcpiNetbBrowseSer, setDhcpAliEntry=setDhcpAliEntry, staTcpiRadiAuthenticTimeouts=staTcpiRadiAuthenticTimeouts, staTcpiDnsHitlDom=staTcpiDnsHitlDom, staCharTimetabEntry=staCharTimetabEntry, staAccoCurTotal=staAccoCurTotal, setWanIncominTable=setWanIncominTable, setNetbBroTable=setNetbBroTable, staPppoNum=staPppoNum, staLanPackIfc=staLanPackIfc, staLanPackTxb=staLanPackTxb, staDhcpLanIpnet=staDhcpLanIpnet, setWanActiontTable=setWanActiontTable, staTcpiArpLant=staTcpiArpLant, staDslErrTxcarr=staDslErrTxcarr, staDslErrSingle=staDslErrSingle, staConfEventlogTable=staConfEventlogTable, staPppBacRxcallbackreq=staPppBacRxcallbackreq, setCompWanDevDev=setCompWanDevDev, setConfLoginer=setConfLoginer, setCertSceChe=setCertSceChe, staConfScanresuRtgta=staConfScanresuRtgta, staPppRxoLcpIfc=staPppRxoLcpIfc, setWanPppPeer=setWanPppPeer, staWanWanqueuep=staWanWanqueuep, staTcpiDnsHitlReq=staTcpiDnsHitlReq, staIproWannetw=staIproWannetw, staCompComBytecounDevicety=staCompComBytecounDevicety, staTcpiRadiAccountinAccountingreq=staTcpiRadiAccountinAccountingreq, setHttpTun=setHttpTun, setInteS0Maxo=setInteS0Maxo, staEtheCabletestrTxd=staEtheCabletestrTxd, staChanChan=staChanChan)
mibBuilder.exportSymbols("LANCOM-1711-MIB", setAccoDel=setAccoDel, setTimeDstclTable=setTimeDstclTable, firVerIfc=firVerIfc, setIproFirFiltePrio=setIproFirFiltePrio, staIproRipDynwMasq=staIproRipDynwMasq, staModeNetworklistNum=staModeNetworklistNum, staIproRipVrrpRip=staIproRipVrrpRip, staTcpi=staTcpi, staPppChaTxres=staPppChaTxres, staHard=staHard, setConfPrompt=setConfPrompt, setNetbGroEntry=setNetbGroEntry, setCompComComDatabi=setCompComComDatabi, setIproFirConneTime=setIproFirConneTime, staTcpiRadiAuthenticAccesscha=staTcpiRadiAuthenticAccesscha, setNetbSerSmb=setNetbSerSmb, staRemoCharg=staRemoCharg, staWanBytetransCrx=staWanBytetransCrx, setVpnProposalsIkeIkecrypta=setVpnProposalsIkeIkecrypta, setIproFirPortbTime=setIproFirPortbTime, staConfLoginrej=staConfLoginrej, staCallBch=staCallBch, setDhcpAddTable=setDhcpAddTable, set=set, staTcpiIpWanrxdisconnect=staTcpiIpWanrxdisconnect, staTcpiDnsWant=staTcpiDnsWant, staPptpEch=staPptpEch, staTcpiDhcpNetwoVlanid=staTcpiDhcpNetwoVlanid, staConnPass=staConnPass, staTcpiArpDele=staTcpiArpDele, staSnmpEveEntry=staSnmpEveEntry, setInteS0Table=setInteS0Table, staPppPapRxdis=staPppPapRxdis, setWanManuald=setWanManuald, setHttpShoEntry=setHttpShoEntry, staIproRipIpriPor=staIproRipIpriPor, staLcr=staLcr, staIsdnSigManDinTable=staIsdnSigManDinTable, setCompCom=setCompCom, staTcpiDhcpDhcptNet=staTcpiDhcpDhcptNet, staTcpiNetbBrowsePee=staTcpiNetbBrowsePee, staIproEstabliDes=staIproEstabliDes, staVpnIpcompDesta=staVpnIpcompDesta, setWanDslbroaMac=setWanDslbroaMac, setHttpRolVariablesTyp=setHttpRolVariablesTyp, trpUplFailBadDev=trpUplFailBadDev, staIproConnectSrcr=staIproConnectSrcr, staLcrProPro=staLcrProPro, staTcpiDhcpLantx=staTcpiDhcpLantx, setVpnProposalsIkeIkeauthmo=setVpnProposalsIkeIkeauthmo, setAccoTimHour=setAccoTimHour, staIproVrrpDel=staIproVrrpDel, setWanRouteriIfc=setWanRouteriIfc, setIproFirActioDes=setIproFirActioDes, staTcpiRadiAuthenticAccessreq=staTcpiRadiAuthenticAccessreq, setTcpiNetwoTyp=setTcpiNetwoTyp, staTcpiDnsHitlIpa=staTcpiDnsHitlIpa, firTabSta=firTabSta, staPppCbcTxres=staPppCbcTxres, setVlanNetNam=setVlanNetNam, staIproWanrx=staIproWanrx, staTcpiDhcpAssig=staTcpiDhcpAssig, staCertSceNumra=staCertSceNumra, setIproFirConneProt=setIproFirConneProt, staLanDele=staLanDele, staIproEstabliTim=staIproEstabliTim, staRemoRemot=staRemoRemot, staVpnIkeHasha=staVpnIkeHasha, staTcpiIpWantx=staTcpiIpWantx, setSyslPor=setSyslPor, staPppCcpTxconfignak=staPppCcpTxconfignak, staIproOpenporSrcr=staIproOpenporSrcr, staIsdnSigManErrEntry=staIsdnSigManErrEntry, staEthePortsCon=staEthePortsCon, setConfLedtest=setConfLedtest, setPerfRttmoneDestinationa=setPerfRttmoneDestinationa, staIproRipFiltIdx=staIproRipFiltIdx, staIproFilterlDstm=staIproFilterlDstm, setWanRouteriTable=setWanRouteriTable, setNetbPeeTable=setNetbPeeTable, setSnmpMonitortEth=setSnmpMonitortEth, staVpnIpcompMaxse=staVpnIpcompMaxse, setIproRipIprTim=setIproRipIprTim, staPppLcpTxterminater=staPppLcpTxterminater, staWanBytetransEntry=staWanBytetransEntry, staTcpiNetbPeersBac=staTcpiNetbPeersBac, staCertCrl=staCertCrl, staTcpiHttpAgentlEntry=staTcpiHttpAgentlEntry, setWanDialuppB2d=setWanDialuppB2d, setVpnAdditionalgRtgtag9=setVpnAdditionalgRtgtag9, staConf=staConf, setNtp=setNtp, setLanTracem=setLanTracem, setNetbGroGro=setNetbGroGro, staMailSen=staMailSen, setIproRipParUpda=setIproRipParUpda, setDnsDnslIpa=setDnsDnslIpa, staHardVpnh=staHardVpnh, staTcpiTftpWantx=staTcpiTftpWantx, setInteModemEscapes=setInteModemEscapes, setWanIplistPeer=setWanIplistPeer, staCompDevState=staCompDevState, staTcpiNetbBrowseEntry=staTcpiNetbBrowseEntry, staVpnEspAge=staVpnEspAge, setVpnAdditionalgRemotegateway1=setVpnAdditionalgRemotegateway1, staIproLogtablDsta=staIproLogtablDsta, staDhcpWanIpnet=staDhcpWanIpnet, staModeNetwork=staModeNetwork, setConfUpdatecServerp=setConfUpdatecServerp, staVpnIpcompTable=staVpnIpcompTable, setWanRadiusPppope=setWanRadiusPppope, staIproRipLansPois=staIproRipLansPois, staAccoLasTxkby=staAccoLasTxkby, setInteDslDow=setInteDslDow, staWanErrorsRxl1=staWanErrorsRxl1, staIproQosTxres=staIproQosTxres, setIproDefEntry=setIproDefEntry, setIproFirPortbFilt=setIproFirPortbFilt, staIproLogtablActi=staIproLogtablActi, staConfScanresuHttps=staConfScanresuHttps, staTcpiArpLane=staTcpiArpLane, staConnTable=staConnTable, staCompComBytecounSerialrx=staCompComBytecounSerialrx, setWanIplistGatew=setWanIplistGatew, staIproVrrpInt=staIproVrrpInt, setAccoLasConnt=setAccoLasConnt, staConfScanresuName=staConfScanresuName, setVlan=setVlan, setIpro1nnIpsectablLclo=setIpro1nnIpsectablLclo, setNetb=setNetb, staQueuQueuepa=staQueuQueuepa, staPppTxoIpcIfc=staPppTxoIpcIfc, staTcpiNetwIpn=staTcpiNetwIpn, firTabTable=firTabTable, staIsdnSigLayLapTei=staIsdnSigLayLapTei, setInteS0Entry=setInteS0Entry, setVpnAdditionalgRtgtag15=setVpnAdditionalgRtgtag15, setVpnProposalsIkeproIkeproposal6=setVpnProposalsIkeproIkeproposal6, staLanErroEntry=staLanErroEntry, staPppCbcRxres=staPppCbcRxres, setHttpRolVariablesIde=setHttpRolVariablesIde, staCertSceCertsTable=staCertSceCertsTable, staAccoCurPeer=staAccoCurPeer, setCertSceUpd=setCertSceUpd, setPerfRttmonsRttmax=setPerfRttmonsRttmax, staTcpiDhcpDelet=staTcpiDhcpDelet, staModeDroppedtxpacke=staModeDroppedtxpacke, staPppoConPee=staPppoConPee, staTcpiNetbGrouplTable=staTcpiNetbGrouplTable, staPppIpcRxconfigack=staPppIpcRxconfigack, setNetbWan=setNetbWan, staPppoConCon=staPppoConCon, staIproVrrpVirPee=staIproVrrpVirPee, setDnsDyndTable=setDnsDyndTable, staTcpiIpLanchecksumerrors=staTcpiIpLanchecksumerrors, setCharDialupm=setCharDialupm, staTcpiTftpWantxe=staTcpiTftpWantxe, setVpnVpnpeersDyna=setVpnVpnpeersDyna, staTcpiRadiAccountinDropped=staTcpiRadiAccountinDropped, staCompComBytecounNetworkr=staCompComBytecounNetworkr, staTcpiRadiAccountinBadauthentica=staTcpiRadiAccountinBadauthentica, setIpro1nnIpsectablFlags=setIpro1nnIpsectablFlags, staTimeDstTable=staTimeDstTable, setWanPppTry=setWanPppTry, setPppoSer=setPppoSer, setConfUpdatecRetryok=setConfUpdatecRetryok, staTcpiTcpLanrx=staTcpiTcpLanrx, lancom_1711_plus=lancom_1711_plus, setIproRipLanNetw=setIproRipLanNetw, setIproFirFilteActi=setIproFirFilteActi, staDslPacRxu=staDslPacRxu, setNetbHosPee=setNetbHosPee, staCompComConnectiPortnum=staCompComConnectiPortnum, setVpnAdditionalgRemotegateway5=setVpnAdditionalgRemotegateway5, setVpnIsakmpTimRetrtimu=setVpnIsakmpTimRetrtimu, setCharTablebuTable=setCharTablebuTable, staPppCbcTxack=staPppCbcTxack, staPppCcpTxconfigrequ=staPppCcpTxconfigrequ, staPppBacRxerrors=staPppBacRxerrors, setSyslSerLoo=setSyslSerLoo, staIproActiproPee=staIproActiproPee, staQueuDhcpcli=staQueuDhcpcli, setTcpiLoopbEntry=setTcpiLoopbEntry, setIpro1nnIpsectablTable=setIpro1nnIpsectablTable, staPppCcpRxconfigreje=staPppCcpRxconfigreje, staCharTotalun=staCharTotalun, staQueuTftpser=staQueuTftpser, staCert=staCert, staCompComComportsPar=staCompComComportsPar, setCharRouteru=setCharRouteru, staTcpiDhcpDhcptMac=staTcpiDhcpDhcptMac, setWanLayerLay2=setWanLayerLay2, staConfLl2mRxma=staConfLl2mRxma, staTimeDay=staTimeDay, setWanActiontPeer=setWanActiontPeer, setCertSceCerChalleng=setCertSceCerChalleng, staVlanNetEntry=staVlanNetEntry, staTcpiDhcpNetwoServerflag=staTcpiDhcpNetwoServerflag, setCertCrl=setCertCrl, staTcpiDhcpDhcptIpa=staTcpiDhcpDhcptIpa, staCompComNetworksRemotep=staCompComNetworksRemotep, staConfAntithefIncom=staConfAntithefIncom, staLanByteIfc=staLanByteIfc, staVlanNetTable=staVlanNetTable, staRemoTable=staRemoTable, setVlanPorTaggi=setVlanPorTaggi, setIproVrrVrrTable=setIproVrrVrrTable, setMailUsern=setMailUsern, setVlanPorEntry=setVlanPorEntry, staTcpiIcmpWanr=staTcpiIcmpWanr, staIproQosTxblo=staIproQosTxblo, setIproRipLanRtgt=setIproRipLanRtgt, setIproFirFilteSst=setIproFirFilteSst, setNetbBroSer=setNetbBroSer, staTcpiHttpDelete=staTcpiHttpDelete, staDslPppTxpadr=staDslPppTxpadr, setHttpRolRenumberv=setHttpRolRenumberv, staPppRxoLcpMru=staPppRxoLcpMru, setCharAdditio=setCharAdditio, setNetbSerHos=setNetbSerHos, staPppChaRxdis=staPppChaRxdis, staIproRipIpriDis=staIproRipIpriDis, setInteS0Type=setInteS0Type, setCharRouterd=setCharRouterd, staVpnConnectHmacle=staVpnConnectHmacle, staConfLoginerr=staConfLoginerr, staModeHistoryTable=staModeHistoryTable, staLanPackEntry=staLanPackEntry, setIproFirFilteSend=setIproFirFilteSend, setLancAccRtg=setLancAccRtg, setIpro1nn=setIpro1nn, setNetbHosRtg=setNetbHosRtg, staPppChaRxfai=staPppChaRxfai, setHttpSta=setHttpSta, setPerfRttmoneDestinationp=setPerfRttmoneDestinationp, trpLAN_Overtemp_Throttle=trpLAN_Overtemp_Throttle, staIproServiceEntry=staIproServiceEntry, staIproPortbloDsta=staIproPortbloDsta, staWanBytetransRxb=staWanBytetransRxb, setVpnVpnpeersRtgt=setVpnVpnpeersRtgt, staConfScanresuEntry=staConfScanresuEntry, staTcpiNetbRegist=staTcpiNetbRegist, setInteModemInitans=setInteModemInitans, setNetbHosTable=setNetbHosTable, setCertSceCasLoopbackaddr=setCertSceCasLoopbackaddr, setNetbSerEntry=setNetbSerEntry, staIproRipDynwTxfi=staIproRipDynwTxfi, staIproRipDynlPois=staIproRipDynlPois, staLayeLay3=staLayeLay3, staTimeDstInd=staTimeDstInd, staPppRxoIpcIpadd=staPppRxoIpcIpadd, staTcpiHttpActiveLocalrt=staTcpiHttpActiveLocalrt, staPppLcpRxterminatea=staPppLcpRxterminatea, staPppTxoLcpCal=staPppTxoLcpCal)
mibBuilder.exportSymbols("LANCOM-1711-MIB", setTcpiAliveRetryi=setTcpiAliveRetryi, staLanInteIfc=staLanInteIfc, trpLogout=trpLogout, staCompComNetworksLocalpo=staCompComNetworksLocalpo, setIproRipLanTable=setIproRipLanTable, setSyslSerTable=setSyslSerTable, staIproLoadbalConTcp=staIproLoadbalConTcp, staCertSceCasEntry=staCertSceCasEntry, setDnsDnslHos=setDnsDnslHos, staTcpiNetbServerIpa=staTcpiNetbServerIpa, staTcpiDnsForw=staTcpiDnsForw, setHttpRolVariablesDef=setHttpRolVariablesDef, setDhcpPorEna=setDhcpPorEna, staQueuIcmpque=staQueuIcmpque, setPrinPriRaw=setPrinPriRaw, staTcpiDhcpDhcptVla=staTcpiDhcpDhcptVla, setCertSceCasEncalg=setCertSceCasEncalg, setVpnAdditionalgRemotegateway4=setVpnAdditionalgRemotegateway4, setCompComOpePor=setCompComOpePor, staLanErroTxerro=staLanErroTxerro, setWanRadiusAuthpo=setWanRadiusAuthpo, staPptpCal=staPptpCal, setIpro1nnIpsectablLchi=setIpro1nnIpsectablLchi, setAccoLasEntry=setAccoLasEntry, setConfAccesstSnmp=setConfAccesstSnmp, staWanPackettraTable=staWanPackettraTable, setTcpiNetwoInt=setTcpiNetwoInt, setIproRipWanPois=setIproRipWanPois, setHttpRolActionsInd=setHttpRolActionsInd, setInteModemDisconn=setInteModemDisconn, setWanDialuppDia=setWanDialuppDia, setIproFirRulesCom=setIproFirRulesCom, setCompComComBitrat=setCompComComBitrat, staIproVrrpEveEve=staIproVrrpEveEve, setConfCrontabMont=setConfCrontabMont, staPppCcpRxconfigack=staPppCcpRxconfigack, staCallEntry=staCallEntry, staDslErrNicerr=staDslErrNicerr, staFileConNam=staFileConNam, staCertCrlCrlDistri=staCertCrlCrlDistri, staPppCbcRxreq=staPppCbcRxreq, staLcrProSuc=staLcrProSuc, setIproUsa=setIproUsa, setDhcpNetOperating=setDhcpNetOperating, staTcpiTcpDelete=staTcpiTcpDelete, staCertSceRasStatus=staCertSceRasStatus, setVpnLayerIkep=setVpnLayerIkep, setConfMonitor=setConfMonitor, staLanLanq=staLanLanq, staIproRipLansRipa=staIproRipLansRipa, staIproVrrpVirVla=staIproVrrpVirVla, setConfTftpcliFirmwaref=setConfTftpcliFirmwaref, staTcpiNetwInt=staTcpiNetwInt, setIproRipR1m=setIproRipR1m, staPppLcpTxechoreply=staPppLcpTxechoreply, setConfAntitheIsd=setConfAntitheIsd, setVpnEstablishsa=setVpnEstablishsa, setDhcpDhcIpa=setDhcpDhcIpa, setIpro1nnIpsectablNl=setIpro1nnIpsectablNl, setRadiBacku=setRadiBacku, setAccoTimInde=setAccoTimInde, staTimeCur=staTimeCur, staVpnIpcompKbyte=staVpnIpcompKbyte, staIsdnSigManErrE=staIsdnSigManErrE, setHttpHtt=setHttpHtt, setMailHoldt=setMailHoldt, staTcpiTftpLantxd=staTcpiTftpLantxd, staLanInteEntry=staLanInteEntry, staPppTxoLcpMru=staPppTxoLcpMru, setAccoCurConne=setAccoCurConne, setNetbHosTim=setNetbHosTim, staPppChaTxret=staPppChaTxret, staIsdnFraS0Sta=staIsdnFraS0Sta, firTabVer=firTabVer, setIproNnnMapp=setIproNnnMapp, staPppLcpTxprotocolre=staPppLcpTxprotocolre, staDhcpLanDomai=staDhcpLanDomai, staCertSceCertsExpsnmp=staCertSceCertsExpsnmp, staVpnIkeMaxse=staVpnIkeMaxse, staDhcpLanDnsba=staDhcpLanDnsba, staWanMtuMtu=staWanMtuMtu, staWanWanqueuee=staWanWanqueuee, staTcpiNetbNetworRtg=staTcpiNetbNetworRtg, staChanEntry=staChanEntry, setVpnAdditionalgRemotegateway9=setVpnAdditionalgRemotegateway9, setVpnCertificateIkeLocalidtyp=setVpnCertificateIkeLocalidtyp, setCertSceCasCasignaturealg=setCertSceCasCasignaturealg, setDhcpPorEntry=setDhcpPorEntry, staTcpiIpWanserviceerrors=staTcpiIpWanserviceerrors, setIproFirAuthp=setIproFirAuthp, staVpnEspMaxkb=staVpnEspMaxkb, staDslPacRxm=staDslPacRxm, staIproRipWildRxfi=staIproRipWildRxfi, setIproRipFilFil=setIproRipFilFil, setPppoNamMac=setPppoNamMac, staVpnIpcompEntry=staVpnIpcompEntry, setLancIntFor=setLancIntFor, staWanErrorsStac=staWanErrorsStac, staCertSceRasExpire=staCertSceRasExpire, setIproFirDenys=setIproFirDenys, setTcpiNonlo=setTcpiNonlo, setIproRipIprTable=setIproRipIprTable, staPppChaRxres=staPppChaRxres, staTcpiDhcpNetwoServerid=staTcpiDhcpNetwoServerid, staTcpiNetbConfli=staTcpiNetbConfli, staCompComConnectiServerr=staCompComConnectiServerr, setVpnVpnpeersDpdi=setVpnVpnpeersDpdi, staWanWanheappa=staWanWanheappa, setWanPollingPeer=setWanPollingPeer, staPppTxoIpcNbnsb=staPppTxoIpcNbnsb, staIproRipLansPort=staIproRipLansPort, setIproRipParUpdd=setIproRipParUpdd, setVpnAdditionalgRemotegateway16=setVpnAdditionalgRemotegateway16, staTcpiSyslLasTim=staTcpiSyslLasTim, staDslPacIfc=staDslPacIfc, setConfUpdatec=setConfUpdatec, setInteModemRequest=setInteModemRequest, setLcrTimNum=setLcrTimNum, staTcpiIpWanfragmentationer=staTcpiIpWanfragmentationer, staVpnIpcompSoftk=staVpnIpcompSoftk, staIproL4error=staIproL4error, staPppoRxp=staPppoRxp, setVpnAdditionalgRtgtag8=setVpnAdditionalgRtgtag8, staCompDevEntry=staCompDevEntry, setWanRadiusClippa=setWanRadiusClippa, staPptpTcp=staPptpTcp, staVpnAhCrypt=staVpnAhCrypt, staTcpiIcmpWanc=staTcpiIcmpWanc, staLanErroRxtoos=staLanErroRxtoos, setConfPasswor=setConfPasswor, setConfAccesstTftp=setConfAccesstTftp, setAccoLasTotal=setAccoLasTotal, setIpro1nnFragmenta=setIpro1nnFragmenta, staConfLl2mClieRxp=staConfLl2mClieRxp, staTcpiHttpAgentlAge=staTcpiHttpAgentlAge, staIproRipDynlVlan=staIproRipDynlVlan, staConnErro=staConnErro, staIsdnSigManErrD=staIsdnSigManErrD, setPerfRttmonsJittermaxnegds=setPerfRttmonsJittermaxnegds, staConfScanresuState=staConfScanresuState, staLcrProEntry=staLcrProEntry, setCharResetbu=setCharResetbu, setVpnCertificateIkeSharedsec=setVpnCertificateIkeSharedsec, setDhcpAliImagef=setDhcpAliImagef, staVpnConnectNatdet=staVpnConnectNatdet, staUsbDevSpeed=staUsbDevSpeed, setSnmpComment4=setSnmpComment4, setDnsFiltTable=setDnsFiltTable, staFileConSiz=staFileConSiz, setCertCrlVal=setCertCrlVal, staEtheCabletestrRxd=staEtheCabletestrRxd, setIproNnnSrcm=setIproNnnSrcm, setConfAsserta=setConfAsserta, staIproFilterlLink=staIproFilterlLink, setAccoLasTxkby=setAccoLasTxkby, setVpnVpnpeersTable=setVpnVpnpeersTable, staCallTable=staCallTable, setLcr=setLcr, setVpnIsakmpTimRetrlim=setVpnIsakmpTimRetrlim, setLancIntOpe=setLancIntOpe, setInteMobileProTable=setInteMobileProTable, setNetbNetNet=setNetbNetNet, setWanPppEntry=setWanPppEntry, staPppLcpRxconfignak=staPppLcpRxconfignak, staIsdnSigLay=staIsdnSigLay, setConfCrontabBase=setConfCrontabBase, staIsdn=staIsdn, setNetbSerTim=setNetbSerTim, setSnmpPassword=setSnmpPassword, setIpro1nnServicetaWanadd=setIpro1nnServicetaWanadd, setIproTagPee=setIproTagPee, staHardMode=staHardMode, staTcpiTftpLanrxw=staTcpiTftpLanrxw, setDhcpAliImages=setDhcpAliImages, staDslErrMultip=staDslErrMultip, setIproVrrRec=setIproVrrRec, setIpro1nnTable1nnaTim=setIpro1nnTable1nnaTim, staVlanPorEntry=staVlanPorEntry, setDhcpAddEntry=setDhcpAddEntry, setPerfRttmonsJittercountnegs=setPerfRttmonsJittercountnegs, staTimeIsdConne=staTimeIsdConne, staTcpiTcpWantxr=staTcpiTcpWantxr, setWanPollingLoopbackad=setWanPollingLoopbackad, staAccoAccUsern=staAccoAccUsern, setVpnMainmodeike=setVpnMainmodeike, staLayeIfc=staLayeIfc, setTacaServerLoo=setTacaServerLoo, trpStatChan=trpStatChan, staDhcpLanDnsde=staDhcpLanDnsde, setSyslMes=setSyslMes, setPrinPriAct=setPrinPriAct, staQueuDnsrxqu=staQueuDnsrxqu, setVpnAdditionalgTable=setVpnAdditionalgTable, setVpn=setVpn, setVpnVpnpeersXaut=setVpnVpnpeersXaut, setVpnCertificate=setVpnCertificate, staTcpiRadiAuthenticMalformed=staTcpiRadiAuthenticMalformed, setDnsDyndEntry=setDnsDyndEntry, staUsbDevVendorid=staUsbDevVendorid, setDhcpNetNetworknam=setDhcpNetNetworknam, setAccoLasRxkby=setAccoLasRxkby, staCompComComportsDat=staCompComComportsDat, staVpnIkeCrypt=staVpnIkeCrypt, staIproRipFiltNam=staIproRipFiltNam, staIproRipDynlDftr=staIproRipDynlDftr, staTcpiRadiInvalidau=staTcpiRadiInvalidau, staTcpiNetbHostliTyp=staTcpiNetbHostliTyp, setPrinPriLpd=setPrinPriLpd, staCertCrlCrlIssued=staCertCrlCrlIssued, setConfTftpcliScriptadd=setConfTftpcliScriptadd, staVpnEspEntry=staVpnEspEntry, setIproVrrVrrEntry=setIproVrrVrrEntry, setConfAccesstHttps=setConfAccesstHttps, staTcpiDhcpNetwoCache=staTcpiDhcpNetwoCache, setTcpiArptaMac=setTcpiArptaMac, setLcrRou=setLcrRou, setHttpRolVariablesMin=setHttpRolVariablesMin, staDsl=staDsl, staPppPppBac=staPppPppBac, staChanPlci=staChanPlci, setCharSpareds=setCharSpareds, setVpnProposalsIkeLifetimes=setVpnProposalsIkeLifetimes, setHttpShoDev=setHttpShoDev, staTcpiNetbBrowseRtg=staTcpiNetbBrowseRtg, setLancAccTable=setLancAccTable, staVpnIkeSrcpo=staVpnIkeSrcpo, staDslErrTable=staDslErrTable, staIproRipFiltTyp=staIproRipFiltTyp, setWanBackupd=setWanBackupd, staTcpiNetbHostliNet=staTcpiNetbHostliNet, staIsdnSig=staIsdnSig, staTcpiTftpLanrxd=staTcpiTftpLanrxd, setIproFirOpenpSrca=setIproFirOpenpSrca, staIproHostbloTable=staIproHostbloTable, staIsdnSigManErrJ=staIsdnSigManErrJ, setAccoTimEntry=setAccoTimEntry, staTcpiDhcpServe=staTcpiDhcpServe, setVpnLayerIkeg=setVpnLayerIkeg, staTcpiIcmpWans=staTcpiIcmpWans, staIproQosRxblo=staIproQosRxblo, staDhcpLanIpadd=staDhcpLanIpadd, setDhcpMax=setDhcpMax, setCharTimetabIfc=setCharTimetabIfc, staCertSceCasSha1fi=staCertSceCasSha1fi, setTcpiAliveFailli=setTcpiAliveFailli, setIproFirOpenpDstp=setIproFirOpenpDstp, staIproLoadbalConSta=staIproLoadbalConSta, staQueuDnstxqu=staQueuDnstxqu, staIproProtocoLan=staIproProtocoLan, staIsdnSigLayLapEntry=staIsdnSigLayLapEntry, setConfUpdatecLastcon=setConfUpdatecLastcon, staTcpiTcpLanche=staTcpiTcpLanche, staLcrTot=staLcrTot, setAccoLasPeer=setAccoLasPeer)
mibBuilder.exportSymbols("LANCOM-1711-MIB", setIproRipIprGat=setIproRipIprGat, setNetbGroPee=setNetbGroPee, staTcpiNetbNetworNet=staTcpiNetbNetworNet, setVpnProposalsIkeproIkeproposal1=setVpnProposalsIkeproIkeproposal1, staUsbRei=staUsbRei, staIproRipDynlTable=staIproRipDynlTable, setPerfRttmonsJittermaxnegsd=setPerfRttmonsJittermaxnegsd, staIproEstabliTable=staIproEstabliTable, staDhcpLanNbnsb=staDhcpLanNbnsb, staIproLoadbalConTable=staIproLoadbalConTable, staAccoAccConnt=staAccoAccConnt, setDnsDnsdTable=setDnsDnsdTable, staTcpiDhcpRxreq=staTcpiDhcpRxreq, setWanRadiusAuthpr=setWanRadiusAuthpr, staTimeUtc=staTimeUtc, staIproVrrpVirBpr=staIproVrrpVirBpr, staInfoB1d=staInfoB1d, staIproVrrpMacMac=staIproVrrpMacMac, staIproHoconnlTim=staIproHoconnlTim, staDhcpWanGatew=staDhcpWanGatew, staQueuDhcpser=staQueuDhcpser, staTcpiIcmpDele=staTcpiIcmpDele, setPerfRttmonsJittersumposds=setPerfRttmonsJittersumposds, staVpnIkeEntry=staVpnIkeEntry, staVpnIpcomps=staVpnIpcomps, setSnmpComment1=setSnmpComment1, setPppoPorEna=setPppoPorEna, setTcpiNetwoEntry=setTcpiNetwoEntry, staConfLantotal=staConfLantotal, trpHTTP_Tunnel_Close=trpHTTP_Tunnel_Close, setIproNnnSrca=setIproNnnSrca, staIproLanrout=staIproLanrout, staTcpiDhcpNetwoBroadcastb=staTcpiDhcpNetwoBroadcastb, setIproIprIpa=setIproIprIpa, setInteMobileProApn=setInteMobileProApn, setPrinAccIpa=setPrinAccIpa, setVpnAdditionalgEntry=setVpnAdditionalgEntry, staTcpiTftpLanrx=staTcpiTftpLanrx, setIproRipIprPor=setIproRipIprPor, setHttpShoPos=setHttpShoPos, setCertCrlAlt=setCertCrlAlt, staTcpiNetbGrouplTyp=staTcpiNetbGrouplTyp, setLancIntEntry=setLancIntEntry, setIpro1nnIpsectablRclo=setIpro1nnIpsectablRclo, staPptpAck=staPptpAck, setCompComOpeTable=setCompComOpeTable, staDslPpp=staDslPpp, setIproFirAppliFtpMin=setIproFirAppliFtpMin, staDslErrRxtool=staDslErrRxtool, staPppBacRxdiscarded=staPppBacRxdiscarded, staVpnEspSpi=staVpnEspSpi, setIproFirAppliFtpFxp=setIproFirAppliFtpFxp, setConfTftpcli=setConfTftpcli, staTcpiRadiAuthenticEntry=staTcpiRadiAuthenticEntry, setWanRouteriEntry=setWanRouteriEntry, setCharRouteri=setCharRouteri, setCertSceCasUrl=setCertSceCasUrl, staTcpiRadiAccountinPendingreques=staTcpiRadiAccountinPendingreques, setDhcpNetEntry=setDhcpNetEntry, setHttpRolRenumbera=setHttpRolRenumbera, staEthePortsLin=staEthePortsLin, setConfCrontabHour=setConfCrontabHour, trapgrp=trapgrp, staQueuWanqueu=staQueuWanqueu, staTcpiSyslLasIdx=staTcpiSyslLasIdx, staAccoLasMacad=staAccoLasMacad, setVpnAdditionalgRtgtag4=setVpnAdditionalgRtgtag4, staIproRipDynwRtgt=staIproRipDynwRtgt, staCompComBytecounTable=staCompComBytecounTable, setCertCrlUse=setCertCrlUse, staIproActiproTable=staIproActiproTable, staIproVrrpMacVir=staIproVrrpMacVir, staVpnIpcompHasha=staVpnIpcompHasha, staTcpiNetbWnodes=staTcpiNetbWnodes, staIsdnFraS0Entry=staIsdnFraS0Entry, setDhcpHosMac=setDhcpHosMac, staTcpiTftpWanrxa=staTcpiTftpWanrxa, staIproRipWildRipa=staIproRipWildRipa, staIproPortbloEntry=staIproPortbloEntry, staVpnConnectCryptl=staVpnConnectCryptl, setConfLl2m=setConfLl2m, staAccoTimEntry=staAccoTimEntry, PYSNMP_MODULE_ID=lancom_1711_plus, setVpnProposalsIpsecLifetimek=setVpnProposalsIpsecLifetimek, setIproRouRou=setIproRouRou, staIsdnSigManDinS0a=staIsdnSigManDinS0a, staVpnIpcompPeer=staVpnIpcompPeer, setTcpiDnsde=setTcpiDnsde, staConfOutbanda=staConfOutbanda, staTcpiTcpWanser=staTcpiTcpWanser, trpVPNConn=trpVPNConn, staTcpiIpLanrx=staTcpiIpLanrx, staTcpiNetbServerOsv=staTcpiNetbServerOsv, staDslErrEntry=staDslErrEntry, staCompComComporteTable=staCompComComporteTable, setConfMaximum=setConfMaximum, setIproFirFilteDsta=setIproFirFilteDsta, staPppCbcRxdis=staPppCbcRxdis, staTcpiTftpWanrxr=staTcpiTftpWanrxr, setWanRadiusOperat=setWanRadiusOperat, setDnsDyndHos=setDnsDyndHos, setVpnProposalsIkeIkecryptk=setVpnProposalsIkeIkecryptk, staCertSceRasKeyusa=staCertSceRasKeyusa, setWanActiontCheck=setWanActiontCheck, setPerfRttmonsJittercountposd=setPerfRttmonsJittercountposd, staConfScanresuVersi=staConfScanresuVersi, staIproRipVrrpRou=staIproRipVrrpRou, staPppoConEntry=staPppoConEntry, setIproIprAct=setIproIprAct, staWanWanqueuem=staWanWanqueuem, staModeRegistration=staModeRegistration, staTcpiHttpActiveLocalho=staTcpiHttpActiveLocalho, staIproVrrpEveSrc=staIproVrrpEveSrc, setPerfRttmonsJittercountposs=setPerfRttmonsJittercountposs, staIproRipLansRips=staIproRipLansRips, setDnsDyndIpa=setDnsDyndIpa, setRadiAuthr=setRadiAuthr, staAccoCurUsern=staAccoCurUsern, staTcpiDhcpNetwoEntry=staTcpiDhcpNetwoEntry, staPppCbcRxack=staPppCbcRxack, staIsdnSigManErrB=staIsdnSigManErrB, staModeModeminfo=staModeModeminfo, staPppCcpTxcodereject=staPppCcpTxcodereject, staPppMlRxnotfr=staPppMlRxnotfr, staPptpDro=staPptpDro, staPppLcpRxprotocolre=staPppLcpRxprotocolre, staPptpConIpadd=staPptpConIpadd, setIpro1nnIpsectablLocalsp=setIpro1nnIpsectablLocalsp, staConfWanactiv=staConfWanactiv, staTcpiNetbNetworInt=staTcpiNetbNetworInt, setIproFirActioTable=setIproFirActioTable, staLayeWanl=staLayeWanl, staVpnEspTable=staVpnEspTable, setCompComNetConnectp=setCompComNetConnectp, staChanVpnco=staChanVpnco, setDhcpDhcTable=setDhcpDhcTable, staPptpConNbnsb=staPptpConNbnsb, staWanBytetransTable=staWanBytetransTable, setTcpiArptaEntry=setTcpiArptaEntry, setCompComComParity=setCompComComParity, setIproFirAppliApp=setIproFirAppliApp, setTimeDayli=setTimeDayli, setWanIplistTable=setWanIplistTable, staCompComComporteDev=staCompComComporteDev, staPppPapTxreq=staPppPapTxreq, staCharRouteru=staCharRouteru, staIsdnLin=staIsdnLin, setCertSceCerDevicece=setCertSceCerDevicece, staTcpiNetbGroups=staTcpiNetbGroups, setHttpRolActionsTable=setHttpRolActionsTable, staIproProtocoWan=staIproProtocoWan, setWanRoundroEntry=setWanRoundroEntry, setCharTimetabEntry=setCharTimetabEntry, setVpnVpnpeersLaye=setVpnVpnpeersLaye, setVpnProposalsIpsecpIpsecproposal2=setVpnProposalsIpsecpIpsecproposal2, staCertSceNumce=staCertSceNumce, setTimeFetch=setTimeFetch, staIproRipWansEntry=staIproRipWansEntry, staPppRxoLcpTable=staPppRxoLcpTable, setIproFirRulesVpn=setIproFirRulesVpn, staIproLanloca=staIproLanloca, staTcpiHttpActiveEntry=staTcpiHttpActiveEntry, staIproOpenporEntry=staIproOpenporEntry, setVpnQuickmodepr=setVpnQuickmodepr, staLanErroStacke=staLanErroStacke, staTcpiNetwTyp=staTcpiNetwTyp, staPppLcpTxterminatea=staPppLcpTxterminatea, staIproOpenporProt=staIproOpenporProt, setIpro1nnIpsecagin=setIpro1nnIpsecagin, setDhcpNetDnsdefault=setDhcpNetDnsdefault, setInte=setInte, staPppMl=staPppMl, staIproRipFiltIpa=staIproRipFiltIpa, setIproFirConneSrcr=setIproFirConneSrcr, staQueuLanheap=staQueuLanheap, setTaca=setTaca, staCompComComportsSto=staCompComComportsSto, staIproRipLansRipt=staIproRipLansRipt, setLcrTimDay=setLcrTimDay, setIproRipLanRips=setIproRipLanRips, setDhcpDhcTyp=setDhcpDhcTyp, staIproOpenporDstp=staIproOpenporDstp, setDhcpNetAdaption=setDhcpNetAdaption, setWanRoundroTable=setWanRoundroTable, setHttpRol=setHttpRol, staTcpiArpWanr=staTcpiArpWanr, staVpnConnectEntry=staVpnConnectEntry, staTcpiNetbBrowseOsv=staTcpiNetbBrowseOsv, setAccoCurUsern=setAccoCurUsern, setDhcpNetBroadcasta=setDhcpNetBroadcasta, setConfLanguag=setConfLanguag, staCompDevVendor=staCompDevVendor, staTcpiArpWane=staTcpiArpWane, staCompComComportsEntry=staCompComComportsEntry, setWanRouteriTyp=setWanRouteriTyp, setAccoAccConne=setAccoAccConne, staTcpiHttpActiveLocalpo=staTcpiHttpActiveLocalpo, setIproIprEntry=setIproIprEntry, setIproIprMas=setIproIprMas, staModePinstatus=staModePinstatus, setSnmpLocation=setSnmpLocation, staPppLcp=staPppLcp, staCertSceCertsExtended=staCertSceCertsExtended, staIproQosIfc=staIproQosIfc, staVlanPorPor=staVlanPorPor, staTcpiTftpLanrxo=staTcpiTftpLanrxo, staTcpiTftpWantxa=staTcpiTftpWantxa, staIproRipDynwGate=staIproRipDynwGate, staTcpiDhcpWantx=staTcpiDhcpWantx, staConfEventlogIpadd=staConfEventlogIpadd, setIproSen=setIproSen, staCompComComportsDev=staCompComComportsDev, staPppLcpDeletevalues=staPppLcpDeletevalues, staDslBytEntry=staDslBytEntry, setCertSceCasName=setCertSceCasName, staCompComNetworksEntry=staCompComNetworksEntry, setWanScriptsTable=setWanScriptsTable, setIproRipParMaxh=setIproRipParMaxh, staTcpiNetbBnodes=staTcpiNetbBnodes, setVpnVpnpeersExtr=setVpnVpnpeersExtr, staRemoMode=staRemoMode, setIproFirFilteLink=setIproFirFilteLink, setVpnAllowremote=setVpnAllowremote, staPppRxoLcpPfc=staPppRxoLcpPfc, setDnsDnsdEntry=setDnsDnsdEntry, setMailLoopb=setMailLoopb, staPppIpcTxconfigack=staPppIpcTxconfigack, setNetbSerRtg=setNetbSerRtg, setIproFirHostbTable=setIproFirHostbTable, staWanWantxdisc=staWanWantxdisc, staCharRouteri=staCharRouteri, staLayeEntry=staLayeEntry, staEthePortsAut=staEthePortsAut, setVpnProposalsIpsecpIpsecproposal1=setVpnProposalsIpsecpIpsecproposal1, setNtpSer=setNtpSer, staIproEstabliDpo=staIproEstabliDpo, setDhcpNetDnsbackup=setDhcpNetDnsbackup, staIproLoadbalConBun=staIproLoadbalConBun, setWan=setWan, staPppCcpRxresetack=staPppCcpRxresetack, setVpnCertificateIkeEntry=setVpnCertificateIkeEntry, setVpnProposalsIpsecEspcrypta=setVpnProposalsIpsecEspcrypta, staTcpiNetbServerTable=staTcpiNetbServerTable, staCertSceCasIdx=staCertSceCasIdx, staTimeDstEve=staTimeDstEve, staCharTablebuBud=staCharTablebuBud, setConfTftpcliBytesperh=setConfTftpcliBytesperh, staIproRipRequ=staIproRipRequ, setSnmpReadonly=setSnmpReadonly, staWanThroughpuTxsa=staWanThroughpuTxsa, setInteModemCycleti=setInteModemCycleti, staTcpiDhcpTxack=staTcpiDhcpTxack, setTacaEncryption=setTacaEncryption, staVpnAhKbyte=staVpnAhKbyte)
mibBuilder.exportSymbols("LANCOM-1711-MIB", setIproFirAppliIrc=setIproFirAppliIrc, staEtheCabletestrTxs=staEtheCabletestrTxs, setWanRouteriMsn=setWanRouteriMsn, setAccoTimMinu=setAccoTimMinu, setIproFirRulesPri=setIproFirRulesPri, setLancAccIpn=setLancAccIpn, setNtpRqt=setNtpRqt, setWanDslbroaSht=setWanDslbroaSht, setIproRipFilEntry=setIproRipFilEntry, staEthePortsFlo=staEthePortsFlo, setIproFirConneDest=setIproFirConneDest, setSyslSerIpa=setSyslSerIpa, staConnActi=staConnActi, staDslPppTxpadt=staDslPppTxpadt, staWanThroughpuTxsc=staWanThroughpuTxsc, staIproHostbloEntry=staIproHostbloEntry, staDslPppDelete=staDslPppDelete, setCharDaysper=setCharDaysper, setVpnQuickmodesh=setVpnQuickmodesh, setTacaServerEntry=setTacaServerEntry, staUsbDevBus=staUsbDevBus, setDnsDynaPor=setDnsDynaPor, setIproFirFilteDstm=setIproFirFilteDstm, staTcpiDhcpNetwoGatewayadd=staTcpiDhcpNetwoGatewayadd, setSnmpIptrapsLoo=setSnmpIptrapsLoo, staModeSupplyvoltages=staModeSupplyvoltages, staVpnConnectRemote=staVpnConnectRemote, firVerSer=firVerSer, setCompComComHandsh=setCompComComHandsh, setIpro1nnIpsectablNr=setIpro1nnIpsectablNr, staQueuIpqueue=staQueuIpqueue, trpHTTP_Tunnel_Open=trpHTTP_Tunnel_Open, staPppoConMac=staPppoConMac, staPppTxoLcpAcc=staPppTxoLcpAcc, setWanRoundroRou=setWanRoundroRou, staTcpiNetbNetworVla=staTcpiNetbNetworVla, setPerfRttmonsRttcount=setPerfRttmonsRttcount, setPrinAccTable=setPrinAccTable, setDnsDynaTable=setDnsDynaTable, staCompComNetworksLasterr=staCompComNetworksLasterr, setConfPredefaEntry=setConfPredefaEntry, setIproFirFilteEntry=setIproFirFilteEntry, setAccoCurTxkby=setAccoCurTxkby, setVpnProposalsIkeLifetimek=setVpnProposalsIkeLifetimek, staTcpiNetbWanrx=staTcpiNetbWanrx, setTcpiAliveTarget=setTcpiAliveTarget, staLanInteTable=staLanInteTable, staLanByteRxbyte=staLanByteRxbyte, staLanPackTxp=staLanPackTxp, staEthe=staEthe, staCompComComportePor=staCompComComportePor, setWanPppAuthentres=setWanPppAuthentres, staTcpiNetbServerSmb=staTcpiNetbServerSmb, setVpnProposalsIkeproIkeproposal7=setVpnProposalsIkeproIkeproposal7, setVpnProposalsIkeproIkeproposal4=setVpnProposalsIkeproIkeproposal4, staLanPackTable=staLanPackTable, othManDis=othManDis, staPppoConCha=staPppoConCha, setVpnProposalsIpsecpEntry=setVpnProposalsIpsecpEntry, staIproRipDynwRips=staIproRipDynwRips, staTcpiArpTablMac=staTcpiArpTablMac, setWanPppTime=setWanPppTime, setAccoTimDay=setAccoTimDay, staPppCbcTxreq=staPppCbcTxreq, staDslBytTxb=staDslBytTxb, setTcpiDnsba=setTcpiDnsba, setCharTimetabMinutesa=setCharTimetabMinutesa, setEchoOpe=setEchoOpe, staIproQosDowns=staIproQosDowns, staIproRipDynlRxfi=staIproRipDynlRxfi, staTcpiDhcpNetwoStartaddre=staTcpiDhcpNetwoStartaddre, setVpnVpnpeersIkee=setVpnVpnpeersIkee, setIproFirHostbFil=setIproFirHostbFil, staTcpiTcpWanche=staTcpiTcpWanche, staUsbDevProducti=staUsbDevProducti, staCertSceRasIssuer=staCertSceRasIssuer, staDslErrRxerro=staDslErrRxerro, setIproFirConneFilt=setIproFirConneFilt, staTcpiArp=staTcpiArp, staDhcpWanTable=staDhcpWanTable, setWanMtulistTable=setWanMtulistTable, staCertSceRasIdx=staCertSceRasIdx, setWanDialpre=setWanDialpre, staMailDis=staMailDis, staAccoAccConne=staAccoAccConne, staPppIpcTxconfignak=staPppIpcTxconfignak, staConfOutbandb=staConfOutbandb, staConfLoginloc=staConfLoginloc, setIproFirFilteDst=setIproFirFilteDst, staIsdnSigManDinLay=staIsdnSigManDinLay, staAccoCurRxkby=staAccoCurRxkby, staIproRipErro=staIproRipErro, staPppLcpTxconfignak=staPppLcpTxconfignak, setDnsServEntry=setDnsServEntry, staIproVrrpMacRou=staIproVrrpMacRou, staTcpiNetbGrouplPee=staTcpiNetbGrouplPee, staIproFilterlSend=staIproFilterlSend, staIproLogtablFilt=staIproLogtablFilt, setNetbWat=setNetbWat, staIproActiproMas=staIproActiproMas, staTcpiDhcpNetwoNetmask=staTcpiDhcpNetwoNetmask, staPptpConDnsde=staPptpConDnsde, setCertSceCerSubjecta=setCertSceCerSubjecta, staChanApp=staChanApp, setAccoAccUsern=setAccoAccUsern, staVpnEspDesta=staVpnEspDesta, staLcrNot=staLcrNot, staHardCpuc=staHardCpuc, setLcrTimInd=setLcrTimInd, setVlanPorAllow=setVlanPorAllow, staDslDel=staDslDel, setCertCrlPre=setCertCrlPre, staTcpiIcmpLanr=staTcpiIcmpLanr, staIproRipResp=staIproRipResp, staSnmpEveTable=staSnmpEveTable, staLayeEnca=staLayeEnca, setCompWanDevOpe=setCompWanDevOpe, staPppIpc=staPppIpc, setIproRipWanRfc2=setIproRipWanRfc2, setVpnProposalsIpsecName=setVpnProposalsIpsecName, staTimeIsdInfor=staTimeIsdInfor, setNetbSerSer=setNetbSerSer, staIproRipDynwPois=staIproRipDynwPois, staPppMlRxmrrue=staPppMlRxmrrue, staTacaDelet=staTacaDelet, setIproFirAppliFtpFtp=setIproFirAppliFtpFtp, setVlanNetTable=setVlanNetTable, staPppLcpRxcodereject=staPppLcpRxcodereject, staEthePortsPri=staEthePortsPri, staPppoDel=staPppoDel, setWanIplistNbnsb=setWanIplistNbnsb, setAccoCurTable=setAccoCurTable, staTcpiHttpHttpac=staTcpiHttpHttpac, staTcpiIpWanchecksumerrors=staTcpiIpWanchecksumerrors, setCertSceCerTable=setCertSceCerTable, setWanDialuppB1d=setWanDialuppB1d, staConfScanresuTable=staConfScanresuTable, staDslErrCollis=staDslErrCollis, setDhcpNetBroadcastb=setDhcpNetBroadcastb, staIproDeletev=staIproDeletev, staIproConnectTime=staIproConnectTime, setNtpRqaEntry=setNtpRqaEntry, setAccoAccConnt=setAccoAccConnt, setCertSceCasCafingerprint=setCertSceCasCafingerprint, staTcpiNetwNet=staTcpiNetwNet, setIproRouL3l=setIproRouL3l, staTcpiSyslDel=staTcpiSyslDel, staCompComNetworksTable=staCompComNetworksTable, staTimeDstDay=staTimeDstDay, staTcpiDhcpDhcptHos=staTcpiDhcpDhcptHos, setVpnAdditionalgRemotegateway8=setVpnAdditionalgRemotegateway8, staCertSceCasMd5fin=staCertSceCasMd5fin, staAccoLasConnt=staAccoLasConnt, staTcpiNetbBrowseTim=staTcpiNetbBrowseTim, setLancIntEaz=setLancIntEaz, staTcpiRadiAuthenticTable=staTcpiRadiAuthenticTable, setDhcpHosHos=setDhcpHosHos, staPppPapDelet=staPppPapDelet, staIproQosPeer=staIproQosPeer, setWanDialuppTable=setWanDialuppTable, setIproFirConneDstp=setIproFirConneDstp, setPerfRttmonaFre=setPerfRttmonaFre, setDhcpDhcNet=setDhcpDhcNet, staPppRxoIpcTable=staPppRxoIpcTable, staModeHistoryNet=staModeHistoryNet, staCertSceCasIssuer=staCertSceCasIssuer, setConfFunctioEntry=setConfFunctioEntry, setDnsLeas=setDnsLeas, setWanLayerLay3=setWanLayerLay3, setInteEthernMdi=setInteEthernMdi, setVlanNetVla=setVlanNetVla, staTcpiNetbNetworEntry=staTcpiNetbNetworEntry, staDhcpWanNbnsd=staDhcpWanNbnsd, setInteMobileProSele=setInteMobileProSele, staIproRipDynwEntry=staIproRipDynwEntry, staTcpiTftpLanrxe=staTcpiTftpLanrxe, setWanDialuppWan=setWanDialuppWan, staPppRxoLcpAcc=staPppRxoLcpAcc, staVpnAhSofts=staVpnAhSofts, staTcpiNetbHostliTable=staTcpiNetbHostliTable, staIsdnLinS0Table=staIsdnLinS0Table, setVpnProposalsIpsecIpcompalg=setVpnProposalsIpsecIpcompalg, traps=traps, setIproDefSto=setIproDefSto, staQueuProthea=staQueuProthea, staCharRouterd=staCharRouterd, setDhcpNetNbnsdefaul=setDhcpNetNbnsdefaul, setIproFirPorts=setIproFirPorts, setNetbSerTable=setNetbSerTable, staConfLl2mClieDel=staConfLl2mClieDel, staDhcpLanNbnsd=staDhcpLanNbnsd, setIproLoaBunEntry=setIproLoaBunEntry, setDhcpHosEntry=setDhcpHosEntry, setVpnProposalsIpsecTable=setVpnProposalsIpsecTable, staPppBacRxcallrespons=staPppBacRxcallrespons, staDslBytRxb=staDslBytRxb, setDnsDnslEntry=setDnsDnslEntry, staPppCcpRxdiscarded=staPppCcpRxdiscarded, staDslPppRxdata=staDslPppRxdata, staVpnAhSpi=staVpnAhSpi, staIproRipDynwDftr=staIproRipDynwDftr, setTcpiAlive=setTcpiAlive, staVpnConnectHmacal=staVpnConnectHmacal, staTimeDstMon=staTimeDstMon, staModeHistoryTim=staModeHistoryTim, staTcpiDele=staTcpiDele, staIproServiceKbytesre=staIproServiceKbytesre, staTcpiDhcpNetwoTable=staTcpiDhcpNetwoTable, setIproIprIpn=setIproIprIpn, staIproLogtablTable=staIproLogtablTable, setCertSceCerSubject=setCertSceCerSubject, setWanPptppeePee=setWanPptppeePee, setIproWan=setIproWan, staRemoIfc=staRemoIfc, staVpnIkeIkeau=staVpnIkeIkeau, setConfAdminge=setConfAdminge, staPppoDro=staPppoDro, setPppoOpe=setPppoOpe, staConfLl2mClieRxu=staConfLl2mClieRxu, setLanMacadd=setLanMacadd, staQueuArpqueu=staQueuArpqueu, setNetbBroNet=setNetbBroNet, setIproDefInd=setIproDefInd, staConfEventlogEvent=staConfEventlogEvent, staIproLogtablIdx=staIproLogtablIdx, staPppCcpTxconfigreje=staPppCcpTxconfigreje, setHttp=setHttp, setTcpiNetwoRtg=setTcpiNetwoRtg, setDhcpNetGatewayadd=setDhcpNetGatewayadd, staInfoTable=staInfoTable, staPppLcpRxconfigreje=staPppLcpRxconfigreje, setTcpiNetwoIpa=setTcpiNetwoIpa, setIproFirOpera=setIproFirOpera, staCompComComportePar=staCompComComportePar, setAccoTimActi=setAccoTimActi, setIproNnnTable=setIproNnnTable, trpUplSucc=trpUplSucc, setConfAntitheEna=setConfAntitheEna, staUsbDevProduct=staUsbDevProduct, staPptpConChann=staPptpConChann, staTcpiNetwIpa=staTcpiNetwIpa, setNetbSerIpa=setNetbSerIpa, setWanPptppeeTable=setWanPptppeeTable, setConfAntithe=setConfAntithe, staVpnPeers=staVpnPeers, staWanActionsActAct=staWanActionsActAct, setWanPollingTime=setWanPollingTime, firTabSiz=firTabSiz, setIproRipWanMasq=setIproRipWanMasq, setConfSshauthIfc=setConfSshauthIfc, setInteS0Maxi=setInteS0Maxi, staTcpiDnsHitlTable=staTcpiDnsHitlTable, setIproFirAppli=setIproFirAppli, setConfAdminsTable=setConfAdminsTable)
mibBuilder.exportSymbols("LANCOM-1711-MIB", staTcpiNetbPeersTim=staTcpiNetbPeersTim, setConfAccesstTelnets=setConfAccesstTelnets, staTcpiNetbHosts=staTcpiNetbHosts, staCertSceCasName=staCertSceCasName, staCertSceCasIsssnm=staCertSceCasIsssnm, setCharActivat=setCharActivat, setInteMobileProMode=setInteMobileProMode, staWanActionsLocRem=staWanActionsLocRem, setIpro1nnIpsectablRchi=setIpro1nnIpsectablRchi, staPppRxoLcpAut=staPppRxoLcpAut, staPppLcpTxconfigreje=staPppLcpTxconfigreje, setWanLayerEnca=setWanLayerEnca, staPppLcpTxdiscardreq=staPppLcpTxdiscardreq, setCharBudgetu=setCharBudgetu, setIproRipParHold=setIproRipParHold, setAccoAccPeer=setAccoAccPeer, staAccoLasPeer=staAccoLasPeer, setConfWan=setConfWan, setHttpUse=setHttpUse, staWanErrorsRxl2=staWanErrorsRxl2, setPerfRttmonaTable=setPerfRttmonaTable, staVpnIpcompAge=staVpnIpcompAge, staTcpiTftpWantxd=staTcpiTftpWantxd, staRemoConnt=staRemoConnt, staLanLanh=staLanLanh, staConfLl2mRxbr=staConfLl2mRxbr, staIsdnSigManErrA=staIsdnSigManErrA, staCertSceRasTable=staCertSceRasTable, setIpro1nnTable1nnaHan=setIpro1nnTable1nnaHan, setWanPppAuthentreq=setWanPppAuthentreq, setIproRipWanRips=setIproRipWanRips, staCertCrlCrlStatus=staCertCrlCrlStatus, setSyslFacSou=setSyslFacSou, staTcpiIpLanserviceerrors=staTcpiIpLanserviceerrors, setIproFirRulesDes=setIproFirRulesDes, setConfAdminsFun=setConfAdminsFun, setTimeTimec=setTimeTimec, staCompComNetworksDevicet=staCompComNetworksDevicet, setIproRipIprNet=setIproRipIprNet, staIproRipDisc=staIproRipDisc, staIsdnFraS0B1f=staIsdnFraS0B1f, staConfAntithefState=staConfAntithefState, setIproLoa=setIproLoa, setNetbGroTable=setNetbGroTable, staTcpiNetbGrouplTim=staTcpiNetbGrouplTim, setNetbSco=setNetbSco, setHttpShoTable=setHttpShoTable, setConfFunctioKey=setConfFunctioKey, staIsdnSigLayLapTable=staIsdnSigLayLapTable, setWanPppTerm=setWanPppTerm, setInteEthernTable=setInteEthernTable, setCompComOpeEntry=setCompComOpeEntry, setSnmp=setSnmp, setPrinAccIpn=setPrinAccIpn, staLanErroIfc=staLanErroIfc, setMailPassw=setMailPassw, staTcpiArpTablVla=staTcpiArpTablVla, staIproLoadbalConEntry=staIproLoadbalConEntry, setIproRipLanEntry=setIproRipLanEntry, setVpnProposalsIkeproIkeproposal8=setVpnProposalsIkeproIkeproposal8, staModeHistoryMod=staModeHistoryMod, setWanPptppeeIpa=setWanPptppeeIpa, staPppoSes=staPppoSes, staIproRipDynlEntry=staIproRipDynlEntry, setConfCrontabDayo=setConfCrontabDayo, setTcpiOpera=setTcpiOpera, staTcpiSyslLasSou=staTcpiSyslLasSou, setVpnQuickmodepf=setVpnQuickmodepf, staPppBacTxcallrequest=staPppBacTxcallrequest, staIproQosTxreq=staIproQosTxreq, staCompComConnectiDevicet=staCompComConnectiDevicet, staIproWantype=staIproWantype, staCompDevTable=staCompDevTable, staCompComComporteFul=staCompComComporteFul, setVpnProposalsIpsecpTable=setVpnProposalsIpsecpTable, setInteDslIfc=setInteDslIfc, setWanRadiusServer=setWanRadiusServer, staRemoCount=staRemoCount, setPerfRttmonaInd=setPerfRttmonaInd, setIproFirFilteDstn=setIproFirFilteDstn, staVlan=staVlan, setWanIncominEntry=setWanIncominEntry, staCurr=staCurr, setWanPollingIpaddress2=setWanPollingIpaddress2, setIproFirRulesPro=setIproFirRulesPro, staIproRipDynlRipa=staIproRipDynlRipa, staPppMlRxseqre=staPppMlRxseqre, staDhcpLanIfc=staDhcpLanIfc, staIpro=staIpro, setConfAdminsAdm=setConfAdminsAdm, staTcpiNetbGrouplGro=staTcpiNetbGrouplGro, setTcpiArptaLas=setTcpiArptaLas, setDnsFiltNet=setDnsFiltNet, staDslIntTable=staDslIntTable, setIproVrrVrrBpr=setIproVrrVrrBpr, staPppPapTxret=staPppPapTxret, setVpnProposalsIpsecpIpsecproposal3=setVpnProposalsIpsecpIpsecproposal3, setHttpRolVariablesTit=setHttpRolVariablesTit, staChanIsdnd=staChanIsdnd, setInteDslEntry=setInteDslEntry, staIproRipWansTable=staIproRipWansTable, staIproFilterlProt=staIproFilterlProt, staIproQosRxres=staIproQosRxres, staCharTimetabBudgetmi=staCharTimetabBudgetmi, setNetbGroIpa=setNetbGroIpa, staPppChaTxfai=staPppChaTxfai, staHardTota=staHardTota, staVpnConnectMode=staVpnConnectMode, staIproFilterlRtgt=staIproFilterlRtgt, staAccoCurTable=staAccoCurTable, staDhcpWanEntry=staDhcpWanEntry, setIproRipLanTxfi=setIproRipLanTxfi, setIpro1nnTable1nnaRem=setIpro1nnTable1nnaRem, staAccoCurMacad=staAccoCurMacad, staIproFilterlSrca=staIproFilterlSrca, setSnmpMonitortPor=setSnmpMonitortPor, setConfSshport=setConfSshport, setDhcpHosNet=setDhcpHosNet, staIproConnectTable=staIproConnectTable, staPppoConLas=staPppoConLas, setTcpiArptaTable=setTcpiArptaTable, staIproRipLansRxfi=staIproRipLansRxfi, staPppChaRxsuc=staPppChaRxsuc, setPerfRttmonsJitterminnegsd=setPerfRttmonsJitterminnegsd, staIproQosRxreq=staIproQosRxreq, staConfLl2mRxdi=staConfLl2mRxdi, staVpnIkeDesta=staVpnIkeDesta, staIproVrrpRx=staIproVrrpRx, setVpnAdditionalgRemotegateway7=setVpnAdditionalgRemotegateway7, setIproVrr=setIproVrr, staIproQosTable=staIproQosTable, setCompDevSer=setCompDevSer, setInteModemAtpollc=setInteModemAtpollc, staTcpiDhcpNetwoAdaption=staTcpiDhcpNetwoAdaption, setMailPop3p=setMailPop3p, staVpnIkesas=staVpnIkesas, staAccoLasTotal=staAccoLasTotal, staPppBacTxlinkdropreq=staPppBacTxlinkdropreq, setTcpiLoopbRtg=setTcpiLoopbRtg, setVpnCertificateIkeLocalident=setVpnCertificateIkeLocalident, staDslPppRxprot=staDslPppRxprot, setTcpiNetwoTable=setTcpiNetwoTable, staPppTxoIpcNbnsd=staPppTxoIpcNbnsd, setSnmpAdminist=setSnmpAdminist, setTcpiNetwoNet=setTcpiNetwoNet, staPppPapTxsuc=staPppPapTxsuc, setPerfRttmonsJittersumnegds=setPerfRttmonsJittersumnegds, setCertSceCle=setCertSceCle, staVpnRules=staVpnRules, setWanDialuppCal=setWanDialuppCal, setHttpRolVariablesTable=setHttpRolVariablesTable, setIproFirAppliIrcDdc=setIproFirAppliIrcDdc, staIproVrrp=staIproVrrp, setDnsSubdSub=setDnsSubdSub, staCharTimetabMinutesp=staCharTimetabMinutesp, setIproDefDay=setIproDefDay, setConfConfiga=setConfConfiga, setIproFirConneEntry=setIproFirConneEntry, staIproLandisc=staIproLandisc, staModeNetworklistEntry=staModeNetworklistEntry, setWanPollingTable=setWanPollingTable, setIpro1nnIdspoofin=setIpro1nnIdspoofin, staPppCcpTxterminater=staPppCcpTxterminater, staVpnConnectB1dt=staVpnConnectB1dt, staIproRipDynlGate=staIproRipDynlGate, staIproRipIpriVla=staIproRipIpriVla, setConfCrontabMinu=setConfCrontabMinu, trpIpFwFlt=trpIpFwFlt, setConfAdminsAcc=setConfAdminsAcc, setWanPollingIpaddress3=setWanPollingIpaddress3, setVpnVpnpeersEntry=setVpnVpnpeersEntry, staIproProtocoEntry=staIproProtocoEntry, staTcpiDhcpNetwoNbnsdefaul=staTcpiDhcpNetwoNbnsdefaul, staTcpiNetbTimeou=staTcpiNetbTimeou, staIproFilterlTable=staIproFilterlTable, staIproPortbloProt=staIproPortbloProt, staCallSys=staCallSys, setWanManualdDis=setWanManualdDis, staTcpiNetwTable=staTcpiNetwTable, staIproRipVrrpEntry=staIproRipVrrpEntry, setNetbSerOsv=setNetbSerOsv, setVpnAggrmodeike=setVpnAggrmodeike, staTcpiNetb=staTcpiNetb, staTcpiNetbHostliPee=staTcpiNetbHostliPee, setPppoPorTable=setPppoPorTable, staPpp=staPpp, setPerfRttmonaTim=setPerfRttmonaTim, staPptpDel=staPptpDel, setAccoLasUsern=setAccoLasUsern, setLancAccEntry=setLancAccEntry, setWanActiontCondi=setWanActiontCondi, setCertSceCasRaautoapprove=setCertSceCasRaautoapprove, staDhcpLanTable=staDhcpLanTable, setConfCrontabDay=setConfCrontabDay, staAccoAccRxkby=staAccoAccRxkby, staCompComNetworksFullnam=staCompComNetworksFullnam, setIproFirObjecNam=setIproFirObjecNam, setSnmpSendtrap=setSnmpSendtrap, setVpnAdditionalgPeer=setVpnAdditionalgPeer, staTcpiTcpLantx=staTcpiTcpLantx, staCompDevBus=staCompDevBus, staModeTemperaturesta=staModeTemperaturesta, setIproDefSta=setIproDefSta, setIproFirFilteSrcm=setIproFirFilteSrcm, staTcpiNetwVla=staTcpiNetwVla, setAccoSav=setAccoSav, setIproRipLanDftr=setIproRipLanDftr, setInteDslOpe=setInteDslOpe, staPptpFlo=staPptpFlo, setSyslSerSou=setSyslSerSou, staModeDatarate=staModeDatarate, staTcpiHttpActiveRemotea=staTcpiHttpActiveRemotea, staConfLl2m=staConfLl2m, setHttpRolTitle=setHttpRolTitle, staConfLl2mServRxb=staConfLl2mServRxb, setVpnProposalsIpsecAhauthalg=setVpnProposalsIpsecAhauthalg, setAccoCurConnt=setAccoCurConnt, staTcpiHttpAgentlAcc=staTcpiHttpAgentlAcc, staMailBuf=staMailBuf, staIproQosUpstr=staIproQosUpstr, setLcrTimPre=setLcrTimPre, trpUplFailTo=trpUplFailTo, staIproRipWildRtgt=staIproRipWildRtgt, staConfFeaturesTable=staConfFeaturesTable, staTcpiNetbRefres=staTcpiNetbRefres, staPppPppTable=staPppPppTable, staLanErroMultip=staLanErroMultip, staTcpiDnsLanr=staTcpiDnsLanr, staConfEventlogEntry=staConfEventlogEntry, setChar=setChar, setIproRipIprIpa=setIproRipIprIpa, staIproQosEntry=staIproQosEntry, setVpnProposalsIkeproEntry=setVpnProposalsIkeproEntry, staTcpiRadiAuthenticBadauthen=staTcpiRadiAuthenticBadauthen, staVpnIkeMaxkb=staVpnIkeMaxkb, staVpnIkeIniti=staVpnIkeIniti, staVpnEspSrcad=staVpnEspSrcad, setSnmpMonitortLoo=setSnmpMonitortLoo, staCertSceCasStatus=staCertSceCasStatus, staIproActiproGat=staIproActiproGat, staTcpiNetbHostliNam=staTcpiNetbHostliNam, setCompDevDev=setCompDevDev, staTacaAuthe=staTacaAuthe, staTcpiTftpLanrxb=staTcpiTftpLanrxb, setIproRipWanDftr=setIproRipWanDftr, staIsdnSigManErrN=staIsdnSigManErrN, setIproRipWanRipt=setIproRipWanRipt, setIproLoaBunBundlepeer1=setIproLoaBunBundlepeer1, setLanSpareh=setLanSpareh, setSnmpMonitortVla=setSnmpMonitortVla, staIproLoadbalConPee=staIproLoadbalConPee, setDhcpDhcEth=setDhcpDhcEth, staTcpiNetbServerHos=staTcpiNetbServerHos, staTcpiNetbServerRtg=staTcpiNetbServerRtg)
mibBuilder.exportSymbols("LANCOM-1711-MIB", staTcpiIpDeletevalues=staTcpiIpDeletevalues, staCertSceRasIssued=staCertSceRasIssued, staIproRipLansRtgt=staIproRipLansRtgt, setIpro1nnIpsectablRemotea=setIpro1nnIpsectablRemotea, staTcpiDnsDele=staTcpiDnsDele, staCharDeletev=staCharDeletev, setSnmpComment2=setSnmpComment2, staPppRxoIpcNbnsb=staPppRxoIpcNbnsb, staDslPppRxpads=staDslPppRxpads, staIproPortbloTable=staIproPortbloTable, staIproActiproIpn=staIproActiproIpn, staTcpiIpLanfragmentations=staTcpiIpLanfragmentations, staIproVrrpEveTable=staIproVrrpEveTable, setVlanPorPortv=setVlanPorPortv, staDhcpWanIfc=staDhcpWanIfc, setVpnProposalsIkeName=setVpnProposalsIkeName, setIpro1nnIpsectablEntry=setIpro1nnIpsectablEntry, setSnmpMonitortEntry=setSnmpMonitortEntry, staIproRipWansRips=staIproRipWansRips, staTcpiNetbHostliFla=staTcpiNetbHostliFla, staTcpiRadiAuthenticAccessacc=staTcpiRadiAuthenticAccessacc, setInteModemmEntry=setInteModemmEntry, setCert=setCert, setAccoSor=setAccoSor, setIproFirSteal=setIproFirSteal, setLcrTimFal=setLcrTimFal, staModeNetworklistMod=staModeNetworklistMod, staTcpiNetbPnodes=staTcpiNetbPnodes, staCompComBytecounFullname=staCompComBytecounFullname, setNetbGroTyp=setNetbGroTyp, setIproFirPortbProt=setIproFirPortbProt, staTcpiRadiAccountinTable=staTcpiRadiAccountinTable, setInteModemmDat=setInteModemmDat, staIproRipDele=staIproRipDele, setPerfRttmonsTable=setPerfRttmonsTable, staCharSpareds=staCharSpareds, staPppRxoLcpMag=staPppRxoLcpMag, setIproNnnIdx=setIproNnnIdx, setConfAccesstTable=setConfAccesstTable, staVpnIpcompCrypt=staVpnIpcompCrypt, setIproLoaBunPeer=setIproLoaBunPeer, trpCnfDnlSucc=trpCnfDnlSucc, setIproRipFilNam=setIproRipFilNam, setWanRouteriAcc=setWanRouteriAcc, staIproRipWildMasq=staIproRipWildMasq, staMode=staMode, setSnmpMonitortTim=setSnmpMonitortTim, staPppRxoLcpCal=staPppRxoLcpCal, setDnsDynaHos=setDnsDynaHos, staDslPacTxb=staDslPacTxb, setWanLayerTable=setWanLayerTable, staTcpiRadiAuthenticIpaddress=staTcpiRadiAuthenticIpaddress, staHardBoar=staHardBoar, staTcpiNetbGrouplFla=staTcpiNetbGrouplFla, staIproServiceKbytesrx=staIproServiceKbytesrx, staUsbDevTable=staUsbDevTable, staPptpConConnt=staPptpConConnt, staIproRipWansMasq=staIproRipWansMasq, setHttpMax=setHttpMax, staIsdnSigManErrL=staIsdnSigManErrL, staTcpiNetbServerNet=staTcpiNetbServerNet, setCharTablebuTot=setCharTablebuTot, setDnsDoma=setDnsDoma, setIpro1nnTable1nnaEntry=setIpro1nnTable1nnaEntry, setVpnCertificateIkeName=setVpnCertificateIkeName, setNetbPeeTyp=setNetbPeeTyp, setPppoNamSht=setPppoNamSht, staDslIntEntry=staDslIntEntry, staCertSceCertsIssuer=staCertSceCertsIssuer, setConfFunctioTable=setConfFunctioTable, setConfAntitheMet=setConfAntitheMet, staVpnIpcompSpi=staVpnIpcompSpi, staTcpiDhcpNetwoEndaddress=staTcpiDhcpNetwoEndaddress, staCertSceCertsSubject=staCertSceCertsSubject, staCompDevUsbdriv=staCompDevUsbdriv, setConfUpdatecServern=setConfUpdatecServern, staConfLl2mServRxu=staConfLl2mServRxu, setIproRipWanTxfi=setIproRipWanTxfi, staIproRipWansGate=staIproRipWansGate, staTcpiNetbWantx=staTcpiNetbWantx, staIproLannetw=staIproLannetw, setIproFirRulesFir=setIproFirRulesFir, staConfLl2mDele=staConfLl2mDele, staTcpiSysl=staTcpiSysl, setLancAccIpa=setLancAccIpa, setWanActiontActiv=setWanActiontActiv, setIproFirFilteProt=setIproFirFilteProt, staTimeIsd=staTimeIsd, setIpro1nnIpsectablLocalad=setIpro1nnIpsectablLocalad, setPrinAccRtg=setPrinAccRtg, staSnmpEveCou=staSnmpEveCou, staVpnIkeDstpo=staVpnIkeDstpo, setWanPollingIpaddress1=setWanPollingIpaddress1, staTcpiIpWanrx=staTcpiIpWanrx, staConfLl2mClieRxd=staConfLl2mClieRxd, staPppRxoLcpEntry=staPppRxoLcpEntry, staTcpiIpWanfragmentationsf=staTcpiIpWanfragmentationsf, staUsbDevInterfac=staUsbDevInterfac, setNetbGroTim=setNetbGroTim, setMailBuffe=setMailBuffe, setWanIplistNbnsd=setWanIplistNbnsd, staIproPortbloTime=staIproPortbloTime, setIpro1nnServicetaTable=setIpro1nnServicetaTable, staIproConnectProt=staIproConnectProt, staVpnConnectShtime=staVpnConnectShtime, staLanByteTxbyte=staLanByteTxbyte, staPptpConLaste=staPptpConLaste, setLan=setLan, staCertSceCasTable=staCertSceCasTable, staCertCrlCrlExpsnm=staCertCrlCrlExpsnm, staPptpConNbnsd=staPptpConNbnsd, setPerfRttmonsPacketlosssd=setPerfRttmonsPacketlosssd, staTcpiRadi=staTcpiRadi, staTcpiDhcpDisca=staTcpiDhcpDisca, setInteDslUps=setInteDslUps, staPppoRxe=staPppoRxe, setIproVrrOpe=setIproVrrOpe, staCertSceRasExpsnm=staCertSceRasExpsnm, setIpro1nnTable1nnaTable=setIpro1nnTable1nnaTable, staTcpiDhcpDhcptTim=staTcpiDhcpDhcptTim, staPppTxoLcpEntry=staPppTxoLcpEntry, staTcpiTftpLantxa=staTcpiTftpLantxa, staDslBytTable=staDslBytTable, staTcpiNetwRtg=staTcpiNetwRtg, staCompComConnectiClients=staCompComConnectiClients, staWanActionsLocInd=staWanActionsLocInd, setNetbBroEntry=setNetbBroEntry, setIproFirRulesNam=setIproFirRulesNam, setPppoNamTable=setPppoNamTable, staTcpiRadiAuthenticDropped=staTcpiRadiAuthenticDropped, setDnsDnslTable=setDnsDnslTable, setDhcpHosIma=setDhcpHosIma, firTabInd=firTabInd, staLanByteThroug=staLanByteThroug, setLcrHolDat=setLcrHolDat, staTcpiTftpWanrxd=staTcpiTftpWanrxd, staTcpiRadiAuthenticLastreque=staTcpiRadiAuthenticLastreque, staPppo=staPppo, setWanActiontHostn=setWanActiontHostn, setIpro1nnFragments=setIpro1nnFragments, setIproRipParRout=setIproRipParRout, setHttpRolVariablesEntry=setHttpRolVariablesEntry, setConfAccesstEntry=setConfAccesstEntry, setIproTagEnd=setIproTagEnd, trpLdblConn=trpLdblConn, staTcpiDhcpWanrx=staTcpiDhcpWanrx, setPerfRttmoneProtocol=setPerfRttmoneProtocol, setPerf=setPerf, setCharSparedi=setCharSparedi, setCompWanDevEntry=setCompWanDevEntry, staChanPhcha=staChanPhcha, staTcpiArpWant=staTcpiArpWant, staWanThroughpuIfc=staWanThroughpuIfc, setDhcpDhcTim=setDhcpDhcTim, staTcpiTftpLanrxr=staTcpiTftpLanrxr, setSyslSerLev=setSyslSerLev, staWanBytetransIfc=staWanBytetransIfc, staTcpiTcp=staTcpiTcp, staTcpiDhcpTxoff=staTcpiDhcpTxoff, staIproVrrpEveSys=staIproVrrpEveSys, staAccoAccEntry=staAccoAccEntry, staCertCrlCrlEntry=staCertCrlCrlEntry, staTcpiRadiAccountinMalformedacco=staTcpiRadiAccountinMalformedacco, staIproVrrpDro=staIproVrrpDro, staVpnConnectHashle=staVpnConnectHashle, setDhcpNetNetmask=setDhcpNetNetmask, staIproRipIpriEntry=staIproRipIpriEntry, staIproVrrpEveIdx=staIproVrrpEveIdx, setIproFirAdmin=setIproFirAdmin, staTcpiIcmpWant=staTcpiIcmpWant, staTcpiHttpHttpno=staTcpiHttpHttpno, staConfAntithefLasts=staConfAntithefLasts, setCompComNetNewlinec=setCompComNetNewlinec, staFileConEntry=staFileConEntry, setInteModemmIfc=setInteModemmIfc, staPppDel=staPppDel, staConfEventlogInfo2=staConfEventlogInfo2, staIproRipDynwTable=staIproRipDynwTable, staTcpiTcpLancon=staTcpiTcpLancon, staIproConnectDstp=staIproConnectDstp, setPerfRttmonePacketsize=setPerfRttmonePacketsize, othBoo=othBoo, staTcpiNetbPeersNam=staTcpiNetbPeersNam, setIpro1nnTable1nnaInt=setIpro1nnTable1nnaInt, setLancPriTable=setLancPriTable, staLanErroRxcrce=staLanErroRxcrce, setConfTftpcliConfigadd=setConfTftpcliConfigadd, staTcpiDhcpNetwoBroadcasta=staTcpiDhcpNetwoBroadcasta, staIproFilter=staIproFilter, setHttpRolVariablesInd=setHttpRolVariablesInd, setTimeCalla=setTimeCalla, setSyslSerEntry=setSyslSerEntry, setHttpRolVariablesMax=setHttpRolVariablesMax, staPppLcpRxechoreply=staPppLcpRxechoreply, staTcpiDhcpRxinf=staTcpiDhcpRxinf, staMailDel=staMailDel, staVpnConnectHashal=staVpnConnectHashal, setTacaFallbacktolocalus=setTacaFallbacktolocalus, setTcpiArpag=setTcpiArpag, staIsdnSigMan=staIsdnSigMan, setVpnVpnpeersShti=setVpnVpnpeersShti, staIproRipWildTxfi=staIproRipWildTxfi, setIpro1nnIpsectablDp=setIpro1nnIpsectablDp, staCompComConnectiClientt=staCompComConnectiClientt, setIpro1nnIpsectablCo=setIpro1nnIpsectablCo, staLanErroTxdefe=staLanErroTxdefe, setMail=setMail, trpPPPoESConn=trpPPPoESConn, staIproRipDynlRtgt=staIproRipDynlRtgt, staIproVrrpEveVri=staIproVrrpEveVri, setIpro1nnIpsectablTimeout=setIpro1nnIpsectablTimeout, setWanDialuppEntry=setWanDialuppEntry, setTcpiNbnsd=setTcpiNbnsd, setNetbHosNam=setNetbHosNam, staIproVrrpErr=staIproVrrpErr, setWanPollingIpaddress4=setWanPollingIpaddress4, staVpnConnectLaster=staVpnConnectLaster, staIsdnSigManErrTable=staIsdnSigManErrTable, setConfCrontabEntry=setConfCrontabEntry, staLanByteTable=staLanByteTable, setTcpiAliveBootty=setTcpiAliveBootty, setConfLan=setConfLan, staIproFilterlSrcm=staIproFilterlSrcm, setVpnAdditionalgRtgtag7=setVpnAdditionalgRtgtag7, setIproFirRulesEntry=setIproFirRulesEntry, setIproFirConneDsta=setIproFirConneDsta, staIproVrrpVirPor=staIproVrrpVirPor, setNtpRqaTable=setNtpRqaTable, setDhcpNetMasterserv=setDhcpNetMasterserv, setIproFirPortbDstp=setIproFirPortbDstp, staModeState=staModeState, staIsdnSigLayLapCon=staIsdnSigLayLapCon, setIproRipParFlus=setIproRipParFlus, setLcrHolEntry=setLcrHolEntry, staAccoLasTable=staAccoLasTable, setVpnIsakmpTimTable=setVpnIsakmpTimTable, staLanByteMaxthr=staLanByteMaxthr, staIsdnDel=staIsdnDel, staDhcpWanDomai=staDhcpWanDomai, staIproWandisc=staIproWandisc, setInteModemEscapep=setInteModemEscapep, setConfMonitorTracemask2=setConfMonitorTracemask2, staAccoAccTable=staAccoAccTable, setTcpiAccesRtg=setTcpiAccesRtg, staIsdnSigManErrIfc=staIsdnSigManErrIfc, staCompComBytecounNetworkt=staCompComBytecounNetworkt, staIproLantx=staIproLantx, staChanState=staChanState, staHardEthe=staHardEthe, staIsdnSigManErrG=staIsdnSigManErrG, staVlanPorTable=staVlanPorTable, staIproServicePacketrx=staIproServicePacketrx, staWanPackettraEntry=staWanPackettraEntry, staIproPortbloFilt=staIproPortbloFilt)
mibBuilder.exportSymbols("LANCOM-1711-MIB", staTcpiHttpActiveTable=staTcpiHttpActiveTable, staTcpiSyslLasEntry=staTcpiSyslLasEntry, setIproFirMaxha=setIproFirMaxha, setConfCrontabTable=setConfCrontabTable, setCharTimetabTable=setCharTimetabTable, staWanErrorsTxer=staWanErrorsTxer, setIproRipIprDis=setIproRipIprDis, staIproRipIpriPee=staIproRipIpriPee, staTcpiNetbServerPee=staTcpiNetbServerPee, setCompWanDevTable=setCompWanDevTable, staPppChaTxsuc=staPppChaTxsuc, staTcpiIpWanfragmentations=staTcpiIpWanfragmentations, staIproLoadbalOpe=staIproLoadbalOpe, staIproHoconnlNum=staIproHoconnlNum, staTcpiNetbBrowseIpa=staTcpiNetbBrowseIpa, staIproHoconnlEntry=staIproHoconnlEntry, setIproDefTable=setIproDefTable, staTcpiTftpWanrxo=staTcpiTftpWanrxo, setIproTagTable=setIproTagTable, setVpnAdditionalgRtgtag2=setVpnAdditionalgRtgtag2, setTcpiNetwoVla=setTcpiNetwoVla, staPppRxoIpcDnsde=staPppRxoIpcDnsde, staPppPppPha=staPppPppPha, staTcpiRadiAuthenticPort=staTcpiRadiAuthenticPort, staVpnConnectCompra=staVpnConnectCompra, setVpnCertificateIkeTable=setVpnCertificateIkeTable, setPrinPriEntry=setPrinPriEntry, staCertSceCasKeyusa=staCertSceCasKeyusa, staIproRipLansTxfi=staIproRipLansTxfi, setNetbPeeEntry=setNetbPeeEntry, setWanIplistEntry=setWanIplistEntry, staModeScannetworks=staModeScannetworks, staIproLanrx=staIproLanrx, setDhcpDhcEntry=setDhcpDhcEntry, setIpro1nnUdpagings=setIpro1nnUdpagings, setTcpiIcmpo=setTcpiIcmpo, firMod=firMod, setIproFirAppliFtpAct=setIproFirAppliFtpAct, staCompComConnectiEntry=staCompComConnectiEntry, setTimeDstclInd=setTimeDstclInd, setIproFirRulesRtg=setIproFirRulesRtg, setCompComComDevice=setCompComComDevice, staPppCcpRxterminatea=staPppCcpRxterminatea, staAccoCurEntry=staAccoCurEntry, setDhcpDhcHos=setDhcpDhcHos, setNetbSup=setNetbSup, setConf=setConf, staUsbDevDepth=staUsbDevDepth, staModeSignaldbm=staModeSignaldbm, setVpnAdditionalgRtgtag6=setVpnAdditionalgRtgtag6, staWanThroughpuRxsc=staWanThroughpuRxsc, setCharSpareun=setCharSpareun, staTcpiNetbNetworTable=staTcpiNetbNetworTable, staIproConnectSrcp=staIproConnectSrcp, setTcpiNetwoIpn=setTcpiNetwoIpn, staTcpiDnsDhcp=staTcpiDnsDhcp, setVpnAdditionalgRtgtag12=setVpnAdditionalgRtgtag12, setConfCrontabOwne=setConfCrontabOwne, staModeConnectinfo=staModeConnectinfo, staLanErroRxerro=staLanErroRxerro, staIproServiceKbytestx=staIproServiceKbytestx, staTcpiRadiAuthenticAccessrej=staTcpiRadiAuthenticAccessrej, staTcpiDhcpRxdec=staTcpiDhcpRxdec, staIproVrrpEveInf=staIproVrrpEveInf, setIproSta=setIproSta, staPppMlBundlec=staPppMlBundlec, setIproRipIprEntry=setIproRipIprEntry, setInteMobileInp=setInteMobileInp, staLanByteBytesm=staLanByteBytesm, staCertCrlNum=staCertCrlNum, setIproRipWanEntry=setIproRipWanEntry, staVpnAhIdx=staVpnAhIdx, setSnmpRegister=setSnmpRegister, setCompComComPortnu=setCompComComPortnu, staQueuIprripq=staQueuIprripq, staSnmpEveVen=staSnmpEveVen, staTimeDstHou=staTimeDstHou, setVpnProposalsIkeproIkeproposal5=setVpnProposalsIkeproIkeproposal5, setCertSceCasTable=setCertSceCasTable, setHttpSsl=setHttpSsl, setInteMobileTri=setInteMobileTri, setCompComOpeDev=setCompComOpeDev, staHardFree=staHardFree, staIproWanttle=staIproWanttle, setCertSceCerKeyusage=setCertSceCerKeyusage, staIproRipWansPois=staIproRipWansPois, setConfAdminea=setConfAdminea, setWanRadiusSecret=setWanRadiusSecret, setWanIplistIpadd=setWanIplistIpadd, trpPptpConn=trpPptpConn, staCertSceNumca=staCertSceNumca, staEtheCabletestrRxs=staEtheCabletestrRxs, setIproPro=setIproPro, setCharTimetabSparemin=setCharTimetabSparemin, staDslErrRxalig=staDslErrRxalig, staPppRxoLcpAcf=staPppRxoLcpAcf, staTcpiSyslLasTable=staTcpiSyslLasTable, setPerfRttmonaTyp=setPerfRttmonaTyp, setIproFirActioEntry=setIproFirActioEntry, staIproLogtablSrca=staIproLogtablSrca, staModeRxtimeouts=staModeRxtimeouts, staConfScanresuDevic=staConfScanresuDevic, staConfLl2mServ=staConfLl2mServ, staTcpiRadiAuthenticRoundtrip=staTcpiRadiAuthenticRoundtrip, setIproFirActioNam=setIproFirActioNam, staChanPptpc=staChanPptpc, staIproConnectDest=staIproConnectDest, setCharDslbroa=setCharDslbroa, othCol=othCol, staConfWantotal=staConfWantotal, staPppTxoLcpAcf=staPppTxoLcpAcf, setPerfRttmonaSta=setPerfRttmonaSta, setAccoAccTotal=setAccoAccTotal, staPppIpcRxterminater=staPppIpcRxterminater, staTcpiArpTablLas=staTcpiArpTablLas, staIproRipLansNetw=staIproRipLansNetw, staDslPacEntry=staDslPacEntry, setWanIncominDia=setWanIncominDia, staPppoTxp=staPppoTxp, setIproFirPortbTable=setIproFirPortbTable, setDhcpAddOptionv=setDhcpAddOptionv, fir=fir, setConfCrontabVari=setConfCrontabVari, setInteMobileHis=setInteMobileHis, setTcpiAccesEntry=setTcpiAccesEntry, staModeHardwareresets=staModeHardwareresets, setPerfRttmonsJittersumnegsd=setPerfRttmonsJittersumnegsd, staConfLl2mServRxd=staConfLl2mServRxd, setIproRipParInva=setIproRipParInva, setNetbUpd=setNetbUpd, setPerfRttmonsIndex=setPerfRttmonsIndex, staCallCli=staCallCli, staIproVrrpVirMas=staIproVrrpVirMas, setWanLayerL2op=setWanLayerL2op, firVerMod=firVerMod, staLan=staLan, staTcpiIpLooperror=staTcpiIpLooperror, setDnsNetb=setDnsNetb, staIproRipWansRxfi=staIproRipWansRxfi, staConfLl2mClieRxb=staConfLl2mClieRxb, setDhcpHosTable=setDhcpHosTable, setInteModemmOpe=setInteModemmOpe, setIproFirFilteSrcn=setIproFirFilteSrcn, staIproRipIpriIpn=staIproRipIpriIpn, staVpnIkeKbyte=staVpnIkeKbyte, setWanBackuppEntry=setWanBackuppEntry, staPptpConMode=staPptpConMode, staIproFilterlDend=staIproFilterlDend, staPppPapTxfai=staPppPapTxfai, staPppTxoLcpMag=staPppTxoLcpMag, setInteModemResetco=setInteModemResetco, setDhcpUse=setDhcpUse, staTcpiRadiAuthenticAccessret=staTcpiRadiAuthenticAccessret, staIproFilterlPrio=staIproFilterlPrio, staPptpConPhysc=staPptpConPhysc, staLanErroRxalig=staLanErroRxalig, setNtpRqi=setNtpRqi, staIproServiceService=staIproServiceService, staCompComComporteEntry=staCompComComporteEntry, staPptpConShtim=staPptpConShtim, setIproRipIprIpn=setIproRipIprIpn, setDhcpAddOptionn=setDhcpAddOptionn, setNetbHosNet=setNetbHosNet, setInteS0Ifc=setInteS0Ifc, staVpnIpcompSrcad=staVpnIpcompSrcad, staTcpiNetbBrowseFla=staTcpiNetbBrowseFla, staPppRxoIpcNbnsd=staPppRxoIpcNbnsd, staWanActionsLocEntry=staWanActionsLocEntry, setInteS0Prot=setInteS0Prot, staIproLogtablSrcp=staIproLogtablSrcp, staTcpiDhcpDhcptTable=staTcpiDhcpDhcptTable, staTcpiIp=staTcpiIp, setWanDslbroaEntry=setWanDslbroaEntry, setPrinAccEntry=setPrinAccEntry, setCertSceCac=setCertSceCac, staLcrProTable=staLcrProTable, staChanConns=staChanConns, staVpnTunnel=staVpnTunnel, setVpnProposalsIkeproIkeproposal2=setVpnProposalsIkeproIkeproposal2, staPppCcpTxresetack=staPppCcpTxresetack, staTcpiHttpHttpsa=staTcpiHttpHttpsa, setNetbGroNet=setNetbGroNet, staPppPap=staPppPap, setInteModemEchooff=setInteModemEchooff, staChanSubad=staChanSubad, staTcpiNetbMnodes=staTcpiNetbMnodes)
