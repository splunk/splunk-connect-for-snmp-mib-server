#
# PySNMP MIB module DLINK-3100-DEVICEPARAMS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DLINK-3100-DEVICEPARAMS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:33:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
rnd, = mibBuilder.importSymbols("DLINK-3100-MIB", "rnd")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, iso, NotificationType, MibIdentifier, IpAddress, Unsigned32, TimeTicks, Bits, Counter64, ObjectIdentity, Gauge32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "iso", "NotificationType", "MibIdentifier", "IpAddress", "Unsigned32", "TimeTicks", "Bits", "Counter64", "ObjectIdentity", "Gauge32", "Counter32")
PhysAddress, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "PhysAddress", "TruthValue", "DisplayString", "TextualConvention")
rndDeviceParams = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2))
rndDeviceParams.setRevisions(('2007-01-02 00:00',))
if mibBuilder.loadTexts: rndDeviceParams.setLastUpdated('200701020000Z')
if mibBuilder.loadTexts: rndDeviceParams.setOrganization('Dlink, Inc. Dlink Semiconductor, Inc.')
rndBridgeType = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48))).clone(namedValues=NamedValues(("reb", 1), ("ceb", 2), ("ceblb", 3), ("xeb", 4), ("xeb1", 5), ("rebsx", 6), ("rtb", 7), ("ltb", 8), ("tre", 9), ("rtre", 10), ("xtb", 11), ("ete", 12), ("rete", 13), ("ielb", 30), ("leb", 31), ("openGate12", 32), ("openGate4", 33), ("ran", 34), ("itlb", 35), ("gatelinx", 36), ("openGate2", 37), ("ogRanTR", 38), ("rdapter", 39), ("ogVan", 40), ("wanGate", 41), ("ogRubE", 42), ("ogRubT", 43), ("wanGateI", 44), ("vGate4", 45), ("lre", 46), ("mrt", 47), ("vGate2", 48)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndBridgeType.setStatus('current')
rndInactiveArpTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rndInactiveArpTimeOut.setStatus('current')
rndBridgeAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 3))
rndErrorDesc = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndErrorDesc.setStatus('current')
rndErrorSeverity = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("info", 0), ("warning", 1), ("error", 2), ("fatal-error", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndErrorSeverity.setStatus('current')
rndBrgVersion = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndBrgVersion.setStatus('current')
rndBrgFeatures = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndBrgFeatures.setStatus('current')
rndBrgLicense = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rndBrgLicense.setStatus('current')
rndIpHost = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7))
rndCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7, 2), )
if mibBuilder.loadTexts: rndCommunityTable.setStatus('current')
rndCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7, 2, 1), ).setIndexNames((0, "DLINK-3100-DEVICEPARAMS-MIB", "rndCommunityMngStationAddr"), (1, "DLINK-3100-DEVICEPARAMS-MIB", "rndCommunityString"))
if mibBuilder.loadTexts: rndCommunityEntry.setStatus('current')
rndCommunityMngStationAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7, 2, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rndCommunityMngStationAddr.setStatus('current')
rndCommunityString = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rndCommunityString.setStatus('current')
rndCommunityAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("readOnly", 1), ("readWrite", 2), ("super", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rndCommunityAccess.setStatus('current')
rndCommunityTrapsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("snmpV1", 1), ("snmpV2", 2), ("snmpV3", 3), ("trapsDisable", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rndCommunityTrapsEnable.setStatus('current')
rndCommunityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("invalid", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rndCommunityStatus.setStatus('current')
rndCommunityPortSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rndCommunityPortSecurity.setStatus('current')
rndCommunityOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rndCommunityOwner.setStatus('current')
rndCommunityTrapDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(162)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rndCommunityTrapDestPort.setStatus('current')
rlMridTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7, 3), )
if mibBuilder.loadTexts: rlMridTable.setStatus('current')
rlMridEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7, 3, 1), ).setIndexNames((0, "DLINK-3100-DEVICEPARAMS-MIB", "rndCommunityMngStationAddr"), (1, "DLINK-3100-DEVICEPARAMS-MIB", "rndCommunityString"))
if mibBuilder.loadTexts: rlMridEntry.setStatus('current')
rlMridConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7, 3, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMridConnection.setStatus('current')
rlManagedMrid = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlManagedMrid.setStatus('current')
rndManagedTime = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rndManagedTime.setStatus('current')
rndManagedDate = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rndManagedDate.setStatus('current')
rndBaseBootVersion = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndBaseBootVersion.setStatus('current')
rndIpHostManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7, 4))
rndIpHostManagementSupported = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7, 4, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndIpHostManagementSupported.setStatus('current')
rndIpHostManagementIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 7, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rndIpHostManagementIfIndex.setStatus('current')
genGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 11))
genGroupHWVersion = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 11, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genGroupHWVersion.setStatus('current')
genGroupConfigurationSymbol = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 11, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: genGroupConfigurationSymbol.setStatus('current')
genGroupHWStatus = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 11, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("ok", 1), ("hardwareProblems", 2), ("notSupported", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genGroupHWStatus.setStatus('current')
rndBasePhysicalAddress = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 12), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndBasePhysicalAddress.setStatus('current')
class RlImageIdType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("image1", 1), ("image2", 2))

rndSoftwareFile = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 13))
rndActiveSoftwareFileTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 13, 1), )
if mibBuilder.loadTexts: rndActiveSoftwareFileTable.setStatus('current')
rndActiveSoftwareFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 13, 1, 1), ).setIndexNames((0, "DLINK-3100-DEVICEPARAMS-MIB", "rndUnitNumber"))
if mibBuilder.loadTexts: rndActiveSoftwareFileEntry.setStatus('current')
rndUnitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 13, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rndUnitNumber.setStatus('current')
rndActiveSoftwareFile = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 13, 1, 1, 2), RlImageIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndActiveSoftwareFile.setStatus('current')
rndActiveSoftwareFileAfterReset = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("image1", 1), ("image2", 2), ("invalidImage", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rndActiveSoftwareFileAfterReset.setStatus('current')
rlResetStatus = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 13, 2), Bits().clone(namedValues=NamedValues(("ok", 0), ("no-stack-integrity", 1), ("downgrade", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlResetStatus.setStatus('current')
rndImageSize = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndImageSize.setStatus('current')
rndBackupConfigurationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndBackupConfigurationEnabled.setStatus('current')
rndImageInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16))
rndImageInfoTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16, 1), )
if mibBuilder.loadTexts: rndImageInfoTable.setStatus('current')
rndImageInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16, 1, 1), ).setIndexNames((0, "DLINK-3100-DEVICEPARAMS-MIB", "rndStackUnitNumber"))
if mibBuilder.loadTexts: rndImageInfoEntry.setStatus('current')
rndStackUnitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rndStackUnitNumber.setStatus('current')
rndImage1Name = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndImage1Name.setStatus('current')
rndImage2Name = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndImage2Name.setStatus('current')
rndImage1Version = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndImage1Version.setStatus('current')
rndImage2Version = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndImage2Version.setStatus('current')
rndImage1Date = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndImage1Date.setStatus('current')
rndImage2Date = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndImage2Date.setStatus('current')
rndImage1Time = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndImage1Time.setStatus('current')
rndImage2Time = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndImage2Time.setStatus('current')
rlComponentsInfoTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16, 2), )
if mibBuilder.loadTexts: rlComponentsInfoTable.setStatus('current')
rlComponentsInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16, 2, 1), ).setIndexNames((0, "DLINK-3100-DEVICEPARAMS-MIB", "rlComponentsInfoStackUnitNumber"), (0, "DLINK-3100-DEVICEPARAMS-MIB", "rlComponentsInfoImageId"), (1, "DLINK-3100-DEVICEPARAMS-MIB", "rlComponentsInfoComponent"))
if mibBuilder.loadTexts: rlComponentsInfoEntry.setStatus('current')
rlComponentsInfoStackUnitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: rlComponentsInfoStackUnitNumber.setStatus('current')
rlComponentsInfoImageId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16, 2, 1, 2), RlImageIdType())
if mibBuilder.loadTexts: rlComponentsInfoImageId.setStatus('current')
rlComponentsInfoComponent = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: rlComponentsInfoComponent.setStatus('current')
rlComponentsInfoBaseline = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 2, 16, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlComponentsInfoBaseline.setStatus('current')
mibBuilder.exportSymbols("DLINK-3100-DEVICEPARAMS-MIB", rndErrorSeverity=rndErrorSeverity, rndCommunityTrapsEnable=rndCommunityTrapsEnable, rndBridgeType=rndBridgeType, rndErrorDesc=rndErrorDesc, rndCommunityTable=rndCommunityTable, rlComponentsInfoImageId=rlComponentsInfoImageId, rlMridConnection=rlMridConnection, rndImageSize=rndImageSize, rndIpHostManagementSupported=rndIpHostManagementSupported, rndActiveSoftwareFileTable=rndActiveSoftwareFileTable, rndBrgVersion=rndBrgVersion, rndSoftwareFile=rndSoftwareFile, rndActiveSoftwareFileEntry=rndActiveSoftwareFileEntry, rndImage1Date=rndImage1Date, rndBrgLicense=rndBrgLicense, rndActiveSoftwareFileAfterReset=rndActiveSoftwareFileAfterReset, rndImageInfo=rndImageInfo, rndBackupConfigurationEnabled=rndBackupConfigurationEnabled, genGroup=genGroup, RlImageIdType=RlImageIdType, rndBasePhysicalAddress=rndBasePhysicalAddress, rndIpHostManagementIfIndex=rndIpHostManagementIfIndex, rndImage2Time=rndImage2Time, PYSNMP_MODULE_ID=rndDeviceParams, rlMridTable=rlMridTable, rndManagedTime=rndManagedTime, rndCommunityOwner=rndCommunityOwner, rndDeviceParams=rndDeviceParams, rlComponentsInfoTable=rlComponentsInfoTable, rlComponentsInfoBaseline=rlComponentsInfoBaseline, rndInactiveArpTimeOut=rndInactiveArpTimeOut, rndCommunityTrapDestPort=rndCommunityTrapDestPort, rlResetStatus=rlResetStatus, rndImage2Version=rndImage2Version, rlComponentsInfoStackUnitNumber=rlComponentsInfoStackUnitNumber, rndImageInfoTable=rndImageInfoTable, rlComponentsInfoEntry=rlComponentsInfoEntry, rlMridEntry=rlMridEntry, rndImage1Name=rndImage1Name, rndIpHostManagement=rndIpHostManagement, rndIpHost=rndIpHost, rndBridgeAlarm=rndBridgeAlarm, rlManagedMrid=rlManagedMrid, rndBaseBootVersion=rndBaseBootVersion, genGroupConfigurationSymbol=genGroupConfigurationSymbol, genGroupHWStatus=genGroupHWStatus, rndActiveSoftwareFile=rndActiveSoftwareFile, rndImageInfoEntry=rndImageInfoEntry, rndStackUnitNumber=rndStackUnitNumber, rndCommunityStatus=rndCommunityStatus, rlComponentsInfoComponent=rlComponentsInfoComponent, rndCommunityAccess=rndCommunityAccess, rndBrgFeatures=rndBrgFeatures, rndCommunityPortSecurity=rndCommunityPortSecurity, rndCommunityString=rndCommunityString, rndManagedDate=rndManagedDate, rndImage2Date=rndImage2Date, genGroupHWVersion=genGroupHWVersion, rndImage1Time=rndImage1Time, rndUnitNumber=rndUnitNumber, rndImage1Version=rndImage1Version, rndCommunityMngStationAddr=rndCommunityMngStationAddr, rndImage2Name=rndImage2Name, rndCommunityEntry=rndCommunityEntry)
