#
# PySNMP MIB module EFDMIM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EFDMIM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:44:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, ModuleIdentity, MibIdentifier, Unsigned32, TimeTicks, Gauge32, iso, enterprises, ObjectIdentity, Bits, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ModuleIdentity", "MibIdentifier", "Unsigned32", "TimeTicks", "Gauge32", "iso", "enterprises", "ObjectIdentity", "Bits", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "NotificationType", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cabletron = MibIdentifier((1, 3, 6, 1, 4, 1, 52))
commsDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1))
subsystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 6))
nb55 = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 6, 4))
rev1 = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1))
efdmimRingTable = MibTable((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 1), )
if mibBuilder.loadTexts: efdmimRingTable.setStatus('mandatory')
efdmimRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 1, 1), )
if mibBuilder.loadTexts: efdmimRingEntry.setStatus('mandatory')
efdmimRingUpstreamMac = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimRingUpstreamMac.setStatus('mandatory')
efdmimRingNodeClass = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimRingNodeClass.setStatus('mandatory')
efdmimRingMacs = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimRingMacs.setStatus('mandatory')
efdmimRingNonMasterPhys = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimRingNonMasterPhys.setStatus('mandatory')
efdmimRingMasterPhys = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimRingMasterPhys.setStatus('mandatory')
efdmimRingTopology = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimRingTopology.setStatus('mandatory')
efdmimRingDuplicate = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimRingDuplicate.setStatus('mandatory')
efdmimRingMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 1, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimRingMacAddress.setStatus('mandatory')
efdmimBdgPortTable = MibTable((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 2), )
if mibBuilder.loadTexts: efdmimBdgPortTable.setStatus('mandatory')
efdmimBdgPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 2, 1), )
if mibBuilder.loadTexts: efdmimBdgPortEntry.setStatus('mandatory')
efdmimBdgPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 2, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimBdgPortState.setStatus('optional')
efdmimBdgPortReceivedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimBdgPortReceivedPkts.setStatus('mandatory')
efdmimBdgPortFilteredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimBdgPortFilteredPkts.setStatus('mandatory')
efdmimBdgPortForwardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimBdgPortForwardedPkts.setStatus('mandatory')
efdmimBdgPortTransmittedPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimBdgPortTransmittedPkts.setStatus('mandatory')
efdmimBdgPortErrorPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimBdgPortErrorPkts.setStatus('mandatory')
efdmimPhyTable = MibTable((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 3), )
if mibBuilder.loadTexts: efdmimPhyTable.setStatus('mandatory')
efdmimPhyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 3, 1), )
if mibBuilder.loadTexts: efdmimPhyEntry.setStatus('mandatory')
efdmimPhyWithold = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimPhyWithold.setStatus('mandatory')
efdmimDeviceStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 20), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimDeviceStatus.setStatus('mandatory')
efdmimDeviceBdgName = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 21), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efdmimDeviceBdgName.setStatus('mandatory')
efdmimDeviceType = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 22), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimDeviceType.setStatus('mandatory')
efdmimDeviceVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 23), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimDeviceVersion.setStatus('mandatory')
efdmimDeviceLocation = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 24), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efdmimDeviceLocation.setStatus('mandatory')
efdmimDeviceUptime = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimDeviceUptime.setStatus('mandatory')
efdmimDeviceDisableBridge = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efdmimDeviceDisableBridge.setStatus('mandatory')
efdmimDeviceResetCounters = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("true", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: efdmimDeviceResetCounters.setStatus('mandatory')
efdmimDeviceSwitchSettings = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimDeviceSwitchSettings.setStatus('mandatory')
efdmimDeviceReceivedPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimDeviceReceivedPkts.setStatus('mandatory')
efdmimDeviceFilteredPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimDeviceFilteredPkts.setStatus('mandatory')
efdmimDeviceForwardedPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimDeviceForwardedPkts.setStatus('mandatory')
efdmimDeviceTransmittedPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimDeviceTransmittedPkts.setStatus('mandatory')
efdmimDeviceErrorPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimDeviceErrorPkts.setStatus('mandatory')
efdmimCfmState = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimCfmState.setStatus('mandatory')
efdmimBypassAttached = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimBypassAttached.setStatus('mandatory')
efdmimOscillations = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimOscillations.setStatus('mandatory')
efdmimRingUpTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimRingUpTime.setStatus('mandatory')
efdmimDownstreamMac = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 38), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimDownstreamMac.setStatus('mandatory')
efdmimBypassStuck = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimBypassStuck.setStatus('mandatory')
efdmimMode = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("encapsulation", 1), ("translation", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimMode.setStatus('mandatory')
efdmimRmtState = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimRmtState.setStatus('mandatory')
efdmimDeviceBridgeAddr = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 4, 1, 42), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efdmimDeviceBridgeAddr.setStatus('mandatory')
mibBuilder.exportSymbols("EFDMIM-MIB", efdmimRingEntry=efdmimRingEntry, efdmimOscillations=efdmimOscillations, efdmimRingNonMasterPhys=efdmimRingNonMasterPhys, efdmimDeviceBdgName=efdmimDeviceBdgName, efdmimMode=efdmimMode, efdmimDeviceVersion=efdmimDeviceVersion, efdmimRingMasterPhys=efdmimRingMasterPhys, commsDevice=commsDevice, efdmimRingMacAddress=efdmimRingMacAddress, efdmimDeviceSwitchSettings=efdmimDeviceSwitchSettings, efdmimRingTopology=efdmimRingTopology, efdmimDeviceLocation=efdmimDeviceLocation, efdmimDeviceDisableBridge=efdmimDeviceDisableBridge, efdmimRingTable=efdmimRingTable, efdmimRingUpTime=efdmimRingUpTime, efdmimDeviceErrorPkts=efdmimDeviceErrorPkts, efdmimPhyTable=efdmimPhyTable, rev1=rev1, efdmimRingMacs=efdmimRingMacs, efdmimBypassAttached=efdmimBypassAttached, efdmimRmtState=efdmimRmtState, efdmimCfmState=efdmimCfmState, nb55=nb55, efdmimBdgPortEntry=efdmimBdgPortEntry, efdmimBdgPortTransmittedPkts=efdmimBdgPortTransmittedPkts, efdmimRingDuplicate=efdmimRingDuplicate, efdmimDeviceForwardedPkts=efdmimDeviceForwardedPkts, efdmimDownstreamMac=efdmimDownstreamMac, efdmimPhyEntry=efdmimPhyEntry, efdmimDeviceReceivedPkts=efdmimDeviceReceivedPkts, efdmimDeviceBridgeAddr=efdmimDeviceBridgeAddr, efdmimBdgPortReceivedPkts=efdmimBdgPortReceivedPkts, efdmimRingUpstreamMac=efdmimRingUpstreamMac, efdmimBdgPortErrorPkts=efdmimBdgPortErrorPkts, efdmimDeviceFilteredPkts=efdmimDeviceFilteredPkts, efdmimRingNodeClass=efdmimRingNodeClass, efdmimDeviceStatus=efdmimDeviceStatus, efdmimBypassStuck=efdmimBypassStuck, efdmimPhyWithold=efdmimPhyWithold, subsystem=subsystem, efdmimBdgPortTable=efdmimBdgPortTable, efdmimBdgPortForwardedPkts=efdmimBdgPortForwardedPkts, efdmimDeviceTransmittedPkts=efdmimDeviceTransmittedPkts, efdmimBdgPortState=efdmimBdgPortState, efdmimBdgPortFilteredPkts=efdmimBdgPortFilteredPkts, cabletron=cabletron, efdmimDeviceResetCounters=efdmimDeviceResetCounters, efdmimDeviceType=efdmimDeviceType, efdmimDeviceUptime=efdmimDeviceUptime)
