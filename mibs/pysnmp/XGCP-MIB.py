#
# PySNMP MIB module XGCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XGCP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:37:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Integer32, Counter64, Unsigned32, Counter32, iso, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, experimental, IpAddress, NotificationType, MibIdentifier, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter64", "Unsigned32", "Counter32", "iso", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "experimental", "IpAddress", "NotificationType", "MibIdentifier", "ModuleIdentity", "Gauge32")
DisplayString, TimeStamp, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TimeStamp", "TruthValue", "TextualConvention")
xgcpMIB = ModuleIdentity((1, 3, 6, 1, 3, 90))
xgcpMIB.setRevisions(('1999-04-01 00:00',))
if mibBuilder.loadTexts: xgcpMIB.setLastUpdated('9904010000Z')
if mibBuilder.loadTexts: xgcpMIB.setOrganization('Submitting this new XGCP-MIB to IETF-DRAFT')
xgcpObjects = MibIdentifier((1, 3, 6, 1, 3, 90, 1))
xgcpCoreObjects = MibIdentifier((1, 3, 6, 1, 3, 90, 1, 1))
xgcpExtensionObjects = MibIdentifier((1, 3, 6, 1, 3, 90, 1, 2))
xgcpPackageObjects = MibIdentifier((1, 3, 6, 1, 3, 90, 1, 3))
xgcpVoiceQualityObjects = MibIdentifier((1, 3, 6, 1, 3, 90, 1, 4))
xgcpDefaultMGCObjects = MibIdentifier((1, 3, 6, 1, 3, 90, 1, 5))
xgcpInBadVersions = MibScalar((1, 3, 6, 1, 3, 90, 1, 1, 1), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: xgcpInBadVersions.setStatus('current')
xgcpRequestTimeOut = MibScalar((1, 3, 6, 1, 3, 90, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: xgcpRequestTimeOut.setStatus('current')
xgcpRequestRetries = MibScalar((1, 3, 6, 1, 3, 90, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xgcpRequestRetries.setStatus('current')
xgcpAdminStatus = MibScalar((1, 3, 6, 1, 3, 90, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("gracefulDown", 3))).clone('down')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xgcpAdminStatus.setStatus('current')
xgcpOperStatus = MibScalar((1, 3, 6, 1, 3, 90, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("shutDownInProgress", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xgcpOperStatus.setStatus('current')
xgcpUnRecognizedPackets = MibScalar((1, 3, 6, 1, 3, 90, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xgcpUnRecognizedPackets.setStatus('current')
xgcpMsgStatTable = MibTable((1, 3, 6, 1, 3, 90, 1, 1, 7), )
if mibBuilder.loadTexts: xgcpMsgStatTable.setStatus('current')
xgcpMsgStatEntry = MibTableRow((1, 3, 6, 1, 3, 90, 1, 1, 7, 1), ).setIndexNames((0, "XGCP-MIB", "xgcpIPAddress"))
if mibBuilder.loadTexts: xgcpMsgStatEntry.setStatus('current')
xgcpIPAddress = MibTableColumn((1, 3, 6, 1, 3, 90, 1, 1, 7, 1, 1), IpAddress())
if mibBuilder.loadTexts: xgcpIPAddress.setStatus('current')
xgcpSuccessMessages = MibTableColumn((1, 3, 6, 1, 3, 90, 1, 1, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xgcpSuccessMessages.setStatus('current')
xgcpFailMessages = MibTableColumn((1, 3, 6, 1, 3, 90, 1, 1, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xgcpFailMessages.setStatus('current')
xgcpRestartInProgressMWD = MibScalar((1, 3, 6, 1, 3, 90, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: xgcpRestartInProgressMWD.setStatus('current')
xgcpRestartDelay = MibScalar((1, 3, 6, 1, 3, 90, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 600))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: xgcpRestartDelay.setStatus('current')
xgcpMGCCfgAddress = MibScalar((1, 3, 6, 1, 3, 90, 1, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xgcpMGCCfgAddress.setStatus('current')
xgcpMGCCfgUDPPort = MibScalar((1, 3, 6, 1, 3, 90, 1, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1025, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xgcpMGCCfgUDPPort.setStatus('current')
xgcpMGCCfgConnStatus = MibScalar((1, 3, 6, 1, 3, 90, 1, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("connected", 2), ("connecting", 3), ("noSuchName", 4), ("noResponse", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xgcpMGCCfgConnStatus.setStatus('current')
xgcpMGCCfgTimeStamp = MibScalar((1, 3, 6, 1, 3, 90, 1, 5, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xgcpMGCCfgTimeStamp.setStatus('current')
xgcpCapabilityPackageTable = MibTable((1, 3, 6, 1, 3, 90, 1, 3, 1), )
if mibBuilder.loadTexts: xgcpCapabilityPackageTable.setStatus('current')
xgcpCapabilityPackageEntry = MibTableRow((1, 3, 6, 1, 3, 90, 1, 3, 1, 1), ).setIndexNames((1, "XGCP-MIB", "xgcpCapabilityPackageName"))
if mibBuilder.loadTexts: xgcpCapabilityPackageEntry.setStatus('current')
xgcpCapabilityPackageName = MibTableColumn((1, 3, 6, 1, 3, 90, 1, 3, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: xgcpCapabilityPackageName.setStatus('current')
xgcpCapabilityPackageEnable = MibTableColumn((1, 3, 6, 1, 3, 90, 1, 3, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xgcpCapabilityPackageEnable.setStatus('current')
xgcpDefaultPackage = MibScalar((1, 3, 6, 1, 3, 90, 1, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xgcpDefaultPackage.setStatus('current')
xgcpLowerBoundForPacketLoss = MibScalar((1, 3, 6, 1, 3, 90, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xgcpLowerBoundForPacketLoss.setStatus('current')
xgcpHigherBoundForPacketLoss = MibScalar((1, 3, 6, 1, 3, 90, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5000, 25000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xgcpHigherBoundForPacketLoss.setStatus('current')
xgcpLowerBoundForJitter = MibScalar((1, 3, 6, 1, 3, 90, 1, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 60))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: xgcpLowerBoundForJitter.setStatus('current')
xgcpHigherBoundForJitter = MibScalar((1, 3, 6, 1, 3, 90, 1, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 200))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: xgcpHigherBoundForJitter.setStatus('current')
xgcpLowerBoundForLatency = MibScalar((1, 3, 6, 1, 3, 90, 1, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(125, 200))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: xgcpLowerBoundForLatency.setStatus('current')
xgcpHigherBoundForLatency = MibScalar((1, 3, 6, 1, 3, 90, 1, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(250, 400))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: xgcpHigherBoundForLatency.setStatus('current')
xgcpNotificationPrefix = MibIdentifier((1, 3, 6, 1, 3, 90, 2))
xgcpNotifications = MibIdentifier((1, 3, 6, 1, 3, 90, 2, 0))
xgcpUpDownNotification = NotificationType((1, 3, 6, 1, 3, 90, 2, 0, 1)).setObjects(("XGCP-MIB", "xgcpOperStatus"))
if mibBuilder.loadTexts: xgcpUpDownNotification.setStatus('current')
xgcpMIBConformance = MibIdentifier((1, 3, 6, 1, 3, 90, 3))
xgcpMIBCompliances = MibIdentifier((1, 3, 6, 1, 3, 90, 3, 1))
xgcpMIBGroups = MibIdentifier((1, 3, 6, 1, 3, 90, 3, 2))
xgcpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 3, 90, 3, 1, 1)).setObjects(("XGCP-MIB", "xgcpCoreGroup"), ("XGCP-MIB", "xgcpExtensionGroup"), ("XGCP-MIB", "xgcpPackageGroup"), ("XGCP-MIB", "xgcpVoiceQualityGroup"), ("XGCP-MIB", "xgcpDefaultMGCGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xgcpMIBCompliance = xgcpMIBCompliance.setStatus('current')
xgcpCoreGroup = ObjectGroup((1, 3, 6, 1, 3, 90, 3, 2, 1)).setObjects(("XGCP-MIB", "xgcpInBadVersions"), ("XGCP-MIB", "xgcpRequestTimeOut"), ("XGCP-MIB", "xgcpRequestRetries"), ("XGCP-MIB", "xgcpAdminStatus"), ("XGCP-MIB", "xgcpOperStatus"), ("XGCP-MIB", "xgcpUnRecognizedPackets"), ("XGCP-MIB", "xgcpSuccessMessages"), ("XGCP-MIB", "xgcpFailMessages"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xgcpCoreGroup = xgcpCoreGroup.setStatus('current')
xgcpExtensionGroup = ObjectGroup((1, 3, 6, 1, 3, 90, 3, 2, 2)).setObjects(("XGCP-MIB", "xgcpRestartInProgressMWD"), ("XGCP-MIB", "xgcpRestartDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xgcpExtensionGroup = xgcpExtensionGroup.setStatus('current')
xgcpPackageGroup = ObjectGroup((1, 3, 6, 1, 3, 90, 3, 2, 3)).setObjects(("XGCP-MIB", "xgcpCapabilityPackageEnable"), ("XGCP-MIB", "xgcpDefaultPackage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xgcpPackageGroup = xgcpPackageGroup.setStatus('current')
xgcpVoiceQualityGroup = ObjectGroup((1, 3, 6, 1, 3, 90, 3, 2, 4)).setObjects(("XGCP-MIB", "xgcpLowerBoundForPacketLoss"), ("XGCP-MIB", "xgcpHigherBoundForPacketLoss"), ("XGCP-MIB", "xgcpLowerBoundForJitter"), ("XGCP-MIB", "xgcpHigherBoundForJitter"), ("XGCP-MIB", "xgcpLowerBoundForLatency"), ("XGCP-MIB", "xgcpHigherBoundForLatency"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xgcpVoiceQualityGroup = xgcpVoiceQualityGroup.setStatus('current')
xgcpDefaultMGCGroup = ObjectGroup((1, 3, 6, 1, 3, 90, 3, 2, 5)).setObjects(("XGCP-MIB", "xgcpMGCCfgAddress"), ("XGCP-MIB", "xgcpMGCCfgUDPPort"), ("XGCP-MIB", "xgcpMGCCfgConnStatus"), ("XGCP-MIB", "xgcpMGCCfgTimeStamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xgcpDefaultMGCGroup = xgcpDefaultMGCGroup.setStatus('current')
mibBuilder.exportSymbols("XGCP-MIB", xgcpMIB=xgcpMIB, xgcpVoiceQualityObjects=xgcpVoiceQualityObjects, xgcpRequestTimeOut=xgcpRequestTimeOut, xgcpLowerBoundForJitter=xgcpLowerBoundForJitter, xgcpFailMessages=xgcpFailMessages, xgcpCapabilityPackageName=xgcpCapabilityPackageName, xgcpPackageObjects=xgcpPackageObjects, xgcpMsgStatEntry=xgcpMsgStatEntry, xgcpCoreGroup=xgcpCoreGroup, xgcpMIBConformance=xgcpMIBConformance, xgcpCapabilityPackageTable=xgcpCapabilityPackageTable, xgcpDefaultPackage=xgcpDefaultPackage, xgcpMGCCfgTimeStamp=xgcpMGCCfgTimeStamp, xgcpMGCCfgConnStatus=xgcpMGCCfgConnStatus, xgcpDefaultMGCObjects=xgcpDefaultMGCObjects, xgcpAdminStatus=xgcpAdminStatus, xgcpLowerBoundForPacketLoss=xgcpLowerBoundForPacketLoss, xgcpMsgStatTable=xgcpMsgStatTable, xgcpPackageGroup=xgcpPackageGroup, xgcpNotifications=xgcpNotifications, xgcpOperStatus=xgcpOperStatus, xgcpNotificationPrefix=xgcpNotificationPrefix, xgcpSuccessMessages=xgcpSuccessMessages, xgcpRestartDelay=xgcpRestartDelay, xgcpLowerBoundForLatency=xgcpLowerBoundForLatency, xgcpMIBCompliances=xgcpMIBCompliances, xgcpRequestRetries=xgcpRequestRetries, xgcpCapabilityPackageEnable=xgcpCapabilityPackageEnable, xgcpInBadVersions=xgcpInBadVersions, xgcpMGCCfgAddress=xgcpMGCCfgAddress, xgcpCoreObjects=xgcpCoreObjects, xgcpHigherBoundForPacketLoss=xgcpHigherBoundForPacketLoss, xgcpExtensionGroup=xgcpExtensionGroup, xgcpObjects=xgcpObjects, xgcpIPAddress=xgcpIPAddress, xgcpDefaultMGCGroup=xgcpDefaultMGCGroup, xgcpRestartInProgressMWD=xgcpRestartInProgressMWD, xgcpMGCCfgUDPPort=xgcpMGCCfgUDPPort, xgcpCapabilityPackageEntry=xgcpCapabilityPackageEntry, PYSNMP_MODULE_ID=xgcpMIB, xgcpUnRecognizedPackets=xgcpUnRecognizedPackets, xgcpExtensionObjects=xgcpExtensionObjects, xgcpMIBCompliance=xgcpMIBCompliance, xgcpHigherBoundForJitter=xgcpHigherBoundForJitter, xgcpHigherBoundForLatency=xgcpHigherBoundForLatency, xgcpMIBGroups=xgcpMIBGroups, xgcpVoiceQualityGroup=xgcpVoiceQualityGroup, xgcpUpDownNotification=xgcpUpDownNotification)
