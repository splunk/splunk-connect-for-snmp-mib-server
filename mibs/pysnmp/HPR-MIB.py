#
# PySNMP MIB module HPR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:30:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
SnaControlPointName, = mibBuilder.importSymbols("APPN-MIB", "SnaControlPointName")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
snanauMIB, = mibBuilder.importSymbols("SNA-NAU-MIB", "snanauMIB")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ModuleIdentity, Counter64, IpAddress, Gauge32, TimeTicks, iso, Bits, Integer32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, MibIdentifier, Counter32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter64", "IpAddress", "Gauge32", "TimeTicks", "iso", "Bits", "Integer32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "MibIdentifier", "Counter32", "Unsigned32")
TextualConvention, DisplayString, DateAndTime, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "DateAndTime", "TimeStamp")
hprMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 34, 6))
if mibBuilder.loadTexts: hprMIB.setLastUpdated('970514000000Z')
if mibBuilder.loadTexts: hprMIB.setOrganization('AIW APPN / HPR MIB SIG')
class HprNceTypes(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("controlPoint", 0), ("logicalUnit", 1), ("boundaryFunction", 2), ("routeSetup", 3))

class HprRtpCounter(TextualConvention, Counter32):
    status = 'current'

hprObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 6, 1))
hprGlobal = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 6, 1, 1))
hprNodeCpName = MibScalar((1, 3, 6, 1, 2, 1, 34, 6, 1, 1, 1), SnaControlPointName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprNodeCpName.setStatus('current')
hprOperatorPathSwitchSupport = MibScalar((1, 3, 6, 1, 2, 1, 34, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("switchTriggerSupported", 2), ("switchToPathSupported", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprOperatorPathSwitchSupport.setStatus('current')
hprAnrRouting = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 6, 1, 2))
hprAnrsAssigned = MibScalar((1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 1), Counter32()).setUnits('ANR labels').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprAnrsAssigned.setStatus('current')
hprAnrCounterState = MibScalar((1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notActive", 1), ("active", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hprAnrCounterState.setStatus('current')
hprAnrCounterStateTime = MibScalar((1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprAnrCounterStateTime.setStatus('current')
hprAnrRoutingTable = MibTable((1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 4), )
if mibBuilder.loadTexts: hprAnrRoutingTable.setStatus('current')
hprAnrRoutingEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 4, 1), ).setIndexNames((0, "HPR-MIB", "hprAnrLabel"))
if mibBuilder.loadTexts: hprAnrRoutingEntry.setStatus('current')
hprAnrLabel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8)))
if mibBuilder.loadTexts: hprAnrLabel.setStatus('current')
hprAnrType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nce", 1), ("tg", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprAnrType.setStatus('current')
hprAnrOutTgDest = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 4, 1, 3), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(3, 17), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprAnrOutTgDest.setStatus('current')
hprAnrOutTgNum = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprAnrOutTgNum.setStatus('current')
hprAnrPacketsReceived = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 4, 1, 5), Counter32()).setUnits('ANR packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprAnrPacketsReceived.setStatus('current')
hprAnrCounterDisconTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 2, 4, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprAnrCounterDisconTime.setStatus('current')
hprTransportUser = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 6, 1, 3))
hprNceTable = MibTable((1, 3, 6, 1, 2, 1, 34, 6, 1, 3, 1), )
if mibBuilder.loadTexts: hprNceTable.setStatus('current')
hprNceEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 6, 1, 3, 1, 1), ).setIndexNames((0, "HPR-MIB", "hprNceId"))
if mibBuilder.loadTexts: hprNceEntry.setStatus('current')
hprNceId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 3, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8)))
if mibBuilder.loadTexts: hprNceId.setStatus('current')
hprNceType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 3, 1, 1, 2), HprNceTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprNceType.setStatus('current')
hprNceDefault = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 3, 1, 1, 3), HprNceTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprNceDefault.setStatus('current')
hprNceInstanceId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 3, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprNceInstanceId.setStatus('current')
hprRtp = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 6, 1, 4))
hprRtpGlobe = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 1))
hprRtpGlobeConnSetups = MibScalar((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 1, 1), Counter32()).setUnits('RTP connection setups').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpGlobeConnSetups.setStatus('current')
hprRtpGlobeCtrState = MibScalar((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notActive", 1), ("active", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hprRtpGlobeCtrState.setStatus('current')
hprRtpGlobeCtrStateTime = MibScalar((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpGlobeCtrStateTime.setStatus('current')
hprRtpTable = MibTable((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2), )
if mibBuilder.loadTexts: hprRtpTable.setStatus('current')
hprRtpEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1), ).setIndexNames((0, "HPR-MIB", "hprRtpLocNceId"), (0, "HPR-MIB", "hprRtpLocTcid"))
if mibBuilder.loadTexts: hprRtpEntry.setStatus('current')
hprRtpLocNceId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8)))
if mibBuilder.loadTexts: hprRtpLocNceId.setStatus('current')
hprRtpLocTcid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8))
if mibBuilder.loadTexts: hprRtpLocTcid.setStatus('current')
hprRtpRemCpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 3), SnaControlPointName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpRemCpName.setStatus('current')
hprRtpRemNceId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpRemNceId.setStatus('current')
hprRtpRemTcid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpRemTcid.setStatus('current')
hprRtpPathSwitchTrigger = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ready", 1), ("switchPathNow", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hprRtpPathSwitchTrigger.setStatus('current')
hprRtpRscv = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpRscv.setStatus('current')
hprRtpTopic = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpTopic.setStatus('current')
hprRtpState = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 99))).clone(namedValues=NamedValues(("rtpListening", 1), ("rtpCalling", 2), ("rtpConnected", 3), ("rtpPathSwitching", 4), ("rtpDisconnecting", 5), ("other", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpState.setStatus('current')
hprRtpUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 10), TimeTicks()).setUnits('1/100ths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpUpTime.setStatus('current')
hprRtpLivenessTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 11), Unsigned32()).setUnits('1/100ths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpLivenessTimer.setStatus('current')
hprRtpShortReqTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 12), Unsigned32()).setUnits('1/100ths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpShortReqTimer.setStatus('current')
hprRtpPathSwTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 13), Unsigned32()).setUnits('1/100ths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpPathSwTimer.setStatus('current')
hprRtpLivenessTimeouts = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 14), HprRtpCounter()).setUnits('liveness timeouts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpLivenessTimeouts.setStatus('current')
hprRtpShortReqTimeouts = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 15), HprRtpCounter()).setUnits('short request timeouts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpShortReqTimeouts.setStatus('current')
hprRtpMaxSendRate = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 16), Gauge32()).setUnits('bytes per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpMaxSendRate.setStatus('current')
hprRtpMinSendRate = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 17), Gauge32()).setUnits('bytes per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpMinSendRate.setStatus('current')
hprRtpCurSendRate = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 18), Gauge32()).setUnits('bytes per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpCurSendRate.setStatus('current')
hprRtpSmRdTripDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 19), Gauge32()).setUnits('1/1000ths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpSmRdTripDelay.setStatus('current')
hprRtpSendPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 20), HprRtpCounter()).setUnits('RTP packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpSendPackets.setStatus('current')
hprRtpRecvPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 21), HprRtpCounter()).setUnits('RTP packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpRecvPackets.setStatus('current')
hprRtpSendBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 22), HprRtpCounter()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpSendBytes.setStatus('current')
hprRtpRecvBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 23), HprRtpCounter()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpRecvBytes.setStatus('current')
hprRtpRetrPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 24), HprRtpCounter()).setUnits('RTP packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpRetrPackets.setStatus('current')
hprRtpPacketsDiscarded = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 25), HprRtpCounter()).setUnits('RTP packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpPacketsDiscarded.setStatus('current')
hprRtpDetectGaps = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 26), HprRtpCounter()).setUnits('gaps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpDetectGaps.setStatus('current')
hprRtpRateReqSends = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 27), HprRtpCounter()).setUnits('rate requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpRateReqSends.setStatus('current')
hprRtpOkErrPathSws = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 28), HprRtpCounter()).setUnits('path switch attempts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpOkErrPathSws.setStatus('current')
hprRtpBadErrPathSws = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 29), HprRtpCounter()).setUnits('path switch attempts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpBadErrPathSws.setStatus('current')
hprRtpOkOpPathSws = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 30), HprRtpCounter()).setUnits('path switches').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpOkOpPathSws.setStatus('current')
hprRtpBadOpPathSws = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 31), HprRtpCounter()).setUnits('path switches').setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpBadOpPathSws.setStatus('current')
hprRtpCounterDisconTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 2, 1, 32), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpCounterDisconTime.setStatus('current')
hprRtpStatusTable = MibTable((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3), )
if mibBuilder.loadTexts: hprRtpStatusTable.setStatus('current')
hprRtpStatusEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1), ).setIndexNames((0, "HPR-MIB", "hprRtpStatusLocNceId"), (0, "HPR-MIB", "hprRtpStatusLocTcid"), (0, "HPR-MIB", "hprRtpStatusIndex"))
if mibBuilder.loadTexts: hprRtpStatusEntry.setStatus('current')
hprRtpStatusLocNceId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8)))
if mibBuilder.loadTexts: hprRtpStatusLocNceId.setStatus('current')
hprRtpStatusLocTcid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8))
if mibBuilder.loadTexts: hprRtpStatusLocTcid.setStatus('current')
hprRtpStatusIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hprRtpStatusIndex.setStatus('current')
hprRtpStatusStartTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpStatusStartTime.setStatus('current')
hprRtpStatusEndTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpStatusEndTime.setStatus('current')
hprRtpStatusRemCpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 6), SnaControlPointName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpStatusRemCpName.setStatus('current')
hprRtpStatusRemNceId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpStatusRemNceId.setStatus('current')
hprRtpStatusRemTcid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpStatusRemTcid.setStatus('current')
hprRtpStatusNewRscv = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpStatusNewRscv.setStatus('current')
hprRtpStatusOldRscv = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpStatusOldRscv.setStatus('current')
hprRtpStatusCause = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("rtpConnFail", 2), ("locLinkFail", 3), ("remLinkFail", 4), ("operRequest", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpStatusCause.setStatus('current')
hprRtpStatusLastAttemptResult = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 6, 1, 4, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("successful", 1), ("initiatorMoving", 2), ("directorySearchFailed", 3), ("rscvCalculationFailed", 4), ("negativeRouteSetupReply", 5), ("backoutRouteSetupReply", 6), ("timeoutDuringFirstAttempt", 7), ("otherUnsuccessful", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hprRtpStatusLastAttemptResult.setStatus('current')
hprConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 6, 2))
hprCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 6, 2, 1))
hprGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 6, 2, 2))
hprCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 34, 6, 2, 1, 1)).setObjects(("HPR-MIB", "hprGlobalConfGroup"), ("HPR-MIB", "hprAnrRoutingConfGroup"), ("HPR-MIB", "hprTransportUserConfGroup"), ("HPR-MIB", "hprRtpConfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hprCompliance = hprCompliance.setStatus('current')
hprGlobalConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 6, 2, 2, 1)).setObjects(("HPR-MIB", "hprNodeCpName"), ("HPR-MIB", "hprOperatorPathSwitchSupport"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hprGlobalConfGroup = hprGlobalConfGroup.setStatus('current')
hprAnrRoutingConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 6, 2, 2, 2)).setObjects(("HPR-MIB", "hprAnrsAssigned"), ("HPR-MIB", "hprAnrCounterState"), ("HPR-MIB", "hprAnrCounterStateTime"), ("HPR-MIB", "hprAnrType"), ("HPR-MIB", "hprAnrOutTgDest"), ("HPR-MIB", "hprAnrOutTgNum"), ("HPR-MIB", "hprAnrPacketsReceived"), ("HPR-MIB", "hprAnrCounterDisconTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hprAnrRoutingConfGroup = hprAnrRoutingConfGroup.setStatus('current')
hprTransportUserConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 6, 2, 2, 3)).setObjects(("HPR-MIB", "hprNceType"), ("HPR-MIB", "hprNceDefault"), ("HPR-MIB", "hprNceInstanceId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hprTransportUserConfGroup = hprTransportUserConfGroup.setStatus('current')
hprRtpConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 6, 2, 2, 4)).setObjects(("HPR-MIB", "hprRtpGlobeConnSetups"), ("HPR-MIB", "hprRtpGlobeCtrState"), ("HPR-MIB", "hprRtpGlobeCtrStateTime"), ("HPR-MIB", "hprRtpRemCpName"), ("HPR-MIB", "hprRtpRemNceId"), ("HPR-MIB", "hprRtpRemTcid"), ("HPR-MIB", "hprRtpPathSwitchTrigger"), ("HPR-MIB", "hprRtpRscv"), ("HPR-MIB", "hprRtpTopic"), ("HPR-MIB", "hprRtpState"), ("HPR-MIB", "hprRtpUpTime"), ("HPR-MIB", "hprRtpLivenessTimer"), ("HPR-MIB", "hprRtpShortReqTimer"), ("HPR-MIB", "hprRtpPathSwTimer"), ("HPR-MIB", "hprRtpLivenessTimeouts"), ("HPR-MIB", "hprRtpShortReqTimeouts"), ("HPR-MIB", "hprRtpMaxSendRate"), ("HPR-MIB", "hprRtpMinSendRate"), ("HPR-MIB", "hprRtpCurSendRate"), ("HPR-MIB", "hprRtpSmRdTripDelay"), ("HPR-MIB", "hprRtpSendPackets"), ("HPR-MIB", "hprRtpRecvPackets"), ("HPR-MIB", "hprRtpSendBytes"), ("HPR-MIB", "hprRtpRecvBytes"), ("HPR-MIB", "hprRtpRetrPackets"), ("HPR-MIB", "hprRtpPacketsDiscarded"), ("HPR-MIB", "hprRtpDetectGaps"), ("HPR-MIB", "hprRtpRateReqSends"), ("HPR-MIB", "hprRtpOkErrPathSws"), ("HPR-MIB", "hprRtpBadErrPathSws"), ("HPR-MIB", "hprRtpOkOpPathSws"), ("HPR-MIB", "hprRtpBadOpPathSws"), ("HPR-MIB", "hprRtpCounterDisconTime"), ("HPR-MIB", "hprRtpStatusStartTime"), ("HPR-MIB", "hprRtpStatusEndTime"), ("HPR-MIB", "hprRtpStatusRemNceId"), ("HPR-MIB", "hprRtpStatusRemTcid"), ("HPR-MIB", "hprRtpStatusRemCpName"), ("HPR-MIB", "hprRtpStatusNewRscv"), ("HPR-MIB", "hprRtpStatusOldRscv"), ("HPR-MIB", "hprRtpStatusCause"), ("HPR-MIB", "hprRtpStatusLastAttemptResult"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hprRtpConfGroup = hprRtpConfGroup.setStatus('current')
mibBuilder.exportSymbols("HPR-MIB", hprRtpTopic=hprRtpTopic, HprRtpCounter=HprRtpCounter, hprAnrOutTgNum=hprAnrOutTgNum, hprRtpMinSendRate=hprRtpMinSendRate, hprRtpRecvPackets=hprRtpRecvPackets, hprRtpConfGroup=hprRtpConfGroup, hprRtpState=hprRtpState, hprRtpGlobeCtrState=hprRtpGlobeCtrState, hprNceId=hprNceId, hprRtpStatusTable=hprRtpStatusTable, hprRtpOkOpPathSws=hprRtpOkOpPathSws, hprRtpGlobeConnSetups=hprRtpGlobeConnSetups, hprRtpLivenessTimer=hprRtpLivenessTimer, hprRtpShortReqTimeouts=hprRtpShortReqTimeouts, hprRtpStatusRemNceId=hprRtpStatusRemNceId, hprAnrRoutingTable=hprAnrRoutingTable, hprRtpRetrPackets=hprRtpRetrPackets, hprNceEntry=hprNceEntry, hprRtpSendBytes=hprRtpSendBytes, hprRtpSendPackets=hprRtpSendPackets, hprAnrType=hprAnrType, hprAnrRouting=hprAnrRouting, hprRtpBadErrPathSws=hprRtpBadErrPathSws, hprOperatorPathSwitchSupport=hprOperatorPathSwitchSupport, hprObjects=hprObjects, hprRtpGlobe=hprRtpGlobe, hprGlobalConfGroup=hprGlobalConfGroup, hprRtpLocNceId=hprRtpLocNceId, hprRtpLocTcid=hprRtpLocTcid, hprRtpDetectGaps=hprRtpDetectGaps, hprNceDefault=hprNceDefault, hprRtpStatusEntry=hprRtpStatusEntry, hprAnrLabel=hprAnrLabel, hprCompliance=hprCompliance, hprRtp=hprRtp, hprRtpPathSwTimer=hprRtpPathSwTimer, hprRtpRscv=hprRtpRscv, hprRtpOkErrPathSws=hprRtpOkErrPathSws, hprAnrCounterStateTime=hprAnrCounterStateTime, hprAnrPacketsReceived=hprAnrPacketsReceived, hprTransportUser=hprTransportUser, hprAnrOutTgDest=hprAnrOutTgDest, hprAnrRoutingEntry=hprAnrRoutingEntry, hprRtpStatusIndex=hprRtpStatusIndex, hprRtpStatusEndTime=hprRtpStatusEndTime, hprRtpStatusCause=hprRtpStatusCause, hprNceInstanceId=hprNceInstanceId, hprRtpRateReqSends=hprRtpRateReqSends, hprAnrCounterState=hprAnrCounterState, hprRtpEntry=hprRtpEntry, hprRtpStatusRemCpName=hprRtpStatusRemCpName, hprRtpStatusRemTcid=hprRtpStatusRemTcid, hprRtpCounterDisconTime=hprRtpCounterDisconTime, hprRtpCurSendRate=hprRtpCurSendRate, hprGroups=hprGroups, hprRtpSmRdTripDelay=hprRtpSmRdTripDelay, hprRtpStatusNewRscv=hprRtpStatusNewRscv, hprRtpStatusStartTime=hprRtpStatusStartTime, hprNceType=hprNceType, hprConformance=hprConformance, hprRtpStatusLocNceId=hprRtpStatusLocNceId, hprRtpGlobeCtrStateTime=hprRtpGlobeCtrStateTime, hprNodeCpName=hprNodeCpName, hprRtpUpTime=hprRtpUpTime, PYSNMP_MODULE_ID=hprMIB, hprGlobal=hprGlobal, HprNceTypes=HprNceTypes, hprRtpLivenessTimeouts=hprRtpLivenessTimeouts, hprRtpTable=hprRtpTable, hprAnrCounterDisconTime=hprAnrCounterDisconTime, hprRtpStatusLastAttemptResult=hprRtpStatusLastAttemptResult, hprRtpBadOpPathSws=hprRtpBadOpPathSws, hprRtpStatusLocTcid=hprRtpStatusLocTcid, hprRtpMaxSendRate=hprRtpMaxSendRate, hprRtpPacketsDiscarded=hprRtpPacketsDiscarded, hprRtpRemNceId=hprRtpRemNceId, hprRtpStatusOldRscv=hprRtpStatusOldRscv, hprAnrRoutingConfGroup=hprAnrRoutingConfGroup, hprRtpRemTcid=hprRtpRemTcid, hprMIB=hprMIB, hprCompliances=hprCompliances, hprAnrsAssigned=hprAnrsAssigned, hprNceTable=hprNceTable, hprRtpRecvBytes=hprRtpRecvBytes, hprRtpRemCpName=hprRtpRemCpName, hprRtpShortReqTimer=hprRtpShortReqTimer, hprTransportUserConfGroup=hprTransportUserConfGroup, hprRtpPathSwitchTrigger=hprRtpPathSwitchTrigger)
