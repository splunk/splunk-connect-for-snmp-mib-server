#
# PySNMP MIB module EQUIPE-ACAC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EQUIPE-ACAC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:51:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
AtmServiceCategory, = mibBuilder.importSymbols("ATM-TC-MIB", "AtmServiceCategory")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Bits, Counter64, NotificationType, Integer32, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, IpAddress, ModuleIdentity, TimeTicks, iso, Unsigned32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Bits", "Counter64", "NotificationType", "Integer32", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "IpAddress", "ModuleIdentity", "TimeTicks", "iso", "Unsigned32", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
equipe = MibIdentifier((1, 3, 6, 1, 4, 1, 5022))
eqAcacMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 5022, 5))
if mibBuilder.loadTexts: eqAcacMib.setLastUpdated('0012270000Z')
if mibBuilder.loadTexts: eqAcacMib.setOrganization('')
eqAcacViTable = MibTable((1, 3, 6, 1, 4, 1, 5022, 5, 1), )
if mibBuilder.loadTexts: eqAcacViTable.setStatus('current')
eqAcacViEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5022, 5, 1, 1), ).setIndexNames((0, "EQUIPE-ACAC-MIB", "eqAcacViIfIndex"))
if mibBuilder.loadTexts: eqAcacViEntry.setStatus('current')
eqAcacViIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAcacViIfIndex.setStatus('current')
eqAcacViStartingBw = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAcacViStartingBw.setStatus('current')
eqAcacViConsumedBw = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 5, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAcacViConsumedBw.setStatus('current')
eqAcacViInConsideredCcts = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 5, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAcacViInConsideredCcts.setStatus('current')
eqAcacViInRejectedCcts = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 5, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAcacViInRejectedCcts.setStatus('current')
eqAcacViInActiveCcts = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 5, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAcacViInActiveCcts.setStatus('current')
eqAcacViInReservedCcts = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 5, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAcacViInReservedCcts.setStatus('current')
eqAcacViOutConsideredCcts = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 5, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAcacViOutConsideredCcts.setStatus('current')
eqAcacViOutRejectedCcts = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 5, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAcacViOutRejectedCcts.setStatus('current')
eqAcacViOutActiveCcts = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 5, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAcacViOutActiveCcts.setStatus('current')
eqAcacViOutReservedCcts = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 5, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAcacViOutReservedCcts.setStatus('current')
eqAcacViServCatTable = MibTable((1, 3, 6, 1, 4, 1, 5022, 5, 2), )
if mibBuilder.loadTexts: eqAcacViServCatTable.setStatus('current')
eqAcacViServCatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5022, 5, 2, 1), ).setIndexNames((0, "EQUIPE-ACAC-MIB", "eqAcacViServCatIfIndex"), (0, "EQUIPE-ACAC-MIB", "eqAcacViServCatServiceCategory"))
if mibBuilder.loadTexts: eqAcacViServCatEntry.setStatus('current')
eqAcacViServCatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAcacViServCatIfIndex.setStatus('current')
eqAcacViServCatServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 5, 2, 1, 2), AtmServiceCategory()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAcacViServCatServiceCategory.setStatus('current')
eqAcacViServCatConsumedBw = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 5, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAcacViServCatConsumedBw.setStatus('current')
eqAcacViServCatActiveCcts = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 5, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAcacViServCatActiveCcts.setStatus('current')
mibBuilder.exportSymbols("EQUIPE-ACAC-MIB", eqAcacViOutReservedCcts=eqAcacViOutReservedCcts, eqAcacViIfIndex=eqAcacViIfIndex, eqAcacMib=eqAcacMib, eqAcacViEntry=eqAcacViEntry, eqAcacViOutRejectedCcts=eqAcacViOutRejectedCcts, eqAcacViOutActiveCcts=eqAcacViOutActiveCcts, eqAcacViTable=eqAcacViTable, eqAcacViServCatTable=eqAcacViServCatTable, eqAcacViServCatServiceCategory=eqAcacViServCatServiceCategory, eqAcacViOutConsideredCcts=eqAcacViOutConsideredCcts, eqAcacViServCatIfIndex=eqAcacViServCatIfIndex, eqAcacViStartingBw=eqAcacViStartingBw, eqAcacViServCatConsumedBw=eqAcacViServCatConsumedBw, eqAcacViInActiveCcts=eqAcacViInActiveCcts, eqAcacViInReservedCcts=eqAcacViInReservedCcts, eqAcacViServCatActiveCcts=eqAcacViServCatActiveCcts, eqAcacViInConsideredCcts=eqAcacViInConsideredCcts, eqAcacViServCatEntry=eqAcacViServCatEntry, eqAcacViInRejectedCcts=eqAcacViInRejectedCcts, eqAcacViConsumedBw=eqAcacViConsumedBw, equipe=equipe, PYSNMP_MODULE_ID=eqAcacMib)
