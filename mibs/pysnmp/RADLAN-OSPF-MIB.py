#
# PySNMP MIB module RADLAN-OSPF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADLAN-OSPF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:39:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
UpToMaxAge, Status, PositiveInteger, HelloRange, Metric, AreaID, TOSType, RouterID, BigMetric, DesignatedRouterPriority = mibBuilder.importSymbols("OSPF-MIB", "UpToMaxAge", "Status", "PositiveInteger", "HelloRange", "Metric", "AreaID", "TOSType", "RouterID", "BigMetric", "DesignatedRouterPriority")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
mib_2, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, Gauge32, Unsigned32, ModuleIdentity, iso, TimeTicks, NotificationType, Integer32, Bits, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "mib-2", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "Gauge32", "Unsigned32", "ModuleIdentity", "iso", "TimeTicks", "NotificationType", "Integer32", "Bits", "Counter64", "MibIdentifier")
TextualConvention, DisplayString, TimeStamp, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TimeStamp", "RowStatus", "TruthValue")
rlOspf = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 210))
rlOspf.setRevisions(('2011-05-04 17:00',))
if mibBuilder.loadTexts: rlOspf.setLastUpdated('201105041700Z')
if mibBuilder.loadTexts: rlOspf.setOrganization('Radlan Computer Communications Ltd.')
class RlOspfProcessID(TextualConvention, Integer32):
    status = 'current'

class RlOspfFastHelloMultiplierRange(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(3, 20)

class RlOspfRestartHelperStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("notHelping", 1), ("helping", 2))

class RlOspfRestartExitReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("none", 1), ("inProgress", 2), ("completed", 3), ("timedOut", 4), ("topologyChanged", 5))

class RlOspfRouterIdType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("default", 1), ("manual", 2))

class RlOspfAuthenticationType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 9))
    namedValues = NamedValues(("none", 0), ("simplePassword", 1), ("md5", 2), ("null", 9))

class RlOspfUpToRefreshIntervalTC(TextualConvention, Unsigned32):
    reference = 'OSPF Version 2, Appendix B, Architectural Constants'
    status = 'current'
    displayHint = 'd-0'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 65535)

class RlOspfDeadIntervalRangeTC(TextualConvention, Unsigned32):
    reference = 'OSPF for IPv6, Appendix C.3, Router Interface Parameters'
    status = 'current'
    displayHint = 'd-0'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 65535)

rlOspfInstance = MibScalar((1, 3, 6, 1, 4, 1, 89, 210, 1), RlOspfProcessID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfInstance.setStatus('current')
rlOspfGeneralGroupTable = MibTable((1, 3, 6, 1, 4, 1, 89, 210, 2), )
if mibBuilder.loadTexts: rlOspfGeneralGroupTable.setStatus('current')
rlOspfGeneralGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 210, 2, 1), ).setIndexNames((0, "RADLAN-OSPF-MIB", "rlOspfProcessId"))
if mibBuilder.loadTexts: rlOspfGeneralGroupEntry.setStatus('current')
rlOspfProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfProcessId.setStatus('current')
rlOspfRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 2), RouterID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfRouterId.setStatus('current')
rlOspfAdminStat = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 3), Status()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfAdminStat.setStatus('current')
rlOspfVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("version2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVersionNumber.setStatus('current')
rlOspfAreaBdrRtrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAreaBdrRtrStatus.setStatus('current')
rlOspfASBdrRtrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfASBdrRtrStatus.setStatus('current')
rlOspfExternLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfExternLsaCount.setStatus('current')
rlOspfExternLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfExternLsaCksumSum.setStatus('current')
rlOspfTOSSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfTOSSupport.setStatus('current')
rlOspfOriginateNewLsas = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfOriginateNewLsas.setStatus('current')
rlOspfRxNewLsas = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfRxNewLsas.setStatus('current')
rlOspfExtLsdbLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfExtLsdbLimit.setStatus('current')
rlOspfMulticastExtensions = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfMulticastExtensions.setStatus('current')
rlOspfExitOverflowInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 14), PositiveInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfExitOverflowInterval.setStatus('current')
rlOspfDemandExtensions = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfDemandExtensions.setStatus('current')
rlOspfRFC1583Compatibility = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfRFC1583Compatibility.setStatus('current')
rlOspfOpaqueLsaSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfOpaqueLsaSupport.setStatus('current')
rlOspfReferenceBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 18), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfReferenceBandwidth.setStatus('current')
rlOspfRestartSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("plannedOnly", 2), ("plannedAndUnplanned", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfRestartSupport.setStatus('current')
rlOspfRestartInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1800))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfRestartInterval.setStatus('current')
rlOspfRestartStrictLsaChecking = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 21), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfRestartStrictLsaChecking.setStatus('current')
rlOspfRestartStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notRestarting", 1), ("plannedRestart", 2), ("unplannedRestart", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfRestartStatus.setStatus('current')
rlOspfRestartAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 23), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfRestartAge.setStatus('current')
rlOspfRestartExitReason = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("inProgress", 2), ("completed", 3), ("timedOut", 4), ("topologyChanged", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfRestartExitReason.setStatus('current')
rlOspfAsLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAsLsaCount.setStatus('current')
rlOspfAsLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAsLsaCksumSum.setStatus('current')
rlOspfStubRouterSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 27), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfStubRouterSupport.setStatus('current')
rlOspfStubRouterAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("doNotAdvertise", 1), ("advertise", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfStubRouterAdvertisement.setStatus('current')
rlOspfDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 29), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfDiscontinuityTime.setStatus('current')
rlOspfGeneralGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 30), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfGeneralGroupStatus.setStatus('current')
rlOspfLogAdjacencyChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("detail", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfLogAdjacencyChanges.setStatus('current')
rlOspfPassiveInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 32), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfPassiveInterface.setStatus('current')
rlOspfDefaultMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfDefaultMetric.setStatus('current')
rlOspfMaximumRedistPrefixNum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfMaximumRedistPrefixNum.setStatus('current')
rlOspfMaximumRedistPrefixThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 35), Integer32().clone(75)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfMaximumRedistPrefixThreshold.setStatus('current')
rlOspfMaximumRedistPrefixWarningOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 36), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfMaximumRedistPrefixWarningOnly.setStatus('current')
rlOspfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("goingUp", 3), ("goingDown", 4), ("actFailed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfOperStatus.setStatus('current')
rlOspfNextRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 38), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNextRouterId.setStatus('current')
rlOspfRouterIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 39), RlOspfRouterIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfRouterIdType.setStatus('current')
rlOspfNextRouterIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 40), RlOspfRouterIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNextRouterIdType.setStatus('current')
rlOspfASBdrRtrActualStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 41), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfASBdrRtrActualStatus.setStatus('current')
rlOspfCalcMaxDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 42), Unsigned32().clone(5000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfCalcMaxDelay.setStatus('current')
rlOspfRteMaxEqCostPaths = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 2, 1, 43), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfRteMaxEqCostPaths.setStatus('current')
rlOspfAreaTable = MibTable((1, 3, 6, 1, 4, 1, 89, 210, 3), )
if mibBuilder.loadTexts: rlOspfAreaTable.setStatus('current')
rlOspfAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 210, 3, 1), ).setIndexNames((0, "RADLAN-OSPF-MIB", "rlOspfAreaProcessId"), (0, "RADLAN-OSPF-MIB", "rlOspfAreaId"))
if mibBuilder.loadTexts: rlOspfAreaEntry.setStatus('current')
rlOspfAreaProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAreaProcessId.setStatus('current')
rlOspfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 2), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAreaId.setStatus('current')
rlOspfAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 3), RlOspfAuthenticationType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfAuthType.setStatus('current')
rlOspfImportAsExtern = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("importExternal", 1), ("importNoExternal", 2), ("importNssa", 3))).clone('importExternal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfImportAsExtern.setStatus('current')
rlOspfSpfRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfSpfRuns.setStatus('current')
rlOspfAreaBdrRtrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAreaBdrRtrCount.setStatus('current')
rlOspfAsBdrRtrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAsBdrRtrCount.setStatus('current')
rlOspfAreaLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAreaLsaCount.setStatus('current')
rlOspfAreaLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAreaLsaCksumSum.setStatus('current')
rlOspfAreaSummary = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAreaSummary", 1), ("sendAreaSummary", 2))).clone('noAreaSummary')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfAreaSummary.setStatus('current')
rlOspfAreaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfAreaStatus.setStatus('current')
rlOspfAreaNssaTranslatorRole = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("always", 1), ("candidate", 2))).clone('candidate')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfAreaNssaTranslatorRole.setStatus('current')
rlOspfAreaNssaTranslatorState = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("elected", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAreaNssaTranslatorState.setStatus('current')
rlOspfAreaNssaTranslatorStabilityInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 14), PositiveInteger().clone(40)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfAreaNssaTranslatorStabilityInterval.setStatus('current')
rlOspfAreaNssaTranslatorEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAreaNssaTranslatorEvents.setStatus('current')
rlOspfAreaAdminStat = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 16), Status().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfAreaAdminStat.setStatus('current')
rlOspfAreaOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("goingUp", 3), ("goingDown", 4), ("actFailed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAreaOperStatus.setStatus('current')
rlOspfAreaFilterPrefixListIn = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfAreaFilterPrefixListIn.setStatus('current')
rlOspfAreaFilterPrefixListOut = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 3, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfAreaFilterPrefixListOut.setStatus('current')
rlOspfStubAreaTable = MibTable((1, 3, 6, 1, 4, 1, 89, 210, 4), )
if mibBuilder.loadTexts: rlOspfStubAreaTable.setStatus('current')
rlOspfStubAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 210, 4, 1), ).setIndexNames((0, "RADLAN-OSPF-MIB", "rlOspfStubProcessId"), (0, "RADLAN-OSPF-MIB", "rlOspfStubAreaId"), (0, "RADLAN-OSPF-MIB", "rlOspfStubTOS"))
if mibBuilder.loadTexts: rlOspfStubAreaEntry.setStatus('current')
rlOspfStubProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 4, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfStubProcessId.setStatus('current')
rlOspfStubAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 4, 1, 2), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfStubAreaId.setStatus('current')
rlOspfStubTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 4, 1, 3), TOSType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfStubTOS.setStatus('current')
rlOspfStubMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 4, 1, 4), BigMetric()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfStubMetric.setStatus('current')
rlOspfStubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfStubStatus.setStatus('current')
rlOspfStubMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ospfMetric", 1), ("comparableCost", 2), ("nonComparable", 3))).clone('ospfMetric')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfStubMetricType.setStatus('current')
rlOspfLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 89, 210, 5), )
if mibBuilder.loadTexts: rlOspfLsdbTable.setStatus('current')
rlOspfLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 210, 5, 1), ).setIndexNames((0, "RADLAN-OSPF-MIB", "rlOspfLsdbProcessId"), (0, "RADLAN-OSPF-MIB", "rlOspfLsdbAreaId"), (0, "RADLAN-OSPF-MIB", "rlOspfLsdbType"), (0, "RADLAN-OSPF-MIB", "rlOspfLsdbLsid"), (0, "RADLAN-OSPF-MIB", "rlOspfLsdbRouterId"))
if mibBuilder.loadTexts: rlOspfLsdbEntry.setStatus('current')
rlOspfLsdbProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 5, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfLsdbProcessId.setStatus('current')
rlOspfLsdbAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 5, 1, 2), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfLsdbAreaId.setStatus('current')
rlOspfLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 10))).clone(namedValues=NamedValues(("routerLink", 1), ("networkLink", 2), ("summaryLink", 3), ("asSummaryLink", 4), ("asExternalLink", 5), ("multicastLink", 6), ("nssaExternalLink", 7), ("areaOpaqueLink", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfLsdbType.setStatus('current')
rlOspfLsdbLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 5, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfLsdbLsid.setStatus('current')
rlOspfLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 5, 1, 5), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfLsdbRouterId.setStatus('current')
rlOspfLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfLsdbSequence.setStatus('current')
rlOspfLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 5, 1, 7), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfLsdbAge.setStatus('current')
rlOspfLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfLsdbChecksum.setStatus('current')
rlOspfLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 5, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfLsdbAdvertisement.setStatus('current')
rlOspfAreaRangeTable = MibTable((1, 3, 6, 1, 4, 1, 89, 210, 6), )
if mibBuilder.loadTexts: rlOspfAreaRangeTable.setStatus('obsolete')
rlOspfAreaRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 210, 6, 1), ).setIndexNames((0, "RADLAN-OSPF-MIB", "rlOspfAreaRangeProcessId"), (0, "RADLAN-OSPF-MIB", "rlOspfAreaRangeAreaId"), (0, "RADLAN-OSPF-MIB", "rlOspfAreaRangeNet"))
if mibBuilder.loadTexts: rlOspfAreaRangeEntry.setStatus('obsolete')
rlOspfAreaRangeProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 6, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAreaRangeProcessId.setStatus('obsolete')
rlOspfAreaRangeAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 6, 1, 2), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAreaRangeAreaId.setStatus('obsolete')
rlOspfAreaRangeNet = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAreaRangeNet.setStatus('obsolete')
rlOspfAreaRangeMask = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 6, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfAreaRangeMask.setStatus('obsolete')
rlOspfAreaRangeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 6, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfAreaRangeStatus.setStatus('obsolete')
rlOspfAreaRangeEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("advertiseMatching", 1), ("doNotAdvertiseMatching", 2))).clone('advertiseMatching')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfAreaRangeEffect.setStatus('obsolete')
rlOspfHostTable = MibTable((1, 3, 6, 1, 4, 1, 89, 210, 7), )
if mibBuilder.loadTexts: rlOspfHostTable.setStatus('current')
rlOspfHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 210, 7, 1), ).setIndexNames((0, "RADLAN-OSPF-MIB", "rlOspfHostProcessId"), (0, "RADLAN-OSPF-MIB", "rlOspfHostIpAddress"), (0, "RADLAN-OSPF-MIB", "rlOspfHostTOS"))
if mibBuilder.loadTexts: rlOspfHostEntry.setStatus('current')
rlOspfHostProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 7, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfHostProcessId.setStatus('current')
rlOspfHostIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 7, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfHostIpAddress.setStatus('current')
rlOspfHostTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 7, 1, 3), TOSType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfHostTOS.setStatus('current')
rlOspfHostMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 7, 1, 4), Metric()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfHostMetric.setStatus('current')
rlOspfHostStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 7, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfHostStatus.setStatus('current')
rlOspfHostAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 7, 1, 6), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfHostAreaID.setStatus('deprecated')
rlOspfHostCfgAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 7, 1, 7), AreaID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfHostCfgAreaID.setStatus('current')
rlOspfIfTable = MibTable((1, 3, 6, 1, 4, 1, 89, 210, 8), )
if mibBuilder.loadTexts: rlOspfIfTable.setStatus('current')
rlOspfIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 210, 8, 1), ).setIndexNames((0, "RADLAN-OSPF-MIB", "rlOspfIfProcessId"), (0, "RADLAN-OSPF-MIB", "rlOspfIfIpAddress"), (0, "RADLAN-OSPF-MIB", "rlOspfAddressLessIf"))
if mibBuilder.loadTexts: rlOspfIfEntry.setStatus('current')
rlOspfIfProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfIfProcessId.setStatus('current')
rlOspfIfIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfIfIpAddress.setStatus('current')
rlOspfAddressLessIf = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAddressLessIf.setStatus('current')
rlOspfIfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 4), AreaID().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfAreaId.setStatus('current')
rlOspfIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5))).clone(namedValues=NamedValues(("broadcast", 1), ("nbma", 2), ("pointToPoint", 3), ("pointToMultipoint", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfType.setStatus('current')
rlOspfIfAdminStat = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 6), Status().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfAdminStat.setStatus('current')
rlOspfIfRtrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 7), DesignatedRouterPriority().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfRtrPriority.setStatus('current')
rlOspfIfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 8), RlOspfUpToRefreshIntervalTC().clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfTransitDelay.setStatus('current')
rlOspfIfRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 9), RlOspfUpToRefreshIntervalTC().clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfRetransInterval.setStatus('current')
rlOspfIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 10), HelloRange().clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfHelloInterval.setStatus('current')
rlOspfIfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 11), RlOspfDeadIntervalRangeTC().clone(40)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfRtrDeadInterval.setStatus('current')
rlOspfIfPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 12), PositiveInteger().clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfPollInterval.setStatus('current')
rlOspfIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("down", 1), ("loopback", 2), ("waiting", 3), ("pointToPoint", 4), ("designatedRouter", 5), ("backupDesignatedRouter", 6), ("otherDesignatedRouter", 7))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfIfState.setStatus('current')
rlOspfIfDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 14), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfIfDesignatedRouter.setStatus('current')
rlOspfIfBackupDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 15), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfIfBackupDesignatedRouter.setStatus('current')
rlOspfIfEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfIfEvents.setStatus('current')
rlOspfIfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone(hexValue="0000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfAuthKey.setStatus('current')
rlOspfIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfStatus.setStatus('current')
rlOspfIfMulticastForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("blocked", 1), ("multicast", 2), ("unicast", 3))).clone('blocked')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfMulticastForwarding.setStatus('current')
rlOspfIfDemand = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 20), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfDemand.setStatus('current')
rlOspfIfAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 21), RlOspfAuthenticationType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfAuthType.setStatus('current')
rlOspfIfLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfIfLsaCount.setStatus('current')
rlOspfIfLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfIfLsaCksumSum.setStatus('current')
rlOspfIfDesignatedRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 24), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfIfDesignatedRouterId.setStatus('current')
rlOspfIfBackupDesignatedRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 25), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfIfBackupDesignatedRouterId.setStatus('current')
rlOspfIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("goingUp", 3), ("goingDown", 4), ("actFailed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfIfOperStatus.setStatus('current')
rlOspfIfAuthKeyChain = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 27), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfAuthKeyChain.setStatus('current')
rlOspfIfPassive = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 28), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfIfPassive.setStatus('current')
rlOspfIfLsaRefreshIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3599)).clone(1800)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfIfLsaRefreshIntvl.setStatus('current')
rlOspfIfFastHelloMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 30), RlOspfFastHelloMultiplierRange().clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfFastHelloMultiplier.setStatus('current')
rlOspfIfMtuIgnore = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 31), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfIfMtuIgnore.setStatus('current')
rlOspfIfNameLookup = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 32), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfIfNameLookup.setStatus('current')
rlOspfIfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfIfIfIndex.setStatus('current')
rlOspfIfActualAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 8, 1, 34), RlOspfAuthenticationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfIfActualAuthType.setStatus('current')
rlOspfIfMetricTable = MibTable((1, 3, 6, 1, 4, 1, 89, 210, 9), )
if mibBuilder.loadTexts: rlOspfIfMetricTable.setStatus('current')
rlOspfIfMetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 210, 9, 1), ).setIndexNames((0, "RADLAN-OSPF-MIB", "rlOspfIfMetricProcessId"), (0, "RADLAN-OSPF-MIB", "rlOspfIfMetricIpAddress"), (0, "RADLAN-OSPF-MIB", "rlOspfIfMetricAddressLessIf"), (0, "RADLAN-OSPF-MIB", "rlOspfIfMetricTOS"))
if mibBuilder.loadTexts: rlOspfIfMetricEntry.setStatus('current')
rlOspfIfMetricProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 9, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfIfMetricProcessId.setStatus('current')
rlOspfIfMetricIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 9, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfIfMetricIpAddress.setStatus('current')
rlOspfIfMetricAddressLessIf = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 9, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfIfMetricAddressLessIf.setStatus('current')
rlOspfIfMetricTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 9, 1, 4), TOSType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfIfMetricTOS.setStatus('current')
rlOspfIfMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 9, 1, 5), Metric()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfMetricValue.setStatus('current')
rlOspfIfMetricStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 9, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfIfMetricStatus.setStatus('current')
rlOspfVirtIfTable = MibTable((1, 3, 6, 1, 4, 1, 89, 210, 10), )
if mibBuilder.loadTexts: rlOspfVirtIfTable.setStatus('current')
rlOspfVirtIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 210, 10, 1), ).setIndexNames((0, "RADLAN-OSPF-MIB", "rlOspfVirtIfProcessId"), (0, "RADLAN-OSPF-MIB", "rlOspfVirtIfAreaId"), (0, "RADLAN-OSPF-MIB", "rlOspfVirtIfNeighbor"))
if mibBuilder.loadTexts: rlOspfVirtIfEntry.setStatus('current')
rlOspfVirtIfProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtIfProcessId.setStatus('current')
rlOspfVirtIfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 2), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtIfAreaId.setStatus('current')
rlOspfVirtIfNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 3), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtIfNeighbor.setStatus('current')
rlOspfVirtIfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 4), RlOspfUpToRefreshIntervalTC().clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfVirtIfTransitDelay.setStatus('current')
rlOspfVirtIfRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 5), RlOspfUpToRefreshIntervalTC().clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfVirtIfRetransInterval.setStatus('current')
rlOspfVirtIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 6), HelloRange().clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfVirtIfHelloInterval.setStatus('current')
rlOspfVirtIfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 7), RlOspfDeadIntervalRangeTC().clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfVirtIfRtrDeadInterval.setStatus('current')
rlOspfVirtIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("down", 1), ("pointToPoint", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtIfState.setStatus('current')
rlOspfVirtIfEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtIfEvents.setStatus('current')
rlOspfVirtIfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone(hexValue="0000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfVirtIfAuthKey.setStatus('current')
rlOspfVirtIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfVirtIfStatus.setStatus('current')
rlOspfVirtIfAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 12), RlOspfAuthenticationType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfVirtIfAuthType.setStatus('current')
rlOspfVirtIfLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtIfLsaCount.setStatus('current')
rlOspfVirtIfLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtIfLsaCksumSum.setStatus('current')
rlOspfVirtIfAuthKeyChain = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfVirtIfAuthKeyChain.setStatus('current')
rlOspfVirtIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 16), Status().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfVirtIfAdminStatus.setStatus('current')
rlOspfVirtIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("goingUp", 3), ("goingDown", 4), ("actFailed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtIfOperStatus.setStatus('current')
rlOspfVirtIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtIfIndex.setStatus('current')
rlOspfVirtIfActualAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 10, 1, 19), RlOspfAuthenticationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtIfActualAuthType.setStatus('current')
rlOspfNbrTable = MibTable((1, 3, 6, 1, 4, 1, 89, 210, 11), )
if mibBuilder.loadTexts: rlOspfNbrTable.setStatus('current')
rlOspfNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 210, 11, 1), ).setIndexNames((0, "RADLAN-OSPF-MIB", "rlOspfNbrProcessId"), (0, "RADLAN-OSPF-MIB", "rlOspfNbrIpAddr"), (0, "RADLAN-OSPF-MIB", "rlOspfNbrAddressLessIndex"))
if mibBuilder.loadTexts: rlOspfNbrEntry.setStatus('current')
rlOspfNbrProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNbrProcessId.setStatus('current')
rlOspfNbrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNbrIpAddr.setStatus('current')
rlOspfNbrAddressLessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNbrAddressLessIndex.setStatus('current')
rlOspfNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 4), RouterID().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNbrRtrId.setStatus('current')
rlOspfNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNbrOptions.setStatus('current')
rlOspfNbrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 6), DesignatedRouterPriority().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfNbrPriority.setStatus('current')
rlOspfNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoWay", 4), ("exchangeStart", 5), ("exchange", 6), ("loading", 7), ("full", 8))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNbrState.setStatus('current')
rlOspfNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNbrEvents.setStatus('current')
rlOspfNbrLsRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNbrLsRetransQLen.setStatus('current')
rlOspfNbmaNbrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfNbmaNbrStatus.setStatus('current')
rlOspfNbmaNbrPermanence = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("permanent", 2))).clone('permanent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNbmaNbrPermanence.setStatus('current')
rlOspfNbrHelloSuppressed = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNbrHelloSuppressed.setStatus('current')
rlOspfNbrRestartHelperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notHelping", 1), ("helping", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNbrRestartHelperStatus.setStatus('current')
rlOspfNbrRestartHelperAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 14), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNbrRestartHelperAge.setStatus('current')
rlOspfNbrRestartHelperExitReason = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("inProgress", 2), ("completed", 3), ("timedOut", 4), ("topologyChanged", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNbrRestartHelperExitReason.setStatus('current')
rlOspfNbrDeadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 16), PositiveInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNbrDeadTime.setStatus('current')
rlOspfNbrAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 17), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNbrAreaId.setStatus('current')
rlOspfNbrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNbrIfIndex.setStatus('current')
rlOspfNbrIfIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 11, 1, 19), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfNbrIfIpAddr.setStatus('current')
rlOspfVirtNbrTable = MibTable((1, 3, 6, 1, 4, 1, 89, 210, 12), )
if mibBuilder.loadTexts: rlOspfVirtNbrTable.setStatus('current')
rlOspfVirtNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 210, 12, 1), ).setIndexNames((0, "RADLAN-OSPF-MIB", "rlOspfVirtNbrProcessId"), (0, "RADLAN-OSPF-MIB", "rlOspfVirtNbrArea"), (0, "RADLAN-OSPF-MIB", "rlOspfVirtNbrRtrId"))
if mibBuilder.loadTexts: rlOspfVirtNbrEntry.setStatus('current')
rlOspfVirtNbrProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 12, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtNbrProcessId.setStatus('current')
rlOspfVirtNbrArea = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 12, 1, 2), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtNbrArea.setStatus('current')
rlOspfVirtNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 12, 1, 3), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtNbrRtrId.setStatus('current')
rlOspfVirtNbrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 12, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtNbrIpAddr.setStatus('current')
rlOspfVirtNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtNbrOptions.setStatus('current')
rlOspfVirtNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoWay", 4), ("exchangeStart", 5), ("exchange", 6), ("loading", 7), ("full", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtNbrState.setStatus('current')
rlOspfVirtNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 12, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtNbrEvents.setStatus('current')
rlOspfVirtNbrLsRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 12, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtNbrLsRetransQLen.setStatus('current')
rlOspfVirtNbrHelloSuppressed = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 12, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtNbrHelloSuppressed.setStatus('current')
rlOspfVirtNbrRestartHelperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 12, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notHelping", 1), ("helping", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtNbrRestartHelperStatus.setStatus('current')
rlOspfVirtNbrRestartHelperAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 12, 1, 11), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtNbrRestartHelperAge.setStatus('current')
rlOspfVirtNbrRestartHelperExitReason = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 12, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("inProgress", 2), ("completed", 3), ("timedOut", 4), ("topologyChanged", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtNbrRestartHelperExitReason.setStatus('current')
rlOspfVirtNbrDeadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 12, 1, 13), PositiveInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtNbrDeadTime.setStatus('current')
rlOspfExtLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 89, 210, 13), )
if mibBuilder.loadTexts: rlOspfExtLsdbTable.setStatus('deprecated')
rlOspfExtLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 210, 13, 1), ).setIndexNames((0, "RADLAN-OSPF-MIB", "rlOspfExtLsdbProcessId"), (0, "RADLAN-OSPF-MIB", "rlOspfExtLsdbType"), (0, "RADLAN-OSPF-MIB", "rlOspfExtLsdbLsid"), (0, "RADLAN-OSPF-MIB", "rlOspfExtLsdbRouterId"))
if mibBuilder.loadTexts: rlOspfExtLsdbEntry.setStatus('deprecated')
rlOspfExtLsdbProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 13, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfExtLsdbProcessId.setStatus('current')
rlOspfExtLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5))).clone(namedValues=NamedValues(("asExternalLink", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfExtLsdbType.setStatus('deprecated')
rlOspfExtLsdbLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 13, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfExtLsdbLsid.setStatus('deprecated')
rlOspfExtLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 13, 1, 4), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfExtLsdbRouterId.setStatus('deprecated')
rlOspfExtLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 13, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfExtLsdbSequence.setStatus('deprecated')
rlOspfExtLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 13, 1, 6), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfExtLsdbAge.setStatus('deprecated')
rlOspfExtLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 13, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfExtLsdbChecksum.setStatus('deprecated')
rlOspfExtLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 13, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(36, 36)).setFixedLength(36)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfExtLsdbAdvertisement.setStatus('deprecated')
rlOspfAreaAggregateTable = MibTable((1, 3, 6, 1, 4, 1, 89, 210, 14), )
if mibBuilder.loadTexts: rlOspfAreaAggregateTable.setStatus('current')
rlOspfAreaAggregateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 210, 14, 1), ).setIndexNames((0, "RADLAN-OSPF-MIB", "rlOspfAreaAggregateProcessId"), (0, "RADLAN-OSPF-MIB", "rlOspfAreaAggregateAreaID"), (0, "RADLAN-OSPF-MIB", "rlOspfAreaAggregateLsdbType"), (0, "RADLAN-OSPF-MIB", "rlOspfAreaAggregateNet"), (0, "RADLAN-OSPF-MIB", "rlOspfAreaAggregateMask"))
if mibBuilder.loadTexts: rlOspfAreaAggregateEntry.setStatus('current')
rlOspfAreaAggregateProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 14, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAreaAggregateProcessId.setStatus('current')
rlOspfAreaAggregateAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 14, 1, 2), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAreaAggregateAreaID.setStatus('current')
rlOspfAreaAggregateLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 7))).clone(namedValues=NamedValues(("summaryLink", 3), ("nssaExternalLink", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAreaAggregateLsdbType.setStatus('current')
rlOspfAreaAggregateNet = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 14, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAreaAggregateNet.setStatus('current')
rlOspfAreaAggregateMask = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 14, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfAreaAggregateMask.setStatus('current')
rlOspfAreaAggregateStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 14, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfAreaAggregateStatus.setStatus('current')
rlOspfAreaAggregateEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("advertiseMatching", 1), ("doNotAdvertiseMatching", 2))).clone('advertiseMatching')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfAreaAggregateEffect.setStatus('current')
rlOspfAreaAggregateExtRouteTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 14, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfAreaAggregateExtRouteTag.setStatus('current')
rlOspfLocalLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 89, 210, 18), )
if mibBuilder.loadTexts: rlOspfLocalLsdbTable.setStatus('current')
rlOspfLocalLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 210, 18, 1), ).setIndexNames((0, "RADLAN-OSPF-MIB", "rlOspfLocalLsdbProcessId"), (0, "RADLAN-OSPF-MIB", "rlOspfLocalLsdbIpAddress"), (0, "RADLAN-OSPF-MIB", "rlOspfLocalLsdbAddressLessIf"), (0, "RADLAN-OSPF-MIB", "rlOspfLocalLsdbType"), (0, "RADLAN-OSPF-MIB", "rlOspfLocalLsdbLsid"), (0, "RADLAN-OSPF-MIB", "rlOspfLocalLsdbRouterId"))
if mibBuilder.loadTexts: rlOspfLocalLsdbEntry.setStatus('current')
rlOspfLocalLsdbProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 18, 1, 1), Unsigned32())
if mibBuilder.loadTexts: rlOspfLocalLsdbProcessId.setStatus('current')
rlOspfLocalLsdbIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 18, 1, 2), IpAddress())
if mibBuilder.loadTexts: rlOspfLocalLsdbIpAddress.setStatus('current')
rlOspfLocalLsdbAddressLessIf = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 18, 1, 3), InterfaceIndexOrZero())
if mibBuilder.loadTexts: rlOspfLocalLsdbAddressLessIf.setStatus('current')
rlOspfLocalLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 18, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(9))).clone(namedValues=NamedValues(("localOpaqueLink", 9))))
if mibBuilder.loadTexts: rlOspfLocalLsdbType.setStatus('current')
rlOspfLocalLsdbLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 18, 1, 5), IpAddress())
if mibBuilder.loadTexts: rlOspfLocalLsdbLsid.setStatus('current')
rlOspfLocalLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 18, 1, 6), RouterID())
if mibBuilder.loadTexts: rlOspfLocalLsdbRouterId.setStatus('current')
rlOspfLocalLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 18, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfLocalLsdbSequence.setStatus('current')
rlOspfLocalLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 18, 1, 8), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfLocalLsdbAge.setStatus('current')
rlOspfLocalLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 18, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfLocalLsdbChecksum.setStatus('current')
rlOspfLocalLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 18, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfLocalLsdbAdvertisement.setStatus('current')
rlOspfLocalLsdbAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 18, 1, 11), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfLocalLsdbAreaId.setStatus('current')
rlOspfVirtLocalLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 89, 210, 19), )
if mibBuilder.loadTexts: rlOspfVirtLocalLsdbTable.setStatus('current')
rlOspfVirtLocalLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 210, 19, 1), ).setIndexNames((0, "RADLAN-OSPF-MIB", "rlOspfVirtLocalLsdbProcessId"), (0, "RADLAN-OSPF-MIB", "rlOspfVirtLocalLsdbTransitArea"), (0, "RADLAN-OSPF-MIB", "rlOspfVirtLocalLsdbNeighbor"), (0, "RADLAN-OSPF-MIB", "rlOspfVirtLocalLsdbType"), (0, "RADLAN-OSPF-MIB", "rlOspfVirtLocalLsdbLsid"), (0, "RADLAN-OSPF-MIB", "rlOspfVirtLocalLsdbRouterId"))
if mibBuilder.loadTexts: rlOspfVirtLocalLsdbEntry.setStatus('current')
rlOspfVirtLocalLsdbProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 19, 1, 1), Unsigned32())
if mibBuilder.loadTexts: rlOspfVirtLocalLsdbProcessId.setStatus('current')
rlOspfVirtLocalLsdbTransitArea = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 19, 1, 2), AreaID())
if mibBuilder.loadTexts: rlOspfVirtLocalLsdbTransitArea.setStatus('current')
rlOspfVirtLocalLsdbNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 19, 1, 3), RouterID())
if mibBuilder.loadTexts: rlOspfVirtLocalLsdbNeighbor.setStatus('current')
rlOspfVirtLocalLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 19, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(9))).clone(namedValues=NamedValues(("localOpaqueLink", 9))))
if mibBuilder.loadTexts: rlOspfVirtLocalLsdbType.setStatus('current')
rlOspfVirtLocalLsdbLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 19, 1, 5), IpAddress())
if mibBuilder.loadTexts: rlOspfVirtLocalLsdbLsid.setStatus('current')
rlOspfVirtLocalLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 19, 1, 6), RouterID())
if mibBuilder.loadTexts: rlOspfVirtLocalLsdbRouterId.setStatus('current')
rlOspfVirtLocalLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 19, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtLocalLsdbSequence.setStatus('current')
rlOspfVirtLocalLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 19, 1, 8), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtLocalLsdbAge.setStatus('current')
rlOspfVirtLocalLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 19, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtLocalLsdbChecksum.setStatus('current')
rlOspfVirtLocalLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 19, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfVirtLocalLsdbAdvertisement.setStatus('current')
rlOspfEnableTrapsOspfErrors = MibScalar((1, 3, 6, 1, 4, 1, 89, 210, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfEnableTrapsOspfErrors.setStatus('current')
rlOspfEnableTrapsOspfLsa = MibScalar((1, 3, 6, 1, 4, 1, 89, 210, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfEnableTrapsOspfLsa.setStatus('current')
rlOspfEnableTrapsOspfRateLimitSeconds = MibScalar((1, 3, 6, 1, 4, 1, 89, 210, 22), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfEnableTrapsOspfRateLimitSeconds.setStatus('current')
rlOspfEnableTrapsOspfRateLimitTrapNumber = MibScalar((1, 3, 6, 1, 4, 1, 89, 210, 23), Integer32().clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfEnableTrapsOspfRateLimitTrapNumber.setStatus('current')
rlOspfEnableTrapsOspfTransmit = MibScalar((1, 3, 6, 1, 4, 1, 89, 210, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfEnableTrapsOspfTransmit.setStatus('current')
rlOspfEnableTrapsOspfStateChange = MibScalar((1, 3, 6, 1, 4, 1, 89, 210, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfEnableTrapsOspfStateChange.setStatus('current')
rlOspfExt = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 210, 26))
rlOspfBrRouterTable = MibTable((1, 3, 6, 1, 4, 1, 89, 210, 26, 1), )
if mibBuilder.loadTexts: rlOspfBrRouterTable.setStatus('current')
rlOspfBrRouterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 210, 26, 1, 1), ).setIndexNames((0, "RADLAN-OSPF-MIB", "rlOspfBrRouterProcessId"), (0, "RADLAN-OSPF-MIB", "rlOspfBrRouterAreaId"), (0, "RADLAN-OSPF-MIB", "rlOspfBrRouterRouterId"), (0, "RADLAN-OSPF-MIB", "rlOspfBrRouterNextHopIp"), (0, "RADLAN-OSPF-MIB", "rlOspfBrRouterOutIf"))
if mibBuilder.loadTexts: rlOspfBrRouterEntry.setStatus('current')
rlOspfBrRouterProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 26, 1, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfBrRouterProcessId.setStatus('current')
rlOspfBrRouterAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 26, 1, 1, 2), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfBrRouterAreaId.setStatus('current')
rlOspfBrRouterRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 26, 1, 1, 3), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfBrRouterRouterId.setStatus('current')
rlOspfBrRouterNextHopIp = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 26, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfBrRouterNextHopIp.setStatus('current')
rlOspfBrRouterOutIf = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 26, 1, 1, 5), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfBrRouterOutIf.setStatus('current')
rlOspfBrRouterRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 26, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("intra", 1), ("inter", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfBrRouterRouteType.setStatus('current')
rlOspfBrRouterRouteCost = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 26, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfBrRouterRouteCost.setStatus('current')
rlOspfBrRouterRouterType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 210, 26, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("abr", 1), ("asbr", 2), ("both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfBrRouterRouterType.setStatus('current')
mibBuilder.exportSymbols("RADLAN-OSPF-MIB", rlOspfVirtNbrDeadTime=rlOspfVirtNbrDeadTime, rlOspfCalcMaxDelay=rlOspfCalcMaxDelay, rlOspfASBdrRtrActualStatus=rlOspfASBdrRtrActualStatus, rlOspfIfActualAuthType=rlOspfIfActualAuthType, rlOspfLocalLsdbAge=rlOspfLocalLsdbAge, rlOspfVirtIfEvents=rlOspfVirtIfEvents, rlOspfExtLsdbProcessId=rlOspfExtLsdbProcessId, rlOspfAreaBdrRtrStatus=rlOspfAreaBdrRtrStatus, rlOspfVirtIfAuthKey=rlOspfVirtIfAuthKey, rlOspfLsdbProcessId=rlOspfLsdbProcessId, rlOspfAreaAggregateTable=rlOspfAreaAggregateTable, rlOspfVirtLocalLsdbNeighbor=rlOspfVirtLocalLsdbNeighbor, rlOspfLsdbLsid=rlOspfLsdbLsid, rlOspfNbrHelloSuppressed=rlOspfNbrHelloSuppressed, rlOspfEnableTrapsOspfTransmit=rlOspfEnableTrapsOspfTransmit, rlOspfRestartStatus=rlOspfRestartStatus, PYSNMP_MODULE_ID=rlOspf, rlOspfLsdbAge=rlOspfLsdbAge, rlOspfHostMetric=rlOspfHostMetric, rlOspfVirtIfLsaCksumSum=rlOspfVirtIfLsaCksumSum, rlOspfBrRouterAreaId=rlOspfBrRouterAreaId, rlOspfLsdbEntry=rlOspfLsdbEntry, rlOspfNbrDeadTime=rlOspfNbrDeadTime, rlOspfRouterIdType=rlOspfRouterIdType, rlOspfLsdbTable=rlOspfLsdbTable, rlOspfAreaRangeNet=rlOspfAreaRangeNet, rlOspfAsLsaCount=rlOspfAsLsaCount, rlOspfIfBackupDesignatedRouter=rlOspfIfBackupDesignatedRouter, rlOspfNbrAddressLessIndex=rlOspfNbrAddressLessIndex, rlOspfMaximumRedistPrefixThreshold=rlOspfMaximumRedistPrefixThreshold, rlOspfAreaEntry=rlOspfAreaEntry, rlOspfIfOperStatus=rlOspfIfOperStatus, rlOspfIfDesignatedRouterId=rlOspfIfDesignatedRouterId, rlOspfVirtLocalLsdbAdvertisement=rlOspfVirtLocalLsdbAdvertisement, rlOspfIfAdminStat=rlOspfIfAdminStat, rlOspfEnableTrapsOspfRateLimitSeconds=rlOspfEnableTrapsOspfRateLimitSeconds, rlOspfLogAdjacencyChanges=rlOspfLogAdjacencyChanges, rlOspfIfTable=rlOspfIfTable, rlOspfIfMetricEntry=rlOspfIfMetricEntry, rlOspfAsBdrRtrCount=rlOspfAsBdrRtrCount, rlOspfIfNameLookup=rlOspfIfNameLookup, rlOspfAreaNssaTranslatorStabilityInterval=rlOspfAreaNssaTranslatorStabilityInterval, rlOspfVirtIfOperStatus=rlOspfVirtIfOperStatus, rlOspfAreaAggregateNet=rlOspfAreaAggregateNet, rlOspfIfFastHelloMultiplier=rlOspfIfFastHelloMultiplier, rlOspfEnableTrapsOspfErrors=rlOspfEnableTrapsOspfErrors, rlOspfMulticastExtensions=rlOspfMulticastExtensions, rlOspfIfRtrPriority=rlOspfIfRtrPriority, rlOspfExtLsdbEntry=rlOspfExtLsdbEntry, rlOspfVirtLocalLsdbChecksum=rlOspfVirtLocalLsdbChecksum, rlOspfIfMulticastForwarding=rlOspfIfMulticastForwarding, rlOspfVirtIfTable=rlOspfVirtIfTable, rlOspfBrRouterProcessId=rlOspfBrRouterProcessId, rlOspfRestartAge=rlOspfRestartAge, rlOspfAreaAggregateProcessId=rlOspfAreaAggregateProcessId, rlOspfPassiveInterface=rlOspfPassiveInterface, rlOspfRteMaxEqCostPaths=rlOspfRteMaxEqCostPaths, rlOspfAreaLsaCount=rlOspfAreaLsaCount, rlOspfAreaSummary=rlOspfAreaSummary, rlOspfAreaRangeProcessId=rlOspfAreaRangeProcessId, rlOspfVirtIfRetransInterval=rlOspfVirtIfRetransInterval, rlOspfVirtNbrEntry=rlOspfVirtNbrEntry, rlOspfVirtNbrState=rlOspfVirtNbrState, rlOspfAreaAggregateEntry=rlOspfAreaAggregateEntry, rlOspfIfDemand=rlOspfIfDemand, rlOspfAddressLessIf=rlOspfAddressLessIf, rlOspfProcessId=rlOspfProcessId, rlOspfIfMetricTable=rlOspfIfMetricTable, rlOspfIfPassive=rlOspfIfPassive, rlOspfAreaRangeMask=rlOspfAreaRangeMask, rlOspfNbrTable=rlOspfNbrTable, rlOspfVirtLocalLsdbLsid=rlOspfVirtLocalLsdbLsid, rlOspfVirtIfAreaId=rlOspfVirtIfAreaId, rlOspfExt=rlOspfExt, rlOspfMaximumRedistPrefixNum=rlOspfMaximumRedistPrefixNum, rlOspfStubMetricType=rlOspfStubMetricType, rlOspfHostIpAddress=rlOspfHostIpAddress, rlOspfLocalLsdbChecksum=rlOspfLocalLsdbChecksum, rlOspfIfType=rlOspfIfType, rlOspfRestartStrictLsaChecking=rlOspfRestartStrictLsaChecking, rlOspfVirtLocalLsdbRouterId=rlOspfVirtLocalLsdbRouterId, rlOspfIfMetricTOS=rlOspfIfMetricTOS, rlOspfVirtIfState=rlOspfVirtIfState, rlOspfVirtIfLsaCount=rlOspfVirtIfLsaCount, rlOspfNbrRtrId=rlOspfNbrRtrId, rlOspfNextRouterIdType=rlOspfNextRouterIdType, rlOspfLocalLsdbAdvertisement=rlOspfLocalLsdbAdvertisement, rlOspfAreaNssaTranslatorEvents=rlOspfAreaNssaTranslatorEvents, rlOspfLsdbAreaId=rlOspfLsdbAreaId, rlOspfIfMetricIpAddress=rlOspfIfMetricIpAddress, rlOspfIfLsaRefreshIntvl=rlOspfIfLsaRefreshIntvl, rlOspfLsdbAdvertisement=rlOspfLsdbAdvertisement, rlOspfLocalLsdbLsid=rlOspfLocalLsdbLsid, rlOspfVirtNbrRestartHelperStatus=rlOspfVirtNbrRestartHelperStatus, rlOspfNbrIfIndex=rlOspfNbrIfIndex, RlOspfDeadIntervalRangeTC=RlOspfDeadIntervalRangeTC, rlOspfAreaRangeAreaId=rlOspfAreaRangeAreaId, rlOspfAuthType=rlOspfAuthType, rlOspfNbrEvents=rlOspfNbrEvents, rlOspf=rlOspf, rlOspfOperStatus=rlOspfOperStatus, rlOspfVirtNbrArea=rlOspfVirtNbrArea, rlOspfVirtIfActualAuthType=rlOspfVirtIfActualAuthType, rlOspfLsdbSequence=rlOspfLsdbSequence, rlOspfVirtIfTransitDelay=rlOspfVirtIfTransitDelay, rlOspfIfMetricStatus=rlOspfIfMetricStatus, rlOspfInstance=rlOspfInstance, rlOspfRouterId=rlOspfRouterId, rlOspfVirtIfProcessId=rlOspfVirtIfProcessId, rlOspfLsdbType=rlOspfLsdbType, rlOspfVersionNumber=rlOspfVersionNumber, rlOspfReferenceBandwidth=rlOspfReferenceBandwidth, rlOspfExternLsaCount=rlOspfExternLsaCount, rlOspfStubRouterSupport=rlOspfStubRouterSupport, rlOspfExtLsdbType=rlOspfExtLsdbType, rlOspfVirtLocalLsdbTable=rlOspfVirtLocalLsdbTable, rlOspfLocalLsdbAreaId=rlOspfLocalLsdbAreaId, rlOspfLocalLsdbSequence=rlOspfLocalLsdbSequence, rlOspfIfProcessId=rlOspfIfProcessId, rlOspfLocalLsdbRouterId=rlOspfLocalLsdbRouterId, rlOspfNbrIfIpAddr=rlOspfNbrIfIpAddr, RlOspfUpToRefreshIntervalTC=RlOspfUpToRefreshIntervalTC, rlOspfVirtNbrTable=rlOspfVirtNbrTable, rlOspfExtLsdbTable=rlOspfExtLsdbTable, rlOspfExtLsdbChecksum=rlOspfExtLsdbChecksum, rlOspfLsdbRouterId=rlOspfLsdbRouterId, rlOspfAreaProcessId=rlOspfAreaProcessId, rlOspfIfMetricAddressLessIf=rlOspfIfMetricAddressLessIf, rlOspfStubMetric=rlOspfStubMetric, rlOspfExtLsdbRouterId=rlOspfExtLsdbRouterId, rlOspfEnableTrapsOspfStateChange=rlOspfEnableTrapsOspfStateChange, rlOspfStubAreaTable=rlOspfStubAreaTable, rlOspfStubStatus=rlOspfStubStatus, rlOspfDiscontinuityTime=rlOspfDiscontinuityTime, rlOspfIfAuthType=rlOspfIfAuthType, rlOspfAreaRangeStatus=rlOspfAreaRangeStatus, rlOspfIfState=rlOspfIfState, rlOspfIfStatus=rlOspfIfStatus, rlOspfHostProcessId=rlOspfHostProcessId, rlOspfGeneralGroupStatus=rlOspfGeneralGroupStatus, rlOspfTOSSupport=rlOspfTOSSupport, rlOspfRxNewLsas=rlOspfRxNewLsas, rlOspfRestartSupport=rlOspfRestartSupport, rlOspfExtLsdbLimit=rlOspfExtLsdbLimit, rlOspfAreaRangeTable=rlOspfAreaRangeTable, rlOspfIfLsaCount=rlOspfIfLsaCount, rlOspfOriginateNewLsas=rlOspfOriginateNewLsas, rlOspfNbrOptions=rlOspfNbrOptions, rlOspfVirtLocalLsdbTransitArea=rlOspfVirtLocalLsdbTransitArea, rlOspfAreaAggregateExtRouteTag=rlOspfAreaAggregateExtRouteTag, rlOspfExtLsdbLsid=rlOspfExtLsdbLsid, rlOspfAreaOperStatus=rlOspfAreaOperStatus, rlOspfBrRouterRouterType=rlOspfBrRouterRouterType, rlOspfExtLsdbAge=rlOspfExtLsdbAge, RlOspfRestartHelperStatus=RlOspfRestartHelperStatus, rlOspfIfMetricProcessId=rlOspfIfMetricProcessId, rlOspfNbmaNbrStatus=rlOspfNbmaNbrStatus, rlOspfIfLsaCksumSum=rlOspfIfLsaCksumSum, rlOspfBrRouterTable=rlOspfBrRouterTable, rlOspfASBdrRtrStatus=rlOspfASBdrRtrStatus, rlOspfRestartExitReason=rlOspfRestartExitReason, rlOspfBrRouterRouterId=rlOspfBrRouterRouterId, rlOspfNextRouterId=rlOspfNextRouterId, rlOspfImportAsExtern=rlOspfImportAsExtern, rlOspfAreaRangeEffect=rlOspfAreaRangeEffect, rlOspfIfRetransInterval=rlOspfIfRetransInterval, rlOspfIfHelloInterval=rlOspfIfHelloInterval, rlOspfDefaultMetric=rlOspfDefaultMetric, rlOspfVirtNbrRestartHelperExitReason=rlOspfVirtNbrRestartHelperExitReason, RlOspfFastHelloMultiplierRange=RlOspfFastHelloMultiplierRange, rlOspfBrRouterOutIf=rlOspfBrRouterOutIf, rlOspfAreaStatus=rlOspfAreaStatus, RlOspfRouterIdType=RlOspfRouterIdType, rlOspfMaximumRedistPrefixWarningOnly=rlOspfMaximumRedistPrefixWarningOnly, rlOspfRestartInterval=rlOspfRestartInterval, rlOspfNbrRestartHelperStatus=rlOspfNbrRestartHelperStatus, rlOspfVirtLocalLsdbType=rlOspfVirtLocalLsdbType, rlOspfSpfRuns=rlOspfSpfRuns, rlOspfIfMtuIgnore=rlOspfIfMtuIgnore, rlOspfLocalLsdbIpAddress=rlOspfLocalLsdbIpAddress, rlOspfRFC1583Compatibility=rlOspfRFC1583Compatibility, rlOspfVirtNbrProcessId=rlOspfVirtNbrProcessId, rlOspfAreaNssaTranslatorRole=rlOspfAreaNssaTranslatorRole, rlOspfVirtIfNeighbor=rlOspfVirtIfNeighbor, rlOspfNbrLsRetransQLen=rlOspfNbrLsRetransQLen, rlOspfExternLsaCksumSum=rlOspfExternLsaCksumSum, rlOspfIfIpAddress=rlOspfIfIpAddress, rlOspfNbrRestartHelperExitReason=rlOspfNbrRestartHelperExitReason, rlOspfAreaLsaCksumSum=rlOspfAreaLsaCksumSum, rlOspfIfEvents=rlOspfIfEvents, rlOspfIfAuthKey=rlOspfIfAuthKey, rlOspfLocalLsdbType=rlOspfLocalLsdbType, rlOspfBrRouterRouteCost=rlOspfBrRouterRouteCost, rlOspfVirtIfAuthKeyChain=rlOspfVirtIfAuthKeyChain, rlOspfAreaRangeEntry=rlOspfAreaRangeEntry, rlOspfHostCfgAreaID=rlOspfHostCfgAreaID, rlOspfOpaqueLsaSupport=rlOspfOpaqueLsaSupport, rlOspfVirtNbrOptions=rlOspfVirtNbrOptions, rlOspfBrRouterRouteType=rlOspfBrRouterRouteType, rlOspfStubProcessId=rlOspfStubProcessId, rlOspfHostEntry=rlOspfHostEntry, rlOspfAreaFilterPrefixListIn=rlOspfAreaFilterPrefixListIn, rlOspfStubTOS=rlOspfStubTOS, rlOspfNbmaNbrPermanence=rlOspfNbmaNbrPermanence, rlOspfAreaAggregateAreaID=rlOspfAreaAggregateAreaID, rlOspfHostStatus=rlOspfHostStatus, rlOspfAreaAggregateMask=rlOspfAreaAggregateMask, rlOspfStubAreaId=rlOspfStubAreaId, rlOspfVirtIfRtrDeadInterval=rlOspfVirtIfRtrDeadInterval, rlOspfVirtNbrLsRetransQLen=rlOspfVirtNbrLsRetransQLen, rlOspfVirtLocalLsdbEntry=rlOspfVirtLocalLsdbEntry, rlOspfIfAuthKeyChain=rlOspfIfAuthKeyChain, rlOspfNbrRestartHelperAge=rlOspfNbrRestartHelperAge, rlOspfExtLsdbSequence=rlOspfExtLsdbSequence, rlOspfEnableTrapsOspfLsa=rlOspfEnableTrapsOspfLsa, rlOspfAsLsaCksumSum=rlOspfAsLsaCksumSum, rlOspfDemandExtensions=rlOspfDemandExtensions, rlOspfIfTransitDelay=rlOspfIfTransitDelay, rlOspfBrRouterNextHopIp=rlOspfBrRouterNextHopIp, rlOspfVirtNbrRtrId=rlOspfVirtNbrRtrId, rlOspfExitOverflowInterval=rlOspfExitOverflowInterval, rlOspfAreaNssaTranslatorState=rlOspfAreaNssaTranslatorState, rlOspfAreaAggregateLsdbType=rlOspfAreaAggregateLsdbType, rlOspfAreaBdrRtrCount=rlOspfAreaBdrRtrCount, rlOspfIfPollInterval=rlOspfIfPollInterval, rlOspfVirtIfStatus=rlOspfVirtIfStatus, rlOspfLocalLsdbProcessId=rlOspfLocalLsdbProcessId, rlOspfVirtLocalLsdbAge=rlOspfVirtLocalLsdbAge, rlOspfAdminStat=rlOspfAdminStat, rlOspfNbrEntry=rlOspfNbrEntry, rlOspfIfDesignatedRouter=rlOspfIfDesignatedRouter, RlOspfProcessID=RlOspfProcessID, rlOspfStubRouterAdvertisement=rlOspfStubRouterAdvertisement, rlOspfVirtIfAdminStatus=rlOspfVirtIfAdminStatus, rlOspfVirtNbrHelloSuppressed=rlOspfVirtNbrHelloSuppressed, rlOspfBrRouterEntry=rlOspfBrRouterEntry, rlOspfVirtNbrRestartHelperAge=rlOspfVirtNbrRestartHelperAge, rlOspfHostTable=rlOspfHostTable, rlOspfLocalLsdbEntry=rlOspfLocalLsdbEntry, RlOspfAuthenticationType=RlOspfAuthenticationType, rlOspfAreaAdminStat=rlOspfAreaAdminStat, rlOspfAreaId=rlOspfAreaId, rlOspfAreaFilterPrefixListOut=rlOspfAreaFilterPrefixListOut, rlOspfNbrIpAddr=rlOspfNbrIpAddr, rlOspfHostTOS=rlOspfHostTOS, rlOspfNbrPriority=rlOspfNbrPriority, rlOspfLsdbChecksum=rlOspfLsdbChecksum, rlOspfVirtIfEntry=rlOspfVirtIfEntry, rlOspfVirtNbrEvents=rlOspfVirtNbrEvents, rlOspfEnableTrapsOspfRateLimitTrapNumber=rlOspfEnableTrapsOspfRateLimitTrapNumber, rlOspfIfIfIndex=rlOspfIfIfIndex, rlOspfIfAreaId=rlOspfIfAreaId, rlOspfNbrAreaId=rlOspfNbrAreaId, rlOspfGeneralGroupEntry=rlOspfGeneralGroupEntry)
mibBuilder.exportSymbols("RADLAN-OSPF-MIB", rlOspfLocalLsdbTable=rlOspfLocalLsdbTable, rlOspfExtLsdbAdvertisement=rlOspfExtLsdbAdvertisement, rlOspfVirtLocalLsdbProcessId=rlOspfVirtLocalLsdbProcessId, rlOspfVirtLocalLsdbSequence=rlOspfVirtLocalLsdbSequence, rlOspfHostAreaID=rlOspfHostAreaID, rlOspfIfBackupDesignatedRouterId=rlOspfIfBackupDesignatedRouterId, rlOspfAreaTable=rlOspfAreaTable, rlOspfAreaAggregateStatus=rlOspfAreaAggregateStatus, rlOspfIfEntry=rlOspfIfEntry, rlOspfStubAreaEntry=rlOspfStubAreaEntry, rlOspfIfMetricValue=rlOspfIfMetricValue, rlOspfLocalLsdbAddressLessIf=rlOspfLocalLsdbAddressLessIf, rlOspfAreaAggregateEffect=rlOspfAreaAggregateEffect, rlOspfGeneralGroupTable=rlOspfGeneralGroupTable, rlOspfIfRtrDeadInterval=rlOspfIfRtrDeadInterval, rlOspfVirtIfHelloInterval=rlOspfVirtIfHelloInterval, RlOspfRestartExitReason=RlOspfRestartExitReason, rlOspfVirtIfAuthType=rlOspfVirtIfAuthType, rlOspfNbrProcessId=rlOspfNbrProcessId, rlOspfVirtNbrIpAddr=rlOspfVirtNbrIpAddr, rlOspfNbrState=rlOspfNbrState, rlOspfVirtIfIndex=rlOspfVirtIfIndex)
