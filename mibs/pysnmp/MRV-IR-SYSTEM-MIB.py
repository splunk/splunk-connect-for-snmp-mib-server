#
# PySNMP MIB module MRV-IR-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MRV-IR-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:05:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, Unsigned32, Counter64, ObjectIdentity, iso, Counter32, Gauge32, ModuleIdentity, IpAddress, TimeTicks, MibIdentifier, enterprises, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Unsigned32", "Counter64", "ObjectIdentity", "iso", "Counter32", "Gauge32", "ModuleIdentity", "IpAddress", "TimeTicks", "MibIdentifier", "enterprises", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
mrvBpd = MibIdentifier((1, 3, 6, 1, 4, 1, 33))
mrvLx = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100))
irSystemMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 33, 100, 1))
if mibBuilder.loadTexts: irSystemMib.setLastUpdated('200711080000Z')
if mibBuilder.loadTexts: irSystemMib.setOrganization('MRV Communications - BPD Division')
irSysSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 1))
irDevices = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 2))
irTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 3))
irCluster = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 4))
irEthernet = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 5))
irPower = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 6))
irInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 7))
irTar = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 8))
irIpmi = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 9))
irDeviceLx = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 2, 1))
irLx1001 = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 2, 1, 1))
irLx1002 = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 2, 1, 2))
irLx1004 = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 2, 1, 3))
irLx4008 = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 2, 1, 4))
irLx4016 = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 2, 1, 5))
irLx4032 = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 2, 1, 6))
irLx4048 = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 2, 1, 7))
irLxEm316 = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 2, 1, 8))
irLx8020 = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 2, 1, 9))
irLx8040 = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 2, 1, 10))
irLx4000T = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 2, 1, 11))
irLx7304T = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 2, 1, 12))
irLx4108T = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 2, 1, 13))
class TrapSeverity(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("cleared", 1), ("informational", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6))

class TarCreator(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("system", 2), ("snmp", 3))

class TarTrigType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))
    namedValues = NamedValues(("other", 1), ("temp", 2), ("humidity", 3), ("instant", 4), ("ping", 5), ("pattern", 6), ("inputSignal", 7), ("compound", 8), ("bootp", 9), ("alarm", 10), ("hdam", 11), ("power", 12), ("analog", 13), ("powerReg", 14), ("powerInput", 15), ("onboardTemp", 16), ("duration", 17), ("hdampower", 18), ("hdampowerReg", 19), ("hdampowerInput", 20), ("powerLoad", 21), ("powerLoadInput", 22), ("powerContact", 23), ("upsBattery", 24))

irSysImageFilename = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irSysImageFilename.setStatus('current')
irSysImageSource = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("flash", 1), ("network", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irSysImageSource.setStatus('current')
irSysImageServer = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irSysImageServer.setStatus('current')
irSysSwVersion = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irSysSwVersion.setStatus('current')
irSysSwBootVersion = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irSysSwBootVersion.setStatus('current')
irSysIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irSysIpAddress.setStatus('current')
irSysSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irSysSubnetMask.setStatus('current')
irSysBcastAddress = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irSysBcastAddress.setStatus('current')
irSysGateway = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irSysGateway.setStatus('current')
irSysAction = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("saveConfig", 2), ("reset", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irSysAction.setStatus('current')
irSysSnmpSetErrorString = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irSysSnmpSetErrorString.setStatus('current')
irSysModelType = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irSysModelType.setStatus('current')
irSysPowerType = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("powerAC", 1), ("powerDC", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irSysPowerType.setStatus('current')
irSysCurrentTemp = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irSysCurrentTemp.setStatus('current')
irSysTempThresholdLow = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irSysTempThresholdLow.setStatus('current')
irSysTempThresholdHigh = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irSysTempThresholdHigh.setStatus('current')
irSysTempHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irSysTempHysteresis.setStatus('current')
irSysPowerLostTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irSysPowerLostTimestamp.setStatus('current')
irSysFipsMode = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irSysFipsMode.setStatus('current')
irSysFlashMemSize = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("s8M", 1), ("s16M", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irSysFlashMemSize.setStatus('current')
irSysAssetTag = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irSysAssetTag.setStatus('current')
irSysPowerCurrentLoad = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irSysPowerCurrentLoad.setStatus('current')
irPowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 1, 6, 1), )
if mibBuilder.loadTexts: irPowerSupplyTable.setStatus('current')
irPowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 1, 6, 1, 1), ).setIndexNames((0, "MRV-IR-SYSTEM-MIB", "irPowerIndex"))
if mibBuilder.loadTexts: irPowerSupplyEntry.setStatus('current')
irPowerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irPowerIndex.setStatus('current')
irPowerUnitPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irPowerUnitPresent.setStatus('current')
irPowerInputStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irPowerInputStatus.setStatus('current')
irPowerOutputStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irPowerOutputStatus.setStatus('current')
irPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irPowerStatus.setStatus('current')
irPowerInputVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 6, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irPowerInputVoltage.setStatus('current')
irPowerOutputVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 6, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irPowerOutputVoltage.setStatus('current')
irClusterGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 4, 1))
irClusterCfgStatus = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irClusterCfgStatus.setStatus('current')
irClusterName = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irClusterName.setStatus('current')
irClusterSyncStatus = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 1), ("syncInProgress", 2), ("syncCompletedSuccess", 3), ("syncCompletedError", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irClusterSyncStatus.setStatus('current')
irClusterAction = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("flushAll", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irClusterAction.setStatus('current')
irClusterTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 1, 4, 2), )
if mibBuilder.loadTexts: irClusterTable.setStatus('current')
irClusterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 1, 4, 2, 1), ).setIndexNames((0, "MRV-IR-SYSTEM-MIB", "irClusterIpAddr"))
if mibBuilder.loadTexts: irClusterEntry.setStatus('current')
irClusterIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 4, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irClusterIpAddr.setStatus('current')
irClusterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 4, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: irClusterStatus.setStatus('current')
irEnetPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 1), )
if mibBuilder.loadTexts: irEnetPortConfigTable.setStatus('current')
irEnetPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 1, 1), ).setIndexNames((0, "MRV-IR-SYSTEM-MIB", "irEnetPortIndex"))
if mibBuilder.loadTexts: irEnetPortConfigEntry.setStatus('current')
irEnetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortIndex.setStatus('current')
irEnetPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sp10M", 1), ("sp100M", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortSpeed.setStatus('current')
irEnetPortDuplexMode = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("halfDuplex", 2), ("fullDuplex", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortDuplexMode.setStatus('current')
irEnetPortAutoNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("auto", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortAutoNegotiation.setStatus('current')
irEnetPortPhysMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enet", 1), ("sfp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortPhysMedia.setStatus('current')
irEnetPortLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortLinkStatus.setStatus('current')
irEnetPortBondingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("active", 2), ("backup", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortBondingStatus.setStatus('current')
irEnetPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2), )
if mibBuilder.loadTexts: irEnetPortStatsTable.setStatus('current')
irEnetPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2, 1), )
irEnetPortConfigEntry.registerAugmentions(("MRV-IR-SYSTEM-MIB", "irEnetPortStatsEntry"))
irEnetPortStatsEntry.setIndexNames(*irEnetPortConfigEntry.getIndexNames())
if mibBuilder.loadTexts: irEnetPortStatsEntry.setStatus('current')
irEnetPortRecvBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortRecvBytes.setStatus('current')
irEnetPortRecvPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortRecvPackets.setStatus('current')
irEnetPortRecvErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortRecvErrors.setStatus('current')
irEnetPortRecvDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortRecvDropped.setStatus('current')
irEnetPortRecvOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortRecvOverruns.setStatus('current')
irEnetPortRecvFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortRecvFrameErrors.setStatus('current')
irEnetPortRecvMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortRecvMulticast.setStatus('current')
irEnetPortRecvCompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortRecvCompressed.setStatus('current')
irEnetPortXmitBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortXmitBytes.setStatus('current')
irEnetPortXmitPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortXmitPackets.setStatus('current')
irEnetPortXmitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortXmitErrors.setStatus('current')
irEnetPortXmitDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortXmitDropped.setStatus('current')
irEnetPortXmitOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortXmitOverruns.setStatus('current')
irEnetPortXmitCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortXmitCollisions.setStatus('current')
irEnetPortXmitCompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortXmitCompressed.setStatus('current')
irEnetPortXmitCarrier = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 5, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irEnetPortXmitCarrier.setStatus('current')
irIfTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 1, 7, 1), )
if mibBuilder.loadTexts: irIfTable.setStatus('current')
irIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 1, 7, 1, 1), ).setIndexNames((0, "MRV-IR-SYSTEM-MIB", "irIfIndex"))
if mibBuilder.loadTexts: irIfEntry.setStatus('current')
irIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irIfIndex.setStatus('current')
irIfIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 7, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irIfIpAddress.setStatus('current')
irIfIpSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 7, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irIfIpSubnetMask.setStatus('current')
irIfIpBcastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 7, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irIfIpBcastAddress.setStatus('current')
irIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irIfMtu.setStatus('current')
irIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 7, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irIfName.setStatus('current')
irIfBoundTo = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 7, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irIfBoundTo.setStatus('current')
irIfTelnetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irIfTelnetPort.setStatus('current')
irIfSshPort = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 7, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irIfSshPort.setStatus('current')
irTarSys = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 1))
irTarTable = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2))
tarNextFreeTrigIndex = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tarNextFreeTrigIndex.setStatus('current')
tarNextFreeActionIndex = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tarNextFreeActionIndex.setStatus('current')
tarNextFreeRuleIndex = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tarNextFreeRuleIndex.setStatus('current')
tarTrigTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 1), )
if mibBuilder.loadTexts: tarTrigTable.setStatus('current')
tarTrigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 1, 1), ).setIndexNames((0, "MRV-IR-SYSTEM-MIB", "tarTrigIndex"))
if mibBuilder.loadTexts: tarTrigEntry.setStatus('current')
tarTrigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tarTrigIndex.setStatus('current')
tarTrigName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarTrigName.setStatus('current')
tarTrigType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 1, 1, 3), TarTrigType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarTrigType.setStatus('current')
tarTrigCreator = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 1, 1, 4), TarCreator()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tarTrigCreator.setStatus('current')
tarTrigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 1, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarTrigRowStatus.setStatus('current')
tarActionTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 2), )
if mibBuilder.loadTexts: tarActionTable.setStatus('current')
tarActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 2, 1), ).setIndexNames((0, "MRV-IR-SYSTEM-MIB", "tarActionIndex"))
if mibBuilder.loadTexts: tarActionEntry.setStatus('current')
tarActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tarActionIndex.setStatus('current')
tarActionName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarActionName.setStatus('current')
tarActionCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 135))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarActionCommand.setStatus('current')
tarActionCreator = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 2, 1, 4), TarCreator()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tarActionCreator.setStatus('current')
tarActionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 2, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarActionRowStatus.setStatus('current')
tarRuleTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 3), )
if mibBuilder.loadTexts: tarRuleTable.setStatus('current')
tarRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 3, 1), ).setIndexNames((0, "MRV-IR-SYSTEM-MIB", "tarRuleIndex"))
if mibBuilder.loadTexts: tarRuleEntry.setStatus('current')
tarRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tarRuleIndex.setStatus('current')
tarRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarRuleName.setStatus('current')
tarRuleTrigId = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarRuleTrigId.setStatus('current')
tarRuleActionId = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarRuleActionId.setStatus('current')
tarRuleStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarRuleStatus.setStatus('current')
tarRuleExecCount = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tarRuleExecCount.setStatus('current')
tarRuleErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tarRuleErrorCount.setStatus('current')
tarRuleCreator = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 3, 1, 8), TarCreator()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tarRuleCreator.setStatus('current')
tarRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 3, 1, 9), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarRuleRowStatus.setStatus('current')
tarTempTrigTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 4), )
if mibBuilder.loadTexts: tarTempTrigTable.setStatus('current')
tarTempTrigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 4, 1), )
tarTrigEntry.registerAugmentions(("MRV-IR-SYSTEM-MIB", "tarTempTrigEntry"))
tarTempTrigEntry.setIndexNames(*tarTrigEntry.getIndexNames())
if mibBuilder.loadTexts: tarTempTrigEntry.setStatus('current')
tarTempTrigPort = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarTempTrigPort.setStatus('current')
tarTempTrigOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lessThan", 1), ("greaterThan", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarTempTrigOperator.setStatus('current')
tarTempTrigThresholdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarTempTrigThresholdValue.setStatus('current')
tarTempTrigUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("celsius", 1), ("fahrenheit", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarTempTrigUnits.setStatus('current')
tarTempTrigHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarTempTrigHysteresis.setStatus('current')
tarSigTrigTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 6), )
if mibBuilder.loadTexts: tarSigTrigTable.setStatus('current')
tarSigTrigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 6, 1), )
tarTrigEntry.registerAugmentions(("MRV-IR-SYSTEM-MIB", "tarSigTrigEntry"))
tarSigTrigEntry.setIndexNames(*tarTrigEntry.getIndexNames())
if mibBuilder.loadTexts: tarSigTrigEntry.setStatus('current')
tarSigTrigPort = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarSigTrigPort.setStatus('current')
tarSigTrigSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cts", 1), ("dsr", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarSigTrigSignal.setStatus('current')
tarSigTrigState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 1, 8, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("low", 1), ("high", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tarSigTrigState.setStatus('current')
irIpmiSys = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 1, 9, 1))
ipmiDiscreteOffset = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmiDiscreteOffset.setStatus('current')
ipmiDiscreteSensorName = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 98))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmiDiscreteSensorName.setStatus('current')
ipmiThresholdType = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("lowerNonCritical", 1), ("lowerCritical", 2), ("lowerNonRecoverable", 3), ("upperNonCritical", 4), ("upperCritical", 5), ("upperNonRecoverable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmiThresholdType.setStatus('current')
ipmiThresholdSensorName = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 98))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmiThresholdSensorName.setStatus('current')
ipmiThresholdDirection = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("goingLow", 1), ("goingHigh", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmiThresholdDirection.setStatus('current')
ipmiThresholdAssert = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 1, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("assertion", 1), ("deassertion", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmiThresholdAssert.setStatus('current')
mibBuilder.exportSymbols("MRV-IR-SYSTEM-MIB", irTar=irTar, irIfIndex=irIfIndex, tarActionEntry=tarActionEntry, irEnetPortConfigEntry=irEnetPortConfigEntry, irEnetPortRecvFrameErrors=irEnetPortRecvFrameErrors, tarTrigCreator=tarTrigCreator, irClusterGrp=irClusterGrp, irEnetPortXmitDropped=irEnetPortXmitDropped, irIpmiSys=irIpmiSys, irSysSystem=irSysSystem, irEnetPortXmitPackets=irEnetPortXmitPackets, irEnetPortRecvOverruns=irEnetPortRecvOverruns, irSystemMib=irSystemMib, irLxEm316=irLxEm316, irLx1001=irLx1001, irPowerInputStatus=irPowerInputStatus, irLx8040=irLx8040, irIfEntry=irIfEntry, tarActionTable=tarActionTable, irLx7304T=irLx7304T, irSysFlashMemSize=irSysFlashMemSize, tarTempTrigEntry=tarTempTrigEntry, tarTempTrigTable=tarTempTrigTable, irEnetPortRecvBytes=irEnetPortRecvBytes, tarSigTrigEntry=tarSigTrigEntry, irEnetPortSpeed=irEnetPortSpeed, irSysSubnetMask=irSysSubnetMask, irSysPowerLostTimestamp=irSysPowerLostTimestamp, irPowerOutputStatus=irPowerOutputStatus, ipmiThresholdDirection=ipmiThresholdDirection, irDevices=irDevices, TrapSeverity=TrapSeverity, irClusterCfgStatus=irClusterCfgStatus, irClusterTable=irClusterTable, ipmiDiscreteOffset=ipmiDiscreteOffset, irSysImageServer=irSysImageServer, irClusterAction=irClusterAction, irPowerSupplyTable=irPowerSupplyTable, tarTrigTable=tarTrigTable, ipmiThresholdAssert=ipmiThresholdAssert, tarSigTrigState=tarSigTrigState, irIfIpBcastAddress=irIfIpBcastAddress, irSysAction=irSysAction, irPowerOutputVoltage=irPowerOutputVoltage, tarTempTrigOperator=tarTempTrigOperator, irIfMtu=irIfMtu, tarRuleEntry=tarRuleEntry, irPower=irPower, irClusterName=irClusterName, tarTempTrigThresholdValue=tarTempTrigThresholdValue, irLx4016=irLx4016, tarRuleActionId=tarRuleActionId, tarSigTrigPort=tarSigTrigPort, ipmiThresholdSensorName=ipmiThresholdSensorName, irIfBoundTo=irIfBoundTo, irEnetPortXmitBytes=irEnetPortXmitBytes, tarTrigRowStatus=tarTrigRowStatus, tarNextFreeTrigIndex=tarNextFreeTrigIndex, irInterfaces=irInterfaces, irIfSshPort=irIfSshPort, tarRuleStatus=tarRuleStatus, irEnetPortPhysMedia=irEnetPortPhysMedia, tarTrigType=tarTrigType, irEnetPortStatsTable=irEnetPortStatsTable, ipmiThresholdType=ipmiThresholdType, irEnetPortRecvCompressed=irEnetPortRecvCompressed, tarRuleExecCount=tarRuleExecCount, irSysSnmpSetErrorString=irSysSnmpSetErrorString, mrvBpd=mrvBpd, irSysGateway=irSysGateway, irClusterEntry=irClusterEntry, irTraps=irTraps, irSysPowerType=irSysPowerType, irIfTable=irIfTable, irSysSwVersion=irSysSwVersion, irEnetPortIndex=irEnetPortIndex, irClusterStatus=irClusterStatus, irIfIpSubnetMask=irIfIpSubnetMask, ipmiDiscreteSensorName=ipmiDiscreteSensorName, irEnetPortAutoNegotiation=irEnetPortAutoNegotiation, tarActionName=tarActionName, irTarSys=irTarSys, mrvLx=mrvLx, irEnetPortRecvMulticast=irEnetPortRecvMulticast, irDeviceLx=irDeviceLx, irLx4108T=irLx4108T, irSysCurrentTemp=irSysCurrentTemp, irSysFipsMode=irSysFipsMode, irCluster=irCluster, irSysAssetTag=irSysAssetTag, irEnetPortRecvDropped=irEnetPortRecvDropped, irEnetPortXmitErrors=irEnetPortXmitErrors, irIpmi=irIpmi, irEnetPortConfigTable=irEnetPortConfigTable, tarRuleTrigId=tarRuleTrigId, irEnetPortLinkStatus=irEnetPortLinkStatus, irSysImageFilename=irSysImageFilename, irSysPowerCurrentLoad=irSysPowerCurrentLoad, tarRuleTable=tarRuleTable, irPowerIndex=irPowerIndex, irPowerUnitPresent=irPowerUnitPresent, irSysTempThresholdHigh=irSysTempThresholdHigh, irClusterSyncStatus=irClusterSyncStatus, tarRuleCreator=tarRuleCreator, irEthernet=irEthernet, irClusterIpAddr=irClusterIpAddr, tarTempTrigHysteresis=tarTempTrigHysteresis, TarCreator=TarCreator, irLx1002=irLx1002, irEnetPortBondingStatus=irEnetPortBondingStatus, irEnetPortRecvErrors=irEnetPortRecvErrors, irLx4032=irLx4032, irIfIpAddress=irIfIpAddress, tarRuleName=tarRuleName, TarTrigType=TarTrigType, irSysIpAddress=irSysIpAddress, tarActionRowStatus=tarActionRowStatus, tarNextFreeActionIndex=tarNextFreeActionIndex, irEnetPortStatsEntry=irEnetPortStatsEntry, tarRuleErrorCount=tarRuleErrorCount, irEnetPortXmitCollisions=irEnetPortXmitCollisions, tarSigTrigSignal=tarSigTrigSignal, tarActionIndex=tarActionIndex, irLx4000T=irLx4000T, irEnetPortRecvPackets=irEnetPortRecvPackets, irSysBcastAddress=irSysBcastAddress, irTarTable=irTarTable, tarTrigEntry=tarTrigEntry, PYSNMP_MODULE_ID=irSystemMib, irIfName=irIfName, tarActionCommand=tarActionCommand, irLx8020=irLx8020, irSysSwBootVersion=irSysSwBootVersion, tarNextFreeRuleIndex=tarNextFreeRuleIndex, irPowerStatus=irPowerStatus, irIfTelnetPort=irIfTelnetPort, irLx1004=irLx1004, tarRuleRowStatus=tarRuleRowStatus, irSysTempThresholdLow=irSysTempThresholdLow, irSysImageSource=irSysImageSource, irPowerSupplyEntry=irPowerSupplyEntry, tarTempTrigPort=tarTempTrigPort, irSysTempHysteresis=irSysTempHysteresis, tarTrigIndex=tarTrigIndex, irEnetPortXmitCompressed=irEnetPortXmitCompressed, irLx4008=irLx4008, tarTrigName=tarTrigName, tarRuleIndex=tarRuleIndex, irLx4048=irLx4048, tarSigTrigTable=tarSigTrigTable, irSysModelType=irSysModelType, irEnetPortXmitOverruns=irEnetPortXmitOverruns, tarTempTrigUnits=tarTempTrigUnits, irEnetPortDuplexMode=irEnetPortDuplexMode, irPowerInputVoltage=irPowerInputVoltage, irEnetPortXmitCarrier=irEnetPortXmitCarrier, tarActionCreator=tarActionCreator)
