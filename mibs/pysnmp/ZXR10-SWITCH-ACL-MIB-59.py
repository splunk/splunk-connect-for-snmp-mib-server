#
# PySNMP MIB module ZXR10-SWITCH-ACL-MIB-59 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZXR10-SWITCH-ACL-MIB-59
# Produced by pysmi-0.3.4 at Mon Apr 29 21:42:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, experimental, mgmt, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Bits, IpAddress, iso, ObjectIdentity, MibIdentifier, ModuleIdentity, Integer32, NotificationType, TimeTicks, Counter64, enterprises, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "experimental", "mgmt", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Bits", "IpAddress", "iso", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "Integer32", "NotificationType", "TimeTicks", "Counter64", "enterprises", "Gauge32")
MacAddress, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "RowStatus", "DisplayString")
zte = MibIdentifier((1, 3, 6, 1, 4, 1, 3902))
zxr10 = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3))
zxr10switch = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 102))
zxr10ACL = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2))
class DisplayString(OctetString):
    pass

zxr10StandardACLTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 1), )
if mibBuilder.loadTexts: zxr10StandardACLTable.setStatus('current')
zxr10StandardACLEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 1, 1), ).setIndexNames((0, "ZXR10-SWITCH-ACL-MIB-59", "zxr10StandardACLNo"), (0, "ZXR10-SWITCH-ACL-MIB-59", "zxr10StandardACLRuleID"))
if mibBuilder.loadTexts: zxr10StandardACLEntry.setStatus('current')
zxr10StandardACLNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StandardACLNo.setStatus('current')
zxr10StandardACLName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StandardACLName.setStatus('current')
zxr10StandardACLAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StandardACLAlias.setStatus('current')
zxr10StandardACLMatchorder = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("config", 0), ("auto", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StandardACLMatchorder.setStatus('current')
zxr10StandardACLRuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StandardACLRuleID.setStatus('current')
zxr10StandardACLPermitDeny = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("permit", 0), ("deny", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StandardACLPermitDeny.setStatus('current')
zxr10StandardACLSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 1, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StandardACLSrcAddr.setStatus('current')
zxr10StandardACLSrcAddrSrcWildcard = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 1, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StandardACLSrcAddrSrcWildcard.setStatus('current')
zxr10StandardACLSrcAny = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalid", 0), ("valid", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StandardACLSrcAny.setStatus('current')
zxr10StandardACLFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StandardACLFlag.setStatus('current')
zxr10StandardACLTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StandardACLTimeRangeName.setStatus('current')
zxr10StandardACLRuleDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StandardACLRuleDescription.setStatus('current')
zxr10ExtendedACLTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2), )
if mibBuilder.loadTexts: zxr10ExtendedACLTable.setStatus('current')
zxr10ExtendedACLEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1), ).setIndexNames((0, "ZXR10-SWITCH-ACL-MIB-59", "zxr10ExtendedACLNo"), (0, "ZXR10-SWITCH-ACL-MIB-59", "zxr10ExtendedACLRuleID"))
if mibBuilder.loadTexts: zxr10ExtendedACLEntry.setStatus('current')
zxr10ExtendedACLNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLNo.setStatus('current')
zxr10ExtendedACLName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLName.setStatus('current')
zxr10ExtendedACLAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLAlias.setStatus('current')
zxr10ExtendedACLMatchorder = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("config", 0), ("auto", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLMatchorder.setStatus('current')
zxr10ExtendedACLRuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLRuleID.setStatus('current')
zxr10ExtendedACLPermitDeny = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("permit", 0), ("deny", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLPermitDeny.setStatus('current')
zxr10ExtendedACLSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLSrcAddr.setStatus('current')
zxr10ExtendedACLSrcWildcard = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLSrcWildcard.setStatus('current')
zxr10ExtendedACLSrcAny = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalid", 0), ("valid", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLSrcAny.setStatus('current')
zxr10ExtendedACLDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLDestAddr.setStatus('current')
zxr10ExtendedACLDestWildcard = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLDestWildcard.setStatus('current')
zxr10ExtendedACLDestAny = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalid", 0), ("valid", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLDestAny.setStatus('current')
zxr10ExtendedACLProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLProtocol.setStatus('current')
zxr10ExtendedACLSrcOpr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 7))).clone(namedValues=NamedValues(("invalid", 0), ("eq", 1), ("ge", 2), ("le", 3), ("range", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLSrcOpr.setStatus('current')
zxr10ExtendedACLSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLSrcPort.setStatus('current')
zxr10ExtendedACLSrcPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLSrcPort2.setStatus('current')
zxr10ExtendedACLDestOpr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 7))).clone(namedValues=NamedValues(("invalid", 0), ("eq", 1), ("ge", 2), ("le", 3), ("range", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLDestOpr.setStatus('current')
zxr10ExtendedACLDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLDestPort.setStatus('current')
zxr10ExtendedACLDestPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLDestPort2.setStatus('current')
zxr10ExtendedACLTCPEstablish = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("true", 1), ("false", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLTCPEstablish.setStatus('current')
zxr10ExtendedACLICMPType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLICMPType.setStatus('current')
zxr10ExtendedACLICMPCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLICMPCode.setStatus('current')
zxr10ExtendedACLPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLPrecedence.setStatus('current')
zxr10ExtendedACLTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLTOS.setStatus('current')
zxr10ExtendedACLDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLDSCP.setStatus('current')
zxr10ExtendedACLFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLFlag.setStatus('current')
zxr10ExtendedACLTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLTimeRangeName.setStatus('current')
zxr10ExtendedACLRuleDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 2, 1, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ExtendedACLRuleDescription.setStatus('current')
zxr10LinkACLTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3), )
if mibBuilder.loadTexts: zxr10LinkACLTable.setStatus('current')
zxr10LinkACLEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1), ).setIndexNames((0, "ZXR10-SWITCH-ACL-MIB-59", "zxr10LinkACLNo"), (0, "ZXR10-SWITCH-ACL-MIB-59", "zxr10LinkACLRuleID"))
if mibBuilder.loadTexts: zxr10LinkACLEntry.setStatus('current')
zxr10LinkACLNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 299))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLNo.setStatus('current')
zxr10LinkACLName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLName.setStatus('current')
zxr10LinkACLAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLAlias.setStatus('current')
zxr10LinkACLMatchorder = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("config", 0), ("auto", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLMatchorder.setStatus('current')
zxr10LinkACLRuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLRuleID.setStatus('current')
zxr10LinkACLPermitDeny = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("permit", 0), ("deny", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLPermitDeny.setStatus('current')
zxr10LinkACLProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLProtocol.setStatus('current')
zxr10LinkACLCos = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLCos.setStatus('current')
zxr10LinkACLDoutVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLDoutVlanID.setStatus('current')
zxr10LinkACLInMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 13), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLInMAC.setStatus('current')
zxr10LinkACLInMACWildcard = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 14), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLInMACWildcard.setStatus('current')
zxr10LinkACLInMACAny = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLInMACAny.setStatus('current')
zxr10LinkACLOutMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 16), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLOutMAC.setStatus('current')
zxr10LinkACLOutMACWildCard = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 17), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLOutMACWildCard.setStatus('current')
zxr10LinkACLOutMACAny = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLOutMACAny.setStatus('current')
zxr10LinkACLFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLFlag.setStatus('current')
zxr10LinkACLTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLTimeRangeName.setStatus('current')
zxr10LinkACLRuleDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 3, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10LinkACLRuleDescription.setStatus('current')
zxr10HybridACLTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4), )
if mibBuilder.loadTexts: zxr10HybridACLTable.setStatus('current')
zxr10HybridACLEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1), ).setIndexNames((0, "ZXR10-SWITCH-ACL-MIB-59", "zxr10HybridACLNo"), (0, "ZXR10-SWITCH-ACL-MIB-59", "zxr10HybridACLRuleID"))
if mibBuilder.loadTexts: zxr10HybridACLEntry.setStatus('current')
zxr10HybridACLNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 349))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLNo.setStatus('current')
zxr10HybridACLName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLName.setStatus('current')
zxr10HybridACLAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLAlias.setStatus('current')
zxr10HybridACLMatchorder = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("config", 0), ("auto", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLMatchorder.setStatus('current')
zxr10HybridACLRuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLRuleID.setStatus('current')
zxr10HybridACLPermitDeny = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("permit", 0), ("deny", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLPermitDeny.setStatus('current')
zxr10HybridACLProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLProtocol.setStatus('current')
zxr10HybridACLSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLSrcAddr.setStatus('current')
zxr10HybridACLSrcAddrWildcard = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLSrcAddrWildcard.setStatus('current')
zxr10HybridACLSrcAny = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalid", 0), ("valid", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLSrcAny.setStatus('current')
zxr10HybridACLDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLDestAddr.setStatus('current')
zxr10HybridACLDestAddrWildcard = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLDestAddrWildcard.setStatus('current')
zxr10HybridACLDestAny = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalid", 0), ("valid", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLDestAny.setStatus('current')
zxr10HybridACLSrcOpr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalid", 0), ("eq", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLSrcOpr.setStatus('current')
zxr10HybridACLSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLSrcPort.setStatus('current')
zxr10HybridACLDestOpr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalid", 0), ("eq", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLDestOpr.setStatus('current')
zxr10HybridACLDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLDestPort.setStatus('current')
zxr10HybridACLIPNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLIPNumber.setStatus('current')
zxr10HybridACLCos = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLCos.setStatus('current')
zxr10HybridACLDoutVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLDoutVlanID.setStatus('current')
zxr10HybridACLInMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 28), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLInMAC.setStatus('current')
zxr10HybridACLInMACWildcard = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 29), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLInMACWildcard.setStatus('current')
zxr10HybridACLInMACAny = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLInMACAny.setStatus('current')
zxr10HybridACLOutMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 31), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLOutMAC.setStatus('current')
zxr10HybridACLOutMACWildcard = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 32), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLOutMACWildcard.setStatus('current')
zxr10HybridACLOutMACAny = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLOutMACAny.setStatus('current')
zxr10HybridACLFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLFlag.setStatus('current')
zxr10HybridACLTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLTimeRangeName.setStatus('current')
zxr10HybridACLRuleDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 2, 4, 1, 36), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HybridACLRuleDescription.setStatus('current')
mibBuilder.exportSymbols("ZXR10-SWITCH-ACL-MIB-59", zxr10LinkACLNo=zxr10LinkACLNo, zxr10LinkACLFlag=zxr10LinkACLFlag, zxr10HybridACLSrcAny=zxr10HybridACLSrcAny, zxr10LinkACLProtocol=zxr10LinkACLProtocol, zxr10LinkACLRuleDescription=zxr10LinkACLRuleDescription, zxr10StandardACLSrcAddr=zxr10StandardACLSrcAddr, zxr10LinkACLRuleID=zxr10LinkACLRuleID, zxr10ExtendedACLName=zxr10ExtendedACLName, zxr10HybridACLCos=zxr10HybridACLCos, zxr10ExtendedACLDestWildcard=zxr10ExtendedACLDestWildcard, zxr10HybridACLSrcPort=zxr10HybridACLSrcPort, zxr10HybridACLSrcAddrWildcard=zxr10HybridACLSrcAddrWildcard, zxr10StandardACLPermitDeny=zxr10StandardACLPermitDeny, zxr10ExtendedACLEntry=zxr10ExtendedACLEntry, zxr10LinkACLPermitDeny=zxr10LinkACLPermitDeny, zxr10HybridACLRuleDescription=zxr10HybridACLRuleDescription, zxr10HybridACLDestAddr=zxr10HybridACLDestAddr, zxr10LinkACLInMACAny=zxr10LinkACLInMACAny, zxr10StandardACLName=zxr10StandardACLName, zxr10ExtendedACLTable=zxr10ExtendedACLTable, zxr10ExtendedACLPermitDeny=zxr10ExtendedACLPermitDeny, zxr10ExtendedACLRuleDescription=zxr10ExtendedACLRuleDescription, zxr10LinkACLName=zxr10LinkACLName, zxr10ExtendedACLSrcAny=zxr10ExtendedACLSrcAny, zxr10ExtendedACLICMPType=zxr10ExtendedACLICMPType, zxr10LinkACLInMAC=zxr10LinkACLInMAC, zxr10LinkACLCos=zxr10LinkACLCos, zxr10StandardACLEntry=zxr10StandardACLEntry, zxr10ExtendedACLSrcAddr=zxr10ExtendedACLSrcAddr, DisplayString=DisplayString, zxr10=zxr10, zxr10HybridACLTable=zxr10HybridACLTable, zxr10ExtendedACLSrcWildcard=zxr10ExtendedACLSrcWildcard, zxr10ExtendedACLDestOpr=zxr10ExtendedACLDestOpr, zxr10HybridACLMatchorder=zxr10HybridACLMatchorder, zxr10ExtendedACLDestAddr=zxr10ExtendedACLDestAddr, zxr10HybridACLSrcAddr=zxr10HybridACLSrcAddr, zxr10HybridACLDestPort=zxr10HybridACLDestPort, zxr10HybridACLInMAC=zxr10HybridACLInMAC, zxr10ExtendedACLSrcOpr=zxr10ExtendedACLSrcOpr, zxr10StandardACLSrcAddrSrcWildcard=zxr10StandardACLSrcAddrSrcWildcard, zxr10StandardACLFlag=zxr10StandardACLFlag, zxr10HybridACLSrcOpr=zxr10HybridACLSrcOpr, zxr10ExtendedACLDestPort2=zxr10ExtendedACLDestPort2, zxr10LinkACLEntry=zxr10LinkACLEntry, zxr10ExtendedACLTCPEstablish=zxr10ExtendedACLTCPEstablish, zxr10ExtendedACLMatchorder=zxr10ExtendedACLMatchorder, zxr10switch=zxr10switch, zxr10LinkACLOutMACWildCard=zxr10LinkACLOutMACWildCard, zxr10LinkACLAlias=zxr10LinkACLAlias, zxr10LinkACLMatchorder=zxr10LinkACLMatchorder, zxr10LinkACLDoutVlanID=zxr10LinkACLDoutVlanID, zxr10ExtendedACLNo=zxr10ExtendedACLNo, zxr10ExtendedACLICMPCode=zxr10ExtendedACLICMPCode, zxr10HybridACLPermitDeny=zxr10HybridACLPermitDeny, zxr10HybridACLIPNumber=zxr10HybridACLIPNumber, zxr10LinkACLOutMACAny=zxr10LinkACLOutMACAny, zxr10StandardACLAlias=zxr10StandardACLAlias, zxr10HybridACLName=zxr10HybridACLName, zxr10LinkACLInMACWildcard=zxr10LinkACLInMACWildcard, zxr10HybridACLInMACAny=zxr10HybridACLInMACAny, zxr10ExtendedACLFlag=zxr10ExtendedACLFlag, zxr10LinkACLTable=zxr10LinkACLTable, zxr10HybridACLInMACWildcard=zxr10HybridACLInMACWildcard, zxr10HybridACLNo=zxr10HybridACLNo, zxr10ACL=zxr10ACL, zxr10HybridACLOutMACWildcard=zxr10HybridACLOutMACWildcard, zxr10ExtendedACLRuleID=zxr10ExtendedACLRuleID, zxr10ExtendedACLSrcPort=zxr10ExtendedACLSrcPort, zxr10HybridACLFlag=zxr10HybridACLFlag, zxr10HybridACLOutMAC=zxr10HybridACLOutMAC, zxr10HybridACLEntry=zxr10HybridACLEntry, zxr10ExtendedACLTimeRangeName=zxr10ExtendedACLTimeRangeName, zxr10LinkACLTimeRangeName=zxr10LinkACLTimeRangeName, zxr10HybridACLDestAddrWildcard=zxr10HybridACLDestAddrWildcard, zxr10ExtendedACLProtocol=zxr10ExtendedACLProtocol, zxr10StandardACLRuleDescription=zxr10StandardACLRuleDescription, zxr10HybridACLProtocol=zxr10HybridACLProtocol, zxr10HybridACLTimeRangeName=zxr10HybridACLTimeRangeName, zxr10ExtendedACLAlias=zxr10ExtendedACLAlias, zxr10StandardACLMatchorder=zxr10StandardACLMatchorder, zxr10HybridACLAlias=zxr10HybridACLAlias, zxr10HybridACLOutMACAny=zxr10HybridACLOutMACAny, zxr10ExtendedACLPrecedence=zxr10ExtendedACLPrecedence, zxr10ExtendedACLDSCP=zxr10ExtendedACLDSCP, zxr10HybridACLRuleID=zxr10HybridACLRuleID, zte=zte, zxr10ExtendedACLDestPort=zxr10ExtendedACLDestPort, zxr10StandardACLTable=zxr10StandardACLTable, zxr10ExtendedACLSrcPort2=zxr10ExtendedACLSrcPort2, zxr10HybridACLDoutVlanID=zxr10HybridACLDoutVlanID, zxr10LinkACLOutMAC=zxr10LinkACLOutMAC, zxr10StandardACLNo=zxr10StandardACLNo, zxr10StandardACLTimeRangeName=zxr10StandardACLTimeRangeName, zxr10ExtendedACLTOS=zxr10ExtendedACLTOS, zxr10HybridACLDestAny=zxr10HybridACLDestAny, zxr10StandardACLRuleID=zxr10StandardACLRuleID, zxr10HybridACLDestOpr=zxr10HybridACLDestOpr, zxr10ExtendedACLDestAny=zxr10ExtendedACLDestAny, zxr10StandardACLSrcAny=zxr10StandardACLSrcAny)
