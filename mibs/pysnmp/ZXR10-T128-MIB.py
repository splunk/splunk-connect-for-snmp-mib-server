#
# PySNMP MIB module ZXR10-T128-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZXR10-T128-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:42:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, mgmt, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks, IpAddress, Unsigned32, MibIdentifier, Counter64, Gauge32, NotificationType, ObjectIdentity, ModuleIdentity, NotificationType, enterprises, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "mgmt", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks", "IpAddress", "Unsigned32", "MibIdentifier", "Counter64", "Gauge32", "NotificationType", "ObjectIdentity", "ModuleIdentity", "NotificationType", "enterprises", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
BoolStatus, PortWorkingType, UnitRunStatus, OperStatus, NpcType, zxr10, zxr10PosInRack, DisplayString, BoardType, PidUsedStatus, AvailStatus, ShelfAttrib, MasterStatus, PortType, zxr10rack, zxr10RackNo = mibBuilder.importSymbols("ZXR10-MIB", "BoolStatus", "PortWorkingType", "UnitRunStatus", "OperStatus", "NpcType", "zxr10", "zxr10PosInRack", "DisplayString", "BoardType", "PidUsedStatus", "AvailStatus", "ShelfAttrib", "MasterStatus", "PortType", "zxr10rack", "zxr10RackNo")
class AlarmType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 129, 130, 131, 132, 133, 134))
    namedValues = NamedValues(("hardware-environment", 1), ("hardware-board", 2), ("hardware-port", 3), ("softprotocol-ros", 65), ("softprotocol-database", 66), ("softprotocol-oam", 67), ("softprotocol-security", 68), ("softprotocol-ospf", 69), ("softprotocol-rip", 70), ("softprotocol-bgp", 71), ("softprotocol-drp", 72), ("softprotocol-tcp-udp", 73), ("softprotocol-ip", 74), ("softprotocol-igmp", 75), ("softprotocol-telnet", 76), ("softprotocol-udp", 77), ("softprotocol-arp", 78), ("softprotocol-isis", 79), ("softprotocol-icmp", 80), ("softprotocol-snmp", 81), ("softprotocol-rmon", 82), ("statistics-microcode", 129), ("statistics-ip", 130), ("statistics-tcp", 131), ("statistics-udp", 132), ("statistics-icmp", 133), ("statistics-bgp", 134))

zxr10shelfTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 2, 2), )
if mibBuilder.loadTexts: zxr10shelfTable.setStatus('current')
zxr10shelfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 2, 2, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10RackNo"), (0, "ZXR10-T128-MIB", "zxr10ShelfNo"))
if mibBuilder.loadTexts: zxr10shelfEntry.setStatus('current')
zxr10ShelfNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ShelfNo.setStatus('current')
zxr10ShelfAttrib = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 2, 1, 2), ShelfAttrib()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ShelfAttrib.setStatus('current')
zxr10ShelfAvailStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 2, 1, 3), AvailStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ShelfAvailStatus.setStatus('current')
zxr10portTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4), )
if mibBuilder.loadTexts: zxr10portTable.setStatus('current')
zxr10portEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10RackNo"), (0, "ZXR10-T128-MIB", "zxr10ShelfNo"), (0, "ZXR10-MIB", "zxr10PosInRack"), (0, "ZXR10-T128-MIB", "zxr10PortNo"))
if mibBuilder.loadTexts: zxr10portEntry.setStatus('current')
zxr10PortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortIfIndex.setStatus('current')
zxr10PortNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortNo.setStatus('current')
zxr10PortType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 3), PortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortType.setStatus('current')
zxr10PortWorkingType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 4), PortWorkingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortWorkingType.setStatus('current')
zxr10PortMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortMTU.setStatus('current')
zxr10PortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortSpeed.setStatus('current')
zxr10PortAvailStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 7), AvailStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortAvailStatus.setStatus('current')
zxr10PortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 8), OperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortOperStatus.setStatus('current')
mibBuilder.exportSymbols("ZXR10-T128-MIB", zxr10PortWorkingType=zxr10PortWorkingType, zxr10ShelfNo=zxr10ShelfNo, zxr10PortSpeed=zxr10PortSpeed, zxr10PortAvailStatus=zxr10PortAvailStatus, zxr10shelfEntry=zxr10shelfEntry, zxr10shelfTable=zxr10shelfTable, zxr10PortNo=zxr10PortNo, zxr10portEntry=zxr10portEntry, zxr10PortMTU=zxr10PortMTU, zxr10portTable=zxr10portTable, zxr10PortOperStatus=zxr10PortOperStatus, AlarmType=AlarmType, zxr10PortIfIndex=zxr10PortIfIndex, zxr10ShelfAvailStatus=zxr10ShelfAvailStatus, zxr10PortType=zxr10PortType, zxr10ShelfAttrib=zxr10ShelfAttrib)
