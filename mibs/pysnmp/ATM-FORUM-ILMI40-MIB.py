#
# PySNMP MIB module ATM-FORUM-ILMI40-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ATM-FORUM-ILMI40-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:15:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, IpAddress, TimeTicks, Counter64, ObjectIdentity, Gauge32, Integer32, MibIdentifier, NotificationType, Counter32, ModuleIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, enterprises, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "IpAddress", "TimeTicks", "Counter64", "ObjectIdentity", "Gauge32", "Integer32", "MibIdentifier", "NotificationType", "Counter32", "ModuleIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "enterprises", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class AtmAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

class TruthValue(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("true", 1), ("false", 2))

class ClnpAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 21)

class AtmServiceCategory(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("other", 1), ("cbr", 2), ("rtVbr", 3), ("nrtVbr", 4), ("abr", 5), ("ubr", 6))

atmForum = MibIdentifier((1, 3, 6, 1, 4, 1, 353))
atmForumAdmin = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1))
atmfTransmissionTypes = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 2))
atmfMediaTypes = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 3))
atmfTrafficDescrTypes = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 4))
atmfSrvcRegTypes = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 5))
atmForumUni = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2))
atmfPhysicalGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 1))
atmfAtmLayerGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 2))
atmfAtmStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 3))
atmfVpcGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 4))
atmfVccGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 5))
atmfAddressGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 6))
atmfNetPrefixGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 7))
atmfSrvcRegistryGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 8))
atmfVpcAbrGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 9))
atmfVccAbrGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 10))
atmfAddressRegistrationAdminGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 11))
atmfUnknownType = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 2, 1))
atmfSonetSTS3c = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 2, 2))
atmfDs3 = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 2, 3))
atmf4B5B = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 2, 4))
atmf8B10B = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 2, 5))
atmfSonetSTS12c = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 2, 6))
atmfE3 = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 2, 7))
atmfT1 = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 2, 8))
atmfE1 = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 2, 9))
atmfMediaUnknownType = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 3, 1))
atmfMediaCoaxCable = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 3, 2))
atmfMediaSingleMode = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 3, 3))
atmfMediaMultiMode = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 3, 4))
atmfMediaStp = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 3, 5))
atmfMediaUtp = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 3, 6))
atmfNoDescriptor = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 4, 1))
atmfPeakRate = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 4, 2))
atmfNoClpNoScr = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 4, 3))
atmfClpNoTaggingNoScr = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 4, 4))
atmfClpTaggingNoScr = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 4, 5))
atmfNoClpScr = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 4, 6))
atmfClpNoTaggingScr = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 4, 7))
atmfClpTaggingScr = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 4, 8))
atmfClpNoTaggingMcr = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 4, 9))
atmfPortTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 1, 1), )
if mibBuilder.loadTexts: atmfPortTable.setStatus('mandatory')
atmfPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1), ).setIndexNames((0, "ATM-FORUM-ILMI40-MIB", "atmfPortIndex"))
if mibBuilder.loadTexts: atmfPortEntry.setStatus('mandatory')
atmfPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfPortIndex.setStatus('mandatory')
atmfPortAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1, 2), AtmAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfPortAddress.setStatus('obsolete')
atmfPortTransmissionType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfPortTransmissionType.setStatus('deprecated')
atmfPortMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1, 4), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfPortMediaType.setStatus('deprecated')
atmfPortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("inService", 2), ("outOfService", 3), ("loopBack", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfPortOperStatus.setStatus('deprecated')
atmfPortSpecific = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfPortSpecific.setStatus('deprecated')
atmfPortMyIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfPortMyIfName.setStatus('mandatory')
atmfPortMyIfIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfPortMyIfIdentifier.setStatus('mandatory')
atmfMyIpNmAddress = MibScalar((1, 3, 6, 1, 4, 1, 353, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfMyIpNmAddress.setStatus('mandatory')
atmfMyOsiNmNsapAddress = MibScalar((1, 3, 6, 1, 4, 1, 353, 2, 1, 3), ClnpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfMyOsiNmNsapAddress.setStatus('mandatory')
atmfMySystemIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 353, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfMySystemIdentifier.setStatus('mandatory')
atmfAtmLayerTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 2, 1), )
if mibBuilder.loadTexts: atmfAtmLayerTable.setStatus('mandatory')
atmfAtmLayerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1), ).setIndexNames((0, "ATM-FORUM-ILMI40-MIB", "atmfAtmLayerIndex"))
if mibBuilder.loadTexts: atmfAtmLayerEntry.setStatus('mandatory')
atmfAtmLayerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerIndex.setStatus('mandatory')
atmfAtmLayerMaxVPCs = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerMaxVPCs.setStatus('mandatory')
atmfAtmLayerMaxVCCs = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 268435456))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerMaxVCCs.setStatus('mandatory')
atmfAtmLayerConfiguredVPCs = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerConfiguredVPCs.setStatus('mandatory')
atmfAtmLayerConfiguredVCCs = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 268435456))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerConfiguredVCCs.setStatus('mandatory')
atmfAtmLayerMaxVpiBits = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerMaxVpiBits.setStatus('mandatory')
atmfAtmLayerMaxVciBits = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerMaxVciBits.setStatus('mandatory')
atmfAtmLayerUniType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("public", 1), ("private", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerUniType.setStatus('mandatory')
atmfAtmLayerUniVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("version2point0", 1), ("version3point0", 2), ("version3point1", 3), ("version4point0", 4), ("unsupported", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerUniVersion.setStatus('mandatory')
atmfAtmLayerDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("user", 1), ("node", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerDeviceType.setStatus('mandatory')
atmfAtmLayerIlmiVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unsupported", 1), ("version4point0", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerIlmiVersion.setStatus('mandatory')
atmfAtmLayerNniSigVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unsupported", 1), ("iisp", 2), ("pnniVersion1point0", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerNniSigVersion.setStatus('mandatory')
atmfAtmLayerMaxSvpcVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerMaxSvpcVpi.setStatus('mandatory')
atmfAtmLayerMaxSvccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerMaxSvccVpi.setStatus('mandatory')
atmfAtmLayerMinSvccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerMinSvccVci.setStatus('mandatory')
atmfAtmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 3, 1), )
if mibBuilder.loadTexts: atmfAtmStatsTable.setStatus('deprecated')
atmfAtmStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 3, 1, 1), ).setIndexNames((0, "ATM-FORUM-ILMI40-MIB", "atmfAtmStatsIndex"))
if mibBuilder.loadTexts: atmfAtmStatsEntry.setStatus('deprecated')
atmfAtmStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmStatsIndex.setStatus('deprecated')
atmfAtmStatsReceivedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmStatsReceivedCells.setStatus('deprecated')
atmfAtmStatsDroppedReceivedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmStatsDroppedReceivedCells.setStatus('deprecated')
atmfAtmStatsTransmittedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmStatsTransmittedCells.setStatus('deprecated')
atmfVpcTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 4, 1), )
if mibBuilder.loadTexts: atmfVpcTable.setStatus('mandatory')
atmfVpcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1), ).setIndexNames((0, "ATM-FORUM-ILMI40-MIB", "atmfVpcPortIndex"), (0, "ATM-FORUM-ILMI40-MIB", "atmfVpcVpi"))
if mibBuilder.loadTexts: atmfVpcEntry.setStatus('mandatory')
atmfVpcPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcPortIndex.setStatus('mandatory')
atmfVpcVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcVpi.setStatus('mandatory')
atmfVpcOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("end2endUp", 2), ("end2endDown", 3), ("localUpEnd2endUnknown", 4), ("localDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcOperStatus.setStatus('mandatory')
atmfVpcTransmitTrafficDescriptorType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 4), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorType.setStatus('mandatory')
atmfVpcTransmitTrafficDescriptorParam1 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorParam1.setStatus('mandatory')
atmfVpcTransmitTrafficDescriptorParam2 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorParam2.setStatus('mandatory')
atmfVpcTransmitTrafficDescriptorParam3 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorParam3.setStatus('mandatory')
atmfVpcTransmitTrafficDescriptorParam4 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorParam4.setStatus('mandatory')
atmfVpcTransmitTrafficDescriptorParam5 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorParam5.setStatus('mandatory')
atmfVpcReceiveTrafficDescriptorType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 10), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorType.setStatus('mandatory')
atmfVpcReceiveTrafficDescriptorParam1 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorParam1.setStatus('mandatory')
atmfVpcReceiveTrafficDescriptorParam2 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorParam2.setStatus('mandatory')
atmfVpcReceiveTrafficDescriptorParam3 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorParam3.setStatus('mandatory')
atmfVpcReceiveTrafficDescriptorParam4 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorParam4.setStatus('mandatory')
atmfVpcReceiveTrafficDescriptorParam5 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorParam5.setStatus('mandatory')
atmfVpcQoSCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("deterministic", 2), ("statistical", 3), ("unspecified", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcQoSCategory.setStatus('obsolete')
atmfVpcTransmitQoSClass = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcTransmitQoSClass.setStatus('deprecated')
atmfVpcReceiveQoSClass = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcReceiveQoSClass.setStatus('deprecated')
atmfVpcBestEffortIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcBestEffortIndicator.setStatus('mandatory')
atmfVpcServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 20), AtmServiceCategory()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcServiceCategory.setStatus('mandatory')
atmfVpcAbrTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 9, 1), )
if mibBuilder.loadTexts: atmfVpcAbrTable.setStatus('mandatory')
atmfVpcAbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1), ).setIndexNames((0, "ATM-FORUM-ILMI40-MIB", "atmfVpcAbrPortIndex"), (0, "ATM-FORUM-ILMI40-MIB", "atmfVpcAbrVpi"))
if mibBuilder.loadTexts: atmfVpcAbrEntry.setStatus('mandatory')
atmfVpcAbrPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrPortIndex.setStatus('mandatory')
atmfVpcAbrVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrVpi.setStatus('mandatory')
atmfVpcAbrTransmitIcr = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrTransmitIcr.setStatus('mandatory')
atmfVpcAbrTransmitNrm = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("nrm2", 1), ("nrm4", 2), ("nrm8", 3), ("nrm16", 4), ("nrm32", 5), ("nrm64", 6), ("nrm128", 7), ("nrm256", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrTransmitNrm.setStatus('mandatory')
atmfVpcAbrTransmitTrm = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("trm0point78125", 1), ("trm1point5625", 2), ("trm3point125", 3), ("trm6point25", 4), ("trm12point5", 5), ("trm25", 6), ("trm50", 7), ("trm100", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrTransmitTrm.setStatus('mandatory')
atmfVpcAbrTransmitCdf = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("cdf0", 1), ("cdfOneOver64", 2), ("cdfOneOver32", 3), ("cdfOneOver16", 4), ("cdfOneOver8", 5), ("cdfOneOver4", 6), ("cdfOneOver2", 7), ("cdfOne", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrTransmitCdf.setStatus('mandatory')
atmfVpcAbrTransmitRif = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("rifOneOver32768", 1), ("rifOneOver16384", 2), ("rifOneOver8192", 3), ("rifOneOver4096", 4), ("rifOneOver2048", 5), ("rifOneOver1024", 6), ("rifOneOver512", 7), ("rifOneOver256", 8), ("rifOneOver128", 9), ("rifOneOver64", 10), ("rifOneOver32", 11), ("rifOneOver16", 12), ("rifOneOver8", 13), ("rifOneOver4", 14), ("rifOneOver2", 15), ("rifOne", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrTransmitRif.setStatus('mandatory')
atmfVpcAbrTransmitRdf = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("rdfOneOver32768", 1), ("rdfOneOver16384", 2), ("rdfOneOver8192", 3), ("rdfOneOver4096", 4), ("rdfOneOver2048", 5), ("rdfOneOver1024", 6), ("rdfOneOver512", 7), ("rdfOneOver256", 8), ("rdfOneOver128", 9), ("rdfOneOver64", 10), ("rdfOneOver32", 11), ("rdfOneOver16", 12), ("rdfOneOver8", 13), ("rdfOneOver4", 14), ("rdfOneOver2", 15), ("rdfOne", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrTransmitRdf.setStatus('mandatory')
atmfVpcAbrTransmitAdtf = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrTransmitAdtf.setStatus('mandatory')
atmfVpcAbrTransmitCrm = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8388608))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrTransmitCrm.setStatus('mandatory')
atmfVccTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 5, 1), )
if mibBuilder.loadTexts: atmfVccTable.setStatus('mandatory')
atmfVccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1), ).setIndexNames((0, "ATM-FORUM-ILMI40-MIB", "atmfVccPortIndex"), (0, "ATM-FORUM-ILMI40-MIB", "atmfVccVpi"), (0, "ATM-FORUM-ILMI40-MIB", "atmfVccVci"))
if mibBuilder.loadTexts: atmfVccEntry.setStatus('mandatory')
atmfVccPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccPortIndex.setStatus('mandatory')
atmfVccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccVpi.setStatus('mandatory')
atmfVccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccVci.setStatus('mandatory')
atmfVccOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("end2endUp", 2), ("end2endDown", 3), ("localUpEnd2endUnknown", 4), ("localDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccOperStatus.setStatus('mandatory')
atmfVccTransmitTrafficDescriptorType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorType.setStatus('mandatory')
atmfVccTransmitTrafficDescriptorParam1 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorParam1.setStatus('mandatory')
atmfVccTransmitTrafficDescriptorParam2 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorParam2.setStatus('mandatory')
atmfVccTransmitTrafficDescriptorParam3 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorParam3.setStatus('mandatory')
atmfVccTransmitTrafficDescriptorParam4 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorParam4.setStatus('mandatory')
atmfVccTransmitTrafficDescriptorParam5 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorParam5.setStatus('mandatory')
atmfVccReceiveTrafficDescriptorType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 11), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorType.setStatus('mandatory')
atmfVccReceiveTrafficDescriptorParam1 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorParam1.setStatus('mandatory')
atmfVccReceiveTrafficDescriptorParam2 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorParam2.setStatus('mandatory')
atmfVccReceiveTrafficDescriptorParam3 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorParam3.setStatus('mandatory')
atmfVccReceiveTrafficDescriptorParam4 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorParam4.setStatus('mandatory')
atmfVccReceiveTrafficDescriptorParam5 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorParam5.setStatus('mandatory')
atmfVccQoSCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("deterministic", 2), ("statistical", 3), ("unspecified", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccQoSCategory.setStatus('obsolete')
atmfVccTransmitQoSClass = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccTransmitQoSClass.setStatus('deprecated')
atmfVccReceiveQoSClass = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccReceiveQoSClass.setStatus('deprecated')
atmfVccBestEffortIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccBestEffortIndicator.setStatus('mandatory')
atmfVccTransmitFrameDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccTransmitFrameDiscard.setStatus('mandatory')
atmfVccReceiveFrameDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccReceiveFrameDiscard.setStatus('mandatory')
atmfVccServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 23), AtmServiceCategory()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccServiceCategory.setStatus('mandatory')
atmfVccAbrTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 10, 1), )
if mibBuilder.loadTexts: atmfVccAbrTable.setStatus('mandatory')
atmfVccAbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1), ).setIndexNames((0, "ATM-FORUM-ILMI40-MIB", "atmfVccAbrPortIndex"), (0, "ATM-FORUM-ILMI40-MIB", "atmfVccAbrVpi"), (0, "ATM-FORUM-ILMI40-MIB", "atmfVccAbrVci"))
if mibBuilder.loadTexts: atmfVccAbrEntry.setStatus('mandatory')
atmfVccAbrPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrPortIndex.setStatus('mandatory')
atmfVccAbrVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrVpi.setStatus('mandatory')
atmfVccAbrVci = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrVci.setStatus('mandatory')
atmfVccAbrTransmitIcr = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrTransmitIcr.setStatus('mandatory')
atmfVccAbrTransmitNrm = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("nrm2", 1), ("nrm4", 2), ("nrm8", 3), ("nrm16", 4), ("nrm32", 5), ("nrm64", 6), ("nrm128", 7), ("nrm256", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrTransmitNrm.setStatus('mandatory')
atmfVccAbrTransmitTrm = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("trm0point78125", 1), ("trm1point5625", 2), ("trm3point125", 3), ("trm6point25", 4), ("trm12point5", 5), ("trm25", 6), ("trm50", 7), ("trm100", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrTransmitTrm.setStatus('mandatory')
atmfVccAbrTransmitCdf = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("cdf0", 1), ("cdfOneOver64", 2), ("cdfOneOver32", 3), ("cdfOneOver16", 4), ("cdfOneOver8", 5), ("cdfOneOver4", 6), ("cdfOneOver2", 7), ("cdfOne", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrTransmitCdf.setStatus('mandatory')
atmfVccAbrTransmitRif = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("rifOneOver32768", 1), ("rifOneOver16384", 2), ("rifOneOver8192", 3), ("rifOneOver4096", 4), ("rifOneOver2048", 5), ("rifOneOver1024", 6), ("rifOneOver512", 7), ("rifOneOver256", 8), ("rifOneOver128", 9), ("rifOneOver64", 10), ("rifOneOver32", 11), ("rifOneOver16", 12), ("rifOneOver8", 13), ("rifOneOver4", 14), ("rifOneOver2", 15), ("rifOne", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrTransmitRif.setStatus('mandatory')
atmfVccAbrTransmitRdf = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("rdfOneOver32768", 1), ("rdfOneOver16384", 2), ("rdfOneOver8192", 3), ("rdfOneOver4096", 4), ("rdfOneOver2048", 5), ("rdfOneOver1024", 6), ("rdfOneOver512", 7), ("rdfOneOver256", 8), ("rdfOneOver128", 9), ("rdfOneOver64", 10), ("rdfOneOver32", 11), ("rdfOneOver16", 12), ("rdfOneOver8", 13), ("rdfOneOver4", 14), ("rdfOneOver2", 15), ("rdfOne", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrTransmitRdf.setStatus('mandatory')
atmfVccAbrTransmitAdtf = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrTransmitAdtf.setStatus('mandatory')
atmfVccAbrTransmitCrm = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8388608))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrTransmitCrm.setStatus('mandatory')
atmfVpcChange = NotificationType((1, 3, 6, 1, 4, 1, 353) + (0,1)).setObjects(("ATM-FORUM-ILMI40-MIB", "atmfVpcPortIndex"), ("ATM-FORUM-ILMI40-MIB", "atmfVpcVpi"), ("ATM-FORUM-ILMI40-MIB", "atmfVpcOperStatus"))
atmfVccChange = NotificationType((1, 3, 6, 1, 4, 1, 353) + (0,2)).setObjects(("ATM-FORUM-ILMI40-MIB", "atmfVccPortIndex"), ("ATM-FORUM-ILMI40-MIB", "atmfVccVci"), ("ATM-FORUM-ILMI40-MIB", "atmfVccVpi"), ("ATM-FORUM-ILMI40-MIB", "atmfVccOperStatus"))
atmfAddressTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 6, 1), )
if mibBuilder.loadTexts: atmfAddressTable.setStatus('mandatory')
atmfAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 6, 1, 1), ).setIndexNames((0, "ATM-FORUM-ILMI40-MIB", "atmfAddressPort"), (0, "ATM-FORUM-ILMI40-MIB", "atmfAddressAtmAddress"))
if mibBuilder.loadTexts: atmfAddressEntry.setStatus('mandatory')
atmfAddressPort = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: atmfAddressPort.setStatus('mandatory')
atmfAddressAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 6, 1, 1, 2), AtmAddress())
if mibBuilder.loadTexts: atmfAddressAtmAddress.setStatus('mandatory')
atmfAddressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmfAddressStatus.setStatus('mandatory')
atmfAddressOrgScope = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("localNetwork", 1), ("localNetworkPlusOne", 2), ("localNetworkPlusTwo", 3), ("siteMinusOne", 4), ("intraSite", 5), ("sitePlusOne", 6), ("organizationMinusOne", 7), ("intraOrganization", 8), ("organizationPlusOne", 9), ("communityMinusOne", 10), ("intraCommunity", 11), ("communityPlusOne", 12), ("regional", 13), ("interRegional", 14), ("global", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmfAddressOrgScope.setStatus('mandatory')
atmfAddressRegistrationAdminTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 11, 1), )
if mibBuilder.loadTexts: atmfAddressRegistrationAdminTable.setStatus('mandatory')
atmfAddressRegistrationAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 11, 1, 1), ).setIndexNames((0, "ATM-FORUM-ILMI40-MIB", "atmfAddressRegistrationAdminIndex"))
if mibBuilder.loadTexts: atmfAddressRegistrationAdminEntry.setStatus('mandatory')
atmfAddressRegistrationAdminIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAddressRegistrationAdminIndex.setStatus('mandatory')
atmfAddressRegistrationAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAddressRegistrationAdminStatus.setStatus('mandatory')
atmfSrvcRegLecs = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 5, 1))
atmfSrvcRegAns = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 1, 5, 2))
atmfSrvcRegTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 8, 1), )
if mibBuilder.loadTexts: atmfSrvcRegTable.setStatus('mandatory')
atmfSrvcRegEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 8, 1, 1), ).setIndexNames((0, "ATM-FORUM-ILMI40-MIB", "atmfSrvcRegPort"), (0, "ATM-FORUM-ILMI40-MIB", "atmfSrvcRegServiceID"), (0, "ATM-FORUM-ILMI40-MIB", "atmfSrvcRegAddressIndex"))
if mibBuilder.loadTexts: atmfSrvcRegEntry.setStatus('mandatory')
atmfSrvcRegPort = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: atmfSrvcRegPort.setStatus('mandatory')
atmfSrvcRegServiceID = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 8, 1, 1, 2), ObjectIdentifier())
if mibBuilder.loadTexts: atmfSrvcRegServiceID.setStatus('mandatory')
atmfSrvcRegATMAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 8, 1, 1, 3), AtmAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfSrvcRegATMAddress.setStatus('mandatory')
atmfSrvcRegAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: atmfSrvcRegAddressIndex.setStatus('mandatory')
atmfSrvcRegParm1 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 8, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfSrvcRegParm1.setStatus('mandatory')
mibBuilder.exportSymbols("ATM-FORUM-ILMI40-MIB", atmfMySystemIdentifier=atmfMySystemIdentifier, atmfAtmLayerMaxVCCs=atmfAtmLayerMaxVCCs, atmfVpcTransmitTrafficDescriptorParam2=atmfVpcTransmitTrafficDescriptorParam2, atmfMediaTypes=atmfMediaTypes, atmfSrvcRegTypes=atmfSrvcRegTypes, atmfAddressRegistrationAdminIndex=atmfAddressRegistrationAdminIndex, atmfSonetSTS12c=atmfSonetSTS12c, atmfVccQoSCategory=atmfVccQoSCategory, atmfPortOperStatus=atmfPortOperStatus, atmfVccAbrTransmitAdtf=atmfVccAbrTransmitAdtf, atmfVpcReceiveTrafficDescriptorParam4=atmfVpcReceiveTrafficDescriptorParam4, atmfVccReceiveTrafficDescriptorParam5=atmfVccReceiveTrafficDescriptorParam5, atmfSrvcRegATMAddress=atmfSrvcRegATMAddress, atmfClpTaggingNoScr=atmfClpTaggingNoScr, atmfAtmLayerMaxSvccVpi=atmfAtmLayerMaxSvccVpi, atmfVpcAbrTransmitTrm=atmfVpcAbrTransmitTrm, atmfT1=atmfT1, atmfAtmLayerConfiguredVPCs=atmfAtmLayerConfiguredVPCs, atmfPortSpecific=atmfPortSpecific, atmfPeakRate=atmfPeakRate, atmfAddressRegistrationAdminTable=atmfAddressRegistrationAdminTable, atmfClpNoTaggingMcr=atmfClpNoTaggingMcr, AtmServiceCategory=AtmServiceCategory, atmfAtmLayerConfiguredVCCs=atmfAtmLayerConfiguredVCCs, atmfAtmStatsReceivedCells=atmfAtmStatsReceivedCells, atmfVpcAbrTransmitIcr=atmfVpcAbrTransmitIcr, atmfVccEntry=atmfVccEntry, atmfVccTransmitQoSClass=atmfVccTransmitQoSClass, atmfVpcAbrTransmitRif=atmfVpcAbrTransmitRif, atmfVccBestEffortIndicator=atmfVccBestEffortIndicator, atmfAtmLayerMaxSvpcVpi=atmfAtmLayerMaxSvpcVpi, atmfAtmStatsGroup=atmfAtmStatsGroup, atmfNetPrefixGroup=atmfNetPrefixGroup, atmfAddressRegistrationAdminGroup=atmfAddressRegistrationAdminGroup, atmfTransmissionTypes=atmfTransmissionTypes, atmfVccReceiveTrafficDescriptorType=atmfVccReceiveTrafficDescriptorType, atmfVccServiceCategory=atmfVccServiceCategory, atmfVpcAbrTransmitCdf=atmfVpcAbrTransmitCdf, atmfNoDescriptor=atmfNoDescriptor, atmfVccReceiveTrafficDescriptorParam3=atmfVccReceiveTrafficDescriptorParam3, atmfVpcTransmitTrafficDescriptorParam3=atmfVpcTransmitTrafficDescriptorParam3, atmfPortAddress=atmfPortAddress, atmfAtmLayerMinSvccVci=atmfAtmLayerMinSvccVci, atmfVpcTable=atmfVpcTable, atmfVccAbrTransmitNrm=atmfVccAbrTransmitNrm, atmfSrvcRegPort=atmfSrvcRegPort, atmfVccAbrVci=atmfVccAbrVci, atmfVpcAbrGroup=atmfVpcAbrGroup, atmfVccReceiveTrafficDescriptorParam2=atmfVccReceiveTrafficDescriptorParam2, atmfAddressStatus=atmfAddressStatus, atmfVpcReceiveQoSClass=atmfVpcReceiveQoSClass, atmfVpcAbrVpi=atmfVpcAbrVpi, atmfUnknownType=atmfUnknownType, atmfVpcOperStatus=atmfVpcOperStatus, atmfVpcPortIndex=atmfVpcPortIndex, atmfPortMyIfIdentifier=atmfPortMyIfIdentifier, atmfAtmLayerTable=atmfAtmLayerTable, ClnpAddress=ClnpAddress, atmfVccTransmitTrafficDescriptorParam1=atmfVccTransmitTrafficDescriptorParam1, atmfE1=atmfE1, atmfVccAbrVpi=atmfVccAbrVpi, atmfNoClpNoScr=atmfNoClpNoScr, atmfPortTransmissionType=atmfPortTransmissionType, atmfMyIpNmAddress=atmfMyIpNmAddress, atmfVpcTransmitTrafficDescriptorParam4=atmfVpcTransmitTrafficDescriptorParam4, atmfNoClpScr=atmfNoClpScr, atmfAddressTable=atmfAddressTable, atmfAddressGroup=atmfAddressGroup, atmForumUni=atmForumUni, atmf8B10B=atmf8B10B, atmfAtmLayerIndex=atmfAtmLayerIndex, atmfVccAbrTransmitTrm=atmfVccAbrTransmitTrm, atmfVccAbrTransmitCrm=atmfVccAbrTransmitCrm, atmfMediaCoaxCable=atmfMediaCoaxCable, atmfSrvcRegTable=atmfSrvcRegTable, atmfAtmLayerMaxVPCs=atmfAtmLayerMaxVPCs, atmfSrvcRegEntry=atmfSrvcRegEntry, atmfAddressPort=atmfAddressPort, atmfTrafficDescrTypes=atmfTrafficDescrTypes, atmfClpNoTaggingNoScr=atmfClpNoTaggingNoScr, atmfPortMediaType=atmfPortMediaType, atmfVccAbrTransmitRdf=atmfVccAbrTransmitRdf, atmfPortMyIfName=atmfPortMyIfName, atmfVpcQoSCategory=atmfVpcQoSCategory, atmfVccAbrTransmitIcr=atmfVccAbrTransmitIcr, atmfMediaStp=atmfMediaStp, AtmAddress=AtmAddress, atmfAtmLayerNniSigVersion=atmfAtmLayerNniSigVersion, atmfVpcAbrEntry=atmfVpcAbrEntry, atmfVccAbrGroup=atmfVccAbrGroup, atmfMediaUnknownType=atmfMediaUnknownType, atmfVccTable=atmfVccTable, atmfVccChange=atmfVccChange, atmfVccAbrTable=atmfVccAbrTable, atmfVpcReceiveTrafficDescriptorParam2=atmfVpcReceiveTrafficDescriptorParam2, atmfAtmStatsIndex=atmfAtmStatsIndex, atmfVccTransmitFrameDiscard=atmfVccTransmitFrameDiscard, atmfAtmLayerGroup=atmfAtmLayerGroup, atmfAtmLayerIlmiVersion=atmfAtmLayerIlmiVersion, atmfClpTaggingScr=atmfClpTaggingScr, atmfE3=atmfE3, atmfVccAbrPortIndex=atmfVccAbrPortIndex, atmfVccTransmitTrafficDescriptorParam2=atmfVccTransmitTrafficDescriptorParam2, atmfVpcAbrTransmitRdf=atmfVpcAbrTransmitRdf, atmfClpNoTaggingScr=atmfClpNoTaggingScr, atmfVccTransmitTrafficDescriptorParam3=atmfVccTransmitTrafficDescriptorParam3, atmfAddressEntry=atmfAddressEntry, atmfAtmStatsDroppedReceivedCells=atmfAtmStatsDroppedReceivedCells, atmfVpcServiceCategory=atmfVpcServiceCategory, atmfVpcAbrTransmitAdtf=atmfVpcAbrTransmitAdtf, atmfVccReceiveQoSClass=atmfVccReceiveQoSClass, atmfSrvcRegAddressIndex=atmfSrvcRegAddressIndex, atmfVpcTransmitTrafficDescriptorParam5=atmfVpcTransmitTrafficDescriptorParam5, atmfAtmLayerDeviceType=atmfAtmLayerDeviceType, atmfVccVci=atmfVccVci, atmfAddressAtmAddress=atmfAddressAtmAddress, atmfVpcAbrTransmitNrm=atmfVpcAbrTransmitNrm, atmfVpcTransmitQoSClass=atmfVpcTransmitQoSClass, atmfVccAbrTransmitCdf=atmfVccAbrTransmitCdf, atmfPortTable=atmfPortTable, atmfAddressRegistrationAdminStatus=atmfAddressRegistrationAdminStatus, atmfPhysicalGroup=atmfPhysicalGroup, atmfMyOsiNmNsapAddress=atmfMyOsiNmNsapAddress, atmfAtmLayerMaxVciBits=atmfAtmLayerMaxVciBits, atmfVpcTransmitTrafficDescriptorParam1=atmfVpcTransmitTrafficDescriptorParam1, atmfMediaUtp=atmfMediaUtp, atmfVpcGroup=atmfVpcGroup, atmfAtmLayerMaxVpiBits=atmfAtmLayerMaxVpiBits, atmfVccVpi=atmfVccVpi, atmfVccAbrEntry=atmfVccAbrEntry, atmfPortEntry=atmfPortEntry, atmfMediaSingleMode=atmfMediaSingleMode, atmfAddressRegistrationAdminEntry=atmfAddressRegistrationAdminEntry, atmfVccTransmitTrafficDescriptorParam5=atmfVccTransmitTrafficDescriptorParam5, atmfVpcAbrPortIndex=atmfVpcAbrPortIndex, atmfVccReceiveTrafficDescriptorParam4=atmfVccReceiveTrafficDescriptorParam4, atmfAtmStatsTransmittedCells=atmfAtmStatsTransmittedCells, atmfAddressOrgScope=atmfAddressOrgScope, atmfAtmStatsTable=atmfAtmStatsTable, atmfVccReceiveFrameDiscard=atmfVccReceiveFrameDiscard, atmfVccPortIndex=atmfVccPortIndex, atmfVccGroup=atmfVccGroup, atmfAtmLayerUniType=atmfAtmLayerUniType, atmfVpcReceiveTrafficDescriptorType=atmfVpcReceiveTrafficDescriptorType, atmfVpcAbrTable=atmfVpcAbrTable, atmfVpcVpi=atmfVpcVpi, atmfAtmLayerEntry=atmfAtmLayerEntry, atmfSrvcRegAns=atmfSrvcRegAns, atmfVccOperStatus=atmfVccOperStatus, atmfSrvcRegistryGroup=atmfSrvcRegistryGroup, atmfVccTransmitTrafficDescriptorParam4=atmfVccTransmitTrafficDescriptorParam4, atmForum=atmForum, atmfSrvcRegServiceID=atmfSrvcRegServiceID, TruthValue=TruthValue, atmfVccReceiveTrafficDescriptorParam1=atmfVccReceiveTrafficDescriptorParam1, atmfVpcEntry=atmfVpcEntry, atmfAtmLayerUniVersion=atmfAtmLayerUniVersion, atmfAtmStatsEntry=atmfAtmStatsEntry, atmfVpcReceiveTrafficDescriptorParam1=atmfVpcReceiveTrafficDescriptorParam1, atmfVpcBestEffortIndicator=atmfVpcBestEffortIndicator, atmfVpcAbrTransmitCrm=atmfVpcAbrTransmitCrm, atmfSrvcRegLecs=atmfSrvcRegLecs, atmForumAdmin=atmForumAdmin, atmfDs3=atmfDs3, atmfMediaMultiMode=atmfMediaMultiMode, atmfVpcReceiveTrafficDescriptorParam3=atmfVpcReceiveTrafficDescriptorParam3, atmfVpcReceiveTrafficDescriptorParam5=atmfVpcReceiveTrafficDescriptorParam5, atmfPortIndex=atmfPortIndex, atmf4B5B=atmf4B5B, atmfVpcTransmitTrafficDescriptorType=atmfVpcTransmitTrafficDescriptorType, atmfSrvcRegParm1=atmfSrvcRegParm1, atmfVpcChange=atmfVpcChange, atmfVccAbrTransmitRif=atmfVccAbrTransmitRif, atmfVccTransmitTrafficDescriptorType=atmfVccTransmitTrafficDescriptorType, atmfSonetSTS3c=atmfSonetSTS3c)
