#
# PySNMP MIB module PNNI-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PNNI-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:32:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
extensions, = mibBuilder.importSymbols("CENTILLION-ROOT-MIB", "extensions")
lecsConfIndex, = mibBuilder.importSymbols("LAN-EMULATION-ELAN-MIB", "lecsConfIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Gauge32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ObjectIdentity, iso, MibIdentifier, Counter64, TimeTicks, Bits, Unsigned32, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ObjectIdentity", "iso", "MibIdentifier", "Counter64", "TimeTicks", "Bits", "Unsigned32", "Integer32", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cnPnniExt = MibIdentifier((1, 3, 6, 1, 4, 1, 930, 3, 5))
cnPnniMainExt = MibIdentifier((1, 3, 6, 1, 4, 1, 930, 3, 5, 1))
cnPnnilecsExt = MibIdentifier((1, 3, 6, 1, 4, 1, 930, 3, 5, 2))
cnPnniTdbOverload = MibIdentifier((1, 3, 6, 1, 4, 1, 930, 3, 5, 3))
cnPnniAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 930, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnPnniAdminStatus.setStatus('mandatory')
cnPnniCurNodes = MibScalar((1, 3, 6, 1, 4, 1, 930, 3, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnPnniCurNodes.setStatus('mandatory')
lecsConfExtTable = MibTable((1, 3, 6, 1, 4, 1, 930, 3, 5, 2, 1), )
if mibBuilder.loadTexts: lecsConfExtTable.setStatus('mandatory')
lecsConfExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 930, 3, 5, 2, 1, 1), ).setIndexNames((0, "LAN-EMULATION-ELAN-MIB", "lecsConfIndex"))
if mibBuilder.loadTexts: lecsConfExtEntry.setStatus('mandatory')
lecsConfExtScope = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 3, 5, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 104))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lecsConfExtScope.setStatus('mandatory')
cnPnniMemConsumptionLowwater = MibScalar((1, 3, 6, 1, 4, 1, 930, 3, 5, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnPnniMemConsumptionLowwater.setStatus('mandatory')
cnPnniMemConsumptionHighwater = MibScalar((1, 3, 6, 1, 4, 1, 930, 3, 5, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnPnniMemConsumptionHighwater.setStatus('mandatory')
cnPnniOverLoadRetryTime = MibScalar((1, 3, 6, 1, 4, 1, 930, 3, 5, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnPnniOverLoadRetryTime.setStatus('mandatory')
mibBuilder.exportSymbols("PNNI-EXT-MIB", cnPnniAdminStatus=cnPnniAdminStatus, lecsConfExtTable=lecsConfExtTable, cnPnniExt=cnPnniExt, cnPnniMemConsumptionHighwater=cnPnniMemConsumptionHighwater, cnPnniOverLoadRetryTime=cnPnniOverLoadRetryTime, cnPnniMainExt=cnPnniMainExt, cnPnnilecsExt=cnPnnilecsExt, cnPnniCurNodes=cnPnniCurNodes, lecsConfExtEntry=lecsConfExtEntry, cnPnniMemConsumptionLowwater=cnPnniMemConsumptionLowwater, lecsConfExtScope=lecsConfExtScope, cnPnniTdbOverload=cnPnniTdbOverload)
