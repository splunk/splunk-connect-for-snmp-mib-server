#
# PySNMP MIB module WEBMON-EDGE-MATRIX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WEBMON-EDGE-MATRIX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:29:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
NotificationType, iso, enterprises, Counter32, Unsigned32, Gauge32, ModuleIdentity, MibIdentifier, Counter64, ObjectIdentity, Integer32, TimeTicks, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "enterprises", "Counter32", "Unsigned32", "Gauge32", "ModuleIdentity", "MibIdentifier", "Counter64", "ObjectIdentity", "Integer32", "TimeTicks", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
moduleIdentity = ModuleIdentity((1, 3, 6, 1, 4, 1, 994, 3, 4, 3))
moduleIdentity.setRevisions(('2012-05-17 22:18',))
if mibBuilder.loadTexts: moduleIdentity.setLastUpdated('201205172218Z')
if mibBuilder.loadTexts: moduleIdentity.setOrganization('Dantel, Inc.')
class DescriptionString(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 80)

class DigitalState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("off", 0), ("on", 1))

class Boolean(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("false", 0), ("true", 1))

class ConnectivityState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("online", 0), ("offline", 1))

class AnalogState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("highHigh", 0), ("high", 1), ("medium", 2), ("low", 3), ("lowLow", 4))

class Configured(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("not-in-use", 0), ("always-in-use", 1), ("schedule-a", 2), ("schedule-b", 3), ("schedule-c", 4), ("schedule-d", 5))

class Level(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("normal", 0), ("critical", 1), ("major", 2), ("minor", 3), ("status", 4))

class SnmpVersion(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("snmpv1", 0), ("snmpv2c", 1), ("snmpv3", 2), ("snmpv2c-inform", 3), ("snmpv3-inform", 4))

class CameraStyle(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("d-link-dcs1000", 0), ("sony-snc-rz30n", 1), ("axis-2100", 2), ("d-link-dcs2000", 3), ("d-link-dcs5300", 4), ("axis-210", 5), ("axis-m1103", 6))

class ContactStyle(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("dry-contact", 0), ("wet-contact", 1))

class MeasureStyle(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("english", 0), ("metric", 1))

class OutputMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("manual", 0), ("automatic", 1))

class OutputState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("open", 0), ("closed", 1))

class BaudRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(300, 600, 1200, 2400, 4800, 9600, 19200, 28800, 38400))
    namedValues = NamedValues(("baud-300", 300), ("baud-600", 600), ("baud-1200", 1200), ("baud-2400", 2400), ("baud-4800", 4800), ("baud-9600", 9600), ("baud-19200", 19200), ("baud-28800", 28800), ("baud-38400", 38400))

class DataBits(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(7, 8))
    namedValues = NamedValues(("data-bits-7", 7), ("data-bits-8", 8))

class Parity(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("even-parity", 1), ("odd-parity", 2))

class StopBits(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("stop-bit-1", 1), ("stop-bits-2", 2))

class Protocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))
    namedValues = NamedValues(("none", 0), ("command-line", 1), ("modbus-interrogation", 2), ("configuration-transfer", 3), ("ip-switchboard", 4), ("terminal-server", 5), ("user-login", 6), ("modem-mode", 7), ("ppp-server", 8), ("dcm-responder", 9), ("ascii-log-single-line", 10), ("e2a-host", 11), ("gps-reader", 12), ("port-redirect", 13), ("sensor-reader", 14), ("tl1-responder", 15), ("dcpf-responder", 16), ("lcd-protocol", 17), ("tabs-responder", 18), ("configuration-menu", 19), ("sensor-hub-interrogation", 20))

class SerialRTS(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("rts-never-on", 0), ("rts-always-on", 1), ("rts-on-for-transmit", 2))

class SerialCTS(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("cts-ignore", 0), ("cts-require", 1))

class SlotId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("empty", 0), ("discrete-inputs", 1), ("discrete-outputs", 2), ("serial-ports", 3), ("onboard-sensors", 4), ("analog-inputs", 5), ("switch-ports", 6), ("sensor-inputs", 7))

class ProductType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("webmon-edge", 0), ("webmon-matrix", 1))

class VoltageRange(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(100, 5))
    namedValues = NamedValues(("plus-minus-100-volts", 100), ("sensor-port", 5))

class IOFormat(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("single-pin", 0), ("single-pin-with-ground", 1), ("two-pins", 2), ("two-pins-with-ground", 3), ("two-pins-right-to-left", 4), ("three-pins", 5), ("three-pins-right-to-left", 6), ("rj", 7), ("onboard-built-in", 8))

class PortType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("not-present", 0), ("rs-232", 1), ("rs-485", 2), ("dialup", 3), ("iden", 4), ("e2a", 5), ("cdma", 6), ("gps", 7), ("edge", 8), ("t202", 9))

class DiscreteFormula(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("a-and-b", 0), ("not-a-and-b", 1), ("a-and-not-b", 2), ("not-a-and-not-b", 3), ("a-or-b", 4), ("not-a-or-b", 5), ("a-or-not-b", 6), ("not-a-or-not-b", 7), ("a-xor-b", 8), ("not-a-xor-b", 9), ("a-xor-not-b", 10), ("not-a-xor-not-b", 11))

class DayOfWeek(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("sunday", 0), ("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6))

class ConfiguredState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("disabled", 0), ("enabled", 1))

class TL1Srveff(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("blank", 0), ("sa", 1), ("nsa", 2))

class TL1Locn(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("blank", 0), ("nend", 1), ("fend", 2), ("line", 3))

class TL1Dirn(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("blank", 0), ("trmt", 1), ("rcv", 2), ("na", 3))

class TL1Issue(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3, 5))
    namedValues = NamedValues(("issue-3", 3), ("issue-5", 5))

class UseDialout(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("never", 0), ("always", 1), ("as-backup", 2))

class SensorType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("raw", 0), ("temperature", 1), ("humidity", 2))

class SNMPCommandType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(160, 163))
    namedValues = NamedValues(("get", 160), ("set", 163))

class SNMPVarbindType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 4))
    namedValues = NamedValues(("integer", 2), ("string", 4))

class SNMPAccess(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("noauthnopriv", 0), ("authnopriv-md5", 1), ("authpriv-md5", 2), ("authnopriv-sha", 3), ("authpriv-sha", 4))

class MODBUSCommand(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3, 4))
    namedValues = NamedValues(("read-holding-register", 3), ("read-input-register", 4))

dantel = MibIdentifier((1, 3, 6, 1, 4, 1, 994))
dantelProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 994, 3))
webMon = ObjectIdentity((1, 3, 6, 1, 4, 1, 994, 3, 4))
if mibBuilder.loadTexts: webMon.setStatus('current')
configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 994, 3, 4, 7))
triggers = MibIdentifier((1, 3, 6, 1, 4, 1, 994, 3, 4, 8))
resetDevice = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 8, 1), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetDevice.setStatus('current')
commitAccountChanges = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 8, 2), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commitAccountChanges.setStatus('current')
resendEvents = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 8, 3), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resendEvents.setStatus('current')
systemGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 1))
systemGeneralLocation = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 1, 2), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemGeneralLocation.setStatus('current')
systemGeneralDescription = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 1, 3), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemGeneralDescription.setStatus('current')
systemGeneralIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemGeneralIpAddress.setStatus('current')
systemGeneralSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 1, 15), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemGeneralSubnetMask.setStatus('current')
systemGeneralGatewayAddress = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 1, 16), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemGeneralGatewayAddress.setStatus('current')
systemGeneralMeasureStyle = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 1, 45), MeasureStyle()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemGeneralMeasureStyle.setStatus('current')
systemGeneralMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 1, 54), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemGeneralMacAddress.setStatus('current')
systemGeneralProductType = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 1, 70), ProductType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemGeneralProductType.setStatus('current')
systemGeneralIPPortNum = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 1, 73), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemGeneralIPPortNum.setStatus('current')
systemGeneralVersion = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 1, 82), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemGeneralVersion.setStatus('current')
pTrapTargetTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 2), )
if mibBuilder.loadTexts: pTrapTargetTable.setStatus('current')
pTrapTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 2, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pTrapTargetIndex"))
if mibBuilder.loadTexts: pTrapTargetEntry.setStatus('current')
pTrapTargetDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 2, 1, 3), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapTargetDescription.setStatus('current')
pTrapTargetConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 2, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapTargetConfigured.setStatus('current')
pTrapTargetIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 2, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapTargetIpAddress.setStatus('current')
pTrapTargetSnmpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 2, 1, 42), SnmpVersion()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapTargetSnmpVersion.setStatus('current')
pTrapTargetIPPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 2, 1, 73), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapTargetIPPortNum.setStatus('current')
pTrapTargetBackupIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 2, 1, 78), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapTargetBackupIPAddress.setStatus('current')
pTrapTargetUseDialout = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 2, 1, 125), UseDialout()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapTargetUseDialout.setStatus('current')
pTrapTargetDialoutTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 2, 1, 126), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapTargetDialoutTarget.setStatus('current')
pTrapTargetAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 2, 1, 140), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapTargetAuthKey.setStatus('current')
pTrapTargetPrivKey = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 2, 1, 141), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapTargetPrivKey.setStatus('current')
pTrapTargetSNMPAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 2, 1, 142), SNMPAccess()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapTargetSNMPAccess.setStatus('current')
pTrapTargetEngineID = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 2, 1, 143), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapTargetEngineID.setStatus('current')
pTrapTargetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 2, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pTrapTargetIndex.setStatus('current')
pEmailTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 3), )
if mibBuilder.loadTexts: pEmailTable.setStatus('current')
pEmailEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 3, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pEmailIndex"))
if mibBuilder.loadTexts: pEmailEntry.setStatus('current')
pEmailAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 3, 1, 1), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pEmailAddress.setStatus('current')
pEmailDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 3, 1, 3), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pEmailDescription.setStatus('current')
pEmailConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 3, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pEmailConfigured.setStatus('current')
pEmailIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 3, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pEmailIndex.setStatus('current')
pRemoteSensorTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5), )
if mibBuilder.loadTexts: pRemoteSensorTable.setStatus('current')
pRemoteSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorIndex"))
if mibBuilder.loadTexts: pRemoteSensorEntry.setStatus('current')
pRemoteSensorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 3), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorDescription.setStatus('current')
pRemoteSensorDesc0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 4), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorDesc0.setStatus('current')
pRemoteSensorDesc1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 5), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorDesc1.setStatus('current')
pRemoteSensorDesc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 6), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorDesc2.setStatus('current')
pRemoteSensorDesc3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 7), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorDesc3.setStatus('current')
pRemoteSensorDesc4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 8), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorDesc4.setStatus('current')
pRemoteSensorDesc5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 9), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorDesc5.setStatus('current')
pRemoteSensorConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorConfigured.setStatus('current')
pRemoteSensorSendEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 11), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorSendEmail.setStatus('current')
pRemoteSensorSendSNMPTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 12), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorSendSNMPTrap.setStatus('current')
pRemoteSensorLevel0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 17), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorLevel0.setStatus('current')
pRemoteSensorLevel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 18), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorLevel1.setStatus('current')
pRemoteSensorLevel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 19), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorLevel2.setStatus('current')
pRemoteSensorLevel3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 20), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorLevel3.setStatus('current')
pRemoteSensorLevel4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 21), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorLevel4.setStatus('current')
pRemoteSensorLevel5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 22), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorLevel5.setStatus('current')
pRemoteSensorThresh0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 28), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorThresh0.setStatus('current')
pRemoteSensorThresh1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 29), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorThresh1.setStatus('current')
pRemoteSensorThresh2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 30), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorThresh2.setStatus('current')
pRemoteSensorThresh3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 31), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorThresh3.setStatus('current')
pRemoteSensorThresh4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 32), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorThresh4.setStatus('current')
pRemoteSensorThresh5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 33), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorThresh5.setStatus('current')
pRemoteSensorUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 46), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorUnits.setStatus('current')
pRemoteSensorPollAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 56), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorPollAddress.setStatus('current')
pRemoteSensorLiveDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 64), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pRemoteSensorLiveDescription.setStatus('current')
pRemoteSensorLiveLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 65), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pRemoteSensorLiveLevel.setStatus('current')
pRemoteSensorLiveRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 66), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pRemoteSensorLiveRaw.setStatus('current')
pRemoteSensorLiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 67), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pRemoteSensorLiveTime.setStatus('current')
pRemoteSensorTL1SID = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 116), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorTL1SID.setStatus('current')
pRemoteSensorTL1COND = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 117), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorTL1COND.setStatus('current')
pRemoteSensorTL1Eqpt = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 118), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorTL1Eqpt.setStatus('current')
pRemoteSensorTL1Env = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 119), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorTL1Env.setStatus('current')
pRemoteSensorTL1Srveff = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 120), TL1Srveff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorTL1Srveff.setStatus('current')
pRemoteSensorTL1Locn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 121), TL1Locn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorTL1Locn.setStatus('current')
pRemoteSensorTL1Dirn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 122), TL1Dirn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorTL1Dirn.setStatus('current')
pRemoteSensorMODBUSCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 144), MODBUSCommand()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorMODBUSCommand.setStatus('current')
pRemoteSensorStartRegister = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 145), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pRemoteSensorStartRegister.setStatus('current')
pRemoteSensorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 5, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pRemoteSensorIndex.setStatus('current')
pOnboardSensorTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6), )
if mibBuilder.loadTexts: pOnboardSensorTable.setStatus('current')
pOnboardSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorIndex"))
if mibBuilder.loadTexts: pOnboardSensorEntry.setStatus('current')
pOnboardSensorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 3), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pOnboardSensorDescription.setStatus('current')
pOnboardSensorDesc0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 4), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorDesc0.setStatus('current')
pOnboardSensorDesc1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 5), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorDesc1.setStatus('current')
pOnboardSensorDesc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 6), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorDesc2.setStatus('current')
pOnboardSensorDesc3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 7), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorDesc3.setStatus('current')
pOnboardSensorDesc4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 8), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorDesc4.setStatus('current')
pOnboardSensorDesc5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 9), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorDesc5.setStatus('current')
pOnboardSensorConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorConfigured.setStatus('current')
pOnboardSensorSendEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 11), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorSendEmail.setStatus('current')
pOnboardSensorSendSNMPTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 12), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorSendSNMPTrap.setStatus('current')
pOnboardSensorLevel0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 17), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorLevel0.setStatus('current')
pOnboardSensorLevel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 18), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorLevel1.setStatus('current')
pOnboardSensorLevel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 19), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorLevel2.setStatus('current')
pOnboardSensorLevel3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 20), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorLevel3.setStatus('current')
pOnboardSensorLevel4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 21), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorLevel4.setStatus('current')
pOnboardSensorLevel5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 22), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorLevel5.setStatus('current')
pOnboardSensorThresh0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 28), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pOnboardSensorThresh0.setStatus('current')
pOnboardSensorThresh1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 29), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorThresh1.setStatus('current')
pOnboardSensorThresh2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 30), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorThresh2.setStatus('current')
pOnboardSensorThresh3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 31), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorThresh3.setStatus('current')
pOnboardSensorThresh4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 32), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorThresh4.setStatus('current')
pOnboardSensorThresh5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 33), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pOnboardSensorThresh5.setStatus('current')
pOnboardSensorUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 46), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pOnboardSensorUnits.setStatus('current')
pOnboardSensorLiveDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 64), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pOnboardSensorLiveDescription.setStatus('current')
pOnboardSensorLiveLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 65), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pOnboardSensorLiveLevel.setStatus('current')
pOnboardSensorLiveRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 66), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pOnboardSensorLiveRaw.setStatus('current')
pOnboardSensorLiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 67), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pOnboardSensorLiveTime.setStatus('current')
pOnboardSensorTL1SID = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 116), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorTL1SID.setStatus('current')
pOnboardSensorTL1COND = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 117), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorTL1COND.setStatus('current')
pOnboardSensorTL1Eqpt = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 118), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorTL1Eqpt.setStatus('current')
pOnboardSensorTL1Env = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 119), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorTL1Env.setStatus('current')
pOnboardSensorTL1Srveff = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 120), TL1Srveff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorTL1Srveff.setStatus('current')
pOnboardSensorTL1Locn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 121), TL1Locn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorTL1Locn.setStatus('current')
pOnboardSensorTL1Dirn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 122), TL1Dirn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pOnboardSensorTL1Dirn.setStatus('current')
pOnboardSensorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 6, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pOnboardSensorIndex.setStatus('current')
pNetDevicesTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7), )
if mibBuilder.loadTexts: pNetDevicesTable.setStatus('current')
pNetDevicesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pNetDevicesIndex"))
if mibBuilder.loadTexts: pNetDevicesEntry.setStatus('current')
pNetDevicesDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 3), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pNetDevicesDescription.setStatus('current')
pNetDevicesDesc0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 4), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pNetDevicesDesc0.setStatus('current')
pNetDevicesDesc1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 5), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pNetDevicesDesc1.setStatus('current')
pNetDevicesConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pNetDevicesConfigured.setStatus('current')
pNetDevicesSendEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 11), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pNetDevicesSendEmail.setStatus('current')
pNetDevicesSendSNMPTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 12), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pNetDevicesSendSNMPTrap.setStatus('current')
pNetDevicesIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pNetDevicesIpAddress.setStatus('current')
pNetDevicesLevel0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 17), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pNetDevicesLevel0.setStatus('current')
pNetDevicesLevel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 18), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pNetDevicesLevel1.setStatus('current')
pNetDevicesLiveDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 64), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pNetDevicesLiveDescription.setStatus('current')
pNetDevicesLiveLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 65), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pNetDevicesLiveLevel.setStatus('current')
pNetDevicesLiveRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 66), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pNetDevicesLiveRaw.setStatus('current')
pNetDevicesLiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 67), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pNetDevicesLiveTime.setStatus('current')
pNetDevicesTL1SID = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 116), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pNetDevicesTL1SID.setStatus('current')
pNetDevicesTL1COND = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 117), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pNetDevicesTL1COND.setStatus('current')
pNetDevicesTL1Eqpt = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 118), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pNetDevicesTL1Eqpt.setStatus('current')
pNetDevicesTL1Env = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 119), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pNetDevicesTL1Env.setStatus('current')
pNetDevicesTL1Srveff = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 120), TL1Srveff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pNetDevicesTL1Srveff.setStatus('current')
pNetDevicesTL1Locn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 121), TL1Locn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pNetDevicesTL1Locn.setStatus('current')
pNetDevicesTL1Dirn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 122), TL1Dirn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pNetDevicesTL1Dirn.setStatus('current')
pNetDevicesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 7, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pNetDevicesIndex.setStatus('current')
pAccountsTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 9), )
if mibBuilder.loadTexts: pAccountsTable.setStatus('current')
pAccountsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 9, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pAccountsIndex"))
if mibBuilder.loadTexts: pAccountsEntry.setStatus('current')
pAccountsConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 9, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pAccountsConfigured.setStatus('current')
pAccountsName = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 9, 1, 25), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pAccountsName.setStatus('current')
pAccountsEncPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 9, 1, 27), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pAccountsEncPassword.setStatus('current')
pAccountsUserLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 9, 1, 55), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pAccountsUserLevel.setStatus('current')
pAccountsUnsecured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 9, 1, 77), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pAccountsUnsecured.setStatus('current')
pAccountsAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 9, 1, 140), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pAccountsAuthKey.setStatus('current')
pAccountsPrivKey = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 9, 1, 141), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pAccountsPrivKey.setStatus('current')
pAccountsSNMPAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 9, 1, 142), SNMPAccess()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pAccountsSNMPAccess.setStatus('current')
pAccountsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 9, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pAccountsIndex.setStatus('current')
camera = MibIdentifier((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 10))
cameraConfigured = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 10, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cameraConfigured.setStatus('current')
cameraIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 10, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cameraIpAddress.setStatus('current')
cameraCameraStyle = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 10, 43), CameraStyle()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cameraCameraStyle.setStatus('current')
snmpGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 12))
snmpGeneralConfigured = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 12, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpGeneralConfigured.setStatus('current')
snmpGeneralReadPeriod = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 12, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpGeneralReadPeriod.setStatus('current')
snmpGeneralGet = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 12, 39), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpGeneralGet.setStatus('current')
snmpGeneralSet = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 12, 40), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpGeneralSet.setStatus('current')
snmpGeneralTrap = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 12, 41), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpGeneralTrap.setStatus('current')
snmpGeneralIPPortNum = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 12, 73), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpGeneralIPPortNum.setStatus('current')
snmpGeneralEngineID = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 12, 143), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpGeneralEngineID.setStatus('current')
emailGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 13))
emailGeneralAddress = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 13, 1), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: emailGeneralAddress.setStatus('current')
emailGeneralConfigured = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 13, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: emailGeneralConfigured.setStatus('current')
emailGeneralIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 13, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: emailGeneralIpAddress.setStatus('current')
emailGeneralPassword = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 13, 26), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: emailGeneralPassword.setStatus('current')
emailGeneralIPPortNum = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 13, 73), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: emailGeneralIPPortNum.setStatus('current')
pSerialTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 14), )
if mibBuilder.loadTexts: pSerialTable.setStatus('current')
pSerialEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 14, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pSerialIndex"))
if mibBuilder.loadTexts: pSerialEntry.setStatus('current')
pSerialDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 14, 1, 3), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSerialDescription.setStatus('current')
pSerialConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 14, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSerialConfigured.setStatus('current')
pSerialIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 14, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSerialIpAddress.setStatus('current')
pSerialReadPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 14, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSerialReadPeriod.setStatus('current')
pSerialBaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 14, 1, 57), BaudRate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSerialBaudRate.setStatus('current')
pSerialDataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 14, 1, 58), DataBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSerialDataBits.setStatus('current')
pSerialParity = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 14, 1, 59), Parity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSerialParity.setStatus('current')
pSerialStopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 14, 1, 60), StopBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSerialStopBits.setStatus('current')
pSerialProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 14, 1, 61), Protocol()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSerialProtocol.setStatus('current')
pSerialSerialRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 14, 1, 62), SerialRTS()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSerialSerialRTS.setStatus('current')
pSerialSerialCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 14, 1, 63), SerialCTS()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSerialSerialCTS.setStatus('current')
pSerialPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 14, 1, 68), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSerialPresent.setStatus('current')
pSerialIPPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 14, 1, 73), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSerialIPPortNum.setStatus('current')
pSerialPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 14, 1, 76), PortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSerialPortType.setStatus('current')
pSerialIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 14, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSerialIndex.setStatus('current')
pSelfTestTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 15), )
if mibBuilder.loadTexts: pSelfTestTable.setStatus('current')
pSelfTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 15, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pSelfTestIndex"))
if mibBuilder.loadTexts: pSelfTestEntry.setStatus('current')
pSelfTestDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 15, 1, 3), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSelfTestDescription.setStatus('current')
pSelfTestConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 15, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSelfTestConfigured.setStatus('current')
pSelfTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 15, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSelfTestIndex.setStatus('current')
pInternalFaultsTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16), )
if mibBuilder.loadTexts: pInternalFaultsTable.setStatus('current')
pInternalFaultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pInternalFaultsIndex"))
if mibBuilder.loadTexts: pInternalFaultsEntry.setStatus('current')
pInternalFaultsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16, 1, 3), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pInternalFaultsDescription.setStatus('current')
pInternalFaultsDesc0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16, 1, 4), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pInternalFaultsDesc0.setStatus('current')
pInternalFaultsDesc1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16, 1, 5), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pInternalFaultsDesc1.setStatus('current')
pInternalFaultsDesc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16, 1, 6), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pInternalFaultsDesc2.setStatus('current')
pInternalFaultsDesc3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16, 1, 7), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pInternalFaultsDesc3.setStatus('current')
pInternalFaultsSendEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16, 1, 11), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pInternalFaultsSendEmail.setStatus('current')
pInternalFaultsSendSNMPTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16, 1, 12), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pInternalFaultsSendSNMPTrap.setStatus('current')
pInternalFaultsLevel0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16, 1, 17), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pInternalFaultsLevel0.setStatus('current')
pInternalFaultsLevel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16, 1, 18), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pInternalFaultsLevel1.setStatus('current')
pInternalFaultsLevel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16, 1, 19), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pInternalFaultsLevel2.setStatus('current')
pInternalFaultsLevel3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16, 1, 20), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pInternalFaultsLevel3.setStatus('current')
pInternalFaultsIgnoreOff = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16, 1, 50), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pInternalFaultsIgnoreOff.setStatus('current')
pInternalFaultsLiveDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16, 1, 64), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pInternalFaultsLiveDescription.setStatus('current')
pInternalFaultsLiveLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16, 1, 65), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pInternalFaultsLiveLevel.setStatus('current')
pInternalFaultsLiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16, 1, 67), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pInternalFaultsLiveTime.setStatus('current')
pInternalFaultsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 16, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pInternalFaultsIndex.setStatus('current')
pSlotInfoTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 17), )
if mibBuilder.loadTexts: pSlotInfoTable.setStatus('current')
pSlotInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 17, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pSlotInfoIndex"))
if mibBuilder.loadTexts: pSlotInfoEntry.setStatus('current')
pSlotInfoDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 17, 1, 3), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlotInfoDescription.setStatus('current')
pSlotInfoRecord = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 17, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlotInfoRecord.setStatus('current')
pSlotInfoPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 17, 1, 68), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlotInfoPresent.setStatus('current')
pSlotInfoSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 17, 1, 69), SlotId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlotInfoSlotId.setStatus('current')
pSlotInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 17, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlotInfoIndex.setStatus('current')
pNetPortsTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 24), )
if mibBuilder.loadTexts: pNetPortsTable.setStatus('current')
pNetPortsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 24, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pNetPortsIndex"))
if mibBuilder.loadTexts: pNetPortsEntry.setStatus('current')
pNetPortsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 24, 1, 3), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pNetPortsDescription.setStatus('current')
pNetPortsIPPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 24, 1, 73), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pNetPortsIPPortNum.setStatus('current')
pNetPortsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 24, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pNetPortsIndex.setStatus('current')
wirelessModem = MibIdentifier((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 25))
wirelessModemBackupIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 25, 78), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessModemBackupIPAddress.setStatus('current')
wirelessModemTime = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 25, 81), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessModemTime.setStatus('current')
wirelessModemTransmit = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 25, 96), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessModemTransmit.setStatus('current')
wirelessModemUseWirelessNetwork = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 25, 97), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessModemUseWirelessNetwork.setStatus('current')
wirelessModemUseResetTime = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 25, 98), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessModemUseResetTime.setStatus('current')
wirelessModemResponseWaitTime = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 25, 99), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessModemResponseWaitTime.setStatus('current')
wirelessModemSecondary = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 25, 115), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessModemSecondary.setStatus('current')
webmonSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 26))
webmonSecurityUserLevel = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 26, 55), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: webmonSecurityUserLevel.setStatus('current')
webmonSecurityUnsecured = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 26, 77), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: webmonSecurityUnsecured.setStatus('current')
dateTime = MibIdentifier((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 27))
dateTimeConfigured = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 27, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dateTimeConfigured.setStatus('current')
dateTimeIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 27, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dateTimeIpAddress.setStatus('current')
dateTimeDaylightSaving = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 27, 53), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dateTimeDaylightSaving.setStatus('current')
dateTimeDate = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 27, 80), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dateTimeDate.setStatus('current')
dateTimeTime = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 27, 81), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dateTimeTime.setStatus('current')
dateTimeNegOffset = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 27, 88), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dateTimeNegOffset.setStatus('current')
dateTimeUTCOffset = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 27, 89), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dateTimeUTCOffset.setStatus('current')
pDCMProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 28), )
if mibBuilder.loadTexts: pDCMProtocolTable.setStatus('current')
pDCMProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 28, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pDCMProtocolIndex"))
if mibBuilder.loadTexts: pDCMProtocolEntry.setStatus('current')
pDCMProtocolDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 28, 1, 3), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDCMProtocolDescription.setStatus('current')
pDCMProtocolConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 28, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pDCMProtocolConfigured.setStatus('current')
pDCMProtocolBaseDCMAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 28, 1, 83), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pDCMProtocolBaseDCMAddress.setStatus('current')
pDCMProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 28, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 27))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDCMProtocolIndex.setStatus('current')
pdialOutTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 29), )
if mibBuilder.loadTexts: pdialOutTable.setStatus('current')
pdialOutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 29, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pdialOutIndex"))
if mibBuilder.loadTexts: pdialOutEntry.setStatus('current')
pdialOutConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 29, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdialOutConfigured.setStatus('current')
pdialOutName = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 29, 1, 25), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdialOutName.setStatus('current')
pdialOutPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 29, 1, 26), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdialOutPassword.setStatus('current')
pdialOutDialOutNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 29, 1, 79), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdialOutDialOutNumber.setStatus('current')
pdialOutIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 29, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdialOutIndex.setStatus('current')
pderivedDiscreteTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30), )
if mibBuilder.loadTexts: pderivedDiscreteTable.setStatus('current')
pderivedDiscreteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteIndex"))
if mibBuilder.loadTexts: pderivedDiscreteEntry.setStatus('current')
pderivedDiscreteDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 3), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteDescription.setStatus('current')
pderivedDiscreteDesc0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 4), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteDesc0.setStatus('current')
pderivedDiscreteDesc1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 5), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteDesc1.setStatus('current')
pderivedDiscreteConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteConfigured.setStatus('current')
pderivedDiscreteSendEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 11), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteSendEmail.setStatus('current')
pderivedDiscreteSendSNMPTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 12), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteSendSNMPTrap.setStatus('current')
pderivedDiscreteLevel0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 17), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteLevel0.setStatus('current')
pderivedDiscreteLevel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 18), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteLevel1.setStatus('current')
pderivedDiscreteLiveDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 64), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pderivedDiscreteLiveDescription.setStatus('current')
pderivedDiscreteLiveLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 65), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pderivedDiscreteLiveLevel.setStatus('current')
pderivedDiscreteLiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 67), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pderivedDiscreteLiveTime.setStatus('current')
pderivedDiscreteElementAPkg = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 90), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteElementAPkg.setStatus('current')
pderivedDiscreteElementAPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 91), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteElementAPoint.setStatus('current')
pderivedDiscreteElementBPkg = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 92), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteElementBPkg.setStatus('current')
pderivedDiscreteElementBPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 93), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteElementBPoint.setStatus('current')
pderivedDiscreteDiscreteFormula = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 94), DiscreteFormula()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteDiscreteFormula.setStatus('current')
pderivedDiscreteTL1SID = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 116), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteTL1SID.setStatus('current')
pderivedDiscreteTL1COND = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 117), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteTL1COND.setStatus('current')
pderivedDiscreteTL1Eqpt = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 118), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteTL1Eqpt.setStatus('current')
pderivedDiscreteTL1Env = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 119), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteTL1Env.setStatus('current')
pderivedDiscreteTL1Srveff = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 120), TL1Srveff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteTL1Srveff.setStatus('current')
pderivedDiscreteTL1Locn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 121), TL1Locn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteTL1Locn.setStatus('current')
pderivedDiscreteTL1Dirn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 122), TL1Dirn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedDiscreteTL1Dirn.setStatus('current')
pderivedDiscreteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 30, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pderivedDiscreteIndex.setStatus('current')
license = MibIdentifier((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 31))
licenseDescription = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 31, 3), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: licenseDescription.setStatus('current')
licenseLicenseKey = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 31, 84), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: licenseLicenseKey.setStatus('current')
licenseExpires = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 31, 85), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: licenseExpires.setStatus('current')
licenseAllowTL1 = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 31, 124), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: licenseAllowTL1.setStatus('current')
pe2aHostTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32), )
if mibBuilder.loadTexts: pe2aHostTable.setStatus('current')
pe2aHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pe2aHostIndex"))
if mibBuilder.loadTexts: pe2aHostEntry.setStatus('current')
pe2aHostDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1, 3), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pe2aHostDescription.setStatus('current')
pe2aHostConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pe2aHostConfigured.setStatus('current')
pe2aHostIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pe2aHostIpAddress.setStatus('current')
pe2aHostLevel0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1, 17), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pe2aHostLevel0.setStatus('current')
pe2aHostLevel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1, 18), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pe2aHostLevel1.setStatus('current')
pe2aHostLevel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1, 19), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pe2aHostLevel2.setStatus('current')
pe2aHostRosterID = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1, 37), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pe2aHostRosterID.setStatus('current')
pe2aHostPollAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1, 56), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pe2aHostPollAddress.setStatus('current')
pe2aHostIPPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1, 73), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pe2aHostIPPortNum.setStatus('current')
pe2aHostTL1SID = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1, 116), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pe2aHostTL1SID.setStatus('current')
pe2aHostTL1COND = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1, 117), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pe2aHostTL1COND.setStatus('current')
pe2aHostTL1Eqpt = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1, 118), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pe2aHostTL1Eqpt.setStatus('current')
pe2aHostTL1Env = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1, 119), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pe2aHostTL1Env.setStatus('current')
pe2aHostTL1Srveff = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1, 120), TL1Srveff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pe2aHostTL1Srveff.setStatus('current')
pe2aHostTL1Locn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1, 121), TL1Locn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pe2aHostTL1Locn.setStatus('current')
pe2aHostTL1Dirn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1, 122), TL1Dirn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pe2aHostTL1Dirn.setStatus('current')
pe2aHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 32, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pe2aHostIndex.setStatus('current')
pderivedAnalogTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33), )
if mibBuilder.loadTexts: pderivedAnalogTable.setStatus('current')
pderivedAnalogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogIndex"))
if mibBuilder.loadTexts: pderivedAnalogEntry.setStatus('current')
pderivedAnalogDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 3), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogDescription.setStatus('current')
pderivedAnalogDesc0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 4), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogDesc0.setStatus('current')
pderivedAnalogDesc1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 5), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogDesc1.setStatus('current')
pderivedAnalogDesc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 6), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogDesc2.setStatus('current')
pderivedAnalogDesc3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 7), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogDesc3.setStatus('current')
pderivedAnalogDesc4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 8), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogDesc4.setStatus('current')
pderivedAnalogConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogConfigured.setStatus('current')
pderivedAnalogSendEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 11), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogSendEmail.setStatus('current')
pderivedAnalogSendSNMPTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 12), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogSendSNMPTrap.setStatus('current')
pderivedAnalogLevel0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 17), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogLevel0.setStatus('current')
pderivedAnalogLevel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 18), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogLevel1.setStatus('current')
pderivedAnalogLevel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 19), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogLevel2.setStatus('current')
pderivedAnalogLevel3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 20), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogLevel3.setStatus('current')
pderivedAnalogLevel4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 21), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogLevel4.setStatus('current')
pderivedAnalogThresh0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 28), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogThresh0.setStatus('current')
pderivedAnalogThresh1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 29), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogThresh1.setStatus('current')
pderivedAnalogThresh2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 30), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogThresh2.setStatus('current')
pderivedAnalogThresh3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 31), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogThresh3.setStatus('current')
pderivedAnalogThresh4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 32), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogThresh4.setStatus('current')
pderivedAnalogThresh5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 33), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogThresh5.setStatus('current')
pderivedAnalogUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 46), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogUnits.setStatus('current')
pderivedAnalogLiveDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 64), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pderivedAnalogLiveDescription.setStatus('current')
pderivedAnalogLiveLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 65), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pderivedAnalogLiveLevel.setStatus('current')
pderivedAnalogLiveRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 66), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pderivedAnalogLiveRaw.setStatus('current')
pderivedAnalogLiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 67), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pderivedAnalogLiveTime.setStatus('current')
pderivedAnalogElementAPkg = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 90), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogElementAPkg.setStatus('current')
pderivedAnalogElementAPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 91), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogElementAPoint.setStatus('current')
pderivedAnalogElementBPkg = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 92), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogElementBPkg.setStatus('current')
pderivedAnalogElementBPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 93), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogElementBPoint.setStatus('current')
pderivedAnalogFormula = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 95), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogFormula.setStatus('current')
pderivedAnalogTL1SID = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 116), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogTL1SID.setStatus('current')
pderivedAnalogTL1COND = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 117), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogTL1COND.setStatus('current')
pderivedAnalogTL1Eqpt = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 118), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogTL1Eqpt.setStatus('current')
pderivedAnalogTL1Env = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 119), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogTL1Env.setStatus('current')
pderivedAnalogTL1Srveff = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 120), TL1Srveff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogTL1Srveff.setStatus('current')
pderivedAnalogTL1Locn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 121), TL1Locn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogTL1Locn.setStatus('current')
pderivedAnalogTL1Dirn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 122), TL1Dirn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pderivedAnalogTL1Dirn.setStatus('current')
pderivedAnalogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 33, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pderivedAnalogIndex.setStatus('current')
pgpsTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34), )
if mibBuilder.loadTexts: pgpsTable.setStatus('current')
pgpsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pgpsIndex"))
if mibBuilder.loadTexts: pgpsEntry.setStatus('current')
pgpsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 3), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgpsDescription.setStatus('current')
pgpsDesc0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 4), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsDesc0.setStatus('current')
pgpsDesc1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 5), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsDesc1.setStatus('current')
pgpsDesc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 6), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsDesc2.setStatus('current')
pgpsDesc3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 7), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsDesc3.setStatus('current')
pgpsDesc4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 8), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsDesc4.setStatus('current')
pgpsConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsConfigured.setStatus('current')
pgpsSendEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 11), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsSendEmail.setStatus('current')
pgpsSendSNMPTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 12), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsSendSNMPTrap.setStatus('current')
pgpsLevel0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 17), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsLevel0.setStatus('current')
pgpsLevel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 18), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsLevel1.setStatus('current')
pgpsLevel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 19), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsLevel2.setStatus('current')
pgpsLevel3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 20), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsLevel3.setStatus('current')
pgpsLevel4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 21), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsLevel4.setStatus('current')
pgpsThresh0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 28), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgpsThresh0.setStatus('current')
pgpsThresh1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 29), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsThresh1.setStatus('current')
pgpsThresh2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 30), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsThresh2.setStatus('current')
pgpsThresh3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 31), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsThresh3.setStatus('current')
pgpsThresh4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 32), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsThresh4.setStatus('current')
pgpsThresh5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 33), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgpsThresh5.setStatus('current')
pgpsUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 46), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgpsUnits.setStatus('current')
pgpsLiveDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 64), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgpsLiveDescription.setStatus('current')
pgpsLiveLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 65), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgpsLiveLevel.setStatus('current')
pgpsLiveRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 66), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgpsLiveRaw.setStatus('current')
pgpsLiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 67), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgpsLiveTime.setStatus('current')
pgpsTL1SID = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 116), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsTL1SID.setStatus('current')
pgpsTL1COND = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 117), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsTL1COND.setStatus('current')
pgpsTL1Eqpt = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 118), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsTL1Eqpt.setStatus('current')
pgpsTL1Env = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 119), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsTL1Env.setStatus('current')
pgpsTL1Srveff = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 120), TL1Srveff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsTL1Srveff.setStatus('current')
pgpsTL1Locn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 121), TL1Locn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsTL1Locn.setStatus('current')
pgpsTL1Dirn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 122), TL1Dirn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgpsTL1Dirn.setStatus('current')
pgpsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 34, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgpsIndex.setStatus('current')
pportRedirectTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 35), )
if mibBuilder.loadTexts: pportRedirectTable.setStatus('current')
pportRedirectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 35, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pportRedirectIndex"))
if mibBuilder.loadTexts: pportRedirectEntry.setStatus('current')
pportRedirectDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 35, 1, 3), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pportRedirectDescription.setStatus('current')
pportRedirectConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 35, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pportRedirectConfigured.setStatus('current')
pportRedirectIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 35, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pportRedirectIpAddress.setStatus('current')
pportRedirectReadPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 35, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pportRedirectReadPeriod.setStatus('current')
pportRedirectRosterID = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 35, 1, 37), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pportRedirectRosterID.setStatus('current')
pportRedirectIPPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 35, 1, 73), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pportRedirectIPPortNum.setStatus('current')
pportRedirectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 35, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pportRedirectIndex.setStatus('current')
pscheduleATable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 36), )
if mibBuilder.loadTexts: pscheduleATable.setStatus('current')
pscheduleAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 36, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pscheduleAIndex"))
if mibBuilder.loadTexts: pscheduleAEntry.setStatus('current')
pscheduleADayOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 36, 1, 102), DayOfWeek()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pscheduleADayOfWeek.setStatus('current')
pscheduleAConfiguredState = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 36, 1, 103), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleAConfiguredState.setStatus('current')
pscheduleAConfigured1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 36, 1, 104), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleAConfigured1.setStatus('current')
pscheduleAConfigured2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 36, 1, 105), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleAConfigured2.setStatus('current')
pscheduleAConfigured3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 36, 1, 106), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleAConfigured3.setStatus('current')
pscheduleAConfigured4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 36, 1, 107), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleAConfigured4.setStatus('current')
pscheduleATime0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 36, 1, 108), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pscheduleATime0.setStatus('current')
pscheduleATime1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 36, 1, 109), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleATime1.setStatus('current')
pscheduleATime2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 36, 1, 110), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleATime2.setStatus('current')
pscheduleATime3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 36, 1, 111), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleATime3.setStatus('current')
pscheduleATime4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 36, 1, 112), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleATime4.setStatus('current')
pscheduleATime5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 36, 1, 113), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pscheduleATime5.setStatus('current')
pscheduleAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 36, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pscheduleAIndex.setStatus('current')
pscheduleBTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 37), )
if mibBuilder.loadTexts: pscheduleBTable.setStatus('current')
pscheduleBEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 37, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pscheduleBIndex"))
if mibBuilder.loadTexts: pscheduleBEntry.setStatus('current')
pscheduleBDayOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 37, 1, 102), DayOfWeek()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pscheduleBDayOfWeek.setStatus('current')
pscheduleBConfiguredState = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 37, 1, 103), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleBConfiguredState.setStatus('current')
pscheduleBConfigured1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 37, 1, 104), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleBConfigured1.setStatus('current')
pscheduleBConfigured2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 37, 1, 105), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleBConfigured2.setStatus('current')
pscheduleBConfigured3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 37, 1, 106), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleBConfigured3.setStatus('current')
pscheduleBConfigured4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 37, 1, 107), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleBConfigured4.setStatus('current')
pscheduleBTime0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 37, 1, 108), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pscheduleBTime0.setStatus('current')
pscheduleBTime1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 37, 1, 109), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleBTime1.setStatus('current')
pscheduleBTime2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 37, 1, 110), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleBTime2.setStatus('current')
pscheduleBTime3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 37, 1, 111), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleBTime3.setStatus('current')
pscheduleBTime4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 37, 1, 112), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleBTime4.setStatus('current')
pscheduleBTime5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 37, 1, 113), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pscheduleBTime5.setStatus('current')
pscheduleBIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 37, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pscheduleBIndex.setStatus('current')
pscheduleCTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 38), )
if mibBuilder.loadTexts: pscheduleCTable.setStatus('current')
pscheduleCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 38, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pscheduleCIndex"))
if mibBuilder.loadTexts: pscheduleCEntry.setStatus('current')
pscheduleCDayOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 38, 1, 102), DayOfWeek()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pscheduleCDayOfWeek.setStatus('current')
pscheduleCConfiguredState = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 38, 1, 103), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleCConfiguredState.setStatus('current')
pscheduleCConfigured1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 38, 1, 104), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleCConfigured1.setStatus('current')
pscheduleCConfigured2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 38, 1, 105), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleCConfigured2.setStatus('current')
pscheduleCConfigured3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 38, 1, 106), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleCConfigured3.setStatus('current')
pscheduleCConfigured4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 38, 1, 107), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleCConfigured4.setStatus('current')
pscheduleCTime0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 38, 1, 108), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pscheduleCTime0.setStatus('current')
pscheduleCTime1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 38, 1, 109), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleCTime1.setStatus('current')
pscheduleCTime2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 38, 1, 110), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleCTime2.setStatus('current')
pscheduleCTime3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 38, 1, 111), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleCTime3.setStatus('current')
pscheduleCTime4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 38, 1, 112), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleCTime4.setStatus('current')
pscheduleCTime5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 38, 1, 113), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pscheduleCTime5.setStatus('current')
pscheduleCIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 38, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pscheduleCIndex.setStatus('current')
pscheduleDTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 39), )
if mibBuilder.loadTexts: pscheduleDTable.setStatus('current')
pscheduleDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 39, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pscheduleDIndex"))
if mibBuilder.loadTexts: pscheduleDEntry.setStatus('current')
pscheduleDDayOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 39, 1, 102), DayOfWeek()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pscheduleDDayOfWeek.setStatus('current')
pscheduleDConfiguredState = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 39, 1, 103), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleDConfiguredState.setStatus('current')
pscheduleDConfigured1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 39, 1, 104), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleDConfigured1.setStatus('current')
pscheduleDConfigured2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 39, 1, 105), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleDConfigured2.setStatus('current')
pscheduleDConfigured3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 39, 1, 106), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleDConfigured3.setStatus('current')
pscheduleDConfigured4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 39, 1, 107), ConfiguredState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleDConfigured4.setStatus('current')
pscheduleDTime0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 39, 1, 108), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pscheduleDTime0.setStatus('current')
pscheduleDTime1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 39, 1, 109), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleDTime1.setStatus('current')
pscheduleDTime2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 39, 1, 110), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleDTime2.setStatus('current')
pscheduleDTime3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 39, 1, 111), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleDTime3.setStatus('current')
pscheduleDTime4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 39, 1, 112), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pscheduleDTime4.setStatus('current')
pscheduleDTime5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 39, 1, 113), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pscheduleDTime5.setStatus('current')
pscheduleDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 39, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pscheduleDIndex.setStatus('current')
tl1Settings = MibIdentifier((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 40))
tl1SettingsTL1Issue = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 40, 123), TL1Issue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tl1SettingsTL1Issue.setStatus('current')
pDCPFProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 41), )
if mibBuilder.loadTexts: pDCPFProtocolTable.setStatus('current')
pDCPFProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 41, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pDCPFProtocolIndex"))
if mibBuilder.loadTexts: pDCPFProtocolEntry.setStatus('current')
pDCPFProtocolDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 41, 1, 3), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDCPFProtocolDescription.setStatus('current')
pDCPFProtocolConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 41, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pDCPFProtocolConfigured.setStatus('current')
pDCPFProtocolBaseDCPFDisplay = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 41, 1, 127), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pDCPFProtocolBaseDCPFDisplay.setStatus('current')
pDCPFProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 41, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 27))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDCPFProtocolIndex.setStatus('current')
dcpfSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 42))
dcpfSettingsDCPFAddress = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 42, 128), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dcpfSettingsDCPFAddress.setStatus('current')
pTABSProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 43), )
if mibBuilder.loadTexts: pTABSProtocolTable.setStatus('current')
pTABSProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 43, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pTABSProtocolIndex"))
if mibBuilder.loadTexts: pTABSProtocolEntry.setStatus('current')
pTABSProtocolDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 43, 1, 3), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pTABSProtocolDescription.setStatus('current')
pTABSProtocolConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 43, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTABSProtocolConfigured.setStatus('current')
pTABSProtocolBaseTABSDisplay = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 43, 1, 129), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTABSProtocolBaseTABSDisplay.setStatus('current')
pTABSProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 43, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 27))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pTABSProtocolIndex.setStatus('current')
tabsSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 44))
tabsSettingsTABSAddress = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 44, 130), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tabsSettingsTABSAddress.setStatus('current')
psnmpCommandsTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45), )
if mibBuilder.loadTexts: psnmpCommandsTable.setStatus('current')
psnmpCommandsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "psnmpCommandsIndex"))
if mibBuilder.loadTexts: psnmpCommandsEntry.setStatus('current')
psnmpCommandsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45, 1, 3), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psnmpCommandsDescription.setStatus('current')
psnmpCommandsConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psnmpCommandsConfigured.setStatus('current')
psnmpCommandsIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psnmpCommandsIpAddress.setStatus('current')
psnmpCommandsGet = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45, 1, 39), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psnmpCommandsGet.setStatus('current')
psnmpCommandsSnmpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45, 1, 42), SnmpVersion()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psnmpCommandsSnmpVersion.setStatus('current')
psnmpCommandsOutputAuto = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45, 1, 49), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psnmpCommandsOutputAuto.setStatus('current')
psnmpCommandsOutputAutoPkg = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45, 1, 71), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psnmpCommandsOutputAutoPkg.setStatus('current')
psnmpCommandsIPPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45, 1, 73), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psnmpCommandsIPPortNum.setStatus('current')
psnmpCommandsOID = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45, 1, 132), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psnmpCommandsOID.setStatus('current')
psnmpCommandsSNMPVarbindType = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45, 1, 134), SNMPVarbindType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psnmpCommandsSNMPVarbindType.setStatus('current')
psnmpCommandsTextNormal = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45, 1, 135), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psnmpCommandsTextNormal.setStatus('current')
psnmpCommandsTextCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45, 1, 136), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psnmpCommandsTextCritical.setStatus('current')
psnmpCommandsTextMajor = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45, 1, 137), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psnmpCommandsTextMajor.setStatus('current')
psnmpCommandsTextMinor = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45, 1, 138), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psnmpCommandsTextMinor.setStatus('current')
psnmpCommandsTextStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45, 1, 139), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psnmpCommandsTextStatus.setStatus('current')
psnmpCommandsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 45, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psnmpCommandsIndex.setStatus('current')
battMon = MibIdentifier((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 46))
battMonConfigured = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 46, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: battMonConfigured.setStatus('current')
battMonOutputAuto = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 46, 49), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: battMonOutputAuto.setStatus('current')
battMonOutputAutoPkg = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 46, 71), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: battMonOutputAutoPkg.setStatus('current')
pBankInfoTable = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 47), )
if mibBuilder.loadTexts: pBankInfoTable.setStatus('current')
pBankInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 47, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pBankInfoIndex"))
if mibBuilder.loadTexts: pBankInfoEntry.setStatus('current')
pBankInfoDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 47, 1, 3), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pBankInfoDescription.setStatus('current')
pBankInfoConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 47, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pBankInfoConfigured.setStatus('current')
pBankInfoPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 47, 1, 68), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pBankInfoPresent.setStatus('current')
pBankInfoSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 47, 1, 69), SlotId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pBankInfoSlotId.setStatus('current')
pBankInfoIOFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 47, 1, 75), IOFormat()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pBankInfoIOFormat.setStatus('current')
pBankInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 47, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pBankInfoIndex.setStatus('current')
pSlot1Table = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18), )
if mibBuilder.loadTexts: pSlot1Table.setStatus('current')
pSlot1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pSlot1Index"))
if mibBuilder.loadTexts: pSlot1Entry.setStatus('current')
pSlot1Description = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 3), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Description.setStatus('current')
pSlot1Desc0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 4), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Desc0.setStatus('current')
pSlot1Desc1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 5), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Desc1.setStatus('current')
pSlot1Desc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 6), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Desc2.setStatus('current')
pSlot1Desc3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 7), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Desc3.setStatus('current')
pSlot1Desc4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 8), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Desc4.setStatus('current')
pSlot1Desc5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 9), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Desc5.setStatus('current')
pSlot1Configured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Configured.setStatus('current')
pSlot1SendEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 11), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1SendEmail.setStatus('current')
pSlot1SendSNMPTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 12), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1SendSNMPTrap.setStatus('current')
pSlot1IpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1IpAddress.setStatus('current')
pSlot1Level0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 17), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Level0.setStatus('current')
pSlot1Level1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 18), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Level1.setStatus('current')
pSlot1Level2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 19), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Level2.setStatus('current')
pSlot1Level3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 20), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Level3.setStatus('current')
pSlot1Level4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 21), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Level4.setStatus('current')
pSlot1Level5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 22), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Level5.setStatus('current')
pSlot1ReadPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1ReadPeriod.setStatus('current')
pSlot1Thresh0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 28), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot1Thresh0.setStatus('current')
pSlot1Thresh1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 29), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Thresh1.setStatus('current')
pSlot1Thresh2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 30), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Thresh2.setStatus('current')
pSlot1Thresh3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 31), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Thresh3.setStatus('current')
pSlot1Thresh4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 32), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Thresh4.setStatus('current')
pSlot1Thresh5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 33), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot1Thresh5.setStatus('current')
pSlot1ContactStyle = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 44), ContactStyle()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1ContactStyle.setStatus('current')
pSlot1Units = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 46), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot1Units.setStatus('current')
pSlot1OutputMode = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 47), OutputMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1OutputMode.setStatus('current')
pSlot1OutputState = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 48), OutputState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1OutputState.setStatus('current')
pSlot1OutputAuto = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 49), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1OutputAuto.setStatus('current')
pSlot1BaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 57), BaudRate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1BaudRate.setStatus('current')
pSlot1DataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 58), DataBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1DataBits.setStatus('current')
pSlot1Parity = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 59), Parity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Parity.setStatus('current')
pSlot1StopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 60), StopBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1StopBits.setStatus('current')
pSlot1Protocol = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 61), Protocol()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1Protocol.setStatus('current')
pSlot1SerialRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 62), SerialRTS()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1SerialRTS.setStatus('current')
pSlot1SerialCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 63), SerialCTS()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1SerialCTS.setStatus('current')
pSlot1LiveDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 64), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot1LiveDescription.setStatus('current')
pSlot1LiveLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 65), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot1LiveLevel.setStatus('current')
pSlot1LiveRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 66), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot1LiveRaw.setStatus('current')
pSlot1LiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 67), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot1LiveTime.setStatus('current')
pSlot1Present = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 68), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot1Present.setStatus('current')
pSlot1OutputAutoPkg = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 71), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1OutputAutoPkg.setStatus('current')
pSlot1VoltageRange = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 72), VoltageRange()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot1VoltageRange.setStatus('current')
pSlot1IPPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 73), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1IPPortNum.setStatus('current')
pSlot1IOFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 75), IOFormat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot1IOFormat.setStatus('current')
pSlot1PortType = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 76), PortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot1PortType.setStatus('current')
pSlot1TL1SID = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 116), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1TL1SID.setStatus('current')
pSlot1TL1COND = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 117), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1TL1COND.setStatus('current')
pSlot1TL1Eqpt = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 118), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1TL1Eqpt.setStatus('current')
pSlot1TL1Env = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 119), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1TL1Env.setStatus('current')
pSlot1TL1Srveff = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 120), TL1Srveff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1TL1Srveff.setStatus('current')
pSlot1TL1Locn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 121), TL1Locn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1TL1Locn.setStatus('current')
pSlot1TL1Dirn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 122), TL1Dirn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1TL1Dirn.setStatus('current')
pSlot1SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 131), SensorType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot1SensorType.setStatus('current')
pSlot1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 18, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot1Index.setStatus('current')
pSlot2Table = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19), )
if mibBuilder.loadTexts: pSlot2Table.setStatus('current')
pSlot2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pSlot2Index"))
if mibBuilder.loadTexts: pSlot2Entry.setStatus('current')
pSlot2Description = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 3), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Description.setStatus('current')
pSlot2Desc0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 4), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Desc0.setStatus('current')
pSlot2Desc1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 5), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Desc1.setStatus('current')
pSlot2Desc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 6), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Desc2.setStatus('current')
pSlot2Desc3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 7), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Desc3.setStatus('current')
pSlot2Desc4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 8), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Desc4.setStatus('current')
pSlot2Desc5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 9), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Desc5.setStatus('current')
pSlot2Configured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Configured.setStatus('current')
pSlot2SendEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 11), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2SendEmail.setStatus('current')
pSlot2SendSNMPTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 12), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2SendSNMPTrap.setStatus('current')
pSlot2IpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2IpAddress.setStatus('current')
pSlot2Level0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 17), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Level0.setStatus('current')
pSlot2Level1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 18), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Level1.setStatus('current')
pSlot2Level2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 19), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Level2.setStatus('current')
pSlot2Level3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 20), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Level3.setStatus('current')
pSlot2Level4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 21), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Level4.setStatus('current')
pSlot2Level5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 22), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Level5.setStatus('current')
pSlot2ReadPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2ReadPeriod.setStatus('current')
pSlot2Thresh0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 28), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot2Thresh0.setStatus('current')
pSlot2Thresh1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 29), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Thresh1.setStatus('current')
pSlot2Thresh2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 30), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Thresh2.setStatus('current')
pSlot2Thresh3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 31), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Thresh3.setStatus('current')
pSlot2Thresh4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 32), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Thresh4.setStatus('current')
pSlot2Thresh5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 33), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot2Thresh5.setStatus('current')
pSlot2ContactStyle = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 44), ContactStyle()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2ContactStyle.setStatus('current')
pSlot2Units = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 46), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot2Units.setStatus('current')
pSlot2OutputMode = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 47), OutputMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2OutputMode.setStatus('current')
pSlot2OutputState = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 48), OutputState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2OutputState.setStatus('current')
pSlot2OutputAuto = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 49), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2OutputAuto.setStatus('current')
pSlot2BaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 57), BaudRate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2BaudRate.setStatus('current')
pSlot2DataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 58), DataBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2DataBits.setStatus('current')
pSlot2Parity = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 59), Parity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Parity.setStatus('current')
pSlot2StopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 60), StopBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2StopBits.setStatus('current')
pSlot2Protocol = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 61), Protocol()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2Protocol.setStatus('current')
pSlot2SerialRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 62), SerialRTS()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2SerialRTS.setStatus('current')
pSlot2SerialCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 63), SerialCTS()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2SerialCTS.setStatus('current')
pSlot2LiveDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 64), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot2LiveDescription.setStatus('current')
pSlot2LiveLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 65), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot2LiveLevel.setStatus('current')
pSlot2LiveRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 66), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot2LiveRaw.setStatus('current')
pSlot2LiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 67), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot2LiveTime.setStatus('current')
pSlot2Present = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 68), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot2Present.setStatus('current')
pSlot2OutputAutoPkg = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 71), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2OutputAutoPkg.setStatus('current')
pSlot2VoltageRange = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 72), VoltageRange()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot2VoltageRange.setStatus('current')
pSlot2IPPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 73), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2IPPortNum.setStatus('current')
pSlot2IOFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 75), IOFormat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot2IOFormat.setStatus('current')
pSlot2PortType = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 76), PortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot2PortType.setStatus('current')
pSlot2TL1SID = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 116), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2TL1SID.setStatus('current')
pSlot2TL1COND = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 117), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2TL1COND.setStatus('current')
pSlot2TL1Eqpt = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 118), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2TL1Eqpt.setStatus('current')
pSlot2TL1Env = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 119), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2TL1Env.setStatus('current')
pSlot2TL1Srveff = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 120), TL1Srveff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2TL1Srveff.setStatus('current')
pSlot2TL1Locn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 121), TL1Locn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2TL1Locn.setStatus('current')
pSlot2TL1Dirn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 122), TL1Dirn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2TL1Dirn.setStatus('current')
pSlot2SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 131), SensorType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot2SensorType.setStatus('current')
pSlot2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 19, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot2Index.setStatus('current')
pSlot3Table = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20), )
if mibBuilder.loadTexts: pSlot3Table.setStatus('current')
pSlot3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pSlot3Index"))
if mibBuilder.loadTexts: pSlot3Entry.setStatus('current')
pSlot3Description = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 3), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Description.setStatus('current')
pSlot3Desc0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 4), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Desc0.setStatus('current')
pSlot3Desc1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 5), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Desc1.setStatus('current')
pSlot3Desc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 6), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Desc2.setStatus('current')
pSlot3Desc3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 7), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Desc3.setStatus('current')
pSlot3Desc4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 8), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Desc4.setStatus('current')
pSlot3Desc5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 9), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Desc5.setStatus('current')
pSlot3Configured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Configured.setStatus('current')
pSlot3SendEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 11), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3SendEmail.setStatus('current')
pSlot3SendSNMPTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 12), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3SendSNMPTrap.setStatus('current')
pSlot3IpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3IpAddress.setStatus('current')
pSlot3Level0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 17), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Level0.setStatus('current')
pSlot3Level1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 18), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Level1.setStatus('current')
pSlot3Level2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 19), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Level2.setStatus('current')
pSlot3Level3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 20), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Level3.setStatus('current')
pSlot3Level4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 21), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Level4.setStatus('current')
pSlot3Level5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 22), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Level5.setStatus('current')
pSlot3ReadPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3ReadPeriod.setStatus('current')
pSlot3Thresh0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 28), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot3Thresh0.setStatus('current')
pSlot3Thresh1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 29), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Thresh1.setStatus('current')
pSlot3Thresh2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 30), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Thresh2.setStatus('current')
pSlot3Thresh3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 31), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Thresh3.setStatus('current')
pSlot3Thresh4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 32), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Thresh4.setStatus('current')
pSlot3Thresh5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 33), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot3Thresh5.setStatus('current')
pSlot3ContactStyle = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 44), ContactStyle()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3ContactStyle.setStatus('current')
pSlot3Units = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 46), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot3Units.setStatus('current')
pSlot3OutputMode = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 47), OutputMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3OutputMode.setStatus('current')
pSlot3OutputState = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 48), OutputState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3OutputState.setStatus('current')
pSlot3OutputAuto = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 49), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3OutputAuto.setStatus('current')
pSlot3BaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 57), BaudRate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3BaudRate.setStatus('current')
pSlot3DataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 58), DataBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3DataBits.setStatus('current')
pSlot3Parity = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 59), Parity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Parity.setStatus('current')
pSlot3StopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 60), StopBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3StopBits.setStatus('current')
pSlot3Protocol = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 61), Protocol()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3Protocol.setStatus('current')
pSlot3SerialRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 62), SerialRTS()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3SerialRTS.setStatus('current')
pSlot3SerialCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 63), SerialCTS()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3SerialCTS.setStatus('current')
pSlot3LiveDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 64), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot3LiveDescription.setStatus('current')
pSlot3LiveLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 65), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot3LiveLevel.setStatus('current')
pSlot3LiveRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 66), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot3LiveRaw.setStatus('current')
pSlot3LiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 67), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot3LiveTime.setStatus('current')
pSlot3Present = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 68), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot3Present.setStatus('current')
pSlot3OutputAutoPkg = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 71), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3OutputAutoPkg.setStatus('current')
pSlot3VoltageRange = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 72), VoltageRange()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot3VoltageRange.setStatus('current')
pSlot3IPPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 73), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3IPPortNum.setStatus('current')
pSlot3IOFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 75), IOFormat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot3IOFormat.setStatus('current')
pSlot3PortType = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 76), PortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot3PortType.setStatus('current')
pSlot3TL1SID = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 116), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3TL1SID.setStatus('current')
pSlot3TL1COND = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 117), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3TL1COND.setStatus('current')
pSlot3TL1Eqpt = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 118), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3TL1Eqpt.setStatus('current')
pSlot3TL1Env = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 119), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3TL1Env.setStatus('current')
pSlot3TL1Srveff = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 120), TL1Srveff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3TL1Srveff.setStatus('current')
pSlot3TL1Locn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 121), TL1Locn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3TL1Locn.setStatus('current')
pSlot3TL1Dirn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 122), TL1Dirn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3TL1Dirn.setStatus('current')
pSlot3SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 131), SensorType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot3SensorType.setStatus('current')
pSlot3Index = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 20, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot3Index.setStatus('current')
pSlot4Table = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21), )
if mibBuilder.loadTexts: pSlot4Table.setStatus('current')
pSlot4Entry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pSlot4Index"))
if mibBuilder.loadTexts: pSlot4Entry.setStatus('current')
pSlot4Description = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 3), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Description.setStatus('current')
pSlot4Desc0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 4), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Desc0.setStatus('current')
pSlot4Desc1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 5), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Desc1.setStatus('current')
pSlot4Desc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 6), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Desc2.setStatus('current')
pSlot4Desc3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 7), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Desc3.setStatus('current')
pSlot4Desc4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 8), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Desc4.setStatus('current')
pSlot4Desc5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 9), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Desc5.setStatus('current')
pSlot4Configured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Configured.setStatus('current')
pSlot4SendEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 11), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4SendEmail.setStatus('current')
pSlot4SendSNMPTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 12), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4SendSNMPTrap.setStatus('current')
pSlot4IpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4IpAddress.setStatus('current')
pSlot4Level0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 17), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Level0.setStatus('current')
pSlot4Level1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 18), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Level1.setStatus('current')
pSlot4Level2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 19), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Level2.setStatus('current')
pSlot4Level3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 20), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Level3.setStatus('current')
pSlot4Level4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 21), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Level4.setStatus('current')
pSlot4Level5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 22), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Level5.setStatus('current')
pSlot4ReadPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4ReadPeriod.setStatus('current')
pSlot4Thresh0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 28), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot4Thresh0.setStatus('current')
pSlot4Thresh1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 29), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Thresh1.setStatus('current')
pSlot4Thresh2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 30), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Thresh2.setStatus('current')
pSlot4Thresh3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 31), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Thresh3.setStatus('current')
pSlot4Thresh4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 32), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Thresh4.setStatus('current')
pSlot4Thresh5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 33), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot4Thresh5.setStatus('current')
pSlot4ContactStyle = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 44), ContactStyle()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4ContactStyle.setStatus('current')
pSlot4Units = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 46), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot4Units.setStatus('current')
pSlot4OutputMode = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 47), OutputMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4OutputMode.setStatus('current')
pSlot4OutputState = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 48), OutputState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4OutputState.setStatus('current')
pSlot4OutputAuto = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 49), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4OutputAuto.setStatus('current')
pSlot4BaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 57), BaudRate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4BaudRate.setStatus('current')
pSlot4DataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 58), DataBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4DataBits.setStatus('current')
pSlot4Parity = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 59), Parity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Parity.setStatus('current')
pSlot4StopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 60), StopBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4StopBits.setStatus('current')
pSlot4Protocol = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 61), Protocol()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4Protocol.setStatus('current')
pSlot4SerialRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 62), SerialRTS()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4SerialRTS.setStatus('current')
pSlot4SerialCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 63), SerialCTS()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4SerialCTS.setStatus('current')
pSlot4LiveDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 64), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot4LiveDescription.setStatus('current')
pSlot4LiveLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 65), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot4LiveLevel.setStatus('current')
pSlot4LiveRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 66), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot4LiveRaw.setStatus('current')
pSlot4LiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 67), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot4LiveTime.setStatus('current')
pSlot4Present = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 68), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot4Present.setStatus('current')
pSlot4OutputAutoPkg = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 71), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4OutputAutoPkg.setStatus('current')
pSlot4VoltageRange = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 72), VoltageRange()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot4VoltageRange.setStatus('current')
pSlot4IPPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 73), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4IPPortNum.setStatus('current')
pSlot4IOFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 75), IOFormat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot4IOFormat.setStatus('current')
pSlot4PortType = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 76), PortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot4PortType.setStatus('current')
pSlot4TL1SID = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 116), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4TL1SID.setStatus('current')
pSlot4TL1COND = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 117), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4TL1COND.setStatus('current')
pSlot4TL1Eqpt = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 118), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4TL1Eqpt.setStatus('current')
pSlot4TL1Env = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 119), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4TL1Env.setStatus('current')
pSlot4TL1Srveff = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 120), TL1Srveff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4TL1Srveff.setStatus('current')
pSlot4TL1Locn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 121), TL1Locn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4TL1Locn.setStatus('current')
pSlot4TL1Dirn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 122), TL1Dirn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4TL1Dirn.setStatus('current')
pSlot4SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 131), SensorType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot4SensorType.setStatus('current')
pSlot4Index = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 21, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot4Index.setStatus('current')
pSlot5Table = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22), )
if mibBuilder.loadTexts: pSlot5Table.setStatus('current')
pSlot5Entry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pSlot5Index"))
if mibBuilder.loadTexts: pSlot5Entry.setStatus('current')
pSlot5Description = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 3), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Description.setStatus('current')
pSlot5Desc0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 4), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Desc0.setStatus('current')
pSlot5Desc1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 5), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Desc1.setStatus('current')
pSlot5Desc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 6), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Desc2.setStatus('current')
pSlot5Desc3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 7), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Desc3.setStatus('current')
pSlot5Desc4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 8), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Desc4.setStatus('current')
pSlot5Desc5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 9), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Desc5.setStatus('current')
pSlot5Configured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Configured.setStatus('current')
pSlot5SendEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 11), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5SendEmail.setStatus('current')
pSlot5SendSNMPTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 12), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5SendSNMPTrap.setStatus('current')
pSlot5IpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5IpAddress.setStatus('current')
pSlot5Level0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 17), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Level0.setStatus('current')
pSlot5Level1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 18), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Level1.setStatus('current')
pSlot5Level2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 19), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Level2.setStatus('current')
pSlot5Level3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 20), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Level3.setStatus('current')
pSlot5Level4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 21), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Level4.setStatus('current')
pSlot5Level5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 22), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Level5.setStatus('current')
pSlot5ReadPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5ReadPeriod.setStatus('current')
pSlot5Thresh0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 28), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot5Thresh0.setStatus('current')
pSlot5Thresh1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 29), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Thresh1.setStatus('current')
pSlot5Thresh2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 30), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Thresh2.setStatus('current')
pSlot5Thresh3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 31), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Thresh3.setStatus('current')
pSlot5Thresh4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 32), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Thresh4.setStatus('current')
pSlot5Thresh5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 33), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot5Thresh5.setStatus('current')
pSlot5ContactStyle = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 44), ContactStyle()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5ContactStyle.setStatus('current')
pSlot5Units = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 46), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot5Units.setStatus('current')
pSlot5OutputMode = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 47), OutputMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5OutputMode.setStatus('current')
pSlot5OutputState = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 48), OutputState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5OutputState.setStatus('current')
pSlot5OutputAuto = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 49), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5OutputAuto.setStatus('current')
pSlot5BaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 57), BaudRate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5BaudRate.setStatus('current')
pSlot5DataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 58), DataBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5DataBits.setStatus('current')
pSlot5Parity = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 59), Parity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Parity.setStatus('current')
pSlot5StopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 60), StopBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5StopBits.setStatus('current')
pSlot5Protocol = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 61), Protocol()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5Protocol.setStatus('current')
pSlot5SerialRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 62), SerialRTS()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5SerialRTS.setStatus('current')
pSlot5SerialCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 63), SerialCTS()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5SerialCTS.setStatus('current')
pSlot5LiveDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 64), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot5LiveDescription.setStatus('current')
pSlot5LiveLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 65), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot5LiveLevel.setStatus('current')
pSlot5LiveRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 66), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot5LiveRaw.setStatus('current')
pSlot5LiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 67), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot5LiveTime.setStatus('current')
pSlot5Present = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 68), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot5Present.setStatus('current')
pSlot5OutputAutoPkg = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 71), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5OutputAutoPkg.setStatus('current')
pSlot5VoltageRange = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 72), VoltageRange()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot5VoltageRange.setStatus('current')
pSlot5IPPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 73), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5IPPortNum.setStatus('current')
pSlot5IOFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 75), IOFormat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot5IOFormat.setStatus('current')
pSlot5PortType = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 76), PortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot5PortType.setStatus('current')
pSlot5TL1SID = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 116), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5TL1SID.setStatus('current')
pSlot5TL1COND = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 117), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5TL1COND.setStatus('current')
pSlot5TL1Eqpt = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 118), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5TL1Eqpt.setStatus('current')
pSlot5TL1Env = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 119), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5TL1Env.setStatus('current')
pSlot5TL1Srveff = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 120), TL1Srveff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5TL1Srveff.setStatus('current')
pSlot5TL1Locn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 121), TL1Locn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5TL1Locn.setStatus('current')
pSlot5TL1Dirn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 122), TL1Dirn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5TL1Dirn.setStatus('current')
pSlot5SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 131), SensorType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot5SensorType.setStatus('current')
pSlot5Index = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 22, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot5Index.setStatus('current')
pSlot6Table = MibTable((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23), )
if mibBuilder.loadTexts: pSlot6Table.setStatus('current')
pSlot6Entry = MibTableRow((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1), ).setIndexNames((0, "WEBMON-EDGE-MATRIX-MIB", "pSlot6Index"))
if mibBuilder.loadTexts: pSlot6Entry.setStatus('current')
pSlot6Description = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 3), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Description.setStatus('current')
pSlot6Desc0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 4), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Desc0.setStatus('current')
pSlot6Desc1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 5), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Desc1.setStatus('current')
pSlot6Desc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 6), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Desc2.setStatus('current')
pSlot6Desc3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 7), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Desc3.setStatus('current')
pSlot6Desc4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 8), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Desc4.setStatus('current')
pSlot6Desc5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 9), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Desc5.setStatus('current')
pSlot6Configured = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 10), Configured()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Configured.setStatus('current')
pSlot6SendEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 11), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6SendEmail.setStatus('current')
pSlot6SendSNMPTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 12), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6SendSNMPTrap.setStatus('current')
pSlot6IpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6IpAddress.setStatus('current')
pSlot6Level0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 17), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Level0.setStatus('current')
pSlot6Level1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 18), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Level1.setStatus('current')
pSlot6Level2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 19), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Level2.setStatus('current')
pSlot6Level3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 20), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Level3.setStatus('current')
pSlot6Level4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 21), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Level4.setStatus('current')
pSlot6Level5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 22), Level()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Level5.setStatus('current')
pSlot6ReadPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6ReadPeriod.setStatus('current')
pSlot6Thresh0 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 28), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot6Thresh0.setStatus('current')
pSlot6Thresh1 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 29), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Thresh1.setStatus('current')
pSlot6Thresh2 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 30), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Thresh2.setStatus('current')
pSlot6Thresh3 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 31), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Thresh3.setStatus('current')
pSlot6Thresh4 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 32), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Thresh4.setStatus('current')
pSlot6Thresh5 = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 33), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot6Thresh5.setStatus('current')
pSlot6ContactStyle = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 44), ContactStyle()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6ContactStyle.setStatus('current')
pSlot6Units = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 46), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot6Units.setStatus('current')
pSlot6OutputMode = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 47), OutputMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6OutputMode.setStatus('current')
pSlot6OutputState = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 48), OutputState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6OutputState.setStatus('current')
pSlot6OutputAuto = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 49), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6OutputAuto.setStatus('current')
pSlot6BaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 57), BaudRate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6BaudRate.setStatus('current')
pSlot6DataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 58), DataBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6DataBits.setStatus('current')
pSlot6Parity = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 59), Parity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Parity.setStatus('current')
pSlot6StopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 60), StopBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6StopBits.setStatus('current')
pSlot6Protocol = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 61), Protocol()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6Protocol.setStatus('current')
pSlot6SerialRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 62), SerialRTS()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6SerialRTS.setStatus('current')
pSlot6SerialCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 63), SerialCTS()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6SerialCTS.setStatus('current')
pSlot6LiveDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 64), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot6LiveDescription.setStatus('current')
pSlot6LiveLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 65), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot6LiveLevel.setStatus('current')
pSlot6LiveRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 66), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot6LiveRaw.setStatus('current')
pSlot6LiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 67), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot6LiveTime.setStatus('current')
pSlot6Present = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 68), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot6Present.setStatus('current')
pSlot6OutputAutoPkg = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 71), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6OutputAutoPkg.setStatus('current')
pSlot6VoltageRange = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 72), VoltageRange()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot6VoltageRange.setStatus('current')
pSlot6IPPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 73), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6IPPortNum.setStatus('current')
pSlot6IOFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 75), IOFormat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot6IOFormat.setStatus('current')
pSlot6PortType = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 76), PortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot6PortType.setStatus('current')
pSlot6TL1SID = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 116), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6TL1SID.setStatus('current')
pSlot6TL1COND = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 117), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6TL1COND.setStatus('current')
pSlot6TL1Eqpt = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 118), DescriptionString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6TL1Eqpt.setStatus('current')
pSlot6TL1Env = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 119), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6TL1Env.setStatus('current')
pSlot6TL1Srveff = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 120), TL1Srveff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6TL1Srveff.setStatus('current')
pSlot6TL1Locn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 121), TL1Locn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6TL1Locn.setStatus('current')
pSlot6TL1Dirn = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 122), TL1Dirn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6TL1Dirn.setStatus('current')
pSlot6SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 131), SensorType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSlot6SensorType.setStatus('current')
pSlot6Index = MibTableColumn((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 23, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSlot6Index.setStatus('current')
configObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 994, 3, 4, 7, 999))
for _configObjectGroup_obj in [[("WEBMON-EDGE-MATRIX-MIB", "systemGeneralLocation"), ("WEBMON-EDGE-MATRIX-MIB", "systemGeneralDescription"), ("WEBMON-EDGE-MATRIX-MIB", "systemGeneralIpAddress"), ("WEBMON-EDGE-MATRIX-MIB", "systemGeneralSubnetMask"), ("WEBMON-EDGE-MATRIX-MIB", "systemGeneralGatewayAddress"), ("WEBMON-EDGE-MATRIX-MIB", "systemGeneralMeasureStyle"), ("WEBMON-EDGE-MATRIX-MIB", "systemGeneralMacAddress"), ("WEBMON-EDGE-MATRIX-MIB", "systemGeneralProductType"), ("WEBMON-EDGE-MATRIX-MIB", "systemGeneralIPPortNum"), ("WEBMON-EDGE-MATRIX-MIB", "systemGeneralVersion"), ("WEBMON-EDGE-MATRIX-MIB", "pTrapTargetDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pTrapTargetConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pTrapTargetIpAddress"), ("WEBMON-EDGE-MATRIX-MIB", "pTrapTargetSnmpVersion"), ("WEBMON-EDGE-MATRIX-MIB", "pTrapTargetIPPortNum"), ("WEBMON-EDGE-MATRIX-MIB", "pTrapTargetBackupIPAddress"), ("WEBMON-EDGE-MATRIX-MIB", "pTrapTargetUseDialout"), ("WEBMON-EDGE-MATRIX-MIB", "pTrapTargetDialoutTarget"), ("WEBMON-EDGE-MATRIX-MIB", "pTrapTargetAuthKey"), ("WEBMON-EDGE-MATRIX-MIB", "pTrapTargetPrivKey"), ("WEBMON-EDGE-MATRIX-MIB", "pTrapTargetSNMPAccess"), ("WEBMON-EDGE-MATRIX-MIB", "pTrapTargetEngineID"), ("WEBMON-EDGE-MATRIX-MIB", "pTrapTargetIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pEmailAddress"), ("WEBMON-EDGE-MATRIX-MIB", "pEmailDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pEmailConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pEmailIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorDesc0"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorDesc1"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorDesc2"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorDesc3"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorDesc4"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorDesc5"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorSendEmail"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorSendSNMPTrap"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorLevel0"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorLevel1"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorLevel2"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorLevel3"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorLevel4"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorLevel5"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorThresh0"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorThresh1"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorThresh2"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorThresh3"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorThresh4"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorThresh5"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorUnits"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorPollAddress"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorLiveDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorLiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorLiveRaw"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorLiveTime"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorTL1SID"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorTL1COND"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorTL1Eqpt"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorTL1Env"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorTL1Srveff"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorTL1Locn"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorTL1Dirn"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorMODBUSCommand"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorStartRegister"), ("WEBMON-EDGE-MATRIX-MIB", "pRemoteSensorIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorDesc0"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorDesc1"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorDesc2"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorDesc3"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorDesc4"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorDesc5"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorSendEmail"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorSendSNMPTrap"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorLevel0"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorLevel1"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorLevel2"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorLevel3"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorLevel4"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorLevel5"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorThresh0"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorThresh1"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorThresh2"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorThresh3"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorThresh4"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorThresh5"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorUnits"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorLiveDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorLiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorLiveRaw"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorLiveTime"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorTL1SID"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorTL1COND"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorTL1Eqpt"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorTL1Env"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorTL1Srveff"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorTL1Locn"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorTL1Dirn"), ("WEBMON-EDGE-MATRIX-MIB", "pOnboardSensorIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesDesc0"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesDesc1"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesSendEmail"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesSendSNMPTrap"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesIpAddress"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesLevel0"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesLevel1"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesLiveDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesLiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesLiveRaw"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesLiveTime"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesTL1SID"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesTL1COND"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesTL1Eqpt"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesTL1Env"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesTL1Srveff"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesTL1Locn"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesTL1Dirn"), ("WEBMON-EDGE-MATRIX-MIB", "pNetDevicesIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pAccountsConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pAccountsName"), ("WEBMON-EDGE-MATRIX-MIB", "pAccountsEncPassword"), ("WEBMON-EDGE-MATRIX-MIB", "pAccountsUserLevel"), ("WEBMON-EDGE-MATRIX-MIB", "pAccountsUnsecured"), ("WEBMON-EDGE-MATRIX-MIB", "pAccountsAuthKey"), ("WEBMON-EDGE-MATRIX-MIB", "pAccountsPrivKey"), ("WEBMON-EDGE-MATRIX-MIB", "pAccountsSNMPAccess"), ("WEBMON-EDGE-MATRIX-MIB", "pAccountsIndex"), ("WEBMON-EDGE-MATRIX-MIB", "cameraConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "cameraIpAddress"), ("WEBMON-EDGE-MATRIX-MIB", "cameraCameraStyle"), ("WEBMON-EDGE-MATRIX-MIB", "snmpGeneralConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "snmpGeneralReadPeriod"), ("WEBMON-EDGE-MATRIX-MIB", "snmpGeneralGet"), ("WEBMON-EDGE-MATRIX-MIB", "snmpGeneralSet"), ("WEBMON-EDGE-MATRIX-MIB", "snmpGeneralTrap"), ("WEBMON-EDGE-MATRIX-MIB", "snmpGeneralIPPortNum"), ("WEBMON-EDGE-MATRIX-MIB", "snmpGeneralEngineID"), ("WEBMON-EDGE-MATRIX-MIB", "emailGeneralAddress"), ("WEBMON-EDGE-MATRIX-MIB", "emailGeneralConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "emailGeneralIpAddress"), ("WEBMON-EDGE-MATRIX-MIB", "emailGeneralPassword"), ("WEBMON-EDGE-MATRIX-MIB", "emailGeneralIPPortNum"), ("WEBMON-EDGE-MATRIX-MIB", "pSerialDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pSerialConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pSerialIpAddress"), ("WEBMON-EDGE-MATRIX-MIB", "pSerialReadPeriod"), ("WEBMON-EDGE-MATRIX-MIB", "pSerialBaudRate"), ("WEBMON-EDGE-MATRIX-MIB", "pSerialDataBits"), ("WEBMON-EDGE-MATRIX-MIB", "pSerialParity"), ("WEBMON-EDGE-MATRIX-MIB", "pSerialStopBits"), ("WEBMON-EDGE-MATRIX-MIB", "pSerialProtocol"), ("WEBMON-EDGE-MATRIX-MIB", "pSerialSerialRTS"), ("WEBMON-EDGE-MATRIX-MIB", "pSerialSerialCTS"), ("WEBMON-EDGE-MATRIX-MIB", "pSerialPresent"), ("WEBMON-EDGE-MATRIX-MIB", "pSerialIPPortNum"), ("WEBMON-EDGE-MATRIX-MIB", "pSerialPortType"), ("WEBMON-EDGE-MATRIX-MIB", "pSerialIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pSelfTestDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pSelfTestConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pSelfTestIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pInternalFaultsDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pInternalFaultsDesc0"), ("WEBMON-EDGE-MATRIX-MIB", "pInternalFaultsDesc1"), ("WEBMON-EDGE-MATRIX-MIB", "pInternalFaultsDesc2"), ("WEBMON-EDGE-MATRIX-MIB", "pInternalFaultsDesc3"), ("WEBMON-EDGE-MATRIX-MIB", "pInternalFaultsSendEmail"), ("WEBMON-EDGE-MATRIX-MIB", "pInternalFaultsSendSNMPTrap"), ("WEBMON-EDGE-MATRIX-MIB", "pInternalFaultsLevel0"), ("WEBMON-EDGE-MATRIX-MIB", "pInternalFaultsLevel1"), ("WEBMON-EDGE-MATRIX-MIB", "pInternalFaultsLevel2"), ("WEBMON-EDGE-MATRIX-MIB", "pInternalFaultsLevel3"), ("WEBMON-EDGE-MATRIX-MIB", "pInternalFaultsIgnoreOff"), ("WEBMON-EDGE-MATRIX-MIB", "pInternalFaultsLiveDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pInternalFaultsLiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "pInternalFaultsLiveTime"), ("WEBMON-EDGE-MATRIX-MIB", "pInternalFaultsIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pSlotInfoDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pSlotInfoRecord"), ("WEBMON-EDGE-MATRIX-MIB", "pSlotInfoPresent"), ("WEBMON-EDGE-MATRIX-MIB", "pSlotInfoSlotId"), ("WEBMON-EDGE-MATRIX-MIB", "pSlotInfoIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pNetPortsDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pNetPortsIPPortNum"), ("WEBMON-EDGE-MATRIX-MIB", "pNetPortsIndex"), ("WEBMON-EDGE-MATRIX-MIB", "wirelessModemBackupIPAddress"), ("WEBMON-EDGE-MATRIX-MIB", "wirelessModemTime"), ("WEBMON-EDGE-MATRIX-MIB", "wirelessModemTransmit"), ("WEBMON-EDGE-MATRIX-MIB", "wirelessModemUseWirelessNetwork"), ("WEBMON-EDGE-MATRIX-MIB", "wirelessModemUseResetTime"), ("WEBMON-EDGE-MATRIX-MIB", "wirelessModemResponseWaitTime"), ("WEBMON-EDGE-MATRIX-MIB", "wirelessModemSecondary"), ("WEBMON-EDGE-MATRIX-MIB", "webmonSecurityUserLevel"), ("WEBMON-EDGE-MATRIX-MIB", "webmonSecurityUnsecured"), ("WEBMON-EDGE-MATRIX-MIB", "dateTimeConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "dateTimeIpAddress"), ("WEBMON-EDGE-MATRIX-MIB", "dateTimeDaylightSaving"), ("WEBMON-EDGE-MATRIX-MIB", "dateTimeDate"), ("WEBMON-EDGE-MATRIX-MIB", "dateTimeTime"), ("WEBMON-EDGE-MATRIX-MIB", "dateTimeNegOffset"), ("WEBMON-EDGE-MATRIX-MIB", "dateTimeUTCOffset"), ("WEBMON-EDGE-MATRIX-MIB", "pDCMProtocolDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pDCMProtocolConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pDCMProtocolBaseDCMAddress"), ("WEBMON-EDGE-MATRIX-MIB", "pDCMProtocolIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pdialOutConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pdialOutName"), ("WEBMON-EDGE-MATRIX-MIB", "pdialOutPassword"), ("WEBMON-EDGE-MATRIX-MIB", "pdialOutDialOutNumber"), ("WEBMON-EDGE-MATRIX-MIB", "pdialOutIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteDesc0"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteDesc1"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteSendEmail"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteSendSNMPTrap"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteLevel0"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteLevel1"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteLiveDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteLiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteLiveTime"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteElementAPkg"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteElementAPoint"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteElementBPkg"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteElementBPoint"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteDiscreteFormula"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteTL1SID"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteTL1COND"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteTL1Eqpt"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteTL1Env"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteTL1Srveff"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteTL1Locn"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteTL1Dirn"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedDiscreteIndex"), ("WEBMON-EDGE-MATRIX-MIB", "licenseDescription"), ("WEBMON-EDGE-MATRIX-MIB", "licenseLicenseKey"), ("WEBMON-EDGE-MATRIX-MIB", "licenseExpires"), ("WEBMON-EDGE-MATRIX-MIB", "licenseAllowTL1"), ("WEBMON-EDGE-MATRIX-MIB", "pe2aHostDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pe2aHostConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pe2aHostIpAddress"), ("WEBMON-EDGE-MATRIX-MIB", "pe2aHostLevel0"), ("WEBMON-EDGE-MATRIX-MIB", "pe2aHostLevel1"), ("WEBMON-EDGE-MATRIX-MIB", "pe2aHostLevel2"), ("WEBMON-EDGE-MATRIX-MIB", "pe2aHostRosterID"), ("WEBMON-EDGE-MATRIX-MIB", "pe2aHostPollAddress"), ("WEBMON-EDGE-MATRIX-MIB", "pe2aHostIPPortNum"), ("WEBMON-EDGE-MATRIX-MIB", "pe2aHostTL1SID"), ("WEBMON-EDGE-MATRIX-MIB", "pe2aHostTL1COND"), ("WEBMON-EDGE-MATRIX-MIB", "pe2aHostTL1Eqpt"), ("WEBMON-EDGE-MATRIX-MIB", "pe2aHostTL1Env"), ("WEBMON-EDGE-MATRIX-MIB", "pe2aHostTL1Srveff"), ("WEBMON-EDGE-MATRIX-MIB", "pe2aHostTL1Locn")], [("WEBMON-EDGE-MATRIX-MIB", "pe2aHostTL1Dirn"), ("WEBMON-EDGE-MATRIX-MIB", "pe2aHostIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogDesc0"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogDesc1"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogDesc2"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogDesc3"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogDesc4"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogSendEmail"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogSendSNMPTrap"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogLevel0"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogLevel1"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogLevel2"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogLevel3"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogLevel4"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogThresh0"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogThresh1"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogThresh2"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogThresh3"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogThresh4"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogThresh5"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogUnits"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogLiveDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogLiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogLiveRaw"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogLiveTime"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogElementAPkg"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogElementAPoint"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogElementBPkg"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogElementBPoint"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogFormula"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogTL1SID"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogTL1COND"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogTL1Eqpt"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogTL1Env"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogTL1Srveff"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogTL1Locn"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogTL1Dirn"), ("WEBMON-EDGE-MATRIX-MIB", "pderivedAnalogIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsDesc0"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsDesc1"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsDesc2"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsDesc3"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsDesc4"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsSendEmail"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsSendSNMPTrap"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsLevel0"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsLevel1"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsLevel2"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsLevel3"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsLevel4"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsThresh0"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsThresh1"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsThresh2"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsThresh3"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsThresh4"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsThresh5"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsUnits"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsLiveDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsLiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsLiveRaw"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsLiveTime"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsTL1SID"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsTL1COND"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsTL1Eqpt"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsTL1Env"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsTL1Srveff"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsTL1Locn"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsTL1Dirn"), ("WEBMON-EDGE-MATRIX-MIB", "pgpsIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pportRedirectDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pportRedirectConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pportRedirectIpAddress"), ("WEBMON-EDGE-MATRIX-MIB", "pportRedirectReadPeriod"), ("WEBMON-EDGE-MATRIX-MIB", "pportRedirectRosterID"), ("WEBMON-EDGE-MATRIX-MIB", "pportRedirectIPPortNum"), ("WEBMON-EDGE-MATRIX-MIB", "pportRedirectIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleADayOfWeek"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleAConfiguredState"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleAConfigured1"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleAConfigured2"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleAConfigured3"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleAConfigured4"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleATime0"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleATime1"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleATime2"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleATime3"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleATime4"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleATime5"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleAIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleBDayOfWeek"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleBConfiguredState"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleBConfigured1"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleBConfigured2"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleBConfigured3"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleBConfigured4"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleBTime0"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleBTime1"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleBTime2"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleBTime3"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleBTime4"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleBTime5"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleBIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleCDayOfWeek"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleCConfiguredState"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleCConfigured1"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleCConfigured2"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleCConfigured3"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleCConfigured4"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleCTime0"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleCTime1"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleCTime2"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleCTime3"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleCTime4"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleCTime5"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleCIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleDDayOfWeek"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleDConfiguredState"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleDConfigured1"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleDConfigured2"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleDConfigured3"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleDConfigured4"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleDTime0"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleDTime1"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleDTime2"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleDTime3"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleDTime4"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleDTime5"), ("WEBMON-EDGE-MATRIX-MIB", "pscheduleDIndex"), ("WEBMON-EDGE-MATRIX-MIB", "tl1SettingsTL1Issue"), ("WEBMON-EDGE-MATRIX-MIB", "pDCPFProtocolDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pDCPFProtocolConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pDCPFProtocolBaseDCPFDisplay"), ("WEBMON-EDGE-MATRIX-MIB", "pDCPFProtocolIndex"), ("WEBMON-EDGE-MATRIX-MIB", "dcpfSettingsDCPFAddress"), ("WEBMON-EDGE-MATRIX-MIB", "pTABSProtocolDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pTABSProtocolConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pTABSProtocolBaseTABSDisplay"), ("WEBMON-EDGE-MATRIX-MIB", "pTABSProtocolIndex"), ("WEBMON-EDGE-MATRIX-MIB", "tabsSettingsTABSAddress"), ("WEBMON-EDGE-MATRIX-MIB", "psnmpCommandsDescription"), ("WEBMON-EDGE-MATRIX-MIB", "psnmpCommandsConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "psnmpCommandsIpAddress"), ("WEBMON-EDGE-MATRIX-MIB", "psnmpCommandsGet"), ("WEBMON-EDGE-MATRIX-MIB", "psnmpCommandsSnmpVersion"), ("WEBMON-EDGE-MATRIX-MIB", "psnmpCommandsOutputAuto"), ("WEBMON-EDGE-MATRIX-MIB", "psnmpCommandsOutputAutoPkg"), ("WEBMON-EDGE-MATRIX-MIB", "psnmpCommandsIPPortNum"), ("WEBMON-EDGE-MATRIX-MIB", "psnmpCommandsOID"), ("WEBMON-EDGE-MATRIX-MIB", "psnmpCommandsSNMPVarbindType"), ("WEBMON-EDGE-MATRIX-MIB", "psnmpCommandsTextNormal"), ("WEBMON-EDGE-MATRIX-MIB", "psnmpCommandsTextCritical"), ("WEBMON-EDGE-MATRIX-MIB", "psnmpCommandsTextMajor"), ("WEBMON-EDGE-MATRIX-MIB", "psnmpCommandsTextMinor"), ("WEBMON-EDGE-MATRIX-MIB", "psnmpCommandsTextStatus"), ("WEBMON-EDGE-MATRIX-MIB", "psnmpCommandsIndex"), ("WEBMON-EDGE-MATRIX-MIB", "battMonConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "battMonOutputAuto"), ("WEBMON-EDGE-MATRIX-MIB", "battMonOutputAutoPkg"), ("WEBMON-EDGE-MATRIX-MIB", "pBankInfoDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pBankInfoConfigured"), ("WEBMON-EDGE-MATRIX-MIB", "pBankInfoPresent"), ("WEBMON-EDGE-MATRIX-MIB", "pBankInfoSlotId"), ("WEBMON-EDGE-MATRIX-MIB", "pBankInfoIOFormat"), ("WEBMON-EDGE-MATRIX-MIB", "pBankInfoIndex"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Description"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Desc0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Desc1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Desc2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Desc3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Desc4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Desc5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Configured"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1SendEmail"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1SendSNMPTrap"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1IpAddress"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Level0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Level1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Level2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Level3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Level4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Level5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1ReadPeriod"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Thresh0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Thresh1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Thresh2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Thresh3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Thresh4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Thresh5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1ContactStyle"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Units"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1OutputMode"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1OutputState"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1OutputAuto"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1BaudRate"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1DataBits"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Parity"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1StopBits"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Protocol"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1SerialRTS"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1SerialCTS"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1LiveDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1LiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1LiveRaw"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1LiveTime"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Present"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1OutputAutoPkg"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1VoltageRange"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1IPPortNum"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1IOFormat"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1PortType"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1TL1SID"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1TL1COND"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1TL1Eqpt"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1TL1Env"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1TL1Srveff"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1TL1Locn"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1TL1Dirn"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1SensorType"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot1Index"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Description"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Desc0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Desc1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Desc2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Desc3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Desc4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Desc5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Configured"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2SendEmail"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2SendSNMPTrap"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2IpAddress"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Level0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Level1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Level2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Level3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Level4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Level5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2ReadPeriod"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Thresh0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Thresh1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Thresh2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Thresh3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Thresh4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Thresh5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2ContactStyle"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Units"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2OutputMode"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2OutputState"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2OutputAuto"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2BaudRate"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2DataBits"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Parity")], [("WEBMON-EDGE-MATRIX-MIB", "pSlot2StopBits"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Protocol"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2SerialRTS"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2SerialCTS"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2LiveDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2LiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2LiveRaw"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2LiveTime"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Present"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2OutputAutoPkg"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2VoltageRange"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2IPPortNum"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2IOFormat"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2PortType"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2TL1SID"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2TL1COND"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2TL1Eqpt"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2TL1Env"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2TL1Srveff"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2TL1Locn"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2TL1Dirn"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2SensorType"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot2Index"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Description"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Desc0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Desc1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Desc2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Desc3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Desc4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Desc5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Configured"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3SendEmail"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3SendSNMPTrap"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3IpAddress"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Level0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Level1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Level2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Level3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Level4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Level5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3ReadPeriod"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Thresh0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Thresh1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Thresh2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Thresh3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Thresh4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Thresh5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3ContactStyle"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Units"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3OutputMode"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3OutputState"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3OutputAuto"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3BaudRate"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3DataBits"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Parity"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3StopBits"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Protocol"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3SerialRTS"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3SerialCTS"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3LiveDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3LiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3LiveRaw"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3LiveTime"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Present"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3OutputAutoPkg"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3VoltageRange"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3IPPortNum"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3IOFormat"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3PortType"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3TL1SID"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3TL1COND"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3TL1Eqpt"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3TL1Env"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3TL1Srveff"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3TL1Locn"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3TL1Dirn"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3SensorType"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot3Index"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Description"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Desc0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Desc1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Desc2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Desc3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Desc4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Desc5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Configured"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4SendEmail"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4SendSNMPTrap"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4IpAddress"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Level0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Level1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Level2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Level3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Level4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Level5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4ReadPeriod"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Thresh0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Thresh1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Thresh2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Thresh3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Thresh4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Thresh5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4ContactStyle"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Units"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4OutputMode"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4OutputState"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4OutputAuto"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4BaudRate"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4DataBits"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Parity"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4StopBits"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Protocol"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4SerialRTS"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4SerialCTS"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4LiveDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4LiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4LiveRaw"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4LiveTime"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Present"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4OutputAutoPkg"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4VoltageRange"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4IPPortNum"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4IOFormat"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4PortType"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4TL1SID"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4TL1COND"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4TL1Eqpt"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4TL1Env"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4TL1Srveff"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4TL1Locn"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4TL1Dirn"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4SensorType"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot4Index"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Description"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Desc0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Desc1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Desc2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Desc3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Desc4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Desc5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Configured"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5SendEmail"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5SendSNMPTrap"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5IpAddress"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Level0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Level1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Level2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Level3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Level4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Level5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5ReadPeriod"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Thresh0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Thresh1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Thresh2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Thresh3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Thresh4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Thresh5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5ContactStyle"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Units"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5OutputMode"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5OutputState"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5OutputAuto"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5BaudRate"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5DataBits"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Parity"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5StopBits"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Protocol"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5SerialRTS"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5SerialCTS"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5LiveDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5LiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5LiveRaw"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5LiveTime"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Present"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5OutputAutoPkg"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5VoltageRange"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5IPPortNum"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5IOFormat"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5PortType"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5TL1SID"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5TL1COND"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5TL1Eqpt"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5TL1Env"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5TL1Srveff"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5TL1Locn"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5TL1Dirn"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5SensorType"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot5Index"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Description"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Desc0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Desc1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Desc2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Desc3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Desc4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Desc5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Configured"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6SendEmail"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6SendSNMPTrap"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6IpAddress"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Level0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Level1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Level2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Level3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Level4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Level5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6ReadPeriod"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Thresh0"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Thresh1"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Thresh2"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Thresh3"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Thresh4"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Thresh5"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6ContactStyle"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Units"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6OutputMode"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6OutputState"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6OutputAuto"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6BaudRate"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6DataBits"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Parity"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6StopBits"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Protocol"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6SerialRTS"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6SerialCTS"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6LiveDescription"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6LiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6LiveRaw"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6LiveTime"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Present"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6OutputAutoPkg"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6VoltageRange"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6IPPortNum"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6IOFormat"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6PortType"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6TL1SID"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6TL1COND"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6TL1Eqpt"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6TL1Env"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6TL1Srveff"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6TL1Locn"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6TL1Dirn"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6SensorType"), ("WEBMON-EDGE-MATRIX-MIB", "pSlot6Index")]]:
    if getattr(mibBuilder, 'version', 0) < (4, 4, 2):
        # WARNING: leading objects get lost here!
        configObjectGroup = configObjectGroup.setObjects(*_configObjectGroup_obj)
    else:
        configObjectGroup = configObjectGroup.setObjects(*_configObjectGroup_obj, **dict(append=True))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    configObjectGroup = configObjectGroup.setStatus('current')
notificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 994, 3, 4, 4)).setObjects(("WEBMON-EDGE-MATRIX-MIB", "analogEventTrap"), ("WEBMON-EDGE-MATRIX-MIB", "remoteDeviceEventTrap"), ("WEBMON-EDGE-MATRIX-MIB", "faultTrap"), ("WEBMON-EDGE-MATRIX-MIB", "digitalEventTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    notificationGroup = notificationGroup.setStatus('current')
objectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 994, 3, 4, 5)).setObjects(("WEBMON-EDGE-MATRIX-MIB", "systemGeneralDescription"), ("WEBMON-EDGE-MATRIX-MIB", "systemGeneralLocation"), ("WEBMON-EDGE-MATRIX-MIB", "analogInputDescription"), ("WEBMON-EDGE-MATRIX-MIB", "analogLiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "analogLiveReading"), ("WEBMON-EDGE-MATRIX-MIB", "analogUnitsOfMeasurement"), ("WEBMON-EDGE-MATRIX-MIB", "analogLiveState"), ("WEBMON-EDGE-MATRIX-MIB", "analogLiveStateDescription"), ("WEBMON-EDGE-MATRIX-MIB", "analogAlarmState"), ("WEBMON-EDGE-MATRIX-MIB", "analogSourceDescription"), ("WEBMON-EDGE-MATRIX-MIB", "analogSourceIndex"), ("WEBMON-EDGE-MATRIX-MIB", "digitalInputDescription"), ("WEBMON-EDGE-MATRIX-MIB", "digitalAlarmState"), ("WEBMON-EDGE-MATRIX-MIB", "digitalLiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "digitalLiveState"), ("WEBMON-EDGE-MATRIX-MIB", "digitalLiveStateDescription"), ("WEBMON-EDGE-MATRIX-MIB", "digitalSourceDescription"), ("WEBMON-EDGE-MATRIX-MIB", "digitalSourceIndex"), ("WEBMON-EDGE-MATRIX-MIB", "remoteDeviceDescription"), ("WEBMON-EDGE-MATRIX-MIB", "remoteDeviceLiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "remoteDeviceLiveState"), ("WEBMON-EDGE-MATRIX-MIB", "remoteDeviceAlarmState"), ("WEBMON-EDGE-MATRIX-MIB", "remoteDeviceSourceDescription"), ("WEBMON-EDGE-MATRIX-MIB", "remoteDeviceSourceIndex"), ("WEBMON-EDGE-MATRIX-MIB", "faultDescription"), ("WEBMON-EDGE-MATRIX-MIB", "faultLiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "faultStateDescription"), ("WEBMON-EDGE-MATRIX-MIB", "faultAlarmState"), ("WEBMON-EDGE-MATRIX-MIB", "faultSourceDescription"), ("WEBMON-EDGE-MATRIX-MIB", "faultSourceIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    objectGroup = objectGroup.setStatus('current')
traps = ObjectIdentity((1, 3, 6, 1, 4, 1, 994, 3, 4, 6))
if mibBuilder.loadTexts: traps.setStatus('current')
analogInputs = ObjectIdentity((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 1))
if mibBuilder.loadTexts: analogInputs.setStatus('current')
analogEventTrap = NotificationType((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 1, 1)).setObjects(("WEBMON-EDGE-MATRIX-MIB", "systemGeneralDescription"), ("WEBMON-EDGE-MATRIX-MIB", "systemGeneralLocation"), ("WEBMON-EDGE-MATRIX-MIB", "analogInputDescription"), ("WEBMON-EDGE-MATRIX-MIB", "analogLiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "analogLiveReading"), ("WEBMON-EDGE-MATRIX-MIB", "analogLiveState"), ("WEBMON-EDGE-MATRIX-MIB", "analogLiveStateDescription"), ("WEBMON-EDGE-MATRIX-MIB", "analogUnitsOfMeasurement"), ("WEBMON-EDGE-MATRIX-MIB", "analogAlarmState"), ("WEBMON-EDGE-MATRIX-MIB", "analogSourceDescription"), ("WEBMON-EDGE-MATRIX-MIB", "analogSourceIndex"))
if mibBuilder.loadTexts: analogEventTrap.setStatus('current')
analogInputDescription = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 1, 2), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analogInputDescription.setStatus('current')
analogLiveLevel = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 1, 3), Level()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analogLiveLevel.setStatus('current')
analogLiveReading = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 1, 5), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analogLiveReading.setStatus('current')
analogUnitsOfMeasurement = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 1, 6), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analogUnitsOfMeasurement.setStatus('current')
analogLiveState = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 1, 7), AnalogState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analogLiveState.setStatus('current')
analogLiveStateDescription = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 1, 8), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analogLiveStateDescription.setStatus('current')
analogAlarmState = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 1, 9), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analogAlarmState.setStatus('current')
analogSourceDescription = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 1, 101), DescriptionString())
if mibBuilder.loadTexts: analogSourceDescription.setStatus('current')
analogSourceIndex = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 1, 102), Integer32())
if mibBuilder.loadTexts: analogSourceIndex.setStatus('current')
digitalInputs = ObjectIdentity((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 2))
if mibBuilder.loadTexts: digitalInputs.setStatus('current')
digitalEventTrap = NotificationType((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 2, 1)).setObjects(("WEBMON-EDGE-MATRIX-MIB", "systemGeneralDescription"), ("WEBMON-EDGE-MATRIX-MIB", "systemGeneralLocation"), ("WEBMON-EDGE-MATRIX-MIB", "digitalInputDescription"), ("WEBMON-EDGE-MATRIX-MIB", "digitalLiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "digitalLiveState"), ("WEBMON-EDGE-MATRIX-MIB", "digitalLiveStateDescription"), ("WEBMON-EDGE-MATRIX-MIB", "digitalAlarmState"), ("WEBMON-EDGE-MATRIX-MIB", "digitalSourceDescription"), ("WEBMON-EDGE-MATRIX-MIB", "digitalSourceIndex"))
if mibBuilder.loadTexts: digitalEventTrap.setStatus('current')
digitalInputDescription = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 2, 2), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: digitalInputDescription.setStatus('current')
digitalLiveLevel = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 2, 3), Level()).setMaxAccess("readonly")
if mibBuilder.loadTexts: digitalLiveLevel.setStatus('current')
digitalLiveState = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 2, 4), DigitalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: digitalLiveState.setStatus('current')
digitalLiveStateDescription = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 2, 5), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: digitalLiveStateDescription.setStatus('current')
digitalAlarmState = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 2, 6), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: digitalAlarmState.setStatus('current')
digitalSourceDescription = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 2, 101), DescriptionString())
if mibBuilder.loadTexts: digitalSourceDescription.setStatus('current')
digitalSourceIndex = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 2, 102), Integer32())
if mibBuilder.loadTexts: digitalSourceIndex.setStatus('current')
remoteDevices = ObjectIdentity((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 3))
if mibBuilder.loadTexts: remoteDevices.setStatus('current')
remoteDeviceEventTrap = NotificationType((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 3, 1)).setObjects(("WEBMON-EDGE-MATRIX-MIB", "systemGeneralDescription"), ("WEBMON-EDGE-MATRIX-MIB", "systemGeneralLocation"), ("WEBMON-EDGE-MATRIX-MIB", "remoteDeviceDescription"), ("WEBMON-EDGE-MATRIX-MIB", "remoteDeviceLiveState"), ("WEBMON-EDGE-MATRIX-MIB", "remoteDeviceLiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "remoteDeviceAlarmState"), ("WEBMON-EDGE-MATRIX-MIB", "remoteDeviceSourceDescription"), ("WEBMON-EDGE-MATRIX-MIB", "remoteDeviceSourceIndex"))
if mibBuilder.loadTexts: remoteDeviceEventTrap.setStatus('current')
remoteDeviceDescription = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 3, 2), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteDeviceDescription.setStatus('current')
remoteDeviceLiveLevel = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 3, 3), Level()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteDeviceLiveLevel.setStatus('current')
remoteDeviceLiveState = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 3, 4), ConnectivityState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteDeviceLiveState.setStatus('current')
remoteDeviceAlarmState = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 3, 5), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteDeviceAlarmState.setStatus('current')
remoteDeviceSourceDescription = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 3, 101), DescriptionString())
if mibBuilder.loadTexts: remoteDeviceSourceDescription.setStatus('current')
remoteDeviceSourceIndex = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 3, 102), Integer32())
if mibBuilder.loadTexts: remoteDeviceSourceIndex.setStatus('current')
faults = ObjectIdentity((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 4))
if mibBuilder.loadTexts: faults.setStatus('current')
faultTrap = NotificationType((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 4, 1)).setObjects(("WEBMON-EDGE-MATRIX-MIB", "systemGeneralDescription"), ("WEBMON-EDGE-MATRIX-MIB", "systemGeneralLocation"), ("WEBMON-EDGE-MATRIX-MIB", "faultDescription"), ("WEBMON-EDGE-MATRIX-MIB", "faultLiveLevel"), ("WEBMON-EDGE-MATRIX-MIB", "faultStateDescription"), ("WEBMON-EDGE-MATRIX-MIB", "faultAlarmState"), ("WEBMON-EDGE-MATRIX-MIB", "faultSourceDescription"), ("WEBMON-EDGE-MATRIX-MIB", "faultSourceIndex"))
if mibBuilder.loadTexts: faultTrap.setStatus('current')
faultDescription = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 4, 2), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faultDescription.setStatus('current')
faultLiveLevel = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 4, 3), Level()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faultLiveLevel.setStatus('current')
faultStateDescription = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 4, 4), DescriptionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faultStateDescription.setStatus('current')
faultAlarmState = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 4, 5), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faultAlarmState.setStatus('current')
faultSourceDescription = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 4, 101), DescriptionString())
if mibBuilder.loadTexts: faultSourceDescription.setStatus('current')
faultSourceIndex = MibScalar((1, 3, 6, 1, 4, 1, 994, 3, 4, 6, 4, 102), Integer32())
if mibBuilder.loadTexts: faultSourceIndex.setStatus('current')
mibBuilder.exportSymbols("WEBMON-EDGE-MATRIX-MIB", pSlot4Thresh2=pSlot4Thresh2, dantel=dantel, webmonSecurityUserLevel=webmonSecurityUserLevel, snmpGeneralReadPeriod=snmpGeneralReadPeriod, pNetPortsIndex=pNetPortsIndex, pRemoteSensorDesc1=pRemoteSensorDesc1, pSlotInfoDescription=pSlotInfoDescription, licenseAllowTL1=licenseAllowTL1, pderivedDiscreteTL1Env=pderivedDiscreteTL1Env, pSlot6SerialRTS=pSlot6SerialRTS, pscheduleBConfigured3=pscheduleBConfigured3, pSlot3Level3=pSlot3Level3, pSlot1Units=pSlot1Units, pSlot6Desc2=pSlot6Desc2, pderivedAnalogLevel0=pderivedAnalogLevel0, pNetDevicesSendEmail=pNetDevicesSendEmail, pSerialProtocol=pSerialProtocol, pSlot5Thresh5=pSlot5Thresh5, pderivedAnalogLiveDescription=pderivedAnalogLiveDescription, pSlot5TL1COND=pSlot5TL1COND, digitalEventTrap=digitalEventTrap, pDCPFProtocolIndex=pDCPFProtocolIndex, analogLiveState=analogLiveState, pOnboardSensorThresh3=pOnboardSensorThresh3, Level=Level, pNetDevicesTL1Locn=pNetDevicesTL1Locn, pRemoteSensorDesc4=pRemoteSensorDesc4, pInternalFaultsDescription=pInternalFaultsDescription, psnmpCommandsTextNormal=psnmpCommandsTextNormal, pSlot3Desc3=pSlot3Desc3, pSlot5ContactStyle=pSlot5ContactStyle, pderivedDiscreteElementBPoint=pderivedDiscreteElementBPoint, pNetDevicesTL1Srveff=pNetDevicesTL1Srveff, pOnboardSensorTL1Env=pOnboardSensorTL1Env, pgpsTL1COND=pgpsTL1COND, pRemoteSensorTL1Srveff=pRemoteSensorTL1Srveff, pderivedDiscreteSendSNMPTrap=pderivedDiscreteSendSNMPTrap, analogEventTrap=analogEventTrap, pSlot6SendEmail=pSlot6SendEmail, pSlot5IOFormat=pSlot5IOFormat, pOnboardSensorDesc3=pOnboardSensorDesc3, digitalLiveStateDescription=digitalLiveStateDescription, pSlot2VoltageRange=pSlot2VoltageRange, pderivedDiscreteLiveTime=pderivedDiscreteLiveTime, pdialOutDialOutNumber=pdialOutDialOutNumber, pSlot3TL1Srveff=pSlot3TL1Srveff, systemGeneralIPPortNum=systemGeneralIPPortNum, pSlot6Level3=pSlot6Level3, pscheduleCTable=pscheduleCTable, pSlot1TL1Env=pSlot1TL1Env, pOnboardSensorThresh1=pOnboardSensorThresh1, pInternalFaultsLevel3=pInternalFaultsLevel3, dateTimeDate=dateTimeDate, pOnboardSensorTL1Dirn=pOnboardSensorTL1Dirn, pInternalFaultsSendEmail=pInternalFaultsSendEmail, pRemoteSensorDesc0=pRemoteSensorDesc0, pSlot5TL1SID=pSlot5TL1SID, pgpsTL1Dirn=pgpsTL1Dirn, pscheduleDConfigured4=pscheduleDConfigured4, pderivedDiscreteElementBPkg=pderivedDiscreteElementBPkg, pSlot4ReadPeriod=pSlot4ReadPeriod, pSlot5Configured=pSlot5Configured, pSlotInfoRecord=pSlotInfoRecord, pe2aHostIndex=pe2aHostIndex, pSlot3Thresh4=pSlot3Thresh4, pOnboardSensorIndex=pOnboardSensorIndex, pderivedAnalogLiveRaw=pderivedAnalogLiveRaw, pRemoteSensorLevel4=pRemoteSensorLevel4, pSlot5Thresh3=pSlot5Thresh3, pSlot1Parity=pSlot1Parity, pportRedirectIndex=pportRedirectIndex, pOnboardSensorThresh0=pOnboardSensorThresh0, pderivedAnalogTL1Env=pderivedAnalogTL1Env, pRemoteSensorLevel3=pRemoteSensorLevel3, pOnboardSensorLevel4=pOnboardSensorLevel4, pSlot2Level4=pSlot2Level4, pe2aHostLevel1=pe2aHostLevel1, battMonConfigured=battMonConfigured, pInternalFaultsLevel1=pInternalFaultsLevel1, pscheduleBTime0=pscheduleBTime0, pSlot5LiveTime=pSlot5LiveTime, pSlot6Desc0=pSlot6Desc0, pSlot5Desc5=pSlot5Desc5, dcpfSettings=dcpfSettings, pSlot6Level0=pSlot6Level0, wirelessModemTime=wirelessModemTime, pSlot5Desc4=pSlot5Desc4, pderivedAnalogEntry=pderivedAnalogEntry, pderivedAnalogDesc2=pderivedAnalogDesc2, pscheduleCConfigured3=pscheduleCConfigured3, psnmpCommandsConfigured=psnmpCommandsConfigured, pSlot2Thresh5=pSlot2Thresh5, pRemoteSensorDesc2=pRemoteSensorDesc2, pSlot4OutputState=pSlot4OutputState, DiscreteFormula=DiscreteFormula, pSlot6VoltageRange=pSlot6VoltageRange, pSlot4OutputAutoPkg=pSlot4OutputAutoPkg, pSlot1IPPortNum=pSlot1IPPortNum, pInternalFaultsTable=pInternalFaultsTable, pportRedirectIpAddress=pportRedirectIpAddress, SNMPVarbindType=SNMPVarbindType, pRemoteSensorThresh1=pRemoteSensorThresh1, psnmpCommandsTextCritical=psnmpCommandsTextCritical, pSlot1Thresh4=pSlot1Thresh4, pSlot6Desc5=pSlot6Desc5, pgpsLiveTime=pgpsLiveTime, remoteDevices=remoteDevices, pSlot3Description=pSlot3Description, pscheduleBConfiguredState=pscheduleBConfiguredState, pSlot2OutputMode=pSlot2OutputMode, battMon=battMon, pSlot2Desc1=pSlot2Desc1, pderivedAnalogLevel4=pderivedAnalogLevel4, Parity=Parity, pRemoteSensorEntry=pRemoteSensorEntry, pAccountsSNMPAccess=pAccountsSNMPAccess, TL1Dirn=TL1Dirn, pSlot1Level1=pSlot1Level1, pSlot2Parity=pSlot2Parity, PYSNMP_MODULE_ID=moduleIdentity, pscheduleATable=pscheduleATable, digitalAlarmState=digitalAlarmState, pOnboardSensorDesc5=pOnboardSensorDesc5, SNMPCommandType=SNMPCommandType, psnmpCommandsTextMajor=psnmpCommandsTextMajor, pSlot4Desc4=pSlot4Desc4, pInternalFaultsDesc0=pInternalFaultsDesc0, psnmpCommandsTable=psnmpCommandsTable, pderivedAnalogTL1Locn=pderivedAnalogTL1Locn, pOnboardSensorLiveTime=pOnboardSensorLiveTime, pSlot1Level5=pSlot1Level5, pSlot3Present=pSlot3Present, pInternalFaultsLevel0=pInternalFaultsLevel0, pSlot5Level3=pSlot5Level3, pTrapTargetEngineID=pTrapTargetEngineID, pscheduleBTable=pscheduleBTable, pgpsDesc4=pgpsDesc4, pSlot5TL1Locn=pSlot5TL1Locn, pSlot3Thresh5=pSlot3Thresh5, pSlot1Level4=pSlot1Level4, pSlot2TL1SID=pSlot2TL1SID, pSlot4PortType=pSlot4PortType, pOnboardSensorDesc1=pOnboardSensorDesc1, pTrapTargetIpAddress=pTrapTargetIpAddress, ContactStyle=ContactStyle, pe2aHostTL1SID=pe2aHostTL1SID, pscheduleBIndex=pscheduleBIndex, pSlot3Parity=pSlot3Parity, pSelfTestConfigured=pSelfTestConfigured, pSlot5SendSNMPTrap=pSlot5SendSNMPTrap, pderivedDiscreteDesc0=pderivedDiscreteDesc0, webmonSecurityUnsecured=webmonSecurityUnsecured, pAccountsEncPassword=pAccountsEncPassword, pNetDevicesLiveTime=pNetDevicesLiveTime, pportRedirectTable=pportRedirectTable, pSlot6LiveRaw=pSlot6LiveRaw, pRemoteSensorLiveDescription=pRemoteSensorLiveDescription, pSerialSerialCTS=pSerialSerialCTS, pSerialStopBits=pSerialStopBits, pderivedDiscreteLiveLevel=pderivedDiscreteLiveLevel, pSlot6Table=pSlot6Table, MeasureStyle=MeasureStyle, pAccountsTable=pAccountsTable, pSlot1LiveTime=pSlot1LiveTime, pscheduleCTime4=pscheduleCTime4, wirelessModemResponseWaitTime=wirelessModemResponseWaitTime, remoteDeviceLiveLevel=remoteDeviceLiveLevel, pSlotInfoPresent=pSlotInfoPresent, pSlot5DataBits=pSlot5DataBits, pSlot1VoltageRange=pSlot1VoltageRange, pSlot4LiveDescription=pSlot4LiveDescription, pSlot3Table=pSlot3Table, pSerialPresent=pSerialPresent, pdialOutConfigured=pdialOutConfigured, pSlot4StopBits=pSlot4StopBits, pOnboardSensorLevel1=pOnboardSensorLevel1, digitalLiveState=digitalLiveState, pderivedDiscreteTL1Eqpt=pderivedDiscreteTL1Eqpt, pSlot2Desc5=pSlot2Desc5, pscheduleATime4=pscheduleATime4, pSlot6SendSNMPTrap=pSlot6SendSNMPTrap, pSlot6Thresh1=pSlot6Thresh1, pSlot6PortType=pSlot6PortType, pgpsLiveDescription=pgpsLiveDescription, pSlot6Level2=pSlot6Level2, systemGeneralLocation=systemGeneralLocation, pOnboardSensorSendSNMPTrap=pOnboardSensorSendSNMPTrap, pSlot2Level5=pSlot2Level5, pSlot1ReadPeriod=pSlot1ReadPeriod, pSlot4OutputAuto=pSlot4OutputAuto, faultSourceIndex=faultSourceIndex, pscheduleBTime2=pscheduleBTime2, analogLiveLevel=analogLiveLevel, wirelessModemUseResetTime=wirelessModemUseResetTime, SlotId=SlotId, pscheduleCTime3=pscheduleCTime3, pSlot4BaudRate=pSlot4BaudRate, pRemoteSensorThresh2=pRemoteSensorThresh2, pSlot5Protocol=pSlot5Protocol, pSlot5BaudRate=pSlot5BaudRate, pNetDevicesDescription=pNetDevicesDescription, psnmpCommandsDescription=psnmpCommandsDescription, SerialCTS=SerialCTS, pSerialDescription=pSerialDescription, pderivedDiscreteTable=pderivedDiscreteTable, pSlot3Entry=pSlot3Entry, pRemoteSensorLiveTime=pRemoteSensorLiveTime, pDCPFProtocolTable=pDCPFProtocolTable, pAccountsUserLevel=pAccountsUserLevel, pSlot6BaudRate=pSlot6BaudRate, pInternalFaultsLiveDescription=pInternalFaultsLiveDescription, OutputMode=OutputMode, pSlot3LiveLevel=pSlot3LiveLevel, pderivedDiscreteDescription=pderivedDiscreteDescription, pderivedAnalogThresh4=pderivedAnalogThresh4, pNetDevicesDesc1=pNetDevicesDesc1, pderivedAnalogSendEmail=pderivedAnalogSendEmail, pSerialEntry=pSerialEntry, pSlot1OutputMode=pSlot1OutputMode, pSlot3IPPortNum=pSlot3IPPortNum, pTrapTargetPrivKey=pTrapTargetPrivKey, pderivedDiscreteTL1COND=pderivedDiscreteTL1COND, pscheduleCTime2=pscheduleCTime2, pgpsThresh2=pgpsThresh2, pSlot5Desc2=pSlot5Desc2, analogSourceIndex=analogSourceIndex, faults=faults, DescriptionString=DescriptionString, pscheduleBTime4=pscheduleBTime4, pSlot5Desc0=pSlot5Desc0, dateTimeUTCOffset=dateTimeUTCOffset, pSlot3TL1Locn=pSlot3TL1Locn, pSlot2LiveDescription=pSlot2LiveDescription, pOnboardSensorTable=pOnboardSensorTable, pRemoteSensorTL1Eqpt=pRemoteSensorTL1Eqpt, pSlot4TL1SID=pSlot4TL1SID, pOnboardSensorTL1COND=pOnboardSensorTL1COND, pe2aHostIPPortNum=pe2aHostIPPortNum, pSlot3IOFormat=pSlot3IOFormat, pgpsConfigured=pgpsConfigured, psnmpCommandsEntry=psnmpCommandsEntry, pSlot5LiveRaw=pSlot5LiveRaw, pSlot2Level2=pSlot2Level2, AnalogState=AnalogState, pSlot1PortType=pSlot1PortType, systemGeneralGatewayAddress=systemGeneralGatewayAddress, pgpsTL1Srveff=pgpsTL1Srveff, ConfiguredState=ConfiguredState, pSerialPortType=pSerialPortType, pSlot3StopBits=pSlot3StopBits, pSlot5VoltageRange=pSlot5VoltageRange, pSlot4LiveTime=pSlot4LiveTime, pSlot4TL1Srveff=pSlot4TL1Srveff, psnmpCommandsIpAddress=psnmpCommandsIpAddress)
mibBuilder.exportSymbols("WEBMON-EDGE-MATRIX-MIB", pDCMProtocolTable=pDCMProtocolTable, pSlot2SendSNMPTrap=pSlot2SendSNMPTrap, pSlot3TL1COND=pSlot3TL1COND, pgpsTL1Env=pgpsTL1Env, pTrapTargetConfigured=pTrapTargetConfigured, camera=camera, pSlot2StopBits=pSlot2StopBits, pTrapTargetIndex=pTrapTargetIndex, pBankInfoSlotId=pBankInfoSlotId, pe2aHostTL1Env=pe2aHostTL1Env, pderivedAnalogDescription=pderivedAnalogDescription, pSlot6Protocol=pSlot6Protocol, emailGeneralConfigured=emailGeneralConfigured, pderivedDiscreteConfigured=pderivedDiscreteConfigured, pSlot5OutputAutoPkg=pSlot5OutputAutoPkg, pNetDevicesTL1SID=pNetDevicesTL1SID, pSlot4Present=pSlot4Present, pSlot2SerialRTS=pSlot2SerialRTS, pSlot1TL1Srveff=pSlot1TL1Srveff, pSlot4VoltageRange=pSlot4VoltageRange, pNetDevicesLiveRaw=pNetDevicesLiveRaw, pSlot4SensorType=pSlot4SensorType, faultStateDescription=faultStateDescription, pSlot1SerialCTS=pSlot1SerialCTS, pgpsTable=pgpsTable, pscheduleCConfigured2=pscheduleCConfigured2, pSlot2SerialCTS=pSlot2SerialCTS, pSlot2Present=pSlot2Present, pTrapTargetDialoutTarget=pTrapTargetDialoutTarget, pSlot2Level0=pSlot2Level0, pSlot2Level1=pSlot2Level1, analogInputDescription=analogInputDescription, pSlot5Level4=pSlot5Level4, pDCMProtocolDescription=pDCMProtocolDescription, pSlot4Level2=pSlot4Level2, pRemoteSensorConfigured=pRemoteSensorConfigured, pSlot6Index=pSlot6Index, pSlot4Configured=pSlot4Configured, StopBits=StopBits, pBankInfoConfigured=pBankInfoConfigured, pSlot2OutputAutoPkg=pSlot2OutputAutoPkg, pSlot4IpAddress=pSlot4IpAddress, pscheduleCConfigured1=pscheduleCConfigured1, pNetDevicesEntry=pNetDevicesEntry, pscheduleDTime1=pscheduleDTime1, pSlot1Index=pSlot1Index, pSlot4TL1Eqpt=pSlot4TL1Eqpt, pSlot2Index=pSlot2Index, tl1Settings=tl1Settings, pderivedAnalogDesc1=pderivedAnalogDesc1, pderivedDiscreteSendEmail=pderivedDiscreteSendEmail, pSlot5Level0=pSlot5Level0, pSlot1Entry=pSlot1Entry, pderivedAnalogElementAPkg=pderivedAnalogElementAPkg, pSlot5Level1=pSlot5Level1, pSlot6SerialCTS=pSlot6SerialCTS, pderivedAnalogTL1SID=pderivedAnalogTL1SID, pSlot1Desc3=pSlot1Desc3, pSlot6StopBits=pSlot6StopBits, pscheduleDTime2=pscheduleDTime2, pAccountsUnsecured=pAccountsUnsecured, resetDevice=resetDevice, pderivedAnalogFormula=pderivedAnalogFormula, pgpsDesc3=pgpsDesc3, pSlot6Units=pSlot6Units, pRemoteSensorSendEmail=pRemoteSensorSendEmail, pAccountsIndex=pAccountsIndex, pSlot4Protocol=pSlot4Protocol, pSlot6TL1SID=pSlot6TL1SID, pscheduleBConfigured2=pscheduleBConfigured2, systemGeneralDescription=systemGeneralDescription, pSlotInfoIndex=pSlotInfoIndex, pSlot5LiveLevel=pSlot5LiveLevel, emailGeneral=emailGeneral, pSlot3SerialRTS=pSlot3SerialRTS, pTrapTargetSNMPAccess=pTrapTargetSNMPAccess, pSlot3Desc1=pSlot3Desc1, pderivedAnalogDesc3=pderivedAnalogDesc3, pSlot3TL1Dirn=pSlot3TL1Dirn, pSlot4IOFormat=pSlot4IOFormat, pDCPFProtocolEntry=pDCPFProtocolEntry, faultTrap=faultTrap, pgpsUnits=pgpsUnits, pSlot5PortType=pSlot5PortType, pdialOutTable=pdialOutTable, pgpsSendSNMPTrap=pgpsSendSNMPTrap, psnmpCommandsOutputAuto=psnmpCommandsOutputAuto, pSlot6LiveDescription=pSlot6LiveDescription, tl1SettingsTL1Issue=tl1SettingsTL1Issue, pNetDevicesLevel0=pNetDevicesLevel0, pSerialBaudRate=pSerialBaudRate, pSelfTestDescription=pSelfTestDescription, pe2aHostLevel2=pe2aHostLevel2, pscheduleAIndex=pscheduleAIndex, MODBUSCommand=MODBUSCommand, pSlot4DataBits=pSlot4DataBits, pRemoteSensorMODBUSCommand=pRemoteSensorMODBUSCommand, licenseDescription=licenseDescription, pSlot1SensorType=pSlot1SensorType, pderivedAnalogThresh2=pderivedAnalogThresh2, pgpsLevel0=pgpsLevel0, pSlot3Level2=pSlot3Level2, pSlot6Thresh3=pSlot6Thresh3, pscheduleDTable=pscheduleDTable, pSlot6TL1Dirn=pSlot6TL1Dirn, pscheduleAConfigured3=pscheduleAConfigured3, pSerialParity=pSerialParity, pSlot1Protocol=pSlot1Protocol, pderivedAnalogTL1COND=pderivedAnalogTL1COND, pderivedAnalogTL1Eqpt=pderivedAnalogTL1Eqpt, pgpsLevel2=pgpsLevel2, pderivedDiscreteTL1Dirn=pderivedDiscreteTL1Dirn, pSlot3ReadPeriod=pSlot3ReadPeriod, pSlot5Desc1=pSlot5Desc1, pTrapTargetEntry=pTrapTargetEntry, pSlot1Level3=pSlot1Level3, pSlotInfoSlotId=pSlotInfoSlotId, pSlot5SendEmail=pSlot5SendEmail, pderivedAnalogTL1Dirn=pderivedAnalogTL1Dirn, battMonOutputAutoPkg=battMonOutputAutoPkg, dateTime=dateTime, pSlot6Desc4=pSlot6Desc4, pscheduleCConfigured4=pscheduleCConfigured4, pSlot2TL1Eqpt=pSlot2TL1Eqpt, emailGeneralIpAddress=emailGeneralIpAddress, pSlot3SensorType=pSlot3SensorType, pSlot5Thresh1=pSlot5Thresh1, pOnboardSensorLiveRaw=pOnboardSensorLiveRaw, pRemoteSensorDesc5=pRemoteSensorDesc5, dcpfSettingsDCPFAddress=dcpfSettingsDCPFAddress, pderivedDiscreteDesc1=pderivedDiscreteDesc1, pEmailIndex=pEmailIndex, pSlot3Level0=pSlot3Level0, pscheduleDDayOfWeek=pscheduleDDayOfWeek, digitalLiveLevel=digitalLiveLevel, license=license, pSlot3ContactStyle=pSlot3ContactStyle, pSlot2Level3=pSlot2Level3, pInternalFaultsDesc3=pInternalFaultsDesc3, pSlot2Protocol=pSlot2Protocol, pderivedAnalogThresh5=pderivedAnalogThresh5, SerialRTS=SerialRTS, pSlot1Desc1=pSlot1Desc1, DigitalState=DigitalState, pSlot2SensorType=pSlot2SensorType, pDCPFProtocolConfigured=pDCPFProtocolConfigured, pNetDevicesIndex=pNetDevicesIndex, pOnboardSensorLevel3=pOnboardSensorLevel3, pEmailEntry=pEmailEntry, pRemoteSensorTable=pRemoteSensorTable, pderivedDiscreteLiveDescription=pderivedDiscreteLiveDescription, pscheduleBTime5=pscheduleBTime5, pSlot1Description=pSlot1Description, pgpsTL1Eqpt=pgpsTL1Eqpt, pSlot5Parity=pSlot5Parity, pTABSProtocolTable=pTABSProtocolTable, pSlot1SendSNMPTrap=pSlot1SendSNMPTrap, pderivedDiscreteIndex=pderivedDiscreteIndex, analogSourceDescription=analogSourceDescription, pSlot3Level5=pSlot3Level5, pgpsIndex=pgpsIndex, digitalInputDescription=digitalInputDescription, CameraStyle=CameraStyle, pSlot3LiveRaw=pSlot3LiveRaw, pSlot5Desc3=pSlot5Desc3, pscheduleATime3=pscheduleATime3, pBankInfoIndex=pBankInfoIndex, pgpsTL1Locn=pgpsTL1Locn, pOnboardSensorDesc2=pOnboardSensorDesc2, pSlotInfoTable=pSlotInfoTable, pSlot1Desc5=pSlot1Desc5, pscheduleBConfigured4=pscheduleBConfigured4, pNetDevicesLiveLevel=pNetDevicesLiveLevel, pSlot4Level3=pSlot4Level3, pSlot4Thresh1=pSlot4Thresh1, pgpsLevel3=pgpsLevel3, pSlot2ContactStyle=pSlot2ContactStyle, pSlot3Desc2=pSlot3Desc2, pSlot1Present=pSlot1Present, TL1Locn=TL1Locn, pInternalFaultsLevel2=pInternalFaultsLevel2, pSlot1SendEmail=pSlot1SendEmail, BaudRate=BaudRate, pSlot1LiveDescription=pSlot1LiveDescription, pTABSProtocolIndex=pTABSProtocolIndex, pSlot1LiveRaw=pSlot1LiveRaw, faultLiveLevel=faultLiveLevel, tabsSettings=tabsSettings, pscheduleATime0=pscheduleATime0, pSlot6OutputState=pSlot6OutputState, pDCPFProtocolBaseDCPFDisplay=pDCPFProtocolBaseDCPFDisplay, pSlot5SerialCTS=pSlot5SerialCTS, pNetDevicesTL1COND=pNetDevicesTL1COND, pscheduleADayOfWeek=pscheduleADayOfWeek, systemGeneralVersion=systemGeneralVersion, pderivedDiscreteTL1Srveff=pderivedDiscreteTL1Srveff, DataBits=DataBits, pSlotInfoEntry=pSlotInfoEntry, licenseLicenseKey=licenseLicenseKey, pe2aHostTL1Srveff=pe2aHostTL1Srveff, pSlot1TL1Dirn=pSlot1TL1Dirn, pSlot5Entry=pSlot5Entry, wirelessModemSecondary=wirelessModemSecondary, pSlot1OutputAutoPkg=pSlot1OutputAutoPkg, pInternalFaultsSendSNMPTrap=pInternalFaultsSendSNMPTrap, pRemoteSensorLiveLevel=pRemoteSensorLiveLevel, pNetDevicesTable=pNetDevicesTable, snmpGeneralGet=snmpGeneralGet, pSlot3BaudRate=pSlot3BaudRate, pBankInfoDescription=pBankInfoDescription, pSlot5Present=pSlot5Present, remoteDeviceLiveState=remoteDeviceLiveState, pscheduleBConfigured1=pscheduleBConfigured1, tabsSettingsTABSAddress=tabsSettingsTABSAddress, pSlot5IPPortNum=pSlot5IPPortNum, pSlot6Desc3=pSlot6Desc3, pportRedirectRosterID=pportRedirectRosterID, pSlot4Thresh3=pSlot4Thresh3, pSlot5Thresh4=pSlot5Thresh4, pSlot5Thresh0=pSlot5Thresh0, pBankInfoIOFormat=pBankInfoIOFormat, pSlot3SendSNMPTrap=pSlot3SendSNMPTrap, wirelessModemUseWirelessNetwork=wirelessModemUseWirelessNetwork, pSlot6TL1Srveff=pSlot6TL1Srveff, pOnboardSensorLiveLevel=pOnboardSensorLiveLevel, pgpsSendEmail=pgpsSendEmail, cameraConfigured=cameraConfigured, pscheduleDConfigured2=pscheduleDConfigured2, pSlot1TL1COND=pSlot1TL1COND, pTrapTargetIPPortNum=pTrapTargetIPPortNum, pSlot1TL1Locn=pSlot1TL1Locn, pSlot2IPPortNum=pSlot2IPPortNum, pSlot2Desc4=pSlot2Desc4, analogLiveStateDescription=analogLiveStateDescription, pSlot1IOFormat=pSlot1IOFormat, pSlot5ReadPeriod=pSlot5ReadPeriod, pSlot6OutputAuto=pSlot6OutputAuto, pderivedAnalogThresh3=pderivedAnalogThresh3, pgpsDescription=pgpsDescription, pderivedAnalogTable=pderivedAnalogTable, notificationGroup=notificationGroup, wirelessModemBackupIPAddress=wirelessModemBackupIPAddress, pSlot3LiveDescription=pSlot3LiveDescription, pNetPortsEntry=pNetPortsEntry, pSlot3Index=pSlot3Index, pSlot4TL1Locn=pSlot4TL1Locn, VoltageRange=VoltageRange, snmpGeneralSet=snmpGeneralSet, pSlot4Thresh5=pSlot4Thresh5, pderivedDiscreteEntry=pderivedDiscreteEntry, pNetDevicesIpAddress=pNetDevicesIpAddress, pSlot1Thresh0=pSlot1Thresh0, psnmpCommandsOID=psnmpCommandsOID, pSlot3Units=pSlot3Units)
mibBuilder.exportSymbols("WEBMON-EDGE-MATRIX-MIB", psnmpCommandsTextStatus=psnmpCommandsTextStatus, pscheduleBTime3=pscheduleBTime3, pRemoteSensorTL1COND=pRemoteSensorTL1COND, pscheduleBEntry=pscheduleBEntry, systemGeneralIpAddress=systemGeneralIpAddress, pDCMProtocolBaseDCMAddress=pDCMProtocolBaseDCMAddress, pDCPFProtocolDescription=pDCPFProtocolDescription, pderivedAnalogDesc4=pderivedAnalogDesc4, pSlot6TL1Locn=pSlot6TL1Locn, pSlot6Level4=pSlot6Level4, pportRedirectEntry=pportRedirectEntry, pscheduleBTime1=pscheduleBTime1, pSlot1Thresh1=pSlot1Thresh1, TL1Srveff=TL1Srveff, pSerialReadPeriod=pSerialReadPeriod, pportRedirectIPPortNum=pportRedirectIPPortNum, pDCMProtocolIndex=pDCMProtocolIndex, pSlot2Configured=pSlot2Configured, pSlot6Present=pSlot6Present, pSlot5Table=pSlot5Table, IOFormat=IOFormat, pderivedDiscreteDiscreteFormula=pderivedDiscreteDiscreteFormula, OutputState=OutputState, pscheduleAConfigured1=pscheduleAConfigured1, pSlot1IpAddress=pSlot1IpAddress, analogUnitsOfMeasurement=analogUnitsOfMeasurement, cameraIpAddress=cameraIpAddress, pSlot4OutputMode=pSlot4OutputMode, pgpsThresh5=pgpsThresh5, pSlot3OutputAutoPkg=pSlot3OutputAutoPkg, pSlot6Description=pSlot6Description, pgpsThresh3=pgpsThresh3, pSlot1Thresh5=pSlot1Thresh5, pSlot3IpAddress=pSlot3IpAddress, pdialOutPassword=pdialOutPassword, pSlot3DataBits=pSlot3DataBits, pSlot4Units=pSlot4Units, pderivedDiscreteElementAPkg=pderivedDiscreteElementAPkg, ProductType=ProductType, pgpsLiveLevel=pgpsLiveLevel, pSlot6TL1Env=pSlot6TL1Env, pOnboardSensorTL1Locn=pOnboardSensorTL1Locn, pSerialTable=pSerialTable, pderivedAnalogThresh0=pderivedAnalogThresh0, pscheduleCTime1=pscheduleCTime1, pRemoteSensorLevel0=pRemoteSensorLevel0, pRemoteSensorStartRegister=pRemoteSensorStartRegister, pSlot2Desc2=pSlot2Desc2, pSlot6LiveLevel=pSlot6LiveLevel, systemGeneralMeasureStyle=systemGeneralMeasureStyle, pderivedAnalogDesc0=pderivedAnalogDesc0, pSlot2Table=pSlot2Table, pNetDevicesLevel1=pNetDevicesLevel1, pSlot3TL1Env=pSlot3TL1Env, pe2aHostDescription=pe2aHostDescription, faultAlarmState=faultAlarmState, pSlot3Desc5=pSlot3Desc5, pTrapTargetTable=pTrapTargetTable, pscheduleDTime0=pscheduleDTime0, pSlot4ContactStyle=pSlot4ContactStyle, remoteDeviceSourceIndex=remoteDeviceSourceIndex, pBankInfoPresent=pBankInfoPresent, pSlot4TL1Dirn=pSlot4TL1Dirn, pderivedAnalogTL1Srveff=pderivedAnalogTL1Srveff, PortType=PortType, pportRedirectConfigured=pportRedirectConfigured, pscheduleBDayOfWeek=pscheduleBDayOfWeek, pSlot3OutputState=pSlot3OutputState, pRemoteSensorSendSNMPTrap=pRemoteSensorSendSNMPTrap, pTrapTargetUseDialout=pTrapTargetUseDialout, pSlot2PortType=pSlot2PortType, webmonSecurity=webmonSecurity, SNMPAccess=SNMPAccess, pSlot2Entry=pSlot2Entry, pSlot4Desc3=pSlot4Desc3, pOnboardSensorDesc0=pOnboardSensorDesc0, pRemoteSensorTL1SID=pRemoteSensorTL1SID, pgpsThresh4=pgpsThresh4, pSlot4Index=pSlot4Index, pSlot1SerialRTS=pSlot1SerialRTS, pSlot4IPPortNum=pSlot4IPPortNum, pSlot1BaudRate=pSlot1BaudRate, pSlot4Level5=pSlot4Level5, pSlot4SerialCTS=pSlot4SerialCTS, pSerialIPPortNum=pSerialIPPortNum, pNetDevicesSendSNMPTrap=pNetDevicesSendSNMPTrap, pSlot6IPPortNum=pSlot6IPPortNum, pRemoteSensorThresh3=pRemoteSensorThresh3, pNetDevicesTL1Dirn=pNetDevicesTL1Dirn, pInternalFaultsDesc2=pInternalFaultsDesc2, pSlot2LiveLevel=pSlot2LiveLevel, pSlot4Description=pSlot4Description, pSlot6Desc1=pSlot6Desc1, pscheduleAConfigured2=pscheduleAConfigured2, pscheduleDTime5=pscheduleDTime5, pSlot3Thresh3=pSlot3Thresh3, pSlot2TL1Dirn=pSlot2TL1Dirn, pSlot2Thresh2=pSlot2Thresh2, pSerialIpAddress=pSerialIpAddress, pEmailDescription=pEmailDescription, pSlot2BaudRate=pSlot2BaudRate, pSlot6OutputMode=pSlot6OutputMode, emailGeneralPassword=emailGeneralPassword, pderivedAnalogElementBPkg=pderivedAnalogElementBPkg, pRemoteSensorTL1Env=pRemoteSensorTL1Env, pe2aHostLevel0=pe2aHostLevel0, pderivedAnalogLevel1=pderivedAnalogLevel1, pSlot2DataBits=pSlot2DataBits, pSerialSerialRTS=pSerialSerialRTS, pSlot2ReadPeriod=pSlot2ReadPeriod, pSlot6Parity=pSlot6Parity, pEmailTable=pEmailTable, pSelfTestIndex=pSelfTestIndex, pSlot6ContactStyle=pSlot6ContactStyle, ConnectivityState=ConnectivityState, pSlot6OutputAutoPkg=pSlot6OutputAutoPkg, pBankInfoEntry=pBankInfoEntry, pgpsThresh0=pgpsThresh0, systemGeneralSubnetMask=systemGeneralSubnetMask, remoteDeviceAlarmState=remoteDeviceAlarmState, configuration=configuration, pSelfTestEntry=pSelfTestEntry, pSlot2TL1Locn=pSlot2TL1Locn, pSlot6Level1=pSlot6Level1, pscheduleDEntry=pscheduleDEntry, pSlot3Protocol=pSlot3Protocol, faultSourceDescription=faultSourceDescription, pSlot4Parity=pSlot4Parity, pOnboardSensorLiveDescription=pOnboardSensorLiveDescription, pSlot2SendEmail=pSlot2SendEmail, pderivedDiscreteTL1SID=pderivedDiscreteTL1SID, pscheduleDIndex=pscheduleDIndex, pTrapTargetDescription=pTrapTargetDescription, pSlot1Desc2=pSlot1Desc2, pderivedAnalogLevel3=pderivedAnalogLevel3, pSlot4Table=pSlot4Table, pscheduleATime1=pscheduleATime1, pSlot1Thresh3=pSlot1Thresh3, pderivedDiscreteLevel1=pderivedDiscreteLevel1, systemGeneral=systemGeneral, pTABSProtocolDescription=pTABSProtocolDescription, pSlot3TL1Eqpt=pSlot3TL1Eqpt, systemGeneralProductType=systemGeneralProductType, psnmpCommandsTextMinor=psnmpCommandsTextMinor, wirelessModemTransmit=wirelessModemTransmit, pscheduleATime5=pscheduleATime5, resendEvents=resendEvents, pscheduleCConfiguredState=pscheduleCConfiguredState, remoteDeviceEventTrap=remoteDeviceEventTrap, pRemoteSensorLevel5=pRemoteSensorLevel5, pscheduleDConfigured1=pscheduleDConfigured1, pOnboardSensorSendEmail=pOnboardSensorSendEmail, pderivedAnalogThresh1=pderivedAnalogThresh1, pSlot4Desc0=pSlot4Desc0, pSlot1OutputAuto=pSlot1OutputAuto, pe2aHostRosterID=pe2aHostRosterID, pSlot3Desc0=pSlot3Desc0, pSerialConfigured=pSerialConfigured, pdialOutIndex=pdialOutIndex, pSlot3VoltageRange=pSlot3VoltageRange, pderivedAnalogConfigured=pderivedAnalogConfigured, pgpsLiveRaw=pgpsLiveRaw, pSlot6Thresh4=pSlot6Thresh4, pscheduleDTime4=pscheduleDTime4, pOnboardSensorConfigured=pOnboardSensorConfigured, pSlot2TL1COND=pSlot2TL1COND, pSlot4Desc2=pSlot4Desc2, pSlot6TL1COND=pSlot6TL1COND, pRemoteSensorLevel2=pRemoteSensorLevel2, pSlot3OutputMode=pSlot3OutputMode, pNetPortsDescription=pNetPortsDescription, pSlot4Level0=pSlot4Level0, pSlot6IOFormat=pSlot6IOFormat, pSlot5Thresh2=pSlot5Thresh2, pOnboardSensorDescription=pOnboardSensorDescription, pSlot5TL1Env=pSlot5TL1Env, pSlot4SendSNMPTrap=pSlot4SendSNMPTrap, pscheduleCTime0=pscheduleCTime0, pSlot6Thresh0=pSlot6Thresh0, psnmpCommandsSNMPVarbindType=psnmpCommandsSNMPVarbindType, objectGroup=objectGroup, pInternalFaultsLiveLevel=pInternalFaultsLiveLevel, pRemoteSensorTL1Dirn=pRemoteSensorTL1Dirn, pSlot2LiveRaw=pSlot2LiveRaw, pOnboardSensorThresh2=pOnboardSensorThresh2, pEmailAddress=pEmailAddress, pSlot6IpAddress=pSlot6IpAddress, pdialOutEntry=pdialOutEntry, pSlot1TL1SID=pSlot1TL1SID, pSlot5SensorType=pSlot5SensorType, analogInputs=analogInputs, pSlot6Configured=pSlot6Configured, pgpsThresh1=pgpsThresh1, pSlot1Configured=pSlot1Configured, pNetDevicesTL1Eqpt=pNetDevicesTL1Eqpt, pSlot6TL1Eqpt=pSlot6TL1Eqpt, pderivedDiscreteTL1Locn=pderivedDiscreteTL1Locn, moduleIdentity=moduleIdentity, pSlot3LiveTime=pSlot3LiveTime, pNetDevicesConfigured=pNetDevicesConfigured, pe2aHostTL1Locn=pe2aHostTL1Locn, pInternalFaultsEntry=pInternalFaultsEntry, UseDialout=UseDialout, pRemoteSensorLevel1=pRemoteSensorLevel1, pNetPortsTable=pNetPortsTable, pderivedAnalogLiveLevel=pderivedAnalogLiveLevel, pderivedAnalogIndex=pderivedAnalogIndex, pSlot6ReadPeriod=pSlot6ReadPeriod, pe2aHostTable=pe2aHostTable, psnmpCommandsIPPortNum=psnmpCommandsIPPortNum, pe2aHostPollAddress=pe2aHostPollAddress, pInternalFaultsIndex=pInternalFaultsIndex, pSlot6Level5=pSlot6Level5, pSlot2IpAddress=pSlot2IpAddress, pderivedAnalogLevel2=pderivedAnalogLevel2, pe2aHostTL1Dirn=pe2aHostTL1Dirn, pSlot4TL1Env=pSlot4TL1Env, pportRedirectDescription=pportRedirectDescription, pgpsDesc1=pgpsDesc1, pSlot5IpAddress=pSlot5IpAddress, pSlot5TL1Srveff=pSlot5TL1Srveff, pSlot6DataBits=pSlot6DataBits, configObjectGroup=configObjectGroup, triggers=triggers, pAccountsName=pAccountsName, pe2aHostEntry=pe2aHostEntry, dateTimeTime=dateTimeTime, digitalSourceIndex=digitalSourceIndex, pOnboardSensorLevel5=pOnboardSensorLevel5, pSelfTestTable=pSelfTestTable, pTrapTargetSnmpVersion=pTrapTargetSnmpVersion, pSlot5Index=pSlot5Index, pDCMProtocolConfigured=pDCMProtocolConfigured, snmpGeneralEngineID=snmpGeneralEngineID, pTABSProtocolConfigured=pTABSProtocolConfigured, pInternalFaultsIgnoreOff=pInternalFaultsIgnoreOff, pSlot1StopBits=pSlot1StopBits, battMonOutputAuto=battMonOutputAuto, pSlot3TL1SID=pSlot3TL1SID, pAccountsConfigured=pAccountsConfigured, pTABSProtocolBaseTABSDisplay=pTABSProtocolBaseTABSDisplay, pSlot5SerialRTS=pSlot5SerialRTS, commitAccountChanges=commitAccountChanges, pgpsLevel1=pgpsLevel1, systemGeneralMacAddress=systemGeneralMacAddress, pe2aHostConfigured=pe2aHostConfigured, pTrapTargetBackupIPAddress=pTrapTargetBackupIPAddress, pscheduleDTime3=pscheduleDTime3, snmpGeneralConfigured=snmpGeneralConfigured, pInternalFaultsLiveTime=pInternalFaultsLiveTime, pSlot1Table=pSlot1Table, pSlot2LiveTime=pSlot2LiveTime, pSlot2TL1Env=pSlot2TL1Env, Boolean=Boolean)
mibBuilder.exportSymbols("WEBMON-EDGE-MATRIX-MIB", psnmpCommandsSnmpVersion=psnmpCommandsSnmpVersion, pOnboardSensorThresh4=pOnboardSensorThresh4, pSlot1Level0=pSlot1Level0, emailGeneralAddress=emailGeneralAddress, pscheduleCEntry=pscheduleCEntry, pSlot1Thresh2=pSlot1Thresh2, pscheduleDConfiguredState=pscheduleDConfiguredState, remoteDeviceDescription=remoteDeviceDescription, pSlot6Thresh2=pSlot6Thresh2, pNetDevicesDesc0=pNetDevicesDesc0, pBankInfoTable=pBankInfoTable, pRemoteSensorThresh5=pRemoteSensorThresh5, pSlot5OutputAuto=pSlot5OutputAuto, pInternalFaultsDesc1=pInternalFaultsDesc1, pderivedAnalogElementBPoint=pderivedAnalogElementBPoint, psnmpCommandsIndex=psnmpCommandsIndex, pSlot3PortType=pSlot3PortType, pSlot1DataBits=pSlot1DataBits, pSlot6Thresh5=pSlot6Thresh5, SnmpVersion=SnmpVersion, pSlot2Desc3=pSlot2Desc3, pSlot1ContactStyle=pSlot1ContactStyle, pSlot1OutputState=pSlot1OutputState, pTABSProtocolEntry=pTABSProtocolEntry, pSlot3SendEmail=pSlot3SendEmail, pSlot6SensorType=pSlot6SensorType, pe2aHostIpAddress=pe2aHostIpAddress, pSlot2Thresh3=pSlot2Thresh3, pAccountsAuthKey=pAccountsAuthKey, dantelProducts=dantelProducts, pRemoteSensorThresh0=pRemoteSensorThresh0, pOnboardSensorLevel2=pOnboardSensorLevel2, pSlot2Thresh1=pSlot2Thresh1, pOnboardSensorDesc4=pOnboardSensorDesc4, pSlot4SendEmail=pSlot4SendEmail, snmpGeneralTrap=snmpGeneralTrap, pSlot2OutputState=pSlot2OutputState, SensorType=SensorType, pSlot6Entry=pSlot6Entry, pDCMProtocolEntry=pDCMProtocolEntry, pgpsDesc2=pgpsDesc2, pSlot2Thresh0=pSlot2Thresh0, dateTimeConfigured=dateTimeConfigured, psnmpCommandsGet=psnmpCommandsGet, traps=traps, pSlot4SerialRTS=pSlot4SerialRTS, pderivedDiscreteElementAPoint=pderivedDiscreteElementAPoint, pderivedAnalogUnits=pderivedAnalogUnits, pSlot2IOFormat=pSlot2IOFormat, pSlot4Desc1=pSlot4Desc1, pNetDevicesTL1Env=pNetDevicesTL1Env, pRemoteSensorIndex=pRemoteSensorIndex, pSlot2Thresh4=pSlot2Thresh4, emailGeneralIPPortNum=emailGeneralIPPortNum, remoteDeviceSourceDescription=remoteDeviceSourceDescription, pRemoteSensorThresh4=pRemoteSensorThresh4, pgpsDesc0=pgpsDesc0, pSlot1Desc4=pSlot1Desc4, pTrapTargetAuthKey=pTrapTargetAuthKey, pSlot2TL1Srveff=pSlot2TL1Srveff, pSerialIndex=pSerialIndex, pSlot3Thresh2=pSlot3Thresh2, pSlot2Units=pSlot2Units, pSlot3Thresh0=pSlot3Thresh0, pe2aHostTL1COND=pe2aHostTL1COND, pscheduleATime2=pscheduleATime2, dateTimeDaylightSaving=dateTimeDaylightSaving, analogAlarmState=analogAlarmState, pSlot1Desc0=pSlot1Desc0, pOnboardSensorTL1SID=pOnboardSensorTL1SID, TL1Issue=TL1Issue, pscheduleCDayOfWeek=pscheduleCDayOfWeek, pSlot3Desc4=pSlot3Desc4, snmpGeneralIPPortNum=snmpGeneralIPPortNum, pSlot5Level2=pSlot5Level2, pgpsTL1SID=pgpsTL1SID, pscheduleAEntry=pscheduleAEntry, pAccountsEntry=pAccountsEntry, pRemoteSensorDescription=pRemoteSensorDescription, pderivedAnalogLiveTime=pderivedAnalogLiveTime, pSlot5StopBits=pSlot5StopBits, cameraCameraStyle=cameraCameraStyle, pSlot6LiveTime=pSlot6LiveTime, pRemoteSensorPollAddress=pRemoteSensorPollAddress, pNetDevicesLiveDescription=pNetDevicesLiveDescription, pSlot4Thresh0=pSlot4Thresh0, pOnboardSensorTL1Srveff=pOnboardSensorTL1Srveff, pSlot5TL1Eqpt=pSlot5TL1Eqpt, pSlot5Level5=pSlot5Level5, pSlot4Desc5=pSlot4Desc5, pSlot5TL1Dirn=pSlot5TL1Dirn, pscheduleAConfigured4=pscheduleAConfigured4, pSlot1Level2=pSlot1Level2, pSlot3Thresh1=pSlot3Thresh1, pOnboardSensorTL1Eqpt=pOnboardSensorTL1Eqpt, pSlot1LiveLevel=pSlot1LiveLevel, webMon=webMon, faultDescription=faultDescription, pgpsLevel4=pgpsLevel4, pSlot4Level4=pSlot4Level4, pgpsEntry=pgpsEntry, pSlot3SerialCTS=pSlot3SerialCTS, pSlot5Units=pSlot5Units, pNetPortsIPPortNum=pNetPortsIPPortNum, pSlot4Entry=pSlot4Entry, pSlot4TL1COND=pSlot4TL1COND, pSlot4Level1=pSlot4Level1, pRemoteSensorTL1Locn=pRemoteSensorTL1Locn, pderivedAnalogSendSNMPTrap=pderivedAnalogSendSNMPTrap, Configured=Configured, pSlot3OutputAuto=pSlot3OutputAuto, pSlot2Desc0=pSlot2Desc0, pSlot1TL1Eqpt=pSlot1TL1Eqpt, analogLiveReading=analogLiveReading, digitalInputs=digitalInputs, licenseExpires=licenseExpires, pRemoteSensorLiveRaw=pRemoteSensorLiveRaw, pSlot5OutputMode=pSlot5OutputMode, pscheduleCIndex=pscheduleCIndex, pOnboardSensorLevel0=pOnboardSensorLevel0, pSlot2OutputAuto=pSlot2OutputAuto, pSlot4Thresh4=pSlot4Thresh4, digitalSourceDescription=digitalSourceDescription, pRemoteSensorDesc3=pRemoteSensorDesc3, pOnboardSensorUnits=pOnboardSensorUnits, dateTimeIpAddress=dateTimeIpAddress, pportRedirectReadPeriod=pportRedirectReadPeriod, pSlot3Level4=pSlot3Level4, psnmpCommandsOutputAutoPkg=psnmpCommandsOutputAutoPkg, pdialOutName=pdialOutName, Protocol=Protocol, pSlot5OutputState=pSlot5OutputState, dateTimeNegOffset=dateTimeNegOffset, pAccountsPrivKey=pAccountsPrivKey, pOnboardSensorEntry=pOnboardSensorEntry, pSlot3Configured=pSlot3Configured, pscheduleCTime5=pscheduleCTime5, pderivedAnalogElementAPoint=pderivedAnalogElementAPoint, pderivedDiscreteLevel0=pderivedDiscreteLevel0, wirelessModem=wirelessModem, pOnboardSensorThresh5=pOnboardSensorThresh5, pSlot5LiveDescription=pSlot5LiveDescription, pSlot5Description=pSlot5Description, pe2aHostTL1Eqpt=pe2aHostTL1Eqpt, DayOfWeek=DayOfWeek, pSlot3Level1=pSlot3Level1, snmpGeneral=snmpGeneral, pEmailConfigured=pEmailConfigured, pscheduleDConfigured3=pscheduleDConfigured3, pscheduleAConfiguredState=pscheduleAConfiguredState, pSlot4LiveRaw=pSlot4LiveRaw, pSerialDataBits=pSerialDataBits, pRemoteSensorUnits=pRemoteSensorUnits, pSlot2Description=pSlot2Description, pSlot4LiveLevel=pSlot4LiveLevel)
