#
# PySNMP MIB module CISCO-ISNS-IP-NW-DISCOVERY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ISNS-IP-NW-DISCOVERY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:46:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
FcNameId, = mibBuilder.importSymbols("CISCO-ST-TC", "FcNameId")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, IpAddress, iso, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ObjectIdentity, Unsigned32, NotificationType, TimeTicks, MibIdentifier, Counter64, Counter32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "IpAddress", "iso", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ObjectIdentity", "Unsigned32", "NotificationType", "TimeTicks", "MibIdentifier", "Counter64", "Counter32", "ModuleIdentity")
TestAndIncr, TruthValue, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TestAndIncr", "TruthValue", "RowStatus", "TextualConvention", "DisplayString")
ciscoIsnsIpNetDiscoveryMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 434))
ciscoIsnsIpNetDiscoveryMIB.setRevisions(('2004-09-08 00:00',))
if mibBuilder.loadTexts: ciscoIsnsIpNetDiscoveryMIB.setLastUpdated('200409080000Z')
if mibBuilder.loadTexts: ciscoIsnsIpNetDiscoveryMIB.setOrganization('Cisco Systems Inc.')
ciscoIsnsIpNetDiscoveryMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 434, 0))
ciscoIsnsIpNetDiscoveryMIBObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 434, 1))
ciscoIsnsIpNetDiscoveryConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 434, 2))
ciscoIsnsIpNetDiscoveryMIBInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 1))
ciscoIsnsIpNetDiscoveryMIBConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 2))
ciscoIsnsIpNetAutomaticDiscovery = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoIsnsIpNetAutomaticDiscovery.setStatus('current')
ciscoIsnsIpNetDiscoveryInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5184000)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoIsnsIpNetDiscoveryInterval.setStatus('current')
ciscoIsnsIpNetTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 1, 3), )
if mibBuilder.loadTexts: ciscoIsnsIpNetTable.setStatus('current')
ciscoIsnsIpNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-ISNS-IP-NW-DISCOVERY-MIB", "ciscoIsnsIpNetName"))
if mibBuilder.loadTexts: ciscoIsnsIpNetEntry.setStatus('current')
ciscoIsnsIpNetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 1, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 100)))
if mibBuilder.loadTexts: ciscoIsnsIpNetName.setStatus('current')
ciscoIsnsIpNetDiscoveryMechanism = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("autoGenerated", 1), ("userConfigured", 2))).clone('userConfigured')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoIsnsIpNetDiscoveryMechanism.setStatus('current')
ciscoIsnsIpNetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoIsnsIpNetRowStatus.setStatus('current')
ciscoIsnsIpNetInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 1, 4), )
if mibBuilder.loadTexts: ciscoIsnsIpNetInterfaceTable.setStatus('current')
ciscoIsnsIpNetInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-ISNS-IP-NW-DISCOVERY-MIB", "ciscoIsnsIpNetName"), (0, "CISCO-ISNS-IP-NW-DISCOVERY-MIB", "ciscoIsnsGigEPortDeviceName"), (0, "CISCO-ISNS-IP-NW-DISCOVERY-MIB", "ciscoIsnsGigEPortIfIndex"))
if mibBuilder.loadTexts: ciscoIsnsIpNetInterfaceEntry.setStatus('current')
ciscoIsnsGigEPortDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 1, 4, 1, 1), FcNameId())
if mibBuilder.loadTexts: ciscoIsnsGigEPortDeviceName.setStatus('current')
ciscoIsnsGigEPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 1, 4, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: ciscoIsnsGigEPortIfIndex.setStatus('current')
ciscoIsnsIpNetInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoIsnsIpNetInterfaceRowStatus.setStatus('current')
ciscoIsnsIpNetDiscoverySpinLock = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 2, 1), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoIsnsIpNetDiscoverySpinLock.setStatus('current')
ciscoIsnsIpNetToDiscover = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 2, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoIsnsIpNetToDiscover.setStatus('current')
ciscoIsnsGigEInterfaceToDiscover = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 2, 3), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoIsnsGigEInterfaceToDiscover.setStatus('current')
ciscoIsnsIpNetDiscoveryCommand = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("all", 1), ("noOp", 2), ("ipNetworkSpecific", 3), ("interfaceSpecific", 4))).clone('noOp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoIsnsIpNetDiscoveryCommand.setStatus('current')
ciscoIsnsIpNetDiscoveryCmdStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 434, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("success", 1), ("none", 2), ("inProgress", 3), ("noIpNetworkNameSpecified", 4), ("invalidIpNetworkName", 5), ("noGigEInterfaceIndexSpecified", 6), ("invalidGigEInterfaceIndex", 7), ("generalFailure", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoIsnsIpNetDiscoveryCmdStatus.setStatus('current')
ciscoIsnsIpNetDiscoverCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 434, 2, 1))
ciscoIsnsIpNetDiscoveryMIBComp = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 434, 2, 1, 1)).setObjects(("CISCO-ISNS-IP-NW-DISCOVERY-MIB", "ciscoIsnsIpNetDiscoveryInfoGroup"), ("CISCO-ISNS-IP-NW-DISCOVERY-MIB", "ciscoIsnsIpNetDiscoveryCfgGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIsnsIpNetDiscoveryMIBComp = ciscoIsnsIpNetDiscoveryMIBComp.setStatus('current')
ciscoIsnsIpNetDiscoveryMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 434, 2, 2))
ciscoIsnsIpNetDiscoveryInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 434, 2, 2, 1)).setObjects(("CISCO-ISNS-IP-NW-DISCOVERY-MIB", "ciscoIsnsIpNetAutomaticDiscovery"), ("CISCO-ISNS-IP-NW-DISCOVERY-MIB", "ciscoIsnsIpNetDiscoveryInterval"), ("CISCO-ISNS-IP-NW-DISCOVERY-MIB", "ciscoIsnsIpNetDiscoveryMechanism"), ("CISCO-ISNS-IP-NW-DISCOVERY-MIB", "ciscoIsnsIpNetRowStatus"), ("CISCO-ISNS-IP-NW-DISCOVERY-MIB", "ciscoIsnsIpNetInterfaceRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIsnsIpNetDiscoveryInfoGroup = ciscoIsnsIpNetDiscoveryInfoGroup.setStatus('current')
ciscoIsnsIpNetDiscoveryCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 434, 2, 2, 2)).setObjects(("CISCO-ISNS-IP-NW-DISCOVERY-MIB", "ciscoIsnsIpNetDiscoverySpinLock"), ("CISCO-ISNS-IP-NW-DISCOVERY-MIB", "ciscoIsnsIpNetToDiscover"), ("CISCO-ISNS-IP-NW-DISCOVERY-MIB", "ciscoIsnsGigEInterfaceToDiscover"), ("CISCO-ISNS-IP-NW-DISCOVERY-MIB", "ciscoIsnsIpNetDiscoveryCommand"), ("CISCO-ISNS-IP-NW-DISCOVERY-MIB", "ciscoIsnsIpNetDiscoveryCmdStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIsnsIpNetDiscoveryCfgGroup = ciscoIsnsIpNetDiscoveryCfgGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-ISNS-IP-NW-DISCOVERY-MIB", ciscoIsnsIpNetDiscoveryConform=ciscoIsnsIpNetDiscoveryConform, ciscoIsnsIpNetDiscoveryMIBGroups=ciscoIsnsIpNetDiscoveryMIBGroups, ciscoIsnsIpNetDiscoveryMIBInfo=ciscoIsnsIpNetDiscoveryMIBInfo, ciscoIsnsIpNetAutomaticDiscovery=ciscoIsnsIpNetAutomaticDiscovery, ciscoIsnsIpNetDiscoveryMIBConfig=ciscoIsnsIpNetDiscoveryMIBConfig, ciscoIsnsIpNetInterfaceEntry=ciscoIsnsIpNetInterfaceEntry, ciscoIsnsIpNetDiscoverCompliance=ciscoIsnsIpNetDiscoverCompliance, ciscoIsnsIpNetDiscoveryInfoGroup=ciscoIsnsIpNetDiscoveryInfoGroup, ciscoIsnsGigEInterfaceToDiscover=ciscoIsnsGigEInterfaceToDiscover, ciscoIsnsIpNetDiscoveryMIBObjs=ciscoIsnsIpNetDiscoveryMIBObjs, ciscoIsnsIpNetDiscoveryMechanism=ciscoIsnsIpNetDiscoveryMechanism, ciscoIsnsIpNetDiscoveryMIBComp=ciscoIsnsIpNetDiscoveryMIBComp, ciscoIsnsGigEPortDeviceName=ciscoIsnsGigEPortDeviceName, ciscoIsnsIpNetDiscoveryCfgGroup=ciscoIsnsIpNetDiscoveryCfgGroup, ciscoIsnsIpNetDiscoveryCommand=ciscoIsnsIpNetDiscoveryCommand, ciscoIsnsGigEPortIfIndex=ciscoIsnsGigEPortIfIndex, ciscoIsnsIpNetDiscoveryMIBNotifs=ciscoIsnsIpNetDiscoveryMIBNotifs, ciscoIsnsIpNetDiscoverySpinLock=ciscoIsnsIpNetDiscoverySpinLock, ciscoIsnsIpNetToDiscover=ciscoIsnsIpNetToDiscover, ciscoIsnsIpNetDiscoveryMIB=ciscoIsnsIpNetDiscoveryMIB, ciscoIsnsIpNetDiscoveryInterval=ciscoIsnsIpNetDiscoveryInterval, ciscoIsnsIpNetRowStatus=ciscoIsnsIpNetRowStatus, PYSNMP_MODULE_ID=ciscoIsnsIpNetDiscoveryMIB, ciscoIsnsIpNetEntry=ciscoIsnsIpNetEntry, ciscoIsnsIpNetDiscoveryCmdStatus=ciscoIsnsIpNetDiscoveryCmdStatus, ciscoIsnsIpNetInterfaceRowStatus=ciscoIsnsIpNetInterfaceRowStatus, ciscoIsnsIpNetName=ciscoIsnsIpNetName, ciscoIsnsIpNetInterfaceTable=ciscoIsnsIpNetInterfaceTable, ciscoIsnsIpNetTable=ciscoIsnsIpNetTable)
