#
# PySNMP MIB module WF-HTTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WF-HTTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:29:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, Integer32, ObjectIdentity, MibIdentifier, iso, Counter32, Gauge32, ModuleIdentity, Unsigned32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "Integer32", "ObjectIdentity", "MibIdentifier", "iso", "Counter32", "Gauge32", "ModuleIdentity", "Unsigned32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfHttpGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfHttpGroup")
wfHttp = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1))
wfHttpSrv = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 1))
wfHttpSrvDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHttpSrvDelete.setStatus('mandatory')
wfHttpSrvDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHttpSrvDisable.setStatus('mandatory')
wfHttpSrvState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpSrvState.setStatus('mandatory')
wfHttpSrvPort = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHttpSrvPort.setStatus('mandatory')
wfHttpSrvMaxCacheCount = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHttpSrvMaxCacheCount.setStatus('mandatory')
wfHttpSrvMaxCacheAge = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHttpSrvMaxCacheAge.setStatus('mandatory')
wfHttpSrvAuthType = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("basic", 1), ("digest", 2))).clone('basic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHttpSrvAuthType.setStatus('mandatory')
wfHttpSrvHostName = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHttpSrvHostName.setStatus('mandatory')
wfHttpSrvHelpBaseUrl = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 1, 9), DisplayString().clone('http://support.baynetworks.com/library/tpubs/')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHttpSrvHelpBaseUrl.setStatus('mandatory')
wfHttpStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2))
wfHttpSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 1))
wfHttpSummaryRequests = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpSummaryRequests.setStatus('mandatory')
wfHttpSummaryRequestErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpSummaryRequestErrors.setStatus('mandatory')
wfHttpSummaryRequestDiscards = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpSummaryRequestDiscards.setStatus('mandatory')
wfHttpSummaryResponses = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpSummaryResponses.setStatus('mandatory')
wfHttpSummaryResponseErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpSummaryResponseErrors.setStatus('mandatory')
wfHttpSummaryResponseDiscards = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpSummaryResponseDiscards.setStatus('mandatory')
wfHttpSummaryInUnknowns = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpSummaryInUnknowns.setStatus('mandatory')
wfHttpSummaryInBytes = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpSummaryInBytes.setStatus('mandatory')
wfHttpSummaryOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpSummaryOutBytes.setStatus('mandatory')
wfHttpSummaryTimeOuts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpSummaryTimeOuts.setStatus('mandatory')
wfHttpSummaryStartTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpSummaryStartTime.setStatus('mandatory')
wfHttpRequestTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 2), )
if mibBuilder.loadTexts: wfHttpRequestTable.setStatus('mandatory')
wfHttpRequestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 2, 1), ).setIndexNames((0, "WF-HTTP-MIB", "wfHttpRequestMethodIndex"))
if mibBuilder.loadTexts: wfHttpRequestEntry.setStatus('mandatory')
wfHttpRequestMethodIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("get", 1), ("head", 2), ("trace", 3), ("post", 4), ("options", 5), ("put", 6), ("delete", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpRequestMethodIndex.setStatus('mandatory')
wfHttpRequestInCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpRequestInCount.setStatus('mandatory')
wfHttpRequestInLastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 2, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpRequestInLastTime.setStatus('mandatory')
wfHttpRequestOutCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpRequestOutCount.setStatus('mandatory')
wfHttpRequestOutLastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 2, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpRequestOutLastTime.setStatus('mandatory')
wfHttpResponseTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 3), )
if mibBuilder.loadTexts: wfHttpResponseTable.setStatus('mandatory')
wfHttpResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 3, 1), ).setIndexNames((0, "WF-HTTP-MIB", "wfHttpResponseStatusIndex"))
if mibBuilder.loadTexts: wfHttpResponseEntry.setStatus('mandatory')
wfHttpResponseStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(200, 201, 202, 204, 301, 302, 304, 400, 401, 403, 404, 500, 501, 502, 503))).clone(namedValues=NamedValues(("ok", 200), ("created", 201), ("accepted", 202), ("no-content", 204), ("moved-permanently", 301), ("moved-temporarily", 302), ("not-modified", 304), ("bad-request", 400), ("unauthorized", 401), ("forbidden", 403), ("not-found", 404), ("internal-server-error", 500), ("not-implemented", 501), ("bad-gateway", 502), ("service-unavailable", 503)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpResponseStatusIndex.setStatus('mandatory')
wfHttpResponseInCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpResponseInCount.setStatus('mandatory')
wfHttpResponseInLastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 3, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpResponseInLastTime.setStatus('mandatory')
wfHttpResponseOutCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpResponseOutCount.setStatus('mandatory')
wfHttpResponseOutLastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 22, 1, 2, 3, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHttpResponseOutLastTime.setStatus('mandatory')
mibBuilder.exportSymbols("WF-HTTP-MIB", wfHttpRequestEntry=wfHttpRequestEntry, wfHttpSrvHelpBaseUrl=wfHttpSrvHelpBaseUrl, wfHttpResponseOutLastTime=wfHttpResponseOutLastTime, wfHttpRequestOutLastTime=wfHttpRequestOutLastTime, wfHttpSummaryRequests=wfHttpSummaryRequests, wfHttpRequestInCount=wfHttpRequestInCount, wfHttpSummaryInBytes=wfHttpSummaryInBytes, wfHttpSummaryOutBytes=wfHttpSummaryOutBytes, wfHttpSrvMaxCacheCount=wfHttpSrvMaxCacheCount, wfHttpRequestOutCount=wfHttpRequestOutCount, wfHttpSrvPort=wfHttpSrvPort, wfHttpRequestInLastTime=wfHttpRequestInLastTime, wfHttpSummaryRequestErrors=wfHttpSummaryRequestErrors, wfHttpResponseInCount=wfHttpResponseInCount, wfHttpSrvMaxCacheAge=wfHttpSrvMaxCacheAge, wfHttpSrv=wfHttpSrv, wfHttpSummaryInUnknowns=wfHttpSummaryInUnknowns, wfHttpResponseInLastTime=wfHttpResponseInLastTime, wfHttpSummaryTimeOuts=wfHttpSummaryTimeOuts, wfHttpResponseStatusIndex=wfHttpResponseStatusIndex, wfHttpRequestMethodIndex=wfHttpRequestMethodIndex, wfHttpStatistics=wfHttpStatistics, wfHttpSummaryRequestDiscards=wfHttpSummaryRequestDiscards, wfHttpSummary=wfHttpSummary, wfHttpSrvHostName=wfHttpSrvHostName, wfHttpSrvDelete=wfHttpSrvDelete, wfHttpSrvState=wfHttpSrvState, wfHttpSrvDisable=wfHttpSrvDisable, wfHttpSummaryResponseErrors=wfHttpSummaryResponseErrors, wfHttpResponseEntry=wfHttpResponseEntry, wfHttpSrvAuthType=wfHttpSrvAuthType, wfHttp=wfHttp, wfHttpSummaryResponseDiscards=wfHttpSummaryResponseDiscards, wfHttpRequestTable=wfHttpRequestTable, wfHttpSummaryStartTime=wfHttpSummaryStartTime, wfHttpResponseOutCount=wfHttpResponseOutCount, wfHttpResponseTable=wfHttpResponseTable, wfHttpSummaryResponses=wfHttpSummaryResponses)
