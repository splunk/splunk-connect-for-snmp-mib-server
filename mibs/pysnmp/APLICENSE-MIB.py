#
# PySNMP MIB module APLICENSE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APLICENSE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:07:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
acmepacketMgmt, = mibBuilder.importSymbols("ACMEPACKET-SMI", "acmepacketMgmt")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64, TimeTicks, Counter32, Gauge32, IpAddress, ModuleIdentity, NotificationType, Unsigned32, iso, ObjectIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64", "TimeTicks", "Counter32", "Gauge32", "IpAddress", "ModuleIdentity", "NotificationType", "Unsigned32", "iso", "ObjectIdentity", "MibIdentifier")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
apLicenseModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 9148, 3, 5))
apLicenseModule.setRevisions(('2012-07-16 00:00',))
if mibBuilder.loadTexts: apLicenseModule.setLastUpdated('201207160000Z')
if mibBuilder.loadTexts: apLicenseModule.setOrganization('Acme Packet, Inc')
apLicenseMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1))
apLicenseTable = MibTable((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1), )
if mibBuilder.loadTexts: apLicenseTable.setStatus('current')
apLicenseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1), ).setIndexNames((0, "APLICENSE-MIB", "apLicenseIndex"))
if mibBuilder.loadTexts: apLicenseEntry.setStatus('current')
apLicenseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: apLicenseIndex.setStatus('current')
apLicenseKey = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseKey.setStatus('current')
apLicenseCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseCapacity.setStatus('current')
apLicenseInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseInstallDate.setStatus('current')
apLicenseBeginDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseBeginDate.setStatus('current')
apLicenseExpireDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseExpireDate.setStatus('current')
apLicenseSIPFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseSIPFeature.setStatus('current')
apLicenseMGCPFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseMGCPFeature.setStatus('current')
apLicenseH323Feature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseH323Feature.setStatus('current')
apLicenseIWFFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseIWFFeature.setStatus('current')
apLicenseQOSFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseQOSFeature.setStatus('current')
apLicenseACPFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseACPFeature.setStatus('current')
apLicenseLPFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseLPFeature.setStatus('current')
apLicenseSAGFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseSAGFeature.setStatus('current')
apLicenseACCTFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseACCTFeature.setStatus('current')
apLicenseHAFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseHAFeature.setStatus('current')
apLicensePACFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicensePACFeature.setStatus('current')
apLicenseIKEFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseIKEFeature.setStatus('current')
apLicenseIPsecTunCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseIPsecTunCap.setStatus('current')
apLicenseAuthFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseAuthFeature.setStatus('current')
apLicenseDatabaseRegFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseDatabaseRegFeature.setStatus('current')
apLicenseDatabaseRegCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseDatabaseRegCap.setStatus('current')
apLicenseSLBEndpointCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseSLBEndpointCap.setStatus('current')
apLicenseNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 5, 2))
apLicenseExpirationWarningAcliIndex = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 5, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apLicenseExpirationWarningAcliIndex.setStatus('current')
apLicenseExpirationWarningSnmpIndex = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 5, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apLicenseExpirationWarningSnmpIndex.setStatus('current')
apLicenseExpirationWarningKey = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 5, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apLicenseExpirationWarningKey.setStatus('current')
apLicenseExpirationWarningDays = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 5, 2, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apLicenseExpirationWarningDays.setStatus('current')
apLicenseNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 5, 3))
apLicenseNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 5, 3, 0))
apLicenseApproachingCapacityNotification = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 5, 3, 0, 1))
if mibBuilder.loadTexts: apLicenseApproachingCapacityNotification.setStatus('current')
apLicenseNotApproachingCapacityNotification = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 5, 3, 0, 2))
if mibBuilder.loadTexts: apLicenseNotApproachingCapacityNotification.setStatus('current')
apLicenseExpirationWarningNotification = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 5, 3, 0, 3)).setObjects(("APLICENSE-MIB", "apLicenseExpirationWarningAcliIndex"), ("APLICENSE-MIB", "apLicenseExpirationWarningSnmpIndex"), ("APLICENSE-MIB", "apLicenseExpirationWarningKey"), ("APLICENSE-MIB", "apLicenseExpirationWarningDays"))
if mibBuilder.loadTexts: apLicenseExpirationWarningNotification.setStatus('current')
apLicenseConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 5, 4))
apLicenseCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 5, 4, 1))
apLicenseGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 5, 4, 2))
apLicenseNotificationsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 5, 4, 3))
apLicenseObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 5, 4, 2, 1)).setObjects(("APLICENSE-MIB", "apLicenseKey"), ("APLICENSE-MIB", "apLicenseCapacity"), ("APLICENSE-MIB", "apLicenseInstallDate"), ("APLICENSE-MIB", "apLicenseBeginDate"), ("APLICENSE-MIB", "apLicenseExpireDate"), ("APLICENSE-MIB", "apLicenseSIPFeature"), ("APLICENSE-MIB", "apLicenseMGCPFeature"), ("APLICENSE-MIB", "apLicenseH323Feature"), ("APLICENSE-MIB", "apLicenseIWFFeature"), ("APLICENSE-MIB", "apLicenseQOSFeature"), ("APLICENSE-MIB", "apLicenseACPFeature"), ("APLICENSE-MIB", "apLicenseLPFeature"), ("APLICENSE-MIB", "apLicenseSAGFeature"), ("APLICENSE-MIB", "apLicenseACCTFeature"), ("APLICENSE-MIB", "apLicenseHAFeature"), ("APLICENSE-MIB", "apLicensePACFeature"), ("APLICENSE-MIB", "apLicenseIKEFeature"), ("APLICENSE-MIB", "apLicenseIPsecTunCap"), ("APLICENSE-MIB", "apLicenseSLBEndpointCap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apLicenseObjectsGroup = apLicenseObjectsGroup.setStatus('current')
apLicenseDatabaseRegGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 5, 4, 2, 2)).setObjects(("APLICENSE-MIB", "apLicenseAuthFeature"), ("APLICENSE-MIB", "apLicenseDatabaseRegFeature"), ("APLICENSE-MIB", "apLicenseDatabaseRegCap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apLicenseDatabaseRegGroup = apLicenseDatabaseRegGroup.setStatus('current')
apLicenseNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9148, 3, 5, 4, 3, 1)).setObjects(("APLICENSE-MIB", "apLicenseApproachingCapacityNotification"), ("APLICENSE-MIB", "apLicenseNotApproachingCapacityNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apLicenseNotificationsGroup = apLicenseNotificationsGroup.setStatus('current')
apLicenseExpirationNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9148, 3, 5, 4, 3, 2)).setObjects(("APLICENSE-MIB", "apLicenseExpirationWarningNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apLicenseExpirationNotificationsGroup = apLicenseExpirationNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("APLICENSE-MIB", apLicenseModule=apLicenseModule, apLicenseACPFeature=apLicenseACPFeature, apLicenseExpirationWarningSnmpIndex=apLicenseExpirationWarningSnmpIndex, apLicenseDatabaseRegGroup=apLicenseDatabaseRegGroup, apLicenseBeginDate=apLicenseBeginDate, apLicenseH323Feature=apLicenseH323Feature, apLicenseEntry=apLicenseEntry, apLicenseDatabaseRegFeature=apLicenseDatabaseRegFeature, apLicenseCapacity=apLicenseCapacity, apLicenseHAFeature=apLicenseHAFeature, apLicenseNotificationPrefix=apLicenseNotificationPrefix, apLicenseMGCPFeature=apLicenseMGCPFeature, apLicenseNotificationsGroup=apLicenseNotificationsGroup, apLicensePACFeature=apLicensePACFeature, apLicenseExpirationNotificationsGroup=apLicenseExpirationNotificationsGroup, apLicenseIPsecTunCap=apLicenseIPsecTunCap, apLicenseIWFFeature=apLicenseIWFFeature, apLicenseExpirationWarningAcliIndex=apLicenseExpirationWarningAcliIndex, apLicenseSIPFeature=apLicenseSIPFeature, apLicenseInstallDate=apLicenseInstallDate, apLicenseSAGFeature=apLicenseSAGFeature, apLicenseSLBEndpointCap=apLicenseSLBEndpointCap, apLicenseLPFeature=apLicenseLPFeature, apLicenseExpirationWarningNotification=apLicenseExpirationWarningNotification, apLicenseGroups=apLicenseGroups, apLicenseObjectsGroup=apLicenseObjectsGroup, apLicenseApproachingCapacityNotification=apLicenseApproachingCapacityNotification, apLicenseNotifications=apLicenseNotifications, apLicenseIKEFeature=apLicenseIKEFeature, PYSNMP_MODULE_ID=apLicenseModule, apLicenseKey=apLicenseKey, apLicenseExpireDate=apLicenseExpireDate, apLicenseExpirationWarningDays=apLicenseExpirationWarningDays, apLicenseIndex=apLicenseIndex, apLicenseCompliances=apLicenseCompliances, apLicenseQOSFeature=apLicenseQOSFeature, apLicenseDatabaseRegCap=apLicenseDatabaseRegCap, apLicenseNotificationObjects=apLicenseNotificationObjects, apLicenseMIBObjects=apLicenseMIBObjects, apLicenseTable=apLicenseTable, apLicenseNotificationsGroups=apLicenseNotificationsGroups, apLicenseExpirationWarningKey=apLicenseExpirationWarningKey, apLicenseConformance=apLicenseConformance, apLicenseNotApproachingCapacityNotification=apLicenseNotApproachingCapacityNotification, apLicenseAuthFeature=apLicenseAuthFeature, apLicenseACCTFeature=apLicenseACCTFeature)
