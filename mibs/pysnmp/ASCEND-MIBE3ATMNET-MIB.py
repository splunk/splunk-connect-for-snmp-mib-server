#
# PySNMP MIB module ASCEND-MIBE3ATMNET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBE3ATMNET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:11:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, MibIdentifier, ObjectIdentity, iso, Bits, Gauge32, NotificationType, Integer32, Unsigned32, Counter32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "MibIdentifier", "ObjectIdentity", "iso", "Bits", "Gauge32", "NotificationType", "Integer32", "Unsigned32", "Counter32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DisplayString(OctetString):
    pass

mibe3AtmNetworkProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 15))
mibe3AtmNetworkProfileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 15, 1), )
if mibBuilder.loadTexts: mibe3AtmNetworkProfileTable.setStatus('mandatory')
mibe3AtmNetworkProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1), ).setIndexNames((0, "ASCEND-MIBE3ATMNET-MIB", "e3AtmNetworkProfile-Shelf-o"), (0, "ASCEND-MIBE3ATMNET-MIB", "e3AtmNetworkProfile-Slot-o"), (0, "ASCEND-MIBE3ATMNET-MIB", "e3AtmNetworkProfile-Item-o"))
if mibBuilder.loadTexts: mibe3AtmNetworkProfileEntry.setStatus('mandatory')
e3AtmNetworkProfile_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 1), Integer32()).setLabel("e3AtmNetworkProfile-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmNetworkProfile_Shelf_o.setStatus('mandatory')
e3AtmNetworkProfile_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 2), Integer32()).setLabel("e3AtmNetworkProfile-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmNetworkProfile_Slot_o.setStatus('mandatory')
e3AtmNetworkProfile_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 3), Integer32()).setLabel("e3AtmNetworkProfile-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmNetworkProfile_Item_o.setStatus('mandatory')
e3AtmNetworkProfile_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 4), DisplayString()).setLabel("e3AtmNetworkProfile-Name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_Name.setStatus('mandatory')
e3AtmNetworkProfile_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("e3AtmNetworkProfile-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_PhysicalAddress_Shelf.setStatus('mandatory')
e3AtmNetworkProfile_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("e3AtmNetworkProfile-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_PhysicalAddress_Slot.setStatus('mandatory')
e3AtmNetworkProfile_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 7), Integer32()).setLabel("e3AtmNetworkProfile-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_PhysicalAddress_ItemNumber.setStatus('mandatory')
e3AtmNetworkProfile_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("e3AtmNetworkProfile-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_Enabled.setStatus('mandatory')
e3AtmNetworkProfile_IgnoreLineup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("systemDefined", 1), ("no", 2), ("yes", 3)))).setLabel("e3AtmNetworkProfile-IgnoreLineup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_IgnoreLineup.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_TrunkGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 9), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-TrunkGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_TrunkGroup.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_NailedGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 10), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-NailedGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_NailedGroup.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_Loopback = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noLoopback", 1), ("facilityLoopback", 2), ("localLoopback", 3)))).setLabel("e3AtmNetworkProfile-LineConfig-Loopback").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_Loopback.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_HighTxOutput = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("e3AtmNetworkProfile-LineConfig-HighTxOutput").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_HighTxOutput.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_ReceiveEqualization = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("e3AtmNetworkProfile-LineConfig-ReceiveEqualization").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_ReceiveEqualization.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_FramerMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("g751Adm", 1), ("g751Plcp", 2), ("g832Adm", 3), ("g832AdmFrameLocked", 4), ("g832AdmLoopTimed", 5)))).setLabel("e3AtmNetworkProfile-LineConfig-FramerMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_FramerMode.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_VpiVciRange = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n-01-3232767", 1), ("n-03-3216383", 2), ("n-07-328191", 3), ("n-015-324095", 4), ("n-031-322047", 5), ("n-063-321023", 6), ("n-0127-32511", 7), ("n-0255-32255", 8), ("vpi0255Vci32255", 9), ("vpi0255Vci32511", 10), ("vpi0255Vci321023", 11), ("vpi0255Vci322047", 12), ("vpi0255Vci324095", 13), ("vpi0255Vci328191", 14), ("vpi0255Vci3216383", 15)))).setLabel("e3AtmNetworkProfile-LineConfig-VpiVciRange").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_VpiVciRange.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_ClockSource = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eligible", 1), ("notEligible", 2)))).setLabel("e3AtmNetworkProfile-LineConfig-ClockSource").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_ClockSource.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_ClockPriority = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("highPriority", 2), ("middlePriority", 3), ("lowPriority", 4)))).setLabel("e3AtmNetworkProfile-LineConfig-ClockPriority").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_ClockPriority.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_CellPayloadScramble = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("e3AtmNetworkProfile-LineConfig-CellPayloadScramble").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_CellPayloadScramble.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_StatusChangeTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("e3AtmNetworkProfile-LineConfig-StatusChangeTrapEnable").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_StatusChangeTrapEnable.setStatus('mandatory')
e3AtmNetworkProfile_SparePhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("e3AtmNetworkProfile-SparePhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_SparePhysicalAddress_Shelf.setStatus('mandatory')
e3AtmNetworkProfile_SparePhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("e3AtmNetworkProfile-SparePhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_SparePhysicalAddress_Slot.setStatus('mandatory')
e3AtmNetworkProfile_SparePhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 25), Integer32()).setLabel("e3AtmNetworkProfile-SparePhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_SparePhysicalAddress_ItemNumber.setStatus('mandatory')
e3AtmNetworkProfile_SparingMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("manual", 2), ("automatic", 3)))).setLabel("e3AtmNetworkProfile-SparingMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_SparingMode.setStatus('mandatory')
e3AtmNetworkProfile_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("e3AtmNetworkProfile-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_Action_o.setStatus('mandatory')
mibe3AtmNetworkProfile_LineConfig_TrafficShapersTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 15, 2), ).setLabel("mibe3AtmNetworkProfile-LineConfig-TrafficShapersTable")
if mibBuilder.loadTexts: mibe3AtmNetworkProfile_LineConfig_TrafficShapersTable.setStatus('mandatory')
mibe3AtmNetworkProfile_LineConfig_TrafficShapersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 15, 2, 1), ).setLabel("mibe3AtmNetworkProfile-LineConfig-TrafficShapersEntry").setIndexNames((0, "ASCEND-MIBE3ATMNET-MIB", "e3AtmNetworkProfile-LineConfig-TrafficShapers-Shelf-o"), (0, "ASCEND-MIBE3ATMNET-MIB", "e3AtmNetworkProfile-LineConfig-TrafficShapers-Slot-o"), (0, "ASCEND-MIBE3ATMNET-MIB", "e3AtmNetworkProfile-LineConfig-TrafficShapers-Item-o"), (0, "ASCEND-MIBE3ATMNET-MIB", "e3AtmNetworkProfile-LineConfig-TrafficShapers-Index-o"))
if mibBuilder.loadTexts: mibe3AtmNetworkProfile_LineConfig_TrafficShapersEntry.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_TrafficShapers_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 2, 1, 1), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-TrafficShapers-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_TrafficShapers_Shelf_o.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_TrafficShapers_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 2, 1, 2), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-TrafficShapers-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_TrafficShapers_Slot_o.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_TrafficShapers_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 2, 1, 3), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-TrafficShapers-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_TrafficShapers_Item_o.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_TrafficShapers_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 2, 1, 4), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-TrafficShapers-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_TrafficShapers_Index_o.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_TrafficShapers_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("e3AtmNetworkProfile-LineConfig-TrafficShapers-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_TrafficShapers_Enabled.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_TrafficShapers_BitRate = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 2, 1, 6), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-TrafficShapers-BitRate").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_TrafficShapers_BitRate.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_TrafficShapers_PeakRate = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 2, 1, 7), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-TrafficShapers-PeakRate").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_TrafficShapers_PeakRate.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_TrafficShapers_MaxBurstSize = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 2, 1, 8), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-TrafficShapers-MaxBurstSize").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_TrafficShapers_MaxBurstSize.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_TrafficShapers_Aggregate = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("e3AtmNetworkProfile-LineConfig-TrafficShapers-Aggregate").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_TrafficShapers_Aggregate.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_TrafficShapers_Priority = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 2, 1, 10), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-TrafficShapers-Priority").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_TrafficShapers_Priority.setStatus('mandatory')
mibe3AtmNetworkProfile_LineConfig_IncomingVCCsTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 15, 3), ).setLabel("mibe3AtmNetworkProfile-LineConfig-IncomingVCCsTable")
if mibBuilder.loadTexts: mibe3AtmNetworkProfile_LineConfig_IncomingVCCsTable.setStatus('mandatory')
mibe3AtmNetworkProfile_LineConfig_IncomingVCCsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 15, 3, 1), ).setLabel("mibe3AtmNetworkProfile-LineConfig-IncomingVCCsEntry").setIndexNames((0, "ASCEND-MIBE3ATMNET-MIB", "e3AtmNetworkProfile-LineConfig-IncomingVCCs-Shelf-o"), (0, "ASCEND-MIBE3ATMNET-MIB", "e3AtmNetworkProfile-LineConfig-IncomingVCCs-Slot-o"), (0, "ASCEND-MIBE3ATMNET-MIB", "e3AtmNetworkProfile-LineConfig-IncomingVCCs-Item-o"), (0, "ASCEND-MIBE3ATMNET-MIB", "e3AtmNetworkProfile-LineConfig-IncomingVCCs-Index-o"))
if mibBuilder.loadTexts: mibe3AtmNetworkProfile_LineConfig_IncomingVCCsEntry.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_IncomingVCCs_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 3, 1, 1), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-IncomingVCCs-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_IncomingVCCs_Shelf_o.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_IncomingVCCs_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 3, 1, 2), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-IncomingVCCs-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_IncomingVCCs_Slot_o.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_IncomingVCCs_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 3, 1, 3), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-IncomingVCCs-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_IncomingVCCs_Item_o.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_IncomingVCCs_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 3, 1, 4), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-IncomingVCCs-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_IncomingVCCs_Index_o.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_IncomingVCCs_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("e3AtmNetworkProfile-LineConfig-IncomingVCCs-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_IncomingVCCs_Enabled.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_IncomingVCCs_Vpi = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 3, 1, 6), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-IncomingVCCs-Vpi").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_IncomingVCCs_Vpi.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_IncomingVCCs_StartVci = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 3, 1, 7), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-IncomingVCCs-StartVci").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_IncomingVCCs_StartVci.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_IncomingVCCs_EndVci = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 3, 1, 8), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-IncomingVCCs-EndVci").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_IncomingVCCs_EndVci.setStatus('mandatory')
mibe3AtmNetworkProfile_LineConfig_VcSwitchingVpiTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 15, 4), ).setLabel("mibe3AtmNetworkProfile-LineConfig-VcSwitchingVpiTable")
if mibBuilder.loadTexts: mibe3AtmNetworkProfile_LineConfig_VcSwitchingVpiTable.setStatus('mandatory')
mibe3AtmNetworkProfile_LineConfig_VcSwitchingVpiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 15, 4, 1), ).setLabel("mibe3AtmNetworkProfile-LineConfig-VcSwitchingVpiEntry").setIndexNames((0, "ASCEND-MIBE3ATMNET-MIB", "e3AtmNetworkProfile-LineConfig-VcSwitchingVpi-Shelf-o"), (0, "ASCEND-MIBE3ATMNET-MIB", "e3AtmNetworkProfile-LineConfig-VcSwitchingVpi-Slot-o"), (0, "ASCEND-MIBE3ATMNET-MIB", "e3AtmNetworkProfile-LineConfig-VcSwitchingVpi-Item-o"), (0, "ASCEND-MIBE3ATMNET-MIB", "e3AtmNetworkProfile-LineConfig-VcSwitchingVpi-Index-o"))
if mibBuilder.loadTexts: mibe3AtmNetworkProfile_LineConfig_VcSwitchingVpiEntry.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_VcSwitchingVpi_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 4, 1, 1), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-VcSwitchingVpi-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_VcSwitchingVpi_Shelf_o.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_VcSwitchingVpi_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 4, 1, 2), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-VcSwitchingVpi-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_VcSwitchingVpi_Slot_o.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_VcSwitchingVpi_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 4, 1, 3), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-VcSwitchingVpi-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_VcSwitchingVpi_Item_o.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_VcSwitchingVpi_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 4, 1, 4), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-VcSwitchingVpi-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_VcSwitchingVpi_Index_o.setStatus('mandatory')
e3AtmNetworkProfile_LineConfig_VcSwitchingVpi = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 15, 4, 1, 5), Integer32()).setLabel("e3AtmNetworkProfile-LineConfig-VcSwitchingVpi").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmNetworkProfile_LineConfig_VcSwitchingVpi.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-MIBE3ATMNET-MIB", e3AtmNetworkProfile_LineConfig_VcSwitchingVpi_Index_o=e3AtmNetworkProfile_LineConfig_VcSwitchingVpi_Index_o, mibe3AtmNetworkProfileEntry=mibe3AtmNetworkProfileEntry, e3AtmNetworkProfile_SparePhysicalAddress_ItemNumber=e3AtmNetworkProfile_SparePhysicalAddress_ItemNumber, e3AtmNetworkProfile_LineConfig_TrafficShapers_Priority=e3AtmNetworkProfile_LineConfig_TrafficShapers_Priority, e3AtmNetworkProfile_LineConfig_IncomingVCCs_Enabled=e3AtmNetworkProfile_LineConfig_IncomingVCCs_Enabled, e3AtmNetworkProfile_LineConfig_VcSwitchingVpi=e3AtmNetworkProfile_LineConfig_VcSwitchingVpi, mibe3AtmNetworkProfile_LineConfig_IncomingVCCsEntry=mibe3AtmNetworkProfile_LineConfig_IncomingVCCsEntry, e3AtmNetworkProfile_SparingMode=e3AtmNetworkProfile_SparingMode, e3AtmNetworkProfile_LineConfig_VcSwitchingVpi_Shelf_o=e3AtmNetworkProfile_LineConfig_VcSwitchingVpi_Shelf_o, e3AtmNetworkProfile_Slot_o=e3AtmNetworkProfile_Slot_o, e3AtmNetworkProfile_LineConfig_FramerMode=e3AtmNetworkProfile_LineConfig_FramerMode, e3AtmNetworkProfile_LineConfig_TrafficShapers_Item_o=e3AtmNetworkProfile_LineConfig_TrafficShapers_Item_o, mibe3AtmNetworkProfile_LineConfig_VcSwitchingVpiTable=mibe3AtmNetworkProfile_LineConfig_VcSwitchingVpiTable, DisplayString=DisplayString, mibe3AtmNetworkProfileTable=mibe3AtmNetworkProfileTable, e3AtmNetworkProfile_PhysicalAddress_Slot=e3AtmNetworkProfile_PhysicalAddress_Slot, e3AtmNetworkProfile_LineConfig_IncomingVCCs_Item_o=e3AtmNetworkProfile_LineConfig_IncomingVCCs_Item_o, e3AtmNetworkProfile_LineConfig_NailedGroup=e3AtmNetworkProfile_LineConfig_NailedGroup, e3AtmNetworkProfile_LineConfig_TrafficShapers_Slot_o=e3AtmNetworkProfile_LineConfig_TrafficShapers_Slot_o, e3AtmNetworkProfile_LineConfig_TrafficShapers_PeakRate=e3AtmNetworkProfile_LineConfig_TrafficShapers_PeakRate, e3AtmNetworkProfile_LineConfig_TrafficShapers_MaxBurstSize=e3AtmNetworkProfile_LineConfig_TrafficShapers_MaxBurstSize, e3AtmNetworkProfile_LineConfig_IncomingVCCs_Vpi=e3AtmNetworkProfile_LineConfig_IncomingVCCs_Vpi, e3AtmNetworkProfile_LineConfig_TrunkGroup=e3AtmNetworkProfile_LineConfig_TrunkGroup, mibe3AtmNetworkProfile_LineConfig_TrafficShapersTable=mibe3AtmNetworkProfile_LineConfig_TrafficShapersTable, e3AtmNetworkProfile_Name=e3AtmNetworkProfile_Name, e3AtmNetworkProfile_LineConfig_IncomingVCCs_EndVci=e3AtmNetworkProfile_LineConfig_IncomingVCCs_EndVci, e3AtmNetworkProfile_Enabled=e3AtmNetworkProfile_Enabled, e3AtmNetworkProfile_LineConfig_StatusChangeTrapEnable=e3AtmNetworkProfile_LineConfig_StatusChangeTrapEnable, e3AtmNetworkProfile_LineConfig_IncomingVCCs_Shelf_o=e3AtmNetworkProfile_LineConfig_IncomingVCCs_Shelf_o, e3AtmNetworkProfile_Item_o=e3AtmNetworkProfile_Item_o, mibe3AtmNetworkProfile_LineConfig_VcSwitchingVpiEntry=mibe3AtmNetworkProfile_LineConfig_VcSwitchingVpiEntry, e3AtmNetworkProfile_IgnoreLineup=e3AtmNetworkProfile_IgnoreLineup, e3AtmNetworkProfile_LineConfig_ClockSource=e3AtmNetworkProfile_LineConfig_ClockSource, e3AtmNetworkProfile_LineConfig_TrafficShapers_Enabled=e3AtmNetworkProfile_LineConfig_TrafficShapers_Enabled, e3AtmNetworkProfile_LineConfig_VpiVciRange=e3AtmNetworkProfile_LineConfig_VpiVciRange, e3AtmNetworkProfile_SparePhysicalAddress_Shelf=e3AtmNetworkProfile_SparePhysicalAddress_Shelf, e3AtmNetworkProfile_LineConfig_Loopback=e3AtmNetworkProfile_LineConfig_Loopback, e3AtmNetworkProfile_PhysicalAddress_Shelf=e3AtmNetworkProfile_PhysicalAddress_Shelf, e3AtmNetworkProfile_LineConfig_TrafficShapers_Index_o=e3AtmNetworkProfile_LineConfig_TrafficShapers_Index_o, e3AtmNetworkProfile_LineConfig_IncomingVCCs_StartVci=e3AtmNetworkProfile_LineConfig_IncomingVCCs_StartVci, e3AtmNetworkProfile_Action_o=e3AtmNetworkProfile_Action_o, e3AtmNetworkProfile_LineConfig_ReceiveEqualization=e3AtmNetworkProfile_LineConfig_ReceiveEqualization, e3AtmNetworkProfile_PhysicalAddress_ItemNumber=e3AtmNetworkProfile_PhysicalAddress_ItemNumber, e3AtmNetworkProfile_LineConfig_CellPayloadScramble=e3AtmNetworkProfile_LineConfig_CellPayloadScramble, e3AtmNetworkProfile_LineConfig_TrafficShapers_Shelf_o=e3AtmNetworkProfile_LineConfig_TrafficShapers_Shelf_o, mibe3AtmNetworkProfile=mibe3AtmNetworkProfile, e3AtmNetworkProfile_LineConfig_VcSwitchingVpi_Item_o=e3AtmNetworkProfile_LineConfig_VcSwitchingVpi_Item_o, e3AtmNetworkProfile_Shelf_o=e3AtmNetworkProfile_Shelf_o, e3AtmNetworkProfile_LineConfig_ClockPriority=e3AtmNetworkProfile_LineConfig_ClockPriority, e3AtmNetworkProfile_LineConfig_TrafficShapers_Aggregate=e3AtmNetworkProfile_LineConfig_TrafficShapers_Aggregate, e3AtmNetworkProfile_SparePhysicalAddress_Slot=e3AtmNetworkProfile_SparePhysicalAddress_Slot, e3AtmNetworkProfile_LineConfig_IncomingVCCs_Slot_o=e3AtmNetworkProfile_LineConfig_IncomingVCCs_Slot_o, mibe3AtmNetworkProfile_LineConfig_TrafficShapersEntry=mibe3AtmNetworkProfile_LineConfig_TrafficShapersEntry, e3AtmNetworkProfile_LineConfig_IncomingVCCs_Index_o=e3AtmNetworkProfile_LineConfig_IncomingVCCs_Index_o, mibe3AtmNetworkProfile_LineConfig_IncomingVCCsTable=mibe3AtmNetworkProfile_LineConfig_IncomingVCCsTable, e3AtmNetworkProfile_LineConfig_VcSwitchingVpi_Slot_o=e3AtmNetworkProfile_LineConfig_VcSwitchingVpi_Slot_o, e3AtmNetworkProfile_LineConfig_TrafficShapers_BitRate=e3AtmNetworkProfile_LineConfig_TrafficShapers_BitRate, e3AtmNetworkProfile_LineConfig_HighTxOutput=e3AtmNetworkProfile_LineConfig_HighTxOutput)
