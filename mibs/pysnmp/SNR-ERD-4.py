#
# PySNMP MIB module SNR-ERD-4 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SNR-ERD-4
# Produced by pysmi-0.3.4 at Mon Apr 29 21:00:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, ObjectIdentity, Unsigned32, IpAddress, iso, Gauge32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ModuleIdentity, Counter32, enterprises, Bits, Counter64, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ObjectIdentity", "Unsigned32", "IpAddress", "iso", "Gauge32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ModuleIdentity", "Counter32", "enterprises", "Bits", "Counter64", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
snr = ModuleIdentity((1, 3, 6, 1, 4, 1, 40418))
snr.setRevisions(('2015-04-29 12:00',))
if mibBuilder.loadTexts: snr.setLastUpdated('201504291200Z')
if mibBuilder.loadTexts: snr.setOrganization('NAG ')
snr_erd = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2)).setLabel("snr-erd")
snr_erd_4 = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 6)).setLabel("snr-erd-4")
measurements = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1))
sensesstate = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 6, 2))
management = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 6, 3))
counters = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 6, 8))
options = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 6, 10))
snrSensors = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1))
temperatureSensors = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 1))
powerSensors = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2))
alarmSensCnts = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 6, 8, 2))
erd4Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0))
voltageSensor = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageSensor.setStatus('current')
serialS1 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialS1.setStatus('current')
serialS2 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialS2.setStatus('current')
serialS3 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialS3.setStatus('current')
serialS4 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialS4.setStatus('current')
serialS5 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialS5.setStatus('current')
serialS6 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialS6.setStatus('current')
serialS7 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialS7.setStatus('current')
serialS8 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 17), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialS8.setStatus('current')
serialS9 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 18), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialS9.setStatus('current')
serialS10 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 19), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialS10.setStatus('current')
temperatureS1 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureS1.setStatus('current')
temperatureS2 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureS2.setStatus('current')
temperatureS3 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureS3.setStatus('current')
temperatureS4 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureS4.setStatus('current')
temperatureS5 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureS5.setStatus('current')
temperatureS6 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureS6.setStatus('current')
temperatureS7 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureS7.setStatus('current')
temperatureS8 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureS8.setStatus('current')
temperatureS9 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureS9.setStatus('current')
temperatureS10 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureS10.setStatus('current')
voltageS1 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageS1.setStatus('current')
currentS1 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentS1.setStatus('current')
voltageS2 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageS2.setStatus('current')
currentS2 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentS2.setStatus('current')
voltageS3 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageS3.setStatus('current')
currentS3 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentS3.setStatus('current')
voltageS4 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageS4.setStatus('current')
currentS4 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentS4.setStatus('current')
voltageS5 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageS5.setStatus('current')
currentS5 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentS5.setStatus('current')
voltageS6 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageS6.setStatus('current')
currentS6 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentS6.setStatus('current')
voltageS7 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageS7.setStatus('current')
currentS7 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentS7.setStatus('current')
voltageS8 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageS8.setStatus('current')
currentS8 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentS8.setStatus('current')
voltageS9 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageS9.setStatus('current')
currentS9 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentS9.setStatus('current')
voltageS10 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageS10.setStatus('current')
currentS10 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 1, 1, 2, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentS10.setStatus('current')
alarmSensor1 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("high", 1), ("low", 0), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmSensor1.setStatus('current')
alarmSensor2 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("high", 1), ("low", 0), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmSensor2.setStatus('current')
alarmSensor3 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("high", 1), ("low", 0), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmSensor3.setStatus('current')
alarmSensor4 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("high", 1), ("low", 0), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmSensor4.setStatus('current')
alarmSensor5 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("high", 1), ("low", 0), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmSensor5.setStatus('current')
uSensor = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uSensor.setStatus('current')
releState = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 0), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: releState.setStatus('current')
smart1State = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 0), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smart1State.setStatus('current')
smart2State = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 0), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smart2State.setStatus('current')
smart3State = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 0), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smart3State.setStatus('current')
smart4State = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 0), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smart4State.setStatus('current')
smart5State = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 0), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smart5State.setStatus('current')
releResetTime = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 3, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: releResetTime.setStatus('current')
smart1ResetTime = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 3, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smart1ResetTime.setStatus('current')
smart2ResetTime = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 3, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smart2ResetTime.setStatus('current')
smart3ResetTime = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 3, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smart3ResetTime.setStatus('current')
smart4ResetTime = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 3, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smart4ResetTime.setStatus('current')
smart5ResetTime = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 3, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smart5ResetTime.setStatus('current')
alarmSensor1cnt = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 8, 2, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmSensor1cnt.setStatus('current')
alarmSensor2cnt = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 8, 2, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmSensor2cnt.setStatus('current')
alarmSensor3cnt = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 8, 2, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmSensor3cnt.setStatus('current')
alarmSensor4cnt = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 8, 2, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmSensor4cnt.setStatus('current')
alarmSensor5cnt = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 8, 2, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmSensor5cnt.setStatus('current')
dataType = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 6, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("integer", 0), ("float", 1), ("ufloat", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dataType.setStatus('current')
aSense1Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 1))
if mibBuilder.loadTexts: aSense1Alarm.setStatus('current')
aSense1Release = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 2))
if mibBuilder.loadTexts: aSense1Release.setStatus('current')
aSense2Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 3))
if mibBuilder.loadTexts: aSense2Alarm.setStatus('current')
aSense2Release = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 4))
if mibBuilder.loadTexts: aSense2Release.setStatus('current')
aSense3Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 5))
if mibBuilder.loadTexts: aSense3Alarm.setStatus('current')
aSense3Release = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 6))
if mibBuilder.loadTexts: aSense3Release.setStatus('current')
aSense4Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 7))
if mibBuilder.loadTexts: aSense4Alarm.setStatus('current')
aSense4Release = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 8))
if mibBuilder.loadTexts: aSense4Release.setStatus('current')
aSense5Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 9))
if mibBuilder.loadTexts: aSense5Alarm.setStatus('current')
aSense5Release = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 10))
if mibBuilder.loadTexts: aSense5Release.setStatus('current')
uSenseAlarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 11))
if mibBuilder.loadTexts: uSenseAlarm.setStatus('current')
uSenseRelease = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 12))
if mibBuilder.loadTexts: uSenseRelease.setStatus('current')
reloutThermoOn = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 13))
if mibBuilder.loadTexts: reloutThermoOn.setStatus('current')
reloutThermoOff = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 14))
if mibBuilder.loadTexts: reloutThermoOff.setStatus('current')
smart1ThermoOn = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 15))
if mibBuilder.loadTexts: smart1ThermoOn.setStatus('current')
smart1ThermoOff = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 16))
if mibBuilder.loadTexts: smart1ThermoOff.setStatus('current')
smart2ThermoOn = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 17))
if mibBuilder.loadTexts: smart2ThermoOn.setStatus('current')
smart2ThermoOff = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 18))
if mibBuilder.loadTexts: smart2ThermoOff.setStatus('current')
smart3ThermoOn = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 19))
if mibBuilder.loadTexts: smart3ThermoOn.setStatus('current')
smart3ThermoOff = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 20))
if mibBuilder.loadTexts: smart3ThermoOff.setStatus('current')
smart4ThermoOn = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 21))
if mibBuilder.loadTexts: smart4ThermoOn.setStatus('current')
smart4ThermoOff = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 22))
if mibBuilder.loadTexts: smart4ThermoOff.setStatus('current')
smart5ThermoOn = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 23))
if mibBuilder.loadTexts: smart5ThermoOn.setStatus('current')
smart5ThermoOff = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 24))
if mibBuilder.loadTexts: smart5ThermoOff.setStatus('current')
tempSensorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 29))
if mibBuilder.loadTexts: tempSensorAlarm.setStatus('current')
tempSensorRelease = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 30))
if mibBuilder.loadTexts: tempSensorRelease.setStatus('current')
voltSensorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 31))
if mibBuilder.loadTexts: voltSensorAlarm.setStatus('current')
voltSensorRelease = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 32))
if mibBuilder.loadTexts: voltSensorRelease.setStatus('current')
task1Done = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 36))
if mibBuilder.loadTexts: task1Done.setStatus('current')
task2Done = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 37))
if mibBuilder.loadTexts: task2Done.setStatus('current')
task3Done = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 38))
if mibBuilder.loadTexts: task3Done.setStatus('current')
task4Done = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 39))
if mibBuilder.loadTexts: task4Done.setStatus('current')
pingLost = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 45))
if mibBuilder.loadTexts: pingLost.setStatus('current')
batteryChargeLow = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 6, 0, 47))
if mibBuilder.loadTexts: batteryChargeLow.setStatus('current')
erd4Group = NotificationGroup((1, 3, 6, 1, 4, 1, 40418, 2, 6, 99)).setObjects(("SNR-ERD-4", "aSense1Alarm"), ("SNR-ERD-4", "aSense1Release"), ("SNR-ERD-4", "aSense2Alarm"), ("SNR-ERD-4", "aSense2Release"), ("SNR-ERD-4", "aSense3Alarm"), ("SNR-ERD-4", "aSense3Release"), ("SNR-ERD-4", "aSense4Alarm"), ("SNR-ERD-4", "aSense4Release"), ("SNR-ERD-4", "aSense5Alarm"), ("SNR-ERD-4", "aSense5Release"), ("SNR-ERD-4", "uSenseAlarm"), ("SNR-ERD-4", "uSenseRelease"), ("SNR-ERD-4", "reloutThermoOn"), ("SNR-ERD-4", "reloutThermoOff"), ("SNR-ERD-4", "smart1ThermoOn"), ("SNR-ERD-4", "smart1ThermoOff"), ("SNR-ERD-4", "smart2ThermoOn"), ("SNR-ERD-4", "smart2ThermoOff"), ("SNR-ERD-4", "smart3ThermoOn"), ("SNR-ERD-4", "smart3ThermoOff"), ("SNR-ERD-4", "smart4ThermoOn"), ("SNR-ERD-4", "smart4ThermoOff"), ("SNR-ERD-4", "smart5ThermoOn"), ("SNR-ERD-4", "smart5ThermoOff"), ("SNR-ERD-4", "tempSensorAlarm"), ("SNR-ERD-4", "tempSensorRelease"), ("SNR-ERD-4", "voltSensorAlarm"), ("SNR-ERD-4", "voltSensorRelease"), ("SNR-ERD-4", "task1Done"), ("SNR-ERD-4", "task2Done"), ("SNR-ERD-4", "task3Done"), ("SNR-ERD-4", "task4Done"), ("SNR-ERD-4", "pingLost"), ("SNR-ERD-4", "batteryChargeLow"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    erd4Group = erd4Group.setStatus('current')
mibBuilder.exportSymbols("SNR-ERD-4", voltageSensor=voltageSensor, aSense3Release=aSense3Release, smart2ThermoOff=smart2ThermoOff, serialS2=serialS2, snr=snr, powerSensors=powerSensors, tempSensorRelease=tempSensorRelease, alarmSensor1cnt=alarmSensor1cnt, smart3ThermoOn=smart3ThermoOn, serialS5=serialS5, currentS9=currentS9, serialS8=serialS8, voltageS6=voltageS6, serialS10=serialS10, temperatureS5=temperatureS5, alarmSensor5=alarmSensor5, smart4ThermoOff=smart4ThermoOff, alarmSensor5cnt=alarmSensor5cnt, serialS4=serialS4, erd4Traps=erd4Traps, smart2ThermoOn=smart2ThermoOn, alarmSensor2=alarmSensor2, smart1ThermoOn=smart1ThermoOn, management=management, PYSNMP_MODULE_ID=snr, voltageS10=voltageS10, task2Done=task2Done, alarmSensor3cnt=alarmSensor3cnt, smart4ResetTime=smart4ResetTime, currentS2=currentS2, task4Done=task4Done, voltageS9=voltageS9, reloutThermoOff=reloutThermoOff, smart5State=smart5State, uSenseRelease=uSenseRelease, temperatureS9=temperatureS9, currentS3=currentS3, serialS9=serialS9, uSenseAlarm=uSenseAlarm, snr_erd=snr_erd, smart1ResetTime=smart1ResetTime, temperatureS8=temperatureS8, currentS5=currentS5, smart5ThermoOff=smart5ThermoOff, aSense1Release=aSense1Release, voltageS1=voltageS1, smart5ThermoOn=smart5ThermoOn, temperatureS4=temperatureS4, smart2ResetTime=smart2ResetTime, currentS4=currentS4, temperatureS3=temperatureS3, tempSensorAlarm=tempSensorAlarm, smart4State=smart4State, smart3ResetTime=smart3ResetTime, alarmSensor1=alarmSensor1, temperatureS10=temperatureS10, voltageS7=voltageS7, aSense2Alarm=aSense2Alarm, aSense4Alarm=aSense4Alarm, alarmSensCnts=alarmSensCnts, serialS3=serialS3, voltageS3=voltageS3, smart3State=smart3State, temperatureS6=temperatureS6, dataType=dataType, currentS8=currentS8, uSensor=uSensor, temperatureS2=temperatureS2, voltageS5=voltageS5, smart1State=smart1State, erd4Group=erd4Group, aSense1Alarm=aSense1Alarm, batteryChargeLow=batteryChargeLow, alarmSensor2cnt=alarmSensor2cnt, alarmSensor4=alarmSensor4, aSense4Release=aSense4Release, smart1ThermoOff=smart1ThermoOff, releResetTime=releResetTime, pingLost=pingLost, serialS6=serialS6, smart4ThermoOn=smart4ThermoOn, serialS7=serialS7, smart5ResetTime=smart5ResetTime, currentS6=currentS6, voltageS8=voltageS8, currentS10=currentS10, temperatureS1=temperatureS1, snr_erd_4=snr_erd_4, aSense5Release=aSense5Release, voltSensorRelease=voltSensorRelease, task3Done=task3Done, snrSensors=snrSensors, voltageS2=voltageS2, smart3ThermoOff=smart3ThermoOff, currentS1=currentS1, smart2State=smart2State, currentS7=currentS7, aSense3Alarm=aSense3Alarm, alarmSensor3=alarmSensor3, releState=releState, aSense5Alarm=aSense5Alarm, measurements=measurements, options=options, temperatureSensors=temperatureSensors, serialS1=serialS1, task1Done=task1Done, temperatureS7=temperatureS7, sensesstate=sensesstate, alarmSensor4cnt=alarmSensor4cnt, aSense2Release=aSense2Release, voltSensorAlarm=voltSensorAlarm, counters=counters, reloutThermoOn=reloutThermoOn, voltageS4=voltageS4)
