#
# PySNMP MIB module HPN-ICF-DLDP2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-DLDP2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:25:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifDescr, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifDescr", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, ObjectIdentity, Counter64, iso, Bits, Integer32, IpAddress, Unsigned32, NotificationType, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "ObjectIdentity", "Counter64", "iso", "Bits", "Integer32", "IpAddress", "Unsigned32", "NotificationType", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter32")
MacAddress, TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "DisplayString", "TruthValue")
hpnicfDldp2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117))
hpnicfDldp2.setRevisions(('2011-12-26 15:30',))
if mibBuilder.loadTexts: hpnicfDldp2.setLastUpdated('201112261530Z')
if mibBuilder.loadTexts: hpnicfDldp2.setOrganization('')
hpnicfDldp2ScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 1))
hpnicfDldp2GlobalEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDldp2GlobalEnable.setStatus('current')
hpnicfDldp2Interval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(5)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDldp2Interval.setStatus('current')
hpnicfDldp2AuthMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("none", 2), ("simple", 3), ("md5", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDldp2AuthMode.setStatus('current')
hpnicfDldp2AuthPassword = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDldp2AuthPassword.setStatus('current')
hpnicfDldp2UniShutdown = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("auto", 2), ("manual", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDldp2UniShutdown.setStatus('current')
hpnicfDldp2TableGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 2))
hpnicfDldp2PortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 2, 1), )
if mibBuilder.loadTexts: hpnicfDldp2PortConfigTable.setStatus('current')
hpnicfDldp2PortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfDldp2PortConfigEntry.setStatus('current')
hpnicfDldp2PortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 2, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDldp2PortEnable.setStatus('current')
hpnicfDldp2PortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 2, 2), )
if mibBuilder.loadTexts: hpnicfDldp2PortStatusTable.setStatus('current')
hpnicfDldp2PortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfDldp2PortStatusEntry.setStatus('current')
hpnicfDldp2PortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("initial", 2), ("inactive", 3), ("unidirectional", 4), ("bidirectional", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDldp2PortOperStatus.setStatus('current')
hpnicfDldp2PortLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("down", 2), ("up", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDldp2PortLinkStatus.setStatus('current')
hpnicfDldp2NeighborTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 2, 3), )
if mibBuilder.loadTexts: hpnicfDldp2NeighborTable.setStatus('current')
hpnicfDldp2NeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-DLDP2-MIB", "hpnicfDldp2NeighborBridgeMac"), (0, "HPN-ICF-DLDP2-MIB", "hpnicfDldp2NeighborPortIndex"))
if mibBuilder.loadTexts: hpnicfDldp2NeighborEntry.setStatus('current')
hpnicfDldp2NeighborBridgeMac = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 2, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfDldp2NeighborBridgeMac.setStatus('current')
hpnicfDldp2NeighborPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfDldp2NeighborPortIndex.setStatus('current')
hpnicfDldp2NeighborStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("unconfirmed", 2), ("confirmed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDldp2NeighborStatus.setStatus('current')
hpnicfDldp2NeighborAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 2, 3, 1, 4), Integer32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDldp2NeighborAgingTime.setStatus('current')
hpnicfDldp2TrapBindObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 3))
hpnicfDldp2Trap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 4))
hpnicfDldp2TrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 4, 0))
hpnicfDldp2TrapUniLink = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 4, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfDldp2TrapUniLink.setStatus('current')
hpnicfDldp2TrapBidLink = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 117, 4, 0, 2)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfDldp2TrapBidLink.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-DLDP2-MIB", hpnicfDldp2TableGroup=hpnicfDldp2TableGroup, hpnicfDldp2NeighborStatus=hpnicfDldp2NeighborStatus, hpnicfDldp2NeighborAgingTime=hpnicfDldp2NeighborAgingTime, hpnicfDldp2PortEnable=hpnicfDldp2PortEnable, hpnicfDldp2NeighborPortIndex=hpnicfDldp2NeighborPortIndex, hpnicfDldp2NeighborEntry=hpnicfDldp2NeighborEntry, hpnicfDldp2=hpnicfDldp2, hpnicfDldp2TrapUniLink=hpnicfDldp2TrapUniLink, PYSNMP_MODULE_ID=hpnicfDldp2, hpnicfDldp2PortConfigEntry=hpnicfDldp2PortConfigEntry, hpnicfDldp2ScalarGroup=hpnicfDldp2ScalarGroup, hpnicfDldp2PortLinkStatus=hpnicfDldp2PortLinkStatus, hpnicfDldp2AuthMode=hpnicfDldp2AuthMode, hpnicfDldp2TrapBidLink=hpnicfDldp2TrapBidLink, hpnicfDldp2PortConfigTable=hpnicfDldp2PortConfigTable, hpnicfDldp2PortStatusTable=hpnicfDldp2PortStatusTable, hpnicfDldp2NeighborBridgeMac=hpnicfDldp2NeighborBridgeMac, hpnicfDldp2GlobalEnable=hpnicfDldp2GlobalEnable, hpnicfDldp2AuthPassword=hpnicfDldp2AuthPassword, hpnicfDldp2Trap=hpnicfDldp2Trap, hpnicfDldp2TrapBindObjects=hpnicfDldp2TrapBindObjects, hpnicfDldp2PortStatusEntry=hpnicfDldp2PortStatusEntry, hpnicfDldp2TrapPrefix=hpnicfDldp2TrapPrefix, hpnicfDldp2NeighborTable=hpnicfDldp2NeighborTable, hpnicfDldp2Interval=hpnicfDldp2Interval, hpnicfDldp2UniShutdown=hpnicfDldp2UniShutdown, hpnicfDldp2PortOperStatus=hpnicfDldp2PortOperStatus)
