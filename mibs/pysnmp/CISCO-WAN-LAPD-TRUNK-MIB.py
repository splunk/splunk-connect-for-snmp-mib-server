#
# PySNMP MIB module CISCO-WAN-LAPD-TRUNK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-WAN-LAPD-TRUNK-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:02:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
voice, = mibBuilder.importSymbols("BASIS-MIB", "voice")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
IpAddress, Counter32, TimeTicks, Gauge32, Unsigned32, MibIdentifier, Bits, iso, ObjectIdentity, Counter64, ModuleIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter32", "TimeTicks", "Gauge32", "Unsigned32", "MibIdentifier", "Bits", "iso", "ObjectIdentity", "Counter64", "ModuleIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
ciscoWanLapdTrunkMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 23))
ciscoWanLapdTrunkMIB.setRevisions(('2003-12-11 00:00', '2003-07-17 00:00', '2003-07-11 00:00',))
if mibBuilder.loadTexts: ciscoWanLapdTrunkMIB.setLastUpdated('200312110000Z')
if mibBuilder.loadTexts: ciscoWanLapdTrunkMIB.setOrganization('Cisco Systems, Inc.')
vismLapdGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12))
ciscoWanLapdTrunkMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 23, 1))
vismLapdTrunkGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 23, 1, 1))
vismLapdTrunkGrpTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 23, 1, 1, 1), )
if mibBuilder.loadTexts: vismLapdTrunkGrpTable.setStatus('current')
vismLapdTrunkGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 23, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdTrunkNum"))
if mibBuilder.loadTexts: vismLapdTrunkGrpEntry.setStatus('current')
vismLapdTrunkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 23, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: vismLapdTrunkNum.setStatus('current')
vismLapdTrunkState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 23, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("oos", 1), ("is", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdTrunkState.setStatus('current')
vismLapdTrunkRudpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 23, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vismLapdTrunkRudpIndex.setStatus('current')
vismLapdTrunkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 23, 1, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vismLapdTrunkRowStatus.setStatus('current')
vismLapdTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 1), )
if mibBuilder.loadTexts: vismLapdTable.setStatus('current')
vismLapdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 1, 1), ).setIndexNames((0, "CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdIndex"))
if mibBuilder.loadTexts: vismLapdEntry.setStatus('current')
vismLapdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 248))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdIndex.setStatus('current')
vismLapdAppType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pri", 1), ("gr-303", 2))).clone('pri')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vismLapdAppType.setStatus('current')
vismLapdWinSize = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vismLapdWinSize.setStatus('current')
vismLapdN200 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vismLapdN200.setStatus('current')
vismLapdT200 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1023000))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vismLapdT200.setStatus('current')
vismLapdT203 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 1023000))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vismLapdT203.setStatus('current')
vismLapdType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19))).clone(namedValues=NamedValues(("ccitt", 1), ("att5EssPRA", 3), ("att4Ess", 4), ("ntDMS100PRA", 6), ("vn2or3", 7), ("insNet", 8), ("tr6MPC", 9), ("tr6PBX", 10), ("ausp", 12), ("ni1", 13), ("etsi", 14), ("bc303TMC", 15), ("bc303CSC", 16), ("ntDMS250", 17), ("bellcore", 18), ("ni2", 19))).clone('ni2')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vismLapdType.setStatus('current')
vismLapdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vismLapdRowStatus.setStatus('current')
vismLapdSide = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("network", 1), ("user", 2))).clone('network')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vismLapdSide.setStatus('current')
vismLapdTrunkType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("backhaul", 1), ("lapdTrunking", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdTrunkType.setStatus('current')
vismLapdStatsTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2), )
if mibBuilder.loadTexts: vismLapdStatsTable.setStatus('current')
vismLapdStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1), ).setIndexNames((0, "CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdStatsIndex"))
if mibBuilder.loadTexts: vismLapdStatsEntry.setStatus('current')
vismLapdStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 248))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdStatsIndex.setStatus('current')
vismLapdRxInfoFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdRxInfoFrames.setStatus('current')
vismLapdTxInfoFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdTxInfoFrames.setStatus('current')
vismLapdRxReadyFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdRxReadyFrames.setStatus('current')
vismLapdTxReadyFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdTxReadyFrames.setStatus('current')
vismLapdRxNotReadyFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdRxNotReadyFrames.setStatus('current')
vismLapdTxNotReadyFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdTxNotReadyFrames.setStatus('current')
vismLapdRxSABMFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdRxSABMFrames.setStatus('current')
vismLapdTxSABMFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdTxSABMFrames.setStatus('current')
vismLapdRxDisconFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdRxDisconFrames.setStatus('current')
vismLapdTxDisconFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdTxDisconFrames.setStatus('current')
vismLapdRxUAFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdRxUAFrames.setStatus('current')
vismLapdTxUAFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdTxUAFrames.setStatus('current')
vismLapdRxDiscModeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdRxDiscModeFrames.setStatus('current')
vismLapdTxDiscModeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdTxDiscModeFrames.setStatus('current')
vismLapdRxFrmRejectFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdRxFrmRejectFrames.setStatus('current')
vismLapdTxFrmRejectFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdTxFrmRejectFrames.setStatus('current')
vismLapdRxExchIdFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdRxExchIdFrames.setStatus('current')
vismLapdTxExchIdFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdTxExchIdFrames.setStatus('current')
vismLapdRxUnumInfoFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdRxUnumInfoFrames.setStatus('current')
vismLapdTxUnumInfoFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdTxUnumInfoFrames.setStatus('current')
vismLapdRxRejectFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdRxRejectFrames.setStatus('current')
vismLapdTxRejectFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdTxRejectFrames.setStatus('current')
vismLapdRxInvalidFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdRxInvalidFrames.setStatus('current')
vismLapdDlcTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 3), )
if mibBuilder.loadTexts: vismLapdDlcTable.setStatus('current')
vismLapdDlcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 3, 1), ).setIndexNames((0, "CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdDlcIndex"), (0, "CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdDlcSapi"), (0, "CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdDlcTei"))
if mibBuilder.loadTexts: vismLapdDlcEntry.setStatus('current')
vismLapdDlcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 248))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdDlcIndex.setStatus('current')
vismLapdDlcSapi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdDlcSapi.setStatus('current')
vismLapdDlcTei = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdDlcTei.setStatus('current')
vismLapdDlcLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 12, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLapdDlcLinkState.setStatus('current')
vismLapdTrunkNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 23, 2))
vismLapdTrunkNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 23, 2, 0))
vismLapdTrunkMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 23, 3))
vismLapdTrunkMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 23, 3, 1))
vismLapdTrunkMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 23, 3, 2))
vismLapdTrunkMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 23, 3, 1, 1)).setObjects(("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdTrunkGroup"), ("CISCO-WAN-LAPD-TRUNK-MIB", "ciscoVismLapdGroup"), ("CISCO-WAN-LAPD-TRUNK-MIB", "ciscoVismLapdStatsGroup"), ("CISCO-WAN-LAPD-TRUNK-MIB", "ciscoVismLapdDlcTable"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vismLapdTrunkMIBCompliance = vismLapdTrunkMIBCompliance.setStatus('current')
vismLapdTrunkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 23, 3, 2, 1)).setObjects(("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdTrunkState"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdTrunkRudpIndex"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdTrunkRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vismLapdTrunkGroup = vismLapdTrunkGroup.setStatus('current')
ciscoVismLapdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 23, 3, 2, 2)).setObjects(("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdIndex"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdAppType"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdWinSize"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdN200"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdT200"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdT203"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdType"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdRowStatus"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdSide"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdTrunkType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismLapdGroup = ciscoVismLapdGroup.setStatus('current')
ciscoVismLapdStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 23, 3, 2, 3)).setObjects(("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdStatsIndex"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdRxInfoFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdTxInfoFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdRxReadyFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdTxReadyFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdRxNotReadyFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdTxNotReadyFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdRxSABMFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdTxSABMFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdRxDisconFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdTxDisconFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdRxUAFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdTxUAFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdRxDiscModeFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdTxDiscModeFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdRxFrmRejectFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdTxFrmRejectFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdRxExchIdFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdTxExchIdFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdRxUnumInfoFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdTxUnumInfoFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdRxRejectFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdTxRejectFrames"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdRxInvalidFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismLapdStatsGroup = ciscoVismLapdStatsGroup.setStatus('current')
ciscoVismLapdDlcTable = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 23, 3, 2, 4)).setObjects(("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdDlcIndex"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdDlcSapi"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdDlcTei"), ("CISCO-WAN-LAPD-TRUNK-MIB", "vismLapdDlcLinkState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismLapdDlcTable = ciscoVismLapdDlcTable.setStatus('current')
mibBuilder.exportSymbols("CISCO-WAN-LAPD-TRUNK-MIB", vismLapdTxInfoFrames=vismLapdTxInfoFrames, vismLapdTrunkRudpIndex=vismLapdTrunkRudpIndex, vismLapdTrunkNum=vismLapdTrunkNum, vismLapdRxRejectFrames=vismLapdRxRejectFrames, vismLapdRxInfoFrames=vismLapdRxInfoFrames, vismLapdDlcTei=vismLapdDlcTei, vismLapdStatsTable=vismLapdStatsTable, vismLapdStatsEntry=vismLapdStatsEntry, vismLapdDlcEntry=vismLapdDlcEntry, vismLapdWinSize=vismLapdWinSize, vismLapdTxNotReadyFrames=vismLapdTxNotReadyFrames, vismLapdRxSABMFrames=vismLapdRxSABMFrames, ciscoWanLapdTrunkMIB=ciscoWanLapdTrunkMIB, vismLapdEntry=vismLapdEntry, vismLapdTxUAFrames=vismLapdTxUAFrames, vismLapdDlcTable=vismLapdDlcTable, vismLapdTxExchIdFrames=vismLapdTxExchIdFrames, vismLapdTrunkNotifications=vismLapdTrunkNotifications, vismLapdDlcLinkState=vismLapdDlcLinkState, vismLapdRxNotReadyFrames=vismLapdRxNotReadyFrames, vismLapdRxInvalidFrames=vismLapdRxInvalidFrames, vismLapdRxDisconFrames=vismLapdRxDisconFrames, ciscoVismLapdGroup=ciscoVismLapdGroup, vismLapdDlcSapi=vismLapdDlcSapi, vismLapdTxReadyFrames=vismLapdTxReadyFrames, vismLapdRxDiscModeFrames=vismLapdRxDiscModeFrames, ciscoVismLapdDlcTable=ciscoVismLapdDlcTable, vismLapdTxFrmRejectFrames=vismLapdTxFrmRejectFrames, vismLapdRxExchIdFrames=vismLapdRxExchIdFrames, vismLapdRowStatus=vismLapdRowStatus, vismLapdSide=vismLapdSide, ciscoVismLapdStatsGroup=ciscoVismLapdStatsGroup, vismLapdIndex=vismLapdIndex, vismLapdT200=vismLapdT200, vismLapdTrunkState=vismLapdTrunkState, vismLapdTable=vismLapdTable, vismLapdTxDiscModeFrames=vismLapdTxDiscModeFrames, vismLapdRxUnumInfoFrames=vismLapdRxUnumInfoFrames, vismLapdTxRejectFrames=vismLapdTxRejectFrames, vismLapdTrunkMIBCompliances=vismLapdTrunkMIBCompliances, vismLapdT203=vismLapdT203, vismLapdTrunkGroup=vismLapdTrunkGroup, vismLapdTrunkMIBCompliance=vismLapdTrunkMIBCompliance, vismLapdTrunkGrpEntry=vismLapdTrunkGrpEntry, vismLapdTrunkRowStatus=vismLapdTrunkRowStatus, ciscoWanLapdTrunkMIBObjects=ciscoWanLapdTrunkMIBObjects, vismLapdTrunkGrp=vismLapdTrunkGrp, vismLapdTrunkNotificationPrefix=vismLapdTrunkNotificationPrefix, vismLapdRxFrmRejectFrames=vismLapdRxFrmRejectFrames, vismLapdN200=vismLapdN200, vismLapdTrunkGrpTable=vismLapdTrunkGrpTable, vismLapdTxSABMFrames=vismLapdTxSABMFrames, vismLapdGrp=vismLapdGrp, vismLapdTrunkMIBGroups=vismLapdTrunkMIBGroups, vismLapdTxUnumInfoFrames=vismLapdTxUnumInfoFrames, vismLapdTrunkType=vismLapdTrunkType, vismLapdRxReadyFrames=vismLapdRxReadyFrames, vismLapdRxUAFrames=vismLapdRxUAFrames, vismLapdTxDisconFrames=vismLapdTxDisconFrames, vismLapdType=vismLapdType, vismLapdStatsIndex=vismLapdStatsIndex, vismLapdTrunkMIBConformance=vismLapdTrunkMIBConformance, vismLapdDlcIndex=vismLapdDlcIndex, vismLapdAppType=vismLapdAppType, PYSNMP_MODULE_ID=ciscoWanLapdTrunkMIB)
