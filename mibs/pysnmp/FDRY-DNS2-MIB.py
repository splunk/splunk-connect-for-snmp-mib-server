#
# PySNMP MIB module FDRY-DNS2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FDRY-DNS2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:59:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Integer32, Gauge32, iso, Unsigned32, Bits, IpAddress, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter64, Counter32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "Gauge32", "iso", "Unsigned32", "Bits", "IpAddress", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter64", "Counter32", "ObjectIdentity")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
fdryDns2MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34))
fdryDns2MIB.setRevisions(('2010-06-02 00:00', '2009-01-30 00:00',))
if mibBuilder.loadTexts: fdryDns2MIB.setLastUpdated('201006020000Z')
if mibBuilder.loadTexts: fdryDns2MIB.setOrganization('Brocade Communications Systems, Inc.')
fdryDns2DomainName = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 1))
fdryDnsServer = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 2))
fdryDns2DomainNameTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 1, 1), )
if mibBuilder.loadTexts: fdryDns2DomainNameTable.setStatus('current')
fdryDns2DomainNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 1, 1, 1), ).setIndexNames((0, "FDRY-DNS2-MIB", "fdryDns2DomainNameIndex"))
if mibBuilder.loadTexts: fdryDns2DomainNameEntry.setStatus('current')
fdryDns2DomainNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: fdryDns2DomainNameIndex.setStatus('current')
fdryDns2DomainNameAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 1, 1, 1, 2), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryDns2DomainNameAddrType.setStatus('current')
fdryDns2DomainNameName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryDns2DomainNameName.setStatus('current')
fdryDns2DomainNameRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryDns2DomainNameRowStatus.setStatus('current')
fdryDnsServerTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 2, 1), )
if mibBuilder.loadTexts: fdryDnsServerTable.setStatus('current')
fdryDnsServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 2, 1, 1), ).setIndexNames((0, "FDRY-DNS2-MIB", "fdryDnsServerAddrType"), (0, "FDRY-DNS2-MIB", "fdryDnsServerIndex"))
if mibBuilder.loadTexts: fdryDnsServerEntry.setStatus('current')
fdryDnsServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 2, 1, 1, 1), InetAddressType().clone('ipv4'))
if mibBuilder.loadTexts: fdryDnsServerAddrType.setStatus('current')
fdryDnsServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 2, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: fdryDnsServerIndex.setStatus('current')
fdryDnsServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 2, 1, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryDnsServerAddr.setStatus('current')
fdryDnsServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryDnsServerRowStatus.setStatus('current')
mibBuilder.exportSymbols("FDRY-DNS2-MIB", fdryDnsServer=fdryDnsServer, fdryDns2MIB=fdryDns2MIB, fdryDns2DomainNameEntry=fdryDns2DomainNameEntry, fdryDns2DomainNameRowStatus=fdryDns2DomainNameRowStatus, fdryDnsServerTable=fdryDnsServerTable, fdryDnsServerAddr=fdryDnsServerAddr, fdryDns2DomainNameIndex=fdryDns2DomainNameIndex, fdryDnsServerIndex=fdryDnsServerIndex, fdryDnsServerRowStatus=fdryDnsServerRowStatus, fdryDns2DomainNameAddrType=fdryDns2DomainNameAddrType, fdryDnsServerEntry=fdryDnsServerEntry, fdryDns2DomainNameName=fdryDns2DomainNameName, fdryDns2DomainName=fdryDns2DomainName, PYSNMP_MODULE_ID=fdryDns2MIB, fdryDns2DomainNameTable=fdryDns2DomainNameTable, fdryDnsServerAddrType=fdryDnsServerAddrType)
