#
# PySNMP MIB module H3C-DOT11-ROAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-DOT11-ROAM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:08:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
h3cDot11, = mibBuilder.importSymbols("H3C-DOT11-REF-MIB", "h3cDot11")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, IpAddress, Gauge32, Bits, Integer32, ObjectIdentity, MibIdentifier, iso, TimeTicks, Counter64, NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "IpAddress", "Gauge32", "Bits", "Integer32", "ObjectIdentity", "MibIdentifier", "iso", "TimeTicks", "Counter64", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
TextualConvention, MacAddress, TruthValue, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "MacAddress", "TruthValue", "RowStatus", "DisplayString")
h3cDot11ROAM = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10))
h3cDot11ROAM.setRevisions(('2010-08-04 18:00', '2009-05-07 20:00', '2008-07-23 12:00',))
if mibBuilder.loadTexts: h3cDot11ROAM.setLastUpdated('201008041800Z')
if mibBuilder.loadTexts: h3cDot11ROAM.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
class H3cDot11RoamMobileTunnelType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("ipv4", 1), ("ipv6", 2))

class H3cDot11RoamAuthMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("none", 1), ("md5", 2))

class H3cDot11RoamIACTPStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("init", 1), ("idle", 2), ("joinRequestWait", 3), ("joinResponseWait", 4), ("joinConfirmWait", 5), ("joinError", 6), ("run", 7))

h3cDot11RoamCfgGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 1))
h3cDot11RoamStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2))
h3cDot11RoamStatisGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 3))
h3cDot11RoamStatis2Group = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 4))
h3cDot11MobGrpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 1, 1), )
if mibBuilder.loadTexts: h3cDot11MobGrpTable.setStatus('current')
h3cDot11MobGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 1, 1, 1), ).setIndexNames((0, "H3C-DOT11-ROAM-MIB", "h3cDot11MobGrpName"))
if mibBuilder.loadTexts: h3cDot11MobGrpEntry.setStatus('current')
h3cDot11MobGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 15)))
if mibBuilder.loadTexts: h3cDot11MobGrpName.setStatus('current')
h3cdot11MobGrpTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 1, 1, 1, 2), H3cDot11RoamMobileTunnelType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdot11MobGrpTunnelType.setStatus('current')
h3cDot11MobGrpSrcIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 1, 1, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11MobGrpSrcIPAddr.setStatus('current')
h3cDot11MobGrpAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 1, 1, 1, 4), H3cDot11RoamAuthMode().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11MobGrpAuthMode.setStatus('current')
h3cDot11MobGrpAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11MobGrpAuthKey.setStatus('current')
h3cDot11MobGrpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 1, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11MobGrpEnable.setStatus('current')
h3cDot11MobGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 1, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11MobGrpRowStatus.setStatus('current')
h3cDot11MobGrpMemberTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 1, 2), )
if mibBuilder.loadTexts: h3cDot11MobGrpMemberTable.setStatus('current')
h3cDot11MobGrpMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 1, 2, 1), ).setIndexNames((0, "H3C-DOT11-ROAM-MIB", "h3cDot11MobGrpName"), (0, "H3C-DOT11-ROAM-MIB", "h3cDot11MobGrpMemberIpAddr"))
if mibBuilder.loadTexts: h3cDot11MobGrpMemberEntry.setStatus('current')
h3cDot11MobGrpMemberIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 1, 2, 1, 1), InetAddress())
if mibBuilder.loadTexts: h3cDot11MobGrpMemberIpAddr.setStatus('current')
h3cDot11MobGrpMemberStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 1, 2, 1, 2), H3cDot11RoamIACTPStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11MobGrpMemberStatus.setStatus('current')
h3cDot11MobGrpMemberIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 1, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11MobGrpMemberIf.setStatus('current')
h3cDot11MobGrpMemberUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 1, 2, 1, 4), Integer32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11MobGrpMemberUpTime.setStatus('current')
h3cDot11MobGrpMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11MobGrpMemberRowStatus.setStatus('current')
h3cDot11RoamInInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 1), )
if mibBuilder.loadTexts: h3cDot11RoamInInfoTable.setStatus('current')
h3cDot11RoamInInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 1, 1), ).setIndexNames((0, "H3C-DOT11-ROAM-MIB", "h3cDot11RoamClientMAC"))
if mibBuilder.loadTexts: h3cDot11RoamInInfoEntry.setStatus('current')
h3cDot11RoamClientMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cDot11RoamClientMAC.setStatus('current')
h3cDot11RoamInClientBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RoamInClientBSSID.setStatus('current')
h3cDot11RoamInClientVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RoamInClientVlanID.setStatus('current')
h3cDot11RoamInHomeACIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 1, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RoamInHomeACIPType.setStatus('current')
h3cDot11RoamInHomeACIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 1, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RoamInHomeACIPAddr.setStatus('current')
h3cDot11RoamOutInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 2), )
if mibBuilder.loadTexts: h3cDot11RoamOutInfoTable.setStatus('current')
h3cDot11RoamOutInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 2, 1), ).setIndexNames((0, "H3C-DOT11-ROAM-MIB", "h3cDot11RoamClientMAC"))
if mibBuilder.loadTexts: h3cDot11RoamOutInfoEntry.setStatus('current')
h3cDot11RoamOutClientBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RoamOutClientBSSID.setStatus('current')
h3cDot11RoamOutClientVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RoamOutClientVlanID.setStatus('current')
h3cDot11RoamOutForeignACIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 2, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RoamOutForeignACIPType.setStatus('current')
h3cDot11RoamOutForeignACIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 2, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RoamOutForeignACIPAddr.setStatus('current')
h3cDot11RoamOutClientUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 2, 1, 5), Integer32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RoamOutClientUpTime.setStatus('current')
h3cDot11RoamTrackTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 3), )
if mibBuilder.loadTexts: h3cDot11RoamTrackTable.setStatus('current')
h3cDot11RoamTrackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 3, 1), ).setIndexNames((0, "H3C-DOT11-ROAM-MIB", "h3cDot11RoamTrackIndex"))
if mibBuilder.loadTexts: h3cDot11RoamTrackEntry.setStatus('current')
h3cDot11RoamTrackIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cDot11RoamTrackIndex.setStatus('current')
h3cDot11RoamTrackClientMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RoamTrackClientMAC.setStatus('current')
h3cDot11RoamTrackBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 3, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RoamTrackBSSID.setStatus('current')
h3cDot11RoamTrackUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 3, 1, 4), Integer32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RoamTrackUpTime.setStatus('current')
h3cDot11RoamTrackACIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 3, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RoamTrackACIPType.setStatus('current')
h3cDot11RoamTrackACIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 2, 3, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RoamTrackACIPAddr.setStatus('current')
h3cDot11IntraACRoamingSuccCnt = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11IntraACRoamingSuccCnt.setStatus('current')
h3cDot11InterACRoamingSuccCnt = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11InterACRoamingSuccCnt.setStatus('current')
h3cDot11InterACRoamOutSuccCnt = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11InterACRoamOutSuccCnt.setStatus('current')
h3cDot11IntraACRoamingSuccCnt2 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11IntraACRoamingSuccCnt2.setStatus('current')
h3cDot11InterACRoamingSuccCnt2 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11InterACRoamingSuccCnt2.setStatus('current')
h3cDot11InterACRoamOutSuccCnt2 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 10, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11InterACRoamOutSuccCnt2.setStatus('current')
mibBuilder.exportSymbols("H3C-DOT11-ROAM-MIB", h3cDot11MobGrpMemberTable=h3cDot11MobGrpMemberTable, h3cDot11RoamInInfoTable=h3cDot11RoamInInfoTable, H3cDot11RoamMobileTunnelType=H3cDot11RoamMobileTunnelType, h3cDot11RoamTrackUpTime=h3cDot11RoamTrackUpTime, h3cDot11MobGrpEntry=h3cDot11MobGrpEntry, H3cDot11RoamIACTPStatus=H3cDot11RoamIACTPStatus, h3cDot11InterACRoamingSuccCnt2=h3cDot11InterACRoamingSuccCnt2, h3cDot11MobGrpMemberRowStatus=h3cDot11MobGrpMemberRowStatus, h3cDot11RoamOutClientVlanID=h3cDot11RoamOutClientVlanID, h3cDot11MobGrpMemberEntry=h3cDot11MobGrpMemberEntry, h3cDot11RoamStatisGroup=h3cDot11RoamStatisGroup, h3cDot11RoamOutForeignACIPType=h3cDot11RoamOutForeignACIPType, h3cDot11MobGrpRowStatus=h3cDot11MobGrpRowStatus, h3cDot11MobGrpSrcIPAddr=h3cDot11MobGrpSrcIPAddr, h3cDot11RoamInHomeACIPAddr=h3cDot11RoamInHomeACIPAddr, h3cDot11ROAM=h3cDot11ROAM, h3cDot11MobGrpEnable=h3cDot11MobGrpEnable, h3cDot11RoamOutInfoTable=h3cDot11RoamOutInfoTable, h3cDot11RoamTrackClientMAC=h3cDot11RoamTrackClientMAC, h3cDot11RoamOutClientUpTime=h3cDot11RoamOutClientUpTime, h3cDot11MobGrpAuthKey=h3cDot11MobGrpAuthKey, h3cDot11MobGrpMemberIpAddr=h3cDot11MobGrpMemberIpAddr, h3cDot11MobGrpMemberIf=h3cDot11MobGrpMemberIf, h3cDot11RoamInInfoEntry=h3cDot11RoamInInfoEntry, h3cDot11InterACRoamingSuccCnt=h3cDot11InterACRoamingSuccCnt, h3cDot11RoamTrackTable=h3cDot11RoamTrackTable, h3cDot11RoamTrackACIPAddr=h3cDot11RoamTrackACIPAddr, h3cDot11RoamTrackACIPType=h3cDot11RoamTrackACIPType, h3cDot11RoamInHomeACIPType=h3cDot11RoamInHomeACIPType, h3cDot11RoamOutInfoEntry=h3cDot11RoamOutInfoEntry, h3cDot11RoamOutForeignACIPAddr=h3cDot11RoamOutForeignACIPAddr, h3cDot11MobGrpAuthMode=h3cDot11MobGrpAuthMode, h3cDot11RoamTrackEntry=h3cDot11RoamTrackEntry, h3cDot11RoamTrackIndex=h3cDot11RoamTrackIndex, h3cDot11MobGrpName=h3cDot11MobGrpName, h3cDot11IntraACRoamingSuccCnt2=h3cDot11IntraACRoamingSuccCnt2, h3cDot11RoamClientMAC=h3cDot11RoamClientMAC, h3cDot11RoamOutClientBSSID=h3cDot11RoamOutClientBSSID, h3cDot11InterACRoamOutSuccCnt=h3cDot11InterACRoamOutSuccCnt, h3cDot11RoamStatusGroup=h3cDot11RoamStatusGroup, h3cDot11InterACRoamOutSuccCnt2=h3cDot11InterACRoamOutSuccCnt2, H3cDot11RoamAuthMode=H3cDot11RoamAuthMode, h3cDot11MobGrpMemberUpTime=h3cDot11MobGrpMemberUpTime, h3cDot11IntraACRoamingSuccCnt=h3cDot11IntraACRoamingSuccCnt, h3cDot11RoamTrackBSSID=h3cDot11RoamTrackBSSID, PYSNMP_MODULE_ID=h3cDot11ROAM, h3cDot11RoamCfgGroup=h3cDot11RoamCfgGroup, h3cDot11MobGrpMemberStatus=h3cDot11MobGrpMemberStatus, h3cDot11RoamInClientVlanID=h3cDot11RoamInClientVlanID, h3cDot11MobGrpTable=h3cDot11MobGrpTable, h3cDot11RoamInClientBSSID=h3cDot11RoamInClientBSSID, h3cDot11RoamStatis2Group=h3cDot11RoamStatis2Group, h3cdot11MobGrpTunnelType=h3cdot11MobGrpTunnelType)
