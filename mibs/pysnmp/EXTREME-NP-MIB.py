#
# PySNMP MIB module EXTREME-NP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EXTREME-BASE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:53:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
extremeAgent, = mibBuilder.importSymbols("EXTREME-BASE-MIB", "extremeAgent")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, iso, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ObjectIdentity, Bits, MibIdentifier, ModuleIdentity, Counter64, Counter32, NotificationType, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ObjectIdentity", "Bits", "MibIdentifier", "ModuleIdentity", "Counter64", "Counter32", "NotificationType", "Integer32", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
extremeNPMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 1916, 1, 21))
if mibBuilder.loadTexts: extremeNPMib.setLastUpdated('0007240000Z')
if mibBuilder.loadTexts: extremeNPMib.setOrganization('Extreme Networks, Inc.')
extremeNPModule = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 21, 1))
extremeNPModuleTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 21, 1, 1), )
if mibBuilder.loadTexts: extremeNPModuleTable.setStatus('current')
extremeNPModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 21, 1, 1, 1), ).setIndexNames((0, "EXTREME-NP-MIB", "extremeNPModuleSlotNumber"))
if mibBuilder.loadTexts: extremeNPModuleEntry.setStatus('current')
extremeNPModuleSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeNPModuleSlotNumber.setStatus('current')
extremeNPModuleDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeNPModuleDescription.setStatus('current')
extremeNPModuleCurrentSoftware = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeNPModuleCurrentSoftware.setStatus('current')
extremeNPModulePrimarySoftware = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeNPModulePrimarySoftware.setStatus('current')
extremeNPModuleSecondarySoftware = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeNPModuleSecondarySoftware.setStatus('current')
extremeNPModuleBootromVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeNPModuleBootromVersion.setStatus('current')
extremeNPModuleProcessorState = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeNPModuleProcessorState.setStatus('current')
extremeSMAModule = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 21, 2))
extremeSMATable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 21, 2, 1), )
if mibBuilder.loadTexts: extremeSMATable.setStatus('current')
extremeSMAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 21, 2, 1, 1), ).setIndexNames((0, "EXTREME-NP-MIB", "extremeSMASlotNumber"))
if mibBuilder.loadTexts: extremeSMAEntry.setStatus('current')
extremeSMASlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSMASlotNumber.setStatus('current')
extremeSMAProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSMAProtocolVersion.setStatus('current')
extremeSMAServiceVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSMAServiceVersion.setStatus('current')
extremeSMAUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSMAUpTime.setStatus('current')
extremeSMACpuUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSMACpuUtilization.setStatus('current')
extremeSMAMemUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSMAMemUtilization.setStatus('current')
extremeSMAQosBroadcaster = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSMAQosBroadcaster.setStatus('current')
extremeSMANumFromBroadcaster = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSMANumFromBroadcaster.setStatus('current')
extremeSMANumToListener = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 2, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSMANumToListener.setStatus('current')
extremeSMABytesBroadcaster = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 2, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSMABytesBroadcaster.setStatus('current')
extremeSMABytesListener = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 2, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSMABytesListener.setStatus('current')
extremeATMModule = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3))
extremeATMCellPduTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 1), )
if mibBuilder.loadTexts: extremeATMCellPduTable.setStatus('current')
extremeATMCellPduEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 1, 1), ).setIndexNames((0, "EXTREME-NP-MIB", "extremeATMPortNumber"))
if mibBuilder.loadTexts: extremeATMCellPduEntry.setStatus('current')
extremeATMPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeATMPortNumber.setStatus('current')
extremeATMRxCell = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeATMRxCell.setStatus('current')
extremeATMTxCell = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeATMTxCell.setStatus('current')
extremeATMRxCellHecError = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeATMRxCellHecError.setStatus('current')
extremeATMRxCellError = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeATMRxCellError.setStatus('current')
extremeATMRxAAL5Pdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeATMRxAAL5Pdu.setStatus('current')
extremeATMTxAAL5Pdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeATMTxAAL5Pdu.setStatus('current')
extremeATMRxAAL5Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeATMRxAAL5Bytes.setStatus('current')
extremeATMTxAAL5Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeATMTxAAL5Bytes.setStatus('current')
extremeATMPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeATMPortStatus.setStatus('current')
extremeATMVpiVciTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 2), )
if mibBuilder.loadTexts: extremeATMVpiVciTable.setStatus('current')
extremeATMVpiVciEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 2, 1), ).setIndexNames((0, "EXTREME-NP-MIB", "extremeATMPortNum"), (0, "EXTREME-NP-MIB", "extremeATMPvc"))
if mibBuilder.loadTexts: extremeATMVpiVciEntry.setStatus('current')
extremeATMPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeATMPortNum.setStatus('current')
extremeATMPvc = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3072))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeATMPvc.setStatus('current')
extremeATMVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeATMVpi.setStatus('current')
extremeATMVci = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(17, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeATMVci.setStatus('current')
extremeMplsModule = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4))
extremeMplsTlsTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1), )
if mibBuilder.loadTexts: extremeMplsTlsTable.setStatus('current')
extremeMplsTlsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1), ).setIndexNames((0, "EXTREME-NP-MIB", "extremeMplsTlsNum"))
if mibBuilder.loadTexts: extremeMplsTlsEntry.setStatus('current')
extremeMplsTlsNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsNum.setStatus('current')
extremeMplsTlsName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsName.setStatus('current')
extremeMplsTlsLocalIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsLocalIpAddr.setStatus('current')
extremeMplsTlsPeerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsPeerIpAddr.setStatus('current')
extremeMplsTlsLocalVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsLocalVlanID.setStatus('current')
extremeMplsTlsLocalVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsLocalVlanName.setStatus('current')
extremeMplsTlsDynamic = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsDynamic.setStatus('current')
extremeMplsTlsType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsType.setStatus('current')
extremeMplsTlsVcID = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsVcID.setStatus('current')
extremeMplsTlsLocalGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsLocalGroupID.setStatus('current')
extremeMplsTlsRemoteGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsRemoteGroupID.setStatus('current')
extremeMplsTlsIngressVcLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsIngressVcLabel.setStatus('current')
extremeMplsTlsEgressVcLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsEgressVcLabel.setStatus('current')
extremeMplsTlsVcState = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 79))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsVcState.setStatus('current')
extremeMplsTlsPacketTx = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsPacketTx.setStatus('current')
extremeMplsTlsPacketRx = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsPacketRx.setStatus('current')
extremeMplsTlsOctetTx = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsOctetTx.setStatus('current')
extremeMplsTlsOctetRx = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 21, 4, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMplsTlsOctetRx.setStatus('current')
mibBuilder.exportSymbols("EXTREME-NP-MIB", extremeSMAModule=extremeSMAModule, extremeSMATable=extremeSMATable, extremeMplsTlsDynamic=extremeMplsTlsDynamic, extremeMplsTlsTable=extremeMplsTlsTable, extremeMplsTlsOctetTx=extremeMplsTlsOctetTx, extremeSMANumToListener=extremeSMANumToListener, extremeNPModuleEntry=extremeNPModuleEntry, extremeNPModuleBootromVersion=extremeNPModuleBootromVersion, extremeATMVpi=extremeATMVpi, extremeMplsTlsLocalIpAddr=extremeMplsTlsLocalIpAddr, extremeATMTxAAL5Bytes=extremeATMTxAAL5Bytes, extremeMplsTlsNum=extremeMplsTlsNum, extremeATMPortNum=extremeATMPortNum, extremeATMVpiVciEntry=extremeATMVpiVciEntry, extremeSMAProtocolVersion=extremeSMAProtocolVersion, extremeATMVci=extremeATMVci, extremeMplsTlsOctetRx=extremeMplsTlsOctetRx, extremeMplsTlsPeerIpAddr=extremeMplsTlsPeerIpAddr, extremeMplsTlsLocalVlanName=extremeMplsTlsLocalVlanName, extremeMplsTlsVcState=extremeMplsTlsVcState, extremeATMCellPduTable=extremeATMCellPduTable, extremeMplsModule=extremeMplsModule, extremeMplsTlsPacketRx=extremeMplsTlsPacketRx, extremeMplsTlsLocalGroupID=extremeMplsTlsLocalGroupID, extremeMplsTlsLocalVlanID=extremeMplsTlsLocalVlanID, PYSNMP_MODULE_ID=extremeNPMib, extremeNPModuleDescription=extremeNPModuleDescription, extremeSMABytesBroadcaster=extremeSMABytesBroadcaster, extremeATMRxCellError=extremeATMRxCellError, extremeNPModule=extremeNPModule, extremeATMPortStatus=extremeATMPortStatus, extremeATMModule=extremeATMModule, extremeNPModulePrimarySoftware=extremeNPModulePrimarySoftware, extremeATMTxCell=extremeATMTxCell, extremeSMAUpTime=extremeSMAUpTime, extremeATMPvc=extremeATMPvc, extremeNPMib=extremeNPMib, extremeATMRxAAL5Bytes=extremeATMRxAAL5Bytes, extremeMplsTlsPacketTx=extremeMplsTlsPacketTx, extremeMplsTlsName=extremeMplsTlsName, extremeATMPortNumber=extremeATMPortNumber, extremeATMCellPduEntry=extremeATMCellPduEntry, extremeATMRxCell=extremeATMRxCell, extremeMplsTlsEgressVcLabel=extremeMplsTlsEgressVcLabel, extremeATMRxAAL5Pdu=extremeATMRxAAL5Pdu, extremeSMAEntry=extremeSMAEntry, extremeATMTxAAL5Pdu=extremeATMTxAAL5Pdu, extremeMplsTlsType=extremeMplsTlsType, extremeSMAQosBroadcaster=extremeSMAQosBroadcaster, extremeNPModuleCurrentSoftware=extremeNPModuleCurrentSoftware, extremeSMABytesListener=extremeSMABytesListener, extremeMplsTlsIngressVcLabel=extremeMplsTlsIngressVcLabel, extremeMplsTlsVcID=extremeMplsTlsVcID, extremeATMRxCellHecError=extremeATMRxCellHecError, extremeSMANumFromBroadcaster=extremeSMANumFromBroadcaster, extremeNPModuleProcessorState=extremeNPModuleProcessorState, extremeMplsTlsRemoteGroupID=extremeMplsTlsRemoteGroupID, extremeNPModuleSecondarySoftware=extremeNPModuleSecondarySoftware, extremeSMAMemUtilization=extremeSMAMemUtilization, extremeNPModuleTable=extremeNPModuleTable, extremeATMVpiVciTable=extremeATMVpiVciTable, extremeSMASlotNumber=extremeSMASlotNumber, extremeMplsTlsEntry=extremeMplsTlsEntry, extremeSMACpuUtilization=extremeSMACpuUtilization, extremeSMAServiceVersion=extremeSMAServiceVersion, extremeNPModuleSlotNumber=extremeNPModuleSlotNumber)
