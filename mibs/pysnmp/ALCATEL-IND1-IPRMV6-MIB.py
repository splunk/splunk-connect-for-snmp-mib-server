#
# PySNMP MIB module ALCATEL-IND1-IPRMV6-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-IPRMV6-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:02:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
routingIND1Iprm, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "routingIND1Iprm")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
IANAipRouteProtocol, = mibBuilder.importSymbols("IANA-RTPROTO-MIB", "IANAipRouteProtocol")
Ipv6Address, Ipv6IfIndex = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address", "Ipv6IfIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, IpAddress, Counter64, Integer32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter32, Gauge32, MibIdentifier, TimeTicks, Bits, iso, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "IpAddress", "Counter64", "Integer32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter32", "Gauge32", "MibIdentifier", "TimeTicks", "Bits", "iso", "NotificationType")
RowStatus, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "DisplayString", "TextualConvention")
alcatelIND1IPRMV6MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2))
alcatelIND1IPRMV6MIB.setRevisions(('2010-02-22 00:00',))
if mibBuilder.loadTexts: alcatelIND1IPRMV6MIB.setLastUpdated('201307260000Z')
if mibBuilder.loadTexts: alcatelIND1IPRMV6MIB.setOrganization('Alcatel-Lucent')
alcatelIND1IPRMV6MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1))
alaIprmV6Config = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1))
class AlaIprmV6RtPrefType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("local", 1), ("static", 2), ("ospf", 3), ("rip", 4), ("bgpExternal", 5), ("bgpInternal", 6), ("isisl1", 7), ("isisl2", 8))

alaIprmV6RouteTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 1), )
if mibBuilder.loadTexts: alaIprmV6RouteTable.setStatus('current')
alaIprmV6RouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6RouteDest"), (0, "ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6RoutePfxLength"), (0, "ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6RouteNextHop"), (0, "ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6RouteProtocol"), (0, "ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6RouteIfIndex"))
if mibBuilder.loadTexts: alaIprmV6RouteEntry.setStatus('current')
alaIprmV6RouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 1, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: alaIprmV6RouteDest.setStatus('current')
alaIprmV6RoutePfxLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setUnits('bits')
if mibBuilder.loadTexts: alaIprmV6RoutePfxLength.setStatus('current')
alaIprmV6RouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 1, 1, 3), Ipv6Address())
if mibBuilder.loadTexts: alaIprmV6RouteNextHop.setStatus('current')
alaIprmV6RouteProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 1, 1, 4), IANAipRouteProtocol())
if mibBuilder.loadTexts: alaIprmV6RouteProtocol.setStatus('current')
alaIprmV6RouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 1, 1, 5), Ipv6IfIndex())
if mibBuilder.loadTexts: alaIprmV6RouteIfIndex.setStatus('current')
alaIprmV6RouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIprmV6RouteMetric.setStatus('current')
alaIprmV6RouteValid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIprmV6RouteValid.setStatus('current')
alaIprmV6StaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 2), )
if mibBuilder.loadTexts: alaIprmV6StaticRouteTable.setStatus('current')
alaIprmV6StaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6StaticRouteDest"), (0, "ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6StaticRoutePfxLength"), (0, "ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6StaticRouteNextHop"), (0, "ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6StaticRouteIfIndex"))
if mibBuilder.loadTexts: alaIprmV6StaticRouteEntry.setStatus('current')
alaIprmV6StaticRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 2, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: alaIprmV6StaticRouteDest.setStatus('current')
alaIprmV6StaticRoutePfxLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: alaIprmV6StaticRoutePfxLength.setStatus('current')
alaIprmV6StaticRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 2, 1, 3), Ipv6Address())
if mibBuilder.loadTexts: alaIprmV6StaticRouteNextHop.setStatus('current')
alaIprmV6StaticRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 2, 1, 4), Ipv6IfIndex())
if mibBuilder.loadTexts: alaIprmV6StaticRouteIfIndex.setStatus('current')
alaIprmV6StaticRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 2, 1, 5), Unsigned32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIprmV6StaticRouteMetric.setStatus('current')
alaIprmV6StaticRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIprmV6StaticRouteStatus.setStatus('current')
alaIprmV6StaticRouteTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIprmV6StaticRouteTag.setStatus('current')
alaIprmV6StaticRouteName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 2, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIprmV6StaticRouteName.setStatus('current')
alaIprmV6RtPrefTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 3), )
if mibBuilder.loadTexts: alaIprmV6RtPrefTable.setStatus('current')
alaIprmV6RtPrefTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6RtPrefEntryType"))
if mibBuilder.loadTexts: alaIprmV6RtPrefTableEntry.setStatus('current')
alaIprmV6RtPrefEntryType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 3, 1, 1), AlaIprmV6RtPrefType())
if mibBuilder.loadTexts: alaIprmV6RtPrefEntryType.setStatus('current')
alaIprmV6RtPrefEntryValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIprmV6RtPrefEntryValue.setStatus('current')
alcatelIND1IPRMV6MIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 2))
alcatelIND1IPRMV6MIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 2, 1))
alcatelIND1IPRMV6MIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 2, 2))
alaIprmV6Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 2, 1, 1)).setObjects(("ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6ConfigMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIprmV6Compliance = alaIprmV6Compliance.setStatus('current')
alaIprmV6ConfigMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 2, 2, 2, 2, 1)).setObjects(("ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6RouteMetric"), ("ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6RouteValid"), ("ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6StaticRouteMetric"), ("ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6StaticRouteStatus"), ("ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6StaticRouteTag"), ("ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6StaticRouteName"), ("ALCATEL-IND1-IPRMV6-MIB", "alaIprmV6RtPrefEntryValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIprmV6ConfigMIBGroup = alaIprmV6ConfigMIBGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-IPRMV6-MIB", alaIprmV6RoutePfxLength=alaIprmV6RoutePfxLength, alaIprmV6StaticRouteTable=alaIprmV6StaticRouteTable, alaIprmV6ConfigMIBGroup=alaIprmV6ConfigMIBGroup, alaIprmV6RouteTable=alaIprmV6RouteTable, alaIprmV6StaticRouteMetric=alaIprmV6StaticRouteMetric, alaIprmV6RtPrefTableEntry=alaIprmV6RtPrefTableEntry, PYSNMP_MODULE_ID=alcatelIND1IPRMV6MIB, alaIprmV6RouteValid=alaIprmV6RouteValid, alaIprmV6StaticRouteIfIndex=alaIprmV6StaticRouteIfIndex, alaIprmV6StaticRoutePfxLength=alaIprmV6StaticRoutePfxLength, alaIprmV6RtPrefTable=alaIprmV6RtPrefTable, alaIprmV6RtPrefEntryType=alaIprmV6RtPrefEntryType, alaIprmV6RouteNextHop=alaIprmV6RouteNextHop, alaIprmV6RtPrefEntryValue=alaIprmV6RtPrefEntryValue, alcatelIND1IPRMV6MIBCompliances=alcatelIND1IPRMV6MIBCompliances, alaIprmV6StaticRouteDest=alaIprmV6StaticRouteDest, alaIprmV6RouteMetric=alaIprmV6RouteMetric, alcatelIND1IPRMV6MIBGroups=alcatelIND1IPRMV6MIBGroups, alaIprmV6StaticRouteTag=alaIprmV6StaticRouteTag, alaIprmV6Compliance=alaIprmV6Compliance, alaIprmV6RouteEntry=alaIprmV6RouteEntry, alcatelIND1IPRMV6MIBConformance=alcatelIND1IPRMV6MIBConformance, alcatelIND1IPRMV6MIB=alcatelIND1IPRMV6MIB, alaIprmV6StaticRouteName=alaIprmV6StaticRouteName, alcatelIND1IPRMV6MIBObjects=alcatelIND1IPRMV6MIBObjects, alaIprmV6Config=alaIprmV6Config, alaIprmV6RouteIfIndex=alaIprmV6RouteIfIndex, alaIprmV6StaticRouteStatus=alaIprmV6StaticRouteStatus, AlaIprmV6RtPrefType=AlaIprmV6RtPrefType, alaIprmV6RouteDest=alaIprmV6RouteDest, alaIprmV6StaticRouteEntry=alaIprmV6StaticRouteEntry, alaIprmV6StaticRouteNextHop=alaIprmV6StaticRouteNextHop, alaIprmV6RouteProtocol=alaIprmV6RouteProtocol)
