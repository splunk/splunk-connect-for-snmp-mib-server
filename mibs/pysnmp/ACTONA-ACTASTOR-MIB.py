#
# PySNMP MIB module ACTONA-ACTASTOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ACTONA-ACTASTOR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:58:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, Gauge32, Bits, IpAddress, Integer32, iso, Counter64, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Unsigned32, enterprises, Counter32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Gauge32", "Bits", "IpAddress", "Integer32", "iso", "Counter64", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Unsigned32", "enterprises", "Counter32", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
actona = ModuleIdentity((1, 3, 6, 1, 4, 1, 17471))
actona.setRevisions(('2010-07-30 00:00', '2004-12-23 00:00', '2003-11-24 16:10',))
if mibBuilder.loadTexts: actona.setLastUpdated('201007300000Z')
if mibBuilder.loadTexts: actona.setOrganization('Cisco Systems, Inc.')
acNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 17471, 0))
actastor = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1))
if mibBuilder.loadTexts: actastor.setStatus('current')
generalInformation = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 1))
if mibBuilder.loadTexts: generalInformation.setStatus('current')
actastorVersion = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: actastorVersion.setStatus('current')
buildString = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buildString.setStatus('current')
support = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 1, 3))
if mibBuilder.loadTexts: support.setStatus('current')
email = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 1, 3, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: email.setStatus('current')
license = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 1, 4))
if mibBuilder.loadTexts: license.setStatus('current')
isValid = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isValid.setStatus('current')
daysLeft = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99999))).setUnits('days (99999 is unlimited license)').setMaxAccess("readonly")
if mibBuilder.loadTexts: daysLeft.setStatus('current')
manager = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 2))
if mibBuilder.loadTexts: manager.setStatus('current')
mgrCentralServerHost = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 2, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgrCentralServerHost.setStatus('current')
mgrLogsTrap = NotificationType((1, 3, 6, 1, 4, 1, 17471, 1, 2, 2))
if mibBuilder.loadTexts: mgrLogsTrap.setStatus('deprecated')
coreServer = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 3))
if mibBuilder.loadTexts: coreServer.setStatus('current')
csGeneral = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 3, 1))
if mibBuilder.loadTexts: csGeneral.setStatus('current')
csIsConfigured = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csIsConfigured.setStatus('current')
csIsAlive = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csIsAlive.setStatus('current')
csUpTime = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 3, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csUpTime.setStatus('current')
csState = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2))
if mibBuilder.loadTexts: csState.setStatus('current')
csConnectivityTable = MibTable((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 1), )
if mibBuilder.loadTexts: csConnectivityTable.setStatus('current')
csConnectivityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 1, 1), ).setIndexNames((0, "ACTONA-ACTASTOR-MIB", "csConTabIndex"))
if mibBuilder.loadTexts: csConnectivityEntry.setStatus('current')
csConTabIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: csConTabIndex.setStatus('current')
csConTabClusterID = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csConTabClusterID.setStatus('current')
csConTabClusterName = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csConTabClusterName.setStatus('current')
csConTabIsConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csConTabIsConnected.setStatus('current')
csConTabTotalSentMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csConTabTotalSentMessages.setStatus('current')
csConTabSentCompressionRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: csConTabSentCompressionRatio.setStatus('current')
csConTabTotalReceivedMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csConTabTotalReceivedMessages.setStatus('current')
csConTabReceivedCompressionRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: csConTabReceivedCompressionRatio.setStatus('current')
csConTabTotalSentKBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 1, 1, 9), Unsigned32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: csConTabTotalSentKBytes.setStatus('current')
csConTabTotalReceivedKBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 1, 1, 10), Unsigned32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: csConTabTotalReceivedKBytes.setStatus('current')
csDeviceName = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csDeviceName.setStatus('current')
csWINS = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csWINS.setStatus('current')
csCIFSServersTable = MibTable((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 4), )
if mibBuilder.loadTexts: csCIFSServersTable.setStatus('current')
csCIFSServersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 4, 1), ).setIndexNames((0, "ACTONA-ACTASTOR-MIB", "csCIFSServersTabIndex"))
if mibBuilder.loadTexts: csCIFSServersEntry.setStatus('current')
csCIFSServersTabIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: csCIFSServersTabIndex.setStatus('current')
csCIFSServersTabServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 4, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csCIFSServersTabServerName.setStatus('current')
csNFSServersTable = MibTable((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 5), )
if mibBuilder.loadTexts: csNFSServersTable.setStatus('current')
csNFSServersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 5, 1), ).setIndexNames((0, "ACTONA-ACTASTOR-MIB", "csNFSServersTabIndex"))
if mibBuilder.loadTexts: csNFSServersEntry.setStatus('current')
csNFSServersTabIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: csNFSServersTabIndex.setStatus('current')
csNFSServersTabServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 5, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csNFSServersTabServerName.setStatus('current')
csNFSServersTabUseTCP = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csNFSServersTabUseTCP.setStatus('current')
csNFSServersTabUseUDP = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 3, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csNFSServersTabUseUDP.setStatus('current')
csLogsTrap = NotificationType((1, 3, 6, 1, 4, 1, 17471, 1, 3, 3))
if mibBuilder.loadTexts: csLogsTrap.setStatus('deprecated')
edgeServer = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 4))
if mibBuilder.loadTexts: edgeServer.setStatus('current')
esGeneral = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 4, 1))
if mibBuilder.loadTexts: esGeneral.setStatus('current')
esIsConfigured = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: esIsConfigured.setStatus('current')
esIsAlive = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: esIsAlive.setStatus('current')
esUpTime = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esUpTime.setStatus('current')
esState = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2))
if mibBuilder.loadTexts: esState.setStatus('current')
esConnectivityTable = MibTable((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 1), )
if mibBuilder.loadTexts: esConnectivityTable.setStatus('current')
esConnectivityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 1, 1), ).setIndexNames((0, "ACTONA-ACTASTOR-MIB", "esConTabIndex"))
if mibBuilder.loadTexts: esConnectivityEntry.setStatus('current')
esConTabIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: esConTabIndex.setStatus('current')
esConTabClusterID = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: esConTabClusterID.setStatus('current')
esConTabClusterName = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esConTabClusterName.setStatus('current')
esConTabIsConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: esConTabIsConnected.setStatus('current')
esConTabTotalSentMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esConTabTotalSentMessages.setStatus('current')
esConTabSentCompressionRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: esConTabSentCompressionRatio.setStatus('current')
esConTabTotalReceivedMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esConTabTotalReceivedMessages.setStatus('current')
esConTabReceivedCompressionRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: esConTabReceivedCompressionRatio.setStatus('current')
esConTabTotalSentKBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 1, 1, 9), Unsigned32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: esConTabTotalSentKBytes.setStatus('current')
esConTabTotalReceivedKBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 1, 1, 10), Unsigned32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: esConTabTotalReceivedKBytes.setStatus('current')
esCIFSInfo = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 2))
if mibBuilder.loadTexts: esCIFSInfo.setStatus('current')
esTotalBytesRead = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 2, 1), Unsigned32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: esTotalBytesRead.setStatus('current')
esTotalWrittenBytes = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 2, 2), Unsigned32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: esTotalWrittenBytes.setStatus('current')
esRemoteRequestCount = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esRemoteRequestCount.setStatus('current')
esLocalRequestCount = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esLocalRequestCount.setStatus('current')
esTotalRemoteTime = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 2, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esTotalRemoteTime.setStatus('current')
esTotalLocalTime = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 2, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esTotalLocalTime.setStatus('current')
esConnectedSessionCount = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: esConnectedSessionCount.setStatus('current')
esCifsOpenFiles = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCifsOpenFiles.setStatus('current')
esCacheInfo = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 4))
if mibBuilder.loadTexts: esCacheInfo.setStatus('current')
esMaxCacheVolume = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 4, 1), Unsigned32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: esMaxCacheVolume.setStatus('current')
esCurrentCacheVolume = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 4, 2), Unsigned32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: esCurrentCacheVolume.setStatus('current')
esMaxCacheResources = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: esMaxCacheResources.setStatus('current')
esCurrentCacheResources = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCurrentCacheResources.setStatus('current')
esResourceEvictedNum = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esResourceEvictedNum.setStatus('current')
esLastEvictedTime = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 4, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esLastEvictedTime.setStatus('current')
esVolHiWatermark = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 4, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: esVolHiWatermark.setStatus('current')
esVolLoWatermark = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 4, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: esVolLoWatermark.setStatus('current')
esAmntHiWatermark = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 4, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: esAmntHiWatermark.setStatus('current')
esAmntLoWatermark = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 4, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: esAmntLoWatermark.setStatus('current')
esEvictedAge = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 4, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esEvictedAge.setStatus('current')
esEvictedLastAccess = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 4, 2, 4, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esEvictedLastAccess.setStatus('current')
esLogsTrap = NotificationType((1, 3, 6, 1, 4, 1, 17471, 1, 4, 3))
if mibBuilder.loadTexts: esLogsTrap.setStatus('deprecated')
cifsAO = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 6))
if mibBuilder.loadTexts: cifsAO.setStatus('current')
cfGeneral = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 6, 1))
if mibBuilder.loadTexts: cfGeneral.setStatus('current')
cfIsConfigured = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfIsConfigured.setStatus('current')
cfIsAlive = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfIsAlive.setStatus('current')
cfUpTime = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfUpTime.setStatus('current')
cfState = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2))
if mibBuilder.loadTexts: cfState.setStatus('current')
cfCIFSInfo = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 1))
if mibBuilder.loadTexts: cfCIFSInfo.setStatus('current')
cfTotalBytesRead = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 1, 1), Unsigned32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfTotalBytesRead.setStatus('current')
cfTotalWrittenBytes = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 1, 2), Unsigned32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfTotalWrittenBytes.setStatus('current')
cfRemoteRequestCount = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfRemoteRequestCount.setStatus('current')
cfLocalRequestCount = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfLocalRequestCount.setStatus('current')
cfTotalRemoteTime = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfTotalRemoteTime.setStatus('current')
cfTotalLocalTime = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfTotalLocalTime.setStatus('current')
cfConnectedSessionCount = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfConnectedSessionCount.setStatus('current')
cfCifsOpenFiles = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfCifsOpenFiles.setStatus('current')
cfCacheInfo = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 2))
if mibBuilder.loadTexts: cfCacheInfo.setStatus('current')
cfMaxCacheVolume = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 2, 1), Unsigned32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfMaxCacheVolume.setStatus('current')
cfCurrentCacheVolume = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 2, 2), Unsigned32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfCurrentCacheVolume.setStatus('current')
cfMaxCacheResources = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfMaxCacheResources.setStatus('current')
cfCurrentCacheResources = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfCurrentCacheResources.setStatus('current')
cfResourceEvictedNum = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfResourceEvictedNum.setStatus('current')
cfLastEvictedTime = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 2, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfLastEvictedTime.setStatus('current')
cfVolHiWatermark = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfVolHiWatermark.setStatus('current')
cfVolLoWatermark = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfVolLoWatermark.setStatus('current')
cfAmntHiWatermark = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfAmntHiWatermark.setStatus('current')
cfAmntLoWatermark = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfAmntLoWatermark.setStatus('current')
cfEvictedAge = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 2, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfEvictedAge.setStatus('current')
cfEvictedLastAccess = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 6, 2, 2, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfEvictedLastAccess.setStatus('current')
notificationsInfo = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 1, 5))
if mibBuilder.loadTexts: notificationsInfo.setStatus('current')
acLogSeverity = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("fatal", 1), ("error", 2), ("warning", 3), ("info", 4), ("debug", 5)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: acLogSeverity.setStatus('current')
acLogMsgText = MibScalar((1, 3, 6, 1, 4, 1, 17471, 1, 5, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: acLogMsgText.setStatus('current')
acCsLogsTrap = NotificationType((1, 3, 6, 1, 4, 1, 17471, 0, 0)).setObjects(("ACTONA-ACTASTOR-MIB", "acLogSeverity"), ("ACTONA-ACTASTOR-MIB", "acLogMsgText"))
if mibBuilder.loadTexts: acCsLogsTrap.setStatus('current')
acMgrLogsTrap = NotificationType((1, 3, 6, 1, 4, 1, 17471, 0, 1)).setObjects(("ACTONA-ACTASTOR-MIB", "acLogSeverity"), ("ACTONA-ACTASTOR-MIB", "acLogMsgText"))
if mibBuilder.loadTexts: acMgrLogsTrap.setStatus('current')
acEsLogsTrap = NotificationType((1, 3, 6, 1, 4, 1, 17471, 0, 2)).setObjects(("ACTONA-ACTASTOR-MIB", "acLogSeverity"), ("ACTONA-ACTASTOR-MIB", "acLogMsgText"))
if mibBuilder.loadTexts: acEsLogsTrap.setStatus('current')
actastorGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 17471, 2))
if mibBuilder.loadTexts: actastorGroups.setStatus('current')
generalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17471, 2, 1)).setObjects(("ACTONA-ACTASTOR-MIB", "actastorVersion"), ("ACTONA-ACTASTOR-MIB", "buildString"), ("ACTONA-ACTASTOR-MIB", "email"), ("ACTONA-ACTASTOR-MIB", "isValid"), ("ACTONA-ACTASTOR-MIB", "daysLeft"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    generalGroup = generalGroup.setStatus('current')
managerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17471, 2, 2)).setObjects(("ACTONA-ACTASTOR-MIB", "mgrCentralServerHost"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    managerGroup = managerGroup.setStatus('current')
coreServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17471, 2, 3)).setObjects(("ACTONA-ACTASTOR-MIB", "csDeviceName"), ("ACTONA-ACTASTOR-MIB", "csIsConfigured"), ("ACTONA-ACTASTOR-MIB", "csIsAlive"), ("ACTONA-ACTASTOR-MIB", "csUpTime"), ("ACTONA-ACTASTOR-MIB", "csWINS"), ("ACTONA-ACTASTOR-MIB", "csConTabClusterID"), ("ACTONA-ACTASTOR-MIB", "csConTabClusterName"), ("ACTONA-ACTASTOR-MIB", "csConTabIsConnected"), ("ACTONA-ACTASTOR-MIB", "csConTabTotalSentMessages"), ("ACTONA-ACTASTOR-MIB", "csConTabSentCompressionRatio"), ("ACTONA-ACTASTOR-MIB", "csConTabTotalReceivedMessages"), ("ACTONA-ACTASTOR-MIB", "csConTabReceivedCompressionRatio"), ("ACTONA-ACTASTOR-MIB", "csConTabTotalSentKBytes"), ("ACTONA-ACTASTOR-MIB", "csConTabTotalReceivedKBytes"), ("ACTONA-ACTASTOR-MIB", "csCIFSServersTabServerName"), ("ACTONA-ACTASTOR-MIB", "csNFSServersTabServerName"), ("ACTONA-ACTASTOR-MIB", "csNFSServersTabUseTCP"), ("ACTONA-ACTASTOR-MIB", "csNFSServersTabUseUDP"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coreServerGroup = coreServerGroup.setStatus('current')
edgeServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17471, 2, 4)).setObjects(("ACTONA-ACTASTOR-MIB", "esIsConfigured"), ("ACTONA-ACTASTOR-MIB", "esIsAlive"), ("ACTONA-ACTASTOR-MIB", "esUpTime"), ("ACTONA-ACTASTOR-MIB", "esTotalBytesRead"), ("ACTONA-ACTASTOR-MIB", "esTotalWrittenBytes"), ("ACTONA-ACTASTOR-MIB", "esRemoteRequestCount"), ("ACTONA-ACTASTOR-MIB", "esLocalRequestCount"), ("ACTONA-ACTASTOR-MIB", "esConnectedSessionCount"), ("ACTONA-ACTASTOR-MIB", "esCifsOpenFiles"), ("ACTONA-ACTASTOR-MIB", "esMaxCacheVolume"), ("ACTONA-ACTASTOR-MIB", "esCurrentCacheVolume"), ("ACTONA-ACTASTOR-MIB", "esMaxCacheResources"), ("ACTONA-ACTASTOR-MIB", "esCurrentCacheResources"), ("ACTONA-ACTASTOR-MIB", "esTotalRemoteTime"), ("ACTONA-ACTASTOR-MIB", "esTotalLocalTime"), ("ACTONA-ACTASTOR-MIB", "esConTabClusterID"), ("ACTONA-ACTASTOR-MIB", "esConTabClusterName"), ("ACTONA-ACTASTOR-MIB", "esConTabIsConnected"), ("ACTONA-ACTASTOR-MIB", "esConTabTotalSentMessages"), ("ACTONA-ACTASTOR-MIB", "esConTabSentCompressionRatio"), ("ACTONA-ACTASTOR-MIB", "esConTabTotalReceivedMessages"), ("ACTONA-ACTASTOR-MIB", "esConTabReceivedCompressionRatio"), ("ACTONA-ACTASTOR-MIB", "esConTabTotalSentKBytes"), ("ACTONA-ACTASTOR-MIB", "esConTabTotalReceivedKBytes"), ("ACTONA-ACTASTOR-MIB", "esResourceEvictedNum"), ("ACTONA-ACTASTOR-MIB", "esLastEvictedTime"), ("ACTONA-ACTASTOR-MIB", "esVolHiWatermark"), ("ACTONA-ACTASTOR-MIB", "esVolLoWatermark"), ("ACTONA-ACTASTOR-MIB", "esAmntHiWatermark"), ("ACTONA-ACTASTOR-MIB", "esAmntLoWatermark"), ("ACTONA-ACTASTOR-MIB", "esEvictedAge"), ("ACTONA-ACTASTOR-MIB", "esEvictedLastAccess"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    edgeServerGroup = edgeServerGroup.setStatus('current')
logNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 17471, 2, 5)).setObjects(("ACTONA-ACTASTOR-MIB", "csLogsTrap"), ("ACTONA-ACTASTOR-MIB", "esLogsTrap"), ("ACTONA-ACTASTOR-MIB", "mgrLogsTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    logNotificationsGroup = logNotificationsGroup.setStatus('deprecated')
logNotificationsGroupRev1 = NotificationGroup((1, 3, 6, 1, 4, 1, 17471, 2, 6)).setObjects(("ACTONA-ACTASTOR-MIB", "acCsLogsTrap"), ("ACTONA-ACTASTOR-MIB", "acEsLogsTrap"), ("ACTONA-ACTASTOR-MIB", "acMgrLogsTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    logNotificationsGroupRev1 = logNotificationsGroupRev1.setStatus('current')
acNotificationInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17471, 2, 7)).setObjects(("ACTONA-ACTASTOR-MIB", "acLogSeverity"), ("ACTONA-ACTASTOR-MIB", "acLogMsgText"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acNotificationInfoGroup = acNotificationInfoGroup.setStatus('current')
cifsAOGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17471, 2, 9)).setObjects(("ACTONA-ACTASTOR-MIB", "cfIsConfigured"), ("ACTONA-ACTASTOR-MIB", "cfIsAlive"), ("ACTONA-ACTASTOR-MIB", "cfUpTime"), ("ACTONA-ACTASTOR-MIB", "cfTotalBytesRead"), ("ACTONA-ACTASTOR-MIB", "cfTotalWrittenBytes"), ("ACTONA-ACTASTOR-MIB", "cfRemoteRequestCount"), ("ACTONA-ACTASTOR-MIB", "cfLocalRequestCount"), ("ACTONA-ACTASTOR-MIB", "cfTotalRemoteTime"), ("ACTONA-ACTASTOR-MIB", "cfTotalLocalTime"), ("ACTONA-ACTASTOR-MIB", "cfConnectedSessionCount"), ("ACTONA-ACTASTOR-MIB", "cfCifsOpenFiles"), ("ACTONA-ACTASTOR-MIB", "cfMaxCacheVolume"), ("ACTONA-ACTASTOR-MIB", "cfCurrentCacheVolume"), ("ACTONA-ACTASTOR-MIB", "cfMaxCacheResources"), ("ACTONA-ACTASTOR-MIB", "cfCurrentCacheResources"), ("ACTONA-ACTASTOR-MIB", "cfResourceEvictedNum"), ("ACTONA-ACTASTOR-MIB", "cfLastEvictedTime"), ("ACTONA-ACTASTOR-MIB", "cfVolHiWatermark"), ("ACTONA-ACTASTOR-MIB", "cfVolLoWatermark"), ("ACTONA-ACTASTOR-MIB", "cfAmntHiWatermark"), ("ACTONA-ACTASTOR-MIB", "cfAmntLoWatermark"), ("ACTONA-ACTASTOR-MIB", "cfEvictedAge"), ("ACTONA-ACTASTOR-MIB", "cfEvictedLastAccess"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cifsAOGroup = cifsAOGroup.setStatus('current')
mibBuilder.exportSymbols("ACTONA-ACTASTOR-MIB", csCIFSServersTabIndex=csCIFSServersTabIndex, csCIFSServersTable=csCIFSServersTable, cfLocalRequestCount=cfLocalRequestCount, generalInformation=generalInformation, coreServerGroup=coreServerGroup, esConTabClusterID=esConTabClusterID, esAmntLoWatermark=esAmntLoWatermark, esConTabSentCompressionRatio=esConTabSentCompressionRatio, cfIsConfigured=cfIsConfigured, esTotalWrittenBytes=esTotalWrittenBytes, cfRemoteRequestCount=cfRemoteRequestCount, cfTotalRemoteTime=cfTotalRemoteTime, acEsLogsTrap=acEsLogsTrap, esMaxCacheVolume=esMaxCacheVolume, actastor=actastor, esEvictedLastAccess=esEvictedLastAccess, esConTabTotalReceivedKBytes=esConTabTotalReceivedKBytes, actastorVersion=actastorVersion, acLogMsgText=acLogMsgText, esLogsTrap=esLogsTrap, acMgrLogsTrap=acMgrLogsTrap, cfAmntHiWatermark=cfAmntHiWatermark, cfMaxCacheVolume=cfMaxCacheVolume, esIsAlive=esIsAlive, esVolLoWatermark=esVolLoWatermark, esEvictedAge=esEvictedAge, esCurrentCacheVolume=esCurrentCacheVolume, esVolHiWatermark=esVolHiWatermark, support=support, daysLeft=daysLeft, esConnectivityTable=esConnectivityTable, edgeServerGroup=edgeServerGroup, managerGroup=managerGroup, csIsConfigured=csIsConfigured, csCIFSServersEntry=csCIFSServersEntry, logNotificationsGroup=logNotificationsGroup, csConTabClusterID=csConTabClusterID, esCacheInfo=esCacheInfo, esConTabTotalSentKBytes=esConTabTotalSentKBytes, esCIFSInfo=esCIFSInfo, acNotificationInfoGroup=acNotificationInfoGroup, esRemoteRequestCount=esRemoteRequestCount, csNFSServersEntry=csNFSServersEntry, acCsLogsTrap=acCsLogsTrap, esUpTime=esUpTime, esTotalLocalTime=esTotalLocalTime, cfTotalLocalTime=cfTotalLocalTime, csNFSServersTabIndex=csNFSServersTabIndex, csLogsTrap=csLogsTrap, esGeneral=esGeneral, logNotificationsGroupRev1=logNotificationsGroupRev1, esTotalRemoteTime=esTotalRemoteTime, manager=manager, esState=esState, esResourceEvictedNum=esResourceEvictedNum, isValid=isValid, csConTabIsConnected=csConTabIsConnected, esLocalRequestCount=esLocalRequestCount, esIsConfigured=esIsConfigured, cfCacheInfo=cfCacheInfo, cfIsAlive=cfIsAlive, cfUpTime=cfUpTime, csNFSServersTabUseUDP=csNFSServersTabUseUDP, csCIFSServersTabServerName=csCIFSServersTabServerName, csState=csState, actastorGroups=actastorGroups, esAmntHiWatermark=esAmntHiWatermark, csGeneral=csGeneral, csIsAlive=csIsAlive, license=license, cfLastEvictedTime=cfLastEvictedTime, cfEvictedAge=cfEvictedAge, csConTabTotalReceivedMessages=csConTabTotalReceivedMessages, esCurrentCacheResources=esCurrentCacheResources, mgrCentralServerHost=mgrCentralServerHost, generalGroup=generalGroup, cfEvictedLastAccess=cfEvictedLastAccess, csConnectivityEntry=csConnectivityEntry, coreServer=coreServer, cfResourceEvictedNum=cfResourceEvictedNum, actona=actona, acNotifications=acNotifications, cfVolHiWatermark=cfVolHiWatermark, cfTotalBytesRead=cfTotalBytesRead, csWINS=csWINS, cfMaxCacheResources=cfMaxCacheResources, PYSNMP_MODULE_ID=actona, edgeServer=edgeServer, cifsAO=cifsAO, csNFSServersTabServerName=csNFSServersTabServerName, mgrLogsTrap=mgrLogsTrap, csNFSServersTabUseTCP=csNFSServersTabUseTCP, esConTabTotalReceivedMessages=esConTabTotalReceivedMessages, acLogSeverity=acLogSeverity, csUpTime=csUpTime, csDeviceName=csDeviceName, buildString=buildString, cfConnectedSessionCount=cfConnectedSessionCount, esConTabTotalSentMessages=esConTabTotalSentMessages, cfCifsOpenFiles=cfCifsOpenFiles, csConTabTotalSentMessages=csConTabTotalSentMessages, cfState=cfState, cfGeneral=cfGeneral, esConnectedSessionCount=esConnectedSessionCount, csConnectivityTable=csConnectivityTable, csConTabTotalSentKBytes=csConTabTotalSentKBytes, esTotalBytesRead=esTotalBytesRead, esConTabReceivedCompressionRatio=esConTabReceivedCompressionRatio, cfAmntLoWatermark=cfAmntLoWatermark, cfVolLoWatermark=cfVolLoWatermark, email=email, cfCIFSInfo=cfCIFSInfo, esConTabIsConnected=esConTabIsConnected, esLastEvictedTime=esLastEvictedTime, csConTabSentCompressionRatio=csConTabSentCompressionRatio, esConTabIndex=esConTabIndex, cfTotalWrittenBytes=cfTotalWrittenBytes, csConTabClusterName=csConTabClusterName, cfCurrentCacheVolume=cfCurrentCacheVolume, notificationsInfo=notificationsInfo, esMaxCacheResources=esMaxCacheResources, csConTabTotalReceivedKBytes=csConTabTotalReceivedKBytes, csNFSServersTable=csNFSServersTable, csConTabIndex=csConTabIndex, esConTabClusterName=esConTabClusterName, cfCurrentCacheResources=cfCurrentCacheResources, csConTabReceivedCompressionRatio=csConTabReceivedCompressionRatio, cifsAOGroup=cifsAOGroup, esCifsOpenFiles=esCifsOpenFiles, esConnectivityEntry=esConnectivityEntry)
