#
# PySNMP MIB module CISCO-FCPING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-FCPING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:41:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
VsanIndex, FcAddressType, FcAddress = mibBuilder.importSymbols("CISCO-ST-TC", "VsanIndex", "FcAddressType", "FcAddress")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Integer32, Counter64, ModuleIdentity, Unsigned32, MibIdentifier, Gauge32, ObjectIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, TimeTicks, Counter32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter64", "ModuleIdentity", "Unsigned32", "MibIdentifier", "Gauge32", "ObjectIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "TimeTicks", "Counter32", "Bits")
TextualConvention, TruthValue, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowStatus", "DisplayString")
ciscoFcPingMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 295))
ciscoFcPingMIB.setRevisions(('2002-10-07 00:00',))
if mibBuilder.loadTexts: ciscoFcPingMIB.setLastUpdated('200210070000Z')
if mibBuilder.loadTexts: ciscoFcPingMIB.setOrganization('Cisco Systems Inc.')
ciscoFcPingMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 295, 1))
fcPingMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 295, 2))
fcPingConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 1))
fcPingStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 2))
fcPingNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 3))
fcPingNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 3, 0))
class FcStartOper(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enable", 1), ("disable", 2))

fcPingTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 1, 1), )
if mibBuilder.loadTexts: fcPingTable.setStatus('current')
fcPingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-FCPING-MIB", "fcPingIndex"))
if mibBuilder.loadTexts: fcPingEntry.setStatus('current')
fcPingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: fcPingIndex.setStatus('current')
fcPingVsanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 1, 1, 1, 2), VsanIndex().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcPingVsanIndex.setStatus('current')
fcPingAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 1, 1, 1, 3), FcAddressType().clone('wwn')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcPingAddressType.setStatus('current')
fcPingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 1, 1, 1, 4), FcAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcPingAddress.setStatus('current')
fcPingPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcPingPacketCount.setStatus('current')
fcPingPayloadSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1884))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcPingPayloadSize.setStatus('current')
fcPingPacketTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcPingPacketTimeout.setStatus('current')
fcPingDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600000))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcPingDelay.setStatus('current')
fcPingAgeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500000, 900000)).clone(500000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcPingAgeInterval.setStatus('current')
fcPingUsrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("high", 1), ("low", 2))).clone('low')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcPingUsrPriority.setStatus('current')
fcPingAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 1, 1, 1, 11), FcStartOper().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcPingAdminStatus.setStatus('current')
fcPingOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inProgress", 1), ("complete", 2), ("disabled", 3), ("failure", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcPingOperStatus.setStatus('current')
fcPingTrapOnCompletion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 1, 1, 1, 13), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcPingTrapOnCompletion.setStatus('current')
fcPingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 1, 1, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcPingRowStatus.setStatus('current')
fcPingStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 2, 1), )
if mibBuilder.loadTexts: fcPingStatsTable.setStatus('current')
fcPingStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-FCPING-MIB", "fcPingIndex"))
if mibBuilder.loadTexts: fcPingStatsEntry.setStatus('current')
fcPingTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 2, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcPingTxPackets.setStatus('current')
fcPingRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 2, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcPingRxPackets.setStatus('current')
fcPingMinRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: fcPingMinRtt.setStatus('current')
fcPingAvgRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: fcPingAvgRtt.setStatus('current')
fcPingMaxRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: fcPingMaxRtt.setStatus('current')
fcPingNumTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 2, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcPingNumTimeouts.setStatus('current')
fcPingCompletionNotify = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 295, 1, 3, 0, 1)).setObjects(("CISCO-FCPING-MIB", "fcPingAddress"), ("CISCO-FCPING-MIB", "fcPingTxPackets"), ("CISCO-FCPING-MIB", "fcPingRxPackets"))
if mibBuilder.loadTexts: fcPingCompletionNotify.setStatus('current')
fcPingMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 295, 2, 1))
fcPingMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 295, 2, 2))
fcPingMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 295, 2, 1, 1)).setObjects(("CISCO-FCPING-MIB", "fcPingConfigGroup"), ("CISCO-FCPING-MIB", "fcPingStatsGroup"), ("CISCO-FCPING-MIB", "fcPingNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcPingMIBCompliance = fcPingMIBCompliance.setStatus('current')
fcPingConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 295, 2, 2, 1)).setObjects(("CISCO-FCPING-MIB", "fcPingVsanIndex"), ("CISCO-FCPING-MIB", "fcPingAddressType"), ("CISCO-FCPING-MIB", "fcPingAddress"), ("CISCO-FCPING-MIB", "fcPingPacketCount"), ("CISCO-FCPING-MIB", "fcPingPayloadSize"), ("CISCO-FCPING-MIB", "fcPingPacketTimeout"), ("CISCO-FCPING-MIB", "fcPingDelay"), ("CISCO-FCPING-MIB", "fcPingAgeInterval"), ("CISCO-FCPING-MIB", "fcPingUsrPriority"), ("CISCO-FCPING-MIB", "fcPingAdminStatus"), ("CISCO-FCPING-MIB", "fcPingOperStatus"), ("CISCO-FCPING-MIB", "fcPingTrapOnCompletion"), ("CISCO-FCPING-MIB", "fcPingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcPingConfigGroup = fcPingConfigGroup.setStatus('current')
fcPingStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 295, 2, 2, 2)).setObjects(("CISCO-FCPING-MIB", "fcPingTxPackets"), ("CISCO-FCPING-MIB", "fcPingRxPackets"), ("CISCO-FCPING-MIB", "fcPingMinRtt"), ("CISCO-FCPING-MIB", "fcPingAvgRtt"), ("CISCO-FCPING-MIB", "fcPingMaxRtt"), ("CISCO-FCPING-MIB", "fcPingNumTimeouts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcPingStatsGroup = fcPingStatsGroup.setStatus('current')
fcPingNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 295, 2, 2, 3)).setObjects(("CISCO-FCPING-MIB", "fcPingCompletionNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcPingNotifyGroup = fcPingNotifyGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-FCPING-MIB", fcPingTable=fcPingTable, fcPingStatsGroup=fcPingStatsGroup, fcPingMaxRtt=fcPingMaxRtt, fcPingNotifications=fcPingNotifications, fcPingMinRtt=fcPingMinRtt, fcPingAddressType=fcPingAddressType, fcPingAddress=fcPingAddress, fcPingTrapOnCompletion=fcPingTrapOnCompletion, fcPingRxPackets=fcPingRxPackets, fcPingStatsEntry=fcPingStatsEntry, fcPingNumTimeouts=fcPingNumTimeouts, PYSNMP_MODULE_ID=ciscoFcPingMIB, fcPingIndex=fcPingIndex, fcPingMIBGroups=fcPingMIBGroups, FcStartOper=FcStartOper, fcPingMIBCompliance=fcPingMIBCompliance, fcPingAvgRtt=fcPingAvgRtt, fcPingDelay=fcPingDelay, fcPingEntry=fcPingEntry, fcPingNotification=fcPingNotification, fcPingOperStatus=fcPingOperStatus, fcPingAdminStatus=fcPingAdminStatus, fcPingNotifyGroup=fcPingNotifyGroup, fcPingPacketTimeout=fcPingPacketTimeout, fcPingCompletionNotify=fcPingCompletionNotify, fcPingPayloadSize=fcPingPayloadSize, ciscoFcPingMIB=ciscoFcPingMIB, fcPingConfigGroup=fcPingConfigGroup, fcPingAgeInterval=fcPingAgeInterval, fcPingUsrPriority=fcPingUsrPriority, ciscoFcPingMIBObjects=ciscoFcPingMIBObjects, fcPingRowStatus=fcPingRowStatus, fcPingMIBConformance=fcPingMIBConformance, fcPingStatsTable=fcPingStatsTable, fcPingTxPackets=fcPingTxPackets, fcPingStats=fcPingStats, fcPingConfiguration=fcPingConfiguration, fcPingMIBCompliances=fcPingMIBCompliances, fcPingPacketCount=fcPingPacketCount, fcPingVsanIndex=fcPingVsanIndex)
