#
# PySNMP MIB module PKTC-IETF-SIG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PKTC-IETF-SIG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:31:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
Dscp, = mibBuilder.importSymbols("DIFFSERV-DSCP-TC", "Dscp")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetPortNumber, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetPortNumber", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
IpAddress, mib_2, Integer32, ModuleIdentity, Gauge32, TimeTicks, MibIdentifier, Counter64, ObjectIdentity, Unsigned32, iso, Bits, Counter32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "mib-2", "Integer32", "ModuleIdentity", "Gauge32", "TimeTicks", "MibIdentifier", "Counter64", "ObjectIdentity", "Unsigned32", "iso", "Bits", "Counter32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, RowStatus, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TruthValue")
pktcIetfSigMib = ModuleIdentity((1, 3, 6, 1, 2, 1, 169))
pktcIetfSigMib.setRevisions(('2007-12-18 00:00',))
if mibBuilder.loadTexts: pktcIetfSigMib.setLastUpdated('200712180000Z')
if mibBuilder.loadTexts: pktcIetfSigMib.setOrganization('IETF IPCDN Working Group')
class TenthdBm(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd-1'

class PktcCodecType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
    namedValues = NamedValues(("other", 1), ("unknown", 2), ("g729", 3), ("reserved", 4), ("g729E", 5), ("pcmu", 6), ("g726at32", 7), ("g728", 8), ("pcma", 9), ("g726at16", 10), ("g726at24", 11), ("g726at40", 12), ("ilbc", 13), ("bv16", 14))

class PktcRingCadence(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 36)

class PktcSigType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("other", 1), ("ncs", 2))

class DtmfCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))
    namedValues = NamedValues(("dtmfcode0", 0), ("dtmfcode1", 1), ("dtmfcode2", 2), ("dtmfcode3", 3), ("dtmfcode4", 4), ("dtmfcode5", 5), ("dtmfcode6", 6), ("dtmfcode7", 7), ("dtmfcode8", 8), ("dtmfcode9", 9), ("dtmfcodeStar", 10), ("dtmfcodeHash", 11), ("dtmfcodeA", 12), ("dtmfcodeB", 13), ("dtmfcodeC", 14), ("dtmfcodeD", 15))

class PktcSubscriberSideSigProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("fsk", 1), ("dtmf", 2))

pktcSigMibObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 169, 1))
pktcSigDevObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 169, 1, 1))
pktcSigEndPntConfigObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 169, 1, 2))
pktcSigDevCodecTable = MibTable((1, 3, 6, 1, 2, 1, 169, 1, 1, 1), )
if mibBuilder.loadTexts: pktcSigDevCodecTable.setStatus('current')
pktcSigDevCodecEntry = MibTableRow((1, 3, 6, 1, 2, 1, 169, 1, 1, 1, 1), ).setIndexNames((0, "PKTC-IETF-SIG-MIB", "pktcSigDevCodecComboIndex"), (0, "PKTC-IETF-SIG-MIB", "pktcSigDevCodecType"))
if mibBuilder.loadTexts: pktcSigDevCodecEntry.setStatus('current')
pktcSigDevCodecComboIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: pktcSigDevCodecComboIndex.setStatus('current')
pktcSigDevCodecType = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 1, 1, 2), PktcCodecType())
if mibBuilder.loadTexts: pktcSigDevCodecType.setStatus('current')
pktcSigDevCodecMax = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigDevCodecMax.setStatus('current')
pktcSigDevEchoCancellation = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigDevEchoCancellation.setStatus('current')
pktcSigDevSilenceSuppression = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigDevSilenceSuppression.setStatus('current')
pktcSigDevCidSigProtocol = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 4), PktcSubscriberSideSigProtocol().clone('fsk')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevCidSigProtocol.setStatus('current')
pktcSigDevR0Cadence = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 5), PktcRingCadence()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevR0Cadence.setStatus('current')
pktcSigDevR1Cadence = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 6), PktcRingCadence()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevR1Cadence.setStatus('current')
pktcSigDevR2Cadence = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 7), PktcRingCadence()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevR2Cadence.setStatus('current')
pktcSigDevR3Cadence = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 8), PktcRingCadence()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevR3Cadence.setStatus('current')
pktcSigDevR4Cadence = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 9), PktcRingCadence()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevR4Cadence.setStatus('current')
pktcSigDevR5Cadence = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 10), PktcRingCadence()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevR5Cadence.setStatus('current')
pktcSigDevR6Cadence = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 11), PktcRingCadence()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevR6Cadence.setStatus('current')
pktcSigDevR7Cadence = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 12), PktcRingCadence()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevR7Cadence.setStatus('current')
pktcSigDevRgCadence = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 13), PktcRingCadence()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevRgCadence.setStatus('current')
pktcSigDevRsCadence = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 14), PktcRingCadence()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevRsCadence.setStatus('current')
pktcSigDefCallSigDscp = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 15), Dscp()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDefCallSigDscp.setStatus('current')
pktcSigDefMediaStreamDscp = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 16), Dscp()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDefMediaStreamDscp.setStatus('current')
pktcSigCapabilityTable = MibTable((1, 3, 6, 1, 2, 1, 169, 1, 1, 17), )
if mibBuilder.loadTexts: pktcSigCapabilityTable.setStatus('current')
pktcSigCapabilityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 169, 1, 1, 17, 1), ).setIndexNames((0, "PKTC-IETF-SIG-MIB", "pktcSigCapabilityIndex"))
if mibBuilder.loadTexts: pktcSigCapabilityEntry.setStatus('current')
pktcSigCapabilityIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 17, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: pktcSigCapabilityIndex.setStatus('current')
pktcSigCapabilityType = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 17, 1, 2), PktcSigType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigCapabilityType.setStatus('current')
pktcSigCapabilityVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 17, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigCapabilityVersion.setStatus('current')
pktcSigCapabilityVendorExt = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 17, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigCapabilityVendorExt.setStatus('current')
pktcSigDefNcsReceiveUdpPort = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 18), InetPortNumber().subtype(subtypeSpec=ValueRangeConstraint(1025, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigDefNcsReceiveUdpPort.setStatus('current')
pktcSigPowerRingFrequency = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("f20Hz", 1), ("f25Hz", 2), ("f33Point33Hz", 3), ("f50Hz", 4), ("f15Hz", 5), ("f16Hz", 6), ("f22Hz", 7), ("f23Hz", 8), ("f45Hz", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigPowerRingFrequency.setStatus('current')
pktcSigPulseSignalTable = MibTable((1, 3, 6, 1, 2, 1, 169, 1, 1, 20), )
if mibBuilder.loadTexts: pktcSigPulseSignalTable.setStatus('current')
pktcSigPulseSignalEntry = MibTableRow((1, 3, 6, 1, 2, 1, 169, 1, 1, 20, 1), ).setIndexNames((0, "PKTC-IETF-SIG-MIB", "pktcSigPulseSignalType"))
if mibBuilder.loadTexts: pktcSigPulseSignalEntry.setStatus('current')
pktcSigPulseSignalType = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initialRing", 1), ("pulseLoopClose", 2), ("pulseLoopOpen", 3), ("enableMeterPulse", 4), ("meterPulseBurst", 5), ("pulseNoBattery", 6), ("pulseNormalPolarity", 7), ("pulseReducedBattery", 8), ("pulseReversePolarity", 9))))
if mibBuilder.loadTexts: pktcSigPulseSignalType.setStatus('current')
pktcSigPulseSignalFrequency = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("twentyfive", 1), ("twelvethousand", 2), ("sixteenthousand", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigPulseSignalFrequency.setStatus('current')
pktcSigPulseSignalDbLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 20, 1, 3), TenthdBm().subtype(subtypeSpec=ValueRangeConstraint(-350, 0)).clone(-135)).setUnits('1/10 of a dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigPulseSignalDbLevel.setStatus('current')
pktcSigPulseSignalDuration = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 20, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigPulseSignalDuration.setStatus('current')
pktcSigPulseSignalPulseInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 20, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigPulseSignalPulseInterval.setStatus('current')
pktcSigPulseSignalRepeatCount = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 20, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigPulseSignalRepeatCount.setStatus('current')
pktcSigDevCidMode = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("duringRingingETS", 1), ("dtAsETS", 2), ("rpAsETS", 3), ("lrAsETS", 4), ("lrETS", 5))).clone('rpAsETS')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevCidMode.setStatus('current')
pktcSigDevCidAfterRing = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 22), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(50, 2000), )).clone(550)).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevCidAfterRing.setStatus('current')
pktcSigDevCidAfterDTAS = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 23), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(45, 500), )).clone(50)).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevCidAfterDTAS.setStatus('current')
pktcSigDevCidAfterRPAS = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 24), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(500, 800), )).clone(650)).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevCidAfterRPAS.setStatus('current')
pktcSigDevRingAfterCID = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 25), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(50, 500), )).clone(250)).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevRingAfterCID.setStatus('current')
pktcSigDevCidDTASAfterLR = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(50, 655)).clone(250)).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevCidDTASAfterLR.setStatus('current')
pktcSigDevVmwiMode = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("dtAsETS", 1), ("rpAsETS", 2), ("lrAsETS", 3), ("osi", 4), ("lrETS", 5))).clone('rpAsETS')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevVmwiMode.setStatus('current')
pktcSigDevVmwiAfterDTAS = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 28), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(45, 500), )).clone(50)).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevVmwiAfterDTAS.setStatus('current')
pktcSigDevVmwiAfterRPAS = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 29), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(500, 800), )).clone(650)).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevVmwiAfterRPAS.setStatus('current')
pktcSigDevVmwiDTASAfterLR = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 30), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(50, 655), )).clone(250)).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevVmwiDTASAfterLR.setStatus('current')
pktcSigDevRingCadenceTable = MibTable((1, 3, 6, 1, 2, 1, 169, 1, 1, 31), )
if mibBuilder.loadTexts: pktcSigDevRingCadenceTable.setStatus('current')
pktcSigDevRingCadenceEntry = MibTableRow((1, 3, 6, 1, 2, 1, 169, 1, 1, 31, 1), ).setIndexNames((0, "PKTC-IETF-SIG-MIB", "pktcSigDevRingCadenceIndex"))
if mibBuilder.loadTexts: pktcSigDevRingCadenceEntry.setStatus('current')
pktcSigDevRingCadenceIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 31, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)))
if mibBuilder.loadTexts: pktcSigDevRingCadenceIndex.setStatus('current')
pktcSigDevRingCadence = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 31, 1, 2), PktcRingCadence()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevRingCadence.setStatus('current')
pktcSigDevToneTable = MibTable((1, 3, 6, 1, 2, 1, 169, 1, 1, 32), )
if mibBuilder.loadTexts: pktcSigDevToneTable.setStatus('current')
pktcSigDevToneEntry = MibTableRow((1, 3, 6, 1, 2, 1, 169, 1, 1, 32, 1), ).setIndexNames((0, "PKTC-IETF-SIG-MIB", "pktcSigDevToneType"), (0, "PKTC-IETF-SIG-MIB", "pktcSigDevToneFreqGroup"))
if mibBuilder.loadTexts: pktcSigDevToneEntry.setStatus('current')
pktcSigDevToneType = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 32, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("busy", 1), ("confirmation", 2), ("dial", 3), ("messageWaiting", 4), ("offHookWarning", 5), ("ringBack", 6), ("reOrder", 7), ("stutterdial", 8), ("callWaiting1", 9), ("callWaiting2", 10), ("callWaiting3", 11), ("callWaiting4", 12), ("alertingSignal", 13), ("specialDial", 14), ("specialInfo", 15), ("release", 16), ("congestion", 17), ("userDefined1", 18), ("userDefined2", 19), ("userDefined3", 20), ("userDefined4", 21))))
if mibBuilder.loadTexts: pktcSigDevToneType.setStatus('current')
pktcSigDevToneFreqGroup = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 32, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: pktcSigDevToneFreqGroup.setStatus('current')
pktcSigDevToneFreqCounter = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 32, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigDevToneFreqCounter.setStatus('current')
pktcSigDevToneWholeToneRepeatCount = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 32, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigDevToneWholeToneRepeatCount.setStatus('current')
pktcSigDevToneSteady = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 32, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigDevToneSteady.setStatus('current')
pktcSigDevMultiFreqToneTable = MibTable((1, 3, 6, 1, 2, 1, 169, 1, 1, 33), )
if mibBuilder.loadTexts: pktcSigDevMultiFreqToneTable.setStatus('current')
pktcSigDevMultiFreqToneEntry = MibTableRow((1, 3, 6, 1, 2, 1, 169, 1, 1, 33, 1), ).setIndexNames((0, "PKTC-IETF-SIG-MIB", "pktcSigDevToneType"), (0, "PKTC-IETF-SIG-MIB", "pktcSigDevToneNumber"))
if mibBuilder.loadTexts: pktcSigDevMultiFreqToneEntry.setStatus('current')
pktcSigDevToneNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 33, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: pktcSigDevToneNumber.setStatus('current')
pktcSigDevToneFirstFreqValue = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 33, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigDevToneFirstFreqValue.setStatus('current')
pktcSigDevToneSecondFreqValue = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 33, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigDevToneSecondFreqValue.setStatus('current')
pktcSigDevToneThirdFreqValue = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 33, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigDevToneThirdFreqValue.setStatus('current')
pktcSigDevToneFourthFreqValue = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 33, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigDevToneFourthFreqValue.setStatus('current')
pktcSigDevToneFreqMode = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 33, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("firstModulatedBySecond", 1), ("summation", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigDevToneFreqMode.setStatus('current')
pktcSigDevToneFreqAmpModePrtg = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 33, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigDevToneFreqAmpModePrtg.setStatus('current')
pktcSigDevToneDbLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 33, 1, 8), TenthdBm().subtype(subtypeSpec=ValueRangeConstraint(-250, -110)).clone(-120)).setUnits('1/10 of a dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigDevToneDbLevel.setStatus('current')
pktcSigDevToneFreqOnDuration = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 33, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigDevToneFreqOnDuration.setStatus('current')
pktcSigDevToneFreqOffDuration = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 33, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigDevToneFreqOffDuration.setStatus('current')
pktcSigDevToneFreqRepeatCount = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 1, 33, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigDevToneFreqRepeatCount.setStatus('current')
pktcSigDevCidDelayAfterLR = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(300, 800)).clone(400)).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevCidDelayAfterLR.setStatus('current')
pktcSigDevCidDtmfStartCode = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 35), DtmfCode().clone('dtmfcodeA')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevCidDtmfStartCode.setStatus('current')
pktcSigDevCidDtmfEndCode = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 36), DtmfCode().clone('dtmfcodeC')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevCidDtmfEndCode.setStatus('current')
pktcSigDevVmwiSigProtocol = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 37), PktcSubscriberSideSigProtocol().clone('fsk')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevVmwiSigProtocol.setStatus('current')
pktcSigDevVmwiDelayAfterLR = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 38), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(300, 800), )).clone(400)).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevVmwiDelayAfterLR.setStatus('current')
pktcSigDevVmwiDtmfStartCode = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 39), DtmfCode().clone('dtmfcodeA')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevVmwiDtmfStartCode.setStatus('current')
pktcSigDevVmwiDtmfEndCode = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 40), DtmfCode().clone('dtmfcodeC')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevVmwiDtmfEndCode.setStatus('current')
pktcSigDevrpAsDtsDuration = MibScalar((1, 3, 6, 1, 2, 1, 169, 1, 1, 41), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(200, 500), )).clone(250)).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcSigDevrpAsDtsDuration.setStatus('current')
pktcSigEndPntConfigTable = MibTable((1, 3, 6, 1, 2, 1, 169, 1, 2, 1), )
if mibBuilder.loadTexts: pktcSigEndPntConfigTable.setStatus('current')
pktcSigEndPntConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pktcSigEndPntConfigEntry.setStatus('current')
pktcSigEndPntConfigCallAgentId = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(3, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigCallAgentId.setStatus('current')
pktcSigEndPntConfigCallAgentUdpPort = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 2), InetPortNumber().subtype(subtypeSpec=ValueRangeConstraint(1025, 65535)).clone(2727)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigCallAgentUdpPort.setStatus('current')
pktcSigEndPntConfigPartialDialTO = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 3), Unsigned32().clone(16)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigPartialDialTO.setStatus('current')
pktcSigEndPntConfigCriticalDialTO = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 4), Unsigned32().clone(4)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigCriticalDialTO.setStatus('current')
pktcSigEndPntConfigBusyToneTO = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 5), Unsigned32().clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigBusyToneTO.setStatus('current')
pktcSigEndPntConfigDialToneTO = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 6), Unsigned32().clone(16)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigDialToneTO.setStatus('current')
pktcSigEndPntConfigMessageWaitingTO = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 7), Unsigned32().clone(16)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigMessageWaitingTO.setStatus('current')
pktcSigEndPntConfigOffHookWarnToneTO = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 8), Unsigned32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigOffHookWarnToneTO.setStatus('current')
pktcSigEndPntConfigRingingTO = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 9), Unsigned32().clone(180)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigRingingTO.setStatus('current')
pktcSigEndPntConfigRingBackTO = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 10), Unsigned32().clone(180)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigRingBackTO.setStatus('current')
pktcSigEndPntConfigReorderToneTO = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 11), Unsigned32().clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigReorderToneTO.setStatus('current')
pktcSigEndPntConfigStutterDialToneTO = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 12), Unsigned32().clone(16)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigStutterDialToneTO.setStatus('current')
pktcSigEndPntConfigTSMax = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 13), Unsigned32().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigTSMax.setStatus('current')
pktcSigEndPntConfigMax1 = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 14), Unsigned32().clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigMax1.setStatus('current')
pktcSigEndPntConfigMax2 = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 15), Unsigned32().clone(7)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigMax2.setStatus('current')
pktcSigEndPntConfigMax1QEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 16), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigMax1QEnable.setStatus('current')
pktcSigEndPntConfigMax2QEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 17), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigMax2QEnable.setStatus('current')
pktcSigEndPntConfigMWD = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 18), Unsigned32().clone(600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigMWD.setStatus('current')
pktcSigEndPntConfigTdinit = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 19), Unsigned32().clone(15)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigTdinit.setStatus('current')
pktcSigEndPntConfigTdmin = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 20), Unsigned32().clone(15)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigTdmin.setStatus('current')
pktcSigEndPntConfigTdmax = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 21), Unsigned32().clone(600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigTdmax.setStatus('current')
pktcSigEndPntConfigRtoMax = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 22), Unsigned32().clone(4)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigRtoMax.setStatus('current')
pktcSigEndPntConfigRtoInit = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 23), Unsigned32().clone(200)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigRtoInit.setStatus('current')
pktcSigEndPntConfigLongDurationKeepAlive = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 24), Unsigned32().clone(60)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigLongDurationKeepAlive.setStatus('current')
pktcSigEndPntConfigThist = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 25), Unsigned32().clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigThist.setStatus('current')
pktcSigEndPntConfigStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 26), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigStatus.setStatus('current')
pktcSigEndPntConfigCallWaitingMaxRep = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigCallWaitingMaxRep.setStatus('current')
pktcSigEndPntConfigCallWaitingDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcSigEndPntConfigCallWaitingDelay.setStatus('current')
pktcSigEndPntStatusCallIpAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 29), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigEndPntStatusCallIpAddressType.setStatus('current')
pktcSigEndPntStatusCallIpAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 30), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigEndPntStatusCallIpAddress.setStatus('current')
pktcSigEndPntStatusError = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("noSecurityAssociation", 2), ("disconnected", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigEndPntStatusError.setStatus('current')
pktcSigEndPntConfigMinHookFlash = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 1550)).clone(300)).setUnits('Milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigEndPntConfigMinHookFlash.setStatus('current')
pktcSigEndPntConfigMaxHookFlash = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 1550)).clone(800)).setUnits('Milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigEndPntConfigMaxHookFlash.setStatus('current')
pktcSigEndPntConfigPulseDialInterdigitTime = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 1500)).clone(100)).setUnits('Milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigEndPntConfigPulseDialInterdigitTime.setStatus('current')
pktcSigEndPntConfigPulseDialMinMakeTime = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 35), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 200)).clone(25)).setUnits('Milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigEndPntConfigPulseDialMinMakeTime.setStatus('current')
pktcSigEndPntConfigPulseDialMaxMakeTime = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 36), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 200)).clone(55)).setUnits('Milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigEndPntConfigPulseDialMaxMakeTime.setStatus('current')
pktcSigEndPntConfigPulseDialMinBreakTime = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 37), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 200)).clone(45)).setUnits('Milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigEndPntConfigPulseDialMinBreakTime.setStatus('current')
pktcSigEndPntConfigPulseDialMaxBreakTime = MibTableColumn((1, 3, 6, 1, 2, 1, 169, 1, 2, 1, 1, 38), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 200)).clone(75)).setUnits('Milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcSigEndPntConfigPulseDialMaxBreakTime.setStatus('current')
pktcSigNotification = MibIdentifier((1, 3, 6, 1, 2, 1, 169, 0))
pktcSigConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 169, 2))
pktcSigCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 169, 2, 1))
pktcSigGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 169, 2, 2))
pktcSigBasicCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 169, 2, 1, 1)).setObjects(("PKTC-IETF-SIG-MIB", "pktcSigDeviceGroup"), ("PKTC-IETF-SIG-MIB", "pktcSigEndpointGroup"), ("PKTC-IETF-SIG-MIB", "pktcInternationalGroup"), ("PKTC-IETF-SIG-MIB", "pktcLLinePackageGroup"), ("PKTC-IETF-SIG-MIB", "pktcELinePackageGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcSigBasicCompliance = pktcSigBasicCompliance.setStatus('current')
pktcSigDeviceGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 169, 2, 2, 1)).setObjects(("PKTC-IETF-SIG-MIB", "pktcSigDevCodecMax"), ("PKTC-IETF-SIG-MIB", "pktcSigDevEchoCancellation"), ("PKTC-IETF-SIG-MIB", "pktcSigDevSilenceSuppression"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR0Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR1Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR2Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR3Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR4Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR5Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR6Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR7Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevRgCadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevRsCadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDefCallSigDscp"), ("PKTC-IETF-SIG-MIB", "pktcSigDefMediaStreamDscp"), ("PKTC-IETF-SIG-MIB", "pktcSigDevVmwiMode"), ("PKTC-IETF-SIG-MIB", "pktcSigCapabilityType"), ("PKTC-IETF-SIG-MIB", "pktcSigCapabilityVersion"), ("PKTC-IETF-SIG-MIB", "pktcSigCapabilityVendorExt"), ("PKTC-IETF-SIG-MIB", "pktcSigDefNcsReceiveUdpPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcSigDeviceGroup = pktcSigDeviceGroup.setStatus('current')
pktcSigEndpointGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 169, 2, 2, 2)).setObjects(("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigCallAgentId"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigCallAgentUdpPort"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigPartialDialTO"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigCriticalDialTO"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigBusyToneTO"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigDialToneTO"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigMessageWaitingTO"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigOffHookWarnToneTO"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigRingingTO"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigRingBackTO"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigReorderToneTO"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigStutterDialToneTO"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigTSMax"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigMax1"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigMax2"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigMax1QEnable"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigMax2QEnable"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigMWD"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigTdinit"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigTdmin"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigTdmax"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigRtoMax"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigRtoInit"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigLongDurationKeepAlive"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigThist"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigStatus"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigCallWaitingMaxRep"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigCallWaitingDelay"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntStatusCallIpAddressType"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntStatusCallIpAddress"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntStatusError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcSigEndpointGroup = pktcSigEndpointGroup.setStatus('current')
pktcInternationalGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 169, 2, 2, 3)).setObjects(("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigMinHookFlash"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigMaxHookFlash"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigPulseDialInterdigitTime"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigPulseDialMinMakeTime"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigPulseDialMaxMakeTime"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigPulseDialMinBreakTime"), ("PKTC-IETF-SIG-MIB", "pktcSigEndPntConfigPulseDialMaxBreakTime"), ("PKTC-IETF-SIG-MIB", "pktcSigDevRingCadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevCidSigProtocol"), ("PKTC-IETF-SIG-MIB", "pktcSigDevCidDelayAfterLR"), ("PKTC-IETF-SIG-MIB", "pktcSigDevCidDtmfStartCode"), ("PKTC-IETF-SIG-MIB", "pktcSigDevCidDtmfEndCode"), ("PKTC-IETF-SIG-MIB", "pktcSigDevVmwiSigProtocol"), ("PKTC-IETF-SIG-MIB", "pktcSigDevVmwiDelayAfterLR"), ("PKTC-IETF-SIG-MIB", "pktcSigDevVmwiDtmfStartCode"), ("PKTC-IETF-SIG-MIB", "pktcSigDevVmwiDtmfEndCode"), ("PKTC-IETF-SIG-MIB", "pktcSigDevrpAsDtsDuration"), ("PKTC-IETF-SIG-MIB", "pktcSigDevCidMode"), ("PKTC-IETF-SIG-MIB", "pktcSigDevCidAfterRing"), ("PKTC-IETF-SIG-MIB", "pktcSigDevCidAfterDTAS"), ("PKTC-IETF-SIG-MIB", "pktcSigDevCidAfterRPAS"), ("PKTC-IETF-SIG-MIB", "pktcSigDevRingAfterCID"), ("PKTC-IETF-SIG-MIB", "pktcSigDevCidDTASAfterLR"), ("PKTC-IETF-SIG-MIB", "pktcSigDevVmwiMode"), ("PKTC-IETF-SIG-MIB", "pktcSigDevVmwiAfterDTAS"), ("PKTC-IETF-SIG-MIB", "pktcSigDevVmwiAfterRPAS"), ("PKTC-IETF-SIG-MIB", "pktcSigDevVmwiDTASAfterLR"), ("PKTC-IETF-SIG-MIB", "pktcSigPowerRingFrequency"), ("PKTC-IETF-SIG-MIB", "pktcSigPulseSignalFrequency"), ("PKTC-IETF-SIG-MIB", "pktcSigPulseSignalDbLevel"), ("PKTC-IETF-SIG-MIB", "pktcSigPulseSignalDuration"), ("PKTC-IETF-SIG-MIB", "pktcSigPulseSignalPulseInterval"), ("PKTC-IETF-SIG-MIB", "pktcSigPulseSignalRepeatCount"), ("PKTC-IETF-SIG-MIB", "pktcSigDevToneDbLevel"), ("PKTC-IETF-SIG-MIB", "pktcSigDevToneFreqCounter"), ("PKTC-IETF-SIG-MIB", "pktcSigDevToneWholeToneRepeatCount"), ("PKTC-IETF-SIG-MIB", "pktcSigDevToneSteady"), ("PKTC-IETF-SIG-MIB", "pktcSigDevToneFirstFreqValue"), ("PKTC-IETF-SIG-MIB", "pktcSigDevToneSecondFreqValue"), ("PKTC-IETF-SIG-MIB", "pktcSigDevToneThirdFreqValue"), ("PKTC-IETF-SIG-MIB", "pktcSigDevToneFourthFreqValue"), ("PKTC-IETF-SIG-MIB", "pktcSigDevToneFreqMode"), ("PKTC-IETF-SIG-MIB", "pktcSigDevToneFreqAmpModePrtg"), ("PKTC-IETF-SIG-MIB", "pktcSigDevToneFreqOnDuration"), ("PKTC-IETF-SIG-MIB", "pktcSigDevToneFreqOffDuration"), ("PKTC-IETF-SIG-MIB", "pktcSigDevToneFreqRepeatCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcInternationalGroup = pktcInternationalGroup.setStatus('current')
pktcLLinePackageGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 169, 2, 2, 4)).setObjects(("PKTC-IETF-SIG-MIB", "pktcSigDevR0Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR1Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR2Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR3Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR4Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR5Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR6Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR7Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevRgCadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevRsCadence"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcLLinePackageGroup = pktcLLinePackageGroup.setStatus('current')
pktcELinePackageGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 169, 2, 2, 5)).setObjects(("PKTC-IETF-SIG-MIB", "pktcSigDevR0Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR1Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR2Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR3Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR4Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR5Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR6Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevR7Cadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevRgCadence"), ("PKTC-IETF-SIG-MIB", "pktcSigDevRsCadence"), ("PKTC-IETF-SIG-MIB", "pktcSigPulseSignalFrequency"), ("PKTC-IETF-SIG-MIB", "pktcSigPulseSignalDbLevel"), ("PKTC-IETF-SIG-MIB", "pktcSigPulseSignalDuration"), ("PKTC-IETF-SIG-MIB", "pktcSigPulseSignalPulseInterval"), ("PKTC-IETF-SIG-MIB", "pktcSigPulseSignalRepeatCount"), ("PKTC-IETF-SIG-MIB", "pktcSigDevRingCadence"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcELinePackageGroup = pktcELinePackageGroup.setStatus('current')
mibBuilder.exportSymbols("PKTC-IETF-SIG-MIB", pktcSigPulseSignalType=pktcSigPulseSignalType, pktcSigDevToneSecondFreqValue=pktcSigDevToneSecondFreqValue, pktcSigDevVmwiDtmfStartCode=pktcSigDevVmwiDtmfStartCode, pktcSigEndPntConfigRingBackTO=pktcSigEndPntConfigRingBackTO, pktcSigDevR5Cadence=pktcSigDevR5Cadence, pktcSigPowerRingFrequency=pktcSigPowerRingFrequency, DtmfCode=DtmfCode, pktcSigDevRingCadence=pktcSigDevRingCadence, pktcSigDevEchoCancellation=pktcSigDevEchoCancellation, pktcSigDevCidSigProtocol=pktcSigDevCidSigProtocol, pktcSigEndPntConfigDialToneTO=pktcSigEndPntConfigDialToneTO, pktcSigDevCidDTASAfterLR=pktcSigDevCidDTASAfterLR, TenthdBm=TenthdBm, pktcSigDevToneWholeToneRepeatCount=pktcSigDevToneWholeToneRepeatCount, pktcSigDevR0Cadence=pktcSigDevR0Cadence, pktcSigDevToneDbLevel=pktcSigDevToneDbLevel, pktcSigPulseSignalDuration=pktcSigPulseSignalDuration, pktcSigDevCidAfterRing=pktcSigDevCidAfterRing, pktcSigEndPntConfigPulseDialInterdigitTime=pktcSigEndPntConfigPulseDialInterdigitTime, pktcSigCapabilityTable=pktcSigCapabilityTable, pktcSigDevToneEntry=pktcSigDevToneEntry, pktcSigEndPntConfigPulseDialMinMakeTime=pktcSigEndPntConfigPulseDialMinMakeTime, pktcSigDevCidDelayAfterLR=pktcSigDevCidDelayAfterLR, pktcSigEndPntConfigThist=pktcSigEndPntConfigThist, pktcSigEndPntConfigMax1QEnable=pktcSigEndPntConfigMax1QEnable, pktcSigDevToneFreqGroup=pktcSigDevToneFreqGroup, pktcSigDevR7Cadence=pktcSigDevR7Cadence, PktcCodecType=PktcCodecType, pktcSigDevToneFreqMode=pktcSigDevToneFreqMode, pktcSigDevRsCadence=pktcSigDevRsCadence, pktcSigPulseSignalEntry=pktcSigPulseSignalEntry, pktcSigDevToneFreqRepeatCount=pktcSigDevToneFreqRepeatCount, pktcSigDevVmwiSigProtocol=pktcSigDevVmwiSigProtocol, pktcSigDevrpAsDtsDuration=pktcSigDevrpAsDtsDuration, pktcSigEndPntConfigReorderToneTO=pktcSigEndPntConfigReorderToneTO, pktcSigDevR6Cadence=pktcSigDevR6Cadence, pktcSigEndPntConfigTSMax=pktcSigEndPntConfigTSMax, pktcSigPulseSignalPulseInterval=pktcSigPulseSignalPulseInterval, pktcSigGroups=pktcSigGroups, pktcSigEndPntConfigTdmin=pktcSigEndPntConfigTdmin, pktcSigDevSilenceSuppression=pktcSigDevSilenceSuppression, pktcSigDevCodecTable=pktcSigDevCodecTable, pktcSigDevR2Cadence=pktcSigDevR2Cadence, pktcSigEndPntStatusCallIpAddressType=pktcSigEndPntStatusCallIpAddressType, PktcSubscriberSideSigProtocol=PktcSubscriberSideSigProtocol, pktcSigDevVmwiAfterDTAS=pktcSigDevVmwiAfterDTAS, pktcSigEndPntConfigRtoMax=pktcSigEndPntConfigRtoMax, pktcSigEndPntConfigObjects=pktcSigEndPntConfigObjects, pktcSigPulseSignalFrequency=pktcSigPulseSignalFrequency, pktcSigEndPntConfigStutterDialToneTO=pktcSigEndPntConfigStutterDialToneTO, pktcSigCapabilityEntry=pktcSigCapabilityEntry, pktcSigDevR4Cadence=pktcSigDevR4Cadence, pktcSigDevToneFreqOffDuration=pktcSigDevToneFreqOffDuration, pktcSigEndPntConfigLongDurationKeepAlive=pktcSigEndPntConfigLongDurationKeepAlive, pktcSigMibObjects=pktcSigMibObjects, pktcSigDevToneFreqCounter=pktcSigDevToneFreqCounter, pktcSigPulseSignalRepeatCount=pktcSigPulseSignalRepeatCount, pktcSigEndPntConfigTdmax=pktcSigEndPntConfigTdmax, pktcSigCapabilityVendorExt=pktcSigCapabilityVendorExt, pktcSigEndPntConfigMWD=pktcSigEndPntConfigMWD, PktcSigType=PktcSigType, pktcSigDevRingCadenceIndex=pktcSigDevRingCadenceIndex, pktcSigDevVmwiAfterRPAS=pktcSigDevVmwiAfterRPAS, pktcSigDevCidDtmfStartCode=pktcSigDevCidDtmfStartCode, pktcSigEndPntConfigPulseDialMaxBreakTime=pktcSigEndPntConfigPulseDialMaxBreakTime, pktcSigDevVmwiDelayAfterLR=pktcSigDevVmwiDelayAfterLR, pktcSigEndPntStatusCallIpAddress=pktcSigEndPntStatusCallIpAddress, pktcIetfSigMib=pktcIetfSigMib, pktcSigDevToneFourthFreqValue=pktcSigDevToneFourthFreqValue, pktcSigDefCallSigDscp=pktcSigDefCallSigDscp, pktcSigDevRingAfterCID=pktcSigDevRingAfterCID, pktcSigEndPntConfigPartialDialTO=pktcSigEndPntConfigPartialDialTO, pktcSigDevRingCadenceEntry=pktcSigDevRingCadenceEntry, PktcRingCadence=PktcRingCadence, pktcSigEndPntConfigPulseDialMaxMakeTime=pktcSigEndPntConfigPulseDialMaxMakeTime, pktcSigEndPntConfigCriticalDialTO=pktcSigEndPntConfigCriticalDialTO, pktcSigEndPntConfigPulseDialMinBreakTime=pktcSigEndPntConfigPulseDialMinBreakTime, pktcSigDevR1Cadence=pktcSigDevR1Cadence, pktcLLinePackageGroup=pktcLLinePackageGroup, pktcSigPulseSignalTable=pktcSigPulseSignalTable, pktcSigDevMultiFreqToneEntry=pktcSigDevMultiFreqToneEntry, pktcSigDevCidDtmfEndCode=pktcSigDevCidDtmfEndCode, pktcSigEndPntConfigRingingTO=pktcSigEndPntConfigRingingTO, pktcSigEndPntConfigMinHookFlash=pktcSigEndPntConfigMinHookFlash, pktcSigEndPntConfigMaxHookFlash=pktcSigEndPntConfigMaxHookFlash, pktcSigDevCidAfterRPAS=pktcSigDevCidAfterRPAS, pktcSigEndPntConfigStatus=pktcSigEndPntConfigStatus, PYSNMP_MODULE_ID=pktcIetfSigMib, pktcSigDevToneType=pktcSigDevToneType, pktcSigEndPntConfigCallAgentUdpPort=pktcSigEndPntConfigCallAgentUdpPort, pktcSigDevObjects=pktcSigDevObjects, pktcSigDevToneFreqOnDuration=pktcSigDevToneFreqOnDuration, pktcSigEndPntConfigBusyToneTO=pktcSigEndPntConfigBusyToneTO, pktcSigEndPntConfigMax2=pktcSigEndPntConfigMax2, pktcSigDefMediaStreamDscp=pktcSigDefMediaStreamDscp, pktcSigEndPntConfigOffHookWarnToneTO=pktcSigEndPntConfigOffHookWarnToneTO, pktcSigDevToneFreqAmpModePrtg=pktcSigDevToneFreqAmpModePrtg, pktcSigDevVmwiDtmfEndCode=pktcSigDevVmwiDtmfEndCode, pktcSigCapabilityType=pktcSigCapabilityType, pktcSigNotification=pktcSigNotification, pktcSigCapabilityIndex=pktcSigCapabilityIndex, pktcELinePackageGroup=pktcELinePackageGroup, pktcSigBasicCompliance=pktcSigBasicCompliance, pktcSigDevCodecEntry=pktcSigDevCodecEntry, pktcSigDevVmwiMode=pktcSigDevVmwiMode, pktcSigEndPntConfigCallWaitingDelay=pktcSigEndPntConfigCallWaitingDelay, pktcSigDevVmwiDTASAfterLR=pktcSigDevVmwiDTASAfterLR, pktcSigEndPntConfigEntry=pktcSigEndPntConfigEntry, pktcSigDevR3Cadence=pktcSigDevR3Cadence, pktcSigEndPntConfigCallAgentId=pktcSigEndPntConfigCallAgentId, pktcSigCapabilityVersion=pktcSigCapabilityVersion, pktcSigDevToneTable=pktcSigDevToneTable, pktcSigPulseSignalDbLevel=pktcSigPulseSignalDbLevel, pktcSigEndPntStatusError=pktcSigEndPntStatusError, pktcSigEndPntConfigMax1=pktcSigEndPntConfigMax1, pktcSigEndpointGroup=pktcSigEndpointGroup, pktcSigDevRgCadence=pktcSigDevRgCadence, pktcSigDevRingCadenceTable=pktcSigDevRingCadenceTable, pktcSigEndPntConfigCallWaitingMaxRep=pktcSigEndPntConfigCallWaitingMaxRep, pktcSigDevToneSteady=pktcSigDevToneSteady, pktcSigEndPntConfigRtoInit=pktcSigEndPntConfigRtoInit, pktcSigDevCidMode=pktcSigDevCidMode, pktcSigDevToneNumber=pktcSigDevToneNumber, pktcSigEndPntConfigTdinit=pktcSigEndPntConfigTdinit, pktcSigEndPntConfigMax2QEnable=pktcSigEndPntConfigMax2QEnable, pktcSigCompliances=pktcSigCompliances, pktcSigDeviceGroup=pktcSigDeviceGroup, pktcSigDevCodecMax=pktcSigDevCodecMax, pktcSigConformance=pktcSigConformance, pktcSigEndPntConfigMessageWaitingTO=pktcSigEndPntConfigMessageWaitingTO, pktcSigDevCodecComboIndex=pktcSigDevCodecComboIndex, pktcSigDevCodecType=pktcSigDevCodecType, pktcSigDevCidAfterDTAS=pktcSigDevCidAfterDTAS, pktcSigDevMultiFreqToneTable=pktcSigDevMultiFreqToneTable, pktcSigDevToneFirstFreqValue=pktcSigDevToneFirstFreqValue, pktcSigEndPntConfigTable=pktcSigEndPntConfigTable, pktcSigDefNcsReceiveUdpPort=pktcSigDefNcsReceiveUdpPort, pktcSigDevToneThirdFreqValue=pktcSigDevToneThirdFreqValue, pktcInternationalGroup=pktcInternationalGroup)
