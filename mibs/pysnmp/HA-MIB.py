#
# PySNMP MIB module HA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:11:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
fibrechannel, = mibBuilder.importSymbols("Brocade-REG-MIB", "fibrechannel")
entPhysicalName, entPhysicalIndex = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalName", "entPhysicalIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Bits, ModuleIdentity, NotificationType, Counter64, Integer32, Gauge32, TimeTicks, ObjectIdentity, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Bits", "ModuleIdentity", "NotificationType", "Counter64", "Integer32", "Gauge32", "TimeTicks", "ObjectIdentity", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
swID, swSsn = mibBuilder.importSymbols("SW-MIB", "swID", "swSsn")
haMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2))
haMIB.setRevisions(('2002-08-16 00:00', '2004-02-25 15:30', '2009-02-09 00:00', '2009-04-06 00:00', '2009-06-25 12:00', '2010-07-22 10:00', '2012-09-25 10:00', '2013-05-07 17:57',))
if mibBuilder.loadTexts: haMIB.setLastUpdated('201305071757Z')
if mibBuilder.loadTexts: haMIB.setOrganization('Brocade Communications Systems, Inc.,')
highAvailability = MibIdentifier((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1))
haStatus = MibScalar((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("redundant", 0), ("nonredundant", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: haStatus.setStatus('current')
class FruClass(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("other", 1), ("unknown", 2), ("chassis", 3), ("cp", 4), ("other-CP", 5), ("switchblade", 6), ("wwn", 7), ("powerSupply", 8), ("fan", 9), ("coreblade", 10), ("applicationblade", 11))

fruTable = MibTable((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 5), )
if mibBuilder.loadTexts: fruTable.setStatus('current')
fRUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 5, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: fRUEntry.setStatus('current')
fruClass = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 5, 1, 1), FruClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fruClass.setStatus('current')
fruStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("on", 3), ("off", 4), ("faulty", 5), ("poweredon", 6), ("initialized", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fruStatus.setStatus('current')
fruObjectNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fruObjectNum.setStatus('current')
fruSupplierId = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 5, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fruSupplierId.setStatus('current')
fruSupplierPartNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 5, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fruSupplierPartNum.setStatus('current')
fruSupplierSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fruSupplierSerialNum.setStatus('current')
fruSupplierRevCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 5, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fruSupplierRevCode.setStatus('current')
fruPowerConsumption = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 5, 1, 8), DisplayString()).setUnits('watt').setMaxAccess("readonly")
if mibBuilder.loadTexts: fruPowerConsumption.setStatus('current')
fruHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 6), )
if mibBuilder.loadTexts: fruHistoryTable.setStatus('current')
fruHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 6, 1), ).setIndexNames((0, "HA-MIB", "fruHistoryIndex"))
if mibBuilder.loadTexts: fruHistoryEntry.setStatus('current')
fruHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fruHistoryIndex.setStatus('current')
fruHistoryClass = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 6, 1, 2), FruClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fruHistoryClass.setStatus('current')
fruHistoryObjectNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fruHistoryObjectNum.setStatus('current')
fruHistoryEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("added", 1), ("removed", 2), ("invalid", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fruHistoryEvent.setStatus('current')
fruHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 6, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fruHistoryTime.setStatus('current')
fruHistoryFactoryPartNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 6, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fruHistoryFactoryPartNum.setStatus('current')
fruHistoryFactorySerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 6, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fruHistoryFactorySerialNum.setStatus('current')
cpTable = MibTable((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 7), )
if mibBuilder.loadTexts: cpTable.setStatus('current')
cpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 7, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cpEntry.setStatus('current')
cpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("active", 3), ("standby", 4), ("failed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpStatus.setStatus('current')
cpIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 7, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpIpAddress.setStatus('current')
cpIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 7, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpIpMask.setStatus('current')
cpIpGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 7, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpIpGateway.setStatus('current')
cpLastEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("haSync", 3), ("haOutSync", 4), ("cpFaulty", 5), ("cpHealthy", 6), ("cpActive", 7), ("configChange", 8), ("failOverStart", 9), ("failOverDone", 10), ("firmwareCommit", 11), ("firmwareUpgrade", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpLastEvent.setStatus('current')
bpTable = MibTable((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 8), )
if mibBuilder.loadTexts: bpTable.setStatus('current')
bpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 8, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: bpEntry.setStatus('current')
bpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("faulty", 3), ("unknow", 4), ("others", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bpStatus.setStatus('current')
bpeth0IpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bpeth0IpAddress.setStatus('current')
bpeth1IpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 8, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bpeth1IpAddress.setStatus('current')
bpsubNetMaskIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 8, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bpsubNetMaskIpaddress.setStatus('current')
bpIpGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 8, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bpIpGateway.setStatus('current')
bpSasPriVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 8, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bpSasPriVersion.setStatus('current')
bpSasSecVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 1, 8, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bpSasSecVersion.setStatus('current')
haMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 2))
haMIBTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 2, 0))
fruStatusChanged = NotificationType((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 2, 0, 1)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("HA-MIB", "fruStatus"), ("HA-MIB", "fruClass"), ("HA-MIB", "fruObjectNum"))
if mibBuilder.loadTexts: fruStatusChanged.setStatus('current')
cpStatusChanged = NotificationType((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 2, 0, 2)).setObjects(("HA-MIB", "cpStatus"), ("HA-MIB", "cpLastEvent"), ("SW-MIB", "swID"), ("SW-MIB", "swSsn"))
if mibBuilder.loadTexts: cpStatusChanged.setStatus('current')
fruHistoryTrap = NotificationType((1, 3, 6, 1, 4, 1, 1588, 2, 1, 2, 2, 0, 3)).setObjects(("HA-MIB", "fruHistoryClass"), ("HA-MIB", "fruHistoryObjectNum"), ("HA-MIB", "fruHistoryEvent"), ("HA-MIB", "fruHistoryTime"), ("HA-MIB", "fruHistoryFactoryPartNum"), ("HA-MIB", "fruHistoryFactorySerialNum"))
if mibBuilder.loadTexts: fruHistoryTrap.setStatus('current')
mibBuilder.exportSymbols("HA-MIB", bpsubNetMaskIpaddress=bpsubNetMaskIpaddress, fruHistoryObjectNum=fruHistoryObjectNum, fruStatusChanged=fruStatusChanged, highAvailability=highAvailability, fruTable=fruTable, bpSasPriVersion=bpSasPriVersion, fruHistoryClass=fruHistoryClass, fruHistoryEvent=fruHistoryEvent, bpEntry=bpEntry, FruClass=FruClass, bpeth0IpAddress=bpeth0IpAddress, cpIpMask=cpIpMask, cpStatusChanged=cpStatusChanged, fruHistoryTime=fruHistoryTime, fruSupplierRevCode=fruSupplierRevCode, haMIBTrapPrefix=haMIBTrapPrefix, haMIBTraps=haMIBTraps, fruSupplierPartNum=fruSupplierPartNum, cpTable=cpTable, cpIpGateway=cpIpGateway, fruPowerConsumption=fruPowerConsumption, bpeth1IpAddress=bpeth1IpAddress, fruStatus=fruStatus, cpEntry=cpEntry, haStatus=haStatus, bpTable=bpTable, fruHistoryTrap=fruHistoryTrap, fruClass=fruClass, haMIB=haMIB, fruObjectNum=fruObjectNum, fruHistoryTable=fruHistoryTable, cpStatus=cpStatus, bpStatus=bpStatus, fruSupplierId=fruSupplierId, bpSasSecVersion=bpSasSecVersion, cpLastEvent=cpLastEvent, bpIpGateway=bpIpGateway, fruHistoryFactoryPartNum=fruHistoryFactoryPartNum, fruHistoryEntry=fruHistoryEntry, fruSupplierSerialNum=fruSupplierSerialNum, fRUEntry=fRUEntry, fruHistoryFactorySerialNum=fruHistoryFactorySerialNum, fruHistoryIndex=fruHistoryIndex, cpIpAddress=cpIpAddress, PYSNMP_MODULE_ID=haMIB)
