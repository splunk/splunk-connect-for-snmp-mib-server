#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-AtmBaseMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-AtmBaseMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
mscLpEng, mscLpIndex, mscLpEngIndex, mscLp = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEng", "mscLpIndex", "mscLpEngIndex", "mscLp")
Gauge32, Unsigned32, Integer32, DisplayString, StorageType, RowStatus = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Gauge32", "Unsigned32", "Integer32", "DisplayString", "StorageType", "RowStatus")
FixedPoint1, NonReplicated = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "FixedPoint1", "NonReplicated")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Gauge32, Integer32, Bits, ModuleIdentity, ObjectIdentity, Unsigned32, iso, IpAddress, MibIdentifier, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "Integer32", "Bits", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "iso", "IpAddress", "MibIdentifier", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
atmBaseMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 63))
mscLpArc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19))
mscLpArcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 1), )
if mibBuilder.loadTexts: mscLpArcRowStatusTable.setStatus('obsolete')
mscLpArcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpArcIndex"))
if mibBuilder.loadTexts: mscLpArcRowStatusEntry.setStatus('obsolete')
mscLpArcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpArcRowStatus.setStatus('obsolete')
mscLpArcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpArcComponentName.setStatus('obsolete')
mscLpArcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpArcStorageType.setStatus('obsolete')
mscLpArcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpArcIndex.setStatus('obsolete')
mscLpArcProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 100), )
if mibBuilder.loadTexts: mscLpArcProvTable.setStatus('obsolete')
mscLpArcProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpArcIndex"))
if mibBuilder.loadTexts: mscLpArcProvEntry.setStatus('obsolete')
mscLpArcTotalConnectionPoolCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 100, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10752)).clone(3072)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpArcTotalConnectionPoolCapacity.setStatus('obsolete')
mscLpArcMulticastBranchesCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 100, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10752))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpArcMulticastBranchesCapacity.setStatus('obsolete')
mscLpArcTxFrameMemoryAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 100, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpArcTxFrameMemoryAllocation.setStatus('obsolete')
mscLpArcRxFrameMemoryAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 100, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpArcRxFrameMemoryAllocation.setStatus('obsolete')
mscLpArcPerVcQueueInterfaces = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 100, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpArcPerVcQueueInterfaces.setStatus('obsolete')
mscLpArcShapingStackAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 100, 1, 30), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="80")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpArcShapingStackAllocation.setStatus('obsolete')
mscLpArcShapingScalingFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 100, 1, 40), FixedPoint1().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 10), ValueRangeConstraint(14, 14), ValueRangeConstraint(20, 20), ValueRangeConstraint(28, 28), ValueRangeConstraint(40, 40), ValueRangeConstraint(56, 56), )).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpArcShapingScalingFactor.setStatus('obsolete')
mscLpArcCdvAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 100, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpArcCdvAttenuation.setStatus('obsolete')
mscLpArcPortAggregation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 100, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpArcPortAggregation.setStatus('obsolete')
mscLpArcSubConnectionPoolCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 100, 1, 43), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpArcSubConnectionPoolCapacity.setStatus('obsolete')
mscLpArcLnnConnectionPoolCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 100, 1, 44), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 512)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpArcLnnConnectionPoolCapacity.setStatus('obsolete')
mscLpArcConnCapTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 291), )
if mibBuilder.loadTexts: mscLpArcConnCapTable.setStatus('obsolete')
mscLpArcConnCapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 291, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpArcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpArcConnCapIndex"))
if mibBuilder.loadTexts: mscLpArcConnCapEntry.setStatus('obsolete')
mscLpArcConnCapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 291, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: mscLpArcConnCapIndex.setStatus('obsolete')
mscLpArcConnCapValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 19, 291, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(512, 4096), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpArcConnCapValue.setStatus('obsolete')
mscLpAru = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20))
mscLpAruRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 1), )
if mibBuilder.loadTexts: mscLpAruRowStatusTable.setStatus('obsolete')
mscLpAruRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpAruIndex"))
if mibBuilder.loadTexts: mscLpAruRowStatusEntry.setStatus('obsolete')
mscLpAruRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruRowStatus.setStatus('obsolete')
mscLpAruComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruComponentName.setStatus('obsolete')
mscLpAruStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruStorageType.setStatus('obsolete')
mscLpAruIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpAruIndex.setStatus('obsolete')
mscLpAruOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100), )
if mibBuilder.loadTexts: mscLpAruOperTable.setStatus('obsolete')
mscLpAruOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpAruIndex"))
if mibBuilder.loadTexts: mscLpAruOperEntry.setStatus('obsolete')
mscLpAruTotalConnectionPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10752))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruTotalConnectionPoolUsage.setStatus('obsolete')
mscLpAruMulticastBranchesUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10752))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruMulticastBranchesUsage.setStatus('obsolete')
mscLpAruTxCellBlockCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruTxCellBlockCapacity.setStatus('obsolete')
mscLpAruTxCellBlockUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 20), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruTxCellBlockUsage.setStatus('obsolete')
mscLpAruTxCellFreeListSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruTxCellFreeListSize.setStatus('obsolete')
mscLpAruTxCellFreeListCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruTxCellFreeListCongestionState.setStatus('obsolete')
mscLpAruTxFrameMemoryAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruTxFrameMemoryAllocation.setStatus('obsolete')
mscLpAruTxFrameBlockCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 40), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruTxFrameBlockCapacity.setStatus('obsolete')
mscLpAruTxFrameBlockUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 50), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruTxFrameBlockUsage.setStatus('obsolete')
mscLpAruTxFrameFreeListSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 53), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruTxFrameFreeListSize.setStatus('obsolete')
mscLpAruTxFrameFreeListCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruTxFrameFreeListCongestionState.setStatus('obsolete')
mscLpAruRxCellBlockCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 60), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruRxCellBlockCapacity.setStatus('obsolete')
mscLpAruRxCellBlockUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 70), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruRxCellBlockUsage.setStatus('obsolete')
mscLpAruRxCellFreeListSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 73), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruRxCellFreeListSize.setStatus('obsolete')
mscLpAruRxCellFreeListCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 76), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruRxCellFreeListCongestionState.setStatus('obsolete')
mscLpAruRxFrameMemoryAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 80), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruRxFrameMemoryAllocation.setStatus('obsolete')
mscLpAruRxFrameBlockCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 90), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruRxFrameBlockCapacity.setStatus('obsolete')
mscLpAruRxFrameBlockUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 100), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruRxFrameBlockUsage.setStatus('obsolete')
mscLpAruRxFrameFreeListSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 103), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruRxFrameFreeListSize.setStatus('obsolete')
mscLpAruRxFrameFreeListCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 106), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruRxFrameFreeListCongestionState.setStatus('obsolete')
mscLpAruSubConnectionPoolAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 107), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruSubConnectionPoolAvailable.setStatus('obsolete')
mscLpAruSubConnectionPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 108), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruSubConnectionPoolUsage.setStatus('obsolete')
mscLpAruLnnConnectionPoolAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 109), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruLnnConnectionPoolAvailable.setStatus('obsolete')
mscLpAruLnnConnectionPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 100, 1, 110), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruLnnConnectionPoolUsage.setStatus('obsolete')
mscLpAruConnUsageTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 292), )
if mibBuilder.loadTexts: mscLpAruConnUsageTable.setStatus('obsolete')
mscLpAruConnUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 292, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpAruIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpAruConnUsageIndex"))
if mibBuilder.loadTexts: mscLpAruConnUsageEntry.setStatus('obsolete')
mscLpAruConnUsageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 292, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: mscLpAruConnUsageIndex.setStatus('obsolete')
mscLpAruConnUsageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 292, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruConnUsageValue.setStatus('obsolete')
mscLpAruTxCflThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 353), )
if mibBuilder.loadTexts: mscLpAruTxCflThreshTable.setStatus('obsolete')
mscLpAruTxCflThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 353, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpAruIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpAruTxCflThreshIndex"))
if mibBuilder.loadTexts: mscLpAruTxCflThreshEntry.setStatus('obsolete')
mscLpAruTxCflThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 353, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscLpAruTxCflThreshIndex.setStatus('obsolete')
mscLpAruTxCflThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 353, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruTxCflThreshValue.setStatus('obsolete')
mscLpAruTxFflThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 354), )
if mibBuilder.loadTexts: mscLpAruTxFflThreshTable.setStatus('obsolete')
mscLpAruTxFflThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 354, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpAruIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpAruTxFflThreshIndex"))
if mibBuilder.loadTexts: mscLpAruTxFflThreshEntry.setStatus('obsolete')
mscLpAruTxFflThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 354, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscLpAruTxFflThreshIndex.setStatus('obsolete')
mscLpAruTxFflThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 354, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruTxFflThreshValue.setStatus('obsolete')
mscLpAruRxCflThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 355), )
if mibBuilder.loadTexts: mscLpAruRxCflThreshTable.setStatus('obsolete')
mscLpAruRxCflThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 355, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpAruIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpAruRxCflThreshIndex"))
if mibBuilder.loadTexts: mscLpAruRxCflThreshEntry.setStatus('obsolete')
mscLpAruRxCflThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 355, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscLpAruRxCflThreshIndex.setStatus('obsolete')
mscLpAruRxCflThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 355, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruRxCflThreshValue.setStatus('obsolete')
mscLpAruRxFflThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 356), )
if mibBuilder.loadTexts: mscLpAruRxFflThreshTable.setStatus('obsolete')
mscLpAruRxFflThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 356, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpAruIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpAruRxFflThreshIndex"))
if mibBuilder.loadTexts: mscLpAruRxFflThreshEntry.setStatus('obsolete')
mscLpAruRxFflThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 356, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscLpAruRxFflThreshIndex.setStatus('obsolete')
mscLpAruRxFflThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 20, 356, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpAruRxFflThreshValue.setStatus('obsolete')
mscLpEngArc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5))
mscLpEngArcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 1), )
if mibBuilder.loadTexts: mscLpEngArcRowStatusTable.setStatus('mandatory')
mscLpEngArcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcIndex"))
if mibBuilder.loadTexts: mscLpEngArcRowStatusEntry.setStatus('mandatory')
mscLpEngArcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngArcRowStatus.setStatus('mandatory')
mscLpEngArcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcComponentName.setStatus('mandatory')
mscLpEngArcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcStorageType.setStatus('mandatory')
mscLpEngArcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEngArcIndex.setStatus('mandatory')
mscLpEngArcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 10), )
if mibBuilder.loadTexts: mscLpEngArcOperTable.setStatus('mandatory')
mscLpEngArcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcIndex"))
if mibBuilder.loadTexts: mscLpEngArcOperEntry.setStatus('mandatory')
mscLpEngArcTotalConnectionPoolAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32768))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcTotalConnectionPoolAvailable.setStatus('mandatory')
mscLpEngArcTotalConnectionPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32768))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcTotalConnectionPoolUsage.setStatus('mandatory')
mscLpEngArcMulticastBranchesAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcMulticastBranchesAvailable.setStatus('mandatory')
mscLpEngArcMulticastBranchesUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcMulticastBranchesUsage.setStatus('mandatory')
mscLpEngArcTxCellMemoryAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcTxCellMemoryAllocation.setStatus('mandatory')
mscLpEngArcTxCellMemoryAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 10, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcTxCellMemoryAvailable.setStatus('mandatory')
mscLpEngArcTxCellMemoryMinAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 10, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcTxCellMemoryMinAvailable.setStatus('mandatory')
mscLpEngArcTxCellMemoryCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 10, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcTxCellMemoryCongestionState.setStatus('mandatory')
mscLpEngArcRxCellMemoryAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcRxCellMemoryAllocation.setStatus('mandatory')
mscLpEngArcRxCellMemoryAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 10, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcRxCellMemoryAvailable.setStatus('mandatory')
mscLpEngArcRxCellMemoryMinAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 10, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcRxCellMemoryMinAvailable.setStatus('mandatory')
mscLpEngArcRxCellMemoryCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 10, 1, 12), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcRxCellMemoryCongestionState.setStatus('mandatory')
mscLpEngArcTxCellThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 440), )
if mibBuilder.loadTexts: mscLpEngArcTxCellThreshTable.setStatus('mandatory')
mscLpEngArcTxCellThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 440, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcTxCellThreshIndex"))
if mibBuilder.loadTexts: mscLpEngArcTxCellThreshEntry.setStatus('mandatory')
mscLpEngArcTxCellThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 440, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscLpEngArcTxCellThreshIndex.setStatus('mandatory')
mscLpEngArcTxCellThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 440, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcTxCellThreshValue.setStatus('mandatory')
mscLpEngArcRxCellThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 444), )
if mibBuilder.loadTexts: mscLpEngArcRxCellThreshTable.setStatus('mandatory')
mscLpEngArcRxCellThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 444, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcRxCellThreshIndex"))
if mibBuilder.loadTexts: mscLpEngArcRxCellThreshEntry.setStatus('mandatory')
mscLpEngArcRxCellThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 444, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscLpEngArcRxCellThreshIndex.setStatus('mandatory')
mscLpEngArcRxCellThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 444, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcRxCellThreshValue.setStatus('mandatory')
mscLpEngArcOv = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 2))
mscLpEngArcOvRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 2, 1), )
if mibBuilder.loadTexts: mscLpEngArcOvRowStatusTable.setStatus('mandatory')
mscLpEngArcOvRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcOvIndex"))
if mibBuilder.loadTexts: mscLpEngArcOvRowStatusEntry.setStatus('mandatory')
mscLpEngArcOvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngArcOvRowStatus.setStatus('mandatory')
mscLpEngArcOvComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcOvComponentName.setStatus('mandatory')
mscLpEngArcOvStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcOvStorageType.setStatus('mandatory')
mscLpEngArcOvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEngArcOvIndex.setStatus('mandatory')
mscLpEngArcOvProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 2, 10), )
if mibBuilder.loadTexts: mscLpEngArcOvProvTable.setStatus('mandatory')
mscLpEngArcOvProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcOvIndex"))
if mibBuilder.loadTexts: mscLpEngArcOvProvEntry.setStatus('mandatory')
mscLpEngArcOvTotalConnectionPoolCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32768)).clone(3072)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngArcOvTotalConnectionPoolCapacity.setStatus('mandatory')
mscLpEngArcOvMulticastBranchesCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngArcOvMulticastBranchesCapacity.setStatus('mandatory')
mscLpEngArcOvTxCellMemoryAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngArcOvTxCellMemoryAllocation.setStatus('mandatory')
mscLpEngArcOvRxCellMemoryAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngArcOvRxCellMemoryAllocation.setStatus('mandatory')
mscLpEngArcCqc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3))
mscLpEngArcCqcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 1), )
if mibBuilder.loadTexts: mscLpEngArcCqcRowStatusTable.setStatus('mandatory')
mscLpEngArcCqcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcCqcIndex"))
if mibBuilder.loadTexts: mscLpEngArcCqcRowStatusEntry.setStatus('mandatory')
mscLpEngArcCqcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngArcCqcRowStatus.setStatus('mandatory')
mscLpEngArcCqcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcCqcComponentName.setStatus('mandatory')
mscLpEngArcCqcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcCqcStorageType.setStatus('mandatory')
mscLpEngArcCqcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEngArcCqcIndex.setStatus('mandatory')
mscLpEngArcCqcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 10), )
if mibBuilder.loadTexts: mscLpEngArcCqcOperTable.setStatus('mandatory')
mscLpEngArcCqcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcCqcIndex"))
if mibBuilder.loadTexts: mscLpEngArcCqcOperEntry.setStatus('mandatory')
mscLpEngArcCqcCdvReduction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("cardDependent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcCqcCdvReduction.setStatus('mandatory')
mscLpEngArcCqcOv = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 2))
mscLpEngArcCqcOvRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 2, 1), )
if mibBuilder.loadTexts: mscLpEngArcCqcOvRowStatusTable.setStatus('mandatory')
mscLpEngArcCqcOvRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcCqcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcCqcOvIndex"))
if mibBuilder.loadTexts: mscLpEngArcCqcOvRowStatusEntry.setStatus('mandatory')
mscLpEngArcCqcOvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcCqcOvRowStatus.setStatus('mandatory')
mscLpEngArcCqcOvComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcCqcOvComponentName.setStatus('mandatory')
mscLpEngArcCqcOvStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcCqcOvStorageType.setStatus('mandatory')
mscLpEngArcCqcOvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEngArcCqcOvIndex.setStatus('mandatory')
mscLpEngArcCqcOvProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 2, 10), )
if mibBuilder.loadTexts: mscLpEngArcCqcOvProvTable.setStatus('mandatory')
mscLpEngArcCqcOvProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcCqcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcCqcOvIndex"))
if mibBuilder.loadTexts: mscLpEngArcCqcOvProvEntry.setStatus('mandatory')
mscLpEngArcCqcOvPerVcQueueInterfaces = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngArcCqcOvPerVcQueueInterfaces.setStatus('mandatory')
mscLpEngArcCqcOvShapingScalingFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 2, 10, 1, 2), FixedPoint1().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 10), ValueRangeConstraint(14, 14), ValueRangeConstraint(20, 20), ValueRangeConstraint(28, 28), ValueRangeConstraint(40, 40), ValueRangeConstraint(56, 56), )).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngArcCqcOvShapingScalingFactor.setStatus('mandatory')
mscLpEngArcCqcOvCdvReduction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("cardDependent", 2))).clone('cardDependent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngArcCqcOvCdvReduction.setStatus('mandatory')
mscLpEngArcCqcOvPortCongestionPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("aggregate", 0), ("individualQueue", 1))).clone('aggregate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngArcCqcOvPortCongestionPolicy.setStatus('mandatory')
mscLpEngArcCqcOvConnCapTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 2, 450), )
if mibBuilder.loadTexts: mscLpEngArcCqcOvConnCapTable.setStatus('mandatory')
mscLpEngArcCqcOvConnCapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 2, 450, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcCqcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcCqcOvIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcCqcOvConnCapIndex"))
if mibBuilder.loadTexts: mscLpEngArcCqcOvConnCapEntry.setStatus('mandatory')
mscLpEngArcCqcOvConnCapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 2, 450, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: mscLpEngArcCqcOvConnCapIndex.setStatus('mandatory')
mscLpEngArcCqcOvConnCapValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 3, 2, 450, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(512, 4096), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngArcCqcOvConnCapValue.setStatus('mandatory')
mscLpEngArcAqm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4))
mscLpEngArcAqmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 1), )
if mibBuilder.loadTexts: mscLpEngArcAqmRowStatusTable.setStatus('mandatory')
mscLpEngArcAqmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcAqmIndex"))
if mibBuilder.loadTexts: mscLpEngArcAqmRowStatusEntry.setStatus('mandatory')
mscLpEngArcAqmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngArcAqmRowStatus.setStatus('mandatory')
mscLpEngArcAqmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcAqmComponentName.setStatus('mandatory')
mscLpEngArcAqmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcAqmStorageType.setStatus('mandatory')
mscLpEngArcAqmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscLpEngArcAqmIndex.setStatus('mandatory')
mscLpEngArcAqmOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 10), )
if mibBuilder.loadTexts: mscLpEngArcAqmOperTable.setStatus('mandatory')
mscLpEngArcAqmOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcAqmIndex"))
if mibBuilder.loadTexts: mscLpEngArcAqmOperEntry.setStatus('mandatory')
mscLpEngArcAqmConnectionPoolAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcAqmConnectionPoolAvailable.setStatus('mandatory')
mscLpEngArcAqmConnectionPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcAqmConnectionPoolUsage.setStatus('mandatory')
mscLpEngArcAqmTxCellMemoryAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 10, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcAqmTxCellMemoryAvailable.setStatus('mandatory')
mscLpEngArcAqmTxCellMemoryMinAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 10, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcAqmTxCellMemoryMinAvailable.setStatus('mandatory')
mscLpEngArcAqmTxCellMemoryCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 10, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcAqmTxCellMemoryCongestionState.setStatus('mandatory')
mscLpEngArcAqmTxCellThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 448), )
if mibBuilder.loadTexts: mscLpEngArcAqmTxCellThreshTable.setStatus('mandatory')
mscLpEngArcAqmTxCellThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 448, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcAqmIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcAqmTxCellThreshIndex"))
if mibBuilder.loadTexts: mscLpEngArcAqmTxCellThreshEntry.setStatus('mandatory')
mscLpEngArcAqmTxCellThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 448, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscLpEngArcAqmTxCellThreshIndex.setStatus('mandatory')
mscLpEngArcAqmTxCellThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 448, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcAqmTxCellThreshValue.setStatus('mandatory')
mscLpEngArcAqmOv = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 2))
mscLpEngArcAqmOvRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 2, 1), )
if mibBuilder.loadTexts: mscLpEngArcAqmOvRowStatusTable.setStatus('mandatory')
mscLpEngArcAqmOvRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcAqmIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcAqmOvIndex"))
if mibBuilder.loadTexts: mscLpEngArcAqmOvRowStatusEntry.setStatus('mandatory')
mscLpEngArcAqmOvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcAqmOvRowStatus.setStatus('mandatory')
mscLpEngArcAqmOvComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcAqmOvComponentName.setStatus('mandatory')
mscLpEngArcAqmOvStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngArcAqmOvStorageType.setStatus('mandatory')
mscLpEngArcAqmOvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEngArcAqmOvIndex.setStatus('mandatory')
mscLpEngArcAqmOvProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 2, 10), )
if mibBuilder.loadTexts: mscLpEngArcAqmOvProvTable.setStatus('mandatory')
mscLpEngArcAqmOvProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcAqmIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngArcAqmOvIndex"))
if mibBuilder.loadTexts: mscLpEngArcAqmOvProvEntry.setStatus('mandatory')
mscLpEngArcAqmOvConnectionPoolCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 16000), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngArcAqmOvConnectionPoolCapacity.setStatus('mandatory')
mscLpEngArcAqmOvHighPriorityEpdOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 1024)).clone(28)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngArcAqmOvHighPriorityEpdOffset.setStatus('mandatory')
mscLpEngArcAqmOvLowPriorityEpdOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 1024)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngArcAqmOvLowPriorityEpdOffset.setStatus('mandatory')
mscLpEngArcAqmOvPortCongestionPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 5, 4, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("aggregate", 0), ("individualQueue", 1))).clone('individualQueue')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngArcAqmOvPortCongestionPolicy.setStatus('mandatory')
mscLpEngFcrc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6))
mscLpEngFcrcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 1), )
if mibBuilder.loadTexts: mscLpEngFcrcRowStatusTable.setStatus('mandatory')
mscLpEngFcrcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcIndex"))
if mibBuilder.loadTexts: mscLpEngFcrcRowStatusEntry.setStatus('mandatory')
mscLpEngFcrcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngFcrcRowStatus.setStatus('mandatory')
mscLpEngFcrcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcComponentName.setStatus('mandatory')
mscLpEngFcrcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcStorageType.setStatus('mandatory')
mscLpEngFcrcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEngFcrcIndex.setStatus('mandatory')
mscLpEngFcrcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 10), )
if mibBuilder.loadTexts: mscLpEngFcrcOperTable.setStatus('mandatory')
mscLpEngFcrcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcIndex"))
if mibBuilder.loadTexts: mscLpEngFcrcOperEntry.setStatus('mandatory')
mscLpEngFcrcSubConnectionPoolAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 49152))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcSubConnectionPoolAvailable.setStatus('mandatory')
mscLpEngFcrcSubConnectionPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 49152))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcSubConnectionPoolUsage.setStatus('mandatory')
mscLpEngFcrcLnnConnectionPoolAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcLnnConnectionPoolAvailable.setStatus('mandatory')
mscLpEngFcrcLnnConnectionPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcLnnConnectionPoolUsage.setStatus('mandatory')
mscLpEngFcrcTxFrameMemoryAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 10, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcTxFrameMemoryAvailable.setStatus('mandatory')
mscLpEngFcrcTxFrameMemoryMinAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 10, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcTxFrameMemoryMinAvailable.setStatus('mandatory')
mscLpEngFcrcTxFrameMemoryCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 10, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcTxFrameMemoryCongestionState.setStatus('mandatory')
mscLpEngFcrcRxFrameMemoryAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 10, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcRxFrameMemoryAvailable.setStatus('mandatory')
mscLpEngFcrcRxFrameMemoryMinAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 10, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcRxFrameMemoryMinAvailable.setStatus('mandatory')
mscLpEngFcrcRxFrameMemoryCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 10, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcRxFrameMemoryCongestionState.setStatus('mandatory')
mscLpEngFcrcTxFrThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 442), )
if mibBuilder.loadTexts: mscLpEngFcrcTxFrThreshTable.setStatus('mandatory')
mscLpEngFcrcTxFrThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 442, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcTxFrThreshIndex"))
if mibBuilder.loadTexts: mscLpEngFcrcTxFrThreshEntry.setStatus('mandatory')
mscLpEngFcrcTxFrThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 442, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscLpEngFcrcTxFrThreshIndex.setStatus('mandatory')
mscLpEngFcrcTxFrThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 442, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcTxFrThreshValue.setStatus('mandatory')
mscLpEngFcrcRxFrThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 446), )
if mibBuilder.loadTexts: mscLpEngFcrcRxFrThreshTable.setStatus('mandatory')
mscLpEngFcrcRxFrThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 446, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcRxFrThreshIndex"))
if mibBuilder.loadTexts: mscLpEngFcrcRxFrThreshEntry.setStatus('mandatory')
mscLpEngFcrcRxFrThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 446, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscLpEngFcrcRxFrThreshIndex.setStatus('mandatory')
mscLpEngFcrcRxFrThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 446, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcRxFrThreshValue.setStatus('mandatory')
mscLpEngFcrcOv = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 2))
mscLpEngFcrcOvRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 2, 1), )
if mibBuilder.loadTexts: mscLpEngFcrcOvRowStatusTable.setStatus('mandatory')
mscLpEngFcrcOvRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcOvIndex"))
if mibBuilder.loadTexts: mscLpEngFcrcOvRowStatusEntry.setStatus('mandatory')
mscLpEngFcrcOvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngFcrcOvRowStatus.setStatus('mandatory')
mscLpEngFcrcOvComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcOvComponentName.setStatus('mandatory')
mscLpEngFcrcOvStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcOvStorageType.setStatus('mandatory')
mscLpEngFcrcOvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEngFcrcOvIndex.setStatus('mandatory')
mscLpEngFcrcOvProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 2, 10), )
if mibBuilder.loadTexts: mscLpEngFcrcOvProvTable.setStatus('mandatory')
mscLpEngFcrcOvProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcOvIndex"))
if mibBuilder.loadTexts: mscLpEngFcrcOvProvEntry.setStatus('mandatory')
mscLpEngFcrcOvSubConnectionPoolCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 49152), ValueRangeConstraint(65535, 65535), )).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngFcrcOvSubConnectionPoolCapacity.setStatus('mandatory')
mscLpEngFcrcOvLnnConnectionPoolCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 2048), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngFcrcOvLnnConnectionPoolCapacity.setStatus('mandatory')
mscLpEngFcrcPqc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3))
mscLpEngFcrcPqcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 1), )
if mibBuilder.loadTexts: mscLpEngFcrcPqcRowStatusTable.setStatus('mandatory')
mscLpEngFcrcPqcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcPqcIndex"))
if mibBuilder.loadTexts: mscLpEngFcrcPqcRowStatusEntry.setStatus('mandatory')
mscLpEngFcrcPqcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngFcrcPqcRowStatus.setStatus('mandatory')
mscLpEngFcrcPqcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcPqcComponentName.setStatus('mandatory')
mscLpEngFcrcPqcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcPqcStorageType.setStatus('mandatory')
mscLpEngFcrcPqcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEngFcrcPqcIndex.setStatus('mandatory')
mscLpEngFcrcPqcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 10), )
if mibBuilder.loadTexts: mscLpEngFcrcPqcOperTable.setStatus('mandatory')
mscLpEngFcrcPqcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcPqcIndex"))
if mibBuilder.loadTexts: mscLpEngFcrcPqcOperEntry.setStatus('mandatory')
mscLpEngFcrcPqcIpRoutesPoolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 10, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcPqcIpRoutesPoolSize.setStatus('mandatory')
mscLpEngFcrcPqcIpRoutesPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 10, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcPqcIpRoutesPoolUsage.setStatus('mandatory')
mscLpEngFcrcPqcIpRoutesPoolAvailableEst = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 10, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcPqcIpRoutesPoolAvailableEst.setStatus('mandatory')
mscLpEngFcrcPqcOv = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 2))
mscLpEngFcrcPqcOvRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 2, 1), )
if mibBuilder.loadTexts: mscLpEngFcrcPqcOvRowStatusTable.setStatus('mandatory')
mscLpEngFcrcPqcOvRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcPqcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcPqcOvIndex"))
if mibBuilder.loadTexts: mscLpEngFcrcPqcOvRowStatusEntry.setStatus('mandatory')
mscLpEngFcrcPqcOvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcPqcOvRowStatus.setStatus('mandatory')
mscLpEngFcrcPqcOvComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcPqcOvComponentName.setStatus('mandatory')
mscLpEngFcrcPqcOvStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEngFcrcPqcOvStorageType.setStatus('mandatory')
mscLpEngFcrcPqcOvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEngFcrcPqcOvIndex.setStatus('mandatory')
mscLpEngFcrcPqcOvProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 2, 10), )
if mibBuilder.loadTexts: mscLpEngFcrcPqcOvProvTable.setStatus('mandatory')
mscLpEngFcrcPqcOvProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpEngIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcPqcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBaseMIB", "mscLpEngFcrcPqcOvIndex"))
if mibBuilder.loadTexts: mscLpEngFcrcPqcOvProvEntry.setStatus('mandatory')
mscLpEngFcrcPqcOvIpRoutesPoolCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 23, 6, 3, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000)).clone(4096)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEngFcrcPqcOvIpRoutesPoolCapacity.setStatus('mandatory')
atmBaseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 63, 1))
atmBaseGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 63, 1, 1))
atmBaseGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 63, 1, 1, 3))
atmBaseGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 63, 1, 1, 3, 2))
atmBaseCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 63, 3))
atmBaseCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 63, 3, 1))
atmBaseCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 63, 3, 1, 3))
atmBaseCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 63, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-AtmBaseMIB", mscLpEngArcAqmConnectionPoolUsage=mscLpEngArcAqmConnectionPoolUsage, mscLpEngArcStorageType=mscLpEngArcStorageType, mscLpAruRxCellBlockCapacity=mscLpAruRxCellBlockCapacity, mscLpEngFcrcOvProvEntry=mscLpEngFcrcOvProvEntry, mscLpAruOperTable=mscLpAruOperTable, mscLpAruSubConnectionPoolUsage=mscLpAruSubConnectionPoolUsage, mscLpEngArcOvTotalConnectionPoolCapacity=mscLpEngArcOvTotalConnectionPoolCapacity, mscLpEngFcrcPqcOvComponentName=mscLpEngFcrcPqcOvComponentName, mscLpEngArcAqmOvHighPriorityEpdOffset=mscLpEngArcAqmOvHighPriorityEpdOffset, mscLpArcRowStatus=mscLpArcRowStatus, mscLpArcConnCapEntry=mscLpArcConnCapEntry, mscLpEngArcOperTable=mscLpEngArcOperTable, mscLpEngFcrcRxFrThreshTable=mscLpEngFcrcRxFrThreshTable, mscLpEngFcrcLnnConnectionPoolUsage=mscLpEngFcrcLnnConnectionPoolUsage, mscLpEngArcCqcOvProvTable=mscLpEngArcCqcOvProvTable, mscLpEngFcrcOvRowStatusTable=mscLpEngFcrcOvRowStatusTable, atmBaseCapabilitiesCA02A=atmBaseCapabilitiesCA02A, mscLpAruRxCflThreshValue=mscLpAruRxCflThreshValue, mscLpArcShapingStackAllocation=mscLpArcShapingStackAllocation, mscLpEngFcrcOvSubConnectionPoolCapacity=mscLpEngFcrcOvSubConnectionPoolCapacity, mscLpEngArcAqmTxCellMemoryCongestionState=mscLpEngArcAqmTxCellMemoryCongestionState, mscLpEngArcRowStatusTable=mscLpEngArcRowStatusTable, mscLpEngFcrcPqcOvRowStatus=mscLpEngFcrcPqcOvRowStatus, atmBaseCapabilitiesCA02=atmBaseCapabilitiesCA02, mscLpAruTxCflThreshEntry=mscLpAruTxCflThreshEntry, mscLpArcSubConnectionPoolCapacity=mscLpArcSubConnectionPoolCapacity, mscLpEngArcCqcOvPortCongestionPolicy=mscLpEngArcCqcOvPortCongestionPolicy, mscLpEngArcOperEntry=mscLpEngArcOperEntry, mscLpEngFcrcTxFrThreshEntry=mscLpEngFcrcTxFrThreshEntry, mscLpAruIndex=mscLpAruIndex, mscLpEngArcCqcOvConnCapIndex=mscLpEngArcCqcOvConnCapIndex, mscLpEngArcOvProvTable=mscLpEngArcOvProvTable, atmBaseMIB=atmBaseMIB, mscLpEngFcrcSubConnectionPoolUsage=mscLpEngFcrcSubConnectionPoolUsage, mscLpAruRxCflThreshEntry=mscLpAruRxCflThreshEntry, mscLpArcLnnConnectionPoolCapacity=mscLpArcLnnConnectionPoolCapacity, mscLpEngArcMulticastBranchesUsage=mscLpEngArcMulticastBranchesUsage, mscLpAruTxFflThreshValue=mscLpAruTxFflThreshValue, mscLpEngFcrcPqcRowStatusEntry=mscLpEngFcrcPqcRowStatusEntry, mscLpAruTxFrameFreeListCongestionState=mscLpAruTxFrameFreeListCongestionState, mscLpArcRxFrameMemoryAllocation=mscLpArcRxFrameMemoryAllocation, mscLpEngArcAqmTxCellThreshEntry=mscLpEngArcAqmTxCellThreshEntry, mscLpEngArcCqcRowStatus=mscLpEngArcCqcRowStatus, mscLpEngArcTxCellThreshValue=mscLpEngArcTxCellThreshValue, mscLpEngArcCqcOvPerVcQueueInterfaces=mscLpEngArcCqcOvPerVcQueueInterfaces, mscLpAruRxFflThreshIndex=mscLpAruRxFflThreshIndex, atmBaseGroupCA02=atmBaseGroupCA02, mscLpArcConnCapValue=mscLpArcConnCapValue, mscLpAruRxCellFreeListSize=mscLpAruRxCellFreeListSize, mscLpEngArcAqmOvRowStatusEntry=mscLpEngArcAqmOvRowStatusEntry, mscLpEngFcrcRowStatusTable=mscLpEngFcrcRowStatusTable, mscLpAruTxFflThreshEntry=mscLpAruTxFflThreshEntry, mscLpEngArcCqcOvStorageType=mscLpEngArcCqcOvStorageType, mscLpEngArcOvRowStatusEntry=mscLpEngArcOvRowStatusEntry, mscLpEngFcrcPqcOvRowStatusTable=mscLpEngFcrcPqcOvRowStatusTable, mscLpEngFcrc=mscLpEngFcrc, mscLpArcTxFrameMemoryAllocation=mscLpArcTxFrameMemoryAllocation, mscLpAruComponentName=mscLpAruComponentName, mscLpArc=mscLpArc, mscLpEngFcrcRowStatus=mscLpEngFcrcRowStatus, mscLpEngFcrcPqcRowStatus=mscLpEngFcrcPqcRowStatus, mscLpAruConnUsageEntry=mscLpAruConnUsageEntry, mscLpEngFcrcPqcOperTable=mscLpEngFcrcPqcOperTable, mscLpEngArcCqcOvConnCapValue=mscLpEngArcCqcOvConnCapValue, mscLpAruRxFflThreshTable=mscLpAruRxFflThreshTable, mscLpAruTxFrameMemoryAllocation=mscLpAruTxFrameMemoryAllocation, mscLpArcRowStatusEntry=mscLpArcRowStatusEntry, mscLpAruRowStatus=mscLpAruRowStatus, mscLpEngFcrcTxFrameMemoryMinAvailable=mscLpEngFcrcTxFrameMemoryMinAvailable, mscLpEngArcCqcOvShapingScalingFactor=mscLpEngArcCqcOvShapingScalingFactor, mscLpAruTxFflThreshIndex=mscLpAruTxFflThreshIndex, mscLpEngFcrcPqcIpRoutesPoolAvailableEst=mscLpEngFcrcPqcIpRoutesPoolAvailableEst, mscLpArcConnCapIndex=mscLpArcConnCapIndex, mscLpArcRowStatusTable=mscLpArcRowStatusTable, mscLpAruSubConnectionPoolAvailable=mscLpAruSubConnectionPoolAvailable, mscLpEngArcCqcComponentName=mscLpEngArcCqcComponentName, mscLpAruRowStatusEntry=mscLpAruRowStatusEntry, mscLpEngArcRxCellMemoryCongestionState=mscLpEngArcRxCellMemoryCongestionState, mscLpEngFcrcOvIndex=mscLpEngFcrcOvIndex, mscLpEngArcTxCellThreshIndex=mscLpEngArcTxCellThreshIndex, mscLpEngArcCqcOperEntry=mscLpEngArcCqcOperEntry, mscLpAruTotalConnectionPoolUsage=mscLpAruTotalConnectionPoolUsage, mscLpAruTxCellFreeListSize=mscLpAruTxCellFreeListSize, mscLpEngArcAqmComponentName=mscLpEngArcAqmComponentName, mscLpAruRxCellFreeListCongestionState=mscLpAruRxCellFreeListCongestionState, mscLpAruRxCflThreshTable=mscLpAruRxCflThreshTable, mscLpEngFcrcTxFrameMemoryCongestionState=mscLpEngFcrcTxFrameMemoryCongestionState, mscLpAruTxCellBlockCapacity=mscLpAruTxCellBlockCapacity, mscLpEngArcAqmTxCellThreshTable=mscLpEngArcAqmTxCellThreshTable, mscLpEngFcrcOvComponentName=mscLpEngFcrcOvComponentName, mscLpEngFcrcRxFrameMemoryMinAvailable=mscLpEngFcrcRxFrameMemoryMinAvailable, mscLpEngFcrcPqcOvRowStatusEntry=mscLpEngFcrcPqcOvRowStatusEntry, mscLpAru=mscLpAru, mscLpEngFcrcOvStorageType=mscLpEngFcrcOvStorageType, mscLpEngArcRxCellThreshEntry=mscLpEngArcRxCellThreshEntry, mscLpArcComponentName=mscLpArcComponentName, mscLpEngArcRxCellThreshValue=mscLpEngArcRxCellThreshValue, mscLpEngArcCqcOvConnCapTable=mscLpEngArcCqcOvConnCapTable, mscLpEngArcComponentName=mscLpEngArcComponentName, mscLpEngArcAqmRowStatusEntry=mscLpEngArcAqmRowStatusEntry, mscLpEngFcrcPqc=mscLpEngFcrcPqc, mscLpEngArcAqmOvStorageType=mscLpEngArcAqmOvStorageType, mscLpEngArcOvTxCellMemoryAllocation=mscLpEngArcOvTxCellMemoryAllocation, mscLpEngFcrcOperEntry=mscLpEngFcrcOperEntry, mscLpAruTxFrameBlockCapacity=mscLpAruTxFrameBlockCapacity, mscLpEngArcCqc=mscLpEngArcCqc, mscLpEngArcAqmOvComponentName=mscLpEngArcAqmOvComponentName, mscLpEngFcrcIndex=mscLpEngFcrcIndex, mscLpEngFcrcRxFrThreshEntry=mscLpEngFcrcRxFrThreshEntry, mscLpEngArcCqcOvConnCapEntry=mscLpEngArcCqcOvConnCapEntry, mscLpEngArcOvRxCellMemoryAllocation=mscLpEngArcOvRxCellMemoryAllocation, mscLpEngFcrcOvLnnConnectionPoolCapacity=mscLpEngFcrcOvLnnConnectionPoolCapacity, mscLpAruRxFrameFreeListCongestionState=mscLpAruRxFrameFreeListCongestionState, mscLpAruRxFrameFreeListSize=mscLpAruRxFrameFreeListSize, mscLpEngArcOvRowStatusTable=mscLpEngArcOvRowStatusTable, mscLpEngArcCqcOvIndex=mscLpEngArcCqcOvIndex, mscLpEngFcrcStorageType=mscLpEngFcrcStorageType, mscLpEngFcrcTxFrThreshTable=mscLpEngFcrcTxFrThreshTable, mscLpEngArcAqmIndex=mscLpEngArcAqmIndex, mscLpEngArcAqmStorageType=mscLpEngArcAqmStorageType, mscLpEngArc=mscLpEngArc, mscLpEngFcrcOvRowStatus=mscLpEngFcrcOvRowStatus, mscLpEngFcrcPqcIpRoutesPoolSize=mscLpEngFcrcPqcIpRoutesPoolSize, mscLpAruTxCellFreeListCongestionState=mscLpAruTxCellFreeListCongestionState, mscLpAruTxCflThreshTable=mscLpAruTxCflThreshTable, mscLpEngFcrcPqcIndex=mscLpEngFcrcPqcIndex, atmBaseGroupCA02A=atmBaseGroupCA02A, mscLpEngArcTxCellThreshEntry=mscLpEngArcTxCellThreshEntry, mscLpEngArcCqcRowStatusEntry=mscLpEngArcCqcRowStatusEntry, mscLpEngArcAqmTxCellThreshValue=mscLpEngArcAqmTxCellThreshValue, mscLpArcTotalConnectionPoolCapacity=mscLpArcTotalConnectionPoolCapacity, mscLpEngArcTxCellMemoryMinAvailable=mscLpEngArcTxCellMemoryMinAvailable, mscLpEngArcAqmOperTable=mscLpEngArcAqmOperTable, mscLpArcProvTable=mscLpArcProvTable, mscLpEngFcrcPqcComponentName=mscLpEngFcrcPqcComponentName, atmBaseGroup=atmBaseGroup, mscLpAruRxFflThreshValue=mscLpAruRxFflThreshValue, mscLpEngArcAqmTxCellMemoryMinAvailable=mscLpEngArcAqmTxCellMemoryMinAvailable, mscLpEngArcAqmOvProvTable=mscLpEngArcAqmOvProvTable, mscLpEngArcOvRowStatus=mscLpEngArcOvRowStatus, mscLpAruRxFrameMemoryAllocation=mscLpAruRxFrameMemoryAllocation, mscLpEngArcRxCellMemoryAllocation=mscLpEngArcRxCellMemoryAllocation, mscLpEngArcTotalConnectionPoolAvailable=mscLpEngArcTotalConnectionPoolAvailable, atmBaseGroupCA=atmBaseGroupCA, mscLpEngArcIndex=mscLpEngArcIndex, mscLpEngArcCqcOvRowStatusTable=mscLpEngArcCqcOvRowStatusTable, mscLpEngArcRxCellThreshIndex=mscLpEngArcRxCellThreshIndex, mscLpEngFcrcPqcIpRoutesPoolUsage=mscLpEngFcrcPqcIpRoutesPoolUsage, mscLpEngFcrcPqcOvProvTable=mscLpEngFcrcPqcOvProvTable, mscLpAruTxFflThreshTable=mscLpAruTxFflThreshTable, mscLpEngArcAqmRowStatus=mscLpEngArcAqmRowStatus, mscLpEngFcrcPqcOv=mscLpEngFcrcPqcOv, mscLpEngArcTxCellMemoryCongestionState=mscLpEngArcTxCellMemoryCongestionState, mscLpEngArcCqcIndex=mscLpEngArcCqcIndex, mscLpEngArcAqmTxCellThreshIndex=mscLpEngArcAqmTxCellThreshIndex, mscLpEngArcAqmOvPortCongestionPolicy=mscLpEngArcAqmOvPortCongestionPolicy, mscLpEngArcOvStorageType=mscLpEngArcOvStorageType, mscLpEngArcRowStatus=mscLpEngArcRowStatus, mscLpEngArcCqcOperTable=mscLpEngArcCqcOperTable, mscLpEngArcCqcOvComponentName=mscLpEngArcCqcOvComponentName, mscLpAruMulticastBranchesUsage=mscLpAruMulticastBranchesUsage, mscLpEngFcrcComponentName=mscLpEngFcrcComponentName, mscLpEngFcrcTxFrThreshValue=mscLpEngFcrcTxFrThreshValue, mscLpEngFcrcRxFrameMemoryCongestionState=mscLpEngFcrcRxFrameMemoryCongestionState, mscLpEngArcCqcOvCdvReduction=mscLpEngArcCqcOvCdvReduction, mscLpEngFcrcPqcOvStorageType=mscLpEngFcrcPqcOvStorageType, mscLpAruConnUsageValue=mscLpAruConnUsageValue, mscLpEngFcrcRxFrThreshIndex=mscLpEngFcrcRxFrThreshIndex, mscLpEngArcAqmRowStatusTable=mscLpEngArcAqmRowStatusTable, mscLpEngFcrcOvRowStatusEntry=mscLpEngFcrcOvRowStatusEntry, mscLpEngArcOv=mscLpEngArcOv, mscLpAruTxCflThreshValue=mscLpAruTxCflThreshValue, mscLpEngFcrcPqcOvIpRoutesPoolCapacity=mscLpEngFcrcPqcOvIpRoutesPoolCapacity, mscLpEngFcrcPqcOperEntry=mscLpEngFcrcPqcOperEntry, mscLpAruStorageType=mscLpAruStorageType, mscLpEngArcOvMulticastBranchesCapacity=mscLpEngArcOvMulticastBranchesCapacity, mscLpEngArcOvIndex=mscLpEngArcOvIndex, mscLpAruTxFrameFreeListSize=mscLpAruTxFrameFreeListSize, mscLpEngArcAqmOvRowStatusTable=mscLpEngArcAqmOvRowStatusTable, mscLpEngFcrcPqcOvIndex=mscLpEngFcrcPqcOvIndex, mscLpAruLnnConnectionPoolAvailable=mscLpAruLnnConnectionPoolAvailable, mscLpEngFcrcPqcOvProvEntry=mscLpEngFcrcPqcOvProvEntry, mscLpArcMulticastBranchesCapacity=mscLpArcMulticastBranchesCapacity, mscLpAruConnUsageTable=mscLpAruConnUsageTable, mscLpEngFcrcTxFrThreshIndex=mscLpEngFcrcTxFrThreshIndex, mscLpAruTxCellBlockUsage=mscLpAruTxCellBlockUsage, mscLpEngArcAqmOperEntry=mscLpEngArcAqmOperEntry, mscLpAruTxCflThreshIndex=mscLpAruTxCflThreshIndex, mscLpEngArcTxCellMemoryAllocation=mscLpEngArcTxCellMemoryAllocation, mscLpAruTxFrameBlockUsage=mscLpAruTxFrameBlockUsage, mscLpEngArcMulticastBranchesAvailable=mscLpEngArcMulticastBranchesAvailable, mscLpEngArcCqcOvRowStatus=mscLpEngArcCqcOvRowStatus, mscLpEngArcAqmOvIndex=mscLpEngArcAqmOvIndex, mscLpArcCdvAttenuation=mscLpArcCdvAttenuation, mscLpAruRxCellBlockUsage=mscLpAruRxCellBlockUsage, mscLpAruRxFrameBlockUsage=mscLpAruRxFrameBlockUsage, mscLpEngFcrcLnnConnectionPoolAvailable=mscLpEngFcrcLnnConnectionPoolAvailable, mscLpAruConnUsageIndex=mscLpAruConnUsageIndex, mscLpEngArcAqmConnectionPoolAvailable=mscLpEngArcAqmConnectionPoolAvailable, mscLpEngArcTotalConnectionPoolUsage=mscLpEngArcTotalConnectionPoolUsage, mscLpEngFcrcOperTable=mscLpEngFcrcOperTable, mscLpEngArcAqmTxCellMemoryAvailable=mscLpEngArcAqmTxCellMemoryAvailable, mscLpEngArcAqmOvLowPriorityEpdOffset=mscLpEngArcAqmOvLowPriorityEpdOffset, mscLpArcShapingScalingFactor=mscLpArcShapingScalingFactor, mscLpAruRxFrameBlockCapacity=mscLpAruRxFrameBlockCapacity, mscLpArcConnCapTable=mscLpArcConnCapTable, mscLpAruRowStatusTable=mscLpAruRowStatusTable, mscLpEngArcOvComponentName=mscLpEngArcOvComponentName, mscLpEngArcAqmOvRowStatus=mscLpEngArcAqmOvRowStatus, mscLpEngArcTxCellMemoryAvailable=mscLpEngArcTxCellMemoryAvailable, mscLpEngArcRxCellMemoryAvailable=mscLpEngArcRxCellMemoryAvailable, atmBaseCapabilitiesCA=atmBaseCapabilitiesCA, mscLpArcProvEntry=mscLpArcProvEntry, mscLpEngArcAqm=mscLpEngArcAqm, mscLpEngArcRxCellMemoryMinAvailable=mscLpEngArcRxCellMemoryMinAvailable, mscLpArcStorageType=mscLpArcStorageType, mscLpEngArcAqmOvProvEntry=mscLpEngArcAqmOvProvEntry, mscLpEngFcrcSubConnectionPoolAvailable=mscLpEngFcrcSubConnectionPoolAvailable, mscLpArcPerVcQueueInterfaces=mscLpArcPerVcQueueInterfaces, mscLpEngArcCqcOvProvEntry=mscLpEngArcCqcOvProvEntry, mscLpEngArcAqmOv=mscLpEngArcAqmOv, mscLpAruRxCflThreshIndex=mscLpAruRxCflThreshIndex, mscLpEngArcAqmOvConnectionPoolCapacity=mscLpEngArcAqmOvConnectionPoolCapacity, mscLpEngFcrcRxFrameMemoryAvailable=mscLpEngFcrcRxFrameMemoryAvailable, mscLpEngFcrcRxFrThreshValue=mscLpEngFcrcRxFrThreshValue, mscLpEngFcrcPqcRowStatusTable=mscLpEngFcrcPqcRowStatusTable, mscLpEngArcRowStatusEntry=mscLpEngArcRowStatusEntry, mscLpArcPortAggregation=mscLpArcPortAggregation, mscLpEngArcCqcCdvReduction=mscLpEngArcCqcCdvReduction, mscLpAruRxFflThreshEntry=mscLpAruRxFflThreshEntry, mscLpEngFcrcOvProvTable=mscLpEngFcrcOvProvTable, mscLpAruLnnConnectionPoolUsage=mscLpAruLnnConnectionPoolUsage, mscLpEngArcCqcStorageType=mscLpEngArcCqcStorageType, mscLpEngFcrcOv=mscLpEngFcrcOv, mscLpAruOperEntry=mscLpAruOperEntry, mscLpEngFcrcPqcStorageType=mscLpEngFcrcPqcStorageType, atmBaseCapabilities=atmBaseCapabilities, mscLpEngArcCqcOv=mscLpEngArcCqcOv, mscLpEngArcOvProvEntry=mscLpEngArcOvProvEntry, mscLpArcIndex=mscLpArcIndex, mscLpEngArcRxCellThreshTable=mscLpEngArcRxCellThreshTable, mscLpEngArcCqcRowStatusTable=mscLpEngArcCqcRowStatusTable, mscLpEngFcrcRowStatusEntry=mscLpEngFcrcRowStatusEntry, mscLpEngFcrcTxFrameMemoryAvailable=mscLpEngFcrcTxFrameMemoryAvailable, mscLpEngArcCqcOvRowStatusEntry=mscLpEngArcCqcOvRowStatusEntry, mscLpEngArcTxCellThreshTable=mscLpEngArcTxCellThreshTable)
