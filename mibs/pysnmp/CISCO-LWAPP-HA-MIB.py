#
# PySNMP MIB module CISCO-LWAPP-HA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-HA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:48:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
cRFStatusPeerUnitState, cRFStatusUnitState = mibBuilder.importSymbols("CISCO-RF-MIB", "cRFStatusPeerUnitState", "cRFStatusUnitState")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoURLString, = mibBuilder.importSymbols("CISCO-TC", "CiscoURLString")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
sysName, = mibBuilder.importSymbols("SNMPv2-MIB", "sysName")
TimeTicks, ObjectIdentity, Unsigned32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Gauge32, IpAddress, ModuleIdentity, iso, Counter64, Bits, NotificationType, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ObjectIdentity", "Unsigned32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Gauge32", "IpAddress", "ModuleIdentity", "iso", "Counter64", "Bits", "NotificationType", "MibIdentifier")
DisplayString, RowStatus, TruthValue, TimeStamp, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TruthValue", "TimeStamp", "TextualConvention", "MacAddress")
ciscoLwappHaMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 198888))
ciscoLwappHaMIB.setRevisions(('2012-01-24 11:50',))
if mibBuilder.loadTexts: ciscoLwappHaMIB.setLastUpdated('201201051150Z')
if mibBuilder.loadTexts: ciscoLwappHaMIB.setOrganization('Cisco Systems Inc.')
ciscoLwappHaMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0))
ciscoLwappHaGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 1))
ciscoLwappHaNetworkConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 2))
ciscoLwappHaMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 3))
cLHaApSsoConfig = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLHaApSsoConfig.setStatus('current')
cLHaPeerIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 1, 2), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLHaPeerIpAddressType.setStatus('current')
cLHaPeerIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLHaPeerIpAddress.setStatus('current')
cLHaServicePortPeerIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 1, 4), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLHaServicePortPeerIpAddressType.setStatus('current')
cLHaServicePortPeerIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 1, 5), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLHaServicePortPeerIpAddress.setStatus('current')
cLHaServicePortPeerIpNetMaskType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 1, 6), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLHaServicePortPeerIpNetMaskType.setStatus('current')
cLHaServicePortPeerIpNetMask = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 1, 7), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLHaServicePortPeerIpNetMask.setStatus('current')
cLHaRedundancyIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 1, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLHaRedundancyIpAddressType.setStatus('current')
cLHaRedundancyIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 1, 9), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLHaRedundancyIpAddress.setStatus('current')
cLHaPeerMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 1, 10), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLHaPeerMacAddress.setStatus('current')
cLHaVirtualMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 1, 11), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLHaVirtualMacAddress.setStatus('current')
cLHaPrimaryUnit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLHaPrimaryUnit.setStatus('current')
cLHaLinkEncryption = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLHaLinkEncryption.setStatus('current')
cLHaNetworkFailOver = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLHaNetworkFailOver.setStatus('current')
cLHaRFStatusUnitIp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 1, 15), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLHaRFStatusUnitIp.setStatus('current')
cLHaNetworkRoutePeerConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 2, 1), )
if mibBuilder.loadTexts: cLHaNetworkRoutePeerConfigTable.setStatus('current')
cLHaNetworkRoutePeerConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 2, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-HA-MIB", "cLHaNetworkRoutePeerIPAddressType"), (0, "CISCO-LWAPP-HA-MIB", "cLHaNetworkRoutePeerIPAddress"))
if mibBuilder.loadTexts: cLHaNetworkRoutePeerConfigEntry.setStatus('current')
cLHaNetworkRoutePeerIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 2, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cLHaNetworkRoutePeerIPAddressType.setStatus('current')
cLHaNetworkRoutePeerIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 2, 1, 1, 2), InetAddress())
if mibBuilder.loadTexts: cLHaNetworkRoutePeerIPAddress.setStatus('current')
cLHaNetworkRoutePeerIPNetmaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 2, 1, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLHaNetworkRoutePeerIPNetmaskType.setStatus('current')
cLHaNetworkRoutePeerIPNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 2, 1, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLHaNetworkRoutePeerIPNetmask.setStatus('current')
cLHaNetworkRoutePeerGatewayType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 2, 1, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLHaNetworkRoutePeerGatewayType.setStatus('current')
cLHaNetworkRoutePeerGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 2, 1, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLHaNetworkRoutePeerGateway.setStatus('current')
cLHaNetworkRoutePeerTransferStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("initiate", 1), ("inProgress", 2), ("success", 3), ("failure", 4), ("timeout", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLHaNetworkRoutePeerTransferStatus.setStatus('current')
cLHaNetworkRoutePeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 2, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLHaNetworkRoutePeerRowStatus.setStatus('current')
ciscoLwappHaNotificationVariable = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 4))
cLHaSecondaryControllerUsageTrapType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("usageStart", 1), ("usageComplete", 2), ("overUsage", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLHaSecondaryControllerUsageTrapType.setStatus('current')
cLHaSecondaryControllerUsageDayCounter = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLHaSecondaryControllerUsageDayCounter.setStatus('current')
cLHaSecondaryControllerUsageTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 3, 1)).setObjects(("CISCO-LWAPP-HA-MIB", "cLHaSecondaryControllerUsageTrapType"), ("CISCO-LWAPP-HA-MIB", "cLHaSecondaryControllerUsageDayCounter"), ("SNMPv2-MIB", "sysName"))
if mibBuilder.loadTexts: cLHaSecondaryControllerUsageTrap.setStatus('current')
cLHaRFSwapInfoTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 198888, 0, 3, 2)).setObjects(("CISCO-LWAPP-HA-MIB", "cLHaRFStatusUnitIp"), ("CISCO-RF-MIB", "cRFStatusUnitState"), ("CISCO-LWAPP-HA-MIB", "cLHaPeerIpAddress"), ("CISCO-RF-MIB", "cRFStatusPeerUnitState"))
if mibBuilder.loadTexts: cLHaRFSwapInfoTrap.setStatus('current')
mibBuilder.exportSymbols("CISCO-LWAPP-HA-MIB", cLHaServicePortPeerIpNetMask=cLHaServicePortPeerIpNetMask, cLHaNetworkRoutePeerConfigTable=cLHaNetworkRoutePeerConfigTable, cLHaPeerMacAddress=cLHaPeerMacAddress, PYSNMP_MODULE_ID=ciscoLwappHaMIB, ciscoLwappHaNetworkConfig=ciscoLwappHaNetworkConfig, cLHaNetworkRoutePeerIPAddress=cLHaNetworkRoutePeerIPAddress, cLHaPrimaryUnit=cLHaPrimaryUnit, cLHaNetworkRoutePeerRowStatus=cLHaNetworkRoutePeerRowStatus, ciscoLwappHaMIB=ciscoLwappHaMIB, cLHaRedundancyIpAddressType=cLHaRedundancyIpAddressType, cLHaLinkEncryption=cLHaLinkEncryption, cLHaNetworkRoutePeerGateway=cLHaNetworkRoutePeerGateway, cLHaRedundancyIpAddress=cLHaRedundancyIpAddress, cLHaNetworkRoutePeerGatewayType=cLHaNetworkRoutePeerGatewayType, cLHaRFStatusUnitIp=cLHaRFStatusUnitIp, cLHaServicePortPeerIpAddress=cLHaServicePortPeerIpAddress, cLHaNetworkRoutePeerIPNetmaskType=cLHaNetworkRoutePeerIPNetmaskType, cLHaServicePortPeerIpAddressType=cLHaServicePortPeerIpAddressType, cLHaNetworkRoutePeerConfigEntry=cLHaNetworkRoutePeerConfigEntry, cLHaSecondaryControllerUsageDayCounter=cLHaSecondaryControllerUsageDayCounter, cLHaServicePortPeerIpNetMaskType=cLHaServicePortPeerIpNetMaskType, cLHaRFSwapInfoTrap=cLHaRFSwapInfoTrap, cLHaVirtualMacAddress=cLHaVirtualMacAddress, cLHaPeerIpAddressType=cLHaPeerIpAddressType, ciscoLwappHaMIBNotifs=ciscoLwappHaMIBNotifs, cLHaNetworkRoutePeerIPAddressType=cLHaNetworkRoutePeerIPAddressType, cLHaNetworkRoutePeerTransferStatus=cLHaNetworkRoutePeerTransferStatus, ciscoLwappHaGlobalConfig=ciscoLwappHaGlobalConfig, cLHaApSsoConfig=cLHaApSsoConfig, cLHaSecondaryControllerUsageTrap=cLHaSecondaryControllerUsageTrap, ciscoLwappHaNotificationVariable=ciscoLwappHaNotificationVariable, cLHaSecondaryControllerUsageTrapType=cLHaSecondaryControllerUsageTrapType, cLHaNetworkRoutePeerIPNetmask=cLHaNetworkRoutePeerIPNetmask, ciscoLwappHaMIBObjects=ciscoLwappHaMIBObjects, cLHaPeerIpAddress=cLHaPeerIpAddress, cLHaNetworkFailOver=cLHaNetworkFailOver)
