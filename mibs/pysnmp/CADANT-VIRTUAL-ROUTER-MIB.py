#
# PySNMP MIB module CADANT-VIRTUAL-ROUTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CADANT-VIRTUAL-ROUTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:27:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
cadBgIndex, = mibBuilder.importSymbols("CADANT-CMTS-LAYER2CMTS-MIB", "cadBgIndex")
cadLayer3, = mibBuilder.importSymbols("CADANT-PRODUCTS-MIB", "cadLayer3")
InetAddressIPv4or6, CadCpeDeviceTypes = mibBuilder.importSymbols("CADANT-TC", "InetAddressIPv4or6", "CadCpeDeviceTypes")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressType, InetScopeType, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetScopeType", "InetAddressPrefixLength")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, iso, Integer32, Bits, TimeTicks, IpAddress, NotificationType, MibIdentifier, ModuleIdentity, Unsigned32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "iso", "Integer32", "Bits", "TimeTicks", "IpAddress", "NotificationType", "MibIdentifier", "ModuleIdentity", "Unsigned32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter64")
TextualConvention, RowStatus, DisplayString, DateAndTime, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "DateAndTime", "TruthValue")
cadVirtualRouterMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3))
cadVirtualRouterMibModule.setRevisions(('2015-05-12 00:00', '2014-08-18 00:00', '2014-08-05 00:00', '2014-01-15 00:00', '2013-12-13 00:00', '2013-11-26 00:00', '2013-08-30 00:00', '2013-04-16 00:00', '2012-04-18 00:00', '2012-03-20 00:00', '2010-08-11 00:00', '2010-07-02 00:00', '2010-05-06 00:00', '2009-09-17 00:00', '2009-09-10 00:00', '2009-09-03 00:00', '2009-08-28 00:00', '2008-02-09 00:00', '2007-12-09 00:00', '2007-01-18 00:00', '2006-11-28 00:00', '2006-09-25 00:00', '2006-07-17 00:00', '2005-11-14 00:00', '2005-04-06 00:00', '2004-10-27 00:00', '2004-03-22 00:00', '2004-02-09 00:00', '2004-01-28 00:00', '2003-07-21 00:00', '2003-07-16 00:00', '2003-07-01 00:00', '2003-06-30 00:00', '2003-04-07 00:00', '2003-03-06 00:00', '2002-12-16 00:00', '2002-11-04 00:00', '2002-09-20 00:00', '2002-08-16 00:00', '2002-05-21 00:00', '2002-05-07 00:00', '2001-08-18 00:00', '2001-07-17 00:00', '2001-07-13 00:00', '2001-07-02 00:00', '2001-05-25 00:00', '2001-05-21 00:00', '2001-04-29 00:00',))
if mibBuilder.loadTexts: cadVirtualRouterMibModule.setLastUpdated('201505120000Z')
if mibBuilder.loadTexts: cadVirtualRouterMibModule.setOrganization('ARRIS International Inc.')
class CadSourceVerifyType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 3, 7))
    namedValues = NamedValues(("none", 0), ("internal", 1), ("dhcp", 3), ("authoritativeDhcp", 7))

cadVirtualRouter = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1))
cadVrNameTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 1), )
if mibBuilder.loadTexts: cadVrNameTable.setStatus('current')
cadVrNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 1, 1), ).setIndexNames((0, "CADANT-VIRTUAL-ROUTER-MIB", "cadVrName"))
if mibBuilder.loadTexts: cadVrNameEntry.setStatus('current')
cadVrNameVrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrNameVrIndex.setStatus('current')
cadVrNameRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrNameRowStatus.setStatus('current')
cadVrTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 2), )
if mibBuilder.loadTexts: cadVrTable.setStatus('current')
cadVrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 2, 1), ).setIndexNames((0, "CADANT-VIRTUAL-ROUTER-MIB", "cadVrIndex"))
if mibBuilder.loadTexts: cadVrEntry.setStatus('current')
cadVrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 192)))
if mibBuilder.loadTexts: cadVrIndex.setStatus('current')
cadVrName = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrName.setStatus('current')
cadVrOspfEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 2, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrOspfEnabled.setStatus('obsolete')
cadVrRipEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 2, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrRipEnabled.setStatus('current')
cadVrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrRowStatus.setStatus('current')
cadVrScmAccessEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 2, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrScmAccessEnabled.setStatus('current')
cadVrScmAccessDirectedBroadcastEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 2, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrScmAccessDirectedBroadcastEnabled.setStatus('current')
cadVrNullInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 2, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrNullInterface.setStatus('current')
cadVrICMPTimeExceededEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 2, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrICMPTimeExceededEnabled.setStatus('current')
cadVrOspfGracefulRestartEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 2, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrOspfGracefulRestartEnabled.setStatus('current')
cadVrIPv6ReflectionEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 2, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrIPv6ReflectionEnabled.setStatus('current')
cadVrICMPv6TimeExceededEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 2, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrICMPv6TimeExceededEnabled.setStatus('current')
cadVrNullInterfacev6 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 2, 1, 13), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrNullInterfacev6.setStatus('current')
cadVrPhpEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 2, 1, 14), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrPhpEnabled.setStatus('current')
cadVrAutoImportEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 2, 1, 15), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrAutoImportEnabled.setStatus('current')
cadVrInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3), )
if mibBuilder.loadTexts: cadVrInterfaceTable.setStatus('current')
cadVrInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1), ).setIndexNames((0, "CADANT-VIRTUAL-ROUTER-MIB", "cadVrInterfaceSubifIndex"), (0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadBgIndex"))
if mibBuilder.loadTexts: cadVrInterfaceEntry.setStatus('current')
cadVrInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrInterfaceIfIndex.setStatus('current')
cadVrInterfaceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 2), InetAddressIPv4or6().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceIpAddr.setStatus('current')
cadVrInterfaceIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 3), InetAddressIPv4or6().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceIpMask.setStatus('current')
cadVrInterfaceDHCPEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 4), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrInterfaceDHCPEnabled.setStatus('current')
cadVrInterfaceFARPEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 5), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceFARPEnabled.setStatus('current')
cadVrInterfaceRipEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 6), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceRipEnabled.setStatus('obsolete')
cadVrInterfaceRipPassive = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceRipPassive.setStatus('obsolete')
cadVrInterfaceIGMPEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 8), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceIGMPEnabled.setStatus('obsolete')
cadVrInterfaceIRDPEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 9), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceIRDPEnabled.setStatus('obsolete')
cadVrInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceRowStatus.setStatus('current')
cadVrInterfaceDHCPPolicyEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceDHCPPolicyEnabled.setStatus('current')
cadVrInterfaceDirectedBcastEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceDirectedBcastEnabled.setStatus('current')
cadVrInterfaceSourceVerify = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 13), CadSourceVerifyType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceSourceVerify.setStatus('current')
cadVrInterfaceSubFilterDownDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceSubFilterDownDefault.setStatus('current')
cadVrInterfaceSubFilterUpDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceSubFilterUpDefault.setStatus('current')
cadVrInterfaceCmFilterDownDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceCmFilterDownDefault.setStatus('current')
cadVrInterfaceCmFilterUpDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceCmFilterUpDefault.setStatus('current')
cadVrInterfaceSubifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: cadVrInterfaceSubifIndex.setStatus('current')
cadVrInterfaceVrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 192)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceVrIndex.setStatus('current')
cadVrInterfaceIsLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 20), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrInterfaceIsLoopback.setStatus('current')
cadVrInterfaceRestrictedFARPEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 21), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceRestrictedFARPEnabled.setStatus('current')
cadVrInterfaceAdminStat = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceAdminStat.setStatus('current')
cadVrInterfaceIcmpUnreachablesEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 23), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceIcmpUnreachablesEnabled.setStatus('current')
cadVrInterfaceDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceDescription.setStatus('current')
cadVrInterfaceEncapType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 25), IANAifType().clone('l3ipvlan')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceEncapType.setStatus('current')
cadVrInterfaceVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceVlanId.setStatus('current')
cadVrInterfacePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfacePriority.setStatus('current')
cadVrInterfaceScmAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 28), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceScmAccess.setStatus('current')
cadVrInterfaceIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 29), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceIpAddrType.setStatus('current')
cadVrInterfaceIpPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 30), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceIpPrefixLength.setStatus('current')
cadVrInterfaceIpScopeType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 31), InetScopeType().clone('linkLocal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceIpScopeType.setStatus('current')
cadVrInterfaceIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 32), InetAddressIPv4or6().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceIpv6Addr.setStatus('current')
cadVrInterfaceIpv6PrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 33), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceIpv6PrefixLength.setStatus('current')
cadVrInterfaceDADAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 34), Unsigned32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceDADAttempts.setStatus('current')
cadVrInterfaceIpv6Forwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forwarding", 1), ("notforwarding", 2))).clone('forwarding')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrInterfaceIpv6Forwarding.setStatus('current')
cadVrInterfacePsFilterDownDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfacePsFilterDownDefault.setStatus('current')
cadVrInterfacePsFilterUpDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfacePsFilterUpDefault.setStatus('current')
cadVrInterfaceMtaFilterDownDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceMtaFilterDownDefault.setStatus('current')
cadVrInterfaceMtaFilterUpDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceMtaFilterUpDefault.setStatus('current')
cadVrInterfaceStbFilterDownDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceStbFilterDownDefault.setStatus('current')
cadVrInterfaceStbFilterUpDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceStbFilterUpDefault.setStatus('current')
cadVrInterfaceIcmpv6UnreachablesEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 46), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceIcmpv6UnreachablesEnabled.setStatus('current')
cadVrInterfaceIcmpv6TooBigEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 47), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceIcmpv6TooBigEnabled.setStatus('current')
cadVrInterfaceIcmpv6ParameterProblemEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 48), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceIcmpv6ParameterProblemEnabled.setStatus('current')
cadVrInterfacePdRiEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 49), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfacePdRiEnabled.setStatus('current')
cadVrInterfacePolicyRouteMap = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfacePolicyRouteMap.setStatus('current')
cadVrInterfaceMplsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 51), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceMplsEnabled.setStatus('obsolete')
cadVrInterfaceLdpEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 52), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceLdpEnabled.setStatus('obsolete')
cadVrInterfaceGratuitousArpEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 53), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceGratuitousArpEnabled.setStatus('current')
cadVrInterfaceIsSdv = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 3, 1, 54), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrInterfaceIsSdv.setStatus('current')
cadVrSecondaryIpAddrTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 4), )
if mibBuilder.loadTexts: cadVrSecondaryIpAddrTable.setStatus('current')
cadVrSecondaryIpAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 4, 1), ).setIndexNames((0, "CADANT-VIRTUAL-ROUTER-MIB", "cadVrInterfaceSubifIndex"), (0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadBgIndex"), (0, "CADANT-VIRTUAL-ROUTER-MIB", "cadVrInterfaceIpAddr"), (0, "CADANT-VIRTUAL-ROUTER-MIB", "cadVrSecondaryIpMask"))
if mibBuilder.loadTexts: cadVrSecondaryIpAddrEntry.setStatus('current')
cadVrSecondaryIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 4, 1, 1), InetAddressIPv4or6())
if mibBuilder.loadTexts: cadVrSecondaryIpMask.setStatus('current')
cadVrSecondaryIpAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrSecondaryIpAddrRowStatus.setStatus('current')
cadVrSecondaryIpAddrDHCPPolicyEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 4, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrSecondaryIpAddrDHCPPolicyEnabled.setStatus('deprecated')
cadVrSecondaryIpPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrSecondaryIpPrefixLength.setStatus('current')
cadVrSecondaryIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 4, 1, 6), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrSecondaryIpAddrType.setStatus('current')
cadVrSecondaryIpScopeType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 4, 1, 7), InetScopeType().clone('linkLocal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrSecondaryIpScopeType.setStatus('current')
cadVrSecondaryIpAddrDHCPGiaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 4, 1, 8), CadCpeDeviceTypes()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrSecondaryIpAddrDHCPGiaddr.setStatus('current')
cadVrStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5), )
if mibBuilder.loadTexts: cadVrStatusTable.setStatus('current')
cadVrStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1), ).setIndexNames((0, "CADANT-VIRTUAL-ROUTER-MIB", "cadVrStatusVrIndex"))
if mibBuilder.loadTexts: cadVrStatusEntry.setStatus('current')
cadVrStatusVrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 192)))
if mibBuilder.loadTexts: cadVrStatusVrIndex.setStatus('current')
cadVrStatusNumLocalRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 2), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumLocalRoutes.setStatus('current')
cadVrStatusNumNetmgmtRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 3), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumNetmgmtRoutes.setStatus('current')
cadVrStatusNumRipRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 4), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumRipRoutes.setStatus('current')
cadVrStatusNumIsisInternal1Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 5), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIsisInternal1Routes.setStatus('current')
cadVrStatusNumIsisInternal2Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 6), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIsisInternal2Routes.setStatus('current')
cadVrStatusNumIsisExternal1Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 7), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIsisExternal1Routes.setStatus('current')
cadVrStatusNumIsisExternal2Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 8), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIsisExternal2Routes.setStatus('current')
cadVrStatusNumBgpIntRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 9), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumBgpIntRoutes.setStatus('current')
cadVrStatusNumBgpExtRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 10), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumBgpExtRoutes.setStatus('current')
cadVrStatusNumBgpVpnRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 11), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumBgpVpnRoutes.setStatus('current')
cadVrStatusNumOspfIntraAreaRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 12), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumOspfIntraAreaRoutes.setStatus('current')
cadVrStatusNumOspfInterAreaRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 13), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumOspfInterAreaRoutes.setStatus('current')
cadVrStatusNumOspfInternal1Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 14), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumOspfInternal1Routes.setStatus('current')
cadVrStatusNumOspfInternal2Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 15), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumOspfInternal2Routes.setStatus('current')
cadVrStatusNumOspfExternal1Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 16), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumOspfExternal1Routes.setStatus('current')
cadVrStatusNumOspfExternal2Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 17), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumOspfExternal2Routes.setStatus('current')
cadVrStatusNumOspfNssaExternal1Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 18), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumOspfNssaExternal1Routes.setStatus('current')
cadVrStatusNumOspfNssaExternal2Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 19), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumOspfNssaExternal2Routes.setStatus('current')
cadVrStatusNumOtherRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 20), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumOtherRoutes.setStatus('current')
cadVrStatusNumIpv6LocalRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 21), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6LocalRoutes.setStatus('current')
cadVrStatusNumIpv6NetmgmtRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 22), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6NetmgmtRoutes.setStatus('current')
cadVrStatusNumIpv6IsisInternal1Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 23), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6IsisInternal1Routes.setStatus('current')
cadVrStatusNumIpv6IsisInternal2Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 24), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6IsisInternal2Routes.setStatus('current')
cadVrStatusNumIpv6IsisExternal1Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 25), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6IsisExternal1Routes.setStatus('current')
cadVrStatusNumIpv6IsisExternal2Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 26), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6IsisExternal2Routes.setStatus('current')
cadVrStatusNumIpv6OspfIntraAreaRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 27), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6OspfIntraAreaRoutes.setStatus('current')
cadVrStatusNumIpv6OspfInterAreaRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 28), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6OspfInterAreaRoutes.setStatus('current')
cadVrStatusNumIpv6OspfInternal1Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 29), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6OspfInternal1Routes.setStatus('current')
cadVrStatusNumIpv6OspfInternal2Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 30), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6OspfInternal2Routes.setStatus('current')
cadVrStatusNumIpv6OspfExternal1Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 31), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6OspfExternal1Routes.setStatus('current')
cadVrStatusNumIpv6OspfExternal2Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 32), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6OspfExternal2Routes.setStatus('current')
cadVrStatusNumIpv6OspfNssaExternal1Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 33), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6OspfNssaExternal1Routes.setStatus('current')
cadVrStatusNumIpv6OspfNssaExternal2Routes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 34), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6OspfNssaExternal2Routes.setStatus('current')
cadVrStatusNumIpv6PdRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 35), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6PdRoutes.setStatus('current')
cadVrStatusNumIpv6OtherRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 36), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6OtherRoutes.setStatus('current')
cadVrStatusNumIpv6BgpIntRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 37), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6BgpIntRoutes.setStatus('current')
cadVrStatusNumIpv6BgpExtRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 38), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6BgpExtRoutes.setStatus('current')
cadVrStatusNumIpv6BgpVpnRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 5, 1, 39), Gauge32()).setUnits('routes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrStatusNumIpv6BgpVpnRoutes.setStatus('current')
cadVrInterfaceStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 6), )
if mibBuilder.loadTexts: cadVrInterfaceStatusTable.setStatus('current')
cadVrInterfaceStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 6, 1), ).setIndexNames((0, "CADANT-VIRTUAL-ROUTER-MIB", "cadVrInterfaceStatusIfIndex"))
if mibBuilder.loadTexts: cadVrInterfaceStatusEntry.setStatus('current')
cadVrInterfaceStatusIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 6, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cadVrInterfaceStatusIfIndex.setStatus('current')
cadVrInterfaceStatusIcmpUnreachablesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 6, 1, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrInterfaceStatusIcmpUnreachablesDropped.setStatus('current')
cadVrInterfaceStatusIcmpv6UnreachablesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 6, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrInterfaceStatusIcmpv6UnreachablesDropped.setStatus('current')
cadVrGlobals = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 7))
cadVrGlobalIcmpUnreachablesEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 7, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadVrGlobalIcmpUnreachablesEnabled.setStatus('current')
cadVrGlobalIpForwarding = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forwarding", 1), ("notForwarding", 2))).clone('forwarding')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadVrGlobalIpForwarding.setStatus('current')
cadVrGlobalIpDefaultTTL = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 7, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadVrGlobalIpDefaultTTL.setStatus('current')
cadVrGlobalIpv6IpForwarding = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forwarding", 1), ("notForwarding", 2))).clone('forwarding')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadVrGlobalIpv6IpForwarding.setStatus('current')
cadVrGlobalIpv6IpDefaultHopLimit = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 7, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadVrGlobalIpv6IpDefaultHopLimit.setStatus('current')
cadVrGlobalIcmpv6UnreachablesEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 7, 6), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadVrGlobalIcmpv6UnreachablesEnabled.setStatus('current')
cadVrGlobalIcmpv6TooBigEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 7, 7), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadVrGlobalIcmpv6TooBigEnabled.setStatus('current')
cadVrGlobalIcmpv6ParameterProblemEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 7, 8), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadVrGlobalIcmpv6ParameterProblemEnabled.setStatus('current')
cadVrGlobalAllowAnyCableMac = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 7, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadVrGlobalAllowAnyCableMac.setStatus('current')
cadVrGlobalStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 8))
cadVrGlobalStatusIcmpUnreachablesDropped = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 8, 1), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrGlobalStatusIcmpUnreachablesDropped.setStatus('current')
cadVrGlobalStatusIcmpv6UnreachablesDropped = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 8, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrGlobalStatusIcmpv6UnreachablesDropped.setStatus('current')
cadVrAddressPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 9), )
if mibBuilder.loadTexts: cadVrAddressPrefixTable.setStatus('current')
cadVrAddressPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 9, 1), ).setIndexNames((0, "CADANT-VIRTUAL-ROUTER-MIB", "cadVrInterfaceSubifIndex"), (0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadBgIndex"), (0, "CADANT-VIRTUAL-ROUTER-MIB", "cadVrAddressPrefixType"), (0, "CADANT-VIRTUAL-ROUTER-MIB", "cadVrAddressPrefixPrefix"), (0, "CADANT-VIRTUAL-ROUTER-MIB", "cadVrAddressPrefixLength"))
if mibBuilder.loadTexts: cadVrAddressPrefixEntry.setStatus('current')
cadVrAddressPrefixType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 9, 1, 1), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrAddressPrefixType.setStatus('current')
cadVrAddressPrefixPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 9, 1, 2), InetAddressIPv4or6()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrAddressPrefixPrefix.setStatus('current')
cadVrAddressPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 9, 1, 3), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrAddressPrefixLength.setStatus('current')
cadVrAddressPrefixAdvertiseFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 9, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrAddressPrefixAdvertiseFlag.setStatus('current')
cadVrAddressPrefixOnLinkFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 9, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrAddressPrefixOnLinkFlag.setStatus('current')
cadVrAddressPrefixAutonomousFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 9, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrAddressPrefixAutonomousFlag.setStatus('current')
cadVrAddressPrefixAdvPreferredLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 9, 1, 7), Unsigned32().clone(2592000)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrAddressPrefixAdvPreferredLifetime.setStatus('current')
cadVrAddressPrefixAdvValidLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 9, 1, 8), Unsigned32().clone(2592000)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrAddressPrefixAdvValidLifetime.setStatus('current')
cadVrAddressPrefixAdvPreferredDate = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 9, 1, 9), DateAndTime().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrAddressPrefixAdvPreferredDate.setStatus('current')
cadVrAddressPrefixAdvValidDate = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 9, 1, 10), DateAndTime().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrAddressPrefixAdvValidDate.setStatus('current')
cadVrAddressPrefixRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 9, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrAddressPrefixRowStatus.setStatus('current')
cadVrRtLookupTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 10), )
if mibBuilder.loadTexts: cadVrRtLookupTable.setStatus('current')
cadVrRtLookupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 10, 1), ).setIndexNames((0, "CADANT-VIRTUAL-ROUTER-MIB", "cadVrRtLookupVrIndex"), (0, "CADANT-VIRTUAL-ROUTER-MIB", "cadVrRtLookupInetAddrType"), (0, "CADANT-VIRTUAL-ROUTER-MIB", "cadVrRtLookupInetAddr"), (0, "CADANT-VIRTUAL-ROUTER-MIB", "cadVrRtLookupPrefixLength"))
if mibBuilder.loadTexts: cadVrRtLookupEntry.setStatus('current')
cadVrRtLookupVrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 192)))
if mibBuilder.loadTexts: cadVrRtLookupVrIndex.setStatus('current')
cadVrRtLookupInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 10, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrRtLookupInetAddrType.setStatus('current')
cadVrRtLookupInetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 10, 1, 3), InetAddressIPv4or6().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrRtLookupInetAddr.setStatus('current')
cadVrRtLookupPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 10, 1, 4), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadVrRtLookupPrefixLength.setStatus('current')
cadVrRtLookupInetAddrResult = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 10, 1, 5), InetAddressIPv4or6().clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrRtLookupInetAddrResult.setStatus('current')
cadVrRtLookupPrefixLengthResult = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 3, 1, 10, 1, 6), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadVrRtLookupPrefixLengthResult.setStatus('current')
mibBuilder.exportSymbols("CADANT-VIRTUAL-ROUTER-MIB", cadVrInterfacePriority=cadVrInterfacePriority, cadVrStatusNumIsisExternal2Routes=cadVrStatusNumIsisExternal2Routes, cadVrRtLookupInetAddrResult=cadVrRtLookupInetAddrResult, cadVrAddressPrefixRowStatus=cadVrAddressPrefixRowStatus, CadSourceVerifyType=CadSourceVerifyType, cadVrInterfaceFARPEnabled=cadVrInterfaceFARPEnabled, cadVrInterfaceRestrictedFARPEnabled=cadVrInterfaceRestrictedFARPEnabled, cadVrStatusNumIpv6OtherRoutes=cadVrStatusNumIpv6OtherRoutes, cadVrGlobalStatusIcmpUnreachablesDropped=cadVrGlobalStatusIcmpUnreachablesDropped, cadVrInterfaceDirectedBcastEnabled=cadVrInterfaceDirectedBcastEnabled, cadVrInterfaceScmAccess=cadVrInterfaceScmAccess, cadVrStatusNumOspfInternal1Routes=cadVrStatusNumOspfInternal1Routes, cadVrStatusNumOspfInterAreaRoutes=cadVrStatusNumOspfInterAreaRoutes, cadVrInterfaceCmFilterUpDefault=cadVrInterfaceCmFilterUpDefault, cadVrNameEntry=cadVrNameEntry, cadVrRtLookupEntry=cadVrRtLookupEntry, cadVrStatusNumOtherRoutes=cadVrStatusNumOtherRoutes, cadVrRtLookupInetAddrType=cadVrRtLookupInetAddrType, cadVrAddressPrefixAdvertiseFlag=cadVrAddressPrefixAdvertiseFlag, cadVrRtLookupVrIndex=cadVrRtLookupVrIndex, cadVrInterfaceEntry=cadVrInterfaceEntry, cadVrInterfaceStbFilterUpDefault=cadVrInterfaceStbFilterUpDefault, cadVrStatusEntry=cadVrStatusEntry, cadVrAutoImportEnabled=cadVrAutoImportEnabled, cadVrInterfaceIsSdv=cadVrInterfaceIsSdv, cadVrEntry=cadVrEntry, cadVrStatusNumIpv6OspfExternal2Routes=cadVrStatusNumIpv6OspfExternal2Routes, cadVrStatusNumIpv6OspfNssaExternal2Routes=cadVrStatusNumIpv6OspfNssaExternal2Routes, cadVrStatusNumIpv6IsisExternal2Routes=cadVrStatusNumIpv6IsisExternal2Routes, cadVrStatusNumOspfNssaExternal2Routes=cadVrStatusNumOspfNssaExternal2Routes, cadVrGlobalStatusIcmpv6UnreachablesDropped=cadVrGlobalStatusIcmpv6UnreachablesDropped, cadVrStatusNumNetmgmtRoutes=cadVrStatusNumNetmgmtRoutes, cadVrICMPv6TimeExceededEnabled=cadVrICMPv6TimeExceededEnabled, cadVrInterfaceIcmpv6UnreachablesEnabled=cadVrInterfaceIcmpv6UnreachablesEnabled, cadVrInterfaceLdpEnabled=cadVrInterfaceLdpEnabled, cadVrRipEnabled=cadVrRipEnabled, cadVrInterfaceIpMask=cadVrInterfaceIpMask, cadVrAddressPrefixTable=cadVrAddressPrefixTable, PYSNMP_MODULE_ID=cadVirtualRouterMibModule, cadVrInterfaceVlanId=cadVrInterfaceVlanId, cadVrInterfaceGratuitousArpEnabled=cadVrInterfaceGratuitousArpEnabled, cadVrInterfaceIcmpv6TooBigEnabled=cadVrInterfaceIcmpv6TooBigEnabled, cadVrSecondaryIpMask=cadVrSecondaryIpMask, cadVrGlobalIcmpv6UnreachablesEnabled=cadVrGlobalIcmpv6UnreachablesEnabled, cadVrInterfacePdRiEnabled=cadVrInterfacePdRiEnabled, cadVrStatusNumIsisExternal1Routes=cadVrStatusNumIsisExternal1Routes, cadVrInterfaceDescription=cadVrInterfaceDescription, cadVrOspfEnabled=cadVrOspfEnabled, cadVrInterfaceMtaFilterUpDefault=cadVrInterfaceMtaFilterUpDefault, cadVrInterfaceIpScopeType=cadVrInterfaceIpScopeType, cadVrRtLookupInetAddr=cadVrRtLookupInetAddr, cadVrStatusTable=cadVrStatusTable, cadVrPhpEnabled=cadVrPhpEnabled, cadVrNameRowStatus=cadVrNameRowStatus, cadVrStatusNumIsisInternal2Routes=cadVrStatusNumIsisInternal2Routes, cadVrGlobalIpDefaultTTL=cadVrGlobalIpDefaultTTL, cadVrGlobalIpv6IpDefaultHopLimit=cadVrGlobalIpv6IpDefaultHopLimit, cadVrInterfaceIpv6PrefixLength=cadVrInterfaceIpv6PrefixLength, cadVrInterfaceMplsEnabled=cadVrInterfaceMplsEnabled, cadVrStatusNumOspfExternal2Routes=cadVrStatusNumOspfExternal2Routes, cadVrStatusNumIpv6OspfInterAreaRoutes=cadVrStatusNumIpv6OspfInterAreaRoutes, cadVrInterfaceVrIndex=cadVrInterfaceVrIndex, cadVrInterfaceStatusIcmpv6UnreachablesDropped=cadVrInterfaceStatusIcmpv6UnreachablesDropped, cadVrSecondaryIpAddrRowStatus=cadVrSecondaryIpAddrRowStatus, cadVrAddressPrefixAdvPreferredDate=cadVrAddressPrefixAdvPreferredDate, cadVrRtLookupPrefixLengthResult=cadVrRtLookupPrefixLengthResult, cadVrInterfaceMtaFilterDownDefault=cadVrInterfaceMtaFilterDownDefault, cadVrStatusNumLocalRoutes=cadVrStatusNumLocalRoutes, cadVrStatusNumIpv6BgpExtRoutes=cadVrStatusNumIpv6BgpExtRoutes, cadVrAddressPrefixAdvPreferredLifetime=cadVrAddressPrefixAdvPreferredLifetime, cadVrGlobalIcmpv6ParameterProblemEnabled=cadVrGlobalIcmpv6ParameterProblemEnabled, cadVrAddressPrefixLength=cadVrAddressPrefixLength, cadVrInterfaceCmFilterDownDefault=cadVrInterfaceCmFilterDownDefault, cadVrInterfaceStatusTable=cadVrInterfaceStatusTable, cadVrRtLookupTable=cadVrRtLookupTable, cadVrAddressPrefixAdvValidLifetime=cadVrAddressPrefixAdvValidLifetime, cadVrStatusNumIpv6OspfInternal1Routes=cadVrStatusNumIpv6OspfInternal1Routes, cadVrSecondaryIpAddrTable=cadVrSecondaryIpAddrTable, cadVrInterfaceIfIndex=cadVrInterfaceIfIndex, cadVrStatusNumIpv6NetmgmtRoutes=cadVrStatusNumIpv6NetmgmtRoutes, cadVrInterfaceIpPrefixLength=cadVrInterfaceIpPrefixLength, cadVrGlobalIcmpv6TooBigEnabled=cadVrGlobalIcmpv6TooBigEnabled, cadVrInterfaceRipEnabled=cadVrInterfaceRipEnabled, cadVrInterfaceRipPassive=cadVrInterfaceRipPassive, cadVrStatusNumIsisInternal1Routes=cadVrStatusNumIsisInternal1Routes, cadVrStatusNumIpv6IsisInternal2Routes=cadVrStatusNumIpv6IsisInternal2Routes, cadVrInterfaceEncapType=cadVrInterfaceEncapType, cadVrSecondaryIpAddrDHCPPolicyEnabled=cadVrSecondaryIpAddrDHCPPolicyEnabled, cadVrInterfaceSubifIndex=cadVrInterfaceSubifIndex, cadVrInterfaceTable=cadVrInterfaceTable, cadVrAddressPrefixAutonomousFlag=cadVrAddressPrefixAutonomousFlag, cadVrNullInterface=cadVrNullInterface, cadVrStatusNumIpv6PdRoutes=cadVrStatusNumIpv6PdRoutes, cadVrSecondaryIpAddrEntry=cadVrSecondaryIpAddrEntry, cadVrStatusNumOspfIntraAreaRoutes=cadVrStatusNumOspfIntraAreaRoutes, cadVrInterfaceStatusIcmpUnreachablesDropped=cadVrInterfaceStatusIcmpUnreachablesDropped, cadVrAddressPrefixPrefix=cadVrAddressPrefixPrefix, cadVrInterfacePsFilterDownDefault=cadVrInterfacePsFilterDownDefault, cadVrInterfacePsFilterUpDefault=cadVrInterfacePsFilterUpDefault, cadVrInterfaceIpv6Forwarding=cadVrInterfaceIpv6Forwarding, cadVrStatusNumIpv6LocalRoutes=cadVrStatusNumIpv6LocalRoutes, cadVrIPv6ReflectionEnabled=cadVrIPv6ReflectionEnabled, cadVrStatusNumIpv6OspfExternal1Routes=cadVrStatusNumIpv6OspfExternal1Routes, cadVrGlobalIcmpUnreachablesEnabled=cadVrGlobalIcmpUnreachablesEnabled, cadVrInterfaceIpv6Addr=cadVrInterfaceIpv6Addr, cadVrRtLookupPrefixLength=cadVrRtLookupPrefixLength, cadVrInterfaceDADAttempts=cadVrInterfaceDADAttempts, cadVrInterfaceIGMPEnabled=cadVrInterfaceIGMPEnabled, cadVrScmAccessDirectedBroadcastEnabled=cadVrScmAccessDirectedBroadcastEnabled, cadVrTable=cadVrTable, cadVirtualRouter=cadVirtualRouter, cadVrStatusNumIpv6BgpVpnRoutes=cadVrStatusNumIpv6BgpVpnRoutes, cadVrIndex=cadVrIndex, cadVrInterfaceSubFilterUpDefault=cadVrInterfaceSubFilterUpDefault, cadVrStatusNumBgpVpnRoutes=cadVrStatusNumBgpVpnRoutes, cadVrInterfaceIpAddr=cadVrInterfaceIpAddr, cadVrAddressPrefixAdvValidDate=cadVrAddressPrefixAdvValidDate, cadVrInterfaceStatusEntry=cadVrInterfaceStatusEntry, cadVrInterfaceAdminStat=cadVrInterfaceAdminStat, cadVrInterfaceIcmpv6ParameterProblemEnabled=cadVrInterfaceIcmpv6ParameterProblemEnabled, cadVrStatusNumBgpIntRoutes=cadVrStatusNumBgpIntRoutes, cadVrStatusNumOspfNssaExternal1Routes=cadVrStatusNumOspfNssaExternal1Routes, cadVrName=cadVrName, cadVrInterfaceStbFilterDownDefault=cadVrInterfaceStbFilterDownDefault, cadVrSecondaryIpPrefixLength=cadVrSecondaryIpPrefixLength, cadVrGlobalAllowAnyCableMac=cadVrGlobalAllowAnyCableMac, cadVrInterfaceDHCPPolicyEnabled=cadVrInterfaceDHCPPolicyEnabled, cadVrSecondaryIpScopeType=cadVrSecondaryIpScopeType, cadVrStatusNumIpv6IsisExternal1Routes=cadVrStatusNumIpv6IsisExternal1Routes, cadVrICMPTimeExceededEnabled=cadVrICMPTimeExceededEnabled, cadVrStatusNumIpv6IsisInternal1Routes=cadVrStatusNumIpv6IsisInternal1Routes, cadVrInterfaceIpAddrType=cadVrInterfaceIpAddrType, cadVrInterfaceIcmpUnreachablesEnabled=cadVrInterfaceIcmpUnreachablesEnabled, cadVrInterfaceSourceVerify=cadVrInterfaceSourceVerify, cadVrAddressPrefixEntry=cadVrAddressPrefixEntry, cadVrGlobalIpForwarding=cadVrGlobalIpForwarding, cadVrInterfaceSubFilterDownDefault=cadVrInterfaceSubFilterDownDefault, cadVrStatusNumBgpExtRoutes=cadVrStatusNumBgpExtRoutes, cadVrInterfaceIsLoopback=cadVrInterfaceIsLoopback, cadVrSecondaryIpAddrDHCPGiaddr=cadVrSecondaryIpAddrDHCPGiaddr, cadVrInterfaceRowStatus=cadVrInterfaceRowStatus, cadVrOspfGracefulRestartEnabled=cadVrOspfGracefulRestartEnabled, cadVrStatusVrIndex=cadVrStatusVrIndex, cadVrRowStatus=cadVrRowStatus, cadVrStatusNumOspfExternal1Routes=cadVrStatusNumOspfExternal1Routes, cadVrGlobalIpv6IpForwarding=cadVrGlobalIpv6IpForwarding, cadVrNameTable=cadVrNameTable, cadVrNullInterfacev6=cadVrNullInterfacev6, cadVrNameVrIndex=cadVrNameVrIndex, cadVirtualRouterMibModule=cadVirtualRouterMibModule, cadVrAddressPrefixOnLinkFlag=cadVrAddressPrefixOnLinkFlag, cadVrStatusNumIpv6OspfNssaExternal1Routes=cadVrStatusNumIpv6OspfNssaExternal1Routes, cadVrScmAccessEnabled=cadVrScmAccessEnabled, cadVrStatusNumIpv6OspfInternal2Routes=cadVrStatusNumIpv6OspfInternal2Routes, cadVrSecondaryIpAddrType=cadVrSecondaryIpAddrType, cadVrInterfaceDHCPEnabled=cadVrInterfaceDHCPEnabled, cadVrAddressPrefixType=cadVrAddressPrefixType, cadVrInterfaceStatusIfIndex=cadVrInterfaceStatusIfIndex, cadVrStatusNumIpv6BgpIntRoutes=cadVrStatusNumIpv6BgpIntRoutes, cadVrInterfacePolicyRouteMap=cadVrInterfacePolicyRouteMap, cadVrGlobalStatus=cadVrGlobalStatus, cadVrStatusNumIpv6OspfIntraAreaRoutes=cadVrStatusNumIpv6OspfIntraAreaRoutes, cadVrInterfaceIRDPEnabled=cadVrInterfaceIRDPEnabled, cadVrGlobals=cadVrGlobals, cadVrStatusNumRipRoutes=cadVrStatusNumRipRoutes, cadVrStatusNumOspfInternal2Routes=cadVrStatusNumOspfInternal2Routes)
