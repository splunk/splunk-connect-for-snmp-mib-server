#
# PySNMP MIB module CISCO-DLC-SWITCH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DLC-SWITCH-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:37:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InterfaceIndexOrZero, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "ifIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter64, Integer32, TimeTicks, NotificationType, Gauge32, ModuleIdentity, ObjectIdentity, iso, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Integer32", "TimeTicks", "NotificationType", "Gauge32", "ModuleIdentity", "ObjectIdentity", "iso", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier", "Bits", "Counter32")
MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "TextualConvention")
ciscoDlcSwitchMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 76))
if mibBuilder.loadTexts: ciscoDlcSwitchMIB.setLastUpdated('9702190000Z')
if mibBuilder.loadTexts: ciscoDlcSwitchMIB.setOrganization('Cisco Systems, Inc.')
ciscoDlcSwitchMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 76, 1))
frasBnnSdlc = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 1))
frasBnnLlc = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 2))
frasBanSdlc = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 3))
frasBanLlc = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 4))
class SAP(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 1)
    fixedLength = 1

class SdlcAddress(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 1)
    fixedLength = 1

frasBnnSdlcConTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 1, 1), )
if mibBuilder.loadTexts: frasBnnSdlcConTable.setStatus('current')
frasBnnSdlcConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-DLC-SWITCH-MIB", "bnnSdlcConAddress"))
if mibBuilder.loadTexts: frasBnnSdlcConEntry.setStatus('current')
bnnSdlcConAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 1, 1, 1, 1), SdlcAddress())
if mibBuilder.loadTexts: bnnSdlcConAddress.setStatus('current')
bnnSdlcConState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("reset", 1), ("testSent", 2), ("xidexchg", 3), ("connrqsent", 4), ("sigstnwait", 5), ("connrspwait", 6), ("connrspsent", 7), ("contacted", 8), ("discwait", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnnSdlcConState.setStatus('current')
bnnSdlcConDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1022))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnnSdlcConDlci.setStatus('current')
bnnSdlcConFRInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 1, 1, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnnSdlcConFRInterface.setStatus('current')
bnnSdlcConLocalSap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 1, 1, 1, 5), SAP()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnnSdlcConLocalSap.setStatus('current')
bnnSdlcConRemoteSap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 1, 1, 1, 6), SAP()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnnSdlcConRemoteSap.setStatus('current')
frasBnnLlcConTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 2, 1), )
if mibBuilder.loadTexts: frasBnnLlcConTable.setStatus('current')
frasBnnLlcConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-DLC-SWITCH-MIB", "bnnLlcConDeviceMacAddress"), (0, "CISCO-DLC-SWITCH-MIB", "bnnLlcConLanLocalSap"), (0, "CISCO-DLC-SWITCH-MIB", "bnnLlcConLanRemoteSap"))
if mibBuilder.loadTexts: frasBnnLlcConEntry.setStatus('current')
bnnLlcConDeviceMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 2, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: bnnLlcConDeviceMacAddress.setStatus('current')
bnnLlcConLanLocalSap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 2, 1, 1, 2), SAP())
if mibBuilder.loadTexts: bnnLlcConLanLocalSap.setStatus('current')
bnnLlcConLanRemoteSap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 2, 1, 1, 3), SAP())
if mibBuilder.loadTexts: bnnLlcConLanRemoteSap.setStatus('current')
bnnLlcConLanInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 2, 1, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnnLlcConLanInterface.setStatus('current')
bnnLlcConDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1022))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnnLlcConDlci.setStatus('current')
bnnLlcConState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("reset", 1), ("testSent", 2), ("xidexchg", 3), ("connrqsent", 4), ("sigstnwait", 5), ("connrspwait", 6), ("connrspsent", 7), ("contacted", 8), ("discwait", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnnLlcConState.setStatus('current')
bnnLlcConLocalMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 2, 1, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnnLlcConLocalMacAddress.setStatus('current')
bnnLlcConFrLocalSap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 2, 1, 1, 8), SAP()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnnLlcConFrLocalSap.setStatus('current')
bnnLlcConFrRemoteSap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 2, 1, 1, 9), SAP()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnnLlcConFrRemoteSap.setStatus('current')
frasBanSdlcConTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 3, 1), )
if mibBuilder.loadTexts: frasBanSdlcConTable.setStatus('current')
frasBanSdlcConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-DLC-SWITCH-MIB", "banSdlcConAddress"), (0, "CISCO-DLC-SWITCH-MIB", "banSdlcConBanDlciMac"))
if mibBuilder.loadTexts: frasBanSdlcConEntry.setStatus('current')
banSdlcConLocalInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 3, 1, 1, 1), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: banSdlcConLocalInterface.setStatus('current')
banSdlcConAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 3, 1, 1, 2), SdlcAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: banSdlcConAddress.setStatus('current')
banSdlcConBanDlciMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 3, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: banSdlcConBanDlciMac.setStatus('current')
banSdlcConDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1022))).setMaxAccess("readonly")
if mibBuilder.loadTexts: banSdlcConDlci.setStatus('current')
banSdlcConState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("reset", 1), ("testSent", 2), ("xidexchg", 3), ("connrqsent", 4), ("sigstnwait", 5), ("connrspwait", 6), ("connrspsent", 7), ("contacted", 8), ("discwait", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: banSdlcConState.setStatus('current')
banSdlcConVmac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 3, 1, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: banSdlcConVmac.setStatus('current')
banSdlcConBniAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 3, 1, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: banSdlcConBniAddress.setStatus('current')
banSdlcConFrLocalSap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 3, 1, 1, 8), SAP()).setMaxAccess("readonly")
if mibBuilder.loadTexts: banSdlcConFrLocalSap.setStatus('current')
banSdlcConFrRemoteSap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 3, 1, 1, 9), SAP()).setMaxAccess("readonly")
if mibBuilder.loadTexts: banSdlcConFrRemoteSap.setStatus('current')
frasBanLlcConTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 4, 1), )
if mibBuilder.loadTexts: frasBanLlcConTable.setStatus('current')
frasBanLlcConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-DLC-SWITCH-MIB", "banLlcEndstnLocalMac"), (0, "CISCO-DLC-SWITCH-MIB", "banLlcConLocalSap"), (0, "CISCO-DLC-SWITCH-MIB", "banLlcConRemoteSap"), (0, "CISCO-DLC-SWITCH-MIB", "banLlcBanDlciMac"))
if mibBuilder.loadTexts: frasBanLlcConEntry.setStatus('current')
banLlcEndstnLocalMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 4, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: banLlcEndstnLocalMac.setStatus('current')
banLlcBanDlciMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 4, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: banLlcBanDlciMac.setStatus('current')
banLlcConLocalSap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 4, 1, 1, 3), SAP()).setMaxAccess("readonly")
if mibBuilder.loadTexts: banLlcConLocalSap.setStatus('current')
banLlcConRemoteSap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 4, 1, 1, 4), SAP()).setMaxAccess("readonly")
if mibBuilder.loadTexts: banLlcConRemoteSap.setStatus('current')
banLlcConDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1022))).setMaxAccess("readonly")
if mibBuilder.loadTexts: banLlcConDlci.setStatus('current')
banLlcConState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("reset", 1), ("testSent", 2), ("xidexchg", 3), ("connrqsent", 4), ("sigstnwait", 5), ("connrspwait", 6), ("connrspsent", 7), ("contacted", 8), ("discwait", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: banLlcConState.setStatus('current')
banLlcConFrInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 4, 1, 1, 7), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: banLlcConFrInterface.setStatus('current')
banLlcBniAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 4, 1, 1, 8), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: banLlcBniAddress.setStatus('current')
banLlcConFrLocalSap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 4, 1, 1, 9), SAP()).setMaxAccess("readonly")
if mibBuilder.loadTexts: banLlcConFrLocalSap.setStatus('current')
banLlcConFrRemoteSap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 76, 1, 4, 1, 1, 10), SAP()).setMaxAccess("readonly")
if mibBuilder.loadTexts: banLlcConFrRemoteSap.setStatus('current')
ciscoDlcSwitchConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 76, 2))
ciscoDlcSwitchCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 76, 2, 1))
ciscoDlcSwitchGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 76, 2, 2))
ciscoDlcSwitchCoreCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 76, 2, 1, 1)).setObjects(("CISCO-DLC-SWITCH-MIB", "frasBnnSdlcGroup"), ("CISCO-DLC-SWITCH-MIB", "frasBnnLlcGroup"), ("CISCO-DLC-SWITCH-MIB", "frasBanSdlcGroup"), ("CISCO-DLC-SWITCH-MIB", "frasBanLlcGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlcSwitchCoreCompliance = ciscoDlcSwitchCoreCompliance.setStatus('current')
frasBnnSdlcGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 76, 2, 2, 1)).setObjects(("CISCO-DLC-SWITCH-MIB", "bnnSdlcConState"), ("CISCO-DLC-SWITCH-MIB", "bnnSdlcConDlci"), ("CISCO-DLC-SWITCH-MIB", "bnnSdlcConFRInterface"), ("CISCO-DLC-SWITCH-MIB", "bnnSdlcConLocalSap"), ("CISCO-DLC-SWITCH-MIB", "bnnSdlcConRemoteSap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frasBnnSdlcGroup = frasBnnSdlcGroup.setStatus('current')
frasBnnLlcGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 76, 2, 2, 2)).setObjects(("CISCO-DLC-SWITCH-MIB", "bnnLlcConLanInterface"), ("CISCO-DLC-SWITCH-MIB", "bnnLlcConDlci"), ("CISCO-DLC-SWITCH-MIB", "bnnLlcConState"), ("CISCO-DLC-SWITCH-MIB", "bnnLlcConLocalMacAddress"), ("CISCO-DLC-SWITCH-MIB", "bnnLlcConFrLocalSap"), ("CISCO-DLC-SWITCH-MIB", "bnnLlcConFrRemoteSap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frasBnnLlcGroup = frasBnnLlcGroup.setStatus('current')
frasBanSdlcGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 76, 2, 2, 3)).setObjects(("CISCO-DLC-SWITCH-MIB", "banSdlcConLocalInterface"), ("CISCO-DLC-SWITCH-MIB", "banSdlcConAddress"), ("CISCO-DLC-SWITCH-MIB", "banSdlcConBanDlciMac"), ("CISCO-DLC-SWITCH-MIB", "banSdlcConDlci"), ("CISCO-DLC-SWITCH-MIB", "banSdlcConState"), ("CISCO-DLC-SWITCH-MIB", "banSdlcConVmac"), ("CISCO-DLC-SWITCH-MIB", "banSdlcConBniAddress"), ("CISCO-DLC-SWITCH-MIB", "banSdlcConFrLocalSap"), ("CISCO-DLC-SWITCH-MIB", "banSdlcConFrRemoteSap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frasBanSdlcGroup = frasBanSdlcGroup.setStatus('current')
frasBanLlcGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 76, 2, 2, 4)).setObjects(("CISCO-DLC-SWITCH-MIB", "banLlcEndstnLocalMac"), ("CISCO-DLC-SWITCH-MIB", "banLlcBanDlciMac"), ("CISCO-DLC-SWITCH-MIB", "banLlcConDlci"), ("CISCO-DLC-SWITCH-MIB", "banLlcConLocalSap"), ("CISCO-DLC-SWITCH-MIB", "banLlcConRemoteSap"), ("CISCO-DLC-SWITCH-MIB", "banLlcConState"), ("CISCO-DLC-SWITCH-MIB", "banLlcConFrInterface"), ("CISCO-DLC-SWITCH-MIB", "banLlcBniAddress"), ("CISCO-DLC-SWITCH-MIB", "banLlcConFrLocalSap"), ("CISCO-DLC-SWITCH-MIB", "banLlcConFrRemoteSap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frasBanLlcGroup = frasBanLlcGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-DLC-SWITCH-MIB", bnnSdlcConLocalSap=bnnSdlcConLocalSap, frasBnnLlcConEntry=frasBnnLlcConEntry, bnnLlcConDeviceMacAddress=bnnLlcConDeviceMacAddress, banLlcConRemoteSap=banLlcConRemoteSap, bnnLlcConLocalMacAddress=bnnLlcConLocalMacAddress, bnnSdlcConDlci=bnnSdlcConDlci, bnnLlcConFrRemoteSap=bnnLlcConFrRemoteSap, frasBanSdlcConEntry=frasBanSdlcConEntry, frasBanLlcGroup=frasBanLlcGroup, ciscoDlcSwitchCoreCompliance=ciscoDlcSwitchCoreCompliance, bnnSdlcConAddress=bnnSdlcConAddress, frasBanSdlc=frasBanSdlc, banLlcBanDlciMac=banLlcBanDlciMac, PYSNMP_MODULE_ID=ciscoDlcSwitchMIB, frasBanLlcConEntry=frasBanLlcConEntry, frasBanLlc=frasBanLlc, bnnLlcConLanLocalSap=bnnLlcConLanLocalSap, banLlcBniAddress=banLlcBniAddress, ciscoDlcSwitchGroups=ciscoDlcSwitchGroups, frasBnnSdlcGroup=frasBnnSdlcGroup, banLlcConDlci=banLlcConDlci, ciscoDlcSwitchConformance=ciscoDlcSwitchConformance, banLlcConFrInterface=banLlcConFrInterface, banLlcConFrLocalSap=banLlcConFrLocalSap, bnnSdlcConState=bnnSdlcConState, banSdlcConBanDlciMac=banSdlcConBanDlciMac, bnnLlcConLanRemoteSap=bnnLlcConLanRemoteSap, banLlcConFrRemoteSap=banLlcConFrRemoteSap, banSdlcConFrRemoteSap=banSdlcConFrRemoteSap, bnnSdlcConFRInterface=bnnSdlcConFRInterface, banSdlcConBniAddress=banSdlcConBniAddress, frasBnnSdlcConTable=frasBnnSdlcConTable, banLlcConLocalSap=banLlcConLocalSap, ciscoDlcSwitchMIBObjects=ciscoDlcSwitchMIBObjects, frasBnnLlc=frasBnnLlc, banLlcConState=banLlcConState, frasBanSdlcGroup=frasBanSdlcGroup, frasBnnSdlc=frasBnnSdlc, ciscoDlcSwitchCompliances=ciscoDlcSwitchCompliances, banSdlcConFrLocalSap=banSdlcConFrLocalSap, banSdlcConDlci=banSdlcConDlci, banSdlcConVmac=banSdlcConVmac, bnnLlcConLanInterface=bnnLlcConLanInterface, frasBanSdlcConTable=frasBanSdlcConTable, bnnLlcConDlci=bnnLlcConDlci, frasBnnLlcConTable=frasBnnLlcConTable, bnnLlcConFrLocalSap=bnnLlcConFrLocalSap, banSdlcConAddress=banSdlcConAddress, banSdlcConLocalInterface=banSdlcConLocalInterface, frasBanLlcConTable=frasBanLlcConTable, banSdlcConState=banSdlcConState, frasBnnLlcGroup=frasBnnLlcGroup, banLlcEndstnLocalMac=banLlcEndstnLocalMac, bnnSdlcConRemoteSap=bnnSdlcConRemoteSap, bnnLlcConState=bnnLlcConState, SdlcAddress=SdlcAddress, ciscoDlcSwitchMIB=ciscoDlcSwitchMIB, frasBnnSdlcConEntry=frasBnnSdlcConEntry, SAP=SAP)
