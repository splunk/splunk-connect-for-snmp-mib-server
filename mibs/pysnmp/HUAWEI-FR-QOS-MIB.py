#
# PySNMP MIB module HUAWEI-FR-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-FR-QOS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:32:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ObjectIdentity, Unsigned32, Counter64, IpAddress, ModuleIdentity, Counter32, iso, Bits, TimeTicks, MibIdentifier, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ObjectIdentity", "Unsigned32", "Counter64", "IpAddress", "ModuleIdentity", "Counter32", "iso", "Bits", "TimeTicks", "MibIdentifier", "Integer32", "NotificationType")
TextualConvention, RowStatus, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "MacAddress")
class DirectionType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("inbound", 1), ("outbound", 2))

hwQoS = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32))
hwFrQoSMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3))
if mibBuilder.loadTexts: hwFrQoSMib.setLastUpdated('200407120000Z')
if mibBuilder.loadTexts: hwFrQoSMib.setOrganization('Huawei Technologies co.,Ltd.')
hwFrQoSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1))
hwFrClassObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1))
hwFrClassIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrClassIndexNext.setStatus('current')
hwFrClassCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 2), )
if mibBuilder.loadTexts: hwFrClassCfgInfoTable.setStatus('current')
hwFrClassCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 2, 1), ).setIndexNames((0, "HUAWEI-FR-QOS-MIB", "hwFrClassIndex"))
if mibBuilder.loadTexts: hwFrClassCfgInfoEntry.setStatus('current')
hwFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrClassIndex.setStatus('current')
hwFrClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFrClassName.setStatus('current')
hwFrClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFrClassRowStatus.setStatus('current')
hwCirAllowCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 3), )
if mibBuilder.loadTexts: hwCirAllowCfgInfoTable.setStatus('current')
hwCirAllowCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 3, 1), ).setIndexNames((0, "HUAWEI-FR-QOS-MIB", "hwCirAllowFrClassIndex"), (0, "HUAWEI-FR-QOS-MIB", "hwCirAllowDirection"))
if mibBuilder.loadTexts: hwCirAllowCfgInfoEntry.setStatus('current')
hwCirAllowFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCirAllowFrClassIndex.setStatus('current')
hwCirAllowDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCirAllowDirection.setStatus('current')
hwCirAllowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 45000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCirAllowValue.setStatus('current')
hwCirAllowRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCirAllowRowStatus.setStatus('current')
hwCirCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 4), )
if mibBuilder.loadTexts: hwCirCfgInfoTable.setStatus('current')
hwCirCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 4, 1), ).setIndexNames((0, "HUAWEI-FR-QOS-MIB", "hwCirFrClassIndex"))
if mibBuilder.loadTexts: hwCirCfgInfoEntry.setStatus('current')
hwCirFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCirFrClassIndex.setStatus('current')
hwCirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 45000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCirValue.setStatus('current')
hwCirRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCirRowStatus.setStatus('current')
hwIfApplyFrClassTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 5), )
if mibBuilder.loadTexts: hwIfApplyFrClassTable.setStatus('current')
hwIfApplyFrClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 5, 1), ).setIndexNames((0, "HUAWEI-FR-QOS-MIB", "hwIfApplyFrClassIfIndex"))
if mibBuilder.loadTexts: hwIfApplyFrClassEntry.setStatus('current')
hwIfApplyFrClassIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfApplyFrClassIfIndex.setStatus('current')
hwIfApplyFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 5, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIfApplyFrClassIndex.setStatus('current')
hwIfApplyFrClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIfApplyFrClassRowStatus.setStatus('current')
hwPvcApplyFrClassTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 6), )
if mibBuilder.loadTexts: hwPvcApplyFrClassTable.setStatus('current')
hwPvcApplyFrClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 6, 1), ).setIndexNames((0, "HUAWEI-FR-QOS-MIB", "hwPvcApplyFrClassIfIndex"), (0, "HUAWEI-FR-QOS-MIB", "hwPvcApplyFrClassDlciNum"))
if mibBuilder.loadTexts: hwPvcApplyFrClassEntry.setStatus('current')
hwPvcApplyFrClassIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPvcApplyFrClassIfIndex.setStatus('current')
hwPvcApplyFrClassDlciNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPvcApplyFrClassDlciNum.setStatus('current')
hwPvcApplyFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 6, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPvcApplyFrClassIndex.setStatus('current')
hwPvcApplyFrClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPvcApplyFrClassRowStatus.setStatus('current')
hwFrPvcBandwidthTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 7), )
if mibBuilder.loadTexts: hwFrPvcBandwidthTable.setStatus('current')
hwFrPvcBandwidthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 7, 1), ).setIndexNames((0, "HUAWEI-FR-QOS-MIB", "hwPvcApplyFrClassIfIndex"), (0, "HUAWEI-FR-QOS-MIB", "hwPvcApplyFrClassDlciNum"))
if mibBuilder.loadTexts: hwFrPvcBandwidthEntry.setStatus('current')
hwFrPvcBandwidthMaxReservedBW = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcBandwidthMaxReservedBW.setStatus('current')
hwFrPvcBandwidthAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcBandwidthAvailable.setStatus('current')
hwRTPQoSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2))
hwRTPFrClassApplyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 1), )
if mibBuilder.loadTexts: hwRTPFrClassApplyTable.setStatus('current')
hwRTPFrClassApplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 1, 1), ).setIndexNames((0, "HUAWEI-FR-QOS-MIB", "hwRTPFrClassApplyFrClassIndex"))
if mibBuilder.loadTexts: hwRTPFrClassApplyEntry.setStatus('current')
hwRTPFrClassApplyFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRTPFrClassApplyFrClassIndex.setStatus('current')
hwRTPFrClassApplyStartPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2000, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRTPFrClassApplyStartPort.setStatus('current')
hwRTPFrClassApplyEndPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2000, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRTPFrClassApplyEndPort.setStatus('current')
hwRTPFrClassApplyBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRTPFrClassApplyBandWidth.setStatus('current')
hwRTPFrClassApplyCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1500, 2000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRTPFrClassApplyCbs.setStatus('current')
hwRTPFrClassApplyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRTPFrClassApplyRowStatus.setStatus('current')
hwRTPFrPvcQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 2), )
if mibBuilder.loadTexts: hwRTPFrPvcQueueRunInfoTable.setStatus('current')
hwRTPFrPvcQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 2, 1), ).setIndexNames((0, "HUAWEI-FR-QOS-MIB", "hwPvcApplyFrClassIfIndex"), (0, "HUAWEI-FR-QOS-MIB", "hwPvcApplyFrClassDlciNum"))
if mibBuilder.loadTexts: hwRTPFrPvcQueueRunInfoEntry.setStatus('current')
hwRTPFrPvcQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRTPFrPvcQueueSize.setStatus('current')
hwRTPFrPvcQueueMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRTPFrPvcQueueMaxSize.setStatus('current')
hwRTPFrPvcQueueOutputs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRTPFrPvcQueueOutputs.setStatus('current')
hwRTPFrPvcQueueDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRTPFrPvcQueueDiscards.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-FR-QOS-MIB", hwRTPFrPvcQueueMaxSize=hwRTPFrPvcQueueMaxSize, hwCirAllowCfgInfoEntry=hwCirAllowCfgInfoEntry, hwRTPFrPvcQueueSize=hwRTPFrPvcQueueSize, hwFrClassCfgInfoTable=hwFrClassCfgInfoTable, hwRTPFrPvcQueueOutputs=hwRTPFrPvcQueueOutputs, hwRTPFrClassApplyRowStatus=hwRTPFrClassApplyRowStatus, hwFrPvcBandwidthEntry=hwFrPvcBandwidthEntry, hwFrClassObjects=hwFrClassObjects, hwRTPFrClassApplyBandWidth=hwRTPFrClassApplyBandWidth, hwRTPFrClassApplyStartPort=hwRTPFrClassApplyStartPort, hwCirAllowDirection=hwCirAllowDirection, hwCirAllowFrClassIndex=hwCirAllowFrClassIndex, hwRTPFrPvcQueueRunInfoEntry=hwRTPFrPvcQueueRunInfoEntry, hwIfApplyFrClassEntry=hwIfApplyFrClassEntry, hwFrQoSObjects=hwFrQoSObjects, hwIfApplyFrClassRowStatus=hwIfApplyFrClassRowStatus, hwPvcApplyFrClassIfIndex=hwPvcApplyFrClassIfIndex, hwCirValue=hwCirValue, hwPvcApplyFrClassDlciNum=hwPvcApplyFrClassDlciNum, hwRTPFrPvcQueueDiscards=hwRTPFrPvcQueueDiscards, hwCirFrClassIndex=hwCirFrClassIndex, hwFrPvcBandwidthMaxReservedBW=hwFrPvcBandwidthMaxReservedBW, hwIfApplyFrClassTable=hwIfApplyFrClassTable, hwFrQoSMib=hwFrQoSMib, hwPvcApplyFrClassTable=hwPvcApplyFrClassTable, hwFrClassIndexNext=hwFrClassIndexNext, hwPvcApplyFrClassRowStatus=hwPvcApplyFrClassRowStatus, hwRTPFrClassApplyFrClassIndex=hwRTPFrClassApplyFrClassIndex, DirectionType=DirectionType, hwCirAllowRowStatus=hwCirAllowRowStatus, hwPvcApplyFrClassIndex=hwPvcApplyFrClassIndex, hwRTPFrClassApplyEndPort=hwRTPFrClassApplyEndPort, hwRTPFrPvcQueueRunInfoTable=hwRTPFrPvcQueueRunInfoTable, hwFrPvcBandwidthTable=hwFrPvcBandwidthTable, hwIfApplyFrClassIndex=hwIfApplyFrClassIndex, hwFrClassIndex=hwFrClassIndex, PYSNMP_MODULE_ID=hwFrQoSMib, hwIfApplyFrClassIfIndex=hwIfApplyFrClassIfIndex, hwRTPFrClassApplyTable=hwRTPFrClassApplyTable, hwCirRowStatus=hwCirRowStatus, hwQoS=hwQoS, hwFrClassName=hwFrClassName, hwCirAllowValue=hwCirAllowValue, hwCirCfgInfoEntry=hwCirCfgInfoEntry, hwCirCfgInfoTable=hwCirCfgInfoTable, hwFrClassCfgInfoEntry=hwFrClassCfgInfoEntry, hwRTPFrClassApplyEntry=hwRTPFrClassApplyEntry, hwRTPQoSObjects=hwRTPQoSObjects, hwRTPFrClassApplyCbs=hwRTPFrClassApplyCbs, hwFrClassRowStatus=hwFrClassRowStatus, hwPvcApplyFrClassEntry=hwPvcApplyFrClassEntry, hwFrPvcBandwidthAvailable=hwFrPvcBandwidthAvailable, hwCirAllowCfgInfoTable=hwCirAllowCfgInfoTable)
