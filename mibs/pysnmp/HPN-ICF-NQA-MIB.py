#
# PySNMP MIB module HPN-ICF-NQA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-NQA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
pingCtlEntry, pingCtlTestName, pingCtlTargetAddress, pingCtlDescr, pingCtlTargetAddressType, pingCtlOwnerIndex, pingCtlType = mibBuilder.importSymbols("DISMAN-PING-MIB", "pingCtlEntry", "pingCtlTestName", "pingCtlTargetAddress", "pingCtlDescr", "pingCtlTargetAddressType", "pingCtlOwnerIndex", "pingCtlType")
hpnicfRhw, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfRhw")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, iso, NotificationType, Integer32, IpAddress, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter32, Unsigned32, Bits, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "NotificationType", "Integer32", "IpAddress", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter32", "Unsigned32", "Bits", "Counter64", "TimeTicks")
RowStatus, DateAndTime, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DateAndTime", "DisplayString", "TextualConvention")
hpnicfNqa = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3))
if mibBuilder.loadTexts: hpnicfNqa.setLastUpdated('200608140000Z')
if mibBuilder.loadTexts: hpnicfNqa.setOrganization('')
hpnicfNqaObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1))
hpnicfNqaImplementationTypeDomains = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 2))
hpnicfNqaUdpEcho = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 2, 1))
if mibBuilder.loadTexts: hpnicfNqaUdpEcho.setStatus('current')
hpnicfNqaTcpconnect = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 2, 2))
if mibBuilder.loadTexts: hpnicfNqaTcpconnect.setStatus('current')
hpnicfNqajitter = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 2, 3))
if mibBuilder.loadTexts: hpnicfNqajitter.setStatus('current')
hpnicfNqaHttp = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 2, 4))
if mibBuilder.loadTexts: hpnicfNqaHttp.setStatus('current')
hpnicfNqadlsw = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 2, 5))
if mibBuilder.loadTexts: hpnicfNqadlsw.setStatus('current')
hpnicfNqadhcp = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 2, 6))
if mibBuilder.loadTexts: hpnicfNqadhcp.setStatus('current')
hpnicfNqaftp = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 2, 7))
if mibBuilder.loadTexts: hpnicfNqaftp.setStatus('current')
hpnicfNqaMIBVersion = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaMIBVersion.setStatus('current')
hpnicfNqaCtlTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2), )
if mibBuilder.loadTexts: hpnicfNqaCtlTable.setStatus('current')
hpnicfNqaCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2, 1), )
pingCtlEntry.registerAugmentions(("HPN-ICF-NQA-MIB", "hpnicfNqaCtlEntry"))
hpnicfNqaCtlEntry.setIndexNames(*pingCtlEntry.getIndexNames())
if mibBuilder.loadTexts: hpnicfNqaCtlEntry.setStatus('current')
hpnicfNqaCtlTargetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlTargetPort.setStatus('current')
hpnicfNqaCtlSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlSourcePort.setStatus('current')
hpnicfNqaCtlTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2, 1, 3), Integer32().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlTTL.setStatus('current')
hpnicfNqaCtlJitterAdminInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000)).clone(20)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlJitterAdminInterval.setStatus('current')
hpnicfNqaCtlJitterAdminNumPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2, 1, 5), Integer32().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlJitterAdminNumPackets.setStatus('current')
hpnicfNqaCtlHttpOperationType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("get", 1), ("post", 2), ("raw", 3))).clone('get')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlHttpOperationType.setStatus('current')
hpnicfNqaCtlHttpOperationString = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1023))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlHttpOperationString.setStatus('current')
hpnicfNqaCtlFtpOperationType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("get", 1), ("put", 2))).clone('get')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlFtpOperationType.setStatus('current')
hpnicfNqaCtlFtpUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlFtpUsername.setStatus('current')
hpnicfNqaCtlFtpPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlFtpPassword.setStatus('current')
hpnicfNqaCtlFtpOperationString = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlFtpOperationString.setStatus('current')
hpnicfNqaCtlVPNInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlVPNInstance.setStatus('current')
hpnicfNqaCtlHistoryKeptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(120)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlHistoryKeptTime.setStatus('current')
hpnicfNqaCtlHistoryEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlHistoryEnable.setStatus('current')
hpnicfNqaCtlICPIFAdvFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlICPIFAdvFactor.setStatus('current')
hpnicfNqaCtlCodecType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notDefined", 1), ("g711Alaw", 2), ("g711Ulaw", 3), ("g729A", 4), ("icmpTimestamp", 5))).clone('notDefined')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlCodecType.setStatus('current')
hpnicfNqaResultsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3), )
if mibBuilder.loadTexts: hpnicfNqaResultsTable.setStatus('current')
hpnicfNqaResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1), ).setIndexNames((0, "DISMAN-PING-MIB", "pingCtlOwnerIndex"), (0, "DISMAN-PING-MIB", "pingCtlTestName"))
if mibBuilder.loadTexts: hpnicfNqaResultsEntry.setStatus('current')
hpnicfNqaResultsRttNumDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsRttNumDisconnects.setStatus('current')
hpnicfNqaResultsRttTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsRttTimeouts.setStatus('current')
hpnicfNqaResultsRttBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsRttBusies.setStatus('current')
hpnicfNqaResultsRttNoConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsRttNoConnections.setStatus('current')
hpnicfNqaResultsRttDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsRttDrops.setStatus('current')
hpnicfNqaResultsRttSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsRttSequenceErrors.setStatus('current')
hpnicfNqaResultsRttStatsErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsRttStatsErrors.setStatus('current')
hpnicfNqaResultsMaxDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 8), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsMaxDelaySD.setStatus('current')
hpnicfNqaResultsMaxDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 9), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsMaxDelayDS.setStatus('current')
hpnicfNqaResultsLostPacketRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 10), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsLostPacketRatio.setStatus('current')
hpnicfNqaResultsPacketLateArrival = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsPacketLateArrival.setStatus('current')
hpnicfNqaResultsRttSum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsRttSum.setStatus('current')
hpnicfNqaResultsNumOfDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsNumOfDelaySD.setStatus('current')
hpnicfNqaResultsMinDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsMinDelaySD.setStatus('current')
hpnicfNqaResultsSumDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsSumDelaySD.setStatus('current')
hpnicfNqaResultsSum2DelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsSum2DelaySD.setStatus('current')
hpnicfNqaResultsNumOfDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsNumOfDelayDS.setStatus('current')
hpnicfNqaResultsMinDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsMinDelayDS.setStatus('current')
hpnicfNqaResultsSumDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsSumDelayDS.setStatus('current')
hpnicfNqaResultsSum2DelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 3, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaResultsSum2DelayDS.setStatus('current')
hpnicfNqaJitterStatsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4), )
if mibBuilder.loadTexts: hpnicfNqaJitterStatsTable.setStatus('current')
hpnicfNqaJitterStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1), ).setIndexNames((0, "DISMAN-PING-MIB", "pingCtlOwnerIndex"), (0, "DISMAN-PING-MIB", "pingCtlTestName"))
if mibBuilder.loadTexts: hpnicfNqaJitterStatsEntry.setStatus('current')
hpnicfNqaJitterStatsNumOfRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsNumOfRTT.setStatus('current')
hpnicfNqaJitterStatsMinOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsMinOfPositivesSD.setStatus('current')
hpnicfNqaJitterStatsMaxOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsMaxOfPositivesSD.setStatus('current')
hpnicfNqaJitterStatsNumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsNumOfPositivesSD.setStatus('current')
hpnicfNqaJitterStatsSumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsSumOfPositivesSD.setStatus('current')
hpnicfNqaJitterStatsSum2PositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsSum2PositivesSD.setStatus('current')
hpnicfNqaJitterStatsMinOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsMinOfNegativesSD.setStatus('current')
hpnicfNqaJitterStatsMaxOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsMaxOfNegativesSD.setStatus('current')
hpnicfNqaJitterStatsNumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsNumOfNegativesSD.setStatus('current')
hpnicfNqaJitterStatsSumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsSumOfNegativesSD.setStatus('current')
hpnicfNqaJitterStatsSum2NegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsSum2NegativesSD.setStatus('current')
hpnicfNqaJitterStatsMinOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsMinOfPositivesDS.setStatus('current')
hpnicfNqaJitterStatsMaxOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsMaxOfPositivesDS.setStatus('current')
hpnicfNqaJitterStatsNumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsNumOfPositivesDS.setStatus('current')
hpnicfNqaJitterStatsSumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsSumOfPositivesDS.setStatus('current')
hpnicfNqaJitterStatsSum2PositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsSum2PositivesDS.setStatus('current')
hpnicfNqaJitterStatsMinOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsMinOfNegativesDS.setStatus('current')
hpnicfNqaJitterStatsMaxOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsMaxOfNegativesDS.setStatus('current')
hpnicfNqaJitterStatsNumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsNumOfNegativesDS.setStatus('current')
hpnicfNqaJitterStatsSumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsSumOfNegativesDS.setStatus('current')
hpnicfNqaJitterStatsSum2NegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsSum2NegativesDS.setStatus('current')
hpnicfNqaJitterStatsPacketLossSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsPacketLossSD.setStatus('current')
hpnicfNqaJitterStatsPacketLossDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsPacketLossDS.setStatus('current')
hpnicfNqaJitterStatsAvePositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsAvePositivesSD.setStatus('current')
hpnicfNqaJitterStatsAveNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsAveNegativesSD.setStatus('current')
hpnicfNqaJitterStatsAvePositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsAvePositivesDS.setStatus('current')
hpnicfNqaJitterStatsAveNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsAveNegativesDS.setStatus('current')
hpnicfNqaJitterStatsPktLossUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 28), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsPktLossUnknown.setStatus('current')
hpnicfNqaJitterStatsOperOfICPIF = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsOperOfICPIF.setStatus('current')
hpnicfNqaJitterStatsOperOfMOS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 4, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaJitterStatsOperOfMOS.setStatus('current')
hpnicfNqaAgentEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNqaAgentEnable.setStatus('current')
hpnicfNqaTcpServerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 6), )
if mibBuilder.loadTexts: hpnicfNqaTcpServerTable.setStatus('current')
hpnicfNqaTcpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 6, 1), ).setIndexNames((0, "HPN-ICF-NQA-MIB", "hpnicfNqaTcpServerIpAddress"), (0, "HPN-ICF-NQA-MIB", "hpnicfNqaTcpServerPort"))
if mibBuilder.loadTexts: hpnicfNqaTcpServerEntry.setStatus('current')
hpnicfNqaTcpServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 6, 1, 1), InetAddress().clone(hexValue=""))
if mibBuilder.loadTexts: hpnicfNqaTcpServerIpAddress.setStatus('current')
hpnicfNqaTcpServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)))
if mibBuilder.loadTexts: hpnicfNqaTcpServerPort.setStatus('current')
hpnicfNqaTcpServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaTcpServerRowStatus.setStatus('current')
hpnicfNqaUdpServerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 7), )
if mibBuilder.loadTexts: hpnicfNqaUdpServerTable.setStatus('current')
hpnicfNqaUdpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 7, 1), ).setIndexNames((0, "HPN-ICF-NQA-MIB", "hpnicfNqaUdpServerIpAddress"), (0, "HPN-ICF-NQA-MIB", "hpnicfNqaUdpServerPort"))
if mibBuilder.loadTexts: hpnicfNqaUdpServerEntry.setStatus('current')
hpnicfNqaUdpServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 7, 1, 1), InetAddress().clone(hexValue=""))
if mibBuilder.loadTexts: hpnicfNqaUdpServerIpAddress.setStatus('current')
hpnicfNqaUdpServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)))
if mibBuilder.loadTexts: hpnicfNqaUdpServerPort.setStatus('current')
hpnicfNqaUdpServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaUdpServerRowStatus.setStatus('current')
hpnicfNqaServerEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNqaServerEnable.setStatus('current')
hpnicfNqaStatsMaxGroupNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatsMaxGroupNumber.setStatus('current')
hpnicfNqaStatisticsCtlTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 10), )
if mibBuilder.loadTexts: hpnicfNqaStatisticsCtlTable.setStatus('current')
hpnicfNqaStatisticsCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 10, 1), )
pingCtlEntry.registerAugmentions(("HPN-ICF-NQA-MIB", "hpnicfNqaStatisticsCtlEntry"))
hpnicfNqaStatisticsCtlEntry.setIndexNames(*pingCtlEntry.getIndexNames())
if mibBuilder.loadTexts: hpnicfNqaStatisticsCtlEntry.setStatus('current')
hpnicfNqaCtlStatisticsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 10, 1, 1), Unsigned32()).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlStatisticsInterval.setStatus('current')
hpnicfNqaCtlStatisticsGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 10, 1, 2), Unsigned32().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlStatisticsGroupNumber.setStatus('current')
hpnicfNqaCtlStatisticsKeptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(120)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlStatisticsKeptTime.setStatus('current')
hpnicfNqaCtlBeginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 10, 1, 4), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlBeginTime.setStatus('current')
hpnicfNqaCtlLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 10, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaCtlLifeTime.setStatus('current')
hpnicfNqaStatisticsResultsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11), )
if mibBuilder.loadTexts: hpnicfNqaStatisticsResultsTable.setStatus('current')
hpnicfNqaStatisticsResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1), ).setIndexNames((0, "DISMAN-PING-MIB", "pingCtlOwnerIndex"), (0, "DISMAN-PING-MIB", "pingCtlTestName"), (0, "HPN-ICF-NQA-MIB", "hpnicfNqaStatResIndex"))
if mibBuilder.loadTexts: hpnicfNqaStatisticsResultsEntry.setStatus('current')
hpnicfNqaStatResIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpnicfNqaStatResIndex.setStatus('current')
hpnicfNqaStatResIpTargetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 2), InetAddressType().clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResIpTargetAddressType.setStatus('current')
hpnicfNqaStatResIpTargetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 3), InetAddress().clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResIpTargetAddress.setStatus('current')
hpnicfNqaStatResMinRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 4), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResMinRtt.setStatus('current')
hpnicfNqaStatResMaxRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 5), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResMaxRtt.setStatus('current')
hpnicfNqaStatResAverageRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 6), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResAverageRtt.setStatus('current')
hpnicfNqaStatResProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResProbeResponses.setStatus('current')
hpnicfNqaStatResSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 8), Counter32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResSentProbes.setStatus('current')
hpnicfNqaStatResRttSumOfSquares = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 9), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResRttSumOfSquares.setStatus('current')
hpnicfNqaStatResStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResStartTime.setStatus('current')
hpnicfNqaStatResInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 11), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResInterval.setStatus('current')
hpnicfNqaStatResRttNumDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResRttNumDisconnects.setStatus('current')
hpnicfNqaStatResRttTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResRttTimeouts.setStatus('current')
hpnicfNqaStatResRttBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResRttBusies.setStatus('current')
hpnicfNqaStatResRttNoConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResRttNoConnections.setStatus('current')
hpnicfNqaStatResRttDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResRttDrops.setStatus('current')
hpnicfNqaStatResRttSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResRttSequenceErrors.setStatus('current')
hpnicfNqaStatResRttErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResRttErrors.setStatus('current')
hpnicfNqaStatResLostPacketRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResLostPacketRatio.setStatus('current')
hpnicfNqaStatResPacketLateArrival = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResPacketLateArrival.setStatus('current')
hpnicfNqaStatResRttSum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResRttSum.setStatus('current')
hpnicfNqaStatResNumOfDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResNumOfDelaySD.setStatus('current')
hpnicfNqaStatResMinDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResMinDelaySD.setStatus('current')
hpnicfNqaStatResMaxDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResMaxDelaySD.setStatus('current')
hpnicfNqaStatResSumDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResSumDelaySD.setStatus('current')
hpnicfNqaStatResSum2DelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResSum2DelaySD.setStatus('current')
hpnicfNqaStatResNumOfDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResNumOfDelayDS.setStatus('current')
hpnicfNqaStatResMinDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResMinDelayDS.setStatus('current')
hpnicfNqaStatResMaxDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResMaxDelayDS.setStatus('current')
hpnicfNqaStatResSumDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResSumDelayDS.setStatus('current')
hpnicfNqaStatResSum2DelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 11, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatResSum2DelayDS.setStatus('current')
hpnicfNqaGroupStatsJitterTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12), )
if mibBuilder.loadTexts: hpnicfNqaGroupStatsJitterTable.setStatus('current')
hpnicfNqaGroupStatsJitterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1), ).setIndexNames((0, "DISMAN-PING-MIB", "pingCtlOwnerIndex"), (0, "DISMAN-PING-MIB", "pingCtlTestName"), (0, "HPN-ICF-NQA-MIB", "hpnicfNqaStatJitterIndex"))
if mibBuilder.loadTexts: hpnicfNqaGroupStatsJitterEntry.setStatus('current')
hpnicfNqaStatJitterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpnicfNqaStatJitterIndex.setStatus('current')
hpnicfNqaStatJitterMinOfPosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 2), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterMinOfPosSD.setStatus('current')
hpnicfNqaStatJitterMaxOfPosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 3), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterMaxOfPosSD.setStatus('current')
hpnicfNqaStatJitterNumOfPosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterNumOfPosSD.setStatus('current')
hpnicfNqaStatJitterSumOfPosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 5), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterSumOfPosSD.setStatus('current')
hpnicfNqaStatJitterSumOfSquarePosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 6), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterSumOfSquarePosSD.setStatus('current')
hpnicfNqaStatJitterMinOfNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 7), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterMinOfNegSD.setStatus('current')
hpnicfNqaStatJitterMaxOfNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 8), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterMaxOfNegSD.setStatus('current')
hpnicfNqaStatJitterNumOfNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterNumOfNegSD.setStatus('current')
hpnicfNqaStatJitterSumOfNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 10), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterSumOfNegSD.setStatus('current')
hpnicfNqaStatJitterSumOfSquareNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 11), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterSumOfSquareNegSD.setStatus('current')
hpnicfNqaStatJitterMinOfPosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 12), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterMinOfPosDS.setStatus('current')
hpnicfNqaStatJitterMaxOfPosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 13), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterMaxOfPosDS.setStatus('current')
hpnicfNqaStatJitterNumOfPosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterNumOfPosDS.setStatus('current')
hpnicfNqaStatJitterSumOfPosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 15), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterSumOfPosDS.setStatus('current')
hpnicfNqaStatJitterSumOfSquarePosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 16), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterSumOfSquarePosDS.setStatus('current')
hpnicfNqaStatJitterMinOfNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 17), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterMinOfNegDS.setStatus('current')
hpnicfNqaStatJitterMaxOfNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 18), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterMaxOfNegDS.setStatus('current')
hpnicfNqaStatJitterNumOfNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterNumOfNegDS.setStatus('current')
hpnicfNqaStatJitterSumOfNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 20), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterSumOfNegDS.setStatus('current')
hpnicfNqaStatJitterSumOfSquareNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 21), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterSumOfSquareNegDS.setStatus('current')
hpnicfNqaStatJitterPacketLossSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterPacketLossSD.setStatus('current')
hpnicfNqaStatJitterPacketLossDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterPacketLossDS.setStatus('current')
hpnicfNqaStatJitterAvePosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 24), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterAvePosSD.setStatus('current')
hpnicfNqaStatJitterAveNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 25), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterAveNegSD.setStatus('current')
hpnicfNqaStatJitterAvePosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 26), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterAvePosDS.setStatus('current')
hpnicfNqaStatJitterAveNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 27), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterAveNegDS.setStatus('current')
hpnicfNqaStatJitterPktLossUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterPktLossUnknown.setStatus('current')
hpnicfNqaStatJitterMaxOfICPIF = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterMaxOfICPIF.setStatus('current')
hpnicfNqaStatJitterMinOfICPIF = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterMinOfICPIF.setStatus('current')
hpnicfNqaStatJitterMaxOfMOS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterMaxOfMOS.setStatus('current')
hpnicfNqaStatJitterMinOfMOS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 12, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatJitterMinOfMOS.setStatus('current')
hpnicfNqaReactionTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 13), )
if mibBuilder.loadTexts: hpnicfNqaReactionTable.setStatus('current')
hpnicfNqaReactionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 13, 1), ).setIndexNames((0, "HPN-ICF-NQA-MIB", "hpnicfNqaReactOwnerIndex"), (0, "HPN-ICF-NQA-MIB", "hpnicfNqaReactTestName"), (0, "HPN-ICF-NQA-MIB", "hpnicfNqaReactItemIndex"))
if mibBuilder.loadTexts: hpnicfNqaReactionEntry.setStatus('current')
hpnicfNqaReactOwnerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 13, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfNqaReactOwnerIndex.setStatus('current')
hpnicfNqaReactTestName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 13, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfNqaReactTestName.setStatus('current')
hpnicfNqaReactItemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfNqaReactItemIndex.setStatus('current')
hpnicfNqaReactCheckedElement = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("probetime", 1), ("probefailure", 2), ("jitterrtt", 3), ("jitterpacketloss", 4), ("jittersd", 5), ("jitterds", 6), ("icpif", 7), ("mos", 8), ("jitterOwdSD", 9), ("jitterOwdDS", 10)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaReactCheckedElement.setStatus('current')
hpnicfNqaReactThresholdUpperLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 13, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaReactThresholdUpperLimit.setStatus('current')
hpnicfNqaReactThresholdLowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 13, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaReactThresholdLowerLimit.setStatus('current')
hpnicfNqaReactThresholdType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("invalid", 0), ("average", 1), ("consecutive", 2), ("accumulative", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaReactThresholdType.setStatus('current')
hpnicfNqaReactThresholdConsecNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 13, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaReactThresholdConsecNum.setStatus('current')
hpnicfNqaReactThresholdAccumNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 13, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaReactThresholdAccumNum.setStatus('current')
hpnicfNqaReactActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 13, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("trapOnly", 1), ("triggerOnly", 2), ("trapAndTrigger", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaReactActionType.setStatus('current')
hpnicfNqaReactCurrentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 13, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("overThreshold", 2), ("belowThreshold", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaReactCurrentStatus.setStatus('current')
hpnicfNqaReactRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 13, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNqaReactRowStatus.setStatus('current')
hpnicfNqaReactCheckedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 13, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaReactCheckedNum.setStatus('current')
hpnicfNqaReactThresholdNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 13, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaReactThresholdNum.setStatus('current')
hpnicfNqaStatisticsReactionTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 14), )
if mibBuilder.loadTexts: hpnicfNqaStatisticsReactionTable.setStatus('current')
hpnicfNqaStatisticsReactionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 14, 1), ).setIndexNames((0, "HPN-ICF-NQA-MIB", "hpnicfNqaStatReactOwnerIndex"), (0, "HPN-ICF-NQA-MIB", "hpnicfNqaStatReactTestName"), (0, "HPN-ICF-NQA-MIB", "hpnicfNqaStatReactIndex"), (0, "HPN-ICF-NQA-MIB", "hpnicfNqaStatReactItemIndex"))
if mibBuilder.loadTexts: hpnicfNqaStatisticsReactionEntry.setStatus('current')
hpnicfNqaStatReactOwnerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 14, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hpnicfNqaStatReactOwnerIndex.setStatus('current')
hpnicfNqaStatReactTestName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 14, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hpnicfNqaStatReactTestName.setStatus('current')
hpnicfNqaStatReactIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 14, 1, 3), Unsigned32())
if mibBuilder.loadTexts: hpnicfNqaStatReactIndex.setStatus('current')
hpnicfNqaStatReactItemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 14, 1, 4), Unsigned32())
if mibBuilder.loadTexts: hpnicfNqaStatReactItemIndex.setStatus('current')
hpnicfNqaStatReactCheckedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 14, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatReactCheckedNum.setStatus('current')
hpnicfNqaStatReactThresholdNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 1, 14, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNqaStatReactThresholdNum.setStatus('current')
hpnicfNqaNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 3))
hpnicfNqaProbeTimeOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 3, 1)).setObjects(("HPN-ICF-NQA-MIB", "hpnicfNqaReactOwnerIndex"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactTestName"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactThresholdType"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hpnicfNqaProbeTimeOverThreshold.setStatus('current')
hpnicfNqaJitterRTTOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 3, 2)).setObjects(("HPN-ICF-NQA-MIB", "hpnicfNqaReactOwnerIndex"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactTestName"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactThresholdType"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hpnicfNqaJitterRTTOverThreshold.setStatus('current')
hpnicfNqaProbeFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 3, 3)).setObjects(("HPN-ICF-NQA-MIB", "hpnicfNqaReactOwnerIndex"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactTestName"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactThresholdType"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hpnicfNqaProbeFailure.setStatus('current')
hpnicfNqaJitterPacketLoss = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 3, 4)).setObjects(("HPN-ICF-NQA-MIB", "hpnicfNqaReactOwnerIndex"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactTestName"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactThresholdType"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hpnicfNqaJitterPacketLoss.setStatus('current')
hpnicfNqaJitterSDOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 3, 5)).setObjects(("HPN-ICF-NQA-MIB", "hpnicfNqaReactOwnerIndex"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactTestName"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactThresholdType"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hpnicfNqaJitterSDOverThreshold.setStatus('current')
hpnicfNqaJitterDSOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 3, 6)).setObjects(("HPN-ICF-NQA-MIB", "hpnicfNqaReactOwnerIndex"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactTestName"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactThresholdType"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hpnicfNqaJitterDSOverThreshold.setStatus('current')
hpnicfNqaICPIFOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 3, 7)).setObjects(("HPN-ICF-NQA-MIB", "hpnicfNqaReactOwnerIndex"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactTestName"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hpnicfNqaICPIFOverThreshold.setStatus('current')
hpnicfNqaMOSOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 3, 3, 8)).setObjects(("HPN-ICF-NQA-MIB", "hpnicfNqaReactOwnerIndex"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactTestName"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("HPN-ICF-NQA-MIB", "hpnicfNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hpnicfNqaMOSOverThreshold.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-NQA-MIB", hpnicfNqaServerEnable=hpnicfNqaServerEnable, hpnicfNqaJitterStatsSum2PositivesDS=hpnicfNqaJitterStatsSum2PositivesDS, hpnicfNqaStatJitterNumOfNegDS=hpnicfNqaStatJitterNumOfNegDS, hpnicfNqaCtlTargetPort=hpnicfNqaCtlTargetPort, hpnicfNqaJitterStatsPacketLossSD=hpnicfNqaJitterStatsPacketLossSD, hpnicfNqaCtlStatisticsGroupNumber=hpnicfNqaCtlStatisticsGroupNumber, hpnicfNqaResultsRttBusies=hpnicfNqaResultsRttBusies, hpnicfNqaStatResRttErrors=hpnicfNqaStatResRttErrors, hpnicfNqaResultsEntry=hpnicfNqaResultsEntry, hpnicfNqaCtlTable=hpnicfNqaCtlTable, hpnicfNqaJitterSDOverThreshold=hpnicfNqaJitterSDOverThreshold, hpnicfNqaStatResSumDelayDS=hpnicfNqaStatResSumDelayDS, hpnicfNqaStatJitterSumOfPosSD=hpnicfNqaStatJitterSumOfPosSD, hpnicfNqaJitterStatsPktLossUnknown=hpnicfNqaJitterStatsPktLossUnknown, hpnicfNqaUdpEcho=hpnicfNqaUdpEcho, hpnicfNqaStatReactThresholdNum=hpnicfNqaStatReactThresholdNum, hpnicfNqaResultsRttNumDisconnects=hpnicfNqaResultsRttNumDisconnects, hpnicfNqaReactCheckedNum=hpnicfNqaReactCheckedNum, hpnicfNqaStatReactIndex=hpnicfNqaStatReactIndex, hpnicfNqaResultsMinDelayDS=hpnicfNqaResultsMinDelayDS, hpnicfNqaStatResProbeResponses=hpnicfNqaStatResProbeResponses, hpnicfNqaReactThresholdType=hpnicfNqaReactThresholdType, hpnicfNqaCtlFtpPassword=hpnicfNqaCtlFtpPassword, hpnicfNqaJitterStatsAveNegativesSD=hpnicfNqaJitterStatsAveNegativesSD, hpnicfNqaMIBVersion=hpnicfNqaMIBVersion, hpnicfNqaCtlVPNInstance=hpnicfNqaCtlVPNInstance, hpnicfNqaStatResIndex=hpnicfNqaStatResIndex, hpnicfNqaStatResRttSumOfSquares=hpnicfNqaStatResRttSumOfSquares, hpnicfNqaStatResMinDelayDS=hpnicfNqaStatResMinDelayDS, hpnicfNqaStatJitterMinOfICPIF=hpnicfNqaStatJitterMinOfICPIF, hpnicfNqaStatReactOwnerIndex=hpnicfNqaStatReactOwnerIndex, hpnicfNqaStatReactCheckedNum=hpnicfNqaStatReactCheckedNum, hpnicfNqaReactThresholdAccumNum=hpnicfNqaReactThresholdAccumNum, hpnicfNqaStatResNumOfDelayDS=hpnicfNqaStatResNumOfDelayDS, hpnicfNqaReactThresholdConsecNum=hpnicfNqaReactThresholdConsecNum, hpnicfNqaCtlCodecType=hpnicfNqaCtlCodecType, hpnicfNqaCtlHistoryKeptTime=hpnicfNqaCtlHistoryKeptTime, hpnicfNqaJitterStatsOperOfICPIF=hpnicfNqaJitterStatsOperOfICPIF, hpnicfNqaCtlFtpUsername=hpnicfNqaCtlFtpUsername, PYSNMP_MODULE_ID=hpnicfNqa, hpnicfNqaJitterStatsNumOfNegativesDS=hpnicfNqaJitterStatsNumOfNegativesDS, hpnicfNqaResultsSum2DelaySD=hpnicfNqaResultsSum2DelaySD, hpnicfNqaUdpServerTable=hpnicfNqaUdpServerTable, hpnicfNqaStatResMaxDelaySD=hpnicfNqaStatResMaxDelaySD, hpnicfNqaStatJitterSumOfSquareNegSD=hpnicfNqaStatJitterSumOfSquareNegSD, hpnicfNqaStatReactTestName=hpnicfNqaStatReactTestName, hpnicfNqaResultsLostPacketRatio=hpnicfNqaResultsLostPacketRatio, hpnicfNqaHttp=hpnicfNqaHttp, hpnicfNqaUdpServerIpAddress=hpnicfNqaUdpServerIpAddress, hpnicfNqaStatResSum2DelayDS=hpnicfNqaStatResSum2DelayDS, hpnicfNqaReactActionType=hpnicfNqaReactActionType, hpnicfNqaResultsRttNoConnections=hpnicfNqaResultsRttNoConnections, hpnicfNqaStatResStartTime=hpnicfNqaStatResStartTime, hpnicfNqaJitterStatsEntry=hpnicfNqaJitterStatsEntry, hpnicfNqaGroupStatsJitterEntry=hpnicfNqaGroupStatsJitterEntry, hpnicfNqaStatisticsReactionTable=hpnicfNqaStatisticsReactionTable, hpnicfNqaStatJitterIndex=hpnicfNqaStatJitterIndex, hpnicfNqaStatResSumDelaySD=hpnicfNqaStatResSumDelaySD, hpnicfNqaJitterStatsMaxOfNegativesSD=hpnicfNqaJitterStatsMaxOfNegativesSD, hpnicfNqaStatResRttTimeouts=hpnicfNqaStatResRttTimeouts, hpnicfNqaStatResNumOfDelaySD=hpnicfNqaStatResNumOfDelaySD, hpnicfNqaStatJitterPacketLossDS=hpnicfNqaStatJitterPacketLossDS, hpnicfNqaCtlLifeTime=hpnicfNqaCtlLifeTime, hpnicfNqaJitterStatsMinOfNegativesDS=hpnicfNqaJitterStatsMinOfNegativesDS, hpnicfNqaImplementationTypeDomains=hpnicfNqaImplementationTypeDomains, hpnicfNqaStatJitterMaxOfICPIF=hpnicfNqaStatJitterMaxOfICPIF, hpnicfNqaJitterStatsMaxOfPositivesDS=hpnicfNqaJitterStatsMaxOfPositivesDS, hpnicfNqaCtlHistoryEnable=hpnicfNqaCtlHistoryEnable, hpnicfNqaReactRowStatus=hpnicfNqaReactRowStatus, hpnicfNqaUdpServerRowStatus=hpnicfNqaUdpServerRowStatus, hpnicfNqaJitterStatsMinOfPositivesDS=hpnicfNqaJitterStatsMinOfPositivesDS, hpnicfNqaStatResMaxRtt=hpnicfNqaStatResMaxRtt, hpnicfNqaJitterPacketLoss=hpnicfNqaJitterPacketLoss, hpnicfNqaStatJitterSumOfSquarePosSD=hpnicfNqaStatJitterSumOfSquarePosSD, hpnicfNqaResultsPacketLateArrival=hpnicfNqaResultsPacketLateArrival, hpnicfNqaJitterStatsNumOfNegativesSD=hpnicfNqaJitterStatsNumOfNegativesSD, hpnicfNqaStatResMinDelaySD=hpnicfNqaStatResMinDelaySD, hpnicfNqaResultsMinDelaySD=hpnicfNqaResultsMinDelaySD, hpnicfNqaResultsSumDelaySD=hpnicfNqaResultsSumDelaySD, hpnicfNqaCtlJitterAdminNumPackets=hpnicfNqaCtlJitterAdminNumPackets, hpnicfNqaJitterStatsMinOfPositivesSD=hpnicfNqaJitterStatsMinOfPositivesSD, hpnicfNqaStatResSum2DelaySD=hpnicfNqaStatResSum2DelaySD, hpnicfNqaStatJitterMaxOfNegSD=hpnicfNqaStatJitterMaxOfNegSD, hpnicfNqaStatResLostPacketRatio=hpnicfNqaStatResLostPacketRatio, hpnicfNqaStatJitterPktLossUnknown=hpnicfNqaStatJitterPktLossUnknown, hpnicfNqaStatisticsResultsEntry=hpnicfNqaStatisticsResultsEntry, hpnicfNqaCtlHttpOperationString=hpnicfNqaCtlHttpOperationString, hpnicfNqaJitterStatsNumOfPositivesDS=hpnicfNqaJitterStatsNumOfPositivesDS, hpnicfNqaStatJitterSumOfNegDS=hpnicfNqaStatJitterSumOfNegDS, hpnicfNqaftp=hpnicfNqaftp, hpnicfNqaResultsNumOfDelaySD=hpnicfNqaResultsNumOfDelaySD, hpnicfNqaCtlSourcePort=hpnicfNqaCtlSourcePort, hpnicfNqaJitterStatsMaxOfNegativesDS=hpnicfNqaJitterStatsMaxOfNegativesDS, hpnicfNqaStatResSentProbes=hpnicfNqaStatResSentProbes, hpnicfNqaNotifications=hpnicfNqaNotifications, hpnicfNqaJitterStatsNumOfPositivesSD=hpnicfNqaJitterStatsNumOfPositivesSD, hpnicfNqaTcpconnect=hpnicfNqaTcpconnect, hpnicfNqaTcpServerTable=hpnicfNqaTcpServerTable, hpnicfNqaJitterDSOverThreshold=hpnicfNqaJitterDSOverThreshold, hpnicfNqaReactItemIndex=hpnicfNqaReactItemIndex, hpnicfNqaJitterStatsSumOfPositivesSD=hpnicfNqaJitterStatsSumOfPositivesSD, hpnicfNqaStatsMaxGroupNumber=hpnicfNqaStatsMaxGroupNumber, hpnicfNqaCtlEntry=hpnicfNqaCtlEntry, hpnicfNqaJitterStatsSum2PositivesSD=hpnicfNqaJitterStatsSum2PositivesSD, hpnicfNqaResultsSumDelayDS=hpnicfNqaResultsSumDelayDS, hpnicfNqaStatResMinRtt=hpnicfNqaStatResMinRtt, hpnicfNqaStatJitterMaxOfPosDS=hpnicfNqaStatJitterMaxOfPosDS, hpnicfNqaStatJitterSumOfSquareNegDS=hpnicfNqaStatJitterSumOfSquareNegDS, hpnicfNqaStatJitterMinOfPosDS=hpnicfNqaStatJitterMinOfPosDS, hpnicfNqaProbeFailure=hpnicfNqaProbeFailure, hpnicfNqaStatResRttNoConnections=hpnicfNqaStatResRttNoConnections, hpnicfNqaReactCheckedElement=hpnicfNqaReactCheckedElement, hpnicfNqaJitterStatsMaxOfPositivesSD=hpnicfNqaJitterStatsMaxOfPositivesSD, hpnicfNqaStatResRttNumDisconnects=hpnicfNqaStatResRttNumDisconnects, hpnicfNqaReactionEntry=hpnicfNqaReactionEntry, hpnicfNqaResultsRttDrops=hpnicfNqaResultsRttDrops, hpnicfNqaResultsTable=hpnicfNqaResultsTable, hpnicfNqaJitterStatsAvePositivesDS=hpnicfNqaJitterStatsAvePositivesDS, hpnicfNqaStatResInterval=hpnicfNqaStatResInterval, hpnicfNqaStatJitterMaxOfNegDS=hpnicfNqaStatJitterMaxOfNegDS, hpnicfNqaResultsRttSum=hpnicfNqaResultsRttSum, hpnicfNqaMOSOverThreshold=hpnicfNqaMOSOverThreshold, hpnicfNqa=hpnicfNqa, hpnicfNqaReactCurrentStatus=hpnicfNqaReactCurrentStatus, hpnicfNqaStatJitterMaxOfPosSD=hpnicfNqaStatJitterMaxOfPosSD, hpnicfNqaResultsRttStatsErrors=hpnicfNqaResultsRttStatsErrors, hpnicfNqaTcpServerEntry=hpnicfNqaTcpServerEntry, hpnicfNqaStatResRttDrops=hpnicfNqaStatResRttDrops, hpnicfNqaCtlFtpOperationType=hpnicfNqaCtlFtpOperationType, hpnicfNqaStatResMaxDelayDS=hpnicfNqaStatResMaxDelayDS, hpnicfNqaStatResRttSum=hpnicfNqaStatResRttSum, hpnicfNqaAgentEnable=hpnicfNqaAgentEnable, hpnicfNqaJitterStatsMinOfNegativesSD=hpnicfNqaJitterStatsMinOfNegativesSD, hpnicfNqadhcp=hpnicfNqadhcp, hpnicfNqaCtlFtpOperationString=hpnicfNqaCtlFtpOperationString, hpnicfNqaGroupStatsJitterTable=hpnicfNqaGroupStatsJitterTable, hpnicfNqaJitterStatsOperOfMOS=hpnicfNqaJitterStatsOperOfMOS, hpnicfNqaStatResIpTargetAddress=hpnicfNqaStatResIpTargetAddress, hpnicfNqaReactThresholdUpperLimit=hpnicfNqaReactThresholdUpperLimit, hpnicfNqaStatResRttSequenceErrors=hpnicfNqaStatResRttSequenceErrors, hpnicfNqaJitterStatsSumOfPositivesDS=hpnicfNqaJitterStatsSumOfPositivesDS, hpnicfNqaCtlTTL=hpnicfNqaCtlTTL, hpnicfNqaStatJitterMinOfNegSD=hpnicfNqaStatJitterMinOfNegSD, hpnicfNqaObjects=hpnicfNqaObjects, hpnicfNqaReactThresholdLowerLimit=hpnicfNqaReactThresholdLowerLimit, hpnicfNqaReactTestName=hpnicfNqaReactTestName, hpnicfNqaJitterStatsSum2NegativesDS=hpnicfNqaJitterStatsSum2NegativesDS, hpnicfNqaStatJitterAveNegSD=hpnicfNqaStatJitterAveNegSD, hpnicfNqaICPIFOverThreshold=hpnicfNqaICPIFOverThreshold, hpnicfNqaResultsRttTimeouts=hpnicfNqaResultsRttTimeouts, hpnicfNqaResultsNumOfDelayDS=hpnicfNqaResultsNumOfDelayDS, hpnicfNqaResultsSum2DelayDS=hpnicfNqaResultsSum2DelayDS, hpnicfNqaUdpServerEntry=hpnicfNqaUdpServerEntry, hpnicfNqajitter=hpnicfNqajitter, hpnicfNqadlsw=hpnicfNqadlsw, hpnicfNqaCtlHttpOperationType=hpnicfNqaCtlHttpOperationType, hpnicfNqaResultsMaxDelayDS=hpnicfNqaResultsMaxDelayDS, hpnicfNqaTcpServerIpAddress=hpnicfNqaTcpServerIpAddress, hpnicfNqaCtlJitterAdminInterval=hpnicfNqaCtlJitterAdminInterval, hpnicfNqaStatJitterSumOfPosDS=hpnicfNqaStatJitterSumOfPosDS, hpnicfNqaStatJitterNumOfPosSD=hpnicfNqaStatJitterNumOfPosSD, hpnicfNqaStatJitterMinOfMOS=hpnicfNqaStatJitterMinOfMOS, hpnicfNqaJitterStatsNumOfRTT=hpnicfNqaJitterStatsNumOfRTT, hpnicfNqaStatResPacketLateArrival=hpnicfNqaStatResPacketLateArrival, hpnicfNqaStatResIpTargetAddressType=hpnicfNqaStatResIpTargetAddressType, hpnicfNqaJitterStatsAvePositivesSD=hpnicfNqaJitterStatsAvePositivesSD, hpnicfNqaStatisticsCtlTable=hpnicfNqaStatisticsCtlTable, hpnicfNqaJitterStatsTable=hpnicfNqaJitterStatsTable, hpnicfNqaJitterRTTOverThreshold=hpnicfNqaJitterRTTOverThreshold, hpnicfNqaJitterStatsSumOfNegativesDS=hpnicfNqaJitterStatsSumOfNegativesDS, hpnicfNqaCtlICPIFAdvFactor=hpnicfNqaCtlICPIFAdvFactor, hpnicfNqaStatJitterMaxOfMOS=hpnicfNqaStatJitterMaxOfMOS, hpnicfNqaStatJitterNumOfNegSD=hpnicfNqaStatJitterNumOfNegSD, hpnicfNqaStatReactItemIndex=hpnicfNqaStatReactItemIndex, hpnicfNqaStatJitterMinOfNegDS=hpnicfNqaStatJitterMinOfNegDS, hpnicfNqaStatJitterMinOfPosSD=hpnicfNqaStatJitterMinOfPosSD, hpnicfNqaStatJitterAvePosDS=hpnicfNqaStatJitterAvePosDS, hpnicfNqaStatJitterNumOfPosDS=hpnicfNqaStatJitterNumOfPosDS, hpnicfNqaTcpServerRowStatus=hpnicfNqaTcpServerRowStatus, hpnicfNqaStatJitterSumOfNegSD=hpnicfNqaStatJitterSumOfNegSD, hpnicfNqaJitterStatsAveNegativesDS=hpnicfNqaJitterStatsAveNegativesDS, hpnicfNqaCtlStatisticsKeptTime=hpnicfNqaCtlStatisticsKeptTime, hpnicfNqaStatResRttBusies=hpnicfNqaStatResRttBusies, hpnicfNqaJitterStatsSumOfNegativesSD=hpnicfNqaJitterStatsSumOfNegativesSD, hpnicfNqaStatJitterSumOfSquarePosDS=hpnicfNqaStatJitterSumOfSquarePosDS, hpnicfNqaReactionTable=hpnicfNqaReactionTable, hpnicfNqaStatResAverageRtt=hpnicfNqaStatResAverageRtt, hpnicfNqaStatisticsReactionEntry=hpnicfNqaStatisticsReactionEntry, hpnicfNqaStatJitterAvePosSD=hpnicfNqaStatJitterAvePosSD, hpnicfNqaReactOwnerIndex=hpnicfNqaReactOwnerIndex, hpnicfNqaReactThresholdNum=hpnicfNqaReactThresholdNum, hpnicfNqaJitterStatsPacketLossDS=hpnicfNqaJitterStatsPacketLossDS, hpnicfNqaStatJitterAveNegDS=hpnicfNqaStatJitterAveNegDS, hpnicfNqaUdpServerPort=hpnicfNqaUdpServerPort, hpnicfNqaTcpServerPort=hpnicfNqaTcpServerPort, hpnicfNqaResultsMaxDelaySD=hpnicfNqaResultsMaxDelaySD, hpnicfNqaResultsRttSequenceErrors=hpnicfNqaResultsRttSequenceErrors, hpnicfNqaStatisticsCtlEntry=hpnicfNqaStatisticsCtlEntry, hpnicfNqaCtlStatisticsInterval=hpnicfNqaCtlStatisticsInterval, hpnicfNqaProbeTimeOverThreshold=hpnicfNqaProbeTimeOverThreshold, hpnicfNqaCtlBeginTime=hpnicfNqaCtlBeginTime, hpnicfNqaStatJitterPacketLossSD=hpnicfNqaStatJitterPacketLossSD, hpnicfNqaJitterStatsSum2NegativesSD=hpnicfNqaJitterStatsSum2NegativesSD, hpnicfNqaStatisticsResultsTable=hpnicfNqaStatisticsResultsTable)
