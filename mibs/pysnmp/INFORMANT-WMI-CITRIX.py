#
# PySNMP MIB module INFORMANT-WMI-CITRIX (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INFORMANT-WMI-CITRIX
# Produced by pysmi-0.3.4 at Mon Apr 29 19:42:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso, ModuleIdentity, MibIdentifier, Gauge32, ObjectIdentity, Integer32, TimeTicks, Bits, IpAddress, Unsigned32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso", "ModuleIdentity", "MibIdentifier", "Gauge32", "ObjectIdentity", "Integer32", "TimeTicks", "Bits", "IpAddress", "Unsigned32", "NotificationType")
DisplayString, DateAndTime, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "TruthValue", "TextualConvention")
WtcsDisplayString, informant = mibBuilder.importSymbols("WTCS", "WtcsDisplayString", "informant")
citrixWmi = ModuleIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 42))
citrixWmi.setRevisions(('2008-06-02 17:14',))
if mibBuilder.loadTexts: citrixWmi.setLastUpdated('200806021714Z')
if mibBuilder.loadTexts: citrixWmi.setOrganization('Informant Systems, Inc.')
citrixWmiCitrix = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1))
if mibBuilder.loadTexts: citrixWmiCitrix.setStatus('current')
citrixAccountAuthorityTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 1), )
if mibBuilder.loadTexts: citrixAccountAuthorityTable.setStatus('current')
citrixAccountAuthorityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 1, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "ctxAccountAuthorityIndex"))
if mibBuilder.loadTexts: citrixAccountAuthorityEntry.setStatus('current')
ctxAccountAuthorityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxAccountAuthorityIndex.setStatus('current')
ctxAccountAuthorityName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 1, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxAccountAuthorityName.setStatus('current')
ctxAccountAuthorityType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unknownAccountAuthority", 0), ("windowsNTDomainOrADS", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxAccountAuthorityType.setStatus('current')
citrixApplicationFolderTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 2), )
if mibBuilder.loadTexts: citrixApplicationFolderTable.setStatus('current')
citrixApplicationFolderEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 2, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "ctxApplicationFolderIndex"))
if mibBuilder.loadTexts: citrixApplicationFolderEntry.setStatus('current')
ctxApplicationFolderIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxApplicationFolderIndex.setStatus('current')
ctxApplicationFolderFolderDN = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 2, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxApplicationFolderFolderDN.setStatus('current')
ctxApplicationFolderFolderName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 2, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxApplicationFolderFolderName.setStatus('current')
citrixGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 3), )
if mibBuilder.loadTexts: citrixGroupTable.setStatus('current')
citrixGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 3, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "ctxGroupIndex"))
if mibBuilder.loadTexts: citrixGroupEntry.setStatus('current')
ctxGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGroupIndex.setStatus('current')
ctxGroupAccAuthority = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 3, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGroupAccAuthority.setStatus('current')
ctxGroupAccountType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknownAccountType", 0), ("localGroup", 1), ("globalGroup", 2), ("universalGroup", 3), ("domainLocalGroup", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGroupAccountType.setStatus('current')
ctxGroupGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 3, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGroupGroupName.setStatus('current')
citrixServerFolderTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 4), )
if mibBuilder.loadTexts: citrixServerFolderTable.setStatus('current')
citrixServerFolderEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 4, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "ctxServerFolderIndex"))
if mibBuilder.loadTexts: citrixServerFolderEntry.setStatus('current')
ctxServerFolderIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxServerFolderIndex.setStatus('current')
ctxServerFolderFolderDN = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 4, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxServerFolderFolderDN.setStatus('current')
ctxServerFolderFolderName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 4, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxServerFolderFolderName.setStatus('current')
citrixServersInFolderTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 5), )
if mibBuilder.loadTexts: citrixServersInFolderTable.setStatus('current')
citrixServersInFolderEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 5, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "ctxServersInFolderIndex"))
if mibBuilder.loadTexts: citrixServersInFolderEntry.setStatus('current')
ctxServersInFolderIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxServersInFolderIndex.setStatus('current')
ctxServersInFolderAntecedent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 5, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxServersInFolderAntecedent.setStatus('current')
ctxServersInFolderDependent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 5, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxServersInFolderDependent.setStatus('current')
citrixServersInZoneTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 6), )
if mibBuilder.loadTexts: citrixServersInZoneTable.setStatus('current')
citrixServersInZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 6, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "ctxServersInZoneIndex"))
if mibBuilder.loadTexts: citrixServersInZoneEntry.setStatus('current')
ctxServersInZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxServersInZoneIndex.setStatus('current')
ctxServersInZoneServer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 6, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxServersInZoneServer.setStatus('current')
ctxServersInZoneZone = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 6, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxServersInZoneZone.setStatus('current')
citrixUserTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 7), )
if mibBuilder.loadTexts: citrixUserTable.setStatus('current')
citrixUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 7, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "ctxUserIndex"))
if mibBuilder.loadTexts: citrixUserEntry.setStatus('current')
ctxUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxUserIndex.setStatus('current')
ctxUserAccAuthority = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 7, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxUserAccAuthority.setStatus('current')
ctxUserAccountType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknownAccountType", 0), ("localUser", 1), ("domainUser", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxUserAccountType.setStatus('current')
ctxUserUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 7, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxUserUserName.setStatus('current')
citrixUsersInGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 8), )
if mibBuilder.loadTexts: citrixUsersInGroupTable.setStatus('current')
citrixUsersInGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 8, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "ctxUsersInGroupIndex"))
if mibBuilder.loadTexts: citrixUsersInGroupEntry.setStatus('current')
ctxUsersInGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxUsersInGroupIndex.setStatus('current')
ctxUsersInGroupAntecedent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 8, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxUsersInGroupAntecedent.setStatus('current')
ctxUsersInGroupDependent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 8, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxUsersInGroupDependent.setStatus('current')
citrixZoneTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 9), )
if mibBuilder.loadTexts: citrixZoneTable.setStatus('current')
citrixZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 9, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "ctxZoneIndex"))
if mibBuilder.loadTexts: citrixZoneEntry.setStatus('current')
ctxZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxZoneIndex.setStatus('current')
ctxZoneDataCollector = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 9, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxZoneDataCollector.setStatus('current')
ctxZoneNumServersInZone = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 9, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxZoneNumServersInZone.setStatus('current')
ctxZoneZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 9, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxZoneZoneName.setStatus('current')
metaframeApplLoadLevelTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 10), )
if mibBuilder.loadTexts: metaframeApplLoadLevelTable.setStatus('current')
metaframeApplLoadLevelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 10, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfApplicationLoadLevelIndex"))
if mibBuilder.loadTexts: metaframeApplLoadLevelEntry.setStatus('current')
mfApplicationLoadLevelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfApplicationLoadLevelIndex.setStatus('current')
mfApplicationLoadLevelAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 10, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfApplicationLoadLevelAppName.setStatus('current')
mfApplicationLoadLevelLoadLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 10, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfApplicationLoadLevelLoadLevel.setStatus('current')
mfApplicationLoadLevelServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 10, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfApplicationLoadLevelServerName.setStatus('current')
metaframeApplPublishOnSvrTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 11), )
if mibBuilder.loadTexts: metaframeApplPublishOnSvrTable.setStatus('current')
metaframeApplPublishOnSvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 11, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfaposIndex"))
if mibBuilder.loadTexts: metaframeApplPublishOnSvrEntry.setStatus('current')
mfaposIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfaposIndex.setStatus('current')
mfaposCtxServer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 11, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfaposCtxServer.setStatus('current')
mfaposWinApp = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 11, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfaposWinApp.setStatus('current')
metaframeApplRunOnServerTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 12), )
if mibBuilder.loadTexts: metaframeApplRunOnServerTable.setStatus('current')
metaframeApplRunOnServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 12, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfarosIndex"))
if mibBuilder.loadTexts: metaframeApplRunOnServerEntry.setStatus('current')
mfarosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfarosIndex.setStatus('current')
mfarosApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 12, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfarosApplication.setStatus('current')
mfarosProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfarosProcessId.setStatus('current')
mfarosServer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 12, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfarosServer.setStatus('current')
metaframeAppsForGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 13), )
if mibBuilder.loadTexts: metaframeAppsForGroupTable.setStatus('current')
metaframeAppsForGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 13, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfAppsForGroupIndex"))
if mibBuilder.loadTexts: metaframeAppsForGroupEntry.setStatus('current')
mfAppsForGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfAppsForGroupIndex.setStatus('current')
mfAppsForGroupAntecedent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 13, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfAppsForGroupAntecedent.setStatus('current')
mfAppsForGroupDependent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 13, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfAppsForGroupDependent.setStatus('current')
metaframeAppsInFolderTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 14), )
if mibBuilder.loadTexts: metaframeAppsInFolderTable.setStatus('current')
metaframeAppsInFolderEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 14, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfAppsInFolderIndex"))
if mibBuilder.loadTexts: metaframeAppsInFolderEntry.setStatus('current')
mfAppsInFolderIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfAppsInFolderIndex.setStatus('current')
mfAppsInFolderAntecedent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 14, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfAppsInFolderAntecedent.setStatus('current')
mfAppsInFolderDependent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 14, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfAppsInFolderDependent.setStatus('current')
metaframeAppsInSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 15), )
if mibBuilder.loadTexts: metaframeAppsInSessionTable.setStatus('current')
metaframeAppsInSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 15, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfAppsInSessionIndex"))
if mibBuilder.loadTexts: metaframeAppsInSessionEntry.setStatus('current')
mfAppsInSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfAppsInSessionIndex.setStatus('current')
mfAppsInSessionAntecedent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 15, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfAppsInSessionAntecedent.setStatus('current')
mfAppsInSessionDependent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 15, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfAppsInSessionDependent.setStatus('current')
metaframeDisconnectSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 16), )
if mibBuilder.loadTexts: metaframeDisconnectSessionTable.setStatus('current')
metaframeDisconnectSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 16, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfdshIndex"))
if mibBuilder.loadTexts: metaframeDisconnectSessionEntry.setStatus('current')
mfdshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfdshIndex.setStatus('current')
mfdshHowMany = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 16, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfdshHowMany.setStatus('current')
mfdshWhen = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 16, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfdshWhen.setStatus('current')
metaframeICAClientTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17), )
if mibBuilder.loadTexts: metaframeICAClientTable.setStatus('current')
metaframeICAClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfICAClientIndex"))
if mibBuilder.loadTexts: metaframeICAClientEntry.setStatus('current')
mfICAClientIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientIndex.setStatus('current')
mfICAClientClientAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientAddress.setStatus('current')
mfICAClientClientAddrFamily = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unspecifiedProtocol", 0), ("internetProtocolIP", 1), ("novellIPXSPX", 2), ("microsoftNetBIOS", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientAddrFamily.setStatus('current')
mfICAClientClientBuild = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientBuild.setStatus('current')
mfICAClientClientCacheDisk = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientCacheDisk.setStatus('current')
mfICAClientClientCacheLowMem = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientCacheLowMem.setStatus('current')
mfICAClientClientCacheTiny = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientCacheTiny.setStatus('current')
mfICAClientClientCacheXms = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientCacheXms.setStatus('current')
mfICAClientClientColorDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientColorDepth.setStatus('current')
mfICAClientClientDimBitmapMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientDimBitmapMin.setStatus('current')
mfICAClientClientDimCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientDimCacheSize.setStatus('current')
mfICAClientClientDimVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientDimVersion.setStatus('current')
mfICAClientClientDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientDirectory.setStatus('current')
mfICAClientClientEncryption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientEncryption.setStatus('current')
mfICAClientClientHardwareID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientHardwareID.setStatus('current')
mfICAClientClientHRes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientHRes.setStatus('current')
mfICAClientClientLicense = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientLicense.setStatus('current')
mfICAClientClientModemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientModemName.setStatus('current')
mfICAClientClientName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientName.setStatus('current')
mfICAClientClientProductID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("unknownClient", 0), ("windows32Bit", 1), ("windows16Bit", 2), ("dos32Bit", 3), ("dos32Bit2", 4), ("windowsCE", 5), ("unix", 6), ("java", 7), ("web", 8), ("citrixDirectICAStation", 9), ("citrixTextTerminal", 10), ("citrixConsole", 11), ("citrixMacClient", 12), ("oemAndOther", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientProductID.setStatus('current')
mfICAClientClientProductIDValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientProductIDValue.setStatus('current')
mfICAClientClientVRes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientClientVRes.setStatus('current')
mfICAClientICABufLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 17, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfICAClientICABufLen.setStatus('current')
metaframeInstalledSoftwareTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 18), )
if mibBuilder.loadTexts: metaframeInstalledSoftwareTable.setStatus('current')
metaframeInstalledSoftwareEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 18, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfInstalledSoftwareIndex"))
if mibBuilder.loadTexts: metaframeInstalledSoftwareEntry.setStatus('current')
mfInstalledSoftwareIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfInstalledSoftwareIndex.setStatus('current')
mfInstalledSoftwareServer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 18, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfInstalledSoftwareServer.setStatus('current')
mfInstalledSoftwareSoftware = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 18, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfInstalledSoftwareSoftware.setStatus('current')
metaframeProcessTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 19), )
if mibBuilder.loadTexts: metaframeProcessTable.setStatus('current')
metaframeProcessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 19, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfProcessIndex"))
if mibBuilder.loadTexts: metaframeProcessEntry.setStatus('current')
mfProcessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfProcessIndex.setStatus('current')
mfProcessProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 19, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfProcessProcessID.setStatus('current')
mfProcessProcessName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 19, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfProcessProcessName.setStatus('current')
mfProcessProcessState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 19, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))).clone(namedValues=NamedValues(("unknownState", 0), ("processInitialized", 1), ("processIsReadyToRun", 2), ("processIsRunning", 3), ("processIsStandingBy", 4), ("processTerminated", 5), ("processInTransit", 6), ("waitingOnExecutive", 7), ("waitingOnFreePage", 8), ("waitingToBePagedIn", 9), ("waitingForMemory", 10), ("executionDelayed", 11), ("processSuspended", 12), ("waitingOnUserRequest", 13), ("eventPairHigh", 14), ("eventPairLow", 15), ("lpcReceive", 16), ("lpcReply", 17), ("waitForVirtualMemory", 18), ("processIsPagedOut", 19), ("waitForOtherReasons", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfProcessProcessState.setStatus('current')
mfProcessServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 19, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfProcessServerName.setStatus('current')
mfProcessSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 19, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfProcessSessionID.setStatus('current')
mfProcessUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 19, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfProcessUserName.setStatus('current')
metaframeProcessesInSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 20), )
if mibBuilder.loadTexts: metaframeProcessesInSessionTable.setStatus('current')
metaframeProcessesInSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 20, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfProcessesInSessionIndex"))
if mibBuilder.loadTexts: metaframeProcessesInSessionEntry.setStatus('current')
mfProcessesInSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfProcessesInSessionIndex.setStatus('current')
mfProcessesInSessionAntecedent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 20, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfProcessesInSessionAntecedent.setStatus('current')
mfProcessesInSessionDependent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 20, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfProcessesInSessionDependent.setStatus('current')
metaframeSchemaVersionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 21), )
if mibBuilder.loadTexts: metaframeSchemaVersionTable.setStatus('current')
metaframeSchemaVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 21, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfSchemaVersionIndex"))
if mibBuilder.loadTexts: metaframeSchemaVersionEntry.setStatus('current')
mfSchemaVersionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSchemaVersionIndex.setStatus('current')
mfSchemaVersionVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 21, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSchemaVersionVersion.setStatus('current')
metaframeServerTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 22), )
if mibBuilder.loadTexts: metaframeServerTable.setStatus('current')
metaframeServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 22, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfServerIndex"))
if mibBuilder.loadTexts: metaframeServerEntry.setStatus('current')
mfServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfServerIndex.setStatus('current')
mfServerDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 22, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfServerDomain.setStatus('current')
mfServerFarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 22, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfServerFarmName.setStatus('current')
mfServerIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 22, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfServerIPAddress.setStatus('current')
mfServerLoginsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 22, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfServerLoginsEnabled.setStatus('current')
mfServerNumberOfActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 22, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfServerNumberOfActiveSessions.setStatus('current')
mfServerNumOfDisconnectSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 22, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfServerNumOfDisconnectSessions.setStatus('current')
mfServerNumberOfSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 22, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfServerNumberOfSessions.setStatus('current')
mfServerServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 22, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfServerServerName.setStatus('current')
mfServerServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 22, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unknownObject", 0), ("windowsServer", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfServerServerType.setStatus('current')
mfServerZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 22, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfServerZoneName.setStatus('current')
mfServerZoneRanking = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 22, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknownRank", 0), ("zoneDataCollector", 1), ("backupDataCollector", 2), ("serverIsAZoneMember", 3), ("cannotBeDataCollector", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfServerZoneRanking.setStatus('current')
metaframeServerLoadLevelTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 23), )
if mibBuilder.loadTexts: metaframeServerLoadLevelTable.setStatus('current')
metaframeServerLoadLevelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 23, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfServerLoadLevelIndex"))
if mibBuilder.loadTexts: metaframeServerLoadLevelEntry.setStatus('current')
mfServerLoadLevelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfServerLoadLevelIndex.setStatus('current')
mfServerLoadLevelLoadLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 23, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfServerLoadLevelLoadLevel.setStatus('current')
mfServerLoadLevelServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 23, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfServerLoadLevelServerName.setStatus('current')
metaframeSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 24), )
if mibBuilder.loadTexts: metaframeSessionTable.setStatus('current')
metaframeSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 24, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfSessionIndex"))
if mibBuilder.loadTexts: metaframeSessionEntry.setStatus('current')
mfSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 24, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSessionIndex.setStatus('current')
mfSessionClient = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 24, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSessionClient.setStatus('current')
mfSessionConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 24, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSessionConnectTime.setStatus('current')
mfSessionCurrentTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 24, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSessionCurrentTime.setStatus('current')
mfSessionDisconnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 24, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSessionDisconnectTime.setStatus('current')
mfSessionLastInputTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 24, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSessionLastInputTime.setStatus('current')
mfSessionLogonTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 24, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSessionLogonTime.setStatus('current')
mfSessionNumberOfApps = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 24, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSessionNumberOfApps.setStatus('current')
mfSessionServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 24, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSessionServerName.setStatus('current')
mfSessionSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 24, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSessionSessionID.setStatus('current')
mfSessionSessionName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 24, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSessionSessionName.setStatus('current')
mfSessionSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 24, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("userLoggedOn", 0), ("connectedToClient", 1), ("connectingToClient", 2), ("shadowingOtherSession", 3), ("loggedOnButNoClient", 4), ("waitingForConnection", 5), ("listeningForConnection", 6), ("resetInProgress", 7), ("downDueToError", 8), ("initializing", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSessionSessionState.setStatus('current')
mfSessionSessionUser = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 24, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSessionSessionUser.setStatus('current')
metaframeSoftwareTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 25), )
if mibBuilder.loadTexts: metaframeSoftwareTable.setStatus('current')
metaframeSoftwareEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 25, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfSoftwareIndex"))
if mibBuilder.loadTexts: metaframeSoftwareEntry.setStatus('current')
mfSoftwareIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSoftwareIndex.setStatus('current')
mfSoftwareFeatureReleaseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 25, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSoftwareFeatureReleaseLevel.setStatus('current')
mfSoftwareInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 25, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSoftwareInstallDate.setStatus('current')
mfSoftwareMFWinProductCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 25, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSoftwareMFWinProductCode.setStatus('current')
mfSoftwareProductName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 25, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSoftwareProductName.setStatus('current')
mfSoftwareReleaseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 25, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSoftwareReleaseLevel.setStatus('current')
mfSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 25, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfSoftwareVersion.setStatus('current')
metaframeWinApplicationTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26), )
if mibBuilder.loadTexts: metaframeWinApplicationTable.setStatus('current')
metaframeWinApplicationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfWinApplIndex"))
if mibBuilder.loadTexts: metaframeWinApplicationEntry.setStatus('current')
mfWinApplIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplIndex.setStatus('current')
mfWinApplApplicationID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplApplicationID.setStatus('current')
mfWinApplAppVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplAppVersion.setStatus('current')
mfWinApplBrowserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplBrowserName.setStatus('current')
mfWinApplDefaultEncryption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknownEncryption", 0), ("basicEncryptionRC5Logon", 1), ("rc540Bit", 2), ("rc556Bit", 3), ("rc5128Bit", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplDefaultEncryption.setStatus('current')
mfWinApplDefaultInitProg = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplDefaultInitProg.setStatus('current')
mfWinApplDefaultSoundType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknownSoundType", 0), ("noSound", 1), ("basicSound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplDefaultSoundType.setStatus('current')
mfWinApplDefaultWindowColor = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknownWindowColor", 0), ("a16Colors", 1), ("a256Colors", 2), ("a65536Colors", 3), ("a16MillionColors", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplDefaultWindowColor.setStatus('current')
mfWinApplDefaultWindowHeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplDefaultWindowHeight.setStatus('current')
mfWinApplDefaultWindowScale = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplDefaultWindowScale.setStatus('current')
mfWinApplDefaultWindowType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknownWindowType", 0), ("a640x480", 1), ("a800x600", 2), ("a1024x768", 3), ("a1280x1024", 4), ("a1600x1200", 5), ("custom", 6), ("percent", 7), ("fullscreen", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplDefaultWindowType.setStatus('current')
mfWinApplDefaultWindowWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplDefaultWindowWidth.setStatus('current')
mfWinApplDefaultWorkDir = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplDefaultWorkDir.setStatus('current')
mfWinApplDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplDescription.setStatus('current')
mfWinApplDesktopIntegrate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noDesktopIntegrate", 0), ("startMenu", 1), ("desktop", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplDesktopIntegrate.setStatus('current')
mfWinApplDistinguishedName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplDistinguishedName.setStatus('current')
mfWinApplEnableApp = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplEnableApp.setStatus('current')
mfWinApplFarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplFarmName.setStatus('current')
mfWinApplMFAttributes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noMetaFrameAttribute", 0), ("maximizeOnStartup", 1), ("hideTitleBar", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplMFAttributes.setStatus('current')
mfWinApplName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplName.setStatus('current')
mfWinApplParentFolderDN = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplParentFolderDN.setStatus('current')
mfWinApplPNAttributes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplPNAttributes.setStatus('current')
mfWinApplPNFolder = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplPNFolder.setStatus('current')
mfWinApplPublishingFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noEnumerationMask", 0), ("browserEnumeration", 1), ("pnEnumeration", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplPublishingFlags.setStatus('current')
mfWinApplReadOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 26, 1, 25), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinApplReadOnly.setStatus('current')
metaframeWinFarmTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27), )
if mibBuilder.loadTexts: metaframeWinFarmTable.setStatus('current')
metaframeWinFarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "mfWinFarmIndex"))
if mibBuilder.loadTexts: metaframeWinFarmEntry.setStatus('current')
mfWinFarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmIndex.setStatus('current')
mfWinFarmAlternateCachingMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmAlternateCachingMethod.setStatus('current')
mfWinFarmDCRespondToClientBdcst = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmDCRespondToClientBdcst.setStatus('current')
mfWinFarmDegradationBias = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("degradeResolutionFirst", 1), ("degradeColorDepthFirst", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmDegradationBias.setStatus('current')
mfWinFarmDisableClientLocalTmEst = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmDisableClientLocalTmEst.setStatus('current')
mfWinFarmDiscardRedundantGraphic = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmDiscardRedundantGraphic.setStatus('current')
mfWinFarmEnableAutoClientReconn = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmEnableAutoClientReconn.setStatus('current')
mfWinFarmEnableDNSAddrResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmEnableDNSAddrResolution.setStatus('current')
mfWinFarmEnableSNMPAgent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmEnableSNMPAgent.setStatus('current')
mfWinFarmFarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmFarmName.setStatus('current')
mfWinFarmICAVideoBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmICAVideoBufferSize.setStatus('current')
mfWinFarmLegacyDisplayCompatMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmLegacyDisplayCompatMode.setStatus('current')
mfWinFarmLegacyServerCompatMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmLegacyServerCompatMode.setStatus('current')
mfWinFarmLogAutoReconnectAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmLogAutoReconnectAttempt.setStatus('current')
mfWinFarmLogOverLimitDenials = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmLogOverLimitDenials.setStatus('current')
mfWinFarmMaxConnectionsPerUser = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmMaxConnectionsPerUser.setStatus('current')
mfWinFarmNotifyDegradation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmNotifyDegradation.setStatus('current')
mfWinFarmRASRespondToClientBdcst = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmRASRespondToClientBdcst.setStatus('current')
mfWinFarmSNMPDisconnectTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmSNMPDisconnectTrap.setStatus('current')
mfWinFarmSNMPLogoffTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmSNMPLogoffTrap.setStatus('current')
mfWinFarmSNMPLogonTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmSNMPLogonTrap.setStatus('current')
mfWinFarmSNMPThresholdExceedTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmSNMPThresholdExceedTrap.setStatus('current')
mfWinFarmSNMPThresholdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmSNMPThresholdValue.setStatus('current')
mfWinFarmUseClientLocalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 1, 27, 1, 24), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfWinFarmUseClientLocalTime.setStatus('current')
ciitrixWmiCitrixLicensing = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2))
if mibBuilder.loadTexts: ciitrixWmiCitrixLicensing.setStatus('current')
citrixGTLicenseTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 1), )
if mibBuilder.loadTexts: citrixGTLicenseTable.setStatus('current')
citrixGTLicenseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 1, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "ctxGTLicenseIndex"))
if mibBuilder.loadTexts: citrixGTLicenseEntry.setStatus('current')
ctxGTLicenseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicenseIndex.setStatus('current')
ctxGTLicenseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicenseCount.setStatus('current')
ctxGTLicenseExpirationDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 1, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicenseExpirationDate.setStatus('current')
ctxGTLicenseLicenseType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 1, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicenseLicenseType.setStatus('current')
ctxGTLicenseOverdraft = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicenseOverdraft.setStatus('current')
ctxGTLicensePLD = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 1, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePLD.setStatus('current')
ctxGTLicensePLDFullName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 1, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePLDFullName.setStatus('current')
ctxGTLicenseSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 1, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicenseSerialNumber.setStatus('current')
ctxGTLicenseSubscriptionDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 1, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicenseSubscriptionDate.setStatus('current')
citrixGTLicensePoolTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2), )
if mibBuilder.loadTexts: citrixGTLicensePoolTable.setStatus('current')
citrixGTLicensePoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "ctxGTLicensePoolIndex"))
if mibBuilder.loadTexts: citrixGTLicensePoolEntry.setStatus('current')
ctxGTLicensePoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePoolIndex.setStatus('current')
ctxGTLicensePoolCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePoolCount.setStatus('current')
ctxGTLicensePoolDUPGROUP = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePoolDUPGROUP.setStatus('current')
ctxGTLicensePoolFLOATOK = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePoolFLOATOK.setStatus('current')
ctxGTLicensePoolHOSTBASED = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePoolHOSTBASED.setStatus('current')
ctxGTLicensePoolHOSTID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePoolHOSTID.setStatus('current')
ctxGTLicensePoolInUseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePoolInUseCount.setStatus('current')
ctxGTLicensePoolLicenseType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePoolLicenseType.setStatus('current')
ctxGTLicensePoolOverdraft = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePoolOverdraft.setStatus('current')
ctxGTLicensePoolPLATFORMS = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePoolPLATFORMS.setStatus('current')
ctxGTLicensePoolPLD = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePoolPLD.setStatus('current')
ctxGTLicensePoolPLDFullName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePoolPLDFullName.setStatus('current')
ctxGTLicensePoolPooledAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePoolPooledAvailable.setStatus('current')
ctxGTLicensePoolSubscriptionDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2, 1, 14), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePoolSubscriptionDate.setStatus('current')
ctxGTLicensePoolUSERBASED = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePoolUSERBASED.setStatus('current')
ctxGTLicensePoolVendorString = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 2, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxGTLicensePoolVendorString.setStatus('current')
citrixGTLicensesInLicensePlTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 3), )
if mibBuilder.loadTexts: citrixGTLicensesInLicensePlTable.setStatus('current')
citrixGTLicensesInLicensePlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 3, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "ctxgtllpIndex"))
if mibBuilder.loadTexts: citrixGTLicensesInLicensePlEntry.setStatus('current')
ctxgtllpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxgtllpIndex.setStatus('current')
ctxgtllpLicense = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 3, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxgtllpLicense.setStatus('current')
ctxgtllpPool = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 3, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxgtllpPool.setStatus('current')
citrixLicenseSchemaVersionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 4), )
if mibBuilder.loadTexts: citrixLicenseSchemaVersionTable.setStatus('current')
citrixLicenseSchemaVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 4, 1), ).setIndexNames((0, "INFORMANT-WMI-CITRIX", "ctxLicensingSchemaVersionIndex"))
if mibBuilder.loadTexts: citrixLicenseSchemaVersionEntry.setStatus('current')
ctxLicensingSchemaVersionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxLicensingSchemaVersionIndex.setStatus('current')
ctxLicensingSchemaVersionVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 42, 2, 4, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctxLicensingSchemaVersionVersion.setStatus('current')
mibBuilder.exportSymbols("INFORMANT-WMI-CITRIX", mfWinFarmLegacyServerCompatMode=mfWinFarmLegacyServerCompatMode, mfWinApplDefaultWindowColor=mfWinApplDefaultWindowColor, mfApplicationLoadLevelIndex=mfApplicationLoadLevelIndex, mfICAClientClientProductID=mfICAClientClientProductID, mfWinFarmSNMPLogoffTrap=mfWinFarmSNMPLogoffTrap, mfWinFarmNotifyDegradation=mfWinFarmNotifyDegradation, ctxgtllpPool=ctxgtllpPool, ctxGroupAccountType=ctxGroupAccountType, mfdshWhen=mfdshWhen, mfICAClientClientEncryption=mfICAClientClientEncryption, ctxServersInFolderDependent=ctxServersInFolderDependent, mfaposWinApp=mfaposWinApp, mfWinFarmLogAutoReconnectAttempt=mfWinFarmLogAutoReconnectAttempt, PYSNMP_MODULE_ID=citrixWmi, citrixZoneEntry=citrixZoneEntry, ctxGTLicensePoolOverdraft=ctxGTLicensePoolOverdraft, ctxLicensingSchemaVersionVersion=ctxLicensingSchemaVersionVersion, ctxGTLicenseCount=ctxGTLicenseCount, mfICAClientClientCacheXms=mfICAClientClientCacheXms, mfWinApplDefaultInitProg=mfWinApplDefaultInitProg, ctxGTLicensePoolPooledAvailable=ctxGTLicensePoolPooledAvailable, ctxApplicationFolderIndex=ctxApplicationFolderIndex, metaframeServerLoadLevelEntry=metaframeServerLoadLevelEntry, mfWinFarmUseClientLocalTime=mfWinFarmUseClientLocalTime, ctxUserIndex=ctxUserIndex, mfICAClientClientHRes=mfICAClientClientHRes, metaframeProcessEntry=metaframeProcessEntry, citrixApplicationFolderEntry=citrixApplicationFolderEntry, ctxServersInZoneIndex=ctxServersInZoneIndex, mfWinApplDefaultWindowHeight=mfWinApplDefaultWindowHeight, mfProcessSessionID=mfProcessSessionID, mfSoftwareProductName=mfSoftwareProductName, mfServerDomain=mfServerDomain, mfInstalledSoftwareSoftware=mfInstalledSoftwareSoftware, citrixUsersInGroupTable=citrixUsersInGroupTable, citrixUserTable=citrixUserTable, mfaposCtxServer=mfaposCtxServer, mfarosServer=mfarosServer, mfWinFarmMaxConnectionsPerUser=mfWinFarmMaxConnectionsPerUser, mfWinApplDistinguishedName=mfWinApplDistinguishedName, ctxGTLicensePoolHOSTID=ctxGTLicensePoolHOSTID, mfServerServerName=mfServerServerName, ctxServerFolderFolderDN=ctxServerFolderFolderDN, ctxGTLicenseSubscriptionDate=ctxGTLicenseSubscriptionDate, citrixGTLicensesInLicensePlTable=citrixGTLicensesInLicensePlTable, metaframeApplLoadLevelTable=metaframeApplLoadLevelTable, mfWinApplPNFolder=mfWinApplPNFolder, metaframeWinApplicationEntry=metaframeWinApplicationEntry, metaframeServerEntry=metaframeServerEntry, mfICAClientClientDirectory=mfICAClientClientDirectory, mfServerLoadLevelIndex=mfServerLoadLevelIndex, citrixGTLicensesInLicensePlEntry=citrixGTLicensesInLicensePlEntry, ctxGroupGroupName=ctxGroupGroupName, mfSessionNumberOfApps=mfSessionNumberOfApps, mfICAClientClientCacheTiny=mfICAClientClientCacheTiny, mfApplicationLoadLevelServerName=mfApplicationLoadLevelServerName, mfSessionServerName=mfSessionServerName, metaframeDisconnectSessionEntry=metaframeDisconnectSessionEntry, metaframeInstalledSoftwareEntry=metaframeInstalledSoftwareEntry, citrixAccountAuthorityEntry=citrixAccountAuthorityEntry, metaframeAppsInSessionEntry=metaframeAppsInSessionEntry, citrixWmiCitrix=citrixWmiCitrix, mfWinApplDescription=mfWinApplDescription, mfWinFarmAlternateCachingMethod=mfWinFarmAlternateCachingMethod, citrixGroupEntry=citrixGroupEntry, citrixServersInFolderEntry=citrixServersInFolderEntry, metaframeSessionTable=metaframeSessionTable, mfSessionConnectTime=mfSessionConnectTime, metaframeAppsInSessionTable=metaframeAppsInSessionTable, mfSessionClient=mfSessionClient, mfarosApplication=mfarosApplication, mfAppsInFolderDependent=mfAppsInFolderDependent, mfAppsInSessionDependent=mfAppsInSessionDependent, mfProcessesInSessionAntecedent=mfProcessesInSessionAntecedent, mfWinFarmEnableDNSAddrResolution=mfWinFarmEnableDNSAddrResolution, ctxGTLicenseExpirationDate=ctxGTLicenseExpirationDate, mfServerIndex=mfServerIndex, mfProcessUserName=mfProcessUserName, mfICAClientClientName=mfICAClientClientName, ctxAccountAuthorityIndex=ctxAccountAuthorityIndex, mfSchemaVersionIndex=mfSchemaVersionIndex, mfWinFarmFarmName=mfWinFarmFarmName, mfSoftwareMFWinProductCode=mfSoftwareMFWinProductCode, mfSchemaVersionVersion=mfSchemaVersionVersion, mfAppsInSessionAntecedent=mfAppsInSessionAntecedent, citrixServersInFolderTable=citrixServersInFolderTable, mfApplicationLoadLevelAppName=mfApplicationLoadLevelAppName, mfWinApplApplicationID=mfWinApplApplicationID, ctxGroupAccAuthority=ctxGroupAccAuthority, mfServerZoneRanking=mfServerZoneRanking, ctxAccountAuthorityName=ctxAccountAuthorityName, ctxServersInZoneZone=ctxServersInZoneZone, mfWinApplReadOnly=mfWinApplReadOnly, metaframeSoftwareTable=metaframeSoftwareTable, ctxGTLicensePoolLicenseType=ctxGTLicensePoolLicenseType, mfWinApplBrowserName=mfWinApplBrowserName, mfProcessProcessState=mfProcessProcessState, citrixGTLicenseTable=citrixGTLicenseTable, metaframeApplPublishOnSvrEntry=metaframeApplPublishOnSvrEntry, citrixUsersInGroupEntry=citrixUsersInGroupEntry, mfProcessesInSessionDependent=mfProcessesInSessionDependent, metaframeAppsForGroupTable=metaframeAppsForGroupTable, mfWinFarmDiscardRedundantGraphic=mfWinFarmDiscardRedundantGraphic, metaframeApplPublishOnSvrTable=metaframeApplPublishOnSvrTable, mfInstalledSoftwareIndex=mfInstalledSoftwareIndex, mfWinFarmLogOverLimitDenials=mfWinFarmLogOverLimitDenials, metaframeAppsForGroupEntry=metaframeAppsForGroupEntry, mfWinFarmEnableAutoClientReconn=mfWinFarmEnableAutoClientReconn, ctxGTLicensePoolFLOATOK=ctxGTLicensePoolFLOATOK, mfWinApplPNAttributes=mfWinApplPNAttributes, ctxGTLicensePoolDUPGROUP=ctxGTLicensePoolDUPGROUP, mfSoftwareVersion=mfSoftwareVersion, ctxUsersInGroupDependent=ctxUsersInGroupDependent, metaframeICAClientEntry=metaframeICAClientEntry, ctxGTLicenseOverdraft=ctxGTLicenseOverdraft, ctxApplicationFolderFolderName=ctxApplicationFolderFolderName, mfWinApplDefaultWindowScale=mfWinApplDefaultWindowScale, mfWinFarmDegradationBias=mfWinFarmDegradationBias, mfICAClientClientModemName=mfICAClientClientModemName, mfSessionIndex=mfSessionIndex, ctxServersInFolderIndex=ctxServersInFolderIndex, mfWinApplDefaultWindowType=mfWinApplDefaultWindowType, mfWinFarmDCRespondToClientBdcst=mfWinFarmDCRespondToClientBdcst, citrixServersInZoneEntry=citrixServersInZoneEntry, mfICAClientClientCacheDisk=mfICAClientClientCacheDisk, metaframeInstalledSoftwareTable=metaframeInstalledSoftwareTable, mfAppsInFolderIndex=mfAppsInFolderIndex, ctxLicensingSchemaVersionIndex=ctxLicensingSchemaVersionIndex, metaframeAppsInFolderEntry=metaframeAppsInFolderEntry, metaframeSoftwareEntry=metaframeSoftwareEntry, metaframeSchemaVersionTable=metaframeSchemaVersionTable, mfWinApplFarmName=mfWinApplFarmName, metaframeProcessesInSessionTable=metaframeProcessesInSessionTable, mfWinApplAppVersion=mfWinApplAppVersion, ctxGTLicensePLDFullName=ctxGTLicensePLDFullName, citrixGTLicensePoolEntry=citrixGTLicensePoolEntry, citrixServerFolderTable=citrixServerFolderTable, mfProcessesInSessionIndex=mfProcessesInSessionIndex, mfdshHowMany=mfdshHowMany, citrixServersInZoneTable=citrixServersInZoneTable, ctxApplicationFolderFolderDN=ctxApplicationFolderFolderDN, ctxGTLicensePLD=ctxGTLicensePLD, ctxUsersInGroupIndex=ctxUsersInGroupIndex, mfWinApplDefaultSoundType=mfWinApplDefaultSoundType, mfWinApplIndex=mfWinApplIndex, metaframeServerTable=metaframeServerTable, citrixGTLicensePoolTable=citrixGTLicensePoolTable, ctxServersInZoneServer=ctxServersInZoneServer, citrixServerFolderEntry=citrixServerFolderEntry, ctxServerFolderFolderName=ctxServerFolderFolderName, mfWinFarmSNMPDisconnectTrap=mfWinFarmSNMPDisconnectTrap, mfServerLoadLevelLoadLevel=mfServerLoadLevelLoadLevel, ctxGTLicenseIndex=ctxGTLicenseIndex, ctxGTLicensePoolInUseCount=ctxGTLicensePoolInUseCount, citrixLicenseSchemaVersionEntry=citrixLicenseSchemaVersionEntry, mfProcessProcessID=mfProcessProcessID, mfICAClientClientBuild=mfICAClientClientBuild, metaframeWinFarmEntry=metaframeWinFarmEntry, mfServerLoadLevelServerName=mfServerLoadLevelServerName, mfSessionLogonTime=mfSessionLogonTime, mfProcessProcessName=mfProcessProcessName, mfICAClientClientDimVersion=mfICAClientClientDimVersion, mfSessionSessionID=mfSessionSessionID, ciitrixWmiCitrixLicensing=ciitrixWmiCitrixLicensing, mfICAClientClientAddress=mfICAClientClientAddress, mfWinApplName=mfWinApplName, ctxGTLicensePoolCount=ctxGTLicensePoolCount, mfAppsInFolderAntecedent=mfAppsInFolderAntecedent, mfarosProcessId=mfarosProcessId, mfdshIndex=mfdshIndex, mfICAClientClientCacheLowMem=mfICAClientClientCacheLowMem, mfSessionSessionState=mfSessionSessionState, mfICAClientClientDimBitmapMin=mfICAClientClientDimBitmapMin, mfSessionCurrentTime=mfSessionCurrentTime, mfServerNumOfDisconnectSessions=mfServerNumOfDisconnectSessions, mfWinFarmLegacyDisplayCompatMode=mfWinFarmLegacyDisplayCompatMode, ctxServerFolderIndex=ctxServerFolderIndex, ctxServersInFolderAntecedent=ctxServersInFolderAntecedent, mfSessionDisconnectTime=mfSessionDisconnectTime, mfAppsInSessionIndex=mfAppsInSessionIndex, mfWinFarmSNMPThresholdValue=mfWinFarmSNMPThresholdValue, mfWinApplDefaultEncryption=mfWinApplDefaultEncryption, mfWinFarmSNMPThresholdExceedTrap=mfWinFarmSNMPThresholdExceedTrap, mfProcessServerName=mfProcessServerName, mfICAClientClientVRes=mfICAClientClientVRes, mfServerFarmName=mfServerFarmName, ctxGTLicensePoolHOSTBASED=ctxGTLicensePoolHOSTBASED, ctxGTLicensePoolPLD=ctxGTLicensePoolPLD, mfWinApplPublishingFlags=mfWinApplPublishingFlags, ctxZoneDataCollector=ctxZoneDataCollector, mfWinApplDesktopIntegrate=mfWinApplDesktopIntegrate, mfWinApplDefaultWindowWidth=mfWinApplDefaultWindowWidth, mfSessionSessionUser=mfSessionSessionUser, mfICAClientClientHardwareID=mfICAClientClientHardwareID, mfServerNumberOfActiveSessions=mfServerNumberOfActiveSessions, mfSoftwareFeatureReleaseLevel=mfSoftwareFeatureReleaseLevel, mfSoftwareInstallDate=mfSoftwareInstallDate, metaframeProcessTable=metaframeProcessTable, mfWinApplMFAttributes=mfWinApplMFAttributes, citrixLicenseSchemaVersionTable=citrixLicenseSchemaVersionTable, mfAppsForGroupAntecedent=mfAppsForGroupAntecedent, ctxGTLicenseSerialNumber=ctxGTLicenseSerialNumber, ctxgtllpLicense=ctxgtllpLicense, metaframeWinApplicationTable=metaframeWinApplicationTable, metaframeSessionEntry=metaframeSessionEntry, mfWinApplParentFolderDN=mfWinApplParentFolderDN, ctxZoneNumServersInZone=ctxZoneNumServersInZone, ctxUserAccAuthority=ctxUserAccAuthority, ctxGTLicensePoolSubscriptionDate=ctxGTLicensePoolSubscriptionDate, mfICAClientClientAddrFamily=mfICAClientClientAddrFamily, mfaposIndex=mfaposIndex, mfWinFarmICAVideoBufferSize=mfWinFarmICAVideoBufferSize, ctxUserAccountType=ctxUserAccountType, mfICAClientClientProductIDValue=mfICAClientClientProductIDValue, ctxGTLicensePoolUSERBASED=ctxGTLicensePoolUSERBASED, ctxGTLicensePoolVendorString=ctxGTLicensePoolVendorString, ctxAccountAuthorityType=ctxAccountAuthorityType, mfInstalledSoftwareServer=mfInstalledSoftwareServer, ctxUsersInGroupAntecedent=ctxUsersInGroupAntecedent, metaframeICAClientTable=metaframeICAClientTable, metaframeApplRunOnServerEntry=metaframeApplRunOnServerEntry, mfICAClientClientColorDepth=mfICAClientClientColorDepth, ctxGroupIndex=ctxGroupIndex, mfProcessIndex=mfProcessIndex, citrixUserEntry=citrixUserEntry, citrixZoneTable=citrixZoneTable, ctxZoneIndex=ctxZoneIndex, mfICAClientClientDimCacheSize=mfICAClientClientDimCacheSize, mfWinFarmDisableClientLocalTmEst=mfWinFarmDisableClientLocalTmEst, citrixGroupTable=citrixGroupTable, mfSessionLastInputTime=mfSessionLastInputTime, mfSessionSessionName=mfSessionSessionName, citrixApplicationFolderTable=citrixApplicationFolderTable, mfServerIPAddress=mfServerIPAddress, mfServerLoginsEnabled=mfServerLoginsEnabled, mfServerNumberOfSessions=mfServerNumberOfSessions, mfServerZoneName=mfServerZoneName, citrixWmi=citrixWmi, metaframeSchemaVersionEntry=metaframeSchemaVersionEntry, ctxGTLicensePoolIndex=ctxGTLicensePoolIndex, metaframeAppsInFolderTable=metaframeAppsInFolderTable, mfWinFarmEnableSNMPAgent=mfWinFarmEnableSNMPAgent, mfAppsForGroupIndex=mfAppsForGroupIndex, mfWinFarmIndex=mfWinFarmIndex, metaframeServerLoadLevelTable=metaframeServerLoadLevelTable, mfSoftwareReleaseLevel=mfSoftwareReleaseLevel, mfApplicationLoadLevelLoadLevel=mfApplicationLoadLevelLoadLevel, mfServerServerType=mfServerServerType, ctxUserUserName=ctxUserUserName, metaframeWinFarmTable=metaframeWinFarmTable, mfWinApplEnableApp=mfWinApplEnableApp, mfarosIndex=mfarosIndex, mfICAClientClientLicense=mfICAClientClientLicense, metaframeDisconnectSessionTable=metaframeDisconnectSessionTable)
mibBuilder.exportSymbols("INFORMANT-WMI-CITRIX", citrixAccountAuthorityTable=citrixAccountAuthorityTable, mfICAClientICABufLen=mfICAClientICABufLen, ctxgtllpIndex=ctxgtllpIndex, ctxGTLicenseLicenseType=ctxGTLicenseLicenseType, ctxZoneZoneName=ctxZoneZoneName, ctxGTLicensePoolPLATFORMS=ctxGTLicensePoolPLATFORMS, mfWinFarmSNMPLogonTrap=mfWinFarmSNMPLogonTrap, mfSoftwareIndex=mfSoftwareIndex, ctxGTLicensePoolPLDFullName=ctxGTLicensePoolPLDFullName, mfWinApplDefaultWorkDir=mfWinApplDefaultWorkDir, metaframeApplLoadLevelEntry=metaframeApplLoadLevelEntry, mfICAClientIndex=mfICAClientIndex, metaframeProcessesInSessionEntry=metaframeProcessesInSessionEntry, mfAppsForGroupDependent=mfAppsForGroupDependent, metaframeApplRunOnServerTable=metaframeApplRunOnServerTable, citrixGTLicenseEntry=citrixGTLicenseEntry, mfWinFarmRASRespondToClientBdcst=mfWinFarmRASRespondToClientBdcst)
