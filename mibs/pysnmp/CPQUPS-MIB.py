#
# PySNMP MIB module CPQUPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CPQUPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:12:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
compaq, cpqHoTrapFlags = mibBuilder.importSymbols("CPQHOST-MIB", "compaq", "cpqHoTrapFlags")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
sysName, = mibBuilder.importSymbols("SNMPv2-MIB", "sysName")
Counter32, Bits, NotificationType, Integer32, ModuleIdentity, ObjectIdentity, iso, enterprises, Unsigned32, MibIdentifier, IpAddress, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Bits", "NotificationType", "Integer32", "ModuleIdentity", "ObjectIdentity", "iso", "enterprises", "Unsigned32", "MibIdentifier", "IpAddress", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "TimeTicks", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cpqUps = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 12))
cpqUpsMibRev = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 12, 1))
cpqUpsComponent = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 12, 2))
cpqUpsInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 12, 2, 1))
cpqUpsBasic = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 12, 2, 2))
cpqUpsFamily = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 12, 2, 3))
cpqUpsOsCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 12, 2, 1, 4))
cpqUpsMibRevMajor = MibScalar((1, 3, 6, 1, 4, 1, 232, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqUpsMibRevMajor.setStatus('mandatory')
cpqUpsMibRevMinor = MibScalar((1, 3, 6, 1, 4, 1, 232, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqUpsMibRevMinor.setStatus('mandatory')
cpqUpsMibCondition = MibScalar((1, 3, 6, 1, 4, 1, 232, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("degraded", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqUpsMibCondition.setStatus('mandatory')
cpqUpsOsCommonPollFreq = MibScalar((1, 3, 6, 1, 4, 1, 232, 12, 2, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqUpsOsCommonPollFreq.setStatus('mandatory')
cpqUpsOsCommonModuleTable = MibTable((1, 3, 6, 1, 4, 1, 232, 12, 2, 1, 4, 2), )
if mibBuilder.loadTexts: cpqUpsOsCommonModuleTable.setStatus('mandatory')
cpqUpsOsCommonModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 232, 12, 2, 1, 4, 2, 1), ).setIndexNames((0, "CPQUPS-MIB", "cpqUpsOsCommonModuleIndex"))
if mibBuilder.loadTexts: cpqUpsOsCommonModuleEntry.setStatus('mandatory')
cpqUpsOsCommonModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 12, 2, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqUpsOsCommonModuleIndex.setStatus('mandatory')
cpqUpsOsCommonModuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 12, 2, 1, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqUpsOsCommonModuleName.setStatus('mandatory')
cpqUpsOsCommonModuleVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 12, 2, 1, 4, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqUpsOsCommonModuleVersion.setStatus('mandatory')
cpqUpsOsCommonModuleDate = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 12, 2, 1, 4, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 7)).setFixedLength(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqUpsOsCommonModuleDate.setStatus('mandatory')
cpqUpsOsCommonModulePurpose = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 12, 2, 1, 4, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqUpsOsCommonModulePurpose.setStatus('mandatory')
cpqUpsLineStatus = MibScalar((1, 3, 6, 1, 4, 1, 232, 12, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqUpsLineStatus.setStatus('mandatory')
cpqUpsName = MibScalar((1, 3, 6, 1, 4, 1, 232, 12, 2, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqUpsName.setStatus('mandatory')
cpqUpsEstimatedBatteryLife = MibScalar((1, 3, 6, 1, 4, 1, 232, 12, 2, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqUpsEstimatedBatteryLife.setStatus('mandatory')
cpqUpsAutoShutdownDelay = MibScalar((1, 3, 6, 1, 4, 1, 232, 12, 2, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqUpsAutoShutdownDelay.setStatus('mandatory')
cpqUpsLaunchCommand = MibScalar((1, 3, 6, 1, 4, 1, 232, 12, 2, 2, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 250))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqUpsLaunchCommand.setStatus('mandatory')
cpqUpsAlarm = MibScalar((1, 3, 6, 1, 4, 1, 232, 12, 2, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 250))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqUpsAlarm.setStatus('mandatory')
cpqUpsMemberTable = MibTable((1, 3, 6, 1, 4, 1, 232, 12, 2, 3, 1), )
if mibBuilder.loadTexts: cpqUpsMemberTable.setStatus('mandatory')
cpqUpsMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 232, 12, 2, 3, 1, 1), ).setIndexNames((0, "CPQUPS-MIB", "cpqUpsMemberIndex"))
if mibBuilder.loadTexts: cpqUpsMemberEntry.setStatus('mandatory')
cpqUpsMemberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 12, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqUpsMemberIndex.setStatus('mandatory')
cpqUpsMemberName = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 12, 2, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqUpsMemberName.setStatus('mandatory')
cpqUpsMemberCommunityStr = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 12, 2, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqUpsMemberCommunityStr.setStatus('mandatory')
cpqUpsAddMemberName = MibScalar((1, 3, 6, 1, 4, 1, 232, 12, 2, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqUpsAddMemberName.setStatus('mandatory')
cpqUpsAddMemberCommunityStr = MibScalar((1, 3, 6, 1, 4, 1, 232, 12, 2, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqUpsAddMemberCommunityStr.setStatus('mandatory')
cpqUpsLineFailed = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,12001)).setObjects(("CPQUPS-MIB", "cpqUpsEstimatedBatteryLife"))
cpqUpsLineOk = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,12002))
cpqUpsShutdown = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,12003))
cpqUpsConfirmation = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,12004))
cpqUpsBatteryLow = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,12005))
cpqUps2LineFailed = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,12006)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQHOST-MIB", "cpqHoTrapFlags"), ("CPQUPS-MIB", "cpqUpsEstimatedBatteryLife"))
cpqUps2LineOk = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,12007)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQHOST-MIB", "cpqHoTrapFlags"))
cpqUps2Shutdown = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,12008)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQHOST-MIB", "cpqHoTrapFlags"))
cpqUps2Confirmation = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,12009)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQHOST-MIB", "cpqHoTrapFlags"))
cpqUps2BatteryLow = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,12010)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQHOST-MIB", "cpqHoTrapFlags"))
cpqUpsOverload = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,12011)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQHOST-MIB", "cpqHoTrapFlags"))
cpqUpsPendingBatteryFailure = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,12012)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQHOST-MIB", "cpqHoTrapFlags"))
cpqUpsGenericCritical = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,12013)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQHOST-MIB", "cpqHoTrapFlags"), ("CPQUPS-MIB", "cpqUpsAlarm"))
cpqUpsGenericInfo = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,12014)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQHOST-MIB", "cpqHoTrapFlags"), ("CPQUPS-MIB", "cpqUpsAlarm"))
mibBuilder.exportSymbols("CPQUPS-MIB", cpqUpsOsCommonModuleName=cpqUpsOsCommonModuleName, cpqUpsMibRevMajor=cpqUpsMibRevMajor, cpqUps2LineFailed=cpqUps2LineFailed, cpqUpsConfirmation=cpqUpsConfirmation, cpqUpsAlarm=cpqUpsAlarm, cpqUpsBatteryLow=cpqUpsBatteryLow, cpqUps2Confirmation=cpqUps2Confirmation, cpqUpsLineOk=cpqUpsLineOk, cpqUpsOsCommonModuleTable=cpqUpsOsCommonModuleTable, cpqUpsAddMemberName=cpqUpsAddMemberName, cpqUps=cpqUps, cpqUpsMemberCommunityStr=cpqUpsMemberCommunityStr, cpqUpsLineStatus=cpqUpsLineStatus, cpqUpsAddMemberCommunityStr=cpqUpsAddMemberCommunityStr, cpqUpsMemberTable=cpqUpsMemberTable, cpqUpsMibCondition=cpqUpsMibCondition, cpqUpsEstimatedBatteryLife=cpqUpsEstimatedBatteryLife, cpqUpsLineFailed=cpqUpsLineFailed, cpqUpsMemberIndex=cpqUpsMemberIndex, cpqUps2LineOk=cpqUps2LineOk, cpqUpsComponent=cpqUpsComponent, cpqUps2BatteryLow=cpqUps2BatteryLow, cpqUps2Shutdown=cpqUps2Shutdown, cpqUpsAutoShutdownDelay=cpqUpsAutoShutdownDelay, cpqUpsOsCommonModuleDate=cpqUpsOsCommonModuleDate, cpqUpsOsCommonModuleEntry=cpqUpsOsCommonModuleEntry, cpqUpsFamily=cpqUpsFamily, cpqUpsPendingBatteryFailure=cpqUpsPendingBatteryFailure, cpqUpsOsCommonModulePurpose=cpqUpsOsCommonModulePurpose, cpqUpsShutdown=cpqUpsShutdown, cpqUpsOsCommonModuleVersion=cpqUpsOsCommonModuleVersion, cpqUpsOverload=cpqUpsOverload, cpqUpsOsCommonModuleIndex=cpqUpsOsCommonModuleIndex, cpqUpsName=cpqUpsName, cpqUpsInterface=cpqUpsInterface, cpqUpsOsCommonPollFreq=cpqUpsOsCommonPollFreq, cpqUpsMibRev=cpqUpsMibRev, cpqUpsBasic=cpqUpsBasic, cpqUpsMemberEntry=cpqUpsMemberEntry, cpqUpsGenericCritical=cpqUpsGenericCritical, cpqUpsMemberName=cpqUpsMemberName, cpqUpsLaunchCommand=cpqUpsLaunchCommand, cpqUpsGenericInfo=cpqUpsGenericInfo, cpqUpsMibRevMinor=cpqUpsMibRevMinor, cpqUpsOsCommon=cpqUpsOsCommon)
