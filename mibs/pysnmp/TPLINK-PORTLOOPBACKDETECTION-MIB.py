#
# PySNMP MIB module TPLINK-PORTLOOPBACKDETECTION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-PORTLOOPBACKDETECTION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:18:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, TimeTicks, Gauge32, MibIdentifier, Integer32, IpAddress, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, NotificationType, Counter64, Bits, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "TimeTicks", "Gauge32", "MibIdentifier", "Integer32", "IpAddress", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "NotificationType", "Counter64", "Bits", "Unsigned32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
TPRowStatus, = mibBuilder.importSymbols("TPLINK-TC-MIB", "TPRowStatus")
tplinkLoopbackDetectionMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 80))
tplinkLoopbackDetectionMIB.setRevisions(('2009-08-27 00:00',))
if mibBuilder.loadTexts: tplinkLoopbackDetectionMIB.setLastUpdated('200908270000Z')
if mibBuilder.loadTexts: tplinkLoopbackDetectionMIB.setOrganization('TPLINK')
tplinkLoopbackDetectionMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 80, 1))
tplinkLoopbackDetectionNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 80, 2))
loopbackStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 11863, 6, 80, 2, 1))
if mibBuilder.loadTexts: loopbackStatusChange.setStatus('current')
loopbackDetectionEnable = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 80, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: loopbackDetectionEnable.setStatus('current')
loopbackDetectionInterval = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 80, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: loopbackDetectionInterval.setStatus('current')
loopbackDetectionRecoveryTime = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 80, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: loopbackDetectionRecoveryTime.setStatus('current')
loopbackDetectionCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 80, 1, 4), )
if mibBuilder.loadTexts: loopbackDetectionCtrlTable.setStatus('current')
loopbackDetectionCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 80, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: loopbackDetectionCtrlEntry.setStatus('current')
loopbackDetectionPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 80, 1, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: loopbackDetectionPort.setStatus('current')
loopbackDetectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 80, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: loopbackDetectionState.setStatus('current')
loopbackDetectionProcessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 80, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("alert", 0), ("portbased", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: loopbackDetectionProcessMode.setStatus('current')
loopbackDetectionRecoverMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 80, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("auto", 0), ("manual", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: loopbackDetectionRecoverMode.setStatus('current')
loopbackDetectionLoopState = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 80, 1, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: loopbackDetectionLoopState.setStatus('current')
loopbackDetectionBlockState = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 80, 1, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: loopbackDetectionBlockState.setStatus('current')
loopbackDetectionLagState = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 80, 1, 4, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: loopbackDetectionLagState.setStatus('current')
loopbackDetectionRecoverPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 80, 1, 4, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: loopbackDetectionRecoverPort.setStatus('current')
mibBuilder.exportSymbols("TPLINK-PORTLOOPBACKDETECTION-MIB", PYSNMP_MODULE_ID=tplinkLoopbackDetectionMIB, loopbackDetectionRecoverPort=loopbackDetectionRecoverPort, loopbackDetectionLoopState=loopbackDetectionLoopState, loopbackDetectionRecoveryTime=loopbackDetectionRecoveryTime, loopbackDetectionRecoverMode=loopbackDetectionRecoverMode, tplinkLoopbackDetectionNotifications=tplinkLoopbackDetectionNotifications, loopbackDetectionLagState=loopbackDetectionLagState, loopbackDetectionCtrlEntry=loopbackDetectionCtrlEntry, loopbackDetectionProcessMode=loopbackDetectionProcessMode, loopbackDetectionBlockState=loopbackDetectionBlockState, loopbackDetectionCtrlTable=loopbackDetectionCtrlTable, loopbackDetectionEnable=loopbackDetectionEnable, loopbackDetectionState=loopbackDetectionState, loopbackDetectionInterval=loopbackDetectionInterval, loopbackDetectionPort=loopbackDetectionPort, tplinkLoopbackDetectionMIBObjects=tplinkLoopbackDetectionMIBObjects, loopbackStatusChange=loopbackStatusChange, tplinkLoopbackDetectionMIB=tplinkLoopbackDetectionMIB)
