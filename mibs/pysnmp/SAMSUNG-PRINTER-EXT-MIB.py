#
# PySNMP MIB module SAMSUNG-PRINTER-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SAMSUNG-PRINTER-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:52:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
hrDeviceIndex, = mibBuilder.importSymbols("HOST-RESOURCES-MIB", "hrDeviceIndex")
prtChannelEntry, prtGeneralEntry, PresentOnOff, prtOutputEntry, prtInterpreterEntry, prtInterpreterIndex, prtInputEntry = mibBuilder.importSymbols("Printer-MIB", "prtChannelEntry", "prtGeneralEntry", "PresentOnOff", "prtOutputEntry", "prtInterpreterEntry", "prtInterpreterIndex", "prtInputEntry")
samsungCommonMIB, = mibBuilder.importSymbols("SAMSUNG-COMMON-MIB", "samsungCommonMIB")
Ordinal32, Cardinal32 = mibBuilder.importSymbols("SAMSUNG-GENERAL-TC", "Ordinal32", "Cardinal32")
ScmPrtOutputOffsetStackingType, = mibBuilder.importSymbols("SAMSUNG-PRINTER-EXT-TC", "ScmPrtOutputOffsetStackingType")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, MibIdentifier, Counter64, Unsigned32, Gauge32, Bits, ModuleIdentity, iso, Integer32, NotificationType, ObjectIdentity, Counter32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "MibIdentifier", "Counter64", "Unsigned32", "Gauge32", "Bits", "ModuleIdentity", "iso", "Integer32", "NotificationType", "ObjectIdentity", "Counter32", "IpAddress")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
scmPrintMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55))
if mibBuilder.loadTexts: scmPrintMIB.setLastUpdated('190407170000Z')
if mibBuilder.loadTexts: scmPrintMIB.setOrganization('Samsung Common Management Interface Working Group')
scmPrtBase = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 1))
scmPrtBaseTable = MibTable((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 1, 2), )
if mibBuilder.loadTexts: scmPrtBaseTable.setStatus('current')
scmPrtBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 1, 2, 1), ).setIndexNames((0, "SAMSUNG-PRINTER-EXT-MIB", "scmPrtBaseIndex"))
if mibBuilder.loadTexts: scmPrtBaseEntry.setStatus('current')
scmPrtBaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 1, 2, 1, 1), Ordinal32())
if mibBuilder.loadTexts: scmPrtBaseIndex.setStatus('current')
scmPrtBaseRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 1, 2, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtBaseRowStatus.setStatus('current')
scmPrtMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2))
scmPrtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 1)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtBaseGroup"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralGroup"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputGroup"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOutputGroup"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtChannelGroup"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInterpreterGroup"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerGroup"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOperationGroup"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtConfiguratioinGroup"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountGroup"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtSerialGroup"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtPCLGroup"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKS5843Group"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKSSMGroup"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPGroup"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtAlertGroup"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtConsoleDisplayBufferGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtMIBCompliance = scmPrtMIBCompliance.setStatus('current')
scmPrtMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3))
scmPrtBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3, 1)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtBaseRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtBaseGroup = scmPrtBaseGroup.setStatus('current')
scmPrtGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3, 5)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralRowStatus"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnModelName"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnModelVer"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnOSFWVer"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnSerialNo"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnPCLFWVer"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnEngFWVer"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnSCFFWVer"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnEpsonVer"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnPCL5eVer"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnPSFWVer"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnScanFWVer"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnKS5843Ver"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnKSSMVer"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnKS5895Ver"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnMainSystemVer"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnSPLVer"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrncolorPPM"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnPCL5CeVer"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnModelDescr"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnManufacture"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralPrnVendor"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtGeneralGroup = scmPrtGeneralGroup.setStatus('current')
scmPrtInputGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3, 8)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputRowStatus"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputNextPrtInputIndex"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputUseCustomSize"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputCustDimFeedDirDecl"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputCustDimXFeedDirDecl"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputTrayPriority"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputPaperSize"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputPaperSizeOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputTrayNum"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputTrayNumOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputTraySwitch"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputTraySwitchOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputLockTray"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputLockTrayOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputPaperType"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputPaperTypeOptions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtInputGroup = scmPrtInputGroup.setStatus('current')
scmPrtOutputGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3, 9)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOutputRowStatus"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOutputNextIndex"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOutputPassword"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOutputOffsetStackingType"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOutputTrayTimeoutSupport"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOutputTrayTimeout"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOutputFinishier"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOutputFinishierOptions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtOutputGroup = scmPrtOutputGroup.setStatus('current')
scmPrtChannelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3, 14)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtChannelRowStatus"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtChannelEOJTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtChannelGroup = scmPrtChannelGroup.setStatus('current')
scmPrtInterpreterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3, 15)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInterpRowStatus"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInterpJobCopiesDefault"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInterpLineTerm"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInterpProcessBarcodes"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInterpOrientation"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInterpOrientationOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInterpreterCopyNum"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInterpreterEmulation"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInterpreterEmulationOptions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtInterpreterGroup = scmPrtInterpreterGroup.setStatus('current')
scmPrtMarkerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3, 17)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerResolution"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerResolutionOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerTonerIndex"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerTonerColor"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerTonerColorDescription"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerSrt"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerMarginUnit"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerTonerLevel"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerDensity"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerSrtOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerDensityOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerSmetMode"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerSmetModeOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerduplexTopMargin"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerduplexLeftMargin"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerShortEdgeBindingMargin"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerLongEdgeBindingMargin"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerTonerSave"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerTonerSaveOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerTonerOutAction"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerTonerOutActionOptions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtMarkerGroup = scmPrtMarkerGroup.setStatus('current')
scmPrtOperationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3, 18)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOperationJobCancel"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOperarionMenuClear"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOperationMenuClearOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOperationFuserClean"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOperationFuserCleanOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOperationOpcClean"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOperationOpcCleanOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOperationTestPrtRequest"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOperationPrintFontRequest"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOperationIndex"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOperationPrintBlackOnly"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtOperationGroup = scmPrtOperationGroup.setStatus('current')
scmPrtConfiguratioinGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3, 19)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtConfigurationPowerSave"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtConfigurationPowerSaveOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtConfigurationAutocont"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtConfigurationAutoCountOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtConfigurationJam2Recover"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtConfigurationJam2RecOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtConfigurationAltitudeAction"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtConfigurationAltitudeActionOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtConfigurationIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtConfiguratioinGroup = scmPrtConfiguratioinGroup.setStatus('current')
scmPrtCountGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3, 20)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountDrumImageCount"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountDrumImageCountReset"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountTransferImageCount"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountTransferImageCountReset"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountFuserImageCount"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountFuserImageCountReset"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountTwoRollerCount"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountTwoRollerReset"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountPickupMPCount"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountPickupMPReset"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountPickupTray1Count"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountPickupTray1Reset"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountPickupTray2Count"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountPickupTray2Reset"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountIndex"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountType"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountMediaSize"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountColorant"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountDuplex"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountUnit"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountResolution"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountValue"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountDeviceType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtCountGroup = scmPrtCountGroup.setStatus('current')
scmPrtSerialGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3, 21)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtSerialNbaudRate"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtSerialBrOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtSerialBobuxon"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtSerialBobuxonOptions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtSerialGroup = scmPrtSerialGroup.setStatus('current')
scmPrtPCLGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3, 22)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtPCLFont"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtPCLSymbolSet"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtPCLFormLine"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtPCLPitch"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtPCLPointSize"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtPCLCourier"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtPCLCourierOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtPCLAppendCR"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtPCLAppendCROptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtPCLWideA4"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtPCLWideA4Options"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtPCLTopMargin"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtPCLLeftMargin"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtPCLIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtPCLGroup = scmPrtPCLGroup.setStatus('current')
scmPrtKS5843Group = ObjectGroup((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3, 23)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKS5843Font"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKS5843FontOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKS5843Code"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKS5843CodeOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKS5843cpi"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKS5843cpiOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKS5843Lines"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKS5843Zoom"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKS5843AutoWrap"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKS5843AutoWrapOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKS5843Topmargin"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKS5843Sitemode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtKS5843Group = scmPrtKS5843Group.setStatus('current')
scmPrtKSSMGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3, 24)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKSSMFont"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKSSMFontOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKSSMCode"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKSSMCodeOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKSSMCPI"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKSSMCPIOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKSSMLines"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKSSMZoom"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKSSMAutoWrap"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKSSMAutoWrapOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKSSMTopMargin"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtKSSMSiteMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtKSSMGroup = scmPrtKSSMGroup.setStatus('current')
scmPrtIPPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3, 25)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPColorSupported"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPJobKOctetsSupportedLBound"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPJobKOctetsSupportedUBound"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPJobImpressionsSupportedLBound"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPJobImpressionsSupportedUBound"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPJobMediaSheetsSupportedLBound"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPJobMediaSheetsSupportedUBound"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPJobSheets"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPCollatedCopiesLBound"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPCollatedCopiesUBound"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPCollatedCopies"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPFinishingsSupported"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPFinishings"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPPageRangesSupported"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPNumberUp"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPNumberUpOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPPrintQuality"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPPrintQualityOptions"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPJobKOctetsProcessed"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPJobImpressionsCompleted"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtIPPJobMediaSheetsCompleted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtIPPGroup = scmPrtIPPGroup.setStatus('current')
scmPrtAlertGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3, 26)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtAlertAlarmShortage"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtAlertAlarmShortageOptions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtAlertGroup = scmPrtAlertGroup.setStatus('current')
scmPrtConsoleDisplayBufferGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 2, 3, 27)).setObjects(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtConsoleDisplayBufferLcdLangType"), ("SAMSUNG-PRINTER-EXT-MIB", "scmPrtConsoleDisplayBufferLcdLangTypeOptions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    scmPrtConsoleDisplayBufferGroup = scmPrtConsoleDisplayBufferGroup.setStatus('current')
scmPrtGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5))
scmPrtGeneralSimple = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1))
scmPrtGeneralPrnModelName = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnModelName.setStatus('current')
scmPrtGeneralPrnOSFWVer = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnOSFWVer.setStatus('current')
scmPrtGeneralPrnModelVer = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnModelVer.setStatus('current')
scmPrtGeneralPrnSerialNo = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnSerialNo.setStatus('current')
scmPrtGeneralPrnModelDescr = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnModelDescr.setStatus('current')
scmPrtGeneralPrnManufacture = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnManufacture.setStatus('current')
scmPrtGeneralPrnVendor = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnVendor.setStatus('current')
scmPrtGeneralPrnPCLFWVer = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnPCLFWVer.setStatus('current')
scmPrtGeneralPrnEngFWVer = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnEngFWVer.setStatus('current')
scmPrtGeneralPrnSCFFWVer = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnSCFFWVer.setStatus('current')
scmPrtGeneralPrnEpsonVer = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnEpsonVer.setStatus('current')
scmPrtGeneralPrnPCL5eVer = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnPCL5eVer.setStatus('current')
scmPrtGeneralPrnPSFWVer = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnPSFWVer.setStatus('current')
scmPrtGeneralPrnScanFWVer = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnScanFWVer.setStatus('current')
scmPrtGeneralPrnKS5843Ver = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnKS5843Ver.setStatus('current')
scmPrtGeneralPrnKSSMVer = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnKSSMVer.setStatus('current')
scmPrtGeneralPrnKS5895Ver = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnKS5895Ver.setStatus('current')
scmPrtGeneralPrnMainSystemVer = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnMainSystemVer.setStatus('current')
scmPrtGeneralPrnSPLVer = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnSPLVer.setStatus('current')
scmPrtGeneralPrncolorPPM = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrncolorPPM.setStatus('current')
scmPrtGeneralPrnPCL5CeVer = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtGeneralPrnPCL5CeVer.setStatus('current')
scmPrtGeneralTable = MibTable((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 2), )
if mibBuilder.loadTexts: scmPrtGeneralTable.setStatus('current')
scmPrtGeneralEntry = MibTableRow((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 2, 1), )
prtGeneralEntry.registerAugmentions(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtGeneralEntry"))
scmPrtGeneralEntry.setIndexNames(*prtGeneralEntry.getIndexNames())
if mibBuilder.loadTexts: scmPrtGeneralEntry.setStatus('current')
scmPrtGeneralRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 5, 2, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtGeneralRowStatus.setStatus('current')
scmPrtInput = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8))
scmPrtInputSimple = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 1))
scmPrtInputTraySwitch = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtInputTraySwitch.setStatus('current')
scmPrtInputTraySwitchOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("off", 1), ("auto", 2), ("tray1", 4), ("tray2", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtInputTraySwitchOptions.setStatus('current')
scmPrtInputLockTray = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtInputLockTray.setStatus('current')
scmPrtInputLockTrayOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtInputLockTrayOptions.setStatus('current')
scmPrtInputPaperType = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtInputPaperType.setStatus('current')
scmPrtInputPaperTypeOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("normal", 1), ("thick", 2), ("wet", 4), ("transparency", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtInputPaperTypeOptions.setStatus('current')
scmPrtInputTable = MibTable((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 2), )
if mibBuilder.loadTexts: scmPrtInputTable.setStatus('current')
scmPrtInputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 2, 1), )
prtInputEntry.registerAugmentions(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInputEntry"))
scmPrtInputEntry.setIndexNames(*prtInputEntry.getIndexNames())
if mibBuilder.loadTexts: scmPrtInputEntry.setStatus('current')
scmPrtInputRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 2, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtInputRowStatus.setStatus('current')
scmPrtInputNextPrtInputIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 2, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtInputNextPrtInputIndex.setStatus('current')
scmPrtInputUseCustomSize = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 2, 1, 3), PresentOnOff().clone('other')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtInputUseCustomSize.setStatus('current')
scmPrtInputCustDimFeedDirDecl = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 2, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtInputCustDimFeedDirDecl.setStatus('current')
scmPrtInputCustDimXFeedDirDecl = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 2, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtInputCustDimXFeedDirDecl.setStatus('current')
scmPrtInputTrayPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 2, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtInputTrayPriority.setStatus('current')
scmPrtInputPaperSize = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 2, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtInputPaperSize.setStatus('current')
scmPrtInputPaperSizeOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912))).clone(namedValues=NamedValues(("letter", 1), ("legal", 2), ("a4", 4), ("executive", 8), ("jisB5", 16), ("isoB5", 32), ("com10", 64), ("monarch", 128), ("dl", 256), ("c5", 512), ("postA6", 1024), ("c6", 2048), ("folio", 4096), ("a5", 8192), ("statement", 16384), ("a6", 32768), ("ledger", 65536), ("a3", 131072), ("jisB4", 262144), ("jpost", 524288), ("jpostd", 1048576), ("custom", 2097152), ("letterP", 4194304), ("a4P", 8388608), ("jisB5P", 16777216), ("a5P", 33554432), ("executiveP", 67108864), ("statementP", 134217728), ("a3Over", 268435456), ("b5Envelope", 536870912)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtInputPaperSizeOptions.setStatus('current')
scmPrtInputTrayNum = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 2, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtInputTrayNum.setStatus('current')
scmPrtInputTrayNumOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 8, 2, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtInputTrayNumOptions.setStatus('current')
scmPrtOutput = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 9))
scmPrtOutputTable = MibTable((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 9, 1), )
if mibBuilder.loadTexts: scmPrtOutputTable.setStatus('current')
scmPrtOutputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 9, 1, 1), )
prtOutputEntry.registerAugmentions(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtOutputEntry"))
scmPrtOutputEntry.setIndexNames(*prtOutputEntry.getIndexNames())
if mibBuilder.loadTexts: scmPrtOutputEntry.setStatus('current')
scmPrtOutputRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 9, 1, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtOutputRowStatus.setStatus('current')
scmPrtOutputNextIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 9, 1, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtOutputNextIndex.setStatus('current')
scmPrtOutputPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 9, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtOutputPassword.setStatus('current')
scmPrtOutputOffsetStackingType = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 9, 1, 1, 4), ScmPrtOutputOffsetStackingType().clone('notSpecified')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtOutputOffsetStackingType.setStatus('current')
scmPrtOutputTrayTimeoutSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 9, 1, 1, 5), PresentOnOff().clone('other')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtOutputTrayTimeoutSupport.setStatus('current')
scmPrtOutputTrayTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 9, 1, 1, 6), Cardinal32()).setUnits('Seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtOutputTrayTimeout.setStatus('current')
scmPrtOutputFinishier = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 9, 1, 1, 51), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtOutputFinishier.setStatus('current')
scmPrtOutputFinishierOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 9, 1, 1, 52), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtOutputFinishierOptions.setStatus('current')
scmPrtChannel = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 14))
scmPrtChannelSimple = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 14, 1))
scmPrtChannelTable = MibTable((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 14, 2), )
if mibBuilder.loadTexts: scmPrtChannelTable.setStatus('current')
scmPrtChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 14, 2, 1), )
prtChannelEntry.registerAugmentions(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtChannelEntry"))
scmPrtChannelEntry.setIndexNames(*prtChannelEntry.getIndexNames())
if mibBuilder.loadTexts: scmPrtChannelEntry.setStatus('current')
scmPrtChannelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 14, 2, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtChannelRowStatus.setStatus('current')
scmPrtChannelEOJTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 14, 2, 1, 2), Cardinal32()).setUnits('Seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtChannelEOJTimeout.setStatus('current')
scmPrtInterpreter = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 15))
scmPrtInterpreterSimple = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 15, 1))
scmPrtInterpreterCopyNum = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtInterpreterCopyNum.setStatus('current')
scmPrtInterpreterEmulation = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 15, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtInterpreterEmulation.setStatus('current')
scmPrtInterpreterEmulationOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768))).clone(namedValues=NamedValues(("auto", 1), ("pcl5e", 2), ("pcl4", 4), ("wps3", 8), ("wps6", 16), ("ksc5843", 32), ("kssm", 64), ("ksc5895", 128), ("hwp", 256), ("pclxl", 512), ("ps2", 1024), ("hexDump", 2048), ("epson", 4096), ("ps3swrender", 8192), ("ps3", 16384), ("colorGDI", 32768)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtInterpreterEmulationOptions.setStatus('current')
scmPrtInterpreterTable = MibTable((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 15, 2), )
if mibBuilder.loadTexts: scmPrtInterpreterTable.setStatus('current')
scmPrtInterpreterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 15, 2, 1), )
prtInterpreterEntry.registerAugmentions(("SAMSUNG-PRINTER-EXT-MIB", "scmPrtInterpreterEntry"))
scmPrtInterpreterEntry.setIndexNames(*prtInterpreterEntry.getIndexNames())
if mibBuilder.loadTexts: scmPrtInterpreterEntry.setStatus('current')
scmPrtInterpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 15, 2, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtInterpRowStatus.setStatus('current')
scmPrtInterpJobCopiesDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 15, 2, 1, 9), Ordinal32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtInterpJobCopiesDefault.setStatus('current')
scmPrtInterpLineTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 15, 2, 1, 33), PresentOnOff().clone('other')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtInterpLineTerm.setStatus('current')
scmPrtInterpProcessBarcodes = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 15, 2, 1, 54), PresentOnOff().clone('other')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtInterpProcessBarcodes.setStatus('current')
scmPrtInterpOrientation = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 15, 2, 1, 60), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scmPrtInterpOrientation.setStatus('current')
scmPrtInterpOrientationOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 15, 2, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("portrait", 1), ("landscape", 2), ("reverseLandscape", 4), ("reversePortrait", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtInterpOrientationOptions.setStatus('current')
scmPrtMediaPath = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 16))
scmPrtMarker = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17))
scmPrtMarkerSimple = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 1))
scmPrtMarkerMarginUnit = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mm", 1), ("inch", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerMarginUnit.setStatus('current')
scmPrtMarkerSrt = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtMarkerSrt.setStatus('current')
scmPrtMarkerSrtOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("enhance", 1), ("normal", 2), ("grayPlus", 4), ("gray", 8), ("res1200fast", 16), ("res1200true", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerSrtOptions.setStatus('current')
scmPrtMarkerDensity = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerDensity.setStatus('current')
scmPrtMarkerDensityOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("light", 1), ("medium", 2), ("dark", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerDensityOptions.setStatus('current')
scmPrtMarkerSmetMode = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerSmetMode.setStatus('current')
scmPrtMarkerSmetModeOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerSmetModeOptions.setStatus('current')
scmPrtMarkerduplexTopMargin = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerduplexTopMargin.setStatus('current')
scmPrtMarkerduplexLeftMargin = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerduplexLeftMargin.setStatus('current')
scmPrtMarkerShortEdgeBindingMargin = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerShortEdgeBindingMargin.setStatus('current')
scmPrtMarkerLongEdgeBindingMargin = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerLongEdgeBindingMargin.setStatus('current')
scmPrtMarkerTonerSave = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerTonerSave.setStatus('current')
scmPrtMarkerTonerSaveOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerTonerSaveOptions.setStatus('current')
scmPrtMarkerTonerOutAction = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerTonerOutAction.setStatus('current')
scmPrtMarkerTonerOutActionOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("continue", 1), ("stop", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerTonerOutActionOptions.setStatus('current')
scmPrtMarkerTable = MibTable((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 2), )
if mibBuilder.loadTexts: scmPrtMarkerTable.setStatus('current')
scmPrtMarkerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 2, 1), ).setIndexNames((0, "HOST-RESOURCES-MIB", "hrDeviceIndex"), (0, "SAMSUNG-PRINTER-EXT-MIB", "scmPrtMarkerTonerIndex"))
if mibBuilder.loadTexts: scmPrtMarkerEntry.setStatus('current')
scmPrtMarkerTonerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 2, 1, 1), Ordinal32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerTonerIndex.setStatus('current')
scmPrtMarkerResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtMarkerResolution.setStatus('current')
scmPrtMarkerResolutionOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16))).clone(namedValues=NamedValues(("res300", 1), ("res600", 2), ("res1200", 4), ("res1200fast", 8), ("res1200best", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerResolutionOptions.setStatus('current')
scmPrtMarkerTonerColor = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerTonerColor.setStatus('current')
scmPrtMarkerTonerColorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 2, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerTonerColorDescription.setStatus('current')
scmPrtMarkerTonerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 17, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtMarkerTonerLevel.setStatus('current')
scmPrtOperation = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 18))
scmPrtOperationSimple = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 18, 1))
scmPrtOperationJobCancel = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("cancelJob", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtOperationJobCancel.setStatus('current')
scmPrtOperarionMenuClear = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtOperarionMenuClear.setStatus('current')
scmPrtOperationMenuClearOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtOperationMenuClearOptions.setStatus('current')
scmPrtOperationFuserClean = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 18, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtOperationFuserClean.setStatus('current')
scmPrtOperationFuserCleanOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 18, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtOperationFuserCleanOptions.setStatus('current')
scmPrtOperationOpcClean = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 18, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtOperationOpcClean.setStatus('current')
scmPrtOperationOpcCleanOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 18, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtOperationOpcCleanOptions.setStatus('current')
scmPrtOperationTestPrtRequest = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 18, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtOperationTestPrtRequest.setStatus('current')
scmPrtOperationPrintFontRequest = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 18, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("pcl", 1), ("ps", 2), ("ks5843", 3), ("kssm", 4), ("ks5895", 5), ("epson", 6), ("opcClean", 7), ("fuserClean", 8), ("configpage", 9), ("demopage", 10), ("menuMap", 11), ("psFlashDirectory", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtOperationPrintFontRequest.setStatus('current')
scmPrtOperationPrintBlackOnly = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 18, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtOperationPrintBlackOnly.setStatus('current')
scmPrtOperationTable = MibTable((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 18, 2), )
if mibBuilder.loadTexts: scmPrtOperationTable.setStatus('current')
scmPrtOperationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 18, 2, 1), ).setIndexNames((0, "SAMSUNG-PRINTER-EXT-MIB", "scmPrtOperationIndex"), (0, "HOST-RESOURCES-MIB", "hrDeviceIndex"))
if mibBuilder.loadTexts: scmPrtOperationEntry.setStatus('current')
scmPrtOperationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 18, 2, 1, 1), Ordinal32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtOperationIndex.setStatus('current')
scmPrtConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 19))
scmPrtConfigurationSimple = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 19, 1))
scmPrtConfigurationPowerSave = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 19, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtConfigurationPowerSave.setStatus('current')
scmPrtConfigurationPowerSaveOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 19, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16))).clone(namedValues=NamedValues(("pwSaveoff", 1), ("pwSave15", 2), ("pwSave30", 4), ("pwSave45", 8), ("pwSave60", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtConfigurationPowerSaveOptions.setStatus('current')
scmPrtConfigurationAutocont = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 19, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtConfigurationAutocont.setStatus('current')
scmPrtConfigurationAutoCountOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 19, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtConfigurationAutoCountOptions.setStatus('current')
scmPrtConfigurationJam2Recover = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 19, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtConfigurationJam2Recover.setStatus('current')
scmPrtConfigurationJam2RecOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 19, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtConfigurationJam2RecOptions.setStatus('current')
scmPrtConfigurationAltitudeAction = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 19, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtConfigurationAltitudeAction.setStatus('current')
scmPrtConfigurationAltitudeActionOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 19, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("low", 1), ("high", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtConfigurationAltitudeActionOptions.setStatus('current')
scmPrtConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 19, 2), )
if mibBuilder.loadTexts: scmPrtConfigurationTable.setStatus('current')
scmPrtConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 19, 2, 1), ).setIndexNames((0, "SAMSUNG-PRINTER-EXT-MIB", "scmPrtConfigurationIndex"), (0, "HOST-RESOURCES-MIB", "hrDeviceIndex"))
if mibBuilder.loadTexts: scmPrtConfigurationEntry.setStatus('current')
scmPrtConfigurationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 19, 2, 1, 1), Ordinal32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtConfigurationIndex.setStatus('current')
scmPrtCount = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20))
scmPrtCountSimple = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 1))
scmPrtCountDrumImageCount = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtCountDrumImageCount.setStatus('current')
scmPrtCountDrumImageCountReset = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtCountDrumImageCountReset.setStatus('current')
scmPrtCountTransferImageCount = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtCountTransferImageCount.setStatus('current')
scmPrtCountTransferImageCountReset = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtCountTransferImageCountReset.setStatus('current')
scmPrtCountFuserImageCount = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtCountFuserImageCount.setStatus('current')
scmPrtCountFuserImageCountReset = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtCountFuserImageCountReset.setStatus('current')
scmPrtCountTwoRollerCount = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtCountTwoRollerCount.setStatus('current')
scmPrtCountTwoRollerReset = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtCountTwoRollerReset.setStatus('current')
scmPrtCountPickupMPCount = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtCountPickupMPCount.setStatus('current')
scmPrtCountPickupMPReset = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtCountPickupMPReset.setStatus('current')
scmPrtCountPickupTray1Count = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtCountPickupTray1Count.setStatus('current')
scmPrtCountPickupTray1Reset = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtCountPickupTray1Reset.setStatus('current')
scmPrtCountPickupTray2Count = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtCountPickupTray2Count.setStatus('current')
scmPrtCountPickupTray2Reset = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtCountPickupTray2Reset.setStatus('current')
scmPrtCountTable = MibTable((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 2), )
if mibBuilder.loadTexts: scmPrtCountTable.setStatus('current')
scmPrtCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 2, 1), ).setIndexNames((0, "SAMSUNG-PRINTER-EXT-MIB", "scmPrtCountIndex"))
if mibBuilder.loadTexts: scmPrtCountEntry.setStatus('current')
scmPrtCountIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtCountIndex.setStatus('current')
scmPrtCountDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("printer", 1), ("scanner", 2), ("copier", 3), ("fax", 4), ("mailbox", 5), ("finisher", 6), ("feeder", 7), ("sorter", 8), ("marker", 9), ("basicFunctionFinisher", 10), ("multiFunctionFinisher", 11), ("externalIFFinisher", 12), ("thirdPartyFinisher", 13), ("payment", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtCountDeviceType.setStatus('current')
scmPrtCountType = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("copy", 3), ("faxIn", 4), ("faxout", 5), ("digitalSend", 6), ("digitalReceive", 7), ("scan", 8), ("print", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtCountType.setStatus('current')
scmPrtCountMediaSize = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("unknown", 1), ("letter", 2), ("legal", 3), ("a4", 4), ("executive", 5), ("jisB5", 6), ("isoB5", 7), ("com10", 8), ("monarch", 9), ("dl", 10), ("c5", 11), ("postA6", 12), ("c6", 13), ("folio", 14), ("a5", 15), ("statement", 16), ("a6", 17), ("ledger", 18), ("a3", 19), ("jisB4", 20), ("jpost", 21), ("jpostd", 22), ("custom", 23), ("letterP", 24), ("a4P", 25), ("jisB5P", 26), ("a5P", 27), ("executiveP", 28), ("statementP", 29), ("a3Over", 30), ("b5Envelope", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtCountMediaSize.setStatus('current')
scmPrtCountColorant = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mono", 1), ("color", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtCountColorant.setStatus('current')
scmPrtCountDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("simplex", 1), ("duplex", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtCountDuplex.setStatus('current')
scmPrtCountResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("low300dpi", 1), ("normal600dpi", 2), ("high1200dpi", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtCountResolution.setStatus('current')
scmPrtCountUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5, 6, 7, 8, 9, 11, 16, 17))).clone(namedValues=NamedValues(("tenThousandthsOfInches", 3), ("micrometers", 4), ("characters", 5), ("lines", 6), ("impressions", 7), ("sheets", 8), ("dotRow", 9), ("hours", 11), ("feet", 16), ("meters", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtCountUnit.setStatus('current')
scmPrtCountValue = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 20, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtCountValue.setStatus('current')
scmPrtSerial = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 21))
scmPrtSerialSimple = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 21, 1))
scmPrtSerialTable = MibTable((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 21, 2), )
if mibBuilder.loadTexts: scmPrtSerialTable.setStatus('current')
scmPrtSerialEntry = MibTableRow((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 21, 2, 1), ).setIndexNames((0, "SAMSUNG-PRINTER-EXT-MIB", "scmPrtSerialIndex"))
if mibBuilder.loadTexts: scmPrtSerialEntry.setStatus('current')
scmPrtSerialIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 21, 2, 1, 1), Ordinal32())
if mibBuilder.loadTexts: scmPrtSerialIndex.setStatus('current')
scmPrtSerialNbaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 21, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtSerialNbaudRate.setStatus('current')
scmPrtSerialBrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 21, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtSerialBrOptions.setStatus('current')
scmPrtSerialBobuxon = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 21, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtSerialBobuxon.setStatus('current')
scmPrtSerialBobuxonOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 21, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtSerialBobuxonOptions.setStatus('current')
scmPrtPCL = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22))
scmPrtPCLSimple = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22, 1))
scmPrtPCLFont = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 53))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtPCLFont.setStatus('current')
scmPrtPCLSymbolSet = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 37))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtPCLSymbolSet.setStatus('current')
scmPrtPCLFormLine = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtPCLFormLine.setStatus('current')
scmPrtPCLPitch = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 399))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtPCLPitch.setStatus('current')
scmPrtPCLPointSize = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 399))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtPCLPointSize.setStatus('current')
scmPrtPCLCourier = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtPCLCourier.setStatus('current')
scmPrtPCLCourierOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("regular", 1), ("dark", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtPCLCourierOptions.setStatus('current')
scmPrtPCLAppendCR = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtPCLAppendCR.setStatus('current')
scmPrtPCLAppendCROptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lf", 1), ("lfCR", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtPCLAppendCROptions.setStatus('current')
scmPrtPCLWideA4 = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtPCLWideA4.setStatus('current')
scmPrtPCLWideA4Options = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtPCLWideA4Options.setStatus('current')
scmPrtPCLTopMargin = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 250))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtPCLTopMargin.setStatus('current')
scmPrtPCLLeftMargin = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 250))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtPCLLeftMargin.setStatus('current')
scmPrtPCLTable = MibTable((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22, 2), )
if mibBuilder.loadTexts: scmPrtPCLTable.setStatus('current')
scmPrtPCLEntry = MibTableRow((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22, 2, 1), ).setIndexNames((0, "SAMSUNG-PRINTER-EXT-MIB", "scmPrtPCLIndex"))
if mibBuilder.loadTexts: scmPrtPCLEntry.setStatus('current')
scmPrtPCLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 22, 2, 1, 1), Ordinal32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtPCLIndex.setStatus('current')
scmPrtKS5843 = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 23))
scmPrtKS5843Simple = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 23, 1))
scmPrtKS5843Font = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 23, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtKS5843Font.setStatus('current')
scmPrtKS5843FontOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 23, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048))).clone(namedValues=NamedValues(("myoungjo", 1), ("gothic", 2), ("gungseo", 4), ("gullim", 8), ("sammool", 16), ("yetche", 32), ("post", 64), ("newgraph", 128), ("sunmyun", 256), ("pilgi", 512), ("headline", 1024), ("ocrB1", 2048)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtKS5843FontOptions.setStatus('current')
scmPrtKS5843Code = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 23, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtKS5843Code.setStatus('current')
scmPrtKS5843CodeOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 23, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wansung", 1), ("johap", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtKS5843CodeOptions.setStatus('current')
scmPrtKS5843cpi = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 23, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtKS5843cpi.setStatus('current')
scmPrtKS5843cpiOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 23, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128))).clone(namedValues=NamedValues(("kscpi10", 1), ("kscpi12", 2), ("kscpi133", 4), ("kscpi15", 8), ("kscpi20", 16), ("kscpi24", 32), ("kscpi267", 64), ("kscpi30", 128)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtKS5843cpiOptions.setStatus('current')
scmPrtKS5843Lines = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 23, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtKS5843Lines.setStatus('current')
scmPrtKS5843Zoom = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 23, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtKS5843Zoom.setStatus('current')
scmPrtKS5843AutoWrap = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 23, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtKS5843AutoWrap.setStatus('current')
scmPrtKS5843AutoWrapOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 23, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtKS5843AutoWrapOptions.setStatus('current')
scmPrtKS5843Topmargin = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 23, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtKS5843Topmargin.setStatus('current')
scmPrtKS5843Sitemode = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 23, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtKS5843Sitemode.setStatus('current')
scmPrtKSSM = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 24))
scmPrtKSSMSimple = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 24, 1))
scmPrtKSSMFont = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 24, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtKSSMFont.setStatus('current')
scmPrtKSSMFontOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 24, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048))).clone(namedValues=NamedValues(("myoungjo", 1), ("gothic", 2), ("gungseo", 4), ("gullim", 8), ("sammool", 16), ("yetche", 32), ("post", 64), ("newgraph", 128), ("sunmyun", 256), ("pilgi", 512), ("headline", 1024), ("ocrB1", 2048)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtKSSMFontOptions.setStatus('current')
scmPrtKSSMCode = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 24, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtKSSMCode.setStatus('current')
scmPrtKSSMCodeOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 24, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wansung", 1), ("johap", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtKSSMCodeOptions.setStatus('current')
scmPrtKSSMCPI = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 24, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtKSSMCPI.setStatus('current')
scmPrtKSSMCPIOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 24, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128))).clone(namedValues=NamedValues(("kscpi10", 1), ("kscpi12", 2), ("kscpi133", 4), ("kscpi15", 8), ("kscpi20", 16), ("kscpi24", 32), ("kscpi267", 64), ("kscpi30", 128)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtKSSMCPIOptions.setStatus('current')
scmPrtKSSMLines = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 24, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtKSSMLines.setStatus('current')
scmPrtKSSMZoom = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 24, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtKSSMZoom.setStatus('current')
scmPrtKSSMAutoWrap = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 24, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtKSSMAutoWrap.setStatus('current')
scmPrtKSSMAutoWrapOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 24, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtKSSMAutoWrapOptions.setStatus('current')
scmPrtKSSMTopMargin = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 24, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtKSSMTopMargin.setStatus('current')
scmPrtKSSMSiteMode = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 24, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtKSSMSiteMode.setStatus('current')
scmPrtIPP = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25))
scmPrtIPPSimple = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1))
scmPrtIPPColorSupported = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtIPPColorSupported.setStatus('current')
scmPrtIPPJobKOctetsSupportedLBound = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtIPPJobKOctetsSupportedLBound.setStatus('current')
scmPrtIPPJobKOctetsSupportedUBound = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtIPPJobKOctetsSupportedUBound.setStatus('current')
scmPrtIPPJobImpressionsSupportedLBound = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtIPPJobImpressionsSupportedLBound.setStatus('current')
scmPrtIPPJobImpressionsSupportedUBound = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtIPPJobImpressionsSupportedUBound.setStatus('current')
scmPrtIPPJobMediaSheetsSupportedLBound = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtIPPJobMediaSheetsSupportedLBound.setStatus('current')
scmPrtIPPJobMediaSheetsSupportedUBound = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtIPPJobMediaSheetsSupportedUBound.setStatus('current')
scmPrtIPPJobSheets = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standard", 1), ("none", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtIPPJobSheets.setStatus('current')
scmPrtIPPCollatedCopiesLBound = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtIPPCollatedCopiesLBound.setStatus('current')
scmPrtIPPCollatedCopiesUBound = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtIPPCollatedCopiesUBound.setStatus('current')
scmPrtIPPCollatedCopies = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtIPPCollatedCopies.setStatus('current')
scmPrtIPPFinishingsSupported = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtIPPFinishingsSupported.setStatus('current')
scmPrtIPPFinishings = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtIPPFinishings.setStatus('current')
scmPrtIPPPageRangesSupported = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtIPPPageRangesSupported.setStatus('current')
scmPrtIPPNumberUp = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtIPPNumberUp.setStatus('current')
scmPrtIPPNumberUpOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("numberUp1", 1), ("numberUp2", 2), ("numberUp4", 4), ("numberUp6", 8), ("numberUp9", 16), ("numberUp16", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtIPPNumberUpOptions.setStatus('current')
scmPrtIPPPrintQuality = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtIPPPrintQuality.setStatus('current')
scmPrtIPPPrintQualityOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("draft", 1), ("normal", 2), ("high", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtIPPPrintQualityOptions.setStatus('current')
scmPrtIPPJobKOctetsProcessed = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtIPPJobKOctetsProcessed.setStatus('current')
scmPrtIPPJobImpressionsCompleted = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtIPPJobImpressionsCompleted.setStatus('current')
scmPrtIPPJobMediaSheetsCompleted = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 25, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtIPPJobMediaSheetsCompleted.setStatus('current')
scmPrtAlert = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 26))
scmPrtAlertSimple = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 26, 1))
scmPrtAlertAlarmShortage = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 26, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtAlertAlarmShortage.setStatus('current')
scmPrtAlertAlarmShortageOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 26, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scmPrtAlertAlarmShortageOptions.setStatus('current')
scmPrtConsoleDisplayBuffer = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 27))
scmPrtConsoleDisplayBufferSimple = MibIdentifier((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 27, 1))
scmPrtConsoleDisplayBufferLcdLangType = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 27, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16))).clone(namedValues=NamedValues(("english", 1), ("german", 2), ("french", 4), ("italian", 8), ("spanish", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtConsoleDisplayBufferLcdLangType.setStatus('current')
scmPrtConsoleDisplayBufferLcdLangTypeOptions = MibScalar((1, 3, 6, 1, 4, 1, 236, 11, 5, 11, 55, 27, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scmPrtConsoleDisplayBufferLcdLangTypeOptions.setStatus('current')
mibBuilder.exportSymbols("SAMSUNG-PRINTER-EXT-MIB", scmPrtInputPaperTypeOptions=scmPrtInputPaperTypeOptions, scmPrtGeneralPrnModelVer=scmPrtGeneralPrnModelVer, scmPrtOutputTrayTimeoutSupport=scmPrtOutputTrayTimeoutSupport, scmPrtOutputFinishier=scmPrtOutputFinishier, scmPrtConfigurationTable=scmPrtConfigurationTable, scmPrtGeneralEntry=scmPrtGeneralEntry, scmPrtConfiguration=scmPrtConfiguration, scmPrtKS5843Code=scmPrtKS5843Code, scmPrtIPPJobKOctetsProcessed=scmPrtIPPJobKOctetsProcessed, scmPrtKS5843=scmPrtKS5843, scmPrtOperationJobCancel=scmPrtOperationJobCancel, scmPrtInputGroup=scmPrtInputGroup, scmPrtKSSMFontOptions=scmPrtKSSMFontOptions, scmPrtGeneralPrncolorPPM=scmPrtGeneralPrncolorPPM, scmPrtMarkerGroup=scmPrtMarkerGroup, scmPrtMarkerSmetModeOptions=scmPrtMarkerSmetModeOptions, scmPrtAlertAlarmShortage=scmPrtAlertAlarmShortage, scmPrtOperationOpcClean=scmPrtOperationOpcClean, scmPrtGeneralPrnPCL5CeVer=scmPrtGeneralPrnPCL5CeVer, scmPrtGeneralPrnMainSystemVer=scmPrtGeneralPrnMainSystemVer, scmPrtKS5843AutoWrap=scmPrtKS5843AutoWrap, scmPrtOutputOffsetStackingType=scmPrtOutputOffsetStackingType, scmPrtKSSMSiteMode=scmPrtKSSMSiteMode, scmPrtSerialBrOptions=scmPrtSerialBrOptions, scmPrtMIBCompliance=scmPrtMIBCompliance, scmPrtOutputTable=scmPrtOutputTable, scmPrtKS5843Zoom=scmPrtKS5843Zoom, scmPrtInputPaperSize=scmPrtInputPaperSize, scmPrtInput=scmPrtInput, scmPrtConfigurationAltitudeActionOptions=scmPrtConfigurationAltitudeActionOptions, scmPrtCountColorant=scmPrtCountColorant, scmPrtGeneralPrnKS5895Ver=scmPrtGeneralPrnKS5895Ver, scmPrtMarkerTonerSave=scmPrtMarkerTonerSave, scmPrtMarkerMarginUnit=scmPrtMarkerMarginUnit, scmPrtOperationOpcCleanOptions=scmPrtOperationOpcCleanOptions, scmPrtCount=scmPrtCount, scmPrtOperationIndex=scmPrtOperationIndex, scmPrtKS5843Sitemode=scmPrtKS5843Sitemode, scmPrtConfigurationEntry=scmPrtConfigurationEntry, scmPrtKSSMCPIOptions=scmPrtKSSMCPIOptions, scmPrtIPPCollatedCopiesLBound=scmPrtIPPCollatedCopiesLBound, scmPrtSerialSimple=scmPrtSerialSimple, scmPrtKSSMCPI=scmPrtKSSMCPI, scmPrtOutputTrayTimeout=scmPrtOutputTrayTimeout, scmPrtKSSMCode=scmPrtKSSMCode, scmPrtMarkerduplexTopMargin=scmPrtMarkerduplexTopMargin, scmPrtMarkerTonerOutAction=scmPrtMarkerTonerOutAction, scmPrtBase=scmPrtBase, scmPrtPCLPointSize=scmPrtPCLPointSize, scmPrtSerialGroup=scmPrtSerialGroup, scmPrtPCL=scmPrtPCL, scmPrtPCLEntry=scmPrtPCLEntry, scmPrtGeneralGroup=scmPrtGeneralGroup, scmPrtGeneralPrnVendor=scmPrtGeneralPrnVendor, scmPrtGeneralPrnKSSMVer=scmPrtGeneralPrnKSSMVer, scmPrtInterpProcessBarcodes=scmPrtInterpProcessBarcodes, scmPrtInterpOrientationOptions=scmPrtInterpOrientationOptions, scmPrtGeneralPrnPCLFWVer=scmPrtGeneralPrnPCLFWVer, scmPrtConfigurationIndex=scmPrtConfigurationIndex, scmPrtKSSMTopMargin=scmPrtKSSMTopMargin, scmPrtCountTransferImageCount=scmPrtCountTransferImageCount, scmPrtIPPPrintQualityOptions=scmPrtIPPPrintQualityOptions, scmPrtChannelEntry=scmPrtChannelEntry, scmPrtMarkerLongEdgeBindingMargin=scmPrtMarkerLongEdgeBindingMargin, scmPrtSerialIndex=scmPrtSerialIndex, scmPrtInterpreter=scmPrtInterpreter, scmPrtConsoleDisplayBufferLcdLangType=scmPrtConsoleDisplayBufferLcdLangType, scmPrtIPPNumberUp=scmPrtIPPNumberUp, scmPrtPCLGroup=scmPrtPCLGroup, scmPrtIPPPrintQuality=scmPrtIPPPrintQuality, scmPrtInputRowStatus=scmPrtInputRowStatus, scmPrtGeneralPrnKS5843Ver=scmPrtGeneralPrnKS5843Ver, scmPrtOperationTestPrtRequest=scmPrtOperationTestPrtRequest, scmPrtChannel=scmPrtChannel, scmPrtPCLAppendCR=scmPrtPCLAppendCR, scmPrtConfiguratioinGroup=scmPrtConfiguratioinGroup, scmPrtMIBGroups=scmPrtMIBGroups, scmPrtCountTwoRollerReset=scmPrtCountTwoRollerReset, scmPrtAlertSimple=scmPrtAlertSimple, scmPrtKSSMSimple=scmPrtKSSMSimple, scmPrtKS5843FontOptions=scmPrtKS5843FontOptions, scmPrtAlert=scmPrtAlert, scmPrtBaseRowStatus=scmPrtBaseRowStatus, scmPrtInterpJobCopiesDefault=scmPrtInterpJobCopiesDefault, scmPrtSerialBobuxonOptions=scmPrtSerialBobuxonOptions, scmPrtInputTraySwitchOptions=scmPrtInputTraySwitchOptions, scmPrtIPPJobMediaSheetsCompleted=scmPrtIPPJobMediaSheetsCompleted, scmPrtMarkerduplexLeftMargin=scmPrtMarkerduplexLeftMargin, scmPrtIPPJobMediaSheetsSupportedLBound=scmPrtIPPJobMediaSheetsSupportedLBound, scmPrtInputSimple=scmPrtInputSimple, scmPrtPCLPitch=scmPrtPCLPitch, scmPrtMIBConformance=scmPrtMIBConformance, scmPrtPCLFont=scmPrtPCLFont, scmPrtKSSMFont=scmPrtKSSMFont, scmPrtInterpreterEmulationOptions=scmPrtInterpreterEmulationOptions, scmPrtKSSMAutoWrapOptions=scmPrtKSSMAutoWrapOptions, scmPrtIPPFinishingsSupported=scmPrtIPPFinishingsSupported, scmPrtSerialBobuxon=scmPrtSerialBobuxon, scmPrtCountPickupMPCount=scmPrtCountPickupMPCount, scmPrtConsoleDisplayBufferGroup=scmPrtConsoleDisplayBufferGroup, scmPrtMarker=scmPrtMarker, scmPrtChannelTable=scmPrtChannelTable, scmPrtOperarionMenuClear=scmPrtOperarionMenuClear, scmPrtKSSMZoom=scmPrtKSSMZoom, scmPrtAlertAlarmShortageOptions=scmPrtAlertAlarmShortageOptions, scmPrtGeneral=scmPrtGeneral, scmPrtGeneralRowStatus=scmPrtGeneralRowStatus, scmPrtKSSM=scmPrtKSSM, scmPrtOperationFuserClean=scmPrtOperationFuserClean, scmPrtIPPColorSupported=scmPrtIPPColorSupported, scmPrtGeneralPrnOSFWVer=scmPrtGeneralPrnOSFWVer, scmPrtOutputPassword=scmPrtOutputPassword, scmPrtMediaPath=scmPrtMediaPath, scmPrtGeneralPrnSerialNo=scmPrtGeneralPrnSerialNo, scmPrtKS5843Group=scmPrtKS5843Group, scmPrtInputTrayNumOptions=scmPrtInputTrayNumOptions, scmPrtKSSMGroup=scmPrtKSSMGroup, PYSNMP_MODULE_ID=scmPrintMIB, scmPrtInputTable=scmPrtInputTable, scmPrtIPPFinishings=scmPrtIPPFinishings, scmPrtCountPickupTray2Reset=scmPrtCountPickupTray2Reset, scmPrtCountPickupMPReset=scmPrtCountPickupMPReset, scmPrtMarkerSrtOptions=scmPrtMarkerSrtOptions, scmPrtInputNextPrtInputIndex=scmPrtInputNextPrtInputIndex, scmPrtInputLockTray=scmPrtInputLockTray, scmPrtCountUnit=scmPrtCountUnit, scmPrtInputUseCustomSize=scmPrtInputUseCustomSize, scmPrtMarkerResolutionOptions=scmPrtMarkerResolutionOptions, scmPrtIPPJobMediaSheetsSupportedUBound=scmPrtIPPJobMediaSheetsSupportedUBound, scmPrtIPPJobKOctetsSupportedUBound=scmPrtIPPJobKOctetsSupportedUBound, scmPrtPCLWideA4Options=scmPrtPCLWideA4Options, scmPrtKSSMAutoWrap=scmPrtKSSMAutoWrap, scmPrtChannelEOJTimeout=scmPrtChannelEOJTimeout, scmPrtGeneralPrnSPLVer=scmPrtGeneralPrnSPLVer, scmPrtOutputGroup=scmPrtOutputGroup, scmPrtMarkerTonerSaveOptions=scmPrtMarkerTonerSaveOptions, scmPrtCountValue=scmPrtCountValue, scmPrtCountResolution=scmPrtCountResolution, scmPrtInterpreterCopyNum=scmPrtInterpreterCopyNum, scmPrtKS5843Topmargin=scmPrtKS5843Topmargin, scmPrtChannelSimple=scmPrtChannelSimple, scmPrtBaseEntry=scmPrtBaseEntry, scmPrtIPPCollatedCopies=scmPrtIPPCollatedCopies, scmPrtIPPJobImpressionsCompleted=scmPrtIPPJobImpressionsCompleted, scmPrtMarkerTonerColor=scmPrtMarkerTonerColor, scmPrtInputCustDimXFeedDirDecl=scmPrtInputCustDimXFeedDirDecl, scmPrtConfigurationAutocont=scmPrtConfigurationAutocont, scmPrtIPPJobKOctetsSupportedLBound=scmPrtIPPJobKOctetsSupportedLBound, scmPrtCountDuplex=scmPrtCountDuplex, scmPrtPCLFormLine=scmPrtPCLFormLine, scmPrtGeneralPrnManufacture=scmPrtGeneralPrnManufacture, scmPrtIPPSimple=scmPrtIPPSimple, scmPrtIPPJobImpressionsSupportedLBound=scmPrtIPPJobImpressionsSupportedLBound, scmPrtCountTable=scmPrtCountTable, scmPrtOperationEntry=scmPrtOperationEntry, scmPrtPCLSimple=scmPrtPCLSimple, scmPrtIPPNumberUpOptions=scmPrtIPPNumberUpOptions, scmPrtInterpreterEntry=scmPrtInterpreterEntry, scmPrtMarkerDensityOptions=scmPrtMarkerDensityOptions, scmPrtPCLWideA4=scmPrtPCLWideA4, scmPrtIPPJobImpressionsSupportedUBound=scmPrtIPPJobImpressionsSupportedUBound, scmPrtConfigurationAltitudeAction=scmPrtConfigurationAltitudeAction, scmPrtOperationFuserCleanOptions=scmPrtOperationFuserCleanOptions, scmPrtBaseTable=scmPrtBaseTable, scmPrtGeneralPrnPSFWVer=scmPrtGeneralPrnPSFWVer, scmPrtPCLLeftMargin=scmPrtPCLLeftMargin, scmPrtKSSMCodeOptions=scmPrtKSSMCodeOptions, scmPrtMarkerSimple=scmPrtMarkerSimple, scmPrtCountPickupTray1Count=scmPrtCountPickupTray1Count, scmPrtMarkerDensity=scmPrtMarkerDensity, scmPrtGeneralPrnModelDescr=scmPrtGeneralPrnModelDescr, scmPrtCountPickupTray2Count=scmPrtCountPickupTray2Count, scmPrtCountDrumImageCount=scmPrtCountDrumImageCount, scmPrtPCLCourierOptions=scmPrtPCLCourierOptions, scmPrtMarkerSmetMode=scmPrtMarkerSmetMode, scmPrtCountIndex=scmPrtCountIndex, scmPrtGeneralTable=scmPrtGeneralTable, scmPrtInterpreterSimple=scmPrtInterpreterSimple, scmPrtKS5843AutoWrapOptions=scmPrtKS5843AutoWrapOptions, scmPrtIPPJobSheets=scmPrtIPPJobSheets, scmPrtCountTransferImageCountReset=scmPrtCountTransferImageCountReset, scmPrtGeneralSimple=scmPrtGeneralSimple, scmPrtMarkerTonerLevel=scmPrtMarkerTonerLevel, scmPrtCountTwoRollerCount=scmPrtCountTwoRollerCount, scmPrtMarkerTonerOutActionOptions=scmPrtMarkerTonerOutActionOptions, scmPrtInterpRowStatus=scmPrtInterpRowStatus, scmPrtCountEntry=scmPrtCountEntry, scmPrtSerial=scmPrtSerial, scmPrtPCLSymbolSet=scmPrtPCLSymbolSet, scmPrtInputTrayNum=scmPrtInputTrayNum, scmPrtChannelRowStatus=scmPrtChannelRowStatus, scmPrtOperationPrintBlackOnly=scmPrtOperationPrintBlackOnly, scmPrtKS5843cpi=scmPrtKS5843cpi, scmPrtOutputNextIndex=scmPrtOutputNextIndex, scmPrtGeneralPrnScanFWVer=scmPrtGeneralPrnScanFWVer, scmPrtOperationGroup=scmPrtOperationGroup, scmPrtConfigurationJam2RecOptions=scmPrtConfigurationJam2RecOptions, scmPrtInputEntry=scmPrtInputEntry, scmPrtCountFuserImageCountReset=scmPrtCountFuserImageCountReset, scmPrtMarkerEntry=scmPrtMarkerEntry, scmPrtCountGroup=scmPrtCountGroup, scmPrtConfigurationPowerSave=scmPrtConfigurationPowerSave, scmPrtConsoleDisplayBufferLcdLangTypeOptions=scmPrtConsoleDisplayBufferLcdLangTypeOptions, scmPrtInputCustDimFeedDirDecl=scmPrtInputCustDimFeedDirDecl, scmPrtConfigurationSimple=scmPrtConfigurationSimple, scmPrtGeneralPrnSCFFWVer=scmPrtGeneralPrnSCFFWVer, scmPrtGeneralPrnPCL5eVer=scmPrtGeneralPrnPCL5eVer, scmPrtMarkerSrt=scmPrtMarkerSrt, scmPrtInterpLineTerm=scmPrtInterpLineTerm, scmPrtOperationPrintFontRequest=scmPrtOperationPrintFontRequest, scmPrtMarkerTonerColorDescription=scmPrtMarkerTonerColorDescription, scmPrtKS5843CodeOptions=scmPrtKS5843CodeOptions, scmPrtOutputEntry=scmPrtOutputEntry, scmPrtConsoleDisplayBuffer=scmPrtConsoleDisplayBuffer, scmPrtOperationSimple=scmPrtOperationSimple, scmPrtInterpreterEmulation=scmPrtInterpreterEmulation, scmPrtGeneralPrnModelName=scmPrtGeneralPrnModelName, scmPrtPCLTopMargin=scmPrtPCLTopMargin, scmPrtKS5843Lines=scmPrtKS5843Lines, scmPrtInterpreterTable=scmPrtInterpreterTable, scmPrtPCLCourier=scmPrtPCLCourier, scmPrtPCLAppendCROptions=scmPrtPCLAppendCROptions, scmPrtConfigurationPowerSaveOptions=scmPrtConfigurationPowerSaveOptions, scmPrtOperation=scmPrtOperation, scmPrtOperationTable=scmPrtOperationTable, scmPrtGeneralPrnEngFWVer=scmPrtGeneralPrnEngFWVer, scmPrtInterpOrientation=scmPrtInterpOrientation, scmPrtCountFuserImageCount=scmPrtCountFuserImageCount, scmPrtCountMediaSize=scmPrtCountMediaSize, scmPrtConfigurationAutoCountOptions=scmPrtConfigurationAutoCountOptions, scmPrtSerialNbaudRate=scmPrtSerialNbaudRate, scmPrtIPPCollatedCopiesUBound=scmPrtIPPCollatedCopiesUBound, scmPrtIPPPageRangesSupported=scmPrtIPPPageRangesSupported, scmPrtGeneralPrnEpsonVer=scmPrtGeneralPrnEpsonVer, scmPrtInterpreterGroup=scmPrtInterpreterGroup, scmPrtSerialEntry=scmPrtSerialEntry, scmPrtBaseIndex=scmPrtBaseIndex, scmPrtInputTrayPriority=scmPrtInputTrayPriority, scmPrtOutput=scmPrtOutput, scmPrtOutputFinishierOptions=scmPrtOutputFinishierOptions, scmPrtMarkerTonerIndex=scmPrtMarkerTonerIndex, scmPrtOperationMenuClearOptions=scmPrtOperationMenuClearOptions, scmPrtCountPickupTray1Reset=scmPrtCountPickupTray1Reset, scmPrtKS5843cpiOptions=scmPrtKS5843cpiOptions, scmPrtInputPaperSizeOptions=scmPrtInputPaperSizeOptions, scmPrtSerialTable=scmPrtSerialTable, scmPrtInputTraySwitch=scmPrtInputTraySwitch, scmPrintMIB=scmPrintMIB, scmPrtMarkerResolution=scmPrtMarkerResolution, scmPrtCountSimple=scmPrtCountSimple, scmPrtMarkerShortEdgeBindingMargin=scmPrtMarkerShortEdgeBindingMargin, scmPrtCountDrumImageCountReset=scmPrtCountDrumImageCountReset, scmPrtConsoleDisplayBufferSimple=scmPrtConsoleDisplayBufferSimple, scmPrtKS5843Simple=scmPrtKS5843Simple)
mibBuilder.exportSymbols("SAMSUNG-PRINTER-EXT-MIB", scmPrtBaseGroup=scmPrtBaseGroup, scmPrtCountType=scmPrtCountType, scmPrtAlertGroup=scmPrtAlertGroup, scmPrtOutputRowStatus=scmPrtOutputRowStatus, scmPrtKSSMLines=scmPrtKSSMLines, scmPrtCountDeviceType=scmPrtCountDeviceType, scmPrtChannelGroup=scmPrtChannelGroup, scmPrtInputPaperType=scmPrtInputPaperType, scmPrtIPPGroup=scmPrtIPPGroup, scmPrtPCLTable=scmPrtPCLTable, scmPrtInputLockTrayOptions=scmPrtInputLockTrayOptions, scmPrtPCLIndex=scmPrtPCLIndex, scmPrtKS5843Font=scmPrtKS5843Font, scmPrtMarkerTable=scmPrtMarkerTable, scmPrtConfigurationJam2Recover=scmPrtConfigurationJam2Recover, scmPrtIPP=scmPrtIPP)
