#
# PySNMP MIB module HUAWEI-MPLSLSR-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-MPLSLSR-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:35:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
MplsLabel, = mibBuilder.importSymbols("MPLS-TC-STD-MIB", "MplsLabel")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, Gauge32, ObjectIdentity, iso, Integer32, Counter32, TimeTicks, MibIdentifier, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "Gauge32", "ObjectIdentity", "iso", "Integer32", "Counter32", "TimeTicks", "MibIdentifier", "IpAddress", "Unsigned32")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
hwMplsLsrExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182))
hwMplsLsrExtMIB.setRevisions(('2013-09-24 16:55', '2011-07-30 11:00', '2010-11-22 16:00', '2010-08-11 16:00', '2010-07-12 16:00', '2009-03-10 16:00',))
if mibBuilder.loadTexts: hwMplsLsrExtMIB.setLastUpdated('201309241655Z')
if mibBuilder.loadTexts: hwMplsLsrExtMIB.setOrganization('Huawei Technologies Co.,Ltd.')
hwMplsLsrExtObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1))
hwMplsLsrId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLsrId.setStatus('current')
hwMplsCapabilityConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsCapabilityConfig.setStatus('current')
hwMplsLabelAdvertise = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("explicitNull", 1), ("implicitNull", 2), ("nonNull", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLabelAdvertise.setStatus('current')
hwMplsStatisticsIntervalTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsStatisticsIntervalTimer.setStatus('current')
hwMplsBfdCapabilityConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 5), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsBfdCapabilityConfig.setStatus('current')
hwMplsBfdMinTx = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsBfdMinTx.setStatus('current')
hwMplsBfdMinRx = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsBfdMinRx.setStatus('current')
hwMplsBfdDetectMultiplier = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsBfdDetectMultiplier.setStatus('current')
hwMplsFecListName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsFecListName.setStatus('current')
hwMplsBfdTrigger = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("triggerHost", 1), ("triggerFeclist", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsBfdTrigger.setStatus('current')
hwMplsBfdTriggerNextHop = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsBfdTriggerNextHop.setStatus('current')
hwMplsBfdTriggerInterface = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 12), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsBfdTriggerInterface.setStatus('current')
hwMplsBfdTriggerFecListName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsBfdTriggerFecListName.setStatus('current')
hwLdpVirtualTunnelFEC = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 14), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLdpVirtualTunnelFEC.setStatus('current')
hwMplsBgpBfdCapabilityConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 15), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsBgpBfdCapabilityConfig.setStatus('current')
hwMplsBgpBfdMinTx = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsBgpBfdMinTx.setStatus('current')
hwMplsBgpBfdMinRx = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsBgpBfdMinRx.setStatus('current')
hwMplsBgpBfdDetectMultiplier = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsBgpBfdDetectMultiplier.setStatus('current')
hwMplsBgpBfdTriggerTunnel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("triggerHost", 1), ("triggerIpPrefix", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsBgpBfdTriggerTunnel.setStatus('current')
hwMplsBgpBfdTriggerTunnelIpprefix = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsBgpBfdTriggerTunnelIpprefix.setStatus('current')
hwMplsFecListTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 50), )
if mibBuilder.loadTexts: hwMplsFecListTable.setStatus('current')
hwMplsFecListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 50, 1), ).setIndexNames((0, "HUAWEI-MPLSLSR-EXT-MIB", "hwMplsFecNodeIpAddress"), (0, "HUAWEI-MPLSLSR-EXT-MIB", "hwMplsFecNodeInterface"), (0, "HUAWEI-MPLSLSR-EXT-MIB", "hwMplsFecNodeNextHop"))
if mibBuilder.loadTexts: hwMplsFecListEntry.setStatus('current')
hwMplsFecNodeIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 50, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwMplsFecNodeIpAddress.setStatus('current')
hwMplsFecNodeInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 50, 1, 3), Unsigned32())
if mibBuilder.loadTexts: hwMplsFecNodeInterface.setStatus('current')
hwMplsFecNodeNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 50, 1, 4), IpAddress())
if mibBuilder.loadTexts: hwMplsFecNodeNextHop.setStatus('current')
hwMplsFecListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 50, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsFecListRowStatus.setStatus('current')
hwMplsInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 51), )
if mibBuilder.loadTexts: hwMplsInterfaceTable.setStatus('current')
hwMplsInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 51, 1), ).setIndexNames((0, "HUAWEI-MPLSLSR-EXT-MIB", "hwMplsInterfaceIndex"))
if mibBuilder.loadTexts: hwMplsInterfaceEntry.setStatus('current')
hwMplsInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 51, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwMplsInterfaceIndex.setStatus('current')
hwMplsMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 51, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsMtu.setStatus('current')
hwMplsInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 51, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsInterfaceRowStatus.setStatus('current')
hwLdpStaticFrrInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 52), )
if mibBuilder.loadTexts: hwLdpStaticFrrInterfaceTable.setStatus('current')
hwLdpStaticFrrInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 52, 1), ).setIndexNames((0, "HUAWEI-MPLSLSR-EXT-MIB", "hwMplsInterfaceIndex"), (0, "HUAWEI-MPLSLSR-EXT-MIB", "hwLdpStaticFrrPriority"))
if mibBuilder.loadTexts: hwLdpStaticFrrInterfaceEntry.setStatus('current')
hwLdpStaticFrrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 52, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwLdpStaticFrrPriority.setStatus('current')
hwLdpStaticFrrNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 52, 1, 11), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLdpStaticFrrNextHop.setStatus('current')
hwLdpStaticFrrIpPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 52, 1, 12), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLdpStaticFrrIpPrefix.setStatus('current')
hwLdpStaticFrrInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 52, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLdpStaticFrrInterfaceRowStatus.setStatus('current')
hwLdpVirtualTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 53), )
if mibBuilder.loadTexts: hwLdpVirtualTunnelTable.setStatus('current')
hwLdpVirtualTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 53, 1), ).setIndexNames((0, "HUAWEI-MPLSLSR-EXT-MIB", "hwLdpVirtualTunnelIndex"))
if mibBuilder.loadTexts: hwLdpVirtualTunnelEntry.setStatus('current')
hwLdpVirtualTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 53, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwLdpVirtualTunnelIndex.setStatus('current')
hwLdpVirtualStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 53, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLdpVirtualStatus.setStatus('current')
hwLdpXcIndexArray = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 53, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLdpXcIndexArray.setStatus('current')
hwLdpOutSegmentIndexArray = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 53, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLdpOutSegmentIndexArray.setStatus('current')
hwLdpVirtualTunnelTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 54))
hwMplsLdpVirtualTunnelUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 54, 1)).setObjects(("HUAWEI-MPLSLSR-EXT-MIB", "hwLdpVirtualTunnelFEC"))
if mibBuilder.loadTexts: hwMplsLdpVirtualTunnelUp.setStatus('current')
hwMplsLdpVirtualTunnelDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 54, 2)).setObjects(("HUAWEI-MPLSLSR-EXT-MIB", "hwLdpVirtualTunnelFEC"))
if mibBuilder.loadTexts: hwMplsLdpVirtualTunnelDown.setStatus('current')
hwMplsStaticLspTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 55), )
if mibBuilder.loadTexts: hwMplsStaticLspTable.setStatus('current')
hwMplsStaticLspEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 55, 1), ).setIndexNames((0, "HUAWEI-MPLSLSR-EXT-MIB", "hwMplsStaticLspName"))
if mibBuilder.loadTexts: hwMplsStaticLspEntry.setStatus('current')
hwMplsStaticLspName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 55, 1, 1), DisplayString())
if mibBuilder.loadTexts: hwMplsStaticLspName.setStatus('current')
hwMplsStaticLspType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 55, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ingress", 1), ("transit", 2), ("egress", 3), ("ingressBindTunnel", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsStaticLspType.setStatus('current')
hwMplsStaticLspInIntfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 55, 1, 12), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsStaticLspInIntfIndex.setStatus('current')
hwMplsStaticLspInLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 55, 1, 13), MplsLabel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsStaticLspInLabel.setStatus('current')
hwMplsStaticLspLsrId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 55, 1, 14), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsStaticLspLsrId.setStatus('current')
hwMplsStaticLspTunnelID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 55, 1, 15), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsStaticLspTunnelID.setStatus('current')
hwMplsStaticLspNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 55, 1, 16), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsStaticLspNextHop.setStatus('current')
hwMplsStaticLspOutIntfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 55, 1, 17), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsStaticLspOutIntfIndex.setStatus('current')
hwMplsStaticLspOutLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 55, 1, 18), MplsLabel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsStaticLspOutLabel.setStatus('current')
hwMplsStaticLspDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 55, 1, 19), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsStaticLspDestAddr.setStatus('current')
hwMplsStaticLspMaskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 55, 1, 20), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsStaticLspMaskLen.setStatus('current')
hwMplsStaticLspRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 1, 55, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsStaticLspRowStatus.setStatus('current')
hwMplsLsrExtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 2))
hwMplsLsrExtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 2, 1))
hwMplsModuleCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 2, 1, 1)).setObjects(("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsBasicGroup"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsInterfaceGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsModuleCompliance = hwMplsModuleCompliance.setStatus('current')
hwMplsLsrExtGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 2, 2))
hwMplsBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 2, 2, 1)).setObjects(("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsLsrId"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsCapabilityConfig"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsLabelAdvertise"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsStatisticsIntervalTimer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsBasicGroup = hwMplsBasicGroup.setStatus('current')
hwMplsBfdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 2, 2, 2)).setObjects(("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsBfdCapabilityConfig"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsBfdMinTx"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsBfdMinRx"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsBfdDetectMultiplier"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsFecListName"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsBfdTrigger"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsBfdTriggerNextHop"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsBfdTriggerInterface"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsBfdTriggerFecListName"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsFecListRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsBfdGroup = hwMplsBfdGroup.setStatus('current')
hwLdpStaticFrrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 2, 2, 3)).setObjects(("HUAWEI-MPLSLSR-EXT-MIB", "hwLdpStaticFrrNextHop"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwLdpStaticFrrIpPrefix"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwLdpStaticFrrInterfaceRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLdpStaticFrrGroup = hwLdpStaticFrrGroup.setStatus('current')
hwMplsInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 2, 2, 4)).setObjects(("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsMtu"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsInterfaceRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsInterfaceGroup = hwMplsInterfaceGroup.setStatus('current')
hwMplsLdpVirtualTunnelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 2, 2, 5)).setObjects(("HUAWEI-MPLSLSR-EXT-MIB", "hwLdpVirtualTunnelFEC"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwLdpVirtualStatus"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwLdpXcIndexArray"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwLdpOutSegmentIndexArray"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsLdpVirtualTunnelGroup = hwMplsLdpVirtualTunnelGroup.setStatus('current')
hwMplsLdpVirtualTunnelNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 2, 2, 6)).setObjects(("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsLdpVirtualTunnelUp"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsLdpVirtualTunnelDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsLdpVirtualTunnelNotificationGroup = hwMplsLdpVirtualTunnelNotificationGroup.setStatus('current')
hwMplsStaticLspGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 2, 2, 7)).setObjects(("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsStaticLspType"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsStaticLspInIntfIndex"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsStaticLspInLabel"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsStaticLspLsrId"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsStaticLspTunnelID"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsStaticLspNextHop"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsStaticLspOutIntfIndex"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsStaticLspOutLabel"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsStaticLspDestAddr"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsStaticLspMaskLen"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsStaticLspRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsStaticLspGroup = hwMplsStaticLspGroup.setStatus('current')
hwMplsBgpBfdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 182, 2, 2, 8)).setObjects(("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsBgpBfdCapabilityConfig"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsBgpBfdMinTx"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsBgpBfdMinRx"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsBgpBfdDetectMultiplier"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsBgpBfdTriggerTunnel"), ("HUAWEI-MPLSLSR-EXT-MIB", "hwMplsBgpBfdTriggerTunnelIpprefix"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsBgpBfdGroup = hwMplsBgpBfdGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-MPLSLSR-EXT-MIB", hwMplsInterfaceTable=hwMplsInterfaceTable, hwMplsStaticLspLsrId=hwMplsStaticLspLsrId, hwMplsBgpBfdGroup=hwMplsBgpBfdGroup, hwMplsStaticLspEntry=hwMplsStaticLspEntry, hwMplsInterfaceIndex=hwMplsInterfaceIndex, hwMplsBfdGroup=hwMplsBfdGroup, hwLdpVirtualTunnelIndex=hwLdpVirtualTunnelIndex, hwMplsBfdTriggerFecListName=hwMplsBfdTriggerFecListName, hwMplsFecNodeIpAddress=hwMplsFecNodeIpAddress, hwMplsInterfaceRowStatus=hwMplsInterfaceRowStatus, hwMplsFecListTable=hwMplsFecListTable, hwLdpOutSegmentIndexArray=hwLdpOutSegmentIndexArray, hwMplsLdpVirtualTunnelUp=hwMplsLdpVirtualTunnelUp, hwMplsBfdDetectMultiplier=hwMplsBfdDetectMultiplier, hwLdpStaticFrrInterfaceEntry=hwLdpStaticFrrInterfaceEntry, hwMplsLsrExtCompliances=hwMplsLsrExtCompliances, hwMplsStaticLspOutLabel=hwMplsStaticLspOutLabel, hwMplsStaticLspType=hwMplsStaticLspType, hwLdpVirtualTunnelFEC=hwLdpVirtualTunnelFEC, hwLdpStaticFrrNextHop=hwLdpStaticFrrNextHop, hwMplsBfdMinRx=hwMplsBfdMinRx, hwMplsStaticLspName=hwMplsStaticLspName, PYSNMP_MODULE_ID=hwMplsLsrExtMIB, hwMplsBfdCapabilityConfig=hwMplsBfdCapabilityConfig, hwMplsBgpBfdTriggerTunnel=hwMplsBgpBfdTriggerTunnel, hwMplsLsrExtObject=hwMplsLsrExtObject, hwLdpStaticFrrIpPrefix=hwLdpStaticFrrIpPrefix, hwLdpVirtualTunnelEntry=hwLdpVirtualTunnelEntry, hwMplsStaticLspOutIntfIndex=hwMplsStaticLspOutIntfIndex, hwMplsStaticLspRowStatus=hwMplsStaticLspRowStatus, hwMplsLdpVirtualTunnelDown=hwMplsLdpVirtualTunnelDown, hwMplsBgpBfdDetectMultiplier=hwMplsBgpBfdDetectMultiplier, hwMplsLsrExtConformance=hwMplsLsrExtConformance, hwLdpVirtualStatus=hwLdpVirtualStatus, hwLdpStaticFrrGroup=hwLdpStaticFrrGroup, hwMplsLdpVirtualTunnelNotificationGroup=hwMplsLdpVirtualTunnelNotificationGroup, hwMplsBfdTriggerNextHop=hwMplsBfdTriggerNextHop, hwMplsBgpBfdMinTx=hwMplsBgpBfdMinTx, hwMplsBfdMinTx=hwMplsBfdMinTx, hwLdpVirtualTunnelTable=hwLdpVirtualTunnelTable, hwMplsInterfaceEntry=hwMplsInterfaceEntry, hwMplsStatisticsIntervalTimer=hwMplsStatisticsIntervalTimer, hwMplsLabelAdvertise=hwMplsLabelAdvertise, hwLdpStaticFrrInterfaceRowStatus=hwLdpStaticFrrInterfaceRowStatus, hwMplsLdpVirtualTunnelGroup=hwMplsLdpVirtualTunnelGroup, hwLdpStaticFrrPriority=hwLdpStaticFrrPriority, hwMplsInterfaceGroup=hwMplsInterfaceGroup, hwMplsBgpBfdTriggerTunnelIpprefix=hwMplsBgpBfdTriggerTunnelIpprefix, hwMplsMtu=hwMplsMtu, hwMplsModuleCompliance=hwMplsModuleCompliance, hwMplsFecNodeInterface=hwMplsFecNodeInterface, hwMplsFecListRowStatus=hwMplsFecListRowStatus, hwMplsStaticLspInLabel=hwMplsStaticLspInLabel, hwMplsStaticLspNextHop=hwMplsStaticLspNextHop, hwMplsLsrExtGroup=hwMplsLsrExtGroup, hwLdpStaticFrrInterfaceTable=hwLdpStaticFrrInterfaceTable, hwMplsBfdTrigger=hwMplsBfdTrigger, hwMplsFecListEntry=hwMplsFecListEntry, hwMplsStaticLspMaskLen=hwMplsStaticLspMaskLen, hwMplsLsrExtMIB=hwMplsLsrExtMIB, hwMplsBgpBfdCapabilityConfig=hwMplsBgpBfdCapabilityConfig, hwMplsFecNodeNextHop=hwMplsFecNodeNextHop, hwMplsStaticLspTable=hwMplsStaticLspTable, hwMplsCapabilityConfig=hwMplsCapabilityConfig, hwMplsBasicGroup=hwMplsBasicGroup, hwMplsBfdTriggerInterface=hwMplsBfdTriggerInterface, hwMplsStaticLspInIntfIndex=hwMplsStaticLspInIntfIndex, hwMplsStaticLspGroup=hwMplsStaticLspGroup, hwMplsStaticLspDestAddr=hwMplsStaticLspDestAddr, hwMplsStaticLspTunnelID=hwMplsStaticLspTunnelID, hwLdpVirtualTunnelTrap=hwLdpVirtualTunnelTrap, hwMplsLsrId=hwMplsLsrId, hwLdpXcIndexArray=hwLdpXcIndexArray, hwMplsFecListName=hwMplsFecListName, hwMplsBgpBfdMinRx=hwMplsBgpBfdMinRx)
