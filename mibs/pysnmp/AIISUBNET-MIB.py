#
# PySNMP MIB module AIISUBNET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AIISUBNET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:00:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, iso, Bits, Integer32, ModuleIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, MibIdentifier, ObjectIdentity, enterprises, TimeTicks, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "Bits", "Integer32", "ModuleIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "MibIdentifier", "ObjectIdentity", "enterprises", "TimeTicks", "NotificationType", "Unsigned32")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
class SubnetIndex(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 512)

aii = MibIdentifier((1, 3, 6, 1, 4, 1, 539))
aiSLC2 = MibIdentifier((1, 3, 6, 1, 4, 1, 539, 16))
aiiSubnet = ModuleIdentity((1, 3, 6, 1, 4, 1, 539, 16, 3))
if mibBuilder.loadTexts: aiiSubnet.setLastUpdated('9909141400Z')
if mibBuilder.loadTexts: aiiSubnet.setOrganization('Applied Innovation Inc.')
aiiSubnetTable = MibTable((1, 3, 6, 1, 4, 1, 539, 16, 3, 1), )
if mibBuilder.loadTexts: aiiSubnetTable.setStatus('current')
aiiSubnetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 539, 16, 3, 1, 1), ).setIndexNames((0, "AIISUBNET-MIB", "aiiSubnetIndex"))
if mibBuilder.loadTexts: aiiSubnetEntry.setStatus('current')
aiiSubnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 3, 1, 1, 1), SubnetIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiiSubnetIndex.setStatus('current')
aiiSubnetEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 3, 1, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiiSubnetEntryStatus.setStatus('current')
aiiSubnetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 3, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiiSubnetAddr.setStatus('current')
aiiSubnetIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 3, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiiSubnetIfIndex.setStatus('current')
aiiSubnetNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 3, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiiSubnetNetMask.setStatus('current')
aiiSubnetBcastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 3, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiiSubnetBcastAddr.setStatus('current')
aiiSubnetType = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 3, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiiSubnetType.setStatus('current')
aiiSubnetAdmnStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 3, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiiSubnetAdmnStatus.setStatus('current')
aiiSubnetTable2 = MibTable((1, 3, 6, 1, 4, 1, 539, 16, 3, 2), )
if mibBuilder.loadTexts: aiiSubnetTable2.setStatus('current')
aiiSubnetEntry2 = MibTableRow((1, 3, 6, 1, 4, 1, 539, 16, 3, 2, 1), ).setIndexNames((0, "AIISUBNET-MIB", "aiiSubnetIndex2"))
if mibBuilder.loadTexts: aiiSubnetEntry2.setStatus('current')
aiiSubnetIndex2 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiiSubnetIndex2.setStatus('current')
aiiIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 3, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiiIPAddr.setStatus('current')
aiiSubnetRange = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiiSubnetRange.setStatus('current')
aiiSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 3, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiiSubnetMask.setStatus('current')
mibBuilder.exportSymbols("AIISUBNET-MIB", aiiSubnetRange=aiiSubnetRange, aiiSubnetMask=aiiSubnetMask, aiiSubnetEntry=aiiSubnetEntry, aiiSubnetNetMask=aiiSubnetNetMask, aiiSubnetEntryStatus=aiiSubnetEntryStatus, aiiSubnetBcastAddr=aiiSubnetBcastAddr, aiiSubnetIfIndex=aiiSubnetIfIndex, aiiSubnet=aiiSubnet, aiiSubnetIndex=aiiSubnetIndex, SubnetIndex=SubnetIndex, aiiSubnetTable2=aiiSubnetTable2, aiiSubnetAdmnStatus=aiiSubnetAdmnStatus, aiSLC2=aiSLC2, aiiSubnetEntry2=aiiSubnetEntry2, aiiSubnetAddr=aiiSubnetAddr, aii=aii, aiiSubnetTable=aiiSubnetTable, aiiIPAddr=aiiIPAddr, aiiSubnetType=aiiSubnetType, PYSNMP_MODULE_ID=aiiSubnet, aiiSubnetIndex2=aiiSubnetIndex2)
