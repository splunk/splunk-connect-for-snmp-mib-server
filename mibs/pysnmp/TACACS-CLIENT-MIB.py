#
# PySNMP MIB module TACACS-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TACACS-CLIENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:07:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
fastPath, = mibBuilder.importSymbols("EdgeSwitch-REF-MIB", "fastPath")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
iso, ObjectIdentity, Integer32, IpAddress, Counter32, Counter64, Bits, NotificationType, Gauge32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ModuleIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "Integer32", "IpAddress", "Counter32", "Counter64", "Bits", "NotificationType", "Gauge32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ModuleIdentity", "MibIdentifier")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
agentTacacsClientMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4413, 1, 1, 18))
agentTacacsClientMIB.setRevisions(('2011-12-14 00:00', '2011-01-26 00:00', '2007-05-23 00:00', '2005-08-17 00:44',))
if mibBuilder.loadTexts: agentTacacsClientMIB.setLastUpdated('201112140000Z')
if mibBuilder.loadTexts: agentTacacsClientMIB.setOrganization('Broadcom Inc')
agentTacacsClientObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 18, 1))
agentTacacsGlobalConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 18, 1, 1))
agentTacacsGlobalTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 18, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTacacsGlobalTimeout.setStatus('current')
agentTacacsGlobalKey = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 18, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTacacsGlobalKey.setStatus('current')
agentTacacsServerTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 18, 1, 2), )
if mibBuilder.loadTexts: agentTacacsServerTable.setStatus('current')
agentTacacsServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 18, 1, 2, 1), ).setIndexNames((0, "TACACS-CLIENT-MIB", "agentTacacsServerIpAddress"))
if mibBuilder.loadTexts: agentTacacsServerEntry.setStatus('current')
agentTacacsServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 18, 1, 2, 1, 1), InetAddress())
if mibBuilder.loadTexts: agentTacacsServerIpAddress.setStatus('current')
agentTacacsPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 18, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(49)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTacacsPortNumber.setStatus('current')
agentTacacsTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 18, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTacacsTimeOut.setStatus('current')
agentTacacsKey = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 18, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTacacsKey.setStatus('current')
agentTacacsPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 18, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTacacsPriority.setStatus('current')
agentTacacsServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 18, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTacacsServerStatus.setStatus('current')
agentTacacsServerIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 18, 1, 2, 1, 7), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTacacsServerIpAddrType.setStatus('current')
agentTacacsSourceInterface = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 18, 1, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTacacsSourceInterface.setStatus('current')
mibBuilder.exportSymbols("TACACS-CLIENT-MIB", agentTacacsGlobalConfigGroup=agentTacacsGlobalConfigGroup, agentTacacsPortNumber=agentTacacsPortNumber, agentTacacsGlobalKey=agentTacacsGlobalKey, agentTacacsServerEntry=agentTacacsServerEntry, agentTacacsSourceInterface=agentTacacsSourceInterface, agentTacacsServerIpAddrType=agentTacacsServerIpAddrType, agentTacacsServerIpAddress=agentTacacsServerIpAddress, agentTacacsKey=agentTacacsKey, agentTacacsPriority=agentTacacsPriority, agentTacacsClientMIB=agentTacacsClientMIB, agentTacacsServerTable=agentTacacsServerTable, agentTacacsTimeOut=agentTacacsTimeOut, PYSNMP_MODULE_ID=agentTacacsClientMIB, agentTacacsServerStatus=agentTacacsServerStatus, agentTacacsGlobalTimeout=agentTacacsGlobalTimeout, agentTacacsClientObjects=agentTacacsClientObjects)
