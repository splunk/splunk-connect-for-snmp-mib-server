#
# PySNMP MIB module HP-AUTH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-AUTH-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:20:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ospfVirtIfEntry, ospfIfEntry = mibBuilder.importSymbols("OSPF-MIB", "ospfVirtIfEntry", "ospfIfEntry")
rip2IfConfEntry, = mibBuilder.importSymbols("RIPv2-MIB", "rip2IfConfEntry")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, Unsigned32, NotificationType, Integer32, IpAddress, iso, MibIdentifier, ObjectIdentity, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, Gauge32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Unsigned32", "NotificationType", "Integer32", "IpAddress", "iso", "MibIdentifier", "ObjectIdentity", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "Gauge32", "Bits")
TruthValue, RowStatus, DisplayString, TextualConvention, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "DisplayString", "TextualConvention", "DateAndTime")
hpSwitchAuthenticationMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16))
hpSwitchAuthenticationMIB.setRevisions(('2017-09-28 00:00', '2017-05-25 00:00', '2017-03-16 00:00', '2017-01-19 00:00', '2016-11-21 00:00', '2016-11-11 00:00', '2016-07-29 00:00', '2016-06-27 00:00', '2016-02-23 00:00', '2016-01-22 00:00', '2015-10-28 00:00', '2015-07-02 00:00', '2015-05-24 00:00', '2015-04-01 00:00', '2015-03-16 00:00', '2014-08-04 00:00', '2014-03-12 00:00', '2013-11-12 00:00', '2013-06-12 00:00', '2013-05-27 00:00', '2012-05-11 00:00', '2012-05-01 00:00', '2011-06-02 00:00', '2011-02-12 00:00', '2011-02-07 00:00', '2009-06-06 00:00', '2009-06-03 00:00', '2009-04-02 00:00', '2009-02-27 00:00', '2009-01-29 00:00', '2008-07-11 00:00', '2008-06-11 00:00', '2007-09-21 00:00', '2006-10-05 00:00', '2004-09-12 00:00', '2004-03-31 00:12', '2001-08-10 02:38',))
if mibBuilder.loadTexts: hpSwitchAuthenticationMIB.setLastUpdated('201709280000Z')
if mibBuilder.loadTexts: hpSwitchAuthenticationMIB.setOrganization('HPE Networking')
hpSwitchAuthenticationConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 1))
hpSwitchNumLoginAttempts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchNumLoginAttempts.setStatus('current')
hpSwitchAuthRespectPriv = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthRespectPriv.setStatus('current')
hpSwitchAuthenticationEncryptCredentialsMethod = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("aes256cbc", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthenticationEncryptCredentialsMethod.setStatus('current')
hpSwitchAuthLockoutDelay = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthLockoutDelay.setStatus('current')
hpSwitchMinimumPasswordLength = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchMinimumPasswordLength.setStatus('current')
hpSwitchAuthAllowVlanTagged = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthAllowVlanTagged.setStatus('current')
hpSwitchAuthenHideSensitiveData = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthenHideSensitiveData.setStatus('current')
hpSwitchAuthUnlockUser = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthUnlockUser.setStatus('current')
hpSwitchAuthUserBasedLockout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthUserBasedLockout.setStatus('current')
hpSwitchAuthenticationPasswordConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 25))
hpSwitchAuthPwdControlCheck = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 25, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthPwdControlCheck.setStatus('current')
hpSwitchAuthPwdUserNameCheck = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 25, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthPwdUserNameCheck.setStatus('current')
hpSwitchAuthPwdRepeatCharactersCheck = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 25, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthPwdRepeatCharactersCheck.setStatus('current')
hpSwitchAuthPwdRepeatPasswordCheck = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 25, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthPwdRepeatPasswordCheck.setStatus('current')
hpSwitchAuthPwdAgingCheck = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 25, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthPwdAgingCheck.setStatus('current')
hpSwitchAuthPwdLogonDetailsCheck = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 25, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthPwdLogonDetailsCheck.setStatus('current')
hpSwitchAuthPwdAgingValue = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 25, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 365)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthPwdAgingValue.setStatus('current')
hpSwitchAuthPwdHistoryCheck = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 25, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthPwdHistoryCheck.setStatus('current')
hpSwitchAuthPwdHistoryRecordsRange = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 25, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 15)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthPwdHistoryRecordsRange.setStatus('current')
hpSwitchAuthPwdAlertBeforeExpiry = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 25, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthPwdAlertBeforeExpiry.setStatus('current')
hpSwitchAuthPwdExpiredUserLoginDays = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 25, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 90)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthPwdExpiredUserLoginDays.setStatus('current')
hpSwitchAuthPwdExpiredUserLoginAttempts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 25, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthPwdExpiredUserLoginAttempts.setStatus('current')
hpSwitchAuthPwdUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 25, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 168)).clone(24)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthPwdUpdateInterval.setStatus('current')
hpSwitchAuthenTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 2), )
if mibBuilder.loadTexts: hpSwitchAuthenTable.setStatus('current')
hpSwitchAuthenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 2, 1), ).setIndexNames((0, "HP-AUTH-MIB", "hpSwitchAuthenIndex"))
if mibBuilder.loadTexts: hpSwitchAuthenEntry.setStatus('current')
hpSwitchAuthenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("console", 1), ("telnet", 2), ("ieee8021X", 3), ("webui", 4), ("ssh", 5), ("webauth", 6), ("macauth", 7), ("snmp", 8), ("localMacAuth", 9))))
if mibBuilder.loadTexts: hpSwitchAuthenIndex.setStatus('current')
hpSwitchAuthenLoginPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("local", 1), ("tacacs", 2), ("radius", 3), ("radiusEap", 4), ("radiusChap", 5), ("sshRsa", 6), ("radiusPeapMSChapv2", 7), ("x509Certificate", 8), ("twoFactor", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthenLoginPrimary.setStatus('current')
hpSwitchAuthenLoginSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("local", 1), ("none", 2), ("authorized", 3), ("cachedReauth", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthenLoginSecondary.setStatus('current')
hpSwitchAuthenEnablePrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 6, 7, 8, 9))).clone(namedValues=NamedValues(("local", 1), ("tacacs", 2), ("radius", 3), ("sshPubkey", 6), ("radiusPeapMSChapv2", 7), ("x509Certificate", 8), ("twoFactor", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthenEnablePrimary.setStatus('current')
hpSwitchAuthenEnableSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("none", 2), ("authorized", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthenEnableSecondary.setStatus('current')
hpSwitchAuthenLoginServerGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthenLoginServerGroupName.setStatus('current')
hpSwitchAuthenEnableServerGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthenEnableServerGroupName.setStatus('current')
hpSwitchAuthenLoginTwoFactorType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("publickeypassword", 1), ("certificatepassword", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthenLoginTwoFactorType.setStatus('current')
hpSwitchAuthenEnableTwoFactorType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("publickeypassword", 1), ("certificatepassword", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthenEnableTwoFactorType.setStatus('current')
hpSwitchAuthenLoginSecondAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("tacacs", 2), ("radius", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthenLoginSecondAuthMethod.setStatus('current')
hpSwitchAuthenEnableSecondAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("tacacs", 2), ("radius", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthenEnableSecondAuthMethod.setStatus('current')
hpSwitchAuthenClientPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("x509Certificate", 1), ("none", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthenClientPrimary.setStatus('current')
hpSwitchAuthenClientSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("none", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthenClientSecondary.setStatus('current')
hpSwitchAuthenCachedReauthAuthorized = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 2, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthenCachedReauthAuthorized.setStatus('current')
hpSwitchAuthenPwdCompositionTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 24), )
if mibBuilder.loadTexts: hpSwitchAuthenPwdCompositionTable.setStatus('current')
hpSwitchAuthenPwdCompositionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 24, 1), ).setIndexNames((0, "HP-AUTH-MIB", "hpSwitchAuthenCompositionIndex"))
if mibBuilder.loadTexts: hpSwitchAuthenPwdCompositionEntry.setStatus('current')
hpSwitchAuthenCompositionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 24, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("lowerCase", 1), ("upperCase", 2), ("specialCharacter", 3), ("number", 4))))
if mibBuilder.loadTexts: hpSwitchAuthenCompositionIndex.setStatus('current')
hpSwitchAuthenCompositionValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 24, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAuthenCompositionValue.setStatus('current')
hpSwitchTacacsConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 3))
hpSwitchTacacsTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchTacacsTimeout.setStatus('current')
hpSwitchTacacsAuthKey = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 3, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchTacacsAuthKey.setStatus('current')
hpSwitchTacacsAuthKeyEncrypted = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 3, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchTacacsAuthKeyEncrypted.setStatus('current')
hpSwitchTacacsDeadTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchTacacsDeadTime.setStatus('current')
hpSwitchTacacsServersTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 4), )
if mibBuilder.loadTexts: hpSwitchTacacsServersTable.setStatus('current')
hpSwitchTacacsServersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 4, 1), ).setIndexNames((0, "HP-AUTH-MIB", "hpSwitchTacacsServerIndex"))
if mibBuilder.loadTexts: hpSwitchTacacsServersEntry.setStatus('current')
hpSwitchTacacsServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpSwitchTacacsServerIndex.setStatus('current')
hpSwitchTacacsServerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 4, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchTacacsServerIpAddr.setStatus('current')
hpSwitchTacacsServerKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchTacacsServerKey.setStatus('current')
hpSwitchTacacsServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchTacacsServerStatus.setStatus('current')
hpSwitchTacacsServerIsOobm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 4, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchTacacsServerIsOobm.setStatus('current')
hpSwitchTacacsServerKeyEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchTacacsServerKeyEncrypted.setStatus('current')
hpTacacsStatsServersTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5), )
if mibBuilder.loadTexts: hpTacacsStatsServersTable.setStatus('current')
hpTacacsStatsServersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1), ).setIndexNames((0, "HP-AUTH-MIB", "hpTacacsStatsServerIndex"))
if mibBuilder.loadTexts: hpTacacsStatsServersEntry.setStatus('current')
hpTacacsStatsServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpTacacsStatsServerIndex.setStatus('current')
hpTacacsStatsTacacsServerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpTacacsStatsTacacsServerIpAddr.setStatus('current')
hpTacacsStatsNumSessOpened = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpTacacsStatsNumSessOpened.setStatus('current')
hpTacacsStatsNumSessClosed = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpTacacsStatsNumSessClosed.setStatus('current')
hpTacacsStatsNumSessAborted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpTacacsStatsNumSessAborted.setStatus('current')
hpTacacsStatsNumSessErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpTacacsStatsNumSessErrors.setStatus('current')
hpTacacsStatsNumPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpTacacsStatsNumPktsIn.setStatus('current')
hpTacacsStatsNumPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpTacacsStatsNumPktsOut.setStatus('current')
hpTacacsStatsNumAuthPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpTacacsStatsNumAuthPktsIn.setStatus('current')
hpTacacsStatsNumAuthPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpTacacsStatsNumAuthPktsOut.setStatus('current')
hpTacacsStatsNumAuthPktsTimedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpTacacsStatsNumAuthPktsTimedOut.setStatus('current')
hpTacacsStatsNumAutzPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpTacacsStatsNumAutzPktsIn.setStatus('current')
hpTacacsStatsNumAutzPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpTacacsStatsNumAutzPktsOut.setStatus('current')
hpTacacsStatsNumAutzPktsTimedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpTacacsStatsNumAutzPktsTimedOut.setStatus('current')
hpTacacsStatsNumAcctPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpTacacsStatsNumAcctPktsIn.setStatus('current')
hpTacacsStatsNumAcctPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpTacacsStatsNumAcctPktsOut.setStatus('current')
hpTacacsStatsNumAcctPktsTimedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpTacacsStatsNumAcctPktsTimedOut.setStatus('current')
hpSwitchRadiusConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 6))
hpSwitchRadiusDeadTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchRadiusDeadTime.setStatus('current')
hpSwitchRadiusTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchRadiusTimeout.setStatus('current')
hpSwitchRadiusRetransmitAttempts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchRadiusRetransmitAttempts.setStatus('current')
hpSwitchRadiusAuthKey = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 6, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchRadiusAuthKey.setStatus('current')
hpSwitchRadiusDynAutzPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 6, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(3799)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchRadiusDynAutzPortNumber.setStatus('current')
hpSwitchRadiusAuthKeyEncrypted = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 6, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchRadiusAuthKeyEncrypted.setStatus('current')
hpSwitchRadiusTracking = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 6, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchRadiusTracking.setStatus('current')
hpSwitchRadiusTrackingUserName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 6, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)).clone('radius-tracking-user')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchRadiusTrackingUserName.setStatus('current')
hpSwitchRadiusCppmIdentity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 6, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchRadiusCppmIdentity.setStatus('current')
hpSwitchRadiusCppmKey = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 6, 13), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 64), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchRadiusCppmKey.setStatus('current')
hpSwitchRadiusCppmEncryptedKey = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 6, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchRadiusCppmEncryptedKey.setStatus('current')
hpSwitchRadiusDeadTimeInfinite = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 6, 15), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchRadiusDeadTimeInfinite.setStatus('current')
hpSwitchRadiusTrackingInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 6, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchRadiusTrackingInterval.setStatus('current')
hpSwitchRadiusServerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 7), )
if mibBuilder.loadTexts: hpSwitchRadiusServerTable.setStatus('current')
hpSwitchRadiusServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 7, 1), ).setIndexNames((0, "HP-AUTH-MIB", "hpSwitchRadiusServerIndex"))
if mibBuilder.loadTexts: hpSwitchRadiusServerEntry.setStatus('current')
hpSwitchRadiusServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpSwitchRadiusServerIndex.setStatus('current')
hpSwitchRadiusServerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 7, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchRadiusServerIpAddr.setStatus('deprecated')
hpSwitchRadiusServerKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchRadiusServerKey.setStatus('current')
hpSwitchRadiusServerAuthPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchRadiusServerAuthPortNumber.setStatus('current')
hpSwitchRadiusServerAcctPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchRadiusServerAcctPortNumber.setStatus('current')
hpSwitchRadiusServerDynAutzEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 7, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchRadiusServerDynAutzEnabled.setStatus('current')
hpSwitchRadiusServerDynAutzTimeWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(300)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchRadiusServerDynAutzTimeWindow.setStatus('current')
hpSwitchRadiusServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 7, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchRadiusServerStatus.setStatus('current')
hpSwitchRadiusServerIsOobm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 7, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchRadiusServerIsOobm.setStatus('current')
hpSwitchRadiusServerKeyEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 7, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchRadiusServerKeyEncrypted.setStatus('current')
hpSwitchRadiusServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 7, 1, 11), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchRadiusServerAddrType.setStatus('current')
hpSwitchRadiusServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 7, 1, 12), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchRadiusServerAddress.setStatus('current')
hpSwitchRadiusServerDynAutzTimeWindowType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 7, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("positive", 0), ("plusorminus", 1))).clone('positive')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchRadiusServerDynAutzTimeWindowType.setStatus('current')
hpSwitchKmsChainConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 15), )
if mibBuilder.loadTexts: hpSwitchKmsChainConfigTable.setStatus('current')
hpSwitchKmsChainConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 15, 1), ).setIndexNames((0, "HP-AUTH-MIB", "hpSwitchKmsChainId"))
if mibBuilder.loadTexts: hpSwitchKmsChainConfigEntry.setStatus('current')
hpSwitchKmsChainId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767)))
if mibBuilder.loadTexts: hpSwitchKmsChainId.setStatus('current')
hpSwitchKmsChainName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 15, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchKmsChainName.setStatus('current')
hpSwitchKmsChainKeys = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 15, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchKmsChainKeys.setStatus('current')
hpSwitchKmsChainActiveKeys = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 15, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchKmsChainActiveKeys.setStatus('current')
hpSwitchKmsChainExpKeys = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 15, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchKmsChainExpKeys.setStatus('current')
hpSwitchKmsChainStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 15, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchKmsChainStatus.setStatus('current')
hpSwitchKmsKeyConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 16), )
if mibBuilder.loadTexts: hpSwitchKmsKeyConfigTable.setStatus('current')
hpSwitchKmsKeyConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 16, 1), ).setIndexNames((0, "HP-AUTH-MIB", "hpSwitchKmsKeyChainId"), (0, "HP-AUTH-MIB", "hpSwitchKmsKeyId"))
if mibBuilder.loadTexts: hpSwitchKmsKeyConfigEntry.setStatus('current')
hpSwitchKmsKeyChainId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767)))
if mibBuilder.loadTexts: hpSwitchKmsKeyChainId.setStatus('current')
hpSwitchKmsKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 16, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: hpSwitchKmsKeyId.setStatus('current')
hpSwitchKmsKeyStr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 16, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchKmsKeyStr.setStatus('current')
hpSwitchKmsKeyStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 16, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchKmsKeyStartTime.setStatus('current')
hpSwitchKmsKeyStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 16, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchKmsKeyStopTime.setStatus('current')
hpSwitchKmsKeyTxStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 16, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchKmsKeyTxStartTime.setStatus('current')
hpSwitchKmsKeyTxStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 16, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchKmsKeyTxStopTime.setStatus('current')
hpSwitchKmsKeyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 16, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchKmsKeyStatus.setStatus('current')
hpSwitchKmsKeyEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 16, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchKmsKeyEncrypted.setStatus('current')
hpSwitchOspfIfAuthTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 17), )
if mibBuilder.loadTexts: hpSwitchOspfIfAuthTable.setStatus('current')
hpSwitchOspfIfAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 17, 1), )
ospfIfEntry.registerAugmentions(("HP-AUTH-MIB", "hpSwitchOspfIfAuthEntry"))
hpSwitchOspfIfAuthEntry.setIndexNames(*ospfIfEntry.getIndexNames())
if mibBuilder.loadTexts: hpSwitchOspfIfAuthEntry.setStatus('current')
hpSwitchOspfIfAuthChain = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 17, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchOspfIfAuthChain.setStatus('current')
hpSwitchOspfIfAuthKeyEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 17, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchOspfIfAuthKeyEncrypted.setStatus('current')
hpSwitchOspfVirtIfAuthTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 18), )
if mibBuilder.loadTexts: hpSwitchOspfVirtIfAuthTable.setStatus('current')
hpSwitchOspfVirtIfAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 18, 1), )
ospfVirtIfEntry.registerAugmentions(("HP-AUTH-MIB", "hpSwitchOspfVirtIfAuthEntry"))
hpSwitchOspfVirtIfAuthEntry.setIndexNames(*ospfVirtIfEntry.getIndexNames())
if mibBuilder.loadTexts: hpSwitchOspfVirtIfAuthEntry.setStatus('current')
hpSwitchOspfVirtIfAuthChain = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 18, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchOspfVirtIfAuthChain.setStatus('current')
hpSwitchOspfVirtIfAuthKeyEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 18, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchOspfVirtIfAuthKeyEncrypted.setStatus('current')
hpSwitchSslConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 12))
hpSwitchSslAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchSslAdminStatus.setStatus('current')
hpSwitchSslPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 12, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(443)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchSslPortNumber.setStatus('current')
hpSwitchCertConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 13))
hpSwitchServerCertificateOperation = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("useInstalled", 2), ("createAndUseSelfSigned", 3), ("createCACertReq", 4), ("applyCASignedCert", 5), ("abortCASignedRequest", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchServerCertificateOperation.setStatus('current')
hpSwitchServerNewRSAKeyOperation = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 13, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("useInstalled", 1), ("createBits512", 2), ("createBits768", 3), ("createBits1024", 4), ("createBits2048", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchServerNewRSAKeyOperation.setStatus('current')
hpSwitchServerNewCertificateStartDate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 13, 3), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchServerNewCertificateStartDate.setStatus('current')
hpSwitchServerNewCertificateEndDate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 13, 4), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchServerNewCertificateEndDate.setStatus('current')
hpSwitchServerNewCertificateCommonName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 13, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchServerNewCertificateCommonName.setStatus('deprecated')
hpSwitchServerNewCertificateOrgUnit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 13, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchServerNewCertificateOrgUnit.setStatus('deprecated')
hpSwitchServerNewCertificateOrgName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 13, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchServerNewCertificateOrgName.setStatus('deprecated')
hpSwitchServerNewCertificateCityName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 13, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchServerNewCertificateCityName.setStatus('deprecated')
hpSwitchServerNewCertificateStateName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 13, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchServerNewCertificateStateName.setStatus('deprecated')
hpSwitchServerNewCertificateCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 13, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchServerNewCertificateCountryCode.setStatus('current')
hpSwitchServerNewCertCommonName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 13, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchServerNewCertCommonName.setStatus('current')
hpSwitchServerNewCertOrgUnit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 13, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchServerNewCertOrgUnit.setStatus('current')
hpSwitchServerNewCertOrgName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 13, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchServerNewCertOrgName.setStatus('current')
hpSwitchServerNewCertCityName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 13, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchServerNewCertCityName.setStatus('current')
hpSwitchServerNewCertStateName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 13, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchServerNewCertStateName.setStatus('current')
hpSwitchServerNewCertKeySizeExists = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 13, 16), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchServerNewCertKeySizeExists.setStatus('current')
hpSwitchCertStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 14))
hpSwitchServerCertificateType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("pendCaSigned", 2), ("selfSigned", 3), ("caSigned", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchServerCertificateType.setStatus('current')
hpSwitchServerCertificateRSAKeySize = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 14, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("bits512", 1), ("bits768", 2), ("bits1024", 3), ("bits2048", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchServerCertificateRSAKeySize.setStatus('current')
hpSwitchServerCertificateSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 14, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchServerCertificateSerialNumber.setStatus('current')
hpSwitchServerCertificateStartDate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 14, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchServerCertificateStartDate.setStatus('current')
hpSwitchServerCertificateEndDate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 14, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchServerCertificateEndDate.setStatus('current')
hpSwitchServerCertificateCommonName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 14, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchServerCertificateCommonName.setStatus('current')
hpSwitchServerCertificateOrgUnit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 14, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchServerCertificateOrgUnit.setStatus('current')
hpSwitchServerCertificateOrgName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 14, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchServerCertificateOrgName.setStatus('current')
hpSwitchServerCertificateCityName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 14, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchServerCertificateCityName.setStatus('current')
hpSwitchServerCertificateStateName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 14, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchServerCertificateStateName.setStatus('current')
hpSwitchServerCertificateCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 14, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchServerCertificateCountryCode.setStatus('current')
hpSwitchServerCertificateFingerprintMD5 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 14, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchServerCertificateFingerprintMD5.setStatus('current')
hpSwitchServerCertificateFingerprintSHA1 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 14, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 51))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchServerCertificateFingerprintSHA1.setStatus('current')
hpSwitchFrontPanelSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 26))
hpSwitchFpsPasswordClear = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 26, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("enable", 0), ("enablewithreset", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchFpsPasswordClear.setStatus('current')
hpSwitchFpsFactoryReset = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 26, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchFpsFactoryReset.setStatus('current')
hpSwitchFpsPasswordRecovery = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 26, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("normal", 1), ("strong", 2))).clone('strong')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchFpsPasswordRecovery.setStatus('current')
hpSwitchFpsDiagnosticResetClearButton = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 26, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchFpsDiagnosticResetClearButton.setStatus('current')
hpSwitchFpsDiagnosticResetSerialConsole = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 26, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchFpsDiagnosticResetSerialConsole.setStatus('current')
hpSwitchFpsDisplayInConfig = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 26, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchFpsDisplayInConfig.setStatus('current')
hpicfSwitchUserConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19), )
if mibBuilder.loadTexts: hpicfSwitchUserConfigTable.setStatus('current')
hpicfSwitchUserConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1), ).setIndexNames((0, "HP-AUTH-MIB", "hpicfSwitchUserConfigIndex"))
if mibBuilder.loadTexts: hpicfSwitchUserConfigEntry.setStatus('current')
hpicfSwitchUserConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpicfSwitchUserConfigIndex.setStatus('current')
hpicfSwitchUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchUserName.setStatus('current')
hpicfSwitchOperatorName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchOperatorName.setStatus('current')
hpicfSwitchUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchUserPassword.setStatus('current')
hpicfSwitchOperatorPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchOperatorPassword.setStatus('current')
hpicfSwitchUserConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchUserConfigStatus.setStatus('current')
hpicfSwitchPortAccessName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchPortAccessName.setStatus('current')
hpicfSwitchPortAccessPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchPortAccessPassword.setStatus('current')
hpicfSwitchUserPasswordHashType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("plainText", 1), ("sha1", 3), ("sha256", 4))).clone('plainText')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchUserPasswordHashType.setStatus('current')
hpicfSwitchOperatorPasswordHashType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("plainText", 1), ("sha1", 3), ("sha256", 4))).clone('plainText')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchOperatorPasswordHashType.setStatus('current')
hpicfSwitchPortAccessPasswordHashType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unknown", 0), ("plainText", 1))).clone('plainText')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchPortAccessPasswordHashType.setStatus('current')
hpicfSwitchUserPasswordEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchUserPasswordEncrypted.setStatus('current')
hpicfSwitchOperatorPasswordEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchOperatorPasswordEncrypted.setStatus('current')
hpicfSwitchPortAccessPasswordEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchPortAccessPasswordEncrypted.setStatus('current')
hpicfSwitchBypassUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchBypassUsername.setStatus('current')
hpicfSwitchUserPwdAgingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 365))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchUserPwdAgingInterval.setStatus('current')
hpicfSwitchOperatorPwdAgingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 365))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchOperatorPwdAgingInterval.setStatus('current')
hpicfSwitchUserPwdLengthValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15, 64)).clone(15)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchUserPwdLengthValue.setStatus('current')
hpicfSwitchOperatorPwdLengthValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 64)).clone(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchOperatorPwdLengthValue.setStatus('current')
hpicfSwitchNonPlaintextSha256 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchNonPlaintextSha256.setStatus('current')
hpicfSwitchUserPasswordHashSha256 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchUserPasswordHashSha256.setStatus('current')
hpicfSwitchOperatorPasswordHashSha256 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 19, 1, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSwitchOperatorPasswordHashSha256.setStatus('current')
hpSwitchAAAServerGroupTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 20), )
if mibBuilder.loadTexts: hpSwitchAAAServerGroupTable.setStatus('current')
hpSwitchAAAServerGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 20, 1), ).setIndexNames((0, "HP-AUTH-MIB", "hpSwitchAAAServerGroupProtocolType"), (0, "HP-AUTH-MIB", "hpSwitchAAAServerGroupIndex"), (0, "HP-AUTH-MIB", "hpSwitchAAAServerGroupServerIndex"))
if mibBuilder.loadTexts: hpSwitchAAAServerGroupEntry.setStatus('current')
hpSwitchAAAServerGroupProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("radius", 1), ("tacacs", 2))))
if mibBuilder.loadTexts: hpSwitchAAAServerGroupProtocolType.setStatus('current')
hpSwitchAAAServerGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 20, 1, 2), Integer32())
if mibBuilder.loadTexts: hpSwitchAAAServerGroupIndex.setStatus('current')
hpSwitchAAAServerGroupServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 20, 1, 3), Integer32())
if mibBuilder.loadTexts: hpSwitchAAAServerGroupServerIndex.setStatus('current')
hpSwitchAAAServerGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 20, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchAAAServerGroupName.setStatus('current')
hpSwitchAAAServerGroupServerInetType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 20, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchAAAServerGroupServerInetType.setStatus('current')
hpSwitchAAAServerGroupServerInetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 20, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchAAAServerGroupServerInetAddr.setStatus('current')
hpSwitchAAAServerGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 20, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchAAAServerGroupStatus.setStatus('current')
hpSwitchLocalMgmtPrivUsernamesTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 21), )
if mibBuilder.loadTexts: hpSwitchLocalMgmtPrivUsernamesTable.setStatus('current')
hpSwitchLocalMgmtPrivUsernamesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 21, 1), ).setIndexNames((0, "HP-AUTH-MIB", "hpSwitchLocalMgmtPrivUsernameIndex"))
if mibBuilder.loadTexts: hpSwitchLocalMgmtPrivUsernamesEntry.setStatus('current')
hpSwitchLocalMgmtPrivUsernameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 21, 1, 1), Integer32())
if mibBuilder.loadTexts: hpSwitchLocalMgmtPrivUsernameIndex.setStatus('current')
hpSwitchLocalMgmtPrivUsernameStr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 21, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchLocalMgmtPrivUsernameStr.setStatus('current')
hpSwitchLocalMgmtPrivUsernamePasswdType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("sha1", 3), ("sha256", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchLocalMgmtPrivUsernamePasswdType.setStatus('current')
hpSwitchLocalMgmtPrivUsernamePasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 21, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchLocalMgmtPrivUsernamePasswd.setStatus('current')
hpSwitchLocalMgmtPrivUsernameGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 21, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchLocalMgmtPrivUsernameGrpIndex.setStatus('current')
hpSwitchLocalMgmtPrivUsernameStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 21, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchLocalMgmtPrivUsernameStatus.setStatus('current')
hpSwitchLocalMgmtPwdUserAgingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 21, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 365))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchLocalMgmtPwdUserAgingInterval.setStatus('current')
hpSwitchLocalMgmtPwdUserPasswdLengthValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 21, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)).clone(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchLocalMgmtPwdUserPasswdLengthValue.setStatus('current')
hpSwitchLocalMgmtPrivUsernamePasswdSha256 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 21, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchLocalMgmtPrivUsernamePasswdSha256.setStatus('current')
hpSwitchAuthenticationMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11))
hpSwitchAuthenticationMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1))
hpSwitchAuthenticationMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2))
hpSwitchAuthenticationMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 1)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthenticationConfigGroup"), ("HP-AUTH-MIB", "hpSwitchTacacsConfigGroup"), ("HP-AUTH-MIB", "hpSwitchTacacsStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance = hpSwitchAuthenticationMIBCompliance.setStatus('deprecated')
hpSwitchAuthenticationMIBCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 2)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthenticationConfigGroup"), ("HP-AUTH-MIB", "hpSwitchTacacsConfigGroup"), ("HP-AUTH-MIB", "hpSwitchTacacsStatsGroup"), ("HP-AUTH-MIB", "hpSwitchRadiusConfigGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance1 = hpSwitchAuthenticationMIBCompliance1.setStatus('deprecated')
hpSwitchAuthenticationMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 3)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthenticationConfigGroup1"), ("HP-AUTH-MIB", "hpSwitchTacacsConfigGroup"), ("HP-AUTH-MIB", "hpSwitchTacacsStatsGroup"), ("HP-AUTH-MIB", "hpSwitchRadiusConfigGroup"), ("HP-AUTH-MIB", "hpSwitchKmsGroup"), ("HP-AUTH-MIB", "hpSwitchOspfAuthGroup"), ("HP-AUTH-MIB", "hpSwitchSslGroup"), ("HP-AUTH-MIB", "hpSwitchCertGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance2 = hpSwitchAuthenticationMIBCompliance2.setStatus('deprecated')
hpSwitchAuthenticationMIBComplianceOobm = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 4)).setObjects(("HP-AUTH-MIB", "hpSwitchRadiusOobmGroup"), ("HP-AUTH-MIB", "hpSwitchTacacsOobmGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBComplianceOobm = hpSwitchAuthenticationMIBComplianceOobm.setStatus('deprecated')
hpSwitchRipIfAuthTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 23), )
if mibBuilder.loadTexts: hpSwitchRipIfAuthTable.setStatus('current')
hpSwitchRipIfAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 23, 1), )
rip2IfConfEntry.registerAugmentions(("HP-AUTH-MIB", "hpSwitchRipIfAuthEntry"))
hpSwitchRipIfAuthEntry.setIndexNames(*rip2IfConfEntry.getIndexNames())
if mibBuilder.loadTexts: hpSwitchRipIfAuthEntry.setStatus('current')
hpSwitchRipIfAuthChain = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 23, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchRipIfAuthChain.setStatus('current')
hpSwitchRip2IfConfAuthKeyEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 23, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchRip2IfConfAuthKeyEncrypted.setStatus('current')
hpSwitchAuthNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 0))
hpSwitchPasswordExpiryNotify = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 0, 1)).setObjects(("HP-AUTH-MIB", "hpicfSwitchUserName"))
if mibBuilder.loadTexts: hpSwitchPasswordExpiryNotify.setStatus('current')
hpSwitchUserConfigMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 5)).setObjects(("HP-AUTH-MIB", "hpSwitchUserConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchUserConfigMIBCompliance = hpSwitchUserConfigMIBCompliance.setStatus('deprecated')
hpSwitchAAAServerMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 6)).setObjects(("HP-AUTH-MIB", "hpSwitchAAAServerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAAAServerMIBCompliance = hpSwitchAAAServerMIBCompliance.setStatus('current')
hpSwitchAuthenMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 7)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthenGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenMIBCompliance = hpSwitchAuthenMIBCompliance.setStatus('current')
hpSwitchLocalMgmtPrivUserMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 8)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthLocalMgmtPrivUserGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchLocalMgmtPrivUserMIBCompliance = hpSwitchLocalMgmtPrivUserMIBCompliance.setStatus('deprecated')
hpSwitchAuthenticationMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 9)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthenticationConfigGroup1"), ("HP-AUTH-MIB", "hpSwitchTacacsConfigGroup1"), ("HP-AUTH-MIB", "hpSwitchTacacsStatsGroup"), ("HP-AUTH-MIB", "hpSwitchRadiusConfigGroup1"), ("HP-AUTH-MIB", "hpSwitchKmsGroup1"), ("HP-AUTH-MIB", "hpSwitchOspfAuthGroup"), ("HP-AUTH-MIB", "hpSwitchSslGroup"), ("HP-AUTH-MIB", "hpSwitchCertGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance3 = hpSwitchAuthenticationMIBCompliance3.setStatus('deprecated')
hpSwitchUserConfigMIBCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 10)).setObjects(("HP-AUTH-MIB", "hpSwitchUserConfigGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchUserConfigMIBCompliance1 = hpSwitchUserConfigMIBCompliance1.setStatus('deprecated')
hpSwitchLocalMgmtPrivUserMIBCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 11)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthLocalMgmtPrivUserGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchLocalMgmtPrivUserMIBCompliance1 = hpSwitchLocalMgmtPrivUserMIBCompliance1.setStatus('current')
hpSwitchAuthenticationMIBCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 12)).setObjects(("HP-AUTH-MIB", "hpSwitchCertStatusGroup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance4 = hpSwitchAuthenticationMIBCompliance4.setStatus('deprecated')
hpSwitchAuthenticationMIBCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 13)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthenticationConfigGroup2"), ("HP-AUTH-MIB", "hpSwitchTacacsConfigGroup1"), ("HP-AUTH-MIB", "hpSwitchTacacsStatsGroup"), ("HP-AUTH-MIB", "hpSwitchRadiusConfigGroup1"), ("HP-AUTH-MIB", "hpSwitchKmsGroup1"), ("HP-AUTH-MIB", "hpSwitchOspfAuthGroup"), ("HP-AUTH-MIB", "hpSwitchSslGroup"), ("HP-AUTH-MIB", "hpSwitchCertGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance5 = hpSwitchAuthenticationMIBCompliance5.setStatus('deprecated')
hpSwitchAuthenticationMIBComplianceOobm1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 14)).setObjects(("HP-AUTH-MIB", "hpSwitchTacacsOobmGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBComplianceOobm1 = hpSwitchAuthenticationMIBComplianceOobm1.setStatus('current')
hpSwitchAuthenticationMIBCompliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 15)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthenticationConfigGroup2"), ("HP-AUTH-MIB", "hpSwitchTacacsConfigGroup1"), ("HP-AUTH-MIB", "hpSwitchTacacsStatsGroup"), ("HP-AUTH-MIB", "hpSwitchRadiusConfigGroup2"), ("HP-AUTH-MIB", "hpSwitchKmsGroup1"), ("HP-AUTH-MIB", "hpSwitchOspfAuthGroup"), ("HP-AUTH-MIB", "hpSwitchSslGroup"), ("HP-AUTH-MIB", "hpSwitchCertGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance6 = hpSwitchAuthenticationMIBCompliance6.setStatus('deprecated')
hpSwitchAuthenticationMIBCompliance7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 16)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthenticationConfigGroup3"), ("HP-AUTH-MIB", "hpSwitchTacacsConfigGroup1"), ("HP-AUTH-MIB", "hpSwitchTacacsStatsGroup"), ("HP-AUTH-MIB", "hpSwitchRadiusConfigGroup2"), ("HP-AUTH-MIB", "hpSwitchKmsGroup1"), ("HP-AUTH-MIB", "hpSwitchOspfAuthGroup"), ("HP-AUTH-MIB", "hpSwitchSslGroup"), ("HP-AUTH-MIB", "hpSwitchCertGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance7 = hpSwitchAuthenticationMIBCompliance7.setStatus('deprecated')
hpSwitchAuthenticationMIBCompliance8 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 17)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthenticationConfigGroup4"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance8 = hpSwitchAuthenticationMIBCompliance8.setStatus('current')
hpSwitchAuthenticationMIBCompliance9 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 18)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthenticationConfigGroup3"), ("HP-AUTH-MIB", "hpSwitchTacacsConfigGroup1"), ("HP-AUTH-MIB", "hpSwitchTacacsStatsGroup"), ("HP-AUTH-MIB", "hpSwitchRadiusConfigGroup3"), ("HP-AUTH-MIB", "hpSwitchKmsGroup1"), ("HP-AUTH-MIB", "hpSwitchOspfAuthGroup"), ("HP-AUTH-MIB", "hpSwitchSslGroup"), ("HP-AUTH-MIB", "hpSwitchCertGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup3"), ("HP-AUTH-MIB", "hpSwitchRipAuthGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance9 = hpSwitchAuthenticationMIBCompliance9.setStatus('deprecated')
hpSwitchAuthenticationMIBCompliance10 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 19)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthenticationPasswordConfigGroup"), ("HP-AUTH-MIB", "hpSwitchAuthNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance10 = hpSwitchAuthenticationMIBCompliance10.setStatus('current')
hpSwitchLocalMgmtPrivUserMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 20)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthLocalMgmtPrivUserGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchLocalMgmtPrivUserMIBCompliance2 = hpSwitchLocalMgmtPrivUserMIBCompliance2.setStatus('deprecated')
hpSwitchUserConfigMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 21)).setObjects(("HP-AUTH-MIB", "hpSwitchUserConfigGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchUserConfigMIBCompliance2 = hpSwitchUserConfigMIBCompliance2.setStatus('deprecated')
hpSwitchAuthenticationMIBCompliance11 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 22)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthenticationConfigGroup3"), ("HP-AUTH-MIB", "hpSwitchTacacsConfigGroup1"), ("HP-AUTH-MIB", "hpSwitchTacacsStatsGroup"), ("HP-AUTH-MIB", "hpSwitchRadiusConfigGroup4"), ("HP-AUTH-MIB", "hpSwitchKmsGroup1"), ("HP-AUTH-MIB", "hpSwitchOspfAuthGroup"), ("HP-AUTH-MIB", "hpSwitchSslGroup"), ("HP-AUTH-MIB", "hpSwitchCertGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup3"), ("HP-AUTH-MIB", "hpSwitchRipAuthGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance11 = hpSwitchAuthenticationMIBCompliance11.setStatus('deprecated')
hpSwitchAuthenticationMIBCompliance12 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 23)).setObjects(("HP-AUTH-MIB", "hpSwitchTacacsConfigGroup1"), ("HP-AUTH-MIB", "hpSwitchTacacsStatsGroup"), ("HP-AUTH-MIB", "hpSwitchRadiusConfigGroup4"), ("HP-AUTH-MIB", "hpSwitchAuthenticationConfigGroup5"), ("HP-AUTH-MIB", "hpSwitchKmsGroup1"), ("HP-AUTH-MIB", "hpSwitchOspfAuthGroup"), ("HP-AUTH-MIB", "hpSwitchSslGroup"), ("HP-AUTH-MIB", "hpSwitchCertGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup3"), ("HP-AUTH-MIB", "hpSwitchRipAuthGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance12 = hpSwitchAuthenticationMIBCompliance12.setStatus('deprecated')
hpSwitchUserConfigMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 24)).setObjects(("HP-AUTH-MIB", "hpSwitchUserConfigGroup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchUserConfigMIBCompliance3 = hpSwitchUserConfigMIBCompliance3.setStatus('current')
hpSwitchLocalMgmtPrivUserMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 25)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthLocalMgmtPrivUserGroup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchLocalMgmtPrivUserMIBCompliance3 = hpSwitchLocalMgmtPrivUserMIBCompliance3.setStatus('current')
hpSwitchAuthenticationMIBCompliance13 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 26)).setObjects(("HP-AUTH-MIB", "hpSwitchTacacsConfigGroup1"), ("HP-AUTH-MIB", "hpSwitchTacacsStatsGroup"), ("HP-AUTH-MIB", "hpSwitchRadiusConfigGroup4"), ("HP-AUTH-MIB", "hpSwitchAuthenticationConfigGroup5"), ("HP-AUTH-MIB", "hpSwitchKmsGroup1"), ("HP-AUTH-MIB", "hpSwitchOspfAuthGroup1"), ("HP-AUTH-MIB", "hpSwitchSslGroup"), ("HP-AUTH-MIB", "hpSwitchCertGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup3"), ("HP-AUTH-MIB", "hpSwitchRipAuthGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance13 = hpSwitchAuthenticationMIBCompliance13.setStatus('deprecated')
hpSwitchAuthenticationMIBCompliance14 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 27)).setObjects(("HP-AUTH-MIB", "hpSwitchTacacsConfigGroup1"), ("HP-AUTH-MIB", "hpSwitchTacacsStatsGroup"), ("HP-AUTH-MIB", "hpSwitchRadiusConfigGroup4"), ("HP-AUTH-MIB", "hpSwitchAuthenticationConfigGroup6"), ("HP-AUTH-MIB", "hpSwitchKmsGroup1"), ("HP-AUTH-MIB", "hpSwitchOspfAuthGroup1"), ("HP-AUTH-MIB", "hpSwitchSslGroup"), ("HP-AUTH-MIB", "hpSwitchCertGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup3"), ("HP-AUTH-MIB", "hpSwitchRipAuthGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance14 = hpSwitchAuthenticationMIBCompliance14.setStatus('deprecated')
hpSwitchAuthenticationMIBCompliance15 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 28)).setObjects(("HP-AUTH-MIB", "hpSwitchTacacsConfigGroup1"), ("HP-AUTH-MIB", "hpSwitchTacacsStatsGroup"), ("HP-AUTH-MIB", "hpSwitchRadiusConfigGroup4"), ("HP-AUTH-MIB", "hpSwitchAuthenticationConfigGroup7"), ("HP-AUTH-MIB", "hpSwitchKmsGroup1"), ("HP-AUTH-MIB", "hpSwitchOspfAuthGroup1"), ("HP-AUTH-MIB", "hpSwitchSslGroup"), ("HP-AUTH-MIB", "hpSwitchCertGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup3"), ("HP-AUTH-MIB", "hpSwitchRipAuthGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance15 = hpSwitchAuthenticationMIBCompliance15.setStatus('deprecated')
hpSwitchAuthenticationMIBCompliance16 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 29)).setObjects(("HP-AUTH-MIB", "hpSwitchTacacsConfigGroup1"), ("HP-AUTH-MIB", "hpSwitchTacacsStatsGroup"), ("HP-AUTH-MIB", "hpSwitchRadiusConfigGroup5"), ("HP-AUTH-MIB", "hpSwitchAuthenticationConfigGroup7"), ("HP-AUTH-MIB", "hpSwitchKmsGroup1"), ("HP-AUTH-MIB", "hpSwitchOspfAuthGroup1"), ("HP-AUTH-MIB", "hpSwitchSslGroup"), ("HP-AUTH-MIB", "hpSwitchCertGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup3"), ("HP-AUTH-MIB", "hpSwitchRipAuthGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance16 = hpSwitchAuthenticationMIBCompliance16.setStatus('deprecated')
hpSwitchFrontPanelSecurityCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 30)).setObjects(("HP-AUTH-MIB", "hpSwitchFrontPanelSecurityGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchFrontPanelSecurityCompliance = hpSwitchFrontPanelSecurityCompliance.setStatus('current')
hpSwitchAuthenticationMIBCompliance17 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 1, 31)).setObjects(("HP-AUTH-MIB", "hpSwitchTacacsConfigGroup1"), ("HP-AUTH-MIB", "hpSwitchTacacsStatsGroup"), ("HP-AUTH-MIB", "hpSwitchRadiusConfigGroup6"), ("HP-AUTH-MIB", "hpSwitchAuthenticationConfigGroup8"), ("HP-AUTH-MIB", "hpSwitchKmsGroup1"), ("HP-AUTH-MIB", "hpSwitchOspfAuthGroup1"), ("HP-AUTH-MIB", "hpSwitchSslGroup"), ("HP-AUTH-MIB", "hpSwitchCertGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup"), ("HP-AUTH-MIB", "hpSwitchCertStatusGroup3"), ("HP-AUTH-MIB", "hpSwitchRipAuthGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationMIBCompliance17 = hpSwitchAuthenticationMIBCompliance17.setStatus('current')
hpSwitchAuthenticationConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 1)).setObjects(("HP-AUTH-MIB", "hpSwitchNumLoginAttempts"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginPrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthenEnablePrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableSecondary"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationConfigGroup = hpSwitchAuthenticationConfigGroup.setStatus('deprecated')
hpSwitchTacacsConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 2)).setObjects(("HP-AUTH-MIB", "hpSwitchTacacsTimeout"), ("HP-AUTH-MIB", "hpSwitchTacacsAuthKey"), ("HP-AUTH-MIB", "hpSwitchTacacsServerIpAddr"), ("HP-AUTH-MIB", "hpSwitchTacacsServerKey"), ("HP-AUTH-MIB", "hpSwitchTacacsServerStatus"), ("HP-AUTH-MIB", "hpSwitchTacacsDeadTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchTacacsConfigGroup = hpSwitchTacacsConfigGroup.setStatus('deprecated')
hpSwitchTacacsStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 3)).setObjects(("HP-AUTH-MIB", "hpTacacsStatsTacacsServerIpAddr"), ("HP-AUTH-MIB", "hpTacacsStatsNumSessOpened"), ("HP-AUTH-MIB", "hpTacacsStatsNumSessClosed"), ("HP-AUTH-MIB", "hpTacacsStatsNumSessAborted"), ("HP-AUTH-MIB", "hpTacacsStatsNumSessErrors"), ("HP-AUTH-MIB", "hpTacacsStatsNumPktsIn"), ("HP-AUTH-MIB", "hpTacacsStatsNumPktsOut"), ("HP-AUTH-MIB", "hpTacacsStatsNumAuthPktsIn"), ("HP-AUTH-MIB", "hpTacacsStatsNumAuthPktsOut"), ("HP-AUTH-MIB", "hpTacacsStatsNumAuthPktsTimedOut"), ("HP-AUTH-MIB", "hpTacacsStatsNumAutzPktsIn"), ("HP-AUTH-MIB", "hpTacacsStatsNumAutzPktsOut"), ("HP-AUTH-MIB", "hpTacacsStatsNumAutzPktsTimedOut"), ("HP-AUTH-MIB", "hpTacacsStatsNumAcctPktsIn"), ("HP-AUTH-MIB", "hpTacacsStatsNumAcctPktsOut"), ("HP-AUTH-MIB", "hpTacacsStatsNumAcctPktsTimedOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchTacacsStatsGroup = hpSwitchTacacsStatsGroup.setStatus('current')
hpSwitchRadiusConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 4)).setObjects(("HP-AUTH-MIB", "hpSwitchRadiusDeadTime"), ("HP-AUTH-MIB", "hpSwitchRadiusTimeout"), ("HP-AUTH-MIB", "hpSwitchRadiusRetransmitAttempts"), ("HP-AUTH-MIB", "hpSwitchRadiusAuthKey"), ("HP-AUTH-MIB", "hpSwitchRadiusDynAutzPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerIpAddr"), ("HP-AUTH-MIB", "hpSwitchRadiusServerKey"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAuthPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAcctPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerDynAutzEnabled"), ("HP-AUTH-MIB", "hpSwitchRadiusServerDynAutzTimeWindow"), ("HP-AUTH-MIB", "hpSwitchRadiusServerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchRadiusConfigGroup = hpSwitchRadiusConfigGroup.setStatus('deprecated')
hpSwitchKmsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 6)).setObjects(("HP-AUTH-MIB", "hpSwitchKmsChainName"), ("HP-AUTH-MIB", "hpSwitchKmsChainKeys"), ("HP-AUTH-MIB", "hpSwitchKmsChainActiveKeys"), ("HP-AUTH-MIB", "hpSwitchKmsChainExpKeys"), ("HP-AUTH-MIB", "hpSwitchKmsChainStatus"), ("HP-AUTH-MIB", "hpSwitchKmsKeyStr"), ("HP-AUTH-MIB", "hpSwitchKmsKeyStartTime"), ("HP-AUTH-MIB", "hpSwitchKmsKeyStopTime"), ("HP-AUTH-MIB", "hpSwitchKmsKeyTxStartTime"), ("HP-AUTH-MIB", "hpSwitchKmsKeyTxStopTime"), ("HP-AUTH-MIB", "hpSwitchKmsChainStatus"), ("HP-AUTH-MIB", "hpSwitchKmsKeyStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchKmsGroup = hpSwitchKmsGroup.setStatus('deprecated')
hpSwitchOspfAuthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 7)).setObjects(("HP-AUTH-MIB", "hpSwitchOspfVirtIfAuthChain"), ("HP-AUTH-MIB", "hpSwitchOspfIfAuthChain"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchOspfAuthGroup = hpSwitchOspfAuthGroup.setStatus('deprecated')
hpSwitchAuthenticationConfigGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 8)).setObjects(("HP-AUTH-MIB", "hpSwitchNumLoginAttempts"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginPrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthenEnablePrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthRespectPriv"), ("HP-AUTH-MIB", "hpSwitchAuthenticationEncryptCredentialsMethod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationConfigGroup1 = hpSwitchAuthenticationConfigGroup1.setStatus('deprecated')
hpSwitchSslGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 9)).setObjects(("HP-AUTH-MIB", "hpSwitchSslAdminStatus"), ("HP-AUTH-MIB", "hpSwitchSslPortNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchSslGroup = hpSwitchSslGroup.setStatus('current')
hpSwitchCertGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 10)).setObjects(("HP-AUTH-MIB", "hpSwitchServerCertificateType"), ("HP-AUTH-MIB", "hpSwitchServerCertificateRSAKeySize"), ("HP-AUTH-MIB", "hpSwitchServerCertificateSerialNumber"), ("HP-AUTH-MIB", "hpSwitchServerCertificateStartDate"), ("HP-AUTH-MIB", "hpSwitchServerCertificateEndDate"), ("HP-AUTH-MIB", "hpSwitchServerCertificateCommonName"), ("HP-AUTH-MIB", "hpSwitchServerCertificateOrgUnit"), ("HP-AUTH-MIB", "hpSwitchServerCertificateOrgName"), ("HP-AUTH-MIB", "hpSwitchServerCertificateCityName"), ("HP-AUTH-MIB", "hpSwitchServerCertificateStateName"), ("HP-AUTH-MIB", "hpSwitchServerCertificateCountryCode"), ("HP-AUTH-MIB", "hpSwitchServerCertificateFingerprintMD5"), ("HP-AUTH-MIB", "hpSwitchServerCertificateFingerprintSHA1"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchCertGroup = hpSwitchCertGroup.setStatus('current')
hpSwitchCertStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 11)).setObjects(("HP-AUTH-MIB", "hpSwitchServerCertificateOperation"), ("HP-AUTH-MIB", "hpSwitchServerNewRSAKeyOperation"), ("HP-AUTH-MIB", "hpSwitchServerNewCertificateStartDate"), ("HP-AUTH-MIB", "hpSwitchServerNewCertificateEndDate"), ("HP-AUTH-MIB", "hpSwitchServerNewCertCommonName"), ("HP-AUTH-MIB", "hpSwitchServerNewCertOrgUnit"), ("HP-AUTH-MIB", "hpSwitchServerNewCertOrgName"), ("HP-AUTH-MIB", "hpSwitchServerNewCertCityName"), ("HP-AUTH-MIB", "hpSwitchServerNewCertStateName"), ("HP-AUTH-MIB", "hpSwitchServerNewCertificateCountryCode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchCertStatusGroup = hpSwitchCertStatusGroup.setStatus('current')
hpSwitchTacacsOobmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 12)).setObjects(("HP-AUTH-MIB", "hpSwitchTacacsServerIpAddr"), ("HP-AUTH-MIB", "hpSwitchTacacsServerIsOobm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchTacacsOobmGroup = hpSwitchTacacsOobmGroup.setStatus('current')
hpSwitchRadiusOobmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 13)).setObjects(("HP-AUTH-MIB", "hpSwitchRadiusServerIpAddr"), ("HP-AUTH-MIB", "hpSwitchRadiusServerIsOobm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchRadiusOobmGroup = hpSwitchRadiusOobmGroup.setStatus('deprecated')
hpSwitchCertStatusGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 14)).setObjects(("HP-AUTH-MIB", "hpSwitchServerNewCertificateCommonName"), ("HP-AUTH-MIB", "hpSwitchServerNewCertificateOrgUnit"), ("HP-AUTH-MIB", "hpSwitchServerNewCertificateOrgName"), ("HP-AUTH-MIB", "hpSwitchServerNewCertificateCityName"), ("HP-AUTH-MIB", "hpSwitchServerNewCertificateStateName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchCertStatusGroup2 = hpSwitchCertStatusGroup2.setStatus('deprecated')
hpSwitchUserConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 15)).setObjects(("HP-AUTH-MIB", "hpicfSwitchUserName"), ("HP-AUTH-MIB", "hpicfSwitchOperatorName"), ("HP-AUTH-MIB", "hpicfSwitchPortAccessName"), ("HP-AUTH-MIB", "hpicfSwitchUserPassword"), ("HP-AUTH-MIB", "hpicfSwitchOperatorPassword"), ("HP-AUTH-MIB", "hpicfSwitchPortAccessPassword"), ("HP-AUTH-MIB", "hpicfSwitchUserPasswordHashType"), ("HP-AUTH-MIB", "hpicfSwitchOperatorPasswordHashType"), ("HP-AUTH-MIB", "hpicfSwitchPortAccessPasswordHashType"), ("HP-AUTH-MIB", "hpicfSwitchUserConfigStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchUserConfigGroup = hpSwitchUserConfigGroup.setStatus('deprecated')
hpSwitchAAAServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 16)).setObjects(("HP-AUTH-MIB", "hpSwitchAAAServerGroupName"), ("HP-AUTH-MIB", "hpSwitchAAAServerGroupServerInetType"), ("HP-AUTH-MIB", "hpSwitchAAAServerGroupServerInetAddr"), ("HP-AUTH-MIB", "hpSwitchAAAServerGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAAAServerGroup = hpSwitchAAAServerGroup.setStatus('current')
hpSwitchAuthenGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 17)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthenLoginServerGroupName"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableServerGroupName"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginTwoFactorType"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableTwoFactorType"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginSecondAuthMethod"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableSecondAuthMethod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenGroup = hpSwitchAuthenGroup.setStatus('current')
hpSwitchAuthLocalMgmtPrivUserGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 18)).setObjects(("HP-AUTH-MIB", "hpSwitchLocalMgmtPrivUsernameStr"), ("HP-AUTH-MIB", "hpSwitchLocalMgmtPrivUsernamePasswdType"), ("HP-AUTH-MIB", "hpSwitchLocalMgmtPrivUsernamePasswd"), ("HP-AUTH-MIB", "hpSwitchLocalMgmtPrivUsernameGrpIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthLocalMgmtPrivUserGroup = hpSwitchAuthLocalMgmtPrivUserGroup.setStatus('deprecated')
hpSwitchAuthLocalMgmtPrivUserGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 34)).setObjects(("HP-AUTH-MIB", "hpSwitchLocalMgmtPrivUsernameStr"), ("HP-AUTH-MIB", "hpSwitchLocalMgmtPrivUsernamePasswdType"), ("HP-AUTH-MIB", "hpSwitchLocalMgmtPrivUsernamePasswd"), ("HP-AUTH-MIB", "hpSwitchLocalMgmtPrivUsernameGrpIndex"), ("HP-AUTH-MIB", "hpSwitchLocalMgmtPwdUserAgingInterval"), ("HP-AUTH-MIB", "hpSwitchLocalMgmtPwdUserPasswdLengthValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthLocalMgmtPrivUserGroup2 = hpSwitchAuthLocalMgmtPrivUserGroup2.setStatus('deprecated')
hpSwitchTacacsConfigGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 19)).setObjects(("HP-AUTH-MIB", "hpSwitchTacacsTimeout"), ("HP-AUTH-MIB", "hpSwitchTacacsAuthKey"), ("HP-AUTH-MIB", "hpSwitchTacacsAuthKeyEncrypted"), ("HP-AUTH-MIB", "hpSwitchTacacsServerIpAddr"), ("HP-AUTH-MIB", "hpSwitchTacacsServerKey"), ("HP-AUTH-MIB", "hpSwitchTacacsServerKeyEncrypted"), ("HP-AUTH-MIB", "hpSwitchTacacsServerStatus"), ("HP-AUTH-MIB", "hpSwitchTacacsDeadTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchTacacsConfigGroup1 = hpSwitchTacacsConfigGroup1.setStatus('current')
hpSwitchRadiusConfigGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 20)).setObjects(("HP-AUTH-MIB", "hpSwitchRadiusDeadTime"), ("HP-AUTH-MIB", "hpSwitchRadiusTimeout"), ("HP-AUTH-MIB", "hpSwitchRadiusRetransmitAttempts"), ("HP-AUTH-MIB", "hpSwitchRadiusAuthKey"), ("HP-AUTH-MIB", "hpSwitchRadiusAuthKeyEncrypted"), ("HP-AUTH-MIB", "hpSwitchRadiusDynAutzPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerIpAddr"), ("HP-AUTH-MIB", "hpSwitchRadiusServerKey"), ("HP-AUTH-MIB", "hpSwitchRadiusServerKeyEncrypted"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAuthPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAcctPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerDynAutzEnabled"), ("HP-AUTH-MIB", "hpSwitchRadiusServerDynAutzTimeWindow"), ("HP-AUTH-MIB", "hpSwitchRadiusServerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchRadiusConfigGroup1 = hpSwitchRadiusConfigGroup1.setStatus('deprecated')
hpSwitchKmsGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 21)).setObjects(("HP-AUTH-MIB", "hpSwitchKmsChainName"), ("HP-AUTH-MIB", "hpSwitchKmsChainKeys"), ("HP-AUTH-MIB", "hpSwitchKmsChainActiveKeys"), ("HP-AUTH-MIB", "hpSwitchKmsChainExpKeys"), ("HP-AUTH-MIB", "hpSwitchKmsChainStatus"), ("HP-AUTH-MIB", "hpSwitchKmsKeyStr"), ("HP-AUTH-MIB", "hpSwitchKmsKeyEncrypted"), ("HP-AUTH-MIB", "hpSwitchKmsKeyStartTime"), ("HP-AUTH-MIB", "hpSwitchKmsKeyStopTime"), ("HP-AUTH-MIB", "hpSwitchKmsKeyTxStartTime"), ("HP-AUTH-MIB", "hpSwitchKmsKeyTxStopTime"), ("HP-AUTH-MIB", "hpSwitchKmsChainStatus"), ("HP-AUTH-MIB", "hpSwitchKmsKeyStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchKmsGroup1 = hpSwitchKmsGroup1.setStatus('current')
hpSwitchUserConfigGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 22)).setObjects(("HP-AUTH-MIB", "hpicfSwitchUserName"), ("HP-AUTH-MIB", "hpicfSwitchOperatorName"), ("HP-AUTH-MIB", "hpicfSwitchPortAccessName"), ("HP-AUTH-MIB", "hpicfSwitchUserPassword"), ("HP-AUTH-MIB", "hpicfSwitchOperatorPassword"), ("HP-AUTH-MIB", "hpicfSwitchPortAccessPassword"), ("HP-AUTH-MIB", "hpicfSwitchUserPasswordEncrypted"), ("HP-AUTH-MIB", "hpicfSwitchOperatorPasswordEncrypted"), ("HP-AUTH-MIB", "hpicfSwitchPortAccessPasswordEncrypted"), ("HP-AUTH-MIB", "hpicfSwitchUserPasswordHashType"), ("HP-AUTH-MIB", "hpicfSwitchOperatorPasswordHashType"), ("HP-AUTH-MIB", "hpicfSwitchPortAccessPasswordHashType"), ("HP-AUTH-MIB", "hpicfSwitchUserConfigStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchUserConfigGroup1 = hpSwitchUserConfigGroup1.setStatus('deprecated')
hpSwitchUserConfigGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 33)).setObjects(("HP-AUTH-MIB", "hpicfSwitchUserName"), ("HP-AUTH-MIB", "hpicfSwitchOperatorName"), ("HP-AUTH-MIB", "hpicfSwitchPortAccessName"), ("HP-AUTH-MIB", "hpicfSwitchUserPassword"), ("HP-AUTH-MIB", "hpicfSwitchOperatorPassword"), ("HP-AUTH-MIB", "hpicfSwitchPortAccessPassword"), ("HP-AUTH-MIB", "hpicfSwitchUserPasswordEncrypted"), ("HP-AUTH-MIB", "hpicfSwitchOperatorPasswordEncrypted"), ("HP-AUTH-MIB", "hpicfSwitchPortAccessPasswordEncrypted"), ("HP-AUTH-MIB", "hpicfSwitchUserPasswordHashType"), ("HP-AUTH-MIB", "hpicfSwitchOperatorPasswordHashType"), ("HP-AUTH-MIB", "hpicfSwitchPortAccessPasswordHashType"), ("HP-AUTH-MIB", "hpicfSwitchUserConfigStatus"), ("HP-AUTH-MIB", "hpicfSwitchUserPwdAgingInterval"), ("HP-AUTH-MIB", "hpicfSwitchOperatorPwdAgingInterval"), ("HP-AUTH-MIB", "hpicfSwitchUserPwdLengthValue"), ("HP-AUTH-MIB", "hpicfSwitchOperatorPwdLengthValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchUserConfigGroup2 = hpSwitchUserConfigGroup2.setStatus('deprecated')
hpSwitchUserConfigGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 38)).setObjects(("HP-AUTH-MIB", "hpicfSwitchUserName"), ("HP-AUTH-MIB", "hpicfSwitchOperatorName"), ("HP-AUTH-MIB", "hpicfSwitchPortAccessName"), ("HP-AUTH-MIB", "hpicfSwitchUserPassword"), ("HP-AUTH-MIB", "hpicfSwitchOperatorPassword"), ("HP-AUTH-MIB", "hpicfSwitchPortAccessPassword"), ("HP-AUTH-MIB", "hpicfSwitchUserPasswordEncrypted"), ("HP-AUTH-MIB", "hpicfSwitchOperatorPasswordEncrypted"), ("HP-AUTH-MIB", "hpicfSwitchPortAccessPasswordEncrypted"), ("HP-AUTH-MIB", "hpicfSwitchUserPasswordHashType"), ("HP-AUTH-MIB", "hpicfSwitchOperatorPasswordHashType"), ("HP-AUTH-MIB", "hpicfSwitchPortAccessPasswordHashType"), ("HP-AUTH-MIB", "hpicfSwitchUserConfigStatus"), ("HP-AUTH-MIB", "hpicfSwitchUserPwdAgingInterval"), ("HP-AUTH-MIB", "hpicfSwitchOperatorPwdAgingInterval"), ("HP-AUTH-MIB", "hpicfSwitchUserPwdLengthValue"), ("HP-AUTH-MIB", "hpicfSwitchOperatorPwdLengthValue"), ("HP-AUTH-MIB", "hpicfSwitchNonPlaintextSha256"), ("HP-AUTH-MIB", "hpicfSwitchUserPasswordHashSha256"), ("HP-AUTH-MIB", "hpicfSwitchOperatorPasswordHashSha256"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchUserConfigGroup3 = hpSwitchUserConfigGroup3.setStatus('current')
hpSwitchAuthLocalMgmtPrivUserGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 23)).setObjects(("HP-AUTH-MIB", "hpSwitchLocalMgmtPrivUsernameStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthLocalMgmtPrivUserGroup1 = hpSwitchAuthLocalMgmtPrivUserGroup1.setStatus('current')
hpSwitchCertStatusGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 24)).setObjects(("HP-AUTH-MIB", "hpSwitchServerNewCertKeySizeExists"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchCertStatusGroup3 = hpSwitchCertStatusGroup3.setStatus('current')
hpSwitchAuthenticationConfigGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 25)).setObjects(("HP-AUTH-MIB", "hpSwitchNumLoginAttempts"), ("HP-AUTH-MIB", "hpSwitchAuthLockoutDelay"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginPrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthenEnablePrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthRespectPriv"), ("HP-AUTH-MIB", "hpSwitchAuthenticationEncryptCredentialsMethod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationConfigGroup2 = hpSwitchAuthenticationConfigGroup2.setStatus('deprecated')
hpSwitchRadiusConfigGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 26)).setObjects(("HP-AUTH-MIB", "hpSwitchRadiusDeadTime"), ("HP-AUTH-MIB", "hpSwitchRadiusTimeout"), ("HP-AUTH-MIB", "hpSwitchRadiusRetransmitAttempts"), ("HP-AUTH-MIB", "hpSwitchRadiusAuthKey"), ("HP-AUTH-MIB", "hpSwitchRadiusAuthKeyEncrypted"), ("HP-AUTH-MIB", "hpSwitchRadiusDynAutzPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAddrType"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAddress"), ("HP-AUTH-MIB", "hpSwitchRadiusServerKey"), ("HP-AUTH-MIB", "hpSwitchRadiusServerKeyEncrypted"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAuthPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAcctPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerDynAutzEnabled"), ("HP-AUTH-MIB", "hpSwitchRadiusServerDynAutzTimeWindow"), ("HP-AUTH-MIB", "hpSwitchRadiusServerIsOobm"), ("HP-AUTH-MIB", "hpSwitchRadiusServerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchRadiusConfigGroup2 = hpSwitchRadiusConfigGroup2.setStatus('deprecated')
hpSwitchAuthenticationConfigGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 27)).setObjects(("HP-AUTH-MIB", "hpSwitchNumLoginAttempts"), ("HP-AUTH-MIB", "hpSwitchAuthLockoutDelay"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginPrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthenEnablePrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthRespectPriv"), ("HP-AUTH-MIB", "hpSwitchAuthenticationEncryptCredentialsMethod"), ("HP-AUTH-MIB", "hpSwitchMinimumPasswordLength"), ("HP-AUTH-MIB", "hpSwitchAuthAllowVlanTagged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationConfigGroup3 = hpSwitchAuthenticationConfigGroup3.setStatus('deprecated')
hpSwitchAuthenticationConfigGroup4 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 28)).setObjects(("HP-AUTH-MIB", "hpicfSwitchBypassUsername"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationConfigGroup4 = hpSwitchAuthenticationConfigGroup4.setStatus('current')
hpSwitchRadiusConfigGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 29)).setObjects(("HP-AUTH-MIB", "hpSwitchRadiusDeadTime"), ("HP-AUTH-MIB", "hpSwitchRadiusTimeout"), ("HP-AUTH-MIB", "hpSwitchRadiusRetransmitAttempts"), ("HP-AUTH-MIB", "hpSwitchRadiusAuthKey"), ("HP-AUTH-MIB", "hpSwitchRadiusAuthKeyEncrypted"), ("HP-AUTH-MIB", "hpSwitchRadiusDynAutzPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAddrType"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAddress"), ("HP-AUTH-MIB", "hpSwitchRadiusServerKey"), ("HP-AUTH-MIB", "hpSwitchRadiusServerKeyEncrypted"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAuthPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAcctPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerDynAutzEnabled"), ("HP-AUTH-MIB", "hpSwitchRadiusServerDynAutzTimeWindow"), ("HP-AUTH-MIB", "hpSwitchRadiusServerIsOobm"), ("HP-AUTH-MIB", "hpSwitchRadiusServerStatus"), ("HP-AUTH-MIB", "hpSwitchRadiusTracking"), ("HP-AUTH-MIB", "hpSwitchRadiusTrackingUserName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchRadiusConfigGroup3 = hpSwitchRadiusConfigGroup3.setStatus('deprecated')
hpSwitchRipAuthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 31)).setObjects(("HP-AUTH-MIB", "hpSwitchRipIfAuthChain"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchRipAuthGroup = hpSwitchRipAuthGroup.setStatus('deprecated')
hpSwitchAuthenticationPasswordConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 32)).setObjects(("HP-AUTH-MIB", "hpSwitchAuthPwdControlCheck"), ("HP-AUTH-MIB", "hpSwitchAuthPwdUserNameCheck"), ("HP-AUTH-MIB", "hpSwitchAuthPwdRepeatCharactersCheck"), ("HP-AUTH-MIB", "hpSwitchAuthPwdRepeatPasswordCheck"), ("HP-AUTH-MIB", "hpSwitchAuthPwdAgingCheck"), ("HP-AUTH-MIB", "hpSwitchAuthPwdLogonDetailsCheck"), ("HP-AUTH-MIB", "hpSwitchAuthPwdAgingValue"), ("HP-AUTH-MIB", "hpSwitchAuthPwdHistoryCheck"), ("HP-AUTH-MIB", "hpSwitchAuthPwdHistoryRecordsRange"), ("HP-AUTH-MIB", "hpSwitchAuthPwdAlertBeforeExpiry"), ("HP-AUTH-MIB", "hpSwitchAuthPwdExpiredUserLoginDays"), ("HP-AUTH-MIB", "hpSwitchAuthPwdExpiredUserLoginAttempts"), ("HP-AUTH-MIB", "hpSwitchAuthPwdUpdateInterval"), ("HP-AUTH-MIB", "hpSwitchAuthenCompositionValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationPasswordConfigGroup = hpSwitchAuthenticationPasswordConfigGroup.setStatus('current')
hpSwitchAuthNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 35)).setObjects(("HP-AUTH-MIB", "hpSwitchPasswordExpiryNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthNotificationGroup = hpSwitchAuthNotificationGroup.setStatus('current')
hpSwitchRadiusConfigGroup4 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 36)).setObjects(("HP-AUTH-MIB", "hpSwitchRadiusDeadTime"), ("HP-AUTH-MIB", "hpSwitchRadiusTimeout"), ("HP-AUTH-MIB", "hpSwitchRadiusRetransmitAttempts"), ("HP-AUTH-MIB", "hpSwitchRadiusAuthKey"), ("HP-AUTH-MIB", "hpSwitchRadiusAuthKeyEncrypted"), ("HP-AUTH-MIB", "hpSwitchRadiusDynAutzPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAddrType"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAddress"), ("HP-AUTH-MIB", "hpSwitchRadiusServerKey"), ("HP-AUTH-MIB", "hpSwitchRadiusServerKeyEncrypted"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAuthPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAcctPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerDynAutzEnabled"), ("HP-AUTH-MIB", "hpSwitchRadiusServerDynAutzTimeWindow"), ("HP-AUTH-MIB", "hpSwitchRadiusServerIsOobm"), ("HP-AUTH-MIB", "hpSwitchRadiusServerStatus"), ("HP-AUTH-MIB", "hpSwitchRadiusServerDynAutzTimeWindowType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchRadiusConfigGroup4 = hpSwitchRadiusConfigGroup4.setStatus('deprecated')
hpSwitchAuthenticationConfigGroup5 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 37)).setObjects(("HP-AUTH-MIB", "hpSwitchNumLoginAttempts"), ("HP-AUTH-MIB", "hpSwitchAuthLockoutDelay"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginPrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthenEnablePrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthRespectPriv"), ("HP-AUTH-MIB", "hpSwitchAuthenticationEncryptCredentialsMethod"), ("HP-AUTH-MIB", "hpSwitchMinimumPasswordLength"), ("HP-AUTH-MIB", "hpSwitchAuthAllowVlanTagged"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginTwoFactorType"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableTwoFactorType"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginSecondAuthMethod"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableSecondAuthMethod"), ("HP-AUTH-MIB", "hpSwitchAuthenClientPrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenClientSecondary"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationConfigGroup5 = hpSwitchAuthenticationConfigGroup5.setStatus('deprecated')
hpSwitchAuthLocalMgmtPrivUserGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 39)).setObjects(("HP-AUTH-MIB", "hpSwitchLocalMgmtPrivUsernameStr"), ("HP-AUTH-MIB", "hpSwitchLocalMgmtPrivUsernamePasswdType"), ("HP-AUTH-MIB", "hpSwitchLocalMgmtPrivUsernamePasswd"), ("HP-AUTH-MIB", "hpSwitchLocalMgmtPrivUsernameGrpIndex"), ("HP-AUTH-MIB", "hpSwitchLocalMgmtPwdUserAgingInterval"), ("HP-AUTH-MIB", "hpSwitchLocalMgmtPwdUserPasswdLengthValue"), ("HP-AUTH-MIB", "hpSwitchLocalMgmtPrivUsernamePasswdSha256"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthLocalMgmtPrivUserGroup3 = hpSwitchAuthLocalMgmtPrivUserGroup3.setStatus('current')
hpSwitchOspfAuthGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 40)).setObjects(("HP-AUTH-MIB", "hpSwitchOspfVirtIfAuthChain"), ("HP-AUTH-MIB", "hpSwitchOspfIfAuthChain"), ("HP-AUTH-MIB", "hpSwitchOspfVirtIfAuthKeyEncrypted"), ("HP-AUTH-MIB", "hpSwitchOspfIfAuthKeyEncrypted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchOspfAuthGroup1 = hpSwitchOspfAuthGroup1.setStatus('current')
hpSwitchRipAuthGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 41)).setObjects(("HP-AUTH-MIB", "hpSwitchRipIfAuthChain"), ("HP-AUTH-MIB", "hpSwitchRip2IfConfAuthKeyEncrypted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchRipAuthGroup1 = hpSwitchRipAuthGroup1.setStatus('current')
hpSwitchAuthenticationConfigGroup6 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 42)).setObjects(("HP-AUTH-MIB", "hpSwitchNumLoginAttempts"), ("HP-AUTH-MIB", "hpSwitchAuthLockoutDelay"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginPrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthenEnablePrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthRespectPriv"), ("HP-AUTH-MIB", "hpSwitchAuthenticationEncryptCredentialsMethod"), ("HP-AUTH-MIB", "hpSwitchMinimumPasswordLength"), ("HP-AUTH-MIB", "hpSwitchAuthAllowVlanTagged"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginTwoFactorType"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableTwoFactorType"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginSecondAuthMethod"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableSecondAuthMethod"), ("HP-AUTH-MIB", "hpSwitchAuthenClientPrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenClientSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthenHideSensitiveData"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationConfigGroup6 = hpSwitchAuthenticationConfigGroup6.setStatus('deprecated')
hpSwitchAuthenticationConfigGroup7 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 43)).setObjects(("HP-AUTH-MIB", "hpSwitchNumLoginAttempts"), ("HP-AUTH-MIB", "hpSwitchAuthLockoutDelay"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginPrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthenEnablePrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthRespectPriv"), ("HP-AUTH-MIB", "hpSwitchAuthenticationEncryptCredentialsMethod"), ("HP-AUTH-MIB", "hpSwitchMinimumPasswordLength"), ("HP-AUTH-MIB", "hpSwitchAuthAllowVlanTagged"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginTwoFactorType"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableTwoFactorType"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginSecondAuthMethod"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableSecondAuthMethod"), ("HP-AUTH-MIB", "hpSwitchAuthenClientPrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenClientSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthenHideSensitiveData"), ("HP-AUTH-MIB", "hpSwitchAuthUnlockUser"), ("HP-AUTH-MIB", "hpSwitchAuthUserBasedLockout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationConfigGroup7 = hpSwitchAuthenticationConfigGroup7.setStatus('deprecated')
hpSwitchRadiusConfigGroup5 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 44)).setObjects(("HP-AUTH-MIB", "hpSwitchRadiusDeadTime"), ("HP-AUTH-MIB", "hpSwitchRadiusTimeout"), ("HP-AUTH-MIB", "hpSwitchRadiusRetransmitAttempts"), ("HP-AUTH-MIB", "hpSwitchRadiusAuthKey"), ("HP-AUTH-MIB", "hpSwitchRadiusAuthKeyEncrypted"), ("HP-AUTH-MIB", "hpSwitchRadiusDynAutzPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAddrType"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAddress"), ("HP-AUTH-MIB", "hpSwitchRadiusServerKey"), ("HP-AUTH-MIB", "hpSwitchRadiusServerKeyEncrypted"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAuthPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAcctPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerDynAutzEnabled"), ("HP-AUTH-MIB", "hpSwitchRadiusServerDynAutzTimeWindow"), ("HP-AUTH-MIB", "hpSwitchRadiusServerIsOobm"), ("HP-AUTH-MIB", "hpSwitchRadiusServerStatus"), ("HP-AUTH-MIB", "hpSwitchRadiusServerDynAutzTimeWindowType"), ("HP-AUTH-MIB", "hpSwitchRadiusCppmIdentity"), ("HP-AUTH-MIB", "hpSwitchRadiusCppmKey"), ("HP-AUTH-MIB", "hpSwitchRadiusCppmEncryptedKey"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchRadiusConfigGroup5 = hpSwitchRadiusConfigGroup5.setStatus('deprecated')
hpSwitchFrontPanelSecurityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 45)).setObjects(("HP-AUTH-MIB", "hpSwitchFpsPasswordClear"), ("HP-AUTH-MIB", "hpSwitchFpsFactoryReset"), ("HP-AUTH-MIB", "hpSwitchFpsPasswordRecovery"), ("HP-AUTH-MIB", "hpSwitchFpsDiagnosticResetClearButton"), ("HP-AUTH-MIB", "hpSwitchFpsDiagnosticResetSerialConsole"), ("HP-AUTH-MIB", "hpSwitchFpsDisplayInConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchFrontPanelSecurityGroup = hpSwitchFrontPanelSecurityGroup.setStatus('current')
hpSwitchRadiusConfigGroup6 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 46)).setObjects(("HP-AUTH-MIB", "hpSwitchRadiusDeadTime"), ("HP-AUTH-MIB", "hpSwitchRadiusTimeout"), ("HP-AUTH-MIB", "hpSwitchRadiusRetransmitAttempts"), ("HP-AUTH-MIB", "hpSwitchRadiusAuthKey"), ("HP-AUTH-MIB", "hpSwitchRadiusAuthKeyEncrypted"), ("HP-AUTH-MIB", "hpSwitchRadiusDynAutzPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAddrType"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAddress"), ("HP-AUTH-MIB", "hpSwitchRadiusServerKey"), ("HP-AUTH-MIB", "hpSwitchRadiusServerKeyEncrypted"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAuthPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerAcctPortNumber"), ("HP-AUTH-MIB", "hpSwitchRadiusServerDynAutzEnabled"), ("HP-AUTH-MIB", "hpSwitchRadiusServerDynAutzTimeWindow"), ("HP-AUTH-MIB", "hpSwitchRadiusServerIsOobm"), ("HP-AUTH-MIB", "hpSwitchRadiusServerStatus"), ("HP-AUTH-MIB", "hpSwitchRadiusServerDynAutzTimeWindowType"), ("HP-AUTH-MIB", "hpSwitchRadiusCppmIdentity"), ("HP-AUTH-MIB", "hpSwitchRadiusCppmKey"), ("HP-AUTH-MIB", "hpSwitchRadiusCppmEncryptedKey"), ("HP-AUTH-MIB", "hpSwitchRadiusDeadTimeInfinite"), ("HP-AUTH-MIB", "hpSwitchRadiusTrackingInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchRadiusConfigGroup6 = hpSwitchRadiusConfigGroup6.setStatus('current')
hpSwitchAuthenticationConfigGroup8 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16, 11, 2, 47)).setObjects(("HP-AUTH-MIB", "hpSwitchNumLoginAttempts"), ("HP-AUTH-MIB", "hpSwitchAuthLockoutDelay"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginPrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthenEnablePrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthRespectPriv"), ("HP-AUTH-MIB", "hpSwitchAuthenticationEncryptCredentialsMethod"), ("HP-AUTH-MIB", "hpSwitchMinimumPasswordLength"), ("HP-AUTH-MIB", "hpSwitchAuthAllowVlanTagged"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginTwoFactorType"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableTwoFactorType"), ("HP-AUTH-MIB", "hpSwitchAuthenLoginSecondAuthMethod"), ("HP-AUTH-MIB", "hpSwitchAuthenEnableSecondAuthMethod"), ("HP-AUTH-MIB", "hpSwitchAuthenClientPrimary"), ("HP-AUTH-MIB", "hpSwitchAuthenClientSecondary"), ("HP-AUTH-MIB", "hpSwitchAuthenHideSensitiveData"), ("HP-AUTH-MIB", "hpSwitchAuthUnlockUser"), ("HP-AUTH-MIB", "hpSwitchAuthUserBasedLockout"), ("HP-AUTH-MIB", "hpSwitchAuthenCachedReauthAuthorized"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAuthenticationConfigGroup8 = hpSwitchAuthenticationConfigGroup8.setStatus('current')
mibBuilder.exportSymbols("HP-AUTH-MIB", hpSwitchSslAdminStatus=hpSwitchSslAdminStatus, hpicfSwitchUserConfigEntry=hpicfSwitchUserConfigEntry, hpSwitchAuthenticationMIBCompliance17=hpSwitchAuthenticationMIBCompliance17, hpSwitchServerNewCertificateCountryCode=hpSwitchServerNewCertificateCountryCode, hpSwitchTacacsDeadTime=hpSwitchTacacsDeadTime, hpSwitchRadiusOobmGroup=hpSwitchRadiusOobmGroup, hpSwitchTacacsServerStatus=hpSwitchTacacsServerStatus, hpSwitchAuthenticationEncryptCredentialsMethod=hpSwitchAuthenticationEncryptCredentialsMethod, hpSwitchAAAServerMIBCompliance=hpSwitchAAAServerMIBCompliance, hpSwitchLocalMgmtPrivUsernamePasswd=hpSwitchLocalMgmtPrivUsernamePasswd, hpSwitchAuthUnlockUser=hpSwitchAuthUnlockUser, hpTacacsStatsNumAuthPktsTimedOut=hpTacacsStatsNumAuthPktsTimedOut, hpSwitchAuthenEnablePrimary=hpSwitchAuthenEnablePrimary, hpSwitchKmsKeyStatus=hpSwitchKmsKeyStatus, hpSwitchTacacsConfig=hpSwitchTacacsConfig, hpSwitchSslPortNumber=hpSwitchSslPortNumber, hpicfSwitchUserPassword=hpicfSwitchUserPassword, hpSwitchAuthAllowVlanTagged=hpSwitchAuthAllowVlanTagged, hpSwitchServerNewCertificateCityName=hpSwitchServerNewCertificateCityName, hpSwitchAuthUserBasedLockout=hpSwitchAuthUserBasedLockout, hpSwitchAAAServerGroupTable=hpSwitchAAAServerGroupTable, hpSwitchLocalMgmtPrivUsernamePasswdSha256=hpSwitchLocalMgmtPrivUsernamePasswdSha256, hpTacacsStatsNumSessAborted=hpTacacsStatsNumSessAborted, hpicfSwitchUserPwdLengthValue=hpicfSwitchUserPwdLengthValue, hpSwitchCertConfig=hpSwitchCertConfig, hpSwitchRadiusServerAddress=hpSwitchRadiusServerAddress, hpSwitchAuthLocalMgmtPrivUserGroup3=hpSwitchAuthLocalMgmtPrivUserGroup3, hpSwitchRadiusConfigGroup2=hpSwitchRadiusConfigGroup2, hpSwitchNumLoginAttempts=hpSwitchNumLoginAttempts, hpSwitchAuthNotifications=hpSwitchAuthNotifications, hpSwitchAuthenticationPasswordConfigGroup=hpSwitchAuthenticationPasswordConfigGroup, hpSwitchTacacsConfigGroup1=hpSwitchTacacsConfigGroup1, hpSwitchAuthenticationConfigGroup4=hpSwitchAuthenticationConfigGroup4, hpSwitchOspfAuthGroup=hpSwitchOspfAuthGroup, hpSwitchAuthenticationConfigGroup1=hpSwitchAuthenticationConfigGroup1, hpSwitchAuthenticationConfigGroup5=hpSwitchAuthenticationConfigGroup5, hpSwitchAuthPwdControlCheck=hpSwitchAuthPwdControlCheck, hpTacacsStatsNumSessErrors=hpTacacsStatsNumSessErrors, hpSwitchAuthenCompositionIndex=hpSwitchAuthenCompositionIndex, hpSwitchUserConfigGroup2=hpSwitchUserConfigGroup2, hpTacacsStatsNumSessClosed=hpTacacsStatsNumSessClosed, hpSwitchKmsChainConfigEntry=hpSwitchKmsChainConfigEntry, hpSwitchFpsDiagnosticResetSerialConsole=hpSwitchFpsDiagnosticResetSerialConsole, hpSwitchAuthenPwdCompositionTable=hpSwitchAuthenPwdCompositionTable, hpSwitchKmsChainActiveKeys=hpSwitchKmsChainActiveKeys, hpSwitchRadiusConfigGroup1=hpSwitchRadiusConfigGroup1, hpSwitchAuthenticationMIBConformance=hpSwitchAuthenticationMIBConformance, hpSwitchCertStatusGroup3=hpSwitchCertStatusGroup3, hpSwitchAuthenLoginSecondary=hpSwitchAuthenLoginSecondary, hpSwitchLocalMgmtPrivUsernamesTable=hpSwitchLocalMgmtPrivUsernamesTable, hpSwitchAuthPwdRepeatCharactersCheck=hpSwitchAuthPwdRepeatCharactersCheck, hpSwitchTacacsOobmGroup=hpSwitchTacacsOobmGroup, hpSwitchRipAuthGroup=hpSwitchRipAuthGroup, hpTacacsStatsTacacsServerIpAddr=hpTacacsStatsTacacsServerIpAddr, hpSwitchKmsKeyConfigEntry=hpSwitchKmsKeyConfigEntry, hpTacacsStatsNumAcctPktsTimedOut=hpTacacsStatsNumAcctPktsTimedOut, hpSwitchOspfIfAuthTable=hpSwitchOspfIfAuthTable, hpTacacsStatsServersEntry=hpTacacsStatsServersEntry, hpSwitchLocalMgmtPrivUsernameStr=hpSwitchLocalMgmtPrivUsernameStr, hpSwitchFrontPanelSecurityGroup=hpSwitchFrontPanelSecurityGroup, hpSwitchFpsPasswordRecovery=hpSwitchFpsPasswordRecovery, hpSwitchServerCertificateFingerprintSHA1=hpSwitchServerCertificateFingerprintSHA1, hpSwitchRadiusServerKeyEncrypted=hpSwitchRadiusServerKeyEncrypted, hpSwitchOspfVirtIfAuthKeyEncrypted=hpSwitchOspfVirtIfAuthKeyEncrypted, hpicfSwitchPortAccessName=hpicfSwitchPortAccessName, hpSwitchServerCertificateCountryCode=hpSwitchServerCertificateCountryCode, hpSwitchAuthenticationMIBCompliance2=hpSwitchAuthenticationMIBCompliance2, hpSwitchTacacsServerKeyEncrypted=hpSwitchTacacsServerKeyEncrypted, hpSwitchTacacsConfigGroup=hpSwitchTacacsConfigGroup, hpSwitchOspfIfAuthEntry=hpSwitchOspfIfAuthEntry, hpicfSwitchOperatorName=hpicfSwitchOperatorName, hpSwitchRadiusServerEntry=hpSwitchRadiusServerEntry, hpicfSwitchUserPasswordEncrypted=hpicfSwitchUserPasswordEncrypted, hpSwitchAuthenticationConfig=hpSwitchAuthenticationConfig, hpSwitchServerCertificateEndDate=hpSwitchServerCertificateEndDate, hpSwitchAuthenticationMIBCompliance=hpSwitchAuthenticationMIBCompliance, hpSwitchRadiusConfigGroup3=hpSwitchRadiusConfigGroup3, hpSwitchRadiusServerAuthPortNumber=hpSwitchRadiusServerAuthPortNumber, hpSwitchAuthenClientPrimary=hpSwitchAuthenClientPrimary, hpSwitchLocalMgmtPrivUserMIBCompliance2=hpSwitchLocalMgmtPrivUserMIBCompliance2, hpSwitchOspfIfAuthKeyEncrypted=hpSwitchOspfIfAuthKeyEncrypted, hpSwitchAuthPwdAgingCheck=hpSwitchAuthPwdAgingCheck, hpSwitchPasswordExpiryNotify=hpSwitchPasswordExpiryNotify, hpSwitchLocalMgmtPrivUserMIBCompliance=hpSwitchLocalMgmtPrivUserMIBCompliance, hpSwitchServerCertificateRSAKeySize=hpSwitchServerCertificateRSAKeySize, hpSwitchRipAuthGroup1=hpSwitchRipAuthGroup1, hpSwitchTacacsServersEntry=hpSwitchTacacsServersEntry, hpSwitchAuthenticationMIBCompliance3=hpSwitchAuthenticationMIBCompliance3, hpSwitchTacacsStatsGroup=hpSwitchTacacsStatsGroup, hpSwitchServerNewRSAKeyOperation=hpSwitchServerNewRSAKeyOperation, hpSwitchTacacsServerKey=hpSwitchTacacsServerKey, hpSwitchAAAServerGroup=hpSwitchAAAServerGroup, hpSwitchAuthLocalMgmtPrivUserGroup=hpSwitchAuthLocalMgmtPrivUserGroup, hpSwitchAuthPwdLogonDetailsCheck=hpSwitchAuthPwdLogonDetailsCheck, hpSwitchAuthenticationMIBGroups=hpSwitchAuthenticationMIBGroups, hpSwitchOspfVirtIfAuthChain=hpSwitchOspfVirtIfAuthChain, hpSwitchFrontPanelSecurityCompliance=hpSwitchFrontPanelSecurityCompliance, hpSwitchTacacsServersTable=hpSwitchTacacsServersTable, hpicfSwitchPortAccessPasswordEncrypted=hpicfSwitchPortAccessPasswordEncrypted, hpSwitchAAAServerGroupEntry=hpSwitchAAAServerGroupEntry, hpSwitchAuthenEnableSecondary=hpSwitchAuthenEnableSecondary, hpSwitchAAAServerGroupName=hpSwitchAAAServerGroupName, hpSwitchUserConfigGroup1=hpSwitchUserConfigGroup1, hpSwitchRadiusConfig=hpSwitchRadiusConfig, hpSwitchAuthenEnableTwoFactorType=hpSwitchAuthenEnableTwoFactorType, hpSwitchAuthenEnableServerGroupName=hpSwitchAuthenEnableServerGroupName, hpSwitchCertStatus=hpSwitchCertStatus, hpSwitchRipIfAuthEntry=hpSwitchRipIfAuthEntry, hpicfSwitchUserPwdAgingInterval=hpicfSwitchUserPwdAgingInterval, hpSwitchAuthenticationMIBCompliance7=hpSwitchAuthenticationMIBCompliance7, hpSwitchUserConfigGroup=hpSwitchUserConfigGroup, hpSwitchRadiusRetransmitAttempts=hpSwitchRadiusRetransmitAttempts, hpSwitchServerNewCertificateStateName=hpSwitchServerNewCertificateStateName, hpSwitchServerCertificateOperation=hpSwitchServerCertificateOperation, hpSwitchCertStatusGroup2=hpSwitchCertStatusGroup2, hpSwitchRadiusCppmKey=hpSwitchRadiusCppmKey, hpSwitchLocalMgmtPrivUsernamePasswdType=hpSwitchLocalMgmtPrivUsernamePasswdType, hpicfSwitchPortAccessPassword=hpicfSwitchPortAccessPassword, hpSwitchAuthenticationMIBCompliance6=hpSwitchAuthenticationMIBCompliance6, hpicfSwitchOperatorPwdAgingInterval=hpicfSwitchOperatorPwdAgingInterval, hpTacacsStatsServerIndex=hpTacacsStatsServerIndex, hpSwitchAuthenLoginSecondAuthMethod=hpSwitchAuthenLoginSecondAuthMethod, hpTacacsStatsNumPktsOut=hpTacacsStatsNumPktsOut, hpSwitchTacacsServerIpAddr=hpSwitchTacacsServerIpAddr, hpSwitchAuthPwdExpiredUserLoginAttempts=hpSwitchAuthPwdExpiredUserLoginAttempts, hpSwitchAuthLockoutDelay=hpSwitchAuthLockoutDelay, hpSwitchAuthenticationMIB=hpSwitchAuthenticationMIB, hpSwitchRadiusTrackingUserName=hpSwitchRadiusTrackingUserName, hpSwitchRadiusDeadTimeInfinite=hpSwitchRadiusDeadTimeInfinite, hpSwitchTacacsAuthKeyEncrypted=hpSwitchTacacsAuthKeyEncrypted, hpSwitchKmsKeyStr=hpSwitchKmsKeyStr, hpSwitchFpsPasswordClear=hpSwitchFpsPasswordClear, hpSwitchRipIfAuthChain=hpSwitchRipIfAuthChain, hpSwitchRip2IfConfAuthKeyEncrypted=hpSwitchRip2IfConfAuthKeyEncrypted, hpSwitchKmsChainId=hpSwitchKmsChainId, hpSwitchRadiusServerIsOobm=hpSwitchRadiusServerIsOobm, hpSwitchAuthPwdRepeatPasswordCheck=hpSwitchAuthPwdRepeatPasswordCheck, hpSwitchAuthenHideSensitiveData=hpSwitchAuthenHideSensitiveData, hpSwitchRadiusServerIndex=hpSwitchRadiusServerIndex, hpSwitchAAAServerGroupServerInetType=hpSwitchAAAServerGroupServerInetType, hpSwitchRadiusConfigGroup6=hpSwitchRadiusConfigGroup6, hpSwitchRipIfAuthTable=hpSwitchRipIfAuthTable, hpSwitchAuthenMIBCompliance=hpSwitchAuthenMIBCompliance, hpSwitchServerNewCertCityName=hpSwitchServerNewCertCityName, hpSwitchKmsKeyTxStopTime=hpSwitchKmsKeyTxStopTime, hpSwitchAAAServerGroupServerIndex=hpSwitchAAAServerGroupServerIndex, hpTacacsStatsNumAuthPktsOut=hpTacacsStatsNumAuthPktsOut, hpSwitchOspfVirtIfAuthEntry=hpSwitchOspfVirtIfAuthEntry, hpSwitchServerNewCertificateStartDate=hpSwitchServerNewCertificateStartDate, hpSwitchFpsFactoryReset=hpSwitchFpsFactoryReset, hpicfSwitchUserConfigIndex=hpicfSwitchUserConfigIndex, hpSwitchServerNewCertKeySizeExists=hpSwitchServerNewCertKeySizeExists, hpSwitchAuthenticationMIBCompliance1=hpSwitchAuthenticationMIBCompliance1, hpSwitchRadiusServerTable=hpSwitchRadiusServerTable, hpSwitchLocalMgmtPrivUserMIBCompliance1=hpSwitchLocalMgmtPrivUserMIBCompliance1, hpSwitchAuthenticationConfigGroup7=hpSwitchAuthenticationConfigGroup7, hpSwitchAAAServerGroupServerInetAddr=hpSwitchAAAServerGroupServerInetAddr, hpSwitchAuthenticationMIBCompliance9=hpSwitchAuthenticationMIBCompliance9, hpSwitchCertGroup=hpSwitchCertGroup, hpSwitchFpsDiagnosticResetClearButton=hpSwitchFpsDiagnosticResetClearButton, hpSwitchMinimumPasswordLength=hpSwitchMinimumPasswordLength, hpSwitchFrontPanelSecurity=hpSwitchFrontPanelSecurity, hpSwitchKmsGroup=hpSwitchKmsGroup, hpicfSwitchUserConfigStatus=hpicfSwitchUserConfigStatus, hpSwitchUserConfigMIBCompliance2=hpSwitchUserConfigMIBCompliance2, hpSwitchAuthenIndex=hpSwitchAuthenIndex, hpTacacsStatsNumSessOpened=hpTacacsStatsNumSessOpened, hpSwitchKmsChainExpKeys=hpSwitchKmsChainExpKeys, hpSwitchSslConfig=hpSwitchSslConfig, hpSwitchAuthenTable=hpSwitchAuthenTable, hpSwitchLocalMgmtPrivUsernameStatus=hpSwitchLocalMgmtPrivUsernameStatus, hpTacacsStatsNumAutzPktsTimedOut=hpTacacsStatsNumAutzPktsTimedOut, hpSwitchRadiusTracking=hpSwitchRadiusTracking, hpicfSwitchOperatorPasswordHashType=hpicfSwitchOperatorPasswordHashType, hpSwitchRadiusServerDynAutzEnabled=hpSwitchRadiusServerDynAutzEnabled, hpSwitchAuthPwdExpiredUserLoginDays=hpSwitchAuthPwdExpiredUserLoginDays, hpSwitchAuthPwdUserNameCheck=hpSwitchAuthPwdUserNameCheck, hpicfSwitchUserPasswordHashType=hpicfSwitchUserPasswordHashType, hpSwitchAuthenticationConfigGroup3=hpSwitchAuthenticationConfigGroup3, hpicfSwitchUserName=hpicfSwitchUserName, hpSwitchAuthenticationConfigGroup8=hpSwitchAuthenticationConfigGroup8, hpSwitchAuthPwdUpdateInterval=hpSwitchAuthPwdUpdateInterval, hpSwitchAuthenEnableSecondAuthMethod=hpSwitchAuthenEnableSecondAuthMethod, hpSwitchAuthenCompositionValue=hpSwitchAuthenCompositionValue, hpSwitchServerNewCertificateCommonName=hpSwitchServerNewCertificateCommonName, hpSwitchServerCertificateOrgUnit=hpSwitchServerCertificateOrgUnit, hpSwitchAuthenPwdCompositionEntry=hpSwitchAuthenPwdCompositionEntry, hpSwitchAAAServerGroupStatus=hpSwitchAAAServerGroupStatus, hpSwitchRadiusDeadTime=hpSwitchRadiusDeadTime, hpSwitchKmsChainKeys=hpSwitchKmsChainKeys, hpSwitchKmsChainStatus=hpSwitchKmsChainStatus, hpSwitchLocalMgmtPrivUsernameIndex=hpSwitchLocalMgmtPrivUsernameIndex, hpTacacsStatsNumAcctPktsOut=hpTacacsStatsNumAcctPktsOut, hpSwitchRadiusServerAcctPortNumber=hpSwitchRadiusServerAcctPortNumber, hpTacacsStatsNumAcctPktsIn=hpTacacsStatsNumAcctPktsIn, hpSwitchOspfIfAuthChain=hpSwitchOspfIfAuthChain, hpSwitchKmsKeyTxStartTime=hpSwitchKmsKeyTxStartTime, hpSwitchServerCertificateStartDate=hpSwitchServerCertificateStartDate, hpSwitchAAAServerGroupProtocolType=hpSwitchAAAServerGroupProtocolType, hpSwitchAuthenCachedReauthAuthorized=hpSwitchAuthenCachedReauthAuthorized, hpSwitchAuthenticationMIBCompliance11=hpSwitchAuthenticationMIBCompliance11, hpSwitchServerNewCertificateOrgName=hpSwitchServerNewCertificateOrgName, hpSwitchAuthenticationMIBCompliance12=hpSwitchAuthenticationMIBCompliance12, hpSwitchLocalMgmtPrivUserMIBCompliance3=hpSwitchLocalMgmtPrivUserMIBCompliance3, hpSwitchRadiusConfigGroup4=hpSwitchRadiusConfigGroup4, hpSwitchTacacsServerIsOobm=hpSwitchTacacsServerIsOobm, hpSwitchRadiusConfigGroup5=hpSwitchRadiusConfigGroup5, hpSwitchRadiusServerStatus=hpSwitchRadiusServerStatus, hpSwitchServerNewCertificateOrgUnit=hpSwitchServerNewCertificateOrgUnit, hpSwitchKmsKeyStopTime=hpSwitchKmsKeyStopTime, hpSwitchAuthenticationMIBCompliance13=hpSwitchAuthenticationMIBCompliance13, hpSwitchAuthenticationMIBCompliance14=hpSwitchAuthenticationMIBCompliance14, hpSwitchRadiusTrackingInterval=hpSwitchRadiusTrackingInterval, hpSwitchAuthenLoginPrimary=hpSwitchAuthenLoginPrimary, hpicfSwitchBypassUsername=hpicfSwitchBypassUsername, hpSwitchLocalMgmtPwdUserPasswdLengthValue=hpSwitchLocalMgmtPwdUserPasswdLengthValue, hpTacacsStatsNumAutzPktsOut=hpTacacsStatsNumAutzPktsOut, hpSwitchRadiusConfigGroup=hpSwitchRadiusConfigGroup, hpSwitchAuthenGroup=hpSwitchAuthenGroup, hpSwitchKmsKeyEncrypted=hpSwitchKmsKeyEncrypted, hpSwitchAuthenClientSecondary=hpSwitchAuthenClientSecondary, hpSwitchRadiusCppmIdentity=hpSwitchRadiusCppmIdentity, hpSwitchOspfVirtIfAuthTable=hpSwitchOspfVirtIfAuthTable, hpSwitchRadiusServerKey=hpSwitchRadiusServerKey, hpSwitchUserConfigMIBCompliance=hpSwitchUserConfigMIBCompliance, hpSwitchKmsGroup1=hpSwitchKmsGroup1, hpSwitchAAAServerGroupIndex=hpSwitchAAAServerGroupIndex, hpSwitchAuthenticationMIBCompliance5=hpSwitchAuthenticationMIBCompliance5, hpTacacsStatsServersTable=hpTacacsStatsServersTable, hpSwitchKmsChainName=hpSwitchKmsChainName, hpSwitchTacacsServerIndex=hpSwitchTacacsServerIndex, PYSNMP_MODULE_ID=hpSwitchAuthenticationMIB, hpSwitchAuthenticationMIBCompliance4=hpSwitchAuthenticationMIBCompliance4, hpSwitchAuthenLoginTwoFactorType=hpSwitchAuthenLoginTwoFactorType, hpSwitchAuthenticationMIBComplianceOobm=hpSwitchAuthenticationMIBComplianceOobm, hpSwitchTacacsTimeout=hpSwitchTacacsTimeout, hpSwitchAuthenticationMIBCompliances=hpSwitchAuthenticationMIBCompliances, hpSwitchAuthenticationConfigGroup=hpSwitchAuthenticationConfigGroup, hpSwitchServerCertificateCityName=hpSwitchServerCertificateCityName, hpSwitchServerCertificateCommonName=hpSwitchServerCertificateCommonName, hpSwitchFpsDisplayInConfig=hpSwitchFpsDisplayInConfig, hpicfSwitchUserConfigTable=hpicfSwitchUserConfigTable, hpSwitchRadiusAuthKey=hpSwitchRadiusAuthKey, hpicfSwitchPortAccessPasswordHashType=hpicfSwitchPortAccessPasswordHashType, hpSwitchAuthenticationMIBCompliance16=hpSwitchAuthenticationMIBCompliance16, hpSwitchUserConfigGroup3=hpSwitchUserConfigGroup3, hpSwitchRadiusDynAutzPortNumber=hpSwitchRadiusDynAutzPortNumber, hpSwitchKmsChainConfigTable=hpSwitchKmsChainConfigTable, hpSwitchServerCertificateType=hpSwitchServerCertificateType, hpSwitchAuthenLoginServerGroupName=hpSwitchAuthenLoginServerGroupName, hpSwitchAuthPwdHistoryRecordsRange=hpSwitchAuthPwdHistoryRecordsRange, hpSwitchAuthPwdAlertBeforeExpiry=hpSwitchAuthPwdAlertBeforeExpiry, hpSwitchTacacsAuthKey=hpSwitchTacacsAuthKey, hpSwitchRadiusCppmEncryptedKey=hpSwitchRadiusCppmEncryptedKey)
mibBuilder.exportSymbols("HP-AUTH-MIB", hpSwitchRadiusTimeout=hpSwitchRadiusTimeout, hpSwitchAuthenticationMIBComplianceOobm1=hpSwitchAuthenticationMIBComplianceOobm1, hpSwitchUserConfigMIBCompliance3=hpSwitchUserConfigMIBCompliance3, hpicfSwitchOperatorPwdLengthValue=hpicfSwitchOperatorPwdLengthValue, hpicfSwitchUserPasswordHashSha256=hpicfSwitchUserPasswordHashSha256, hpSwitchAuthenticationConfigGroup2=hpSwitchAuthenticationConfigGroup2, hpSwitchServerNewCertStateName=hpSwitchServerNewCertStateName, hpSwitchAuthPwdAgingValue=hpSwitchAuthPwdAgingValue, hpSwitchOspfAuthGroup1=hpSwitchOspfAuthGroup1, hpSwitchRadiusServerIpAddr=hpSwitchRadiusServerIpAddr, hpSwitchAuthPwdHistoryCheck=hpSwitchAuthPwdHistoryCheck, hpicfSwitchOperatorPasswordEncrypted=hpicfSwitchOperatorPasswordEncrypted, hpSwitchKmsKeyConfigTable=hpSwitchKmsKeyConfigTable, hpSwitchLocalMgmtPrivUsernameGrpIndex=hpSwitchLocalMgmtPrivUsernameGrpIndex, hpSwitchAuthenticationMIBCompliance15=hpSwitchAuthenticationMIBCompliance15, hpTacacsStatsNumAuthPktsIn=hpTacacsStatsNumAuthPktsIn, hpSwitchAuthRespectPriv=hpSwitchAuthRespectPriv, hpSwitchRadiusServerDynAutzTimeWindow=hpSwitchRadiusServerDynAutzTimeWindow, hpicfSwitchNonPlaintextSha256=hpicfSwitchNonPlaintextSha256, hpSwitchSslGroup=hpSwitchSslGroup, hpSwitchServerNewCertificateEndDate=hpSwitchServerNewCertificateEndDate, hpSwitchServerCertificateOrgName=hpSwitchServerCertificateOrgName, hpSwitchServerNewCertCommonName=hpSwitchServerNewCertCommonName, hpicfSwitchOperatorPassword=hpicfSwitchOperatorPassword, hpTacacsStatsNumPktsIn=hpTacacsStatsNumPktsIn, hpSwitchRadiusAuthKeyEncrypted=hpSwitchRadiusAuthKeyEncrypted, hpSwitchKmsKeyId=hpSwitchKmsKeyId, hpSwitchKmsKeyStartTime=hpSwitchKmsKeyStartTime, hpSwitchServerNewCertOrgUnit=hpSwitchServerNewCertOrgUnit, hpSwitchServerCertificateFingerprintMD5=hpSwitchServerCertificateFingerprintMD5, hpSwitchUserConfigMIBCompliance1=hpSwitchUserConfigMIBCompliance1, hpSwitchKmsKeyChainId=hpSwitchKmsKeyChainId, hpSwitchCertStatusGroup=hpSwitchCertStatusGroup, hpSwitchAuthLocalMgmtPrivUserGroup1=hpSwitchAuthLocalMgmtPrivUserGroup1, hpicfSwitchOperatorPasswordHashSha256=hpicfSwitchOperatorPasswordHashSha256, hpSwitchServerNewCertOrgName=hpSwitchServerNewCertOrgName, hpSwitchLocalMgmtPwdUserAgingInterval=hpSwitchLocalMgmtPwdUserAgingInterval, hpSwitchAuthenticationConfigGroup6=hpSwitchAuthenticationConfigGroup6, hpSwitchAuthenEntry=hpSwitchAuthenEntry, hpSwitchAuthLocalMgmtPrivUserGroup2=hpSwitchAuthLocalMgmtPrivUserGroup2, hpSwitchLocalMgmtPrivUsernamesEntry=hpSwitchLocalMgmtPrivUsernamesEntry, hpSwitchServerCertificateSerialNumber=hpSwitchServerCertificateSerialNumber, hpSwitchServerCertificateStateName=hpSwitchServerCertificateStateName, hpSwitchAuthenticationMIBCompliance8=hpSwitchAuthenticationMIBCompliance8, hpSwitchRadiusServerDynAutzTimeWindowType=hpSwitchRadiusServerDynAutzTimeWindowType, hpTacacsStatsNumAutzPktsIn=hpTacacsStatsNumAutzPktsIn, hpSwitchAuthenticationMIBCompliance10=hpSwitchAuthenticationMIBCompliance10, hpSwitchAuthNotificationGroup=hpSwitchAuthNotificationGroup, hpSwitchAuthenticationPasswordConfig=hpSwitchAuthenticationPasswordConfig, hpSwitchRadiusServerAddrType=hpSwitchRadiusServerAddrType)
