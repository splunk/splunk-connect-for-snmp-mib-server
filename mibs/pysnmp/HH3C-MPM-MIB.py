#
# PySNMP MIB module HH3C-MPM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-MPM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:15:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, IpAddress, NotificationType, Gauge32, ObjectIdentity, mib_2, iso, Integer32, TimeTicks, Counter64, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ModuleIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "IpAddress", "NotificationType", "Gauge32", "ObjectIdentity", "mib-2", "iso", "Integer32", "TimeTicks", "Counter64", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ModuleIdentity", "Counter32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
hh3cMpm = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 51))
hh3cMpm.setRevisions(('2005-03-22 00:00',))
if mibBuilder.loadTexts: hh3cMpm.setLastUpdated('200503220000Z')
if mibBuilder.loadTexts: hh3cMpm.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
class EnabledStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

hh3cMPMObject = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 51, 1))
hh3cMPortGroupLimitMinNumber = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 51, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMPortGroupLimitMinNumber.setStatus('current')
hh3cMPortGroupLimitMaxNumber = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 51, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMPortGroupLimitMaxNumber.setStatus('current')
hh3cMPMTable = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2))
hh3cMPortGroupJoinTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 1), )
if mibBuilder.loadTexts: hh3cMPortGroupJoinTable.setStatus('current')
hh3cMPortGroupJoinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-MPM-MIB", "hh3cMPortGroupJoinVlanID"), (0, "HH3C-MPM-MIB", "hh3cMPortGroupJoinAddressType"), (0, "HH3C-MPM-MIB", "hh3cMPortGroupJoinAddress"))
if mibBuilder.loadTexts: hh3cMPortGroupJoinEntry.setStatus('current')
hh3cMPortGroupJoinVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cMPortGroupJoinVlanID.setStatus('current')
hh3cMPortGroupJoinAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 1, 1, 2), InetAddressType())
if mibBuilder.loadTexts: hh3cMPortGroupJoinAddressType.setStatus('current')
hh3cMPortGroupJoinAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 1, 1, 3), InetAddress())
if mibBuilder.loadTexts: hh3cMPortGroupJoinAddress.setStatus('current')
hh3cMPortGroupJoinStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMPortGroupJoinStatus.setStatus('current')
hh3cMPortGroupTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 2), )
if mibBuilder.loadTexts: hh3cMPortGroupTable.setStatus('current')
hh3cMPortGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-MPM-MIB", "hh3cMPortGroupVlanID"), (0, "HH3C-MPM-MIB", "hh3cMPortGroupAddressType"), (0, "HH3C-MPM-MIB", "hh3cMPortGroupAddress"))
if mibBuilder.loadTexts: hh3cMPortGroupEntry.setStatus('current')
hh3cMPortGroupVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cMPortGroupVlanID.setStatus('current')
hh3cMPortGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMPortGroupAddressType.setStatus('current')
hh3cMPortGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMPortGroupAddress.setStatus('current')
hh3cMPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 3), )
if mibBuilder.loadTexts: hh3cMPortConfigTable.setStatus('current')
hh3cMPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-MPM-MIB", "hh3cMPortConfigVlanID"))
if mibBuilder.loadTexts: hh3cMPortConfigEntry.setStatus('current')
hh3cMPortConfigVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cMPortConfigVlanID.setStatus('current')
hh3cMPortGroupLimitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 3, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMPortGroupLimitNumber.setStatus('current')
hh3cMPortFastLeaveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 3, 1, 3), EnabledStatus().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMPortFastLeaveStatus.setStatus('current')
hh3cMPortGroupPolicyParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 2999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMPortGroupPolicyParameter.setStatus('current')
hh3cMPortConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMPortConfigRowStatus.setStatus('current')
hh3cMPortGroupLimitReplace = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 3, 1, 6), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMPortGroupLimitReplace.setStatus('current')
hh3cHostStaticJoinTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 4), )
if mibBuilder.loadTexts: hh3cHostStaticJoinTable.setStatus('current')
hh3cHostStaticJoinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-MPM-MIB", "hh3cHostStaticJoinVlanID"), (0, "HH3C-MPM-MIB", "hh3cHostStaticJoinAddressType"), (0, "HH3C-MPM-MIB", "hh3cHostStaticJoinAddress"))
if mibBuilder.loadTexts: hh3cHostStaticJoinEntry.setStatus('current')
hh3cHostStaticJoinVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cHostStaticJoinVlanID.setStatus('current')
hh3cHostStaticJoinAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 4, 1, 2), InetAddressType())
if mibBuilder.loadTexts: hh3cHostStaticJoinAddressType.setStatus('current')
hh3cHostStaticJoinAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 4, 1, 3), InetAddress())
if mibBuilder.loadTexts: hh3cHostStaticJoinAddress.setStatus('current')
hh3cHostStaticJoinStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 51, 2, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cHostStaticJoinStatus.setStatus('current')
mibBuilder.exportSymbols("HH3C-MPM-MIB", hh3cMPortGroupJoinEntry=hh3cMPortGroupJoinEntry, hh3cMPortGroupJoinAddress=hh3cMPortGroupJoinAddress, hh3cMPortConfigTable=hh3cMPortConfigTable, hh3cHostStaticJoinTable=hh3cHostStaticJoinTable, hh3cMPMTable=hh3cMPMTable, hh3cMPortGroupLimitReplace=hh3cMPortGroupLimitReplace, hh3cMPortGroupEntry=hh3cMPortGroupEntry, hh3cMPortGroupLimitMinNumber=hh3cMPortGroupLimitMinNumber, hh3cMPortGroupTable=hh3cMPortGroupTable, hh3cMPortConfigVlanID=hh3cMPortConfigVlanID, hh3cHostStaticJoinEntry=hh3cHostStaticJoinEntry, hh3cMPortConfigEntry=hh3cMPortConfigEntry, hh3cMPortGroupJoinVlanID=hh3cMPortGroupJoinVlanID, hh3cMPortGroupJoinAddressType=hh3cMPortGroupJoinAddressType, hh3cMPortGroupPolicyParameter=hh3cMPortGroupPolicyParameter, hh3cMPortGroupJoinStatus=hh3cMPortGroupJoinStatus, hh3cMPortGroupAddressType=hh3cMPortGroupAddressType, hh3cHostStaticJoinAddressType=hh3cHostStaticJoinAddressType, hh3cHostStaticJoinStatus=hh3cHostStaticJoinStatus, EnabledStatus=EnabledStatus, hh3cHostStaticJoinVlanID=hh3cHostStaticJoinVlanID, hh3cMpm=hh3cMpm, PYSNMP_MODULE_ID=hh3cMpm, hh3cMPortGroupLimitMaxNumber=hh3cMPortGroupLimitMaxNumber, hh3cMPortGroupLimitNumber=hh3cMPortGroupLimitNumber, hh3cMPortGroupVlanID=hh3cMPortGroupVlanID, hh3cHostStaticJoinAddress=hh3cHostStaticJoinAddress, hh3cMPortGroupJoinTable=hh3cMPortGroupJoinTable, hh3cMPortConfigRowStatus=hh3cMPortConfigRowStatus, hh3cMPortGroupAddress=hh3cMPortGroupAddress, hh3cMPMObject=hh3cMPMObject, hh3cMPortFastLeaveStatus=hh3cMPortFastLeaveStatus)
