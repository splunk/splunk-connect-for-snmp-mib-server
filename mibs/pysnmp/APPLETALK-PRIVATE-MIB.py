#
# PySNMP MIB module APPLETALK-PRIVATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APPLETALK-PRIVATE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:08:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
cjnProtocol, = mibBuilder.importSymbols("Cajun-ROOT", "cjnProtocol")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, NotificationType, MibIdentifier, ObjectIdentity, Unsigned32, iso, Counter64, ModuleIdentity, IpAddress, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "NotificationType", "MibIdentifier", "ObjectIdentity", "Unsigned32", "iso", "Counter64", "ModuleIdentity", "IpAddress", "Integer32", "Gauge32")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
cjnAtalk = ModuleIdentity((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4))
if mibBuilder.loadTexts: cjnAtalk.setLastUpdated('9903090000Z')
if mibBuilder.loadTexts: cjnAtalk.setOrganization("Lucent's Concord Technology Center (CTC)")
class DdpAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 3)
    fixedLength = 3

class DisplayString(OctetString):
    pass

cjnAtGblGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 1))
cjnAtIsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnAtIsEnabled.setStatus('current')
cjnAtGlobalStatsReset = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnAtGlobalStatsReset.setStatus('current')
cjnAtIfZoneGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 2))
cjnAtIfNextZoneIndex = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtIfNextZoneIndex.setStatus('current')
cjnAtIfZoneTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 2, 2), )
if mibBuilder.loadTexts: cjnAtIfZoneTable.setStatus('current')
cjnAtIfZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 2, 2, 1), ).setIndexNames((0, "APPLETALK-PRIVATE-MIB", "cjnAtPortIndex"), (0, "APPLETALK-PRIVATE-MIB", "cjnAtIfZoneIndex"))
if mibBuilder.loadTexts: cjnAtIfZoneEntry.setStatus('current')
cjnAtIfZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtIfZoneIndex.setStatus('current')
cjnAtIfZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtIfZoneName.setStatus('current')
cjnAtIfZoneDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("guessed", 3))).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtIfZoneDefault.setStatus('current')
cjnAtIfZoneRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 2, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtIfZoneRowStatus.setStatus('current')
cjnAtStatRtGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 3))
cjnAtStatRtTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 3, 1), )
if mibBuilder.loadTexts: cjnAtStatRtTable.setStatus('current')
cjnAtStatRtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 3, 1, 1), ).setIndexNames((0, "APPLETALK-PRIVATE-MIB", "cjnAtStatRtRangeStart"))
if mibBuilder.loadTexts: cjnAtStatRtEntry.setStatus('current')
cjnAtStatRtRangeStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtStatRtRangeStart.setStatus('current')
cjnAtStatRtRangeEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 3, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnAtStatRtRangeEnd.setStatus('current')
cjnAtStatRtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 3, 1, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnAtStatRtRowStatus.setStatus('current')
cjnAtStatRtNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 3, 1, 1, 4), DdpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnAtStatRtNextHop.setStatus('current')
cjnAtStatRtType = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("low", 1), ("high", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnAtStatRtType.setStatus('current')
cjnAtStatRtZoneGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 4))
cjnAtNextStatRtZoneIndex = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtNextStatRtZoneIndex.setStatus('current')
cjnAtStatRtZoneTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 4, 2), )
if mibBuilder.loadTexts: cjnAtStatRtZoneTable.setStatus('current')
cjnAtStatRtZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 4, 2, 1), ).setIndexNames((0, "APPLETALK-PRIVATE-MIB", "cjnAtStatRtRangeStart"), (0, "APPLETALK-PRIVATE-MIB", "cjnAtStatRtZoneIndex"))
if mibBuilder.loadTexts: cjnAtStatRtZoneEntry.setStatus('current')
cjnAtStatRtZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtStatRtZoneIndex.setStatus('current')
cjnAtStatRtZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 4, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtStatRtZoneName.setStatus('current')
cjnAtStatRtZoneRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 4, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtStatRtZoneRowStatus.setStatus('current')
cjnAtAarp = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 5))
cjnAarpReset = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnAarpReset.setStatus('current')
cjnAarpTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 5, 2), )
if mibBuilder.loadTexts: cjnAarpTable.setStatus('current')
cjnAarpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 5, 2, 1), ).setIndexNames((0, "APPLETALK-PRIVATE-MIB", "cjnAtPortIfIndex"), (0, "APPLETALK-PRIVATE-MIB", "cjnAarpNetAddress"))
if mibBuilder.loadTexts: cjnAarpEntry.setStatus('current')
cjnAarpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 5, 2, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnAarpRowStatus.setStatus('current')
cjnAarpPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 5, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAarpPhysAddress.setStatus('current')
cjnAarpNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 5, 2, 1, 3), DdpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAarpNetAddress.setStatus('current')
cjnAarpDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 5, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAarpDescr.setStatus('current')
cjnAarpType = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 5, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("broadcast", 2), ("multicast", 3), ("local", 4), ("remote", 5), ("static", 6), ("router", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAarpType.setStatus('current')
cjnAarpTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 5, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAarpTtl.setStatus('current')
cjnAtRtmp = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 6))
cjnRtmpReset = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnRtmpReset.setStatus('current')
cjnRtmpTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 6, 2), )
if mibBuilder.loadTexts: cjnRtmpTable.setStatus('current')
cjnRtmpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 6, 2, 1), ).setIndexNames((0, "APPLETALK-PRIVATE-MIB", "cjnRtmpRangeStart"))
if mibBuilder.loadTexts: cjnRtmpEntry.setStatus('current')
cjnRtmpRangeStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnRtmpRangeStart.setStatus('current')
cjnRtmpRangeEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 6, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnRtmpRangeEnd.setStatus('current')
cjnRtmpNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 6, 2, 1, 3), DdpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnRtmpNextHop.setStatus('current')
cjnRtmpHops = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 6, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnRtmpHops.setStatus('current')
cjnRtmpState = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("good", 1), ("suspect", 2), ("goingBad", 3), ("bad", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnRtmpState.setStatus('current')
cjnRtmpOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("static", 2), ("remote", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnRtmpOwner.setStatus('current')
cjnRtmpDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 6, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnRtmpDescr.setStatus('current')
cjnRtmpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 6, 2, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnRtmpRowStatus.setStatus('current')
cjnAtZip = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 7))
cjnZipTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 7, 1), )
if mibBuilder.loadTexts: cjnZipTable.setStatus('current')
cjnZipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 7, 1, 1), ).setIndexNames((0, "APPLETALK-PRIVATE-MIB", "cjnZipZoneNetStart"), (0, "APPLETALK-PRIVATE-MIB", "cjnZipZoneIndex"))
if mibBuilder.loadTexts: cjnZipEntry.setStatus('current')
cjnZipZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnZipZoneIndex.setStatus('current')
cjnZipZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 7, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnZipZoneName.setStatus('current')
cjnZipZoneNetStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 7, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnZipZoneNetStart.setStatus('current')
cjnZipZoneNetEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 7, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnZipZoneNetEnd.setStatus('current')
cjnAtNbp = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 8))
cjnNbpTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 8, 1), )
if mibBuilder.loadTexts: cjnNbpTable.setStatus('current')
cjnNbpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 8, 1, 1), ).setIndexNames((0, "APPLETALK-PRIVATE-MIB", "cjnNbpIndex"))
if mibBuilder.loadTexts: cjnNbpEntry.setStatus('current')
cjnNbpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 8, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnNbpIndex.setStatus('current')
cjnNbpObject = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 8, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnNbpObject.setStatus('current')
cjnNbpType = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 8, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnNbpType.setStatus('current')
cjnNbpZone = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 8, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnNbpZone.setStatus('current')
cjnNbpState = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnNbpState.setStatus('current')
cjnAtEcho = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 9))
cjnAtEchoRequests = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 9, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtEchoRequests.setStatus('current')
cjnAtEchoReplies = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 9, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtEchoReplies.setStatus('current')
cjnAtEchoTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 9, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtEchoTimeouts.setStatus('current')
cjnAtEchoSend = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 9, 4), DdpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnAtEchoSend.setStatus('current')
cjnAtEchoReset = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 9, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnAtEchoReset.setStatus('current')
cjnAtGblStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10))
cjnAtDdp = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1))
cjnDdpOutRequests = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpOutRequests.setStatus('current')
cjnDdpOutShorts = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpOutShorts.setStatus('current')
cjnDdpOutLongs = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpOutLongs.setStatus('current')
cjnDdpInReceives = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpInReceives.setStatus('current')
cjnDdpForwRequests = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpForwRequests.setStatus('current')
cjnDdpInLocalDatagrams = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpInLocalDatagrams.setStatus('current')
cjnDdpNoProtocolHandlers = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpNoProtocolHandlers.setStatus('current')
cjnDdpOutNoRoutes = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpOutNoRoutes.setStatus('current')
cjnDdpTooShortErrors = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpTooShortErrors.setStatus('current')
cjnDdpTooLongErrors = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpTooLongErrors.setStatus('current')
cjnDdpBroadcastErrors = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpBroadcastErrors.setStatus('current')
cjnDdpShortDDPErrors = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpShortDDPErrors.setStatus('current')
cjnDdpHopCountErrors = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpHopCountErrors.setStatus('current')
cjnDdpChecksumErrors = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpChecksumErrors.setStatus('current')
cjnDdpAarpRqRcv = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpAarpRqRcv.setStatus('current')
cjnDdpAarpReplyRcv = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpAarpReplyRcv.setStatus('current')
cjnDdpAarpRqTx = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpAarpRqTx.setStatus('current')
cjnDdpAarpReplyTx = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpAarpReplyTx.setStatus('current')
cjnDdpAarpBadPdu = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpAarpBadPdu.setStatus('current')
cjnDdpCfgAddrError = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpCfgAddrError.setStatus('current')
cjnDdpCfgZoneError = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpCfgZoneError.setStatus('current')
cjnDdpEchoRqRcv = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpEchoRqRcv.setStatus('current')
cjnDdpEchoReplyRcv = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpEchoReplyRcv.setStatus('current')
cjnDdpEchoRqTx = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 10, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDdpEchoRqTx.setStatus('current')
cjnAtPortConfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 11))
cjnAtPortNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtPortNextIndex.setStatus('current')
cjnAtPortTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 11, 2), )
if mibBuilder.loadTexts: cjnAtPortTable.setStatus('current')
cjnAtPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 11, 2, 1), ).setIndexNames((0, "APPLETALK-PRIVATE-MIB", "cjnAtPortIndex"))
if mibBuilder.loadTexts: cjnAtPortEntry.setStatus('current')
cjnAtPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 11, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtPortIndex.setStatus('current')
cjnAtPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 11, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtPortRowStatus.setStatus('current')
cjnAtPortDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 11, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtPortDescr.setStatus('current')
cjnAtPortMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 11, 2, 1, 4), Integer32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtPortMetric.setStatus('current')
cjnAtPortFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 11, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("snap", 1), ("ethernet2", 2))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtPortFrameType.setStatus('current')
cjnAtPortNetStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 11, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65279))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtPortNetStart.setStatus('current')
cjnAtPortNetEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 11, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65279))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtPortNetEnd.setStatus('current')
cjnAtPortNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 11, 2, 1, 8), DdpAddress().clone('000000')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtPortNetAddress.setStatus('current')
cjnAtPortAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 11, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtPortAdminState.setStatus('current')
cjnAtPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 11, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtPortIfIndex.setStatus('current')
cjnAtPortVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 11, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtPortVlan.setStatus('current')
cjnAtPortClearZones = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 11, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtPortClearZones.setStatus('current')
cjnAtPortStateGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 12))
cjnAtPortStateTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 12, 3), )
if mibBuilder.loadTexts: cjnAtPortStateTable.setStatus('current')
cjnAtPortStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 12, 3, 1), ).setIndexNames((0, "APPLETALK-PRIVATE-MIB", "cjnAtPortStateIndex"))
if mibBuilder.loadTexts: cjnAtPortStateEntry.setStatus('current')
cjnAtPortStateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 12, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtPortStateIndex.setStatus('current')
cjnAtPortStateDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 12, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtPortStateDescr.setStatus('current')
cjnAtPortStateNetConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 12, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("configured", 1), ("garnered", 2), ("guessed", 3), ("unconfigured", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtPortStateNetConfig.setStatus('current')
cjnAtPortStateNetStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 12, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtPortStateNetStart.setStatus('current')
cjnAtPortStateNetEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 12, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtPortStateNetEnd.setStatus('current')
cjnAtPortStateNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 12, 3, 1, 6), DdpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtPortStateNetAddress.setStatus('current')
cjnAtPortStateState = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 12, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("down", 1), ("up", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtPortStateState.setStatus('current')
cjnAtFilterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 13))
cjnAtFilterTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 13, 1), )
if mibBuilder.loadTexts: cjnAtFilterTable.setStatus('current')
cjnAtFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 13, 1, 1), ).setIndexNames((0, "APPLETALK-PRIVATE-MIB", "cjnAtFilterIndex"))
if mibBuilder.loadTexts: cjnAtFilterEntry.setStatus('current')
cjnAtFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 13, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnAtFilterIndex.setStatus('current')
cjnAtFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 13, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtFilterRowStatus.setStatus('current')
cjnAtFilterItem = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("zoneName", 1), ("nbpObject", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtFilterItem.setStatus('current')
cjnAtFilterOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 13, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2))).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtFilterOperation.setStatus('current')
cjnAtFilterString = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 13, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtFilterString.setStatus('current')
cjnAtAccessIfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 14))
cjnAtAccessIfTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 14, 1), )
if mibBuilder.loadTexts: cjnAtAccessIfTable.setStatus('current')
cjnAtAccessIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 14, 1, 1), ).setIndexNames((0, "APPLETALK-PRIVATE-MIB", "cjnAtFilterIndex"), (0, "APPLETALK-PRIVATE-MIB", "cjnAtPortIndex"))
if mibBuilder.loadTexts: cjnAtAccessIfEntry.setStatus('current')
cjnAtAccessIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 4, 14, 1, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnAtAccessIfRowStatus.setStatus('current')
mibBuilder.exportSymbols("APPLETALK-PRIVATE-MIB", cjnDdpOutShorts=cjnDdpOutShorts, cjnDdpOutLongs=cjnDdpOutLongs, cjnAtIfZoneTable=cjnAtIfZoneTable, cjnAtGlobalStatsReset=cjnAtGlobalStatsReset, cjnDdpOutNoRoutes=cjnDdpOutNoRoutes, cjnAtPortStateTable=cjnAtPortStateTable, cjnAtAccessIfRowStatus=cjnAtAccessIfRowStatus, cjnRtmpOwner=cjnRtmpOwner, cjnAtIsEnabled=cjnAtIsEnabled, cjnRtmpReset=cjnRtmpReset, cjnDdpInReceives=cjnDdpInReceives, cjnDdpOutRequests=cjnDdpOutRequests, PYSNMP_MODULE_ID=cjnAtalk, cjnRtmpRangeEnd=cjnRtmpRangeEnd, cjnAtEchoReset=cjnAtEchoReset, cjnAtZip=cjnAtZip, cjnZipZoneNetStart=cjnZipZoneNetStart, cjnAtPortStateDescr=cjnAtPortStateDescr, cjnDdpAarpRqRcv=cjnDdpAarpRqRcv, cjnDdpHopCountErrors=cjnDdpHopCountErrors, cjnAtFilterEntry=cjnAtFilterEntry, DisplayString=DisplayString, cjnAtalk=cjnAtalk, cjnAtStatRtZoneEntry=cjnAtStatRtZoneEntry, cjnZipZoneName=cjnZipZoneName, cjnAtAccessIfEntry=cjnAtAccessIfEntry, cjnAarpTable=cjnAarpTable, cjnAtStatRtRangeEnd=cjnAtStatRtRangeEnd, cjnAtPortNetEnd=cjnAtPortNetEnd, cjnRtmpEntry=cjnRtmpEntry, cjnAtIfZoneEntry=cjnAtIfZoneEntry, cjnAtPortMetric=cjnAtPortMetric, cjnDdpCfgAddrError=cjnDdpCfgAddrError, cjnZipEntry=cjnZipEntry, cjnRtmpRangeStart=cjnRtmpRangeStart, cjnAarpTtl=cjnAarpTtl, cjnAtRtmp=cjnAtRtmp, cjnRtmpHops=cjnRtmpHops, cjnAtIfZoneRowStatus=cjnAtIfZoneRowStatus, cjnDdpShortDDPErrors=cjnDdpShortDDPErrors, cjnAtFilterGroup=cjnAtFilterGroup, cjnAtIfZoneName=cjnAtIfZoneName, cjnAtFilterOperation=cjnAtFilterOperation, cjnNbpType=cjnNbpType, cjnAtIfZoneDefault=cjnAtIfZoneDefault, cjnAtStatRtEntry=cjnAtStatRtEntry, cjnAtAccessIfTable=cjnAtAccessIfTable, cjnAtPortFrameType=cjnAtPortFrameType, cjnRtmpNextHop=cjnRtmpNextHop, cjnDdpAarpReplyRcv=cjnDdpAarpReplyRcv, cjnAtStatRtType=cjnAtStatRtType, cjnZipTable=cjnZipTable, cjnAtStatRtZoneRowStatus=cjnAtStatRtZoneRowStatus, cjnAtDdp=cjnAtDdp, cjnAtIfZoneIndex=cjnAtIfZoneIndex, cjnAtStatRtRangeStart=cjnAtStatRtRangeStart, cjnAtPortRowStatus=cjnAtPortRowStatus, cjnAtStatRtGroup=cjnAtStatRtGroup, cjnAtFilterIndex=cjnAtFilterIndex, cjnAtPortStateNetStart=cjnAtPortStateNetStart, cjnDdpCfgZoneError=cjnDdpCfgZoneError, cjnDdpChecksumErrors=cjnDdpChecksumErrors, cjnDdpEchoRqTx=cjnDdpEchoRqTx, cjnAtEchoSend=cjnAtEchoSend, cjnZipZoneNetEnd=cjnZipZoneNetEnd, cjnAtPortStateNetConfig=cjnAtPortStateNetConfig, cjnAarpEntry=cjnAarpEntry, cjnAtStatRtTable=cjnAtStatRtTable, cjnAtPortStateNetEnd=cjnAtPortStateNetEnd, cjnAtStatRtRowStatus=cjnAtStatRtRowStatus, cjnAtPortDescr=cjnAtPortDescr, cjnNbpTable=cjnNbpTable, cjnNbpObject=cjnNbpObject, cjnZipZoneIndex=cjnZipZoneIndex, cjnDdpNoProtocolHandlers=cjnDdpNoProtocolHandlers, cjnDdpAarpBadPdu=cjnDdpAarpBadPdu, cjnAtPortTable=cjnAtPortTable, cjnAtAarp=cjnAtAarp, cjnAarpType=cjnAarpType, cjnDdpForwRequests=cjnDdpForwRequests, cjnDdpEchoRqRcv=cjnDdpEchoRqRcv, cjnAtPortStateNetAddress=cjnAtPortStateNetAddress, cjnAtPortNextIndex=cjnAtPortNextIndex, cjnDdpInLocalDatagrams=cjnDdpInLocalDatagrams, cjnDdpAarpRqTx=cjnDdpAarpRqTx, cjnAtPortStateEntry=cjnAtPortStateEntry, DdpAddress=DdpAddress, cjnAtStatRtZoneGroup=cjnAtStatRtZoneGroup, cjnAtPortVlan=cjnAtPortVlan, cjnAtPortClearZones=cjnAtPortClearZones, cjnAtFilterItem=cjnAtFilterItem, cjnAtFilterRowStatus=cjnAtFilterRowStatus, cjnDdpTooShortErrors=cjnDdpTooShortErrors, cjnDdpBroadcastErrors=cjnDdpBroadcastErrors, cjnAtFilterTable=cjnAtFilterTable, cjnAtPortAdminState=cjnAtPortAdminState, cjnAtStatRtNextHop=cjnAtStatRtNextHop, cjnAarpNetAddress=cjnAarpNetAddress, cjnAtStatRtZoneIndex=cjnAtStatRtZoneIndex, cjnNbpIndex=cjnNbpIndex, cjnAtPortStateIndex=cjnAtPortStateIndex, cjnAtGblGroup=cjnAtGblGroup, cjnRtmpState=cjnRtmpState, cjnAtNbp=cjnAtNbp, cjnAarpPhysAddress=cjnAarpPhysAddress, cjnAarpReset=cjnAarpReset, cjnAtAccessIfGroup=cjnAtAccessIfGroup, cjnRtmpDescr=cjnRtmpDescr, cjnAtPortConfGroup=cjnAtPortConfGroup, cjnAtNextStatRtZoneIndex=cjnAtNextStatRtZoneIndex, cjnNbpZone=cjnNbpZone, cjnAtEcho=cjnAtEcho, cjnDdpTooLongErrors=cjnDdpTooLongErrors, cjnAtEchoReplies=cjnAtEchoReplies, cjnAtEchoTimeouts=cjnAtEchoTimeouts, cjnAtIfZoneGroup=cjnAtIfZoneGroup, cjnAarpRowStatus=cjnAarpRowStatus, cjnAtPortStateGroup=cjnAtPortStateGroup, cjnAarpDescr=cjnAarpDescr, cjnAtStatRtZoneTable=cjnAtStatRtZoneTable, cjnRtmpRowStatus=cjnRtmpRowStatus, cjnDdpEchoReplyRcv=cjnDdpEchoReplyRcv, cjnAtIfNextZoneIndex=cjnAtIfNextZoneIndex, cjnAtPortNetAddress=cjnAtPortNetAddress, cjnNbpState=cjnNbpState, cjnAtEchoRequests=cjnAtEchoRequests, cjnDdpAarpReplyTx=cjnDdpAarpReplyTx, cjnAtFilterString=cjnAtFilterString, cjnAtPortNetStart=cjnAtPortNetStart, cjnAtPortEntry=cjnAtPortEntry, cjnAtPortStateState=cjnAtPortStateState, cjnRtmpTable=cjnRtmpTable, cjnAtGblStatsGroup=cjnAtGblStatsGroup, cjnAtPortIfIndex=cjnAtPortIfIndex, cjnAtPortIndex=cjnAtPortIndex, cjnAtStatRtZoneName=cjnAtStatRtZoneName, cjnNbpEntry=cjnNbpEntry)
