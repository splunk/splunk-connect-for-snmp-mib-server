#
# PySNMP MIB module TPLINK-DHCPFILTERING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-DHCPFILTERING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:16:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Counter32, Bits, iso, TimeTicks, Counter64, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, MibIdentifier, Integer32, ObjectIdentity, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter32", "Bits", "iso", "TimeTicks", "Counter64", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "MibIdentifier", "Integer32", "ObjectIdentity", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
tplinkDhcpFilteringMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 48))
tplinkDhcpFilteringMIB.setRevisions(('2012-12-17 10:14',))
if mibBuilder.loadTexts: tplinkDhcpFilteringMIB.setLastUpdated('201212171014Z')
if mibBuilder.loadTexts: tplinkDhcpFilteringMIB.setOrganization('TPLINK')
tplinkDhcpFilteringMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1))
tplinkDhcpFilteringNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 48, 2))
dhcpFilteringGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 1))
dhcpFilteringPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 3))
dhcpFilteringEnable = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpFilteringEnable.setStatus('current')
dhcpFilteringVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 1, 2), )
if mibBuilder.loadTexts: dhcpFilteringVlanConfigTable.setStatus('current')
dhcpFilteringVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 1, 2, 1), ).setIndexNames((0, "TPLINK-DHCPFILTERING-MIB", "dhcpFilteringVlanId"))
if mibBuilder.loadTexts: dhcpFilteringVlanConfigEntry.setStatus('current')
dhcpFilteringVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpFilteringVlanId.setStatus('current')
dhcpFilteringVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpFilteringVlanStatus.setStatus('current')
dhcpFilteringPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 3, 1), )
if mibBuilder.loadTexts: dhcpFilteringPortConfigTable.setStatus('current')
dhcpFilteringPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dhcpFilteringPortConfigEntry.setStatus('current')
dhcpFilteringPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 3, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpFilteringPort.setStatus('current')
dhcpFilteringPortConfigTrustedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpFilteringPortConfigTrustedPort.setStatus('current')
dhcpFilteringPortConfigPortLag = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpFilteringPortConfigPortLag.setStatus('current')
mibBuilder.exportSymbols("TPLINK-DHCPFILTERING-MIB", dhcpFilteringVlanConfigTable=dhcpFilteringVlanConfigTable, dhcpFilteringVlanId=dhcpFilteringVlanId, dhcpFilteringPortConfigPortLag=dhcpFilteringPortConfigPortLag, PYSNMP_MODULE_ID=tplinkDhcpFilteringMIB, dhcpFilteringPortConfigEntry=dhcpFilteringPortConfigEntry, dhcpFilteringPortConfigTable=dhcpFilteringPortConfigTable, tplinkDhcpFilteringMIB=tplinkDhcpFilteringMIB, tplinkDhcpFilteringMIBObjects=tplinkDhcpFilteringMIBObjects, tplinkDhcpFilteringNotifications=tplinkDhcpFilteringNotifications, dhcpFilteringPortConfigTrustedPort=dhcpFilteringPortConfigTrustedPort, dhcpFilteringVlanConfigEntry=dhcpFilteringVlanConfigEntry, dhcpFilteringEnable=dhcpFilteringEnable, dhcpFilteringVlanStatus=dhcpFilteringVlanStatus, dhcpFilteringPort=dhcpFilteringPort, dhcpFilteringPortConfig=dhcpFilteringPortConfig, dhcpFilteringGlobalConfig=dhcpFilteringGlobalConfig)
