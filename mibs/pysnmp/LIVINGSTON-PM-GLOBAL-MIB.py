#
# PySNMP MIB module LIVINGSTON-PM-GLOBAL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LIVINGSTON-PM-GLOBAL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:56:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
lucentPMMib, = mibBuilder.importSymbols("LIVINGSTON-ROOT-MIB", "lucentPMMib")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, TimeTicks, iso, Bits, Gauge32, Counter32, Integer32, Counter64, NotificationType, IpAddress, Unsigned32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "TimeTicks", "iso", "Bits", "Gauge32", "Counter32", "Integer32", "Counter64", "NotificationType", "IpAddress", "Unsigned32", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
lucentPMGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 2, 1))
lucentPMGenGlobParams = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 1))
lucentPMGenPriNameSrvr = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMGenPriNameSrvr.setStatus('mandatory')
lucentPMGenAltNameSrvr = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMGenAltNameSrvr.setStatus('mandatory')
lucentPMGenSyslogHost = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMGenSyslogHost.setStatus('mandatory')
lucentPMGenAssignedAddr = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMGenAssignedAddr.setStatus('mandatory')
lucentPMGenReportedAddr = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMGenReportedAddr.setStatus('mandatory')
lucentPMGenNetMask = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMGenNetMask.setStatus('mandatory')
lucentPMGenNameSvc = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("dns", 2), ("nis", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMGenNameSvc.setStatus('mandatory')
lucentPMGenDomainName = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMGenDomainName.setStatus('mandatory')
lucentPMGenTelnetPortNum = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMGenTelnetPortNum.setStatus('mandatory')
lucentPMGenMaxConsConn = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMGenMaxConsConn.setStatus('mandatory')
lucentPMGenOSPF = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMGenOSPF.setStatus('mandatory')
lucentPMGenBGP = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMGenBGP.setStatus('mandatory')
lucentPMGenIPX = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMGenIPX.setStatus('mandatory')
lucentPMGenNetBIOS = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMGenNetBIOS.setStatus('mandatory')
lucentPMGenCallCheck = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMGenCallCheck.setStatus('mandatory')
lucentPMRadiusMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 2))
lucentPMRadiusPriIP = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 2, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMRadiusPriIP.setStatus('mandatory')
lucentPMRadiusAltIP = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMRadiusAltIP.setStatus('mandatory')
lucentPMRadiusPriAcctIP = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMRadiusPriAcctIP.setStatus('mandatory')
lucentPMRadiusAltAcctIP = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMRadiusAltAcctIP.setStatus('mandatory')
lucentPMRadiusPriPort = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 2, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMRadiusPriPort.setStatus('mandatory')
lucentPMRadiusAltPort = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 2, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMRadiusAltPort.setStatus('mandatory')
lucentPMRadiusPriAcctPort = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 2, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMRadiusPriAcctPort.setStatus('mandatory')
lucentPMRadiusAltAcctPort = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 2, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMRadiusAltAcctPort.setStatus('mandatory')
lucentPMRadiusAuthFails = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPMRadiusAuthFails.setStatus('mandatory')
lucentPMRadiusRetrans = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 2, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMRadiusRetrans.setStatus('mandatory')
lucentPMRadiusTimeout = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 2, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMRadiusTimeout.setStatus('mandatory')
lucentPMRadiusAuth = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMRadiusAuth.setStatus('mandatory')
lucentPMRadiusSecret = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 2, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: lucentPMRadiusSecret.setStatus('mandatory')
lucentPMChoiceNetMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 3))
lucentPMChoiceNetPriIP = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 3, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMChoiceNetPriIP.setStatus('mandatory')
lucentPMChoiceNetAltIP = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 3, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMChoiceNetAltIP.setStatus('mandatory')
lucentPMChoiceNetPriPort = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMChoiceNetPriPort.setStatus('mandatory')
lucentPMChoiceNetAltPort = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPMChoiceNetAltPort.setStatus('mandatory')
lucentPMChoiceNetSecret = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 2, 1, 3, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: lucentPMChoiceNetSecret.setStatus('mandatory')
mibBuilder.exportSymbols("LIVINGSTON-PM-GLOBAL-MIB", lucentPMGenAltNameSrvr=lucentPMGenAltNameSrvr, lucentPMChoiceNetPriPort=lucentPMChoiceNetPriPort, lucentPMRadiusTimeout=lucentPMRadiusTimeout, lucentPMGlobal=lucentPMGlobal, lucentPMRadiusPriPort=lucentPMRadiusPriPort, lucentPMRadiusPriAcctIP=lucentPMRadiusPriAcctIP, lucentPMRadiusMgmt=lucentPMRadiusMgmt, lucentPMGenMaxConsConn=lucentPMGenMaxConsConn, lucentPMRadiusAltAcctIP=lucentPMRadiusAltAcctIP, lucentPMRadiusPriAcctPort=lucentPMRadiusPriAcctPort, lucentPMRadiusRetrans=lucentPMRadiusRetrans, lucentPMRadiusAltIP=lucentPMRadiusAltIP, lucentPMGenIPX=lucentPMGenIPX, lucentPMGenCallCheck=lucentPMGenCallCheck, lucentPMChoiceNetSecret=lucentPMChoiceNetSecret, lucentPMRadiusAuthFails=lucentPMRadiusAuthFails, lucentPMGenGlobParams=lucentPMGenGlobParams, lucentPMRadiusSecret=lucentPMRadiusSecret, lucentPMGenTelnetPortNum=lucentPMGenTelnetPortNum, lucentPMChoiceNetAltIP=lucentPMChoiceNetAltIP, lucentPMGenReportedAddr=lucentPMGenReportedAddr, lucentPMGenNetMask=lucentPMGenNetMask, lucentPMGenOSPF=lucentPMGenOSPF, lucentPMGenNetBIOS=lucentPMGenNetBIOS, lucentPMGenDomainName=lucentPMGenDomainName, lucentPMGenAssignedAddr=lucentPMGenAssignedAddr, lucentPMChoiceNetAltPort=lucentPMChoiceNetAltPort, lucentPMGenPriNameSrvr=lucentPMGenPriNameSrvr, lucentPMRadiusPriIP=lucentPMRadiusPriIP, lucentPMGenSyslogHost=lucentPMGenSyslogHost, lucentPMRadiusAltAcctPort=lucentPMRadiusAltAcctPort, lucentPMRadiusAltPort=lucentPMRadiusAltPort, lucentPMGenNameSvc=lucentPMGenNameSvc, lucentPMChoiceNetMgmt=lucentPMChoiceNetMgmt, lucentPMChoiceNetPriIP=lucentPMChoiceNetPriIP, lucentPMGenBGP=lucentPMGenBGP, lucentPMRadiusAuth=lucentPMRadiusAuth)
