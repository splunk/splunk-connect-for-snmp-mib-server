#
# PySNMP MIB module IBM-AIX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IBM-AIX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:39:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
iso, Counter64, Counter32, TimeTicks, Gauge32, Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, enterprises, ObjectIdentity, MibIdentifier, ModuleIdentity, Bits, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter64", "Counter32", "TimeTicks", "Gauge32", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "enterprises", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "Bits", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ibmAIX = ModuleIdentity((1, 3, 6, 1, 4, 1, 2, 6, 191))
if mibBuilder.loadTexts: ibmAIX.setLastUpdated('200402180000Z')
if mibBuilder.loadTexts: ibmAIX.setOrganization('IBM ')
ibm = MibIdentifier((1, 3, 6, 1, 4, 1, 2))
ibmProd = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6))
aixSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 1))
aixAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 1))
aixSystemEnvironment = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 2))
aixAuxSystemEnvironment = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 3))
aixTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 4))
aixGeneralTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 6))
aixStorageSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 2))
aixVolumeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 1))
aixLogicalVolume = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 2))
aixPhysicalVolume = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 3))
aixPagingSpace = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 4))
aixPrintSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 3))
aixPrtQueue = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 3, 1))
aixUser = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 4))
aixUsers = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 1))
aixGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 2))
aixService = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 5))
aixSrvSubsystem = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 1))
aixSrvSubserver = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 2))
aixFileSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 6))
aixProcess = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 7))
aixLogin = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 8))
aixDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 9))
aixPrinter = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 1))
aixTape = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 2))
aixHardDisk = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3))
aixMemory = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 4))
aixCDROM = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 5))
aixScsi = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 6))
aixProcessor = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 7))
aixNetwork = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 8))
aixAdapter = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 9))
aixConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 10))
aixAgentAction = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("reset", 1), ("debugOn", 2), ("debugOff", 3), ("shutdown", 4), ("running", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixAgentAction.setStatus('current')
aixAgentCmdString = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixAgentCmdString.setStatus('current')
aixAgentExeCommand = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trigger", 1), ("default", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixAgentExeCommand.setStatus('current')
aixAgentCmdResult = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixAgentCmdResult.setStatus('current')
aixAgentPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6, 2147483647))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixAgentPollInterval.setStatus('current')
aixPollEnable = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixPollEnable.setStatus('current')
aixLastTrapMsg = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixLastTrapMsg.setStatus('current')
aixAgentCmdOutTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 1, 8), )
if mibBuilder.loadTexts: aixAgentCmdOutTable.setStatus('current')
aixFsPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixFsPollInterval.setStatus('current')
aixCPUPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixCPUPollInterval.setStatus('current')
aixVgPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixVgPollInterval.setStatus('current')
aixPagePollInterval = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixPagePollInterval.setStatus('current')
aixLFPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixLFPollInterval.setStatus('current')
aixAgentCmdOutTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 1, 8, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixAgentCmdOutIndex"))
if mibBuilder.loadTexts: aixAgentCmdOutTableEntry.setStatus('current')
aixAgentCmdOutput = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 1, 8, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixAgentCmdOutput.setStatus('current')
aixAgentCmdOutIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixAgentCmdOutIndex.setStatus('current')
aixSeCPUUtilization = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSeCPUUtilization.setStatus('current')
aixSeCPUThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixSeCPUThreshold.setStatus('current')
aixSeSystemRunLevel = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("level0", 1), ("level1", 2), ("level2", 3), ("level3", 4), ("level4", 5), ("level5", 6), ("level6", 7), ("level7", 8), ("level8", 9), ("level9", 10), ("levelm", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixSeSystemRunLevel.setStatus('current')
aixSeSystemState = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("running", 1), ("reboot", 2), ("shutdown", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixSeSystemState.setStatus('current')
aixSeSystemTrap = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixSeSystemTrap.setStatus('current')
aixSeDateAndTime = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSeDateAndTime.setStatus('current')
aixSeMaxProcPerUser = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixSeMaxProcPerUser.setStatus('current')
aixSeLicenseNum = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixSeLicenseNum.setStatus('current')
aixSeRemainingLicenseNum = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSeRemainingLicenseNum.setStatus('current')
aixSeNumCPUs = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSeNumCPUs.setStatus('current')
aixSeMachineType = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 3, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSeMachineType.setStatus('current')
aixSeSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 3, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSeSerialNumber.setStatus('current')
aixFileSystemMounted = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 4, 1)).setObjects(("IBM-AIX-MIB", "aixFsName"))
if mibBuilder.loadTexts: aixFileSystemMounted.setStatus('current')
aixFileSystemFull = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 4, 2)).setObjects(("IBM-AIX-MIB", "aixFsName"), ("IBM-AIX-MIB", "aixFsSize"), ("IBM-AIX-MIB", "aixFsFree"), ("IBM-AIX-MIB", "aixFsThreshold"))
if mibBuilder.loadTexts: aixFileSystemFull.setStatus('current')
aixVolumeGroupFull = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 4, 3)).setObjects(("IBM-AIX-MIB", "aixVgName"), ("IBM-AIX-MIB", "aixVgSize"), ("IBM-AIX-MIB", "aixVgFree"), ("IBM-AIX-MIB", "aixVgThreshold"))
if mibBuilder.loadTexts: aixVolumeGroupFull.setStatus('current')
aixPageFull = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 4, 4)).setObjects(("IBM-AIX-MIB", "aixPageName"), ("IBM-AIX-MIB", "aixPagePercentUsed"), ("IBM-AIX-MIB", "aixPageThreshold"))
if mibBuilder.loadTexts: aixPageFull.setStatus('current')
aixUserLoginFailed = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 4, 5)).setObjects(("IBM-AIX-MIB", "aixFailedLoginTimePeriod"))
if mibBuilder.loadTexts: aixUserLoginFailed.setStatus('current')
aixUtilizationCPU = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 4, 6)).setObjects(("IBM-AIX-MIB", "aixSeCPUUtilization"), ("IBM-AIX-MIB", "aixSeCPUThreshold"))
if mibBuilder.loadTexts: aixUtilizationCPU.setStatus('current')
aixSnmptrapHolder = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 191, 1, 6, 1))
if mibBuilder.loadTexts: aixSnmptrapHolder.setStatus('current')
aixVgThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixVgThreshold.setStatus('current')
aixVgTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 1, 2), )
if mibBuilder.loadTexts: aixVgTable.setStatus('current')
aixVgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 1, 2, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixVgIndex"))
if mibBuilder.loadTexts: aixVgEntry.setStatus('current')
aixVgName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 1, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixVgName.setStatus('current')
aixVgIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixVgIdentifier.setStatus('current')
aixVgState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("activeComplete", 1), ("activePartial", 2), ("inactive", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixVgState.setStatus('current')
aixVgSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: aixVgSize.setStatus('current')
aixVgFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: aixVgFree.setStatus('current')
aixVgCurNumLVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixVgCurNumLVs.setStatus('current')
aixVgOpenLVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixVgOpenLVs.setStatus('current')
aixVgActivePVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixVgActivePVs.setStatus('current')
aixVgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixVgIndex.setStatus('current')
aixLvTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 2, 1), )
if mibBuilder.loadTexts: aixLvTable.setStatus('current')
aixLvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 2, 1, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixLvIndex"))
if mibBuilder.loadTexts: aixLvEntry.setStatus('current')
aixLvName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 2, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixLvName.setStatus('current')
aixLvNameVG = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixLvNameVG.setStatus('current')
aixLvType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("jfs", 1), ("jfslog", 2), ("paging", 3), ("boot", 4), ("jfs2", 5), ("jfs2log", 6), ("other", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixLvType.setStatus('current')
aixLvMountPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixLvMountPoint.setStatus('current')
aixLvSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: aixLvSize.setStatus('current')
aixLvState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("openStale", 1), ("openSyncd", 2), ("closeStale", 3), ("closeSyncd", 4), ("undefined", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixLvState.setStatus('current')
aixLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixLvIndex.setStatus('current')
aixPvTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 3, 1), )
if mibBuilder.loadTexts: aixPvTable.setStatus('current')
aixPvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 3, 1, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixPvIndex"))
if mibBuilder.loadTexts: aixPvEntry.setStatus('current')
aixPvName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 3, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPvName.setStatus('current')
aixPvNameVG = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPvNameVG.setStatus('current')
aixPvState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("missing", 2), ("removed", 3), ("variedOff", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPvState.setStatus('current')
aixPvSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPvSize.setStatus('current')
aixPvFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPvFree.setStatus('current')
aixPvNumLVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPvNumLVs.setStatus('current')
aixPvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPvIndex.setStatus('current')
aixPageThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixPageThreshold.setStatus('current')
aixPageTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 4, 2), )
if mibBuilder.loadTexts: aixPageTable.setStatus('current')
aixPageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 4, 2, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixPageIndex"))
if mibBuilder.loadTexts: aixPageEntry.setStatus('current')
aixPageName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 4, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPageName.setStatus('current')
aixPageNameVG = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPageNameVG.setStatus('current')
aixPageNamePV = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 4, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPageNamePV.setStatus('current')
aixPageSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPageSize.setStatus('current')
aixPagePercentUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPagePercentUsed.setStatus('current')
aixPageStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("notActive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPageStatus.setStatus('current')
aixPageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("lv", 1), ("nfs", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPageType.setStatus('current')
aixPageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 2, 4, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPageIndex.setStatus('current')
aixPrtQueTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 3, 1, 1), )
if mibBuilder.loadTexts: aixPrtQueTable.setStatus('current')
aixPrtQueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 3, 1, 1, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixPrtQueIndex"))
if mibBuilder.loadTexts: aixPrtQueEntry.setStatus('current')
aixPrtQueName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 3, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPrtQueName.setStatus('current')
aixPrtQueDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 3, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPrtQueDevice.setStatus('current')
aixPrtQueStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 3, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("ready", 1), ("running", 2), ("waiting", 3), ("off", 4), ("oprwait", 5), ("init", 6), ("sending", 7), ("gethost", 8), ("connect", 9), ("busy", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPrtQueStatus.setStatus('current')
aixPrtQueAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 3, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("default", 1), ("start", 2), ("stop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixPrtQueAction.setStatus('current')
aixPrtQueDescipline = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 3, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPrtQueDescipline.setStatus('current')
aixPrtQueAcctFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 3, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPrtQueAcctFile.setStatus('current')
aixPrtQueHost = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 3, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPrtQueHost.setStatus('current')
aixPrtQueRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 3, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPrtQueRQ.setStatus('current')
aixPrtQueJobNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 3, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPrtQueJobNum.setStatus('current')
aixPrtQueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 3, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPrtQueIndex.setStatus('current')
aixUsrTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 1, 1), )
if mibBuilder.loadTexts: aixUsrTable.setStatus('current')
aixUsrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 1, 1, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixUsrIndex"))
if mibBuilder.loadTexts: aixUsrEntry.setStatus('current')
aixUsrName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixUsrName.setStatus('current')
aixUsrID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 1, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixUsrID.setStatus('current')
aixUsrHome = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 1, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixUsrHome.setStatus('current')
aixUsrShell = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 1, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixUsrShell.setStatus('current')
aixUsrLocalLogin = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixUsrLocalLogin.setStatus('current')
aixUsrRemoteLogin = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixUsrRemoteLogin.setStatus('current')
aixUsrPasswdMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 52))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixUsrPasswdMaxAge.setStatus('current')
aixUsrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unlocked", 1), ("locked", 2), ("disabled", 3), ("enabled", 4), ("error", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixUsrStatus.setStatus('current')
aixUsrGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixUsrGroups.setStatus('current')
aixUsrAllowableAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 1, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixUsrAllowableAttempts.setStatus('current')
aixUsrResetLoginCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixUsrResetLoginCount.setStatus('current')
aixUsrPrimaryGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 1, 1, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixUsrPrimaryGroup.setStatus('current')
aixUsrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixUsrIndex.setStatus('current')
aixGrpTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 2, 1), )
if mibBuilder.loadTexts: aixGrpTable.setStatus('current')
aixGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 2, 1, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixGrpIndex"))
if mibBuilder.loadTexts: aixGrpEntry.setStatus('current')
aixGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixGrpIndex.setStatus('current')
aixGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixGrpName.setStatus('current')
aixGrpID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixGrpID.setStatus('current')
aixGrpAdminGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixGrpAdminGroup.setStatus('current')
aixGrpUsrList = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixGrpUsrList.setStatus('current')
aixGrpAdmList = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 4, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixGrpAdmList.setStatus('current')
aixFsThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixFsThreshold.setStatus('current')
aixFsTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 6, 2), )
if mibBuilder.loadTexts: aixFsTable.setStatus('current')
aixFsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 6, 2, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixFsIndex"))
if mibBuilder.loadTexts: aixFsTableEntry.setStatus('current')
aixFsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixFsIndex.setStatus('current')
aixFsName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 6, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixFsName.setStatus('current')
aixFsMountPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 6, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixFsMountPoint.setStatus('current')
aixFsType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("jfs", 1), ("jfs2", 2), ("cdrfs", 3), ("procfs", 4), ("cachefs", 5), ("autofs", 6), ("afs", 7), ("dfs", 8), ("nfs", 9), ("nfs3", 10), ("other", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixFsType.setStatus('current')
aixFsSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('megabytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixFsSize.setStatus('current')
aixFsFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: aixFsFree.setStatus('current')
aixFsNumINodes = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 6, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixFsNumINodes.setStatus('current')
aixFsUsedInodes = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 6, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixFsUsedInodes.setStatus('current')
aixFsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 6, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mounted", 1), ("unmounted", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixFsStatus.setStatus('current')
aixFsExecution = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 6, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("mount", 2), ("unmount", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixFsExecution.setStatus('current')
aixFsResultMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 6, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixFsResultMsg.setStatus('current')
aixProcNum = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixProcNum.setStatus('current')
aixProcTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 7, 2), )
if mibBuilder.loadTexts: aixProcTable.setStatus('current')
aixProcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 7, 2, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixProcPID"))
if mibBuilder.loadTexts: aixProcEntry.setStatus('current')
aixProcPID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixProcPID.setStatus('current')
aixProcUID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixProcUID.setStatus('current')
aixProcPPID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixProcPPID.setStatus('current')
aixProcGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixProcGroup.setStatus('current')
aixProcPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixProcPriority.setStatus('current')
aixProcCMD = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 7, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixProcCMD.setStatus('current')
aixProcCPU = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 7, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixProcCPU.setStatus('current')
aixProcStart = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 7, 2, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixProcStart.setStatus('current')
aixProcStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 7, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("nonexistentPS", 1), ("activePS", 2), ("swappedPS", 3), ("idlePS", 4), ("canceledPS", 5), ("stoppedPS", 6), ("other", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixProcStatus.setStatus('current')
aixProcTTY = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 7, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixProcTTY.setStatus('current')
aixSubSystemNum = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSubSystemNum.setStatus('current')
aixSubSysTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 1, 2), )
if mibBuilder.loadTexts: aixSubSysTable.setStatus('current')
aixSubSysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 1, 2, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixSubSysIndex"))
if mibBuilder.loadTexts: aixSubSysEntry.setStatus('current')
aixSubSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 1, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSubSysName.setStatus('current')
aixSubSysGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSubSysGroup.setStatus('current')
aixSubSysPID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSubSysPID.setStatus('current')
aixSubSysStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inoperative", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixSubSysStatus.setStatus('current')
aixSubSysIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSubSysIndex.setStatus('current')
aixSubSrvNum = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSubSrvNum.setStatus('current')
aixSubSrvTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 2, 2), )
if mibBuilder.loadTexts: aixSubSrvTable.setStatus('current')
aixSubSrvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 2, 2, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixSubSrvIndex"))
if mibBuilder.loadTexts: aixSubSrvEntry.setStatus('current')
aixSubSrvName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 2, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSubSrvName.setStatus('current')
aixSubSrvDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSubSrvDescr.setStatus('current')
aixSubSrvCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 2, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSubSrvCommand.setStatus('current')
aixSubSrvStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inoperative", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSubSrvStatus.setStatus('current')
aixSubSrvSubsys = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 2, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSubSrvSubsys.setStatus('current')
aixSubSrvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 5, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixSubSrvIndex.setStatus('current')
aixFailedLoginTimePeriod = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixFailedLoginTimePeriod.setStatus('current')
aixLoginFailedThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 191, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aixLoginFailedThreshold.setStatus('current')
aixLoginUserTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 8, 3), )
if mibBuilder.loadTexts: aixLoginUserTable.setStatus('current')
aixLoginUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 8, 3, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixLoginUserIndex"))
if mibBuilder.loadTexts: aixLoginUserEntry.setStatus('current')
aixLoginUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 8, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixLoginUserName.setStatus('current')
aixLoginUserTTY = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 8, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixLoginUserTTY.setStatus('current')
aixLoginUserHost = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 8, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixLoginUserHost.setStatus('current')
aixLoginUserDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 8, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixLoginUserDateAndTime.setStatus('current')
aixLoginUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 8, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixLoginUserIndex.setStatus('current')
aixPrinterTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 1, 1), )
if mibBuilder.loadTexts: aixPrinterTable.setStatus('current')
aixPrinterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 1, 1, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixPrinterIndex"))
if mibBuilder.loadTexts: aixPrinterEntry.setStatus('current')
aixPrinterName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPrinterName.setStatus('current')
aixPrinterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPrinterIndex.setStatus('current')
aixPrinterType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPrinterType.setStatus('current')
aixPrinterInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPrinterInterface.setStatus('current')
aixPrinterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("available", 1), ("defined", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPrinterStatus.setStatus('current')
aixPrinterDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPrinterDescr.setStatus('current')
aixPrinterLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPrinterLocation.setStatus('current')
aixPrinterPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixPrinterPortNumber.setStatus('current')
aixTapeDrvTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 2, 1), )
if mibBuilder.loadTexts: aixTapeDrvTable.setStatus('current')
aixTapeDrvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 2, 1, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixTapeDrvIndex"))
if mibBuilder.loadTexts: aixTapeDrvEntry.setStatus('current')
aixTapeDrvName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 2, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixTapeDrvName.setStatus('current')
aixTapeDrvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixTapeDrvIndex.setStatus('current')
aixTapeDrvType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixTapeDrvType.setStatus('current')
aixTapeDrvInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixTapeDrvInterface.setStatus('current')
aixTapeDrvStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("available", 1), ("defined", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixTapeDrvStatus.setStatus('current')
aixTapeDrvDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixTapeDrvDescr.setStatus('current')
aixTapeDrvLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 2, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixTapeDrvLocation.setStatus('current')
aixTapeDrvBlkSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixTapeDrvBlkSize.setStatus('current')
aixTapeDrvManufacturerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 2, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixTapeDrvManufacturerName.setStatus('current')
aixTapeDrvModelName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 2, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixTapeDrvModelName.setStatus('current')
aixTapeDrvSN = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 2, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixTapeDrvSN.setStatus('current')
aixTapeDrvPN = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 2, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixTapeDrvPN.setStatus('current')
aixTapeDrvFRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 2, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixTapeDrvFRU.setStatus('current')
aixTapeDrvEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 2, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixTapeDrvEC.setStatus('current')
aixHdTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3, 1), )
if mibBuilder.loadTexts: aixHdTable.setStatus('current')
aixHdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3, 1, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixHdIndex"))
if mibBuilder.loadTexts: aixHdEntry.setStatus('current')
aixHdName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixHdName.setStatus('current')
aixHdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixHdIndex.setStatus('current')
aixHdType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixHdType.setStatus('current')
aixHdSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: aixHdSize.setStatus('current')
aixHdInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixHdInterface.setStatus('current')
aixHdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("available", 1), ("defined", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixHdStatus.setStatus('current')
aixHdLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixHdLocation.setStatus('current')
aixHdIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixHdIdentifier.setStatus('current')
aixHdDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixHdDescr.setStatus('current')
aixHdManufacturerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixHdManufacturerName.setStatus('current')
aixHdModelName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixHdModelName.setStatus('current')
aixHdSN = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixHdSN.setStatus('current')
aixHdPN = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixHdPN.setStatus('current')
aixHdFRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixHdFRU.setStatus('current')
aixHdEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 3, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixHdEC.setStatus('current')
aixMemTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 4, 1), )
if mibBuilder.loadTexts: aixMemTable.setStatus('current')
aixMemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 4, 1, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixMemIndex"))
if mibBuilder.loadTexts: aixMemEntry.setStatus('current')
aixMemName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 4, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixMemName.setStatus('current')
aixMemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixMemIndex.setStatus('current')
aixMemLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 4, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixMemLocation.setStatus('current')
aixMemSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: aixMemSize.setStatus('current')
aixMemDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 4, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixMemDescr.setStatus('current')
aixCdromTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 5, 1), )
if mibBuilder.loadTexts: aixCdromTable.setStatus('current')
aixCdromEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 5, 1, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixCdromIndex"))
if mibBuilder.loadTexts: aixCdromEntry.setStatus('current')
aixCdromName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 5, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixCdromName.setStatus('current')
aixCdromIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixCdromIndex.setStatus('current')
aixCdromType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 5, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixCdromType.setStatus('current')
aixCdromInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 5, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixCdromInterface.setStatus('current')
aixCdromDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 5, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixCdromDescr.setStatus('current')
aixCdromStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("available", 1), ("defined", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixCdromStatus.setStatus('current')
aixCdromLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 5, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixCdromLocation.setStatus('current')
aixCdromManufacturerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 5, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixCdromManufacturerName.setStatus('current')
aixCdromModelName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 5, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixCdromModelName.setStatus('current')
aixCdromPN = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 5, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixCdromPN.setStatus('current')
aixCdromFRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 5, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixCdromFRU.setStatus('current')
aixCdromEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 5, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixCdromEC.setStatus('current')
aixScsiTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 6, 1), )
if mibBuilder.loadTexts: aixScsiTable.setStatus('current')
aixScsiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 6, 1, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixScsiIndex"))
if mibBuilder.loadTexts: aixScsiEntry.setStatus('current')
aixScsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 6, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixScsiName.setStatus('current')
aixScsiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixScsiIndex.setStatus('current')
aixScsiDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 6, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixScsiDescr.setStatus('current')
aixScsiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("available", 1), ("defined", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixScsiStatus.setStatus('current')
aixScsiLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 6, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixScsiLocation.setStatus('current')
aixScsiAdapterID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixScsiAdapterID.setStatus('current')
aixProcessorTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 7, 1), )
if mibBuilder.loadTexts: aixProcessorTable.setStatus('current')
aixProcessorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 7, 1, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixProcessorIndex"))
if mibBuilder.loadTexts: aixProcessorEntry.setStatus('current')
aixProcessorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 7, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixProcessorName.setStatus('current')
aixProcessorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixProcessorIndex.setStatus('current')
aixProcessorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 7, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixProcessorType.setStatus('current')
aixProcessorDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 7, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixProcessorDescr.setStatus('current')
aixProcessorSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixProcessorSpeed.setStatus('current')
aixNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 8, 1), )
if mibBuilder.loadTexts: aixNetworkTable.setStatus('current')
aixNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 8, 1, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixNetworkIndex"))
if mibBuilder.loadTexts: aixNetworkEntry.setStatus('current')
aixNetworkName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 8, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixNetworkName.setStatus('current')
aixNetworkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixNetworkIndex.setStatus('current')
aixNetworkType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 8, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixNetworkType.setStatus('current')
aixNetworkInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 8, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixNetworkInterface.setStatus('current')
aixNetworkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("available", 1), ("defined", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixNetworkStatus.setStatus('current')
aixNetworkLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 8, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixNetworkLocation.setStatus('current')
aixNetworkDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 8, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixNetworkDescr.setStatus('current')
aixAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 9, 1), )
if mibBuilder.loadTexts: aixAdapterTable.setStatus('current')
aixAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 9, 1, 1), ).setIndexNames((0, "IBM-AIX-MIB", "aixAdapterIndex"))
if mibBuilder.loadTexts: aixAdapterEntry.setStatus('current')
aixAdapterName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 9, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixAdapterName.setStatus('current')
aixAdapterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixAdapterIndex.setStatus('current')
aixAdapterType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 9, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixAdapterType.setStatus('current')
aixAdapterInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 9, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixAdapterInterface.setStatus('current')
aixAdapterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("available", 1), ("defined", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixAdapterStatus.setStatus('current')
aixAdapterLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 9, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixAdapterLocation.setStatus('current')
aixAdapterDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 191, 9, 9, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aixAdapterDescr.setStatus('current')
aixCfmGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1))
aixCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 2))
aixCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 2, 1)).setObjects(("IBM-AIX-MIB", "aixAgentGroup"), ("IBM-AIX-MIB", "aixVGGroup"), ("IBM-AIX-MIB", "aixPVGroup"), ("IBM-AIX-MIB", "aixLVGroup"), ("IBM-AIX-MIB", "aixPagingSpaceGroup"), ("IBM-AIX-MIB", "aixFsGroup"), ("IBM-AIX-MIB", "aixProcessGroup"), ("IBM-AIX-MIB", "aixLoginUsrGroup"), ("IBM-AIX-MIB", "aixSeGroup"), ("IBM-AIX-MIB", "aixPrtQueueGroup"), ("IBM-AIX-MIB", "aixUsrGroup"), ("IBM-AIX-MIB", "aixGrpGroup"), ("IBM-AIX-MIB", "aixSubSystemGroup"), ("IBM-AIX-MIB", "aixSubServerGroup"), ("IBM-AIX-MIB", "aixSeAuxGroup"), ("IBM-AIX-MIB", "aixPrinterGroup"), ("IBM-AIX-MIB", "aixTapeGroup"), ("IBM-AIX-MIB", "aixHardDiskGroup"), ("IBM-AIX-MIB", "aixMemoryGroup"), ("IBM-AIX-MIB", "aixCDROMGroup"), ("IBM-AIX-MIB", "aixScsiGroup"), ("IBM-AIX-MIB", "aixProcessorGroup"), ("IBM-AIX-MIB", "aixNetworkGroup"), ("IBM-AIX-MIB", "aixAdapterGroup"), ("IBM-AIX-MIB", "criticalNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixCompliance = aixCompliance.setStatus('current')
aixAgentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 1)).setObjects(("IBM-AIX-MIB", "aixAgentAction"), ("IBM-AIX-MIB", "aixAgentCmdString"), ("IBM-AIX-MIB", "aixAgentExeCommand"), ("IBM-AIX-MIB", "aixAgentCmdResult"), ("IBM-AIX-MIB", "aixAgentCmdOutput"), ("IBM-AIX-MIB", "aixAgentCmdOutIndex"), ("IBM-AIX-MIB", "aixAgentPollInterval"), ("IBM-AIX-MIB", "aixPollEnable"), ("IBM-AIX-MIB", "aixLastTrapMsg"), ("IBM-AIX-MIB", "aixFsPollInterval"), ("IBM-AIX-MIB", "aixVgPollInterval"), ("IBM-AIX-MIB", "aixCPUPollInterval"), ("IBM-AIX-MIB", "aixLFPollInterval"), ("IBM-AIX-MIB", "aixPagePollInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixAgentGroup = aixAgentGroup.setStatus('current')
aixSeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 2)).setObjects(("IBM-AIX-MIB", "aixSeCPUUtilization"), ("IBM-AIX-MIB", "aixSeCPUThreshold"), ("IBM-AIX-MIB", "aixSeSystemRunLevel"), ("IBM-AIX-MIB", "aixSeSystemState"), ("IBM-AIX-MIB", "aixSeSystemTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixSeGroup = aixSeGroup.setStatus('current')
criticalNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 3)).setObjects(("IBM-AIX-MIB", "aixFileSystemMounted"), ("IBM-AIX-MIB", "aixFileSystemFull"), ("IBM-AIX-MIB", "aixVolumeGroupFull"), ("IBM-AIX-MIB", "aixPageFull"), ("IBM-AIX-MIB", "aixUserLoginFailed"), ("IBM-AIX-MIB", "aixUtilizationCPU"), ("IBM-AIX-MIB", "aixSnmptrapHolder"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    criticalNotificationGroup = criticalNotificationGroup.setStatus('current')
aixVGGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 4)).setObjects(("IBM-AIX-MIB", "aixVgName"), ("IBM-AIX-MIB", "aixVgIdentifier"), ("IBM-AIX-MIB", "aixVgState"), ("IBM-AIX-MIB", "aixVgSize"), ("IBM-AIX-MIB", "aixVgFree"), ("IBM-AIX-MIB", "aixVgCurNumLVs"), ("IBM-AIX-MIB", "aixVgOpenLVs"), ("IBM-AIX-MIB", "aixVgActivePVs"), ("IBM-AIX-MIB", "aixVgThreshold"), ("IBM-AIX-MIB", "aixVgIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixVGGroup = aixVGGroup.setStatus('current')
aixLVGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 5)).setObjects(("IBM-AIX-MIB", "aixLvName"), ("IBM-AIX-MIB", "aixLvNameVG"), ("IBM-AIX-MIB", "aixLvType"), ("IBM-AIX-MIB", "aixLvMountPoint"), ("IBM-AIX-MIB", "aixLvSize"), ("IBM-AIX-MIB", "aixLvState"), ("IBM-AIX-MIB", "aixLvIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixLVGroup = aixLVGroup.setStatus('current')
aixPVGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 6)).setObjects(("IBM-AIX-MIB", "aixPvName"), ("IBM-AIX-MIB", "aixPvNameVG"), ("IBM-AIX-MIB", "aixPvState"), ("IBM-AIX-MIB", "aixPvSize"), ("IBM-AIX-MIB", "aixPvFree"), ("IBM-AIX-MIB", "aixPvNumLVs"), ("IBM-AIX-MIB", "aixPvIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixPVGroup = aixPVGroup.setStatus('current')
aixPagingSpaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 7)).setObjects(("IBM-AIX-MIB", "aixPageName"), ("IBM-AIX-MIB", "aixPageNameVG"), ("IBM-AIX-MIB", "aixPageNamePV"), ("IBM-AIX-MIB", "aixPageSize"), ("IBM-AIX-MIB", "aixPagePercentUsed"), ("IBM-AIX-MIB", "aixPageStatus"), ("IBM-AIX-MIB", "aixPageType"), ("IBM-AIX-MIB", "aixPageThreshold"), ("IBM-AIX-MIB", "aixPageIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixPagingSpaceGroup = aixPagingSpaceGroup.setStatus('current')
aixFsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 8)).setObjects(("IBM-AIX-MIB", "aixFsIndex"), ("IBM-AIX-MIB", "aixFsName"), ("IBM-AIX-MIB", "aixFsMountPoint"), ("IBM-AIX-MIB", "aixFsType"), ("IBM-AIX-MIB", "aixFsSize"), ("IBM-AIX-MIB", "aixFsFree"), ("IBM-AIX-MIB", "aixFsNumINodes"), ("IBM-AIX-MIB", "aixFsUsedInodes"), ("IBM-AIX-MIB", "aixFsThreshold"), ("IBM-AIX-MIB", "aixFsStatus"), ("IBM-AIX-MIB", "aixFsExecution"), ("IBM-AIX-MIB", "aixFsResultMsg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixFsGroup = aixFsGroup.setStatus('current')
aixProcessGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 9)).setObjects(("IBM-AIX-MIB", "aixProcPID"), ("IBM-AIX-MIB", "aixProcUID"), ("IBM-AIX-MIB", "aixProcPPID"), ("IBM-AIX-MIB", "aixProcGroup"), ("IBM-AIX-MIB", "aixProcPriority"), ("IBM-AIX-MIB", "aixProcCPU"), ("IBM-AIX-MIB", "aixProcStart"), ("IBM-AIX-MIB", "aixProcStatus"), ("IBM-AIX-MIB", "aixProcTTY"), ("IBM-AIX-MIB", "aixProcCMD"), ("IBM-AIX-MIB", "aixProcNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixProcessGroup = aixProcessGroup.setStatus('current')
aixLoginUsrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 10)).setObjects(("IBM-AIX-MIB", "aixLoginUserName"), ("IBM-AIX-MIB", "aixLoginUserTTY"), ("IBM-AIX-MIB", "aixLoginUserHost"), ("IBM-AIX-MIB", "aixLoginUserDateAndTime"), ("IBM-AIX-MIB", "aixLoginUserIndex"), ("IBM-AIX-MIB", "aixLoginFailedThreshold"), ("IBM-AIX-MIB", "aixFailedLoginTimePeriod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixLoginUsrGroup = aixLoginUsrGroup.setStatus('current')
aixPrtQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 11)).setObjects(("IBM-AIX-MIB", "aixPrtQueName"), ("IBM-AIX-MIB", "aixPrtQueDevice"), ("IBM-AIX-MIB", "aixPrtQueStatus"), ("IBM-AIX-MIB", "aixPrtQueAction"), ("IBM-AIX-MIB", "aixPrtQueIndex"), ("IBM-AIX-MIB", "aixPrtQueAcctFile"), ("IBM-AIX-MIB", "aixPrtQueRQ"), ("IBM-AIX-MIB", "aixPrtQueDescipline"), ("IBM-AIX-MIB", "aixPrtQueHost"), ("IBM-AIX-MIB", "aixPrtQueJobNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixPrtQueueGroup = aixPrtQueueGroup.setStatus('current')
aixUsrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 12)).setObjects(("IBM-AIX-MIB", "aixUsrName"), ("IBM-AIX-MIB", "aixUsrID"), ("IBM-AIX-MIB", "aixUsrHome"), ("IBM-AIX-MIB", "aixUsrShell"), ("IBM-AIX-MIB", "aixUsrLocalLogin"), ("IBM-AIX-MIB", "aixUsrRemoteLogin"), ("IBM-AIX-MIB", "aixUsrPasswdMaxAge"), ("IBM-AIX-MIB", "aixUsrStatus"), ("IBM-AIX-MIB", "aixUsrGroups"), ("IBM-AIX-MIB", "aixUsrAllowableAttempts"), ("IBM-AIX-MIB", "aixUsrResetLoginCount"), ("IBM-AIX-MIB", "aixUsrPrimaryGroup"), ("IBM-AIX-MIB", "aixUsrIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixUsrGroup = aixUsrGroup.setStatus('current')
aixGrpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 13)).setObjects(("IBM-AIX-MIB", "aixGrpName"), ("IBM-AIX-MIB", "aixGrpID"), ("IBM-AIX-MIB", "aixGrpAdminGroup"), ("IBM-AIX-MIB", "aixGrpIndex"), ("IBM-AIX-MIB", "aixGrpUsrList"), ("IBM-AIX-MIB", "aixGrpAdmList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixGrpGroup = aixGrpGroup.setStatus('current')
aixSubSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 14)).setObjects(("IBM-AIX-MIB", "aixSubSysName"), ("IBM-AIX-MIB", "aixSubSysGroup"), ("IBM-AIX-MIB", "aixSubSysPID"), ("IBM-AIX-MIB", "aixSubSysIndex"), ("IBM-AIX-MIB", "aixSubSysStatus"), ("IBM-AIX-MIB", "aixSubSystemNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixSubSystemGroup = aixSubSystemGroup.setStatus('current')
aixSubServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 15)).setObjects(("IBM-AIX-MIB", "aixSubSrvName"), ("IBM-AIX-MIB", "aixSubSrvDescr"), ("IBM-AIX-MIB", "aixSubSrvCommand"), ("IBM-AIX-MIB", "aixSubSrvStatus"), ("IBM-AIX-MIB", "aixSubSrvNum"), ("IBM-AIX-MIB", "aixSubSrvIndex"), ("IBM-AIX-MIB", "aixSubSrvSubsys"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixSubServerGroup = aixSubServerGroup.setStatus('current')
aixSeAuxGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 16)).setObjects(("IBM-AIX-MIB", "aixSeDateAndTime"), ("IBM-AIX-MIB", "aixSeMaxProcPerUser"), ("IBM-AIX-MIB", "aixSeLicenseNum"), ("IBM-AIX-MIB", "aixSeRemainingLicenseNum"), ("IBM-AIX-MIB", "aixSeNumCPUs"), ("IBM-AIX-MIB", "aixSeMachineType"), ("IBM-AIX-MIB", "aixSeSerialNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixSeAuxGroup = aixSeAuxGroup.setStatus('current')
aixPrinterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 17)).setObjects(("IBM-AIX-MIB", "aixPrinterName"), ("IBM-AIX-MIB", "aixPrinterType"), ("IBM-AIX-MIB", "aixPrinterInterface"), ("IBM-AIX-MIB", "aixPrinterStatus"), ("IBM-AIX-MIB", "aixPrinterDescr"), ("IBM-AIX-MIB", "aixPrinterLocation"), ("IBM-AIX-MIB", "aixPrinterPortNumber"), ("IBM-AIX-MIB", "aixPrinterIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixPrinterGroup = aixPrinterGroup.setStatus('current')
aixTapeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 18)).setObjects(("IBM-AIX-MIB", "aixTapeDrvName"), ("IBM-AIX-MIB", "aixTapeDrvType"), ("IBM-AIX-MIB", "aixTapeDrvInterface"), ("IBM-AIX-MIB", "aixTapeDrvStatus"), ("IBM-AIX-MIB", "aixTapeDrvLocation"), ("IBM-AIX-MIB", "aixTapeDrvBlkSize"), ("IBM-AIX-MIB", "aixTapeDrvDescr"), ("IBM-AIX-MIB", "aixTapeDrvIndex"), ("IBM-AIX-MIB", "aixTapeDrvManufacturerName"), ("IBM-AIX-MIB", "aixTapeDrvModelName"), ("IBM-AIX-MIB", "aixTapeDrvSN"), ("IBM-AIX-MIB", "aixTapeDrvFRU"), ("IBM-AIX-MIB", "aixTapeDrvPN"), ("IBM-AIX-MIB", "aixTapeDrvEC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixTapeGroup = aixTapeGroup.setStatus('current')
aixHardDiskGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 19)).setObjects(("IBM-AIX-MIB", "aixHdName"), ("IBM-AIX-MIB", "aixHdType"), ("IBM-AIX-MIB", "aixHdSize"), ("IBM-AIX-MIB", "aixHdInterface"), ("IBM-AIX-MIB", "aixHdStatus"), ("IBM-AIX-MIB", "aixHdLocation"), ("IBM-AIX-MIB", "aixHdIdentifier"), ("IBM-AIX-MIB", "aixHdDescr"), ("IBM-AIX-MIB", "aixHdIndex"), ("IBM-AIX-MIB", "aixHdManufacturerName"), ("IBM-AIX-MIB", "aixHdModelName"), ("IBM-AIX-MIB", "aixHdSN"), ("IBM-AIX-MIB", "aixHdFRU"), ("IBM-AIX-MIB", "aixHdPN"), ("IBM-AIX-MIB", "aixHdEC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixHardDiskGroup = aixHardDiskGroup.setStatus('current')
aixMemoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 20)).setObjects(("IBM-AIX-MIB", "aixMemName"), ("IBM-AIX-MIB", "aixMemLocation"), ("IBM-AIX-MIB", "aixMemSize"), ("IBM-AIX-MIB", "aixMemDescr"), ("IBM-AIX-MIB", "aixMemIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixMemoryGroup = aixMemoryGroup.setStatus('current')
aixCDROMGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 21)).setObjects(("IBM-AIX-MIB", "aixCdromName"), ("IBM-AIX-MIB", "aixCdromType"), ("IBM-AIX-MIB", "aixCdromInterface"), ("IBM-AIX-MIB", "aixCdromDescr"), ("IBM-AIX-MIB", "aixCdromStatus"), ("IBM-AIX-MIB", "aixCdromLocation"), ("IBM-AIX-MIB", "aixCdromIndex"), ("IBM-AIX-MIB", "aixCdromManufacturerName"), ("IBM-AIX-MIB", "aixCdromModelName"), ("IBM-AIX-MIB", "aixCdromFRU"), ("IBM-AIX-MIB", "aixCdromPN"), ("IBM-AIX-MIB", "aixCdromEC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixCDROMGroup = aixCDROMGroup.setStatus('current')
aixScsiGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 22)).setObjects(("IBM-AIX-MIB", "aixScsiName"), ("IBM-AIX-MIB", "aixScsiDescr"), ("IBM-AIX-MIB", "aixScsiStatus"), ("IBM-AIX-MIB", "aixScsiLocation"), ("IBM-AIX-MIB", "aixScsiAdapterID"), ("IBM-AIX-MIB", "aixScsiIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixScsiGroup = aixScsiGroup.setStatus('current')
aixProcessorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 23)).setObjects(("IBM-AIX-MIB", "aixProcessorName"), ("IBM-AIX-MIB", "aixProcessorDescr"), ("IBM-AIX-MIB", "aixProcessorSpeed"), ("IBM-AIX-MIB", "aixProcessorType"), ("IBM-AIX-MIB", "aixProcessorIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixProcessorGroup = aixProcessorGroup.setStatus('current')
aixNetworkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 24)).setObjects(("IBM-AIX-MIB", "aixNetworkName"), ("IBM-AIX-MIB", "aixNetworkDescr"), ("IBM-AIX-MIB", "aixNetworkStatus"), ("IBM-AIX-MIB", "aixNetworkLocation"), ("IBM-AIX-MIB", "aixNetworkType"), ("IBM-AIX-MIB", "aixNetworkIndex"), ("IBM-AIX-MIB", "aixNetworkInterface"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixNetworkGroup = aixNetworkGroup.setStatus('current')
aixAdapterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 191, 10, 1, 25)).setObjects(("IBM-AIX-MIB", "aixAdapterName"), ("IBM-AIX-MIB", "aixAdapterDescr"), ("IBM-AIX-MIB", "aixAdapterStatus"), ("IBM-AIX-MIB", "aixAdapterLocation"), ("IBM-AIX-MIB", "aixAdapterType"), ("IBM-AIX-MIB", "aixAdapterIndex"), ("IBM-AIX-MIB", "aixAdapterInterface"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aixAdapterGroup = aixAdapterGroup.setStatus('current')
mibBuilder.exportSymbols("IBM-AIX-MIB", aixSrvSubsystem=aixSrvSubsystem, aixProcStatus=aixProcStatus, aixSubSysGroup=aixSubSysGroup, aixHdTable=aixHdTable, aixProcessorIndex=aixProcessorIndex, aixPvSize=aixPvSize, aixAgentPollInterval=aixAgentPollInterval, aixUsrEntry=aixUsrEntry, aixProcPriority=aixProcPriority, aixPollEnable=aixPollEnable, aixHdStatus=aixHdStatus, aixSeDateAndTime=aixSeDateAndTime, aixGrpIndex=aixGrpIndex, aixPageIndex=aixPageIndex, aixCdromType=aixCdromType, aixScsiDescr=aixScsiDescr, aixAdapterEntry=aixAdapterEntry, aixFsMountPoint=aixFsMountPoint, aixHdIndex=aixHdIndex, aixMemIndex=aixMemIndex, aixVgActivePVs=aixVgActivePVs, aixNetworkGroup=aixNetworkGroup, aixFsFree=aixFsFree, aixAdapterGroup=aixAdapterGroup, aixFsThreshold=aixFsThreshold, aixPrtQueName=aixPrtQueName, aixAdapterLocation=aixAdapterLocation, aixGroups=aixGroups, aixFsStatus=aixFsStatus, aixProcessorSpeed=aixProcessorSpeed, aixLvState=aixLvState, aixFsResultMsg=aixFsResultMsg, aixPrtQueHost=aixPrtQueHost, aixPagingSpace=aixPagingSpace, aixProcessorEntry=aixProcessorEntry, aixSubSrvEntry=aixSubSrvEntry, aixLoginFailedThreshold=aixLoginFailedThreshold, aixProcPPID=aixProcPPID, aixMemTable=aixMemTable, aixProcCMD=aixProcCMD, aixCdromPN=aixCdromPN, aixCdromIndex=aixCdromIndex, aixSystem=aixSystem, aixPrinterStatus=aixPrinterStatus, aixNetworkIndex=aixNetworkIndex, aixHardDiskGroup=aixHardDiskGroup, aixPrinterDescr=aixPrinterDescr, aixHdDescr=aixHdDescr, aixNetwork=aixNetwork, aixScsi=aixScsi, aixScsiAdapterID=aixScsiAdapterID, aixLFPollInterval=aixLFPollInterval, aixSubSrvStatus=aixSubSrvStatus, aixVgOpenLVs=aixVgOpenLVs, aixSubSrvNum=aixSubSrvNum, aixPagingSpaceGroup=aixPagingSpaceGroup, aixCdromTable=aixCdromTable, aixVgName=aixVgName, aixPrtQueDevice=aixPrtQueDevice, aixProcGroup=aixProcGroup, aixTapeDrvName=aixTapeDrvName, aixMemory=aixMemory, aixLvNameVG=aixLvNameVG, aixAgentGroup=aixAgentGroup, aixHdSize=aixHdSize, aixPrtQueAction=aixPrtQueAction, aixSubSysEntry=aixSubSysEntry, aixUtilizationCPU=aixUtilizationCPU, aixHardDisk=aixHardDisk, aixPageTable=aixPageTable, aixPvName=aixPvName, aixSeGroup=aixSeGroup, aixPrtQueue=aixPrtQueue, aixGrpID=aixGrpID, aixVgEntry=aixVgEntry, aixHdModelName=aixHdModelName, aixService=aixService, aixPrtQueStatus=aixPrtQueStatus, aixCDROM=aixCDROM, aixGrpGroup=aixGrpGroup, aixAgentAction=aixAgentAction, aixAuxSystemEnvironment=aixAuxSystemEnvironment, aixLvMountPoint=aixLvMountPoint, aixLoginUserHost=aixLoginUserHost, aixSubSysStatus=aixSubSysStatus, aixFileSystemMounted=aixFileSystemMounted, aixMemEntry=aixMemEntry, aixScsiStatus=aixScsiStatus, aixLvName=aixLvName, aixFailedLoginTimePeriod=aixFailedLoginTimePeriod, aixCDROMGroup=aixCDROMGroup, aixCdromFRU=aixCdromFRU, aixPvTable=aixPvTable, aixCompliances=aixCompliances, aixTapeDrvFRU=aixTapeDrvFRU, aixScsiLocation=aixScsiLocation, aixGrpEntry=aixGrpEntry, aixPrinterInterface=aixPrinterInterface, aixCdromEC=aixCdromEC, aixAgentCmdString=aixAgentCmdString, aixCPUPollInterval=aixCPUPollInterval, aixTapeDrvModelName=aixTapeDrvModelName, aixGrpName=aixGrpName, aixProcessorGroup=aixProcessorGroup, aixLoginUserTable=aixLoginUserTable, aixAdapter=aixAdapter, aixUsers=aixUsers, aixProcTable=aixProcTable, aixTapeDrvInterface=aixTapeDrvInterface, aixFsNumINodes=aixFsNumINodes, aixSubSrvSubsys=aixSubSrvSubsys, aixAdapterInterface=aixAdapterInterface, aixHdName=aixHdName, aixCdromInterface=aixCdromInterface, ibm=ibm, aixProcessorDescr=aixProcessorDescr, aixProcNum=aixProcNum, aixCompliance=aixCompliance, aixFsUsedInodes=aixFsUsedInodes, aixSubSrvTable=aixSubSrvTable, aixFsTableEntry=aixFsTableEntry, aixUsrGroups=aixUsrGroups, aixFsPollInterval=aixFsPollInterval, aixMemLocation=aixMemLocation, aixProcessorName=aixProcessorName, aixMemoryGroup=aixMemoryGroup, aixTapeDrvPN=aixTapeDrvPN, aixConformance=aixConformance, aixLoginUserTTY=aixLoginUserTTY, aixAdapterDescr=aixAdapterDescr, aixAdapterType=aixAdapterType, aixSeMachineType=aixSeMachineType, aixMemSize=aixMemSize, aixUsrTable=aixUsrTable, aixPageSize=aixPageSize, aixUsrRemoteLogin=aixUsrRemoteLogin, aixUsrLocalLogin=aixUsrLocalLogin, aixPvNameVG=aixPvNameVG, aixTrap=aixTrap, aixTapeDrvDescr=aixTapeDrvDescr, aixSubSysPID=aixSubSysPID, aixSubSystemGroup=aixSubSystemGroup, aixPageFull=aixPageFull, aixAgentCmdOutput=aixAgentCmdOutput, aixPrtQueAcctFile=aixPrtQueAcctFile, aixUsrResetLoginCount=aixUsrResetLoginCount, ibmAIX=ibmAIX, aixTape=aixTape, aixNetworkTable=aixNetworkTable, aixNetworkName=aixNetworkName, aixScsiName=aixScsiName, aixPrtQueIndex=aixPrtQueIndex, aixSubSrvIndex=aixSubSrvIndex, aixProcCPU=aixProcCPU, aixTapeDrvLocation=aixTapeDrvLocation, aixCfmGroup=aixCfmGroup, aixScsiGroup=aixScsiGroup, aixFileSystemFull=aixFileSystemFull, aixVgThreshold=aixVgThreshold, aixPrtQueEntry=aixPrtQueEntry, aixFsName=aixFsName, aixPageStatus=aixPageStatus, aixProcPID=aixProcPID, aixSrvSubserver=aixSrvSubserver, aixPageType=aixPageType, aixSubSrvDescr=aixSubSrvDescr, aixPvNumLVs=aixPvNumLVs, aixPrinterEntry=aixPrinterEntry, aixHdPN=aixHdPN, aixPhysicalVolume=aixPhysicalVolume, aixVgCurNumLVs=aixVgCurNumLVs, aixSystemEnvironment=aixSystemEnvironment, aixTapeDrvEC=aixTapeDrvEC, aixPageNameVG=aixPageNameVG, aixLoginUsrGroup=aixLoginUsrGroup, aixProcStart=aixProcStart, aixProcTTY=aixProcTTY, aixMemName=aixMemName, criticalNotificationGroup=criticalNotificationGroup, aixPvFree=aixPvFree, aixTapeDrvBlkSize=aixTapeDrvBlkSize, aixPagePollInterval=aixPagePollInterval, aixProcUID=aixProcUID, aixLVGroup=aixLVGroup, aixFsGroup=aixFsGroup, aixUsrPasswdMaxAge=aixUsrPasswdMaxAge, aixLvIndex=aixLvIndex, aixDevice=aixDevice, aixVgState=aixVgState, aixTapeDrvIndex=aixTapeDrvIndex, aixPrinterType=aixPrinterType, aixCdromLocation=aixCdromLocation, aixVgIdentifier=aixVgIdentifier, aixHdInterface=aixHdInterface, aixCdromStatus=aixCdromStatus, aixSubSystemNum=aixSubSystemNum, aixSubSrvName=aixSubSrvName, aixSeLicenseNum=aixSeLicenseNum, aixVolumeGroup=aixVolumeGroup, aixSeAuxGroup=aixSeAuxGroup, aixCdromEntry=aixCdromEntry, aixHdType=aixHdType, aixVgPollInterval=aixVgPollInterval, aixPageNamePV=aixPageNamePV, aixSeSystemTrap=aixSeSystemTrap, aixPVGroup=aixPVGroup, aixFsExecution=aixFsExecution, aixPageThreshold=aixPageThreshold, aixNetworkType=aixNetworkType, aixHdSN=aixHdSN, aixNetworkEntry=aixNetworkEntry, aixPrtQueTable=aixPrtQueTable, aixUser=aixUser, aixNetworkLocation=aixNetworkLocation, aixAdapterName=aixAdapterName, aixSubSysName=aixSubSysName, aixProcEntry=aixProcEntry, aixPrinter=aixPrinter, aixGrpAdminGroup=aixGrpAdminGroup, aixTapeDrvStatus=aixTapeDrvStatus, aixCdromName=aixCdromName, aixAgent=aixAgent, aixPrtQueJobNum=aixPrtQueJobNum, aixHdIdentifier=aixHdIdentifier, aixLastTrapMsg=aixLastTrapMsg, aixGeneralTrap=aixGeneralTrap, aixUsrShell=aixUsrShell, aixSubSysIndex=aixSubSysIndex, aixLvTable=aixLvTable, aixFsIndex=aixFsIndex, aixLoginUserName=aixLoginUserName, aixHdEntry=aixHdEntry, aixHdEC=aixHdEC, PYSNMP_MODULE_ID=ibmAIX, aixUsrStatus=aixUsrStatus, aixTapeDrvEntry=aixTapeDrvEntry, aixLogin=aixLogin, aixPrinterLocation=aixPrinterLocation, aixHdManufacturerName=aixHdManufacturerName, aixNetworkStatus=aixNetworkStatus, ibmProd=ibmProd, aixNetworkDescr=aixNetworkDescr, aixPagePercentUsed=aixPagePercentUsed, aixPvEntry=aixPvEntry, aixScsiTable=aixScsiTable, aixUsrPrimaryGroup=aixUsrPrimaryGroup, aixSeSerialNumber=aixSeSerialNumber, aixTapeDrvTable=aixTapeDrvTable, aixPrtQueueGroup=aixPrtQueueGroup, aixLvSize=aixLvSize, aixTapeGroup=aixTapeGroup, aixVGGroup=aixVGGroup, aixGrpUsrList=aixGrpUsrList, aixPageName=aixPageName)
mibBuilder.exportSymbols("IBM-AIX-MIB", aixHdLocation=aixHdLocation, aixFileSystem=aixFileSystem, aixLvType=aixLvType, aixSeSystemState=aixSeSystemState, aixProcessorTable=aixProcessorTable, aixAdapterTable=aixAdapterTable, aixSeCPUThreshold=aixSeCPUThreshold, aixHdFRU=aixHdFRU, aixGrpAdmList=aixGrpAdmList, aixSubSrvCommand=aixSubSrvCommand, aixPrtQueRQ=aixPrtQueRQ, aixSeSystemRunLevel=aixSeSystemRunLevel, aixScsiIndex=aixScsiIndex, aixPrinterPortNumber=aixPrinterPortNumber, aixPrintSystem=aixPrintSystem, aixSubServerGroup=aixSubServerGroup, aixCdromModelName=aixCdromModelName, aixLoginUserIndex=aixLoginUserIndex, aixVolumeGroupFull=aixVolumeGroupFull, aixSeNumCPUs=aixSeNumCPUs, aixSeCPUUtilization=aixSeCPUUtilization, aixUsrID=aixUsrID, aixPrinterTable=aixPrinterTable, aixMemDescr=aixMemDescr, aixAgentCmdOutTable=aixAgentCmdOutTable, aixLogicalVolume=aixLogicalVolume, aixProcessor=aixProcessor, aixLoginUserDateAndTime=aixLoginUserDateAndTime, aixTapeDrvManufacturerName=aixTapeDrvManufacturerName, aixGrpTable=aixGrpTable, aixFsSize=aixFsSize, aixProcessorType=aixProcessorType, aixUsrGroup=aixUsrGroup, aixFsTable=aixFsTable, aixFsType=aixFsType, aixStorageSystem=aixStorageSystem, aixTapeDrvType=aixTapeDrvType, aixAgentExeCommand=aixAgentExeCommand, aixAgentCmdOutTableEntry=aixAgentCmdOutTableEntry, aixVgFree=aixVgFree, aixSeMaxProcPerUser=aixSeMaxProcPerUser, aixPrinterName=aixPrinterName, aixCdromDescr=aixCdromDescr, aixAdapterStatus=aixAdapterStatus, aixPrinterIndex=aixPrinterIndex, aixPageEntry=aixPageEntry, aixUsrAllowableAttempts=aixUsrAllowableAttempts, aixTapeDrvSN=aixTapeDrvSN, aixUsrIndex=aixUsrIndex, aixUserLoginFailed=aixUserLoginFailed, aixUsrName=aixUsrName, aixSnmptrapHolder=aixSnmptrapHolder, aixUsrHome=aixUsrHome, aixVgIndex=aixVgIndex, aixLoginUserEntry=aixLoginUserEntry, aixLvEntry=aixLvEntry, aixVgTable=aixVgTable, aixProcessGroup=aixProcessGroup, aixScsiEntry=aixScsiEntry, aixPvState=aixPvState, aixSubSysTable=aixSubSysTable, aixNetworkInterface=aixNetworkInterface, aixSeRemainingLicenseNum=aixSeRemainingLicenseNum, aixAdapterIndex=aixAdapterIndex, aixAgentCmdResult=aixAgentCmdResult, aixProcess=aixProcess, aixAgentCmdOutIndex=aixAgentCmdOutIndex, aixPrinterGroup=aixPrinterGroup, aixCdromManufacturerName=aixCdromManufacturerName, aixPvIndex=aixPvIndex, aixVgSize=aixVgSize, aixPrtQueDescipline=aixPrtQueDescipline)
