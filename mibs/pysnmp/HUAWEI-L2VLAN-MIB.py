#
# PySNMP MIB module HUAWEI-L2VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-L2VLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:33:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
hwBaseTrapSeverity, hwBaseTrapEventType, hwBaseTrapProbableCause = mibBuilder.importSymbols("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity", "hwBaseTrapEventType", "hwBaseTrapProbableCause")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
VlanIndex, PortList, VlanIdOrNone, VlanId = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex", "PortList", "VlanIdOrNone", "VlanId")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Integer32, Unsigned32, NotificationType, Counter32, TimeTicks, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ModuleIdentity, IpAddress, Gauge32, iso, ObjectIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Unsigned32", "NotificationType", "Counter32", "TimeTicks", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ModuleIdentity", "IpAddress", "Gauge32", "iso", "ObjectIdentity", "MibIdentifier")
MacAddress, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "TextualConvention", "DisplayString")
hwL2Mgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42))
hwL2Vlan = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3))
if mibBuilder.loadTexts: hwL2Vlan.setLastUpdated('200701121830Z')
if mibBuilder.loadTexts: hwL2Vlan.setOrganization('Huawei Technologies co.,Ltd.')
hwL2VlanMngObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1))
hwL2VlanBase = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1))
hwL2VlanApply = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2))
hwL2VlanStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3))
hwL2VlanMIBTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1), )
if mibBuilder.loadTexts: hwL2VlanMIBTable.setStatus('current')
hwL2VlanMIBEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanIndex"))
if mibBuilder.loadTexts: hwL2VlanMIBEntry.setStatus('current')
hwL2VlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 1), VlanId())
if mibBuilder.loadTexts: hwL2VlanIndex.setStatus('current')
hwL2VlanDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanDescr.setStatus('current')
hwL2VlanPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 3), PortList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanPortList.setStatus('current')
hwL2VlanType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("superVlan", 1), ("commonVlan", 2), ("subVlan", 3), ("muxVlan", 4), ("muxSubVlan", 5), ("protocolTransVlan", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanType.setStatus('current')
hwL2VlanUnknownUnicastProcessing = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("broadcast", 1), ("discard", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanUnknownUnicastProcessing.setStatus('current')
hwL2VlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanIfIndex.setStatus('current')
hwL2VlanMacLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 7), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMacLearn.setStatus('current')
hwL2VlanMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 8), EnabledStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanMulticast.setStatus('current')
hwL2VlanAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 9), EnabledStatus().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanAdminStatus.setStatus('current')
hwL2VlanStatisStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 10), EnabledStatus().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanStatisStatus.setStatus('current')
hwL2VlanCreateStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("static", 2), ("dynamic", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanCreateStatus.setStatus('current')
hwL2VlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanRowStatus.setStatus('current')
hwL2VlanBcast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 13), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanBcast.setStatus('current')
hwL2VlanUnknownMulticastProcessing = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("broadcast", 1), ("discard", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanUnknownMulticastProcessing.setStatus('current')
hwL2VlanProperty = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("default", 1), ("backboneVlan", 2), ("mutilcastVlan", 3), ("userVlan", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanProperty.setStatus('current')
hwL2VlanAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(60, 1000000), ValueRangeConstraint(0, 0), ValueRangeConstraint(-1, -1), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanAgingTime.setStatus('current')
hwL2VlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanName.setStatus('current')
hwL2VlanSmartMacLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 18), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSmartMacLearn.setStatus('current')
hwL2VlanServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanServiceName.setStatus('current')
hwL2VlanManagementVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 20), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanManagementVlan.setStatus('current')
hwL2VlanDynamicVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 1, 1, 1, 21), EnabledStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanDynamicVlan.setStatus('current')
hwL2VlanStackingTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 1), )
if mibBuilder.loadTexts: hwL2VlanStackingTable.setStatus('current')
hwL2VlanStackingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 1, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanStackingPortIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanStackingInsideVlanId"))
if mibBuilder.loadTexts: hwL2VlanStackingEntry.setStatus('current')
hwL2VlanStackingPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwL2VlanStackingPortIndex.setStatus('current')
hwL2VlanStackingInsideVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 1, 1, 2), VlanId())
if mibBuilder.loadTexts: hwL2VlanStackingInsideVlanId.setStatus('current')
hwL2VlanStackingOutsideVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanStackingOutsideVlanListLow.setStatus('current')
hwL2VlanStackingOutsideVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanStackingOutsideVlanListHigh.setStatus('current')
hwL2VlanStackingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanStackingRowStatus.setStatus('current')
hwL2VlanMappingTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 2), )
if mibBuilder.loadTexts: hwL2VlanMappingTable.setStatus('current')
hwL2VlanMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 2, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanMappingPortIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanMappingInsideVlanId"))
if mibBuilder.loadTexts: hwL2VlanMappingEntry.setStatus('current')
hwL2VlanMappingPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwL2VlanMappingPortIndex.setStatus('current')
hwL2VlanMappingInsideVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 2, 1, 2), VlanId())
if mibBuilder.loadTexts: hwL2VlanMappingInsideVlanId.setStatus('current')
hwL2VlanMappingOutsideVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMappingOutsideVlanListLow.setStatus('current')
hwL2VlanMappingOutsideVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMappingOutsideVlanListHigh.setStatus('current')
hwL2VlanMappingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMappingRowStatus.setStatus('current')
hwSuperVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 3), )
if mibBuilder.loadTexts: hwSuperVlanTable.setStatus('current')
hwSuperVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 3, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwSuperVlanId"))
if mibBuilder.loadTexts: hwSuperVlanEntry.setStatus('current')
hwSuperVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 3, 1, 1), VlanId())
if mibBuilder.loadTexts: hwSuperVlanId.setStatus('current')
hwSubVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSubVlanListLow.setStatus('current')
hwSubVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSubVlanListHigh.setStatus('current')
hwL2InterfIsolateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 4), )
if mibBuilder.loadTexts: hwL2InterfIsolateTable.setStatus('current')
hwL2InterfIsolateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 4, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2InterfIsolateVlanId"))
if mibBuilder.loadTexts: hwL2InterfIsolateEntry.setStatus('current')
hwL2InterfIsolateVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 4, 1, 1), VlanId())
if mibBuilder.loadTexts: hwL2InterfIsolateVlanId.setStatus('current')
hwL2InterfIsolateInterflistLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(65, 65)).setFixedLength(65)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2InterfIsolateInterflistLow.setStatus('current')
hwL2InterfIsolateInterflistHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(65, 65)).setFixedLength(65)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2InterfIsolateInterflistHigh.setStatus('current')
hwL2IsolatemappingTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 5), )
if mibBuilder.loadTexts: hwL2IsolatemappingTable.setStatus('current')
hwL2IsolatemappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 5, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2IsolatemappingPortNum"))
if mibBuilder.loadTexts: hwL2IsolatemappingEntry.setStatus('current')
hwL2IsolatemappingPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hwL2IsolatemappingPortNum.setStatus('current')
hwL2IsolateInterflistLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IsolateInterflistLow.setStatus('current')
hwL2IsolateInterflistHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IsolateInterflistHigh.setStatus('current')
hwL2VlanStackingExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 6), )
if mibBuilder.loadTexts: hwL2VlanStackingExtTable.setStatus('current')
hwL2VlanStackingExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 6, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanStackingExtPortIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanStackingExtVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanStackingExtAction"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanStackingExtDirection"))
if mibBuilder.loadTexts: hwL2VlanStackingExtEntry.setStatus('current')
hwL2VlanStackingExtPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 6, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwL2VlanStackingExtPortIndex.setStatus('current')
hwL2VlanStackingExtVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 6, 1, 2), VlanIdOrNone())
if mibBuilder.loadTexts: hwL2VlanStackingExtVlanId.setStatus('current')
hwL2VlanStackingExtAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pop", 1), ("push", 2))))
if mibBuilder.loadTexts: hwL2VlanStackingExtAction.setStatus('current')
hwL2VlanStackingExtDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inside", 1), ("outside", 2))))
if mibBuilder.loadTexts: hwL2VlanStackingExtDirection.setStatus('current')
hwL2VlanStackingExtVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanStackingExtVlanListLow.setStatus('current')
hwL2VlanStackingExtVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 6, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanStackingExtVlanListHigh.setStatus('current')
hwL2VlanStackingExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 6, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanStackingExtRowStatus.setStatus('current')
hwL2VlanStackingExtPriorityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("priorityInherit", 1), ("remark8021p", 2))).clone('priorityInherit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanStackingExtPriorityMode.setStatus('current')
hwL2VlanStackingExtVlan8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanStackingExtVlan8021p.setStatus('current')
hwL2VlanQinQTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 7), )
if mibBuilder.loadTexts: hwL2VlanQinQTable.setStatus('current')
hwL2VlanQinQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 7, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanQinQIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanQinQDirection"))
if mibBuilder.loadTexts: hwL2VlanQinQEntry.setStatus('current')
hwL2VlanQinQIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31)))
if mibBuilder.loadTexts: hwL2VlanQinQIndex.setStatus('current')
hwL2VlanQinQDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2))))
if mibBuilder.loadTexts: hwL2VlanQinQDirection.setStatus('current')
hwL2VlanQinQOutSideVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 7, 1, 3), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanQinQOutSideVlanId.setStatus('current')
hwL2VlanSysQinQRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 7, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSysQinQRowStatus.setStatus('current')
hwL2VlanInterfaceQinQTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 8), )
if mibBuilder.loadTexts: hwL2VlanInterfaceQinQTable.setStatus('current')
hwL2VlanInterfaceQinQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 8, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanQinQInterfaceIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanQinQIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanQinQCVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanQinQDirection"))
if mibBuilder.loadTexts: hwL2VlanInterfaceQinQEntry.setStatus('current')
hwL2VlanQinQInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 8, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwL2VlanQinQInterfaceIndex.setStatus('current')
hwL2VlanQinQCVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 8, 1, 2), VlanId())
if mibBuilder.loadTexts: hwL2VlanQinQCVlanId.setStatus('current')
hwL2VlanQinQSVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 8, 1, 3), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanQinQSVlanId.setStatus('current')
hwL2VlanQinQAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("push", 1), ("nop", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanQinQAction.setStatus('current')
hwL2VlanQinQNewCVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 8, 1, 5), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanQinQNewCVlanId.setStatus('current')
hwL2VlanInterfaceQinQRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 8, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanInterfaceQinQRowStatus.setStatus('current')
hwL2DVlanMappingTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 9), )
if mibBuilder.loadTexts: hwL2DVlanMappingTable.setStatus('current')
hwL2DVlanMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 9, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2DVlanMappingInterfaceIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2DVlanMappingExternalVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2DVlanMappingInternalVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2DVlanMappingDirection"))
if mibBuilder.loadTexts: hwL2DVlanMappingEntry.setStatus('current')
hwL2DVlanMappingInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 9, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwL2DVlanMappingInterfaceIndex.setStatus('current')
hwL2DVlanMappingExternalVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 9, 1, 2), VlanId())
if mibBuilder.loadTexts: hwL2DVlanMappingExternalVlanId.setStatus('current')
hwL2DVlanMappingInternalVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 9, 1, 3), VlanId())
if mibBuilder.loadTexts: hwL2DVlanMappingInternalVlanId.setStatus('current')
hwL2DVlanMappingDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2))))
if mibBuilder.loadTexts: hwL2DVlanMappingDirection.setStatus('current')
hwL2DVlanMappingMapExternalVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 9, 1, 5), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2DVlanMappingMapExternalVlanId.setStatus('current')
hwL2DVlanMappingMapInternalVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 9, 1, 6), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2DVlanMappingMapInternalVlanId.setStatus('current')
hwL2DVlanMappingAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("swap", 1), ("popExternalVlan", 2), ("drop", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2DVlanMappingAction.setStatus('current')
hwL2DVlanMappingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 9, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2DVlanMappingRowStatus.setStatus('current')
hwL2VlanMappingExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 10), )
if mibBuilder.loadTexts: hwL2VlanMappingExtTable.setStatus('current')
hwL2VlanMappingExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 10, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanMappingExtPortIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanMappingExtDirection"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanMappingExtVlanId"))
if mibBuilder.loadTexts: hwL2VlanMappingExtEntry.setStatus('current')
hwL2VlanMappingExtPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwL2VlanMappingExtPortIndex.setStatus('current')
hwL2VlanMappingExtDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2))))
if mibBuilder.loadTexts: hwL2VlanMappingExtDirection.setStatus('current')
hwL2VlanMappingExtVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 10, 1, 3), VlanId())
if mibBuilder.loadTexts: hwL2VlanMappingExtVlanId.setStatus('current')
hwL2VlanMappingExtVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMappingExtVlanListLow.setStatus('current')
hwL2VlanMappingExtVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMappingExtVlanListHigh.setStatus('current')
hwL2VlanMappingExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 10, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMappingExtRowStatus.setStatus('current')
hwL2VlanMappingExtPriorityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("priorityInherit", 1), ("remark8021p", 2))).clone('priorityInherit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMappingExtPriorityMode.setStatus('current')
hwL2VlanMappingExtVlan8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 10, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMappingExtVlan8021p.setStatus('current')
hwL2VlanStackingAdvTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 11), )
if mibBuilder.loadTexts: hwL2VlanStackingAdvTable.setStatus('current')
hwL2VlanStackingAdvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 11, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanStackingAdvPortIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanStackingAdvOutside8021p"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanStackingAdvStackVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanStackingAdvStack8021p"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanStackingAdvMapVlanId"))
if mibBuilder.loadTexts: hwL2VlanStackingAdvEntry.setStatus('current')
hwL2VlanStackingAdvPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwL2VlanStackingAdvPortIndex.setStatus('current')
hwL2VlanStackingAdvOutside8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)))
if mibBuilder.loadTexts: hwL2VlanStackingAdvOutside8021p.setStatus('current')
hwL2VlanStackingAdvStackVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 11, 1, 3), VlanId())
if mibBuilder.loadTexts: hwL2VlanStackingAdvStackVlanId.setStatus('current')
hwL2VlanStackingAdvStack8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)))
if mibBuilder.loadTexts: hwL2VlanStackingAdvStack8021p.setStatus('current')
hwL2VlanStackingAdvMapVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 11, 1, 5), VlanIdOrNone())
if mibBuilder.loadTexts: hwL2VlanStackingAdvMapVlanId.setStatus('current')
hwL2VlanStackingAdvOutsideVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 11, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanStackingAdvOutsideVlanListLow.setStatus('current')
hwL2VlanStackingAdvOutsideVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 11, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanStackingAdvOutsideVlanListHigh.setStatus('current')
hwL2VlanStackingAdvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 11, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanStackingAdvRowStatus.setStatus('current')
hwL2VlanMappingAdvTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 12), )
if mibBuilder.loadTexts: hwL2VlanMappingAdvTable.setStatus('current')
hwL2VlanMappingAdvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 12, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanMappingAdvPortIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanMappingAdvOutsideVlan8021p"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanMappingAdvMapVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanMappingAdvMapVlan8021p"))
if mibBuilder.loadTexts: hwL2VlanMappingAdvEntry.setStatus('current')
hwL2VlanMappingAdvPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwL2VlanMappingAdvPortIndex.setStatus('current')
hwL2VlanMappingAdvOutsideVlan8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)))
if mibBuilder.loadTexts: hwL2VlanMappingAdvOutsideVlan8021p.setStatus('current')
hwL2VlanMappingAdvMapVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 12, 1, 3), VlanId())
if mibBuilder.loadTexts: hwL2VlanMappingAdvMapVlanId.setStatus('current')
hwL2VlanMappingAdvMapVlan8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)))
if mibBuilder.loadTexts: hwL2VlanMappingAdvMapVlan8021p.setStatus('current')
hwL2VlanMappingAdvOutsideVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 12, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMappingAdvOutsideVlanListLow.setStatus('current')
hwL2VlanMappingAdvOutsideVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 12, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMappingAdvOutsideVlanListHigh.setStatus('current')
hwL2VlanMappingAdvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 12, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMappingAdvRowStatus.setStatus('current')
hwL2VlanSwitchTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 13), )
if mibBuilder.loadTexts: hwL2VlanSwitchTable.setStatus('current')
hwL2VlanSwitchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 13, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchIfIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchOuterVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchInnerVlanId"))
if mibBuilder.loadTexts: hwL2VlanSwitchEntry.setStatus('current')
hwL2VlanSwitchIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 13, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwL2VlanSwitchIfIndex.setStatus('current')
hwL2VlanSwitchOuterVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 13, 1, 2), VlanIdOrNone())
if mibBuilder.loadTexts: hwL2VlanSwitchOuterVlanId.setStatus('current')
hwL2VlanSwitchInnerVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 13, 1, 3), VlanIdOrNone())
if mibBuilder.loadTexts: hwL2VlanSwitchInnerVlanId.setStatus('current')
hwL2VlanSwitchMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("zeroToOne", 1), ("zeroToTwo", 2), ("oneToZero", 3), ("oneToOne", 4), ("oneToTwo", 5), ("twoToZero", 6), ("twoToOne", 7), ("twoToTwo", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitchMode.setStatus('current')
hwL2VlanSwitchOuterSwitchVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 13, 1, 5), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitchOuterSwitchVlanId.setStatus('current')
hwL2VlanSwitchInnerSwitchVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 13, 1, 6), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitchInnerSwitchVlanId.setStatus('current')
hwL2VlanSwitch8021pRemark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 13, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitch8021pRemark.setStatus('current')
hwL2VlanSwitchOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 13, 1, 8), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitchOutIfIndex.setStatus('current')
hwL2VlanSwitchMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 13, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitchMtu.setStatus('current')
hwL2VlanSwitchMtuDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 13, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanSwitchMtuDiscardPkts.setStatus('current')
hwL2VlanSwitchMtuDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 13, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanSwitchMtuDiscardBytes.setStatus('current')
hwL2VlanSwitchMtuResetFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 13, 1, 12), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2VlanSwitchMtuResetFlag.setStatus('current')
hwL2VlanSwitchMtuEnableFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 13, 1, 13), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2VlanSwitchMtuEnableFlag.setStatus('current')
hwL2VlanSwitchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 13, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitchRowStatus.setStatus('current')
hwL2VlanQinqVlanTransEnaTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 14), )
if mibBuilder.loadTexts: hwL2VlanQinqVlanTransEnaTable.setStatus('current')
hwL2VlanQinqVlanTransEnaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 14, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanQinqVlanTransEnaPortIndex"))
if mibBuilder.loadTexts: hwL2VlanQinqVlanTransEnaEntry.setStatus('current')
hwL2VlanQinqVlanTransEnaPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwL2VlanQinqVlanTransEnaPortIndex.setStatus('current')
hwL2VlanQinqVlanTransEna = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 14, 1, 2), EnabledStatus().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanQinqVlanTransEna.setStatus('current')
hwL2VlanQinqVlanTransEnaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 14, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanQinqVlanTransEnaRowStatus.setStatus('current')
hwL2VlanQinqVlanTransMissDropTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 15), )
if mibBuilder.loadTexts: hwL2VlanQinqVlanTransMissDropTable.setStatus('current')
hwL2VlanQinqVlanTransMissDropEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 15, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanQinqVlanTransMissDropPortIndex"))
if mibBuilder.loadTexts: hwL2VlanQinqVlanTransMissDropEntry.setStatus('current')
hwL2VlanQinqVlanTransMissDropPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwL2VlanQinqVlanTransMissDropPortIndex.setStatus('current')
hwL2VlanQinqVlanTransMissDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noDrop", 1), ("drop", 2))).clone('noDrop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanQinqVlanTransMissDrop.setStatus('current')
hwL2VlanQinqVlanTransMissDropRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 15, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanQinqVlanTransMissDropRowStatus.setStatus('current')
hwL2VlanViewMappingTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 16), )
if mibBuilder.loadTexts: hwL2VlanViewMappingTable.setStatus('current')
hwL2VlanViewMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 16, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanViewMappingVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanViewMappingDirection"))
if mibBuilder.loadTexts: hwL2VlanViewMappingEntry.setStatus('current')
hwL2VlanViewMappingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 16, 1, 1), VlanId())
if mibBuilder.loadTexts: hwL2VlanViewMappingVlanId.setStatus('current')
hwL2VlanViewMappingDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("both", 3))))
if mibBuilder.loadTexts: hwL2VlanViewMappingDirection.setStatus('current')
hwL2VlanViewMappingMapVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 16, 1, 3), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanViewMappingMapVlanId.setStatus('current')
hwL2VlanViewMappingPriorityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("priorityInherit", 1), ("remark8021p", 2))).clone('priorityInherit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanViewMappingPriorityMode.setStatus('current')
hwL2VlanViewMappingVlan8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 16, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanViewMappingVlan8021p.setStatus('current')
hwL2VlanViewMappingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 16, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanViewMappingRowStatus.setStatus('current')
hwL2VlanStackingMaskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 17), )
if mibBuilder.loadTexts: hwL2VlanStackingMaskTable.setStatus('current')
hwL2VlanStackingMaskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 17, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanStackingMaskPortIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanStackingMaskStackVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanStackingMaskStack8021p"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanStackingMaskAction"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanStackingMaskDirection"))
if mibBuilder.loadTexts: hwL2VlanStackingMaskEntry.setStatus('current')
hwL2VlanStackingMaskPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 17, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwL2VlanStackingMaskPortIndex.setStatus('current')
hwL2VlanStackingMaskStackVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 17, 1, 2), VlanIdOrNone())
if mibBuilder.loadTexts: hwL2VlanStackingMaskStackVlanId.setStatus('current')
hwL2VlanStackingMaskStack8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 17, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)))
if mibBuilder.loadTexts: hwL2VlanStackingMaskStack8021p.setStatus('current')
hwL2VlanStackingMaskAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pop", 1), ("push", 2))))
if mibBuilder.loadTexts: hwL2VlanStackingMaskAction.setStatus('current')
hwL2VlanStackingMaskDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 17, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inside", 1), ("outside", 2), ("both", 3))))
if mibBuilder.loadTexts: hwL2VlanStackingMaskDirection.setStatus('current')
hwL2VlanStackingMaskVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 17, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanStackingMaskVlanListLow.setStatus('current')
hwL2VlanStackingMaskVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 17, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanStackingMaskVlanListHigh.setStatus('current')
hwL2VlanStackingMaskRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 17, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanStackingMaskRowStatus.setStatus('current')
hwL2VlanIpSubnetVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 18), )
if mibBuilder.loadTexts: hwL2VlanIpSubnetVlanTable.setStatus('current')
hwL2VlanIpSubnetVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 18, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanIpSubnetVlanVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanIpSubnetVlanIpSubnetIndex"))
if mibBuilder.loadTexts: hwL2VlanIpSubnetVlanEntry.setStatus('current')
hwL2VlanIpSubnetVlanVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 18, 1, 1), VlanId())
if mibBuilder.loadTexts: hwL2VlanIpSubnetVlanVlanId.setStatus('current')
hwL2VlanIpSubnetVlanIpSubnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 18, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)))
if mibBuilder.loadTexts: hwL2VlanIpSubnetVlanIpSubnetIndex.setStatus('current')
hwL2VlanIpSubnetVlanIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 18, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanIpSubnetVlanIpAddress.setStatus('current')
hwL2VlanIpSubnetVlanIpSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 18, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanIpSubnetVlanIpSubnetMask.setStatus('current')
hwL2VlanIpSubnetVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 18, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanIpSubnetVlanPriority.setStatus('current')
hwL2VlanIpSubnetVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 18, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanIpSubnetVlanRowStatus.setStatus('current')
hwL2VlanMacVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 19), )
if mibBuilder.loadTexts: hwL2VlanMacVlanTable.setStatus('current')
hwL2VlanMacVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 19, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanMacVlanVlanId"))
if mibBuilder.loadTexts: hwL2VlanMacVlanEntry.setStatus('current')
hwL2VlanMacVlanVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 19, 1, 1), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMacVlanVlanId.setStatus('current')
hwL2VlanMacVlanMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 19, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMacVlanMac.setStatus('current')
hwL2VlanMacVlanVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 19, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMacVlanVlanPriority.setStatus('current')
hwL2VlanMacVlanMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 19, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMacVlanMacRowStatus.setStatus('current')
hwL2VlanProtocolVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 20), )
if mibBuilder.loadTexts: hwL2VlanProtocolVlanTable.setStatus('current')
hwL2VlanProtocolVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 20, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanProtocolVlanVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanProtocolVlanProtocolIndex"))
if mibBuilder.loadTexts: hwL2VlanProtocolVlanEntry.setStatus('current')
hwL2VlanProtocolVlanVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 20, 1, 1), VlanId())
if mibBuilder.loadTexts: hwL2VlanProtocolVlanVlanId.setStatus('current')
hwL2VlanProtocolVlanProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 20, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: hwL2VlanProtocolVlanProtocolIndex.setStatus('current')
hwL2VlanProtocolVlanProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 20, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanProtocolVlanProtocolType.setStatus('current')
hwL2VlanProtocolVlanEncapType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 20, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("etherii", 1), ("snap", 2), ("llc", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanProtocolVlanEncapType.setStatus('current')
hwL2VlanProtocolVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 20, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanProtocolVlanRowStatus.setStatus('current')
hwL2VlanPolicyVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 21), )
if mibBuilder.loadTexts: hwL2VlanPolicyVlanTable.setStatus('current')
hwL2VlanPolicyVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 21, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanPolicyVlanVlanId"))
if mibBuilder.loadTexts: hwL2VlanPolicyVlanEntry.setStatus('current')
hwL2VlanPolicyVlanMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 21, 1, 1), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanPolicyVlanMac.setStatus('current')
hwL2VlanPolicyVlanIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 21, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanPolicyVlanIp.setStatus('current')
hwL2VlanPolicyVlanPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 21, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanPolicyVlanPort.setStatus('current')
hwL2VlanPolicyVlanVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 21, 1, 4), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanPolicyVlanVlanId.setStatus('current')
hwL2VlanPolicyVlanVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 21, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanPolicyVlanVlanPriority.setStatus('current')
hwL2VlanPolicyVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 21, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanPolicyVlanRowStatus.setStatus('current')
hwL2VlanVoiceVlanEnabledVlanId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2VlanVoiceVlanEnabledVlanId.setStatus('current')
hwL2VlanVoiceVlanAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 43200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2VlanVoiceVlanAgingTime.setStatus('current')
hwL2VlanVoiceVlanSecurityMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("security", 1), ("normal", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2VlanVoiceVlanSecurityMode.setStatus('current')
hwL2VlanVoiceVlanPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 25), )
if mibBuilder.loadTexts: hwL2VlanVoiceVlanPortTable.setStatus('current')
hwL2VlanVoiceVlanPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 25, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanVoiceVlanPortIndex"))
if mibBuilder.loadTexts: hwL2VlanVoiceVlanPortEntry.setStatus('current')
hwL2VlanVoiceVlanPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwL2VlanVoiceVlanPortIndex.setStatus('current')
hwL2VlanVoiceVlanPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 25, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2VlanVoiceVlanPortEnable.setStatus('current')
hwL2VlanVoiceVlanPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 25, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("manual", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2VlanVoiceVlanPortMode.setStatus('current')
hwL2VlanVoiceVlanPortLegacy = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 25, 1, 4), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2VlanVoiceVlanPortLegacy.setStatus('current')
hwL2VlanVoiceVlanPortSecurityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 25, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("security", 1), ("normal", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2VlanVoiceVlanPortSecurityMode.setStatus('current')
hwL2VlanVoiceVlanOuiTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 26), )
if mibBuilder.loadTexts: hwL2VlanVoiceVlanOuiTable.setStatus('current')
hwL2VlanVoiceVlanOuiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 26, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanVoiceVlanOuiAddress"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanVoiceVlanOuiMask"))
if mibBuilder.loadTexts: hwL2VlanVoiceVlanOuiEntry.setStatus('current')
hwL2VlanVoiceVlanOuiAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 26, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwL2VlanVoiceVlanOuiAddress.setStatus('current')
hwL2VlanVoiceVlanOuiMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 26, 1, 2), MacAddress())
if mibBuilder.loadTexts: hwL2VlanVoiceVlanOuiMask.setStatus('current')
hwL2VlanVoiceVlanOuiDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 26, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanVoiceVlanOuiDescription.setStatus('current')
hwL2VlanVoiceVlanOuiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 26, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanVoiceVlanOuiRowStatus.setStatus('current')
hwL2VlanMappingMultiTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 27), )
if mibBuilder.loadTexts: hwL2VlanMappingMultiTable.setStatus('current')
hwL2VlanMappingMultiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 27, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanMappingMultiPortIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanMappingMultiDirection"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanMappingMultiVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanMappingMultiVlan8021p"))
if mibBuilder.loadTexts: hwL2VlanMappingMultiEntry.setStatus('current')
hwL2VlanMappingMultiPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 27, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwL2VlanMappingMultiPortIndex.setStatus('current')
hwL2VlanMappingMultiDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 27, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("both", 3))))
if mibBuilder.loadTexts: hwL2VlanMappingMultiDirection.setStatus('current')
hwL2VlanMappingMultiVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 27, 1, 3), VlanId())
if mibBuilder.loadTexts: hwL2VlanMappingMultiVlanId.setStatus('current')
hwL2VlanMappingMultiVlan8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 27, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)))
if mibBuilder.loadTexts: hwL2VlanMappingMultiVlan8021p.setStatus('current')
hwL2VlanMappingMultiVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 27, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMappingMultiVlanListLow.setStatus('current')
hwL2VlanMappingMultiVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 27, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMappingMultiVlanListHigh.setStatus('current')
hwL2VlanMappingMultiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 27, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMappingMultiRowStatus.setStatus('current')
hwL2VlanMacVlanNewTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 28), )
if mibBuilder.loadTexts: hwL2VlanMacVlanNewTable.setStatus('current')
hwL2VlanMacVlanNewEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 28, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanMacVlanNewMac"))
if mibBuilder.loadTexts: hwL2VlanMacVlanNewEntry.setStatus('current')
hwL2VlanMacVlanNewMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 28, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwL2VlanMacVlanNewMac.setStatus('current')
hwL2VlanMacVlanNewVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 28, 1, 2), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMacVlanNewVlanId.setStatus('current')
hwL2VlanMacVlanNewVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 28, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMacVlanNewVlanPriority.setStatus('current')
hwL2VlanMacVlanNewMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 28, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMacVlanNewMacRowStatus.setStatus('current')
hwL2VlanProtocolVlanNewTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 29), )
if mibBuilder.loadTexts: hwL2VlanProtocolVlanNewTable.setStatus('current')
hwL2VlanProtocolVlanNewEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 29, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanProtocolVlanNewVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanProtocolVlanNewProtocolIndex"))
if mibBuilder.loadTexts: hwL2VlanProtocolVlanNewEntry.setStatus('current')
hwL2VlanProtocolVlanNewVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 29, 1, 1), VlanId())
if mibBuilder.loadTexts: hwL2VlanProtocolVlanNewVlanId.setStatus('current')
hwL2VlanProtocolVlanNewProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 29, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: hwL2VlanProtocolVlanNewProtocolIndex.setStatus('current')
hwL2VlanProtocolVlanNewProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 29, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("at", 1), ("ipv4", 2), ("ipv6", 3), ("ipxEthernetii", 4), ("ipxLlc", 5), ("ipxRaw", 6), ("ipxSnap", 7), ("modeEthernetii", 8), ("modeLlc", 9), ("modeSnap", 10)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanProtocolVlanNewProtocolType.setStatus('current')
hwL2VlanProtocolVlanNewProtocolTypeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 29, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanProtocolVlanNewProtocolTypeValue.setStatus('current')
hwL2VlanProtocolVlanNewRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 29, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanProtocolVlanNewRowStatus.setStatus('current')
hwL2VlanPolicyVlanNewTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 30), )
if mibBuilder.loadTexts: hwL2VlanPolicyVlanNewTable.setStatus('current')
hwL2VlanPolicyVlanNewEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 30, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanPolicyVlanNewVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanPolicyVlanNewMac"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanPolicyVlanNewIp"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanPolicyVlanNewPort"))
if mibBuilder.loadTexts: hwL2VlanPolicyVlanNewEntry.setStatus('current')
hwL2VlanPolicyVlanNewMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 30, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwL2VlanPolicyVlanNewMac.setStatus('current')
hwL2VlanPolicyVlanNewIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 30, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwL2VlanPolicyVlanNewIp.setStatus('current')
hwL2VlanPolicyVlanNewPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 30, 1, 3), Integer32())
if mibBuilder.loadTexts: hwL2VlanPolicyVlanNewPort.setStatus('current')
hwL2VlanPolicyVlanNewVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 30, 1, 4), VlanId())
if mibBuilder.loadTexts: hwL2VlanPolicyVlanNewVlanId.setStatus('current')
hwL2VlanPolicyVlanNewVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 30, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanPolicyVlanNewVlanPriority.setStatus('current')
hwL2VlanPolicyVlanNewRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 30, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanPolicyVlanNewRowStatus.setStatus('current')
hwL2VlanProtocolVlanPortNewTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 31), )
if mibBuilder.loadTexts: hwL2VlanProtocolVlanPortNewTable.setStatus('current')
hwL2VlanProtocolVlanPortNewEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 31, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanProtocolVlanPortNewIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanProtocolVlanPortNewVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanProtocolVlanPortNewProtocolIndex"))
if mibBuilder.loadTexts: hwL2VlanProtocolVlanPortNewEntry.setStatus('current')
hwL2VlanProtocolVlanPortNewIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 31, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwL2VlanProtocolVlanPortNewIndex.setStatus('current')
hwL2VlanProtocolVlanPortNewVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 31, 1, 2), VlanId())
if mibBuilder.loadTexts: hwL2VlanProtocolVlanPortNewVlanId.setStatus('current')
hwL2VlanProtocolVlanPortNewProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 31, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: hwL2VlanProtocolVlanPortNewProtocolIndex.setStatus('current')
hwL2VlanProtocolVlanPortNewPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 31, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanProtocolVlanPortNewPriority.setStatus('current')
hwL2VlanProtocolVlanPortNewRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 31, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanProtocolVlanPortNewRowStatus.setStatus('current')
hwL2VlanMultiVoiceVlanPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 32), )
if mibBuilder.loadTexts: hwL2VlanMultiVoiceVlanPortTable.setStatus('current')
hwL2VlanMultiVoiceVlanPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 32, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanMultiVoiceVlanIfIndex"))
if mibBuilder.loadTexts: hwL2VlanMultiVoiceVlanPortEntry.setStatus('current')
hwL2VlanMultiVoiceVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 32, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwL2VlanMultiVoiceVlanIfIndex.setStatus('current')
hwL2VlanMultiVoiceVlanPortVLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 32, 1, 2), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMultiVoiceVlanPortVLanId.setStatus('current')
hwL2VlanMultiVoiceVlanPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 32, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanMultiVoiceVlanPortRowStatus.setStatus('current')
hwL2VlanSwitchExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 33), )
if mibBuilder.loadTexts: hwL2VlanSwitchExtTable.setStatus('current')
hwL2VlanSwitchExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 33, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchExtName"))
if mibBuilder.loadTexts: hwL2VlanSwitchExtEntry.setStatus('current')
hwL2VlanSwitchExtName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 33, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hwL2VlanSwitchExtName.setStatus('current')
hwL2VlanSwitchExtSrcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 33, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitchExtSrcIfIndex.setStatus('current')
hwL2VlanSwitchExtOuterVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 33, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitchExtOuterVlanId.setStatus('current')
hwL2VlanSwitchExtVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 33, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitchExtVlanListLow.setStatus('current')
hwL2VlanSwitchExtVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 33, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitchExtVlanListHigh.setStatus('current')
hwL2VlanSwitchExtDstIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 33, 1, 6), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitchExtDstIfIndex.setStatus('current')
hwL2VlanSwitchExtVlanXlateAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 33, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unchange", 1), ("switch", 2), ("push", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitchExtVlanXlateAction.setStatus('current')
hwL2VlanSwitchExtDstVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 33, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitchExtDstVlan.setStatus('current')
hwL2VlanSwitchExtDstInnerVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 33, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitchExtDstInnerVlan.setStatus('current')
hwL2VlanSwitchExtRemark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 33, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitchExtRemark.setStatus('current')
hwL2VlanSwitchExtRemarkReverse = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 33, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitchExtRemarkReverse.setStatus('current')
hwL2VlanSwitchExtLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 33, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanSwitchExtLinkStatus.setStatus('current')
hwL2VlanSwitchExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 33, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanSwitchExtRowStatus.setStatus('current')
hwL2VlanPrecedence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("macvlan", 1), ("ipsubnetvlan", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2VlanPrecedence.setStatus('current')
hwL2VlanXlateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 35), )
if mibBuilder.loadTexts: hwL2VlanXlateTable.setStatus('current')
hwL2VlanXlateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 35, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanXlateInterfaceIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanXlateVlanIdBegin"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanXlateOuterVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanXlateVlan8021p"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanXlateDirection"))
if mibBuilder.loadTexts: hwL2VlanXlateEntry.setStatus('current')
hwL2VlanXlateInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 35, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwL2VlanXlateInterfaceIndex.setStatus('current')
hwL2VlanXlateVlanIdBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 35, 1, 2), VlanId())
if mibBuilder.loadTexts: hwL2VlanXlateVlanIdBegin.setStatus('current')
hwL2VlanXlateVlanIdEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 35, 1, 3), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanXlateVlanIdEnd.setStatus('current')
hwL2VlanXlateOuterVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 35, 1, 4), VlanIdOrNone())
if mibBuilder.loadTexts: hwL2VlanXlateOuterVlanId.setStatus('current')
hwL2VlanXlateVlan8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 35, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 8), ValueRangeConstraint(65535, 65535), )))
if mibBuilder.loadTexts: hwL2VlanXlateVlan8021p.setStatus('current')
hwL2VlanXlateDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 35, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("both", 3))))
if mibBuilder.loadTexts: hwL2VlanXlateDirection.setStatus('current')
hwL2VlanXlateAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 35, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("map", 1), ("stack", 2), ("pop", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanXlateAction.setStatus('current')
hwL2VlanXlateToVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 35, 1, 8), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanXlateToVlanId.setStatus('current')
hwL2VlanXlateToinnerVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 35, 1, 9), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanXlateToinnerVlanId.setStatus('current')
hwL2VlanXlateremark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 35, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanXlateremark.setStatus('current')
hwL2VlanXlateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 35, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2VlanXlateRowStatus.setStatus('current')
hwL2QinQVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 36), )
if mibBuilder.loadTexts: hwL2QinQVlanTable.setStatus('current')
hwL2QinQVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 36, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2QinQVlanIfIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2QinQVlanIdBegin"), (0, "HUAWEI-L2VLAN-MIB", "hwL2QinQVlanIdEnd"), (0, "HUAWEI-L2VLAN-MIB", "hwL2QinQVlanInnerVlanIdBegin"), (0, "HUAWEI-L2VLAN-MIB", "hwL2QinQVlanInnerVlanIdEnd"), (0, "HUAWEI-L2VLAN-MIB", "hwL2QinQVlan8021pBegin"), (0, "HUAWEI-L2VLAN-MIB", "hwL2QinQVlan8021pEnd"), (0, "HUAWEI-L2VLAN-MIB", "hwL2QinQVlanEtherType"))
if mibBuilder.loadTexts: hwL2QinQVlanEntry.setStatus('current')
hwL2QinQVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 36, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwL2QinQVlanIfIndex.setStatus('current')
hwL2QinQVlanIdBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 36, 1, 2), VlanId())
if mibBuilder.loadTexts: hwL2QinQVlanIdBegin.setStatus('current')
hwL2QinQVlanIdEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 36, 1, 3), VlanId())
if mibBuilder.loadTexts: hwL2QinQVlanIdEnd.setStatus('current')
hwL2QinQVlanInnerVlanIdBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 36, 1, 4), VlanIdOrNone())
if mibBuilder.loadTexts: hwL2QinQVlanInnerVlanIdBegin.setStatus('current')
hwL2QinQVlanInnerVlanIdEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 36, 1, 5), VlanIdOrNone())
if mibBuilder.loadTexts: hwL2QinQVlanInnerVlanIdEnd.setStatus('current')
hwL2QinQVlan8021pBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 36, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)))
if mibBuilder.loadTexts: hwL2QinQVlan8021pBegin.setStatus('current')
hwL2QinQVlan8021pEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 36, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)))
if mibBuilder.loadTexts: hwL2QinQVlan8021pEnd.setStatus('current')
hwL2QinQVlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 36, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hwL2QinQVlanEtherType.setStatus('current')
hwL2QinQVlanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 36, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("stacking", 1), ("mapping", 2), ("cosstacking", 3), ("cosmapping", 4), ("mapping2to1", 5), ("mapping2to2", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2QinQVlanMode.setStatus('current')
hwL2QinQVlanChangedVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 36, 1, 10), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2QinQVlanChangedVlanId.setStatus('current')
hwL2QinQVlanChangedInnerVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 36, 1, 11), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2QinQVlanChangedInnerVlanId.setStatus('current')
hwL2QinQVlanRemark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 36, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2QinQVlanRemark.setStatus('current')
hwL2QinQVlanMapStackVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 36, 1, 13), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2QinQVlanMapStackVlanId.setStatus('current')
hwL2QinQVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 36, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2QinQVlanRowStatus.setStatus('current')
hwL2UntagAddDTagTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 37), )
if mibBuilder.loadTexts: hwL2UntagAddDTagTable.setStatus('current')
hwL2UntagAddDTagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 37, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2UntagAddDTagPortIndex"))
if mibBuilder.loadTexts: hwL2UntagAddDTagEntry.setStatus('current')
hwL2UntagAddDTagPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 37, 1, 1), Integer32())
if mibBuilder.loadTexts: hwL2UntagAddDTagPortIndex.setStatus('current')
hwL2UntagAddDTagOuterVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 37, 1, 2), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2UntagAddDTagOuterVlanId.setStatus('current')
hwL2UntagAddDTagInnerVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 37, 1, 3), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2UntagAddDTagInnerVlanId.setStatus('current')
hwL2UntagAddDTagRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 37, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2UntagAddDTagRowStatus.setStatus('current')
hwL2VlanVoiceVlan8021p = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2VlanVoiceVlan8021p.setStatus('current')
hwL2VlanVoiceVlanDscp = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 2, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2VlanVoiceVlanDscp.setStatus('current')
hwL2IfStatVlanCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 1), )
if mibBuilder.loadTexts: hwL2IfStatVlanCfgTable.setStatus('current')
hwL2IfStatVlanCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 1, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanCfgPortIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanCfgVlanId"))
if mibBuilder.loadTexts: hwL2IfStatVlanCfgEntry.setStatus('current')
hwL2IfStatVlanCfgPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 512)))
if mibBuilder.loadTexts: hwL2IfStatVlanCfgPortIndex.setStatus('current')
hwL2IfStatVlanCfgVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 1, 1, 2), VlanId())
if mibBuilder.loadTexts: hwL2IfStatVlanCfgVlanId.setStatus('current')
hwL2IfStatVlanCfgEnableFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 1, 1, 11), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfStatVlanCfgEnableFlag.setStatus('current')
hwL2IfStatVlanCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfStatVlanCfgRowStatus.setStatus('current')
hwL2IfStat8021pCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 2), )
if mibBuilder.loadTexts: hwL2IfStat8021pCfgTable.setStatus('current')
hwL2IfStat8021pCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 2, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pCfgPortIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pCfg8021p"))
if mibBuilder.loadTexts: hwL2IfStat8021pCfgEntry.setStatus('current')
hwL2IfStat8021pCfgPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 512)))
if mibBuilder.loadTexts: hwL2IfStat8021pCfgPortIndex.setStatus('current')
hwL2IfStat8021pCfg8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: hwL2IfStat8021pCfg8021p.setStatus('current')
hwL2IfStat8021pCfgEnableFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 2, 1, 11), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfStat8021pCfgEnableFlag.setStatus('current')
hwL2IfStat8021pCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 2, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfStat8021pCfgRowStatus.setStatus('current')
hwL2IfStat8021pAndVlanCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 3), )
if mibBuilder.loadTexts: hwL2IfStat8021pAndVlanCfgTable.setStatus('current')
hwL2IfStat8021pAndVlanCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 3, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pAndVlanCfgPortIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pAndVlanCfgVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pAndVlanCfg8021p"))
if mibBuilder.loadTexts: hwL2IfStat8021pAndVlanCfgEntry.setStatus('current')
hwL2IfStat8021pAndVlanCfgPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 512)))
if mibBuilder.loadTexts: hwL2IfStat8021pAndVlanCfgPortIndex.setStatus('current')
hwL2IfStat8021pAndVlanCfgVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 3, 1, 2), VlanId())
if mibBuilder.loadTexts: hwL2IfStat8021pAndVlanCfgVlanId.setStatus('current')
hwL2IfStat8021pAndVlanCfg8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: hwL2IfStat8021pAndVlanCfg8021p.setStatus('current')
hwL2IfStat8021pAndVlanCfgEnableFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 3, 1, 11), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfStat8021pAndVlanCfgEnableFlag.setStatus('current')
hwL2IfStat8021pAndVlanCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 3, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfStat8021pAndVlanCfgRowStatus.setStatus('current')
hwL2VlanStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4), )
if mibBuilder.loadTexts: hwL2VlanStatTable.setStatus('current')
hwL2VlanStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanStatVlanId"))
if mibBuilder.loadTexts: hwL2VlanStatEntry.setStatus('current')
hwL2VlanStatVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 1), VlanId())
if mibBuilder.loadTexts: hwL2VlanStatVlanId.setStatus('current')
hwL2VlanStatInTotalPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatInTotalPkts.setStatus('current')
hwL2VlanStatInTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatInTotalBytes.setStatus('current')
hwL2VlanStatOutTotalPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatOutTotalPkts.setStatus('current')
hwL2VlanStatOutTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatOutTotalBytes.setStatus('current')
hwL2VlanStatUnknownUcastDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatUnknownUcastDiscardPkts.setStatus('current')
hwL2VlanStatUnknownMcastDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatUnknownMcastDiscardPkts.setStatus('current')
hwL2VlanStatBcastDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatBcastDiscardPkts.setStatus('current')
hwL2VlanStatInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatInUcastPkts.setStatus('current')
hwL2VlanStatInUcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatInUcastBytes.setStatus('current')
hwL2VlanStatOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatOutUcastPkts.setStatus('current')
hwL2VlanStatOutUcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatOutUcastBytes.setStatus('current')
hwL2VlanStatInMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatInMcastPkts.setStatus('current')
hwL2VlanStatInMcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatInMcastBytes.setStatus('current')
hwL2VlanStatOutMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatOutMcastPkts.setStatus('current')
hwL2VlanStatOutMcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatOutMcastBytes.setStatus('current')
hwL2VlanStatInBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatInBcastPkts.setStatus('current')
hwL2VlanStatInBcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatInBcastBytes.setStatus('current')
hwL2VlanStatOutBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatOutBcastPkts.setStatus('current')
hwL2VlanStatOutBcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanStatOutBcastBytes.setStatus('current')
hwL2VlanStatResetFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 4, 1, 21), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2VlanStatResetFlag.setStatus('current')
hwL2IfStatVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5), )
if mibBuilder.loadTexts: hwL2IfStatVlanTable.setStatus('current')
hwL2IfStatVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanPortIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanId"))
if mibBuilder.loadTexts: hwL2IfStatVlanEntry.setStatus('current')
hwL2IfStatVlanPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 512)))
if mibBuilder.loadTexts: hwL2IfStatVlanPortIndex.setStatus('current')
hwL2IfStatVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 2), VlanId())
if mibBuilder.loadTexts: hwL2IfStatVlanId.setStatus('current')
hwL2IfStatVlanInTotalPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanInTotalPkts.setStatus('current')
hwL2IfStatVlanInTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanInTotalBytes.setStatus('current')
hwL2IfStatVlanOutTotalPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanOutTotalPkts.setStatus('current')
hwL2IfStatVlanOutTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanOutTotalBytes.setStatus('current')
hwL2IfStatVlanInPktsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanInPktsRate.setStatus('current')
hwL2IfStatVlanInBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanInBytesRate.setStatus('current')
hwL2IfStatVlanOutPktsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanOutPktsRate.setStatus('current')
hwL2IfStatVlanOutBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanOutBytesRate.setStatus('current')
hwL2IfStatVlanInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanInUcastPkts.setStatus('current')
hwL2IfStatVlanInUcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanInUcastBytes.setStatus('current')
hwL2IfStatVlanOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanOutUcastPkts.setStatus('current')
hwL2IfStatVlanOutUcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanOutUcastBytes.setStatus('current')
hwL2IfStatVlanInMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanInMcastPkts.setStatus('current')
hwL2IfStatVlanInMcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanInMcastBytes.setStatus('current')
hwL2IfStatVlanOutMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanOutMcastPkts.setStatus('current')
hwL2IfStatVlanOutMcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanOutMcastBytes.setStatus('current')
hwL2IfStatVlanInBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanInBcastPkts.setStatus('current')
hwL2IfStatVlanInBcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanInBcastBytes.setStatus('current')
hwL2IfStatVlanOutBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanOutBcastPkts.setStatus('current')
hwL2IfStatVlanOutBcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStatVlanOutBcastBytes.setStatus('current')
hwL2IfStatVlanResetFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 5, 1, 23), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfStatVlanResetFlag.setStatus('current')
hwL2IfStat8021pTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 6), )
if mibBuilder.loadTexts: hwL2IfStat8021pTable.setStatus('current')
hwL2IfStat8021pEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 6, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pPortIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2IfStat8021p"))
if mibBuilder.loadTexts: hwL2IfStat8021pEntry.setStatus('current')
hwL2IfStat8021pPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 512)))
if mibBuilder.loadTexts: hwL2IfStat8021pPortIndex.setStatus('current')
hwL2IfStat8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: hwL2IfStat8021p.setStatus('current')
hwL2IfStat8021pInTotalPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStat8021pInTotalPkts.setStatus('current')
hwL2IfStat8021pInTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStat8021pInTotalBytes.setStatus('current')
hwL2IfStat8021pOutTotalPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStat8021pOutTotalPkts.setStatus('current')
hwL2IfStat8021pOutTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStat8021pOutTotalBytes.setStatus('current')
hwL2IfStat8021pInPktsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 6, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStat8021pInPktsRate.setStatus('current')
hwL2IfStat8021pInBytsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 6, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStat8021pInBytsRate.setStatus('current')
hwL2IfStat8021pOutPktsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 6, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStat8021pOutPktsRate.setStatus('current')
hwL2IfStat8021pOutBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 6, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStat8021pOutBytesRate.setStatus('current')
hwL2IfStat8021pResetFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 6, 1, 11), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfStat8021pResetFlag.setStatus('current')
hwL2IfStat8021pAndVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 7), )
if mibBuilder.loadTexts: hwL2IfStat8021pAndVlanTable.setStatus('current')
hwL2IfStat8021pAndVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 7, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pAndVlanPortIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pAndVlanVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pAndVlan8021p"))
if mibBuilder.loadTexts: hwL2IfStat8021pAndVlanEntry.setStatus('current')
hwL2IfStat8021pAndVlanPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 512)))
if mibBuilder.loadTexts: hwL2IfStat8021pAndVlanPortIndex.setStatus('current')
hwL2IfStat8021pAndVlanVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 7, 1, 2), VlanId())
if mibBuilder.loadTexts: hwL2IfStat8021pAndVlanVlanId.setStatus('current')
hwL2IfStat8021pAndVlan8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: hwL2IfStat8021pAndVlan8021p.setStatus('current')
hwL2IfStat8021pAndVlanInTotalPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStat8021pAndVlanInTotalPkts.setStatus('current')
hwL2IfStat8021pAndVlanInTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 7, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStat8021pAndVlanInTotalBytes.setStatus('current')
hwL2IfStat8021pAndVlanInPktsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 7, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStat8021pAndVlanInPktsRate.setStatus('current')
hwL2IfStat8021pAndVlanInBytsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 7, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfStat8021pAndVlanInBytsRate.setStatus('current')
hwL2IfStat8021pAndVlanResetFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 7, 1, 8), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfStat8021pAndVlanResetFlag.setStatus('current')
hwL2VlanSwitchPSTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 8), )
if mibBuilder.loadTexts: hwL2VlanSwitchPSTable.setStatus('current')
hwL2VlanSwitchPSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 8, 1), ).setIndexNames((0, "HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchPSIfIndex"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchPSSVlanId"), (0, "HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchPSCVlanId"))
if mibBuilder.loadTexts: hwL2VlanSwitchPSEntry.setStatus('current')
hwL2VlanSwitchPSIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 8, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwL2VlanSwitchPSIfIndex.setStatus('current')
hwL2VlanSwitchPSSVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: hwL2VlanSwitchPSSVlanId.setStatus('current')
hwL2VlanSwitchPSCVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096)))
if mibBuilder.loadTexts: hwL2VlanSwitchPSCVlanId.setStatus('current')
hwL2VlanSwitchPSInputPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 8, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanSwitchPSInputPkts.setStatus('current')
hwL2VlanSwitchPSInputBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 8, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanSwitchPSInputBytes.setStatus('current')
hwL2VlanSwitchPSOutputPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 8, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanSwitchPSOutputPkts.setStatus('current')
hwL2VlanSwitchPSOutputBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 8, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2VlanSwitchPSOutputBytes.setStatus('current')
hwL2VlanSwitchPSResetFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 8, 1, 8), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2VlanSwitchPSResetFlag.setStatus('current')
hwL2VlanSwitchPSEnableFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 3, 8, 1, 9), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2VlanSwitchPSEnableFlag.setStatus('current')
hwL2VlanTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 4))
hwL2VlanUnkownPacketAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 1, 4, 1)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatUnknownUcastDiscardPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatUnknownMcastDiscardPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatBcastDiscardPkts"))
if mibBuilder.loadTexts: hwL2VlanUnkownPacketAlarm.setStatus('current')
hwL2vlanConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2))
hwL2vlanGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1))
hwL2vlanCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 2))
hwL2VlanMIBTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 1)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanDescr"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanPortList"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanType"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanUnknownUnicastProcessing"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanIfIndex"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMacLearn"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanCreateStatus"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMulticast"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanAdminStatus"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatisStatus"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanRowStatus"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanBcast"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanUnknownMulticastProcessing"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanProperty"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanAgingTime"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanName"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSmartMacLearn"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanServiceName"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanManagementVlan"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanDynamicVlan"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanMIBTableGroup = hwL2VlanMIBTableGroup.setStatus('current')
hwL2vlanStackingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 2)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanStackingOutsideVlanListLow"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStackingOutsideVlanListHigh"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStackingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2vlanStackingGroup = hwL2vlanStackingGroup.setStatus('current')
hwL2vlanMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 3)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanMappingOutsideVlanListLow"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMappingOutsideVlanListHigh"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMappingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2vlanMappingGroup = hwL2vlanMappingGroup.setStatus('current')
hwSupervlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 4)).setObjects(("HUAWEI-L2VLAN-MIB", "hwSubVlanListLow"), ("HUAWEI-L2VLAN-MIB", "hwSubVlanListHigh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSupervlanGroup = hwSupervlanGroup.setStatus('current')
hwL2InterfIsolateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 5)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2InterfIsolateInterflistLow"), ("HUAWEI-L2VLAN-MIB", "hwL2InterfIsolateInterflistHigh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2InterfIsolateGroup = hwL2InterfIsolateGroup.setStatus('current')
hwL2IsolatemappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 6)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2IsolateInterflistLow"), ("HUAWEI-L2VLAN-MIB", "hwL2IsolateInterflistHigh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IsolatemappingGroup = hwL2IsolatemappingGroup.setStatus('current')
hwL2VlanStackingExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 7)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanStackingExtVlanListLow"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStackingExtVlanListHigh"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStackingExtPriorityMode"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStackingExtVlan8021p"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStackingExtRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanStackingExtGroup = hwL2VlanStackingExtGroup.setStatus('current')
hwL2vlanQinQGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 8)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanQinQOutSideVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSysQinQRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2vlanQinQGroup = hwL2vlanQinQGroup.setStatus('current')
hwL2vlanQinQInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 9)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanQinQSVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanQinQAction"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanQinQNewCVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanInterfaceQinQRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2vlanQinQInterfaceGroup = hwL2vlanQinQInterfaceGroup.setStatus('current')
hwL2DVlanMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 10)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2DVlanMappingMapExternalVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2DVlanMappingMapInternalVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2DVlanMappingAction"), ("HUAWEI-L2VLAN-MIB", "hwL2DVlanMappingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2DVlanMappingGroup = hwL2DVlanMappingGroup.setStatus('current')
hwL2VlanStackingAdvGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 11)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanStackingAdvOutsideVlanListLow"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStackingAdvOutsideVlanListHigh"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStackingAdvRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanStackingAdvGroup = hwL2VlanStackingAdvGroup.setStatus('current')
hwL2VlanMappingAdvGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 12)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanMappingAdvOutsideVlanListLow"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMappingAdvOutsideVlanListHigh"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMappingAdvRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanMappingAdvGroup = hwL2VlanMappingAdvGroup.setStatus('current')
hwL2VlanSwitchGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 13)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchMode"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchOuterSwitchVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchInnerSwitchVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitch8021pRemark"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchOutIfIndex"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchMtu"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchMtuDiscardPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchMtuDiscardBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchMtuResetFlag"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchMtuEnableFlag"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanSwitchGroup = hwL2VlanSwitchGroup.setStatus('current')
hwL2IfStatVlanCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 14)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanCfgEnableFlag"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanCfgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfStatVlanCfgGroup = hwL2IfStatVlanCfgGroup.setStatus('current')
hwL2IfStat8021pCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 15)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pCfgEnableFlag"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pCfgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfStat8021pCfgGroup = hwL2IfStat8021pCfgGroup.setStatus('current')
hwL2IfStat8021pAndVlanCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 16)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pAndVlanCfgEnableFlag"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pAndVlanCfgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfStat8021pAndVlanCfgGroup = hwL2IfStat8021pAndVlanCfgGroup.setStatus('current')
hwL2VlanStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 17)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanStatInTotalPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatInTotalBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatOutTotalPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatOutTotalBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatUnknownUcastDiscardPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatUnknownMcastDiscardPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatBcastDiscardPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatInUcastPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatInUcastBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatOutUcastPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatOutUcastBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatInMcastPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatInMcastBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatOutMcastPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatOutMcastBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatInBcastPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatInBcastBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatOutBcastPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatOutBcastBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStatResetFlag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanStatGroup = hwL2VlanStatGroup.setStatus('current')
hwL2IfStatVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 18)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanInTotalPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanInTotalBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanOutTotalPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanOutTotalBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanInPktsRate"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanInBytesRate"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanOutPktsRate"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanOutBytesRate"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanInUcastPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanInUcastBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanOutUcastPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanOutUcastBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanInMcastPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanInMcastBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanOutMcastPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanOutMcastBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanInBcastPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanInBcastBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanOutBcastPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanOutBcastBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStatVlanResetFlag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfStatVlanGroup = hwL2IfStatVlanGroup.setStatus('current')
hwL2IfStat8021pGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 19)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pInTotalPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pInTotalBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pOutTotalPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pOutTotalBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pInPktsRate"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pInBytsRate"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pOutPktsRate"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pOutBytesRate"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pResetFlag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfStat8021pGroup = hwL2IfStat8021pGroup.setStatus('current')
hwL2IfStat8021pAndVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 20)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pAndVlanInTotalPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pAndVlanInTotalBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pAndVlanInPktsRate"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pAndVlanInBytsRate"), ("HUAWEI-L2VLAN-MIB", "hwL2IfStat8021pAndVlanResetFlag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfStat8021pAndVlanGroup = hwL2IfStat8021pAndVlanGroup.setStatus('current')
hwL2VlanMappingExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 21)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanMappingExtVlanListLow"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMappingExtVlanListHigh"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMappingExtRowStatus"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMappingExtPriorityMode"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMappingExtVlan8021p"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanMappingExtGroup = hwL2VlanMappingExtGroup.setStatus('current')
hwL2VlanQinqVlanTransEnaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 22)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanQinqVlanTransEna"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanQinqVlanTransEnaRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanQinqVlanTransEnaGroup = hwL2VlanQinqVlanTransEnaGroup.setStatus('current')
hwL2VlanQinqVlanTransMissDropGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 23)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanQinqVlanTransMissDrop"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanQinqVlanTransMissDropRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanQinqVlanTransMissDropGroup = hwL2VlanQinqVlanTransMissDropGroup.setStatus('current')
hwL2VlanViewMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 24)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanViewMappingMapVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanViewMappingPriorityMode"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanViewMappingVlan8021p"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanViewMappingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanViewMappingGroup = hwL2VlanViewMappingGroup.setStatus('current')
hwL2VlanStackingMaskGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 25)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanStackingMaskVlanListLow"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStackingMaskVlanListHigh"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStackingMaskRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanStackingMaskGroup = hwL2VlanStackingMaskGroup.setStatus('current')
hwL2VlanIpSubnetVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 26)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanIpSubnetVlanIpAddress"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanIpSubnetVlanIpSubnetMask"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanIpSubnetVlanPriority"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanIpSubnetVlanRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanIpSubnetVlanGroup = hwL2VlanIpSubnetVlanGroup.setStatus('current')
hwL2VlanMacVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 27)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanMacVlanVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMacVlanMac"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMacVlanVlanPriority"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMacVlanMacRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanMacVlanGroup = hwL2VlanMacVlanGroup.setStatus('current')
hwL2VlanProtocolVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 28)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanProtocolVlanProtocolType"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanProtocolVlanEncapType"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanProtocolVlanRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanProtocolVlanGroup = hwL2VlanProtocolVlanGroup.setStatus('current')
hwL2VlanPolicyVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 29)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanPolicyVlanVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanPolicyVlanVlanPriority"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanPolicyVlanMac"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanPolicyVlanIp"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanPolicyVlanPort"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanPolicyVlanRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanPolicyVlanGroup = hwL2VlanPolicyVlanGroup.setStatus('current')
hwL2VlanVoiceVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 30)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanVoiceVlanEnabledVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanVoiceVlanAgingTime"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanVoiceVlanSecurityMode"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanVoiceVlanPortEnable"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanVoiceVlanPortMode"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanVoiceVlanPortLegacy"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanVoiceVlanPortSecurityMode"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanVoiceVlanOuiDescription"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanVoiceVlanOuiRowStatus"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanVoiceVlan8021p"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanVoiceVlanDscp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanVoiceVlanGroup = hwL2VlanVoiceVlanGroup.setStatus('current')
hwL2VlanMappingMultiGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 31)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanMappingMultiVlanListLow"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMappingMultiVlanListHigh"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMappingMultiRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanMappingMultiGroup = hwL2VlanMappingMultiGroup.setStatus('current')
hwL2VlanSwitchPSGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 32)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchPSInputPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchPSInputBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchPSOutputPkts"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchPSOutputBytes"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchPSResetFlag"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchPSEnableFlag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanSwitchPSGroup = hwL2VlanSwitchPSGroup.setStatus('current')
hwL2VlanMacVlanNewGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 33)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanMacVlanNewVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMacVlanNewVlanPriority"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMacVlanNewMacRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanMacVlanNewGroup = hwL2VlanMacVlanNewGroup.setStatus('current')
hwL2VlanProtocolVlanNewGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 34)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanProtocolVlanNewProtocolType"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanProtocolVlanNewProtocolTypeValue"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanProtocolVlanNewRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanProtocolVlanNewGroup = hwL2VlanProtocolVlanNewGroup.setStatus('current')
hwL2VlanPolicyVlanNewGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 35)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanPolicyVlanNewVlanPriority"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanPolicyVlanNewRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanPolicyVlanNewGroup = hwL2VlanPolicyVlanNewGroup.setStatus('current')
hwL2VlanProtocolVlanPortNewGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 36)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanProtocolVlanPortNewPriority"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanProtocolVlanPortNewRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanProtocolVlanPortNewGroup = hwL2VlanProtocolVlanPortNewGroup.setStatus('current')
hwL2VlanMultiVoiceVlanPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 37)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanMultiVoiceVlanPortVLanId"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMultiVoiceVlanPortRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanMultiVoiceVlanPortGroup = hwL2VlanMultiVoiceVlanPortGroup.setStatus('current')
hwL2VlanPrecedenceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 38)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanPrecedence"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanPrecedenceGroup = hwL2VlanPrecedenceGroup.setStatus('current')
hwL2VlanXlateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 39)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanXlateVlanIdEnd"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanXlateAction"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanXlateToVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanXlateToinnerVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanXlateremark"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanXlateRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanXlateGroup = hwL2VlanXlateGroup.setStatus('current')
hwL2VlanSwitchExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 40)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchExtSrcIfIndex"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchExtDstIfIndex"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchExtDstInnerVlan"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchExtRowStatus"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchExtLinkStatus"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchExtVlanXlateAction"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchExtDstVlan"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchExtRemark"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchExtRemarkReverse"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchExtOuterVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchExtVlanListLow"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchExtVlanListHigh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanSwitchExtGroup = hwL2VlanSwitchExtGroup.setStatus('current')
hwL2QinQVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 41)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2QinQVlanMode"), ("HUAWEI-L2VLAN-MIB", "hwL2QinQVlanChangedVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2QinQVlanChangedInnerVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2QinQVlanRemark"), ("HUAWEI-L2VLAN-MIB", "hwL2QinQVlanMapStackVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2QinQVlanRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2QinQVlanGroup = hwL2QinQVlanGroup.setStatus('current')
hwL2UntagAddDTagGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 1, 42)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2UntagAddDTagOuterVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2UntagAddDTagInnerVlanId"), ("HUAWEI-L2VLAN-MIB", "hwL2UntagAddDTagRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2UntagAddDTagGroup = hwL2UntagAddDTagGroup.setStatus('current')
hwL2VlanTrapsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 3))
hwL2VlanTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 3, 1)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanUnkownPacketAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2VlanTrapsGroup = hwL2VlanTrapsGroup.setStatus('current')
hwL2vlanCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 3, 2, 2, 1)).setObjects(("HUAWEI-L2VLAN-MIB", "hwL2VlanMIBTableGroup"), ("HUAWEI-L2VLAN-MIB", "hwSupervlanGroup"), ("HUAWEI-L2VLAN-MIB", "hwL2vlanStackingGroup"), ("HUAWEI-L2VLAN-MIB", "hwL2vlanMappingGroup"), ("HUAWEI-L2VLAN-MIB", "hwL2InterfIsolateGroup"), ("HUAWEI-L2VLAN-MIB", "hwL2IsolatemappingGroup"), ("HUAWEI-L2VLAN-MIB", "hwL2vlanQinQGroup"), ("HUAWEI-L2VLAN-MIB", "hwL2vlanQinQInterfaceGroup"), ("HUAWEI-L2VLAN-MIB", "hwL2DVlanMappingGroup"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanStackingAdvGroup"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanMappingAdvGroup"), ("HUAWEI-L2VLAN-MIB", "hwL2VlanSwitchGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2vlanCompliance = hwL2vlanCompliance.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-L2VLAN-MIB", hwL2VlanIpSubnetVlanIpSubnetIndex=hwL2VlanIpSubnetVlanIpSubnetIndex, hwL2VlanQinqVlanTransEnaGroup=hwL2VlanQinqVlanTransEnaGroup, hwL2VlanVoiceVlanPortIndex=hwL2VlanVoiceVlanPortIndex, hwL2VlanSwitchExtTable=hwL2VlanSwitchExtTable, hwL2VlanMappingMultiDirection=hwL2VlanMappingMultiDirection, hwL2IfStatVlanEntry=hwL2IfStatVlanEntry, hwL2VlanDynamicVlan=hwL2VlanDynamicVlan, hwL2Mgmt=hwL2Mgmt, hwL2IfStatVlanInMcastPkts=hwL2IfStatVlanInMcastPkts, hwL2VlanSwitchExtEntry=hwL2VlanSwitchExtEntry, hwL2VlanDescr=hwL2VlanDescr, hwL2VlanProtocolVlanEncapType=hwL2VlanProtocolVlanEncapType, hwL2IfStatVlanInTotalPkts=hwL2IfStatVlanInTotalPkts, hwL2QinQVlanMapStackVlanId=hwL2QinQVlanMapStackVlanId, hwL2VlanAdminStatus=hwL2VlanAdminStatus, hwL2InterfIsolateTable=hwL2InterfIsolateTable, hwL2VlanMappingInsideVlanId=hwL2VlanMappingInsideVlanId, hwL2VlanApply=hwL2VlanApply, hwL2VlanQinqVlanTransMissDropEntry=hwL2VlanQinqVlanTransMissDropEntry, hwL2VlanIpSubnetVlanGroup=hwL2VlanIpSubnetVlanGroup, hwL2VlanStatInMcastPkts=hwL2VlanStatInMcastPkts, hwL2QinQVlanInnerVlanIdBegin=hwL2QinQVlanInnerVlanIdBegin, hwL2VlanStackingExtGroup=hwL2VlanStackingExtGroup, hwL2VlanPolicyVlanPort=hwL2VlanPolicyVlanPort, hwL2VlanStackingExtVlan8021p=hwL2VlanStackingExtVlan8021p, hwL2VlanMultiVoiceVlanPortTable=hwL2VlanMultiVoiceVlanPortTable, hwL2VlanPolicyVlanVlanPriority=hwL2VlanPolicyVlanVlanPriority, hwL2VlanProtocolVlanNewVlanId=hwL2VlanProtocolVlanNewVlanId, hwL2VlanStatInUcastBytes=hwL2VlanStatInUcastBytes, hwL2InterfIsolateEntry=hwL2InterfIsolateEntry, hwL2VlanStatisStatus=hwL2VlanStatisStatus, hwL2IfStat8021pCfgTable=hwL2IfStat8021pCfgTable, hwL2VlanVoiceVlanPortLegacy=hwL2VlanVoiceVlanPortLegacy, hwL2VlanMIBTableGroup=hwL2VlanMIBTableGroup, hwL2VlanVoiceVlanDscp=hwL2VlanVoiceVlanDscp, hwL2VlanVoiceVlanOuiEntry=hwL2VlanVoiceVlanOuiEntry, hwL2IfStatVlanInTotalBytes=hwL2IfStatVlanInTotalBytes, hwL2IfStat8021pAndVlanGroup=hwL2IfStat8021pAndVlanGroup, hwL2VlanStackingExtEntry=hwL2VlanStackingExtEntry, hwL2InterfIsolateInterflistHigh=hwL2InterfIsolateInterflistHigh, hwL2VlanStatResetFlag=hwL2VlanStatResetFlag, hwL2VlanSwitchExtSrcIfIndex=hwL2VlanSwitchExtSrcIfIndex, hwL2IfStat8021pAndVlanCfgGroup=hwL2IfStat8021pAndVlanCfgGroup, hwL2VlanPolicyVlanNewVlanId=hwL2VlanPolicyVlanNewVlanId, hwL2VlanSwitchPSOutputPkts=hwL2VlanSwitchPSOutputPkts, hwL2IfStat8021pOutPktsRate=hwL2IfStat8021pOutPktsRate, hwL2VlanMacVlanNewTable=hwL2VlanMacVlanNewTable, hwL2VlanPolicyVlanNewGroup=hwL2VlanPolicyVlanNewGroup, hwL2VlanMacVlanNewMac=hwL2VlanMacVlanNewMac, hwL2VlanStatEntry=hwL2VlanStatEntry, hwL2QinQVlanTable=hwL2QinQVlanTable, hwL2VlanStatInBcastPkts=hwL2VlanStatInBcastPkts, hwL2VlanMIBTable=hwL2VlanMIBTable, hwL2VlanVoiceVlanGroup=hwL2VlanVoiceVlanGroup, hwL2VlanProtocolVlanNewGroup=hwL2VlanProtocolVlanNewGroup, hwL2VlanMappingAdvOutsideVlanListLow=hwL2VlanMappingAdvOutsideVlanListLow, hwL2VlanViewMappingGroup=hwL2VlanViewMappingGroup, hwL2VlanStackingExtPriorityMode=hwL2VlanStackingExtPriorityMode, hwL2QinQVlanIdBegin=hwL2QinQVlanIdBegin, hwL2VlanSwitchPSSVlanId=hwL2VlanSwitchPSSVlanId, hwL2VlanMappingPortIndex=hwL2VlanMappingPortIndex, hwL2IsolatemappingPortNum=hwL2IsolatemappingPortNum, hwL2IfStat8021pInTotalPkts=hwL2IfStat8021pInTotalPkts, hwL2VlanProtocolVlanGroup=hwL2VlanProtocolVlanGroup, hwL2VlanAgingTime=hwL2VlanAgingTime, hwL2IfStatVlanOutUcastBytes=hwL2IfStatVlanOutUcastBytes, hwL2VlanStackingAdvOutsideVlanListLow=hwL2VlanStackingAdvOutsideVlanListLow, hwL2QinQVlan8021pBegin=hwL2QinQVlan8021pBegin, hwL2DVlanMappingRowStatus=hwL2DVlanMappingRowStatus, hwL2VlanSwitchOuterVlanId=hwL2VlanSwitchOuterVlanId, hwL2VlanMultiVoiceVlanPortGroup=hwL2VlanMultiVoiceVlanPortGroup, hwL2VlanStackingPortIndex=hwL2VlanStackingPortIndex, hwL2VlanVoiceVlanPortTable=hwL2VlanVoiceVlanPortTable, hwL2QinQVlanEtherType=hwL2QinQVlanEtherType, hwL2IfStat8021pCfgGroup=hwL2IfStat8021pCfgGroup, hwL2VlanQinqVlanTransMissDropGroup=hwL2VlanQinqVlanTransMissDropGroup, hwL2VlanStackingMaskTable=hwL2VlanStackingMaskTable, hwL2VlanSwitchPSTable=hwL2VlanSwitchPSTable, hwL2IfStatVlanOutBcastBytes=hwL2IfStatVlanOutBcastBytes, hwL2VlanSysQinQRowStatus=hwL2VlanSysQinQRowStatus, hwL2VlanSwitchMtuResetFlag=hwL2VlanSwitchMtuResetFlag, hwL2DVlanMappingGroup=hwL2DVlanMappingGroup, hwL2VlanSwitchExtRemarkReverse=hwL2VlanSwitchExtRemarkReverse, hwL2VlanMappingAdvOutsideVlanListHigh=hwL2VlanMappingAdvOutsideVlanListHigh, hwL2VlanSwitchExtVlanListHigh=hwL2VlanSwitchExtVlanListHigh, hwL2VlanMappingMultiGroup=hwL2VlanMappingMultiGroup, hwL2VlanIndex=hwL2VlanIndex, hwL2VlanStackingAdvEntry=hwL2VlanStackingAdvEntry, hwL2VlanStackingTable=hwL2VlanStackingTable, hwL2QinQVlanIdEnd=hwL2QinQVlanIdEnd, hwL2VlanIpSubnetVlanTable=hwL2VlanIpSubnetVlanTable, hwL2VlanXlateInterfaceIndex=hwL2VlanXlateInterfaceIndex, hwL2VlanMappingAdvGroup=hwL2VlanMappingAdvGroup, hwL2VlanPolicyVlanIp=hwL2VlanPolicyVlanIp, hwL2VlanIpSubnetVlanIpSubnetMask=hwL2VlanIpSubnetVlanIpSubnetMask, hwL2VlanStackingExtPortIndex=hwL2VlanStackingExtPortIndex, hwL2VlanXlateRowStatus=hwL2VlanXlateRowStatus, hwL2VlanSwitchPSResetFlag=hwL2VlanSwitchPSResetFlag, hwL2VlanStackingExtAction=hwL2VlanStackingExtAction, hwL2VlanXlateremark=hwL2VlanXlateremark, hwL2DVlanMappingInterfaceIndex=hwL2DVlanMappingInterfaceIndex, hwL2VlanViewMappingEntry=hwL2VlanViewMappingEntry, hwL2VlanMappingMultiTable=hwL2VlanMappingMultiTable, hwL2VlanPolicyVlanMac=hwL2VlanPolicyVlanMac, hwL2IfStatVlanCfgEntry=hwL2IfStatVlanCfgEntry, hwL2IfStat8021pInPktsRate=hwL2IfStat8021pInPktsRate, hwL2VlanQinqVlanTransEnaEntry=hwL2VlanQinqVlanTransEnaEntry, hwL2VlanXlateToVlanId=hwL2VlanXlateToVlanId, hwL2VlanXlateDirection=hwL2VlanXlateDirection, hwL2VlanMacVlanTable=hwL2VlanMacVlanTable, hwL2VlanMappingExtVlanListLow=hwL2VlanMappingExtVlanListLow, hwL2VlanTrapsGroups=hwL2VlanTrapsGroups, hwL2IfStat8021pCfgEntry=hwL2IfStat8021pCfgEntry, hwL2IfStat8021pAndVlanCfgVlanId=hwL2IfStat8021pAndVlanCfgVlanId, hwL2IfStatVlanCfgRowStatus=hwL2IfStatVlanCfgRowStatus, hwL2IfStat8021pAndVlanCfgRowStatus=hwL2IfStat8021pAndVlanCfgRowStatus, hwL2VlanMacVlanMac=hwL2VlanMacVlanMac, hwL2VlanXlateVlan8021p=hwL2VlanXlateVlan8021p, hwL2QinQVlanInnerVlanIdEnd=hwL2QinQVlanInnerVlanIdEnd, hwL2VlanStatVlanId=hwL2VlanStatVlanId, hwL2VlanPortList=hwL2VlanPortList, hwL2VlanVoiceVlanOuiRowStatus=hwL2VlanVoiceVlanOuiRowStatus, hwL2IfStat8021pAndVlanPortIndex=hwL2IfStat8021pAndVlanPortIndex, hwL2VlanQinQSVlanId=hwL2VlanQinQSVlanId, hwL2VlanViewMappingMapVlanId=hwL2VlanViewMappingMapVlanId, hwL2VlanSwitchExtName=hwL2VlanSwitchExtName, hwL2VlanSwitchExtVlanListLow=hwL2VlanSwitchExtVlanListLow, hwL2VlanStackingOutsideVlanListLow=hwL2VlanStackingOutsideVlanListLow, hwL2VlanStatOutUcastBytes=hwL2VlanStatOutUcastBytes, hwL2VlanQinQEntry=hwL2VlanQinQEntry, hwL2VlanStatOutTotalBytes=hwL2VlanStatOutTotalBytes, hwL2VlanStatOutMcastPkts=hwL2VlanStatOutMcastPkts, hwL2VlanXlateVlanIdBegin=hwL2VlanXlateVlanIdBegin, hwL2VlanMappingMultiVlanListLow=hwL2VlanMappingMultiVlanListLow, hwL2VlanMappingExtEntry=hwL2VlanMappingExtEntry, hwL2VlanPolicyVlanVlanId=hwL2VlanPolicyVlanVlanId, hwL2QinQVlanChangedInnerVlanId=hwL2QinQVlanChangedInnerVlanId, hwL2vlanStackingGroup=hwL2vlanStackingGroup, hwL2VlanIpSubnetVlanIpAddress=hwL2VlanIpSubnetVlanIpAddress, hwL2IfStatVlanCfgGroup=hwL2IfStatVlanCfgGroup, hwL2VlanMappingExtDirection=hwL2VlanMappingExtDirection, hwL2VlanStatInBcastBytes=hwL2VlanStatInBcastBytes, hwL2VlanSwitchExtGroup=hwL2VlanSwitchExtGroup, hwL2VlanQinqVlanTransMissDropRowStatus=hwL2VlanQinqVlanTransMissDropRowStatus, hwL2VlanMappingExtVlanId=hwL2VlanMappingExtVlanId, hwL2VlanMappingAdvMapVlan8021p=hwL2VlanMappingAdvMapVlan8021p, hwSuperVlanTable=hwSuperVlanTable, hwL2VlanMappingEntry=hwL2VlanMappingEntry, hwL2VlanMacVlanNewEntry=hwL2VlanMacVlanNewEntry, hwL2VlanSwitchPSInputPkts=hwL2VlanSwitchPSInputPkts, hwL2VlanQinqVlanTransMissDropTable=hwL2VlanQinqVlanTransMissDropTable, hwL2VlanStatUnknownUcastDiscardPkts=hwL2VlanStatUnknownUcastDiscardPkts, hwL2IfStatVlanOutTotalBytes=hwL2IfStatVlanOutTotalBytes, hwL2VlanPolicyVlanNewVlanPriority=hwL2VlanPolicyVlanNewVlanPriority, hwL2VlanMultiVoiceVlanIfIndex=hwL2VlanMultiVoiceVlanIfIndex, hwL2VlanStackingMaskEntry=hwL2VlanStackingMaskEntry, hwL2VlanViewMappingTable=hwL2VlanViewMappingTable, hwL2VlanMacVlanGroup=hwL2VlanMacVlanGroup, hwL2vlanQinQInterfaceGroup=hwL2vlanQinQInterfaceGroup, hwL2IfStatVlanOutUcastPkts=hwL2IfStatVlanOutUcastPkts, hwL2VlanProtocolVlanPortNewGroup=hwL2VlanProtocolVlanPortNewGroup, hwL2VlanQinQCVlanId=hwL2VlanQinQCVlanId, hwL2VlanMacVlanEntry=hwL2VlanMacVlanEntry, hwL2IfStatVlanCfgEnableFlag=hwL2IfStatVlanCfgEnableFlag, hwSubVlanListHigh=hwSubVlanListHigh, hwL2VlanProtocolVlanPortNewTable=hwL2VlanProtocolVlanPortNewTable, hwL2IfStatVlanInBcastBytes=hwL2IfStatVlanInBcastBytes, hwL2IfStat8021pAndVlanInTotalBytes=hwL2IfStat8021pAndVlanInTotalBytes, hwL2VlanQinqVlanTransMissDrop=hwL2VlanQinqVlanTransMissDrop, hwL2VlanStackingAdvMapVlanId=hwL2VlanStackingAdvMapVlanId, hwL2VlanSwitchPSEntry=hwL2VlanSwitchPSEntry, hwL2IfStat8021pInBytsRate=hwL2IfStat8021pInBytsRate, hwL2VlanStatInMcastBytes=hwL2VlanStatInMcastBytes, hwL2VlanVoiceVlanAgingTime=hwL2VlanVoiceVlanAgingTime, hwL2UntagAddDTagGroup=hwL2UntagAddDTagGroup, hwL2VlanMacVlanNewVlanPriority=hwL2VlanMacVlanNewVlanPriority, hwL2UntagAddDTagTable=hwL2UntagAddDTagTable, hwL2VlanType=hwL2VlanType, hwL2DVlanMappingExternalVlanId=hwL2DVlanMappingExternalVlanId, hwL2VlanQinqVlanTransEnaRowStatus=hwL2VlanQinqVlanTransEnaRowStatus, hwL2VlanIpSubnetVlanVlanId=hwL2VlanIpSubnetVlanVlanId, hwL2VlanPolicyVlanNewMac=hwL2VlanPolicyVlanNewMac, hwL2VlanMacLearn=hwL2VlanMacLearn, hwL2VlanMultiVoiceVlanPortVLanId=hwL2VlanMultiVoiceVlanPortVLanId, hwL2IfStat8021pAndVlanResetFlag=hwL2IfStat8021pAndVlanResetFlag, hwL2vlanCompliances=hwL2vlanCompliances, hwL2VlanPolicyVlanNewRowStatus=hwL2VlanPolicyVlanNewRowStatus, hwL2VlanPolicyVlanGroup=hwL2VlanPolicyVlanGroup, hwL2DVlanMappingMapExternalVlanId=hwL2DVlanMappingMapExternalVlanId, hwL2QinQVlanChangedVlanId=hwL2QinQVlanChangedVlanId, hwL2VlanProtocolVlanProtocolType=hwL2VlanProtocolVlanProtocolType, hwL2VlanSwitchMode=hwL2VlanSwitchMode, hwL2IfStat8021pOutTotalPkts=hwL2IfStat8021pOutTotalPkts, hwL2VlanVoiceVlanPortSecurityMode=hwL2VlanVoiceVlanPortSecurityMode, hwL2VlanStackingMaskAction=hwL2VlanStackingMaskAction, hwL2VlanProtocolVlanPortNewPriority=hwL2VlanProtocolVlanPortNewPriority, hwL2IfStat8021pCfg8021p=hwL2IfStat8021pCfg8021p, hwL2VlanMIBEntry=hwL2VlanMIBEntry, hwL2VlanStatInTotalPkts=hwL2VlanStatInTotalPkts, hwL2VlanStackingAdvTable=hwL2VlanStackingAdvTable, hwL2QinQVlanIfIndex=hwL2QinQVlanIfIndex, hwL2VlanSwitchExtDstInnerVlan=hwL2VlanSwitchExtDstInnerVlan, hwL2VlanRowStatus=hwL2VlanRowStatus, hwL2VlanProtocolVlanNewEntry=hwL2VlanProtocolVlanNewEntry, hwL2VlanSwitchIfIndex=hwL2VlanSwitchIfIndex, hwL2VlanMacVlanVlanId=hwL2VlanMacVlanVlanId, hwL2VlanSwitchTable=hwL2VlanSwitchTable, hwL2VlanSwitchExtRemark=hwL2VlanSwitchExtRemark, hwL2VlanMappingMultiVlan8021p=hwL2VlanMappingMultiVlan8021p, hwL2VlanUnknownUnicastProcessing=hwL2VlanUnknownUnicastProcessing, hwL2IfStat8021pCfgPortIndex=hwL2IfStat8021pCfgPortIndex, hwL2VlanStackingEntry=hwL2VlanStackingEntry, hwL2VlanSwitchPSGroup=hwL2VlanSwitchPSGroup, hwL2IfStatVlanInUcastBytes=hwL2IfStatVlanInUcastBytes, hwL2VlanProtocolVlanNewProtocolIndex=hwL2VlanProtocolVlanNewProtocolIndex, hwL2VlanStackingMaskStack8021p=hwL2VlanStackingMaskStack8021p, hwL2QinQVlanMode=hwL2QinQVlanMode, hwL2IfStatVlanOutMcastBytes=hwL2IfStatVlanOutMcastBytes, hwL2VlanPolicyVlanTable=hwL2VlanPolicyVlanTable, hwL2VlanQinQTable=hwL2VlanQinQTable, hwL2VlanMacVlanNewMacRowStatus=hwL2VlanMacVlanNewMacRowStatus, hwL2VlanQinQNewCVlanId=hwL2VlanQinQNewCVlanId, hwL2VlanMappingExtVlan8021p=hwL2VlanMappingExtVlan8021p, hwL2IfStat8021pAndVlanInPktsRate=hwL2IfStat8021pAndVlanInPktsRate, hwL2VlanVoiceVlanOuiDescription=hwL2VlanVoiceVlanOuiDescription, hwL2VlanVoiceVlanOuiAddress=hwL2VlanVoiceVlanOuiAddress, hwL2Vlan=hwL2Vlan, hwL2VlanMacVlanVlanPriority=hwL2VlanMacVlanVlanPriority, hwL2VlanMappingExtRowStatus=hwL2VlanMappingExtRowStatus, hwL2QinQVlanEntry=hwL2QinQVlanEntry, hwL2IfStatVlanCfgVlanId=hwL2IfStatVlanCfgVlanId, hwL2IfStat8021pGroup=hwL2IfStat8021pGroup, hwL2VlanQinQOutSideVlanId=hwL2VlanQinQOutSideVlanId, hwL2VlanSwitchMtuEnableFlag=hwL2VlanSwitchMtuEnableFlag, hwL2VlanQinqVlanTransEnaTable=hwL2VlanQinqVlanTransEnaTable, hwL2IfStat8021pResetFlag=hwL2IfStat8021pResetFlag, hwL2VlanPolicyVlanNewPort=hwL2VlanPolicyVlanNewPort, hwL2IfStatVlanTable=hwL2IfStatVlanTable, hwL2InterfIsolateVlanId=hwL2InterfIsolateVlanId, hwL2VlanSwitchPSIfIndex=hwL2VlanSwitchPSIfIndex, hwL2InterfIsolateInterflistLow=hwL2InterfIsolateInterflistLow, hwL2VlanVoiceVlanPortEnable=hwL2VlanVoiceVlanPortEnable, hwL2VlanXlateOuterVlanId=hwL2VlanXlateOuterVlanId, hwL2VlanStatOutBcastBytes=hwL2VlanStatOutBcastBytes, hwL2VlanStackingAdvOutside8021p=hwL2VlanStackingAdvOutside8021p, hwL2VlanVoiceVlanPortEntry=hwL2VlanVoiceVlanPortEntry, hwL2VlanSwitchExtOuterVlanId=hwL2VlanSwitchExtOuterVlanId, hwL2IfStatVlanOutMcastPkts=hwL2IfStatVlanOutMcastPkts, hwL2QinQVlanRemark=hwL2QinQVlanRemark, hwL2VlanMappingRowStatus=hwL2VlanMappingRowStatus, hwL2VlanInterfaceQinQRowStatus=hwL2VlanInterfaceQinQRowStatus, hwL2vlanConformance=hwL2vlanConformance, hwL2UntagAddDTagOuterVlanId=hwL2UntagAddDTagOuterVlanId, hwL2IfStat8021pPortIndex=hwL2IfStat8021pPortIndex)
mibBuilder.exportSymbols("HUAWEI-L2VLAN-MIB", hwSuperVlanEntry=hwSuperVlanEntry, hwL2VlanTraps=hwL2VlanTraps, hwL2VlanSwitchInnerVlanId=hwL2VlanSwitchInnerVlanId, hwL2VlanProtocolVlanPortNewProtocolIndex=hwL2VlanProtocolVlanPortNewProtocolIndex, hwL2VlanQinqVlanTransMissDropPortIndex=hwL2VlanQinqVlanTransMissDropPortIndex, hwL2IsolateInterflistHigh=hwL2IsolateInterflistHigh, hwL2VlanBase=hwL2VlanBase, hwL2VlanStatInUcastPkts=hwL2VlanStatInUcastPkts, hwL2VlanMappingAdvTable=hwL2VlanMappingAdvTable, PYSNMP_MODULE_ID=hwL2Vlan, hwL2IfStat8021p=hwL2IfStat8021p, hwL2VlanProtocolVlanPortNewVlanId=hwL2VlanProtocolVlanPortNewVlanId, hwL2IfStat8021pAndVlanVlanId=hwL2IfStat8021pAndVlanVlanId, hwL2VlanViewMappingRowStatus=hwL2VlanViewMappingRowStatus, hwL2VlanMappingExtTable=hwL2VlanMappingExtTable, hwL2VlanSwitchPSOutputBytes=hwL2VlanSwitchPSOutputBytes, hwL2VlanPolicyVlanRowStatus=hwL2VlanPolicyVlanRowStatus, hwL2VlanVoiceVlanSecurityMode=hwL2VlanVoiceVlanSecurityMode, hwL2VlanStatUnknownMcastDiscardPkts=hwL2VlanStatUnknownMcastDiscardPkts, hwL2UntagAddDTagRowStatus=hwL2UntagAddDTagRowStatus, hwL2IfStat8021pAndVlanInTotalPkts=hwL2IfStat8021pAndVlanInTotalPkts, hwL2VlanProtocolVlanEntry=hwL2VlanProtocolVlanEntry, hwL2VlanSwitchExtLinkStatus=hwL2VlanSwitchExtLinkStatus, hwL2IfStat8021pTable=hwL2IfStat8021pTable, hwL2VlanProtocolVlanRowStatus=hwL2VlanProtocolVlanRowStatus, hwL2VlanStackingAdvGroup=hwL2VlanStackingAdvGroup, hwL2UntagAddDTagEntry=hwL2UntagAddDTagEntry, hwL2UntagAddDTagInnerVlanId=hwL2UntagAddDTagInnerVlanId, hwL2VlanMappingAdvEntry=hwL2VlanMappingAdvEntry, hwL2VlanSwitchRowStatus=hwL2VlanSwitchRowStatus, hwL2VlanProtocolVlanProtocolIndex=hwL2VlanProtocolVlanProtocolIndex, hwL2IsolateInterflistLow=hwL2IsolateInterflistLow, hwL2VlanXlateGroup=hwL2VlanXlateGroup, hwL2VlanStatInTotalBytes=hwL2VlanStatInTotalBytes, hwL2VlanViewMappingVlan8021p=hwL2VlanViewMappingVlan8021p, hwL2VlanSwitchInnerSwitchVlanId=hwL2VlanSwitchInnerSwitchVlanId, hwL2VlanManagementVlan=hwL2VlanManagementVlan, hwL2VlanStackingRowStatus=hwL2VlanStackingRowStatus, hwL2VlanSmartMacLearn=hwL2VlanSmartMacLearn, hwL2IfStatVlanPortIndex=hwL2IfStatVlanPortIndex, hwL2VlanPolicyVlanNewEntry=hwL2VlanPolicyVlanNewEntry, hwL2VlanPrecedence=hwL2VlanPrecedence, hwL2QinQVlanRowStatus=hwL2QinQVlanRowStatus, hwL2VlanIpSubnetVlanPriority=hwL2VlanIpSubnetVlanPriority, hwL2VlanMappingAdvRowStatus=hwL2VlanMappingAdvRowStatus, hwL2VlanStackingMaskStackVlanId=hwL2VlanStackingMaskStackVlanId, hwL2VlanMappingOutsideVlanListHigh=hwL2VlanMappingOutsideVlanListHigh, hwL2VlanMultiVoiceVlanPortEntry=hwL2VlanMultiVoiceVlanPortEntry, hwL2VlanMulticast=hwL2VlanMulticast, hwL2VlanQinQDirection=hwL2VlanQinQDirection, hwL2VlanProtocolVlanNewTable=hwL2VlanProtocolVlanNewTable, hwL2VlanStatOutTotalPkts=hwL2VlanStatOutTotalPkts, hwL2VlanStatOutBcastPkts=hwL2VlanStatOutBcastPkts, hwL2InterfIsolateGroup=hwL2InterfIsolateGroup, hwL2IfStat8021pAndVlanCfgEnableFlag=hwL2IfStat8021pAndVlanCfgEnableFlag, hwL2VlanCreateStatus=hwL2VlanCreateStatus, hwL2VlanServiceName=hwL2VlanServiceName, hwL2VlanProtocolVlanVlanId=hwL2VlanProtocolVlanVlanId, hwL2IsolatemappingEntry=hwL2IsolatemappingEntry, hwL2VlanMappingExtVlanListHigh=hwL2VlanMappingExtVlanListHigh, hwL2VlanSwitchMtuDiscardPkts=hwL2VlanSwitchMtuDiscardPkts, hwL2VlanQinQIndex=hwL2VlanQinQIndex, hwL2DVlanMappingAction=hwL2DVlanMappingAction, hwL2VlanQinqVlanTransEnaPortIndex=hwL2VlanQinqVlanTransEnaPortIndex, hwSupervlanGroup=hwSupervlanGroup, hwL2IfStat8021pAndVlanCfgEntry=hwL2IfStat8021pAndVlanCfgEntry, hwL2VlanPolicyVlanNewTable=hwL2VlanPolicyVlanNewTable, hwL2VlanPrecedenceGroup=hwL2VlanPrecedenceGroup, hwL2vlanCompliance=hwL2vlanCompliance, hwL2VlanStackingAdvStackVlanId=hwL2VlanStackingAdvStackVlanId, hwL2VlanXlateEntry=hwL2VlanXlateEntry, hwL2VlanInterfaceQinQEntry=hwL2VlanInterfaceQinQEntry, hwL2IfStatVlanInBcastPkts=hwL2IfStatVlanInBcastPkts, hwL2IfStat8021pOutTotalBytes=hwL2IfStat8021pOutTotalBytes, hwL2IfStatVlanInUcastPkts=hwL2IfStatVlanInUcastPkts, hwL2VlanProtocolVlanNewProtocolType=hwL2VlanProtocolVlanNewProtocolType, hwL2VlanMacVlanNewVlanId=hwL2VlanMacVlanNewVlanId, hwL2VlanSwitchPSCVlanId=hwL2VlanSwitchPSCVlanId, hwL2vlanGroups=hwL2vlanGroups, hwL2VlanPolicyVlanEntry=hwL2VlanPolicyVlanEntry, hwL2IfStat8021pEntry=hwL2IfStat8021pEntry, hwL2VlanMappingMultiVlanId=hwL2VlanMappingMultiVlanId, hwL2VlanStackingAdvStack8021p=hwL2VlanStackingAdvStack8021p, hwL2VlanPolicyVlanNewIp=hwL2VlanPolicyVlanNewIp, hwL2VlanSwitchExtDstVlan=hwL2VlanSwitchExtDstVlan, hwL2IfStat8021pCfgEnableFlag=hwL2IfStat8021pCfgEnableFlag, hwSuperVlanId=hwSuperVlanId, hwL2VlanMappingAdvPortIndex=hwL2VlanMappingAdvPortIndex, hwL2VlanStackingMaskVlanListLow=hwL2VlanStackingMaskVlanListLow, hwL2VlanMappingTable=hwL2VlanMappingTable, hwL2VlanStackingInsideVlanId=hwL2VlanStackingInsideVlanId, hwL2VlanTrapsGroup=hwL2VlanTrapsGroup, hwL2VlanMappingExtGroup=hwL2VlanMappingExtGroup, hwL2VlanStatOutUcastPkts=hwL2VlanStatOutUcastPkts, hwL2VlanMappingMultiRowStatus=hwL2VlanMappingMultiRowStatus, hwL2VlanStackingMaskRowStatus=hwL2VlanStackingMaskRowStatus, hwL2VlanProtocolVlanPortNewEntry=hwL2VlanProtocolVlanPortNewEntry, hwL2VlanVoiceVlan8021p=hwL2VlanVoiceVlan8021p, hwL2IfStatVlanGroup=hwL2IfStatVlanGroup, hwL2IfStat8021pInTotalBytes=hwL2IfStat8021pInTotalBytes, hwL2VlanVoiceVlanPortMode=hwL2VlanVoiceVlanPortMode, hwL2IfStatVlanOutBytesRate=hwL2IfStatVlanOutBytesRate, hwL2VlanMappingOutsideVlanListLow=hwL2VlanMappingOutsideVlanListLow, hwL2IfStat8021pAndVlan8021p=hwL2IfStat8021pAndVlan8021p, hwL2VlanSwitch8021pRemark=hwL2VlanSwitch8021pRemark, hwL2IfStat8021pAndVlanInBytsRate=hwL2IfStat8021pAndVlanInBytsRate, hwL2VlanName=hwL2VlanName, hwL2VlanProtocolVlanPortNewRowStatus=hwL2VlanProtocolVlanPortNewRowStatus, hwL2VlanMngObjects=hwL2VlanMngObjects, hwL2vlanMappingGroup=hwL2vlanMappingGroup, hwL2VlanXlateToinnerVlanId=hwL2VlanXlateToinnerVlanId, hwL2IfStat8021pAndVlanEntry=hwL2IfStat8021pAndVlanEntry, hwL2vlanQinQGroup=hwL2vlanQinQGroup, hwL2VlanStackingExtVlanListLow=hwL2VlanStackingExtVlanListLow, hwL2VlanSwitchPSInputBytes=hwL2VlanSwitchPSInputBytes, hwL2VlanXlateVlanIdEnd=hwL2VlanXlateVlanIdEnd, hwL2VlanStackingExtVlanListHigh=hwL2VlanStackingExtVlanListHigh, hwL2VlanProtocolVlanNewProtocolTypeValue=hwL2VlanProtocolVlanNewProtocolTypeValue, hwL2VlanQinQInterfaceIndex=hwL2VlanQinQInterfaceIndex, hwL2IsolatemappingGroup=hwL2IsolatemappingGroup, hwL2VlanVoiceVlanOuiMask=hwL2VlanVoiceVlanOuiMask, hwL2VlanSwitchOuterSwitchVlanId=hwL2VlanSwitchOuterSwitchVlanId, hwL2VlanSwitchEntry=hwL2VlanSwitchEntry, hwL2VlanIpSubnetVlanRowStatus=hwL2VlanIpSubnetVlanRowStatus, hwL2VlanSwitchExtVlanXlateAction=hwL2VlanSwitchExtVlanXlateAction, hwL2IfStat8021pOutBytesRate=hwL2IfStat8021pOutBytesRate, hwL2VlanIpSubnetVlanEntry=hwL2VlanIpSubnetVlanEntry, hwL2IfStatVlanInBytesRate=hwL2IfStatVlanInBytesRate, hwL2IfStatVlanOutTotalPkts=hwL2IfStatVlanOutTotalPkts, hwL2VlanMacVlanNewGroup=hwL2VlanMacVlanNewGroup, hwL2QinQVlanGroup=hwL2QinQVlanGroup, hwL2VlanUnknownMulticastProcessing=hwL2VlanUnknownMulticastProcessing, hwL2IsolatemappingTable=hwL2IsolatemappingTable, hwL2UntagAddDTagPortIndex=hwL2UntagAddDTagPortIndex, hwL2VlanStackingOutsideVlanListHigh=hwL2VlanStackingOutsideVlanListHigh, hwL2DVlanMappingTable=hwL2DVlanMappingTable, hwL2VlanStackingExtVlanId=hwL2VlanStackingExtVlanId, hwL2VlanSwitchOutIfIndex=hwL2VlanSwitchOutIfIndex, hwL2VlanViewMappingPriorityMode=hwL2VlanViewMappingPriorityMode, hwL2IfStat8021pAndVlanCfgTable=hwL2IfStat8021pAndVlanCfgTable, hwL2VlanStatGroup=hwL2VlanStatGroup, hwL2VlanXlateTable=hwL2VlanXlateTable, hwL2VlanIfIndex=hwL2VlanIfIndex, hwL2VlanStatTable=hwL2VlanStatTable, hwL2VlanXlateAction=hwL2VlanXlateAction, hwL2IfStatVlanResetFlag=hwL2IfStatVlanResetFlag, hwL2IfStat8021pCfgRowStatus=hwL2IfStat8021pCfgRowStatus, hwL2VlanStackingMaskPortIndex=hwL2VlanStackingMaskPortIndex, hwL2VlanUnkownPacketAlarm=hwL2VlanUnkownPacketAlarm, hwL2VlanProtocolVlanNewRowStatus=hwL2VlanProtocolVlanNewRowStatus, hwL2VlanQinQAction=hwL2VlanQinQAction, hwL2VlanQinqVlanTransEna=hwL2VlanQinqVlanTransEna, hwL2VlanStackingMaskGroup=hwL2VlanStackingMaskGroup, hwL2DVlanMappingInternalVlanId=hwL2DVlanMappingInternalVlanId, hwL2VlanMappingMultiEntry=hwL2VlanMappingMultiEntry, hwL2IfStatVlanOutBcastPkts=hwL2IfStatVlanOutBcastPkts, hwL2VlanMappingExtPriorityMode=hwL2VlanMappingExtPriorityMode, hwL2VlanStackingAdvRowStatus=hwL2VlanStackingAdvRowStatus, hwL2VlanProperty=hwL2VlanProperty, hwL2DVlanMappingDirection=hwL2DVlanMappingDirection, hwL2VlanProtocolVlanTable=hwL2VlanProtocolVlanTable, hwL2IfStat8021pAndVlanCfg8021p=hwL2IfStat8021pAndVlanCfg8021p, hwL2IfStat8021pAndVlanTable=hwL2IfStat8021pAndVlanTable, hwL2VlanMultiVoiceVlanPortRowStatus=hwL2VlanMultiVoiceVlanPortRowStatus, hwL2IfStatVlanInMcastBytes=hwL2IfStatVlanInMcastBytes, hwL2VlanBcast=hwL2VlanBcast, hwL2VlanStackingMaskVlanListHigh=hwL2VlanStackingMaskVlanListHigh, hwL2VlanSwitchMtu=hwL2VlanSwitchMtu, hwL2VlanVoiceVlanOuiTable=hwL2VlanVoiceVlanOuiTable, hwL2VlanInterfaceQinQTable=hwL2VlanInterfaceQinQTable, hwL2VlanSwitchExtDstIfIndex=hwL2VlanSwitchExtDstIfIndex, hwL2VlanSwitchPSEnableFlag=hwL2VlanSwitchPSEnableFlag, hwL2VlanMacVlanMacRowStatus=hwL2VlanMacVlanMacRowStatus, hwL2VlanStackingExtTable=hwL2VlanStackingExtTable, hwL2VlanStatBcastDiscardPkts=hwL2VlanStatBcastDiscardPkts, hwL2IfStatVlanId=hwL2IfStatVlanId, hwL2VlanStackingExtDirection=hwL2VlanStackingExtDirection, hwL2DVlanMappingEntry=hwL2DVlanMappingEntry, hwL2VlanMappingExtPortIndex=hwL2VlanMappingExtPortIndex, hwL2VlanViewMappingVlanId=hwL2VlanViewMappingVlanId, hwL2DVlanMappingMapInternalVlanId=hwL2DVlanMappingMapInternalVlanId, hwL2IfStatVlanOutPktsRate=hwL2IfStatVlanOutPktsRate, hwL2VlanStackingAdvOutsideVlanListHigh=hwL2VlanStackingAdvOutsideVlanListHigh, hwSubVlanListLow=hwSubVlanListLow, hwL2VlanProtocolVlanPortNewIndex=hwL2VlanProtocolVlanPortNewIndex, hwL2VlanSwitchMtuDiscardBytes=hwL2VlanSwitchMtuDiscardBytes, hwL2VlanMappingAdvMapVlanId=hwL2VlanMappingAdvMapVlanId, hwL2VlanViewMappingDirection=hwL2VlanViewMappingDirection, hwL2VlanSwitchExtRowStatus=hwL2VlanSwitchExtRowStatus, hwL2IfStat8021pAndVlanCfgPortIndex=hwL2IfStat8021pAndVlanCfgPortIndex, hwL2IfStatVlanInPktsRate=hwL2IfStatVlanInPktsRate, hwL2IfStatVlanCfgPortIndex=hwL2IfStatVlanCfgPortIndex, hwL2VlanStatistics=hwL2VlanStatistics, hwL2VlanSwitchGroup=hwL2VlanSwitchGroup, hwL2VlanMappingMultiPortIndex=hwL2VlanMappingMultiPortIndex, hwL2VlanStackingAdvPortIndex=hwL2VlanStackingAdvPortIndex, hwL2VlanStackingMaskDirection=hwL2VlanStackingMaskDirection, hwL2VlanStatOutMcastBytes=hwL2VlanStatOutMcastBytes, hwL2VlanMappingAdvOutsideVlan8021p=hwL2VlanMappingAdvOutsideVlan8021p, hwL2VlanStackingExtRowStatus=hwL2VlanStackingExtRowStatus, hwL2VlanVoiceVlanEnabledVlanId=hwL2VlanVoiceVlanEnabledVlanId, hwL2QinQVlan8021pEnd=hwL2QinQVlan8021pEnd, hwL2IfStatVlanCfgTable=hwL2IfStatVlanCfgTable, hwL2VlanMappingMultiVlanListHigh=hwL2VlanMappingMultiVlanListHigh)
