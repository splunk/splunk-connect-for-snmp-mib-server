#
# PySNMP MIB module RADIUS-AUTH-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADIUS-AUTH-CLIENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:52:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
InetPortNumber, InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Unsigned32, mib_2, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, NotificationType, Integer32, Bits, ModuleIdentity, Counter64, iso, TimeTicks, ObjectIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "mib-2", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "NotificationType", "Integer32", "Bits", "ModuleIdentity", "Counter64", "iso", "TimeTicks", "ObjectIdentity", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
radiusAuthClientMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 67, 1, 2))
radiusAuthClientMIB.setRevisions(('2006-08-21 00:00', '1999-06-11 00:00',))
if mibBuilder.loadTexts: radiusAuthClientMIB.setLastUpdated('200608210000Z')
if mibBuilder.loadTexts: radiusAuthClientMIB.setOrganization('IETF RADIUS Extensions Working Group.')
radiusMIB = ObjectIdentity((1, 3, 6, 1, 2, 1, 67))
if mibBuilder.loadTexts: radiusMIB.setStatus('current')
radiusAuthentication = MibIdentifier((1, 3, 6, 1, 2, 1, 67, 1))
radiusAuthClientMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 67, 1, 2, 1))
radiusAuthClient = MibIdentifier((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1))
radiusAuthClientInvalidServerAddresses = MibScalar((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 1), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientInvalidServerAddresses.setStatus('current')
radiusAuthClientIdentifier = MibScalar((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientIdentifier.setStatus('current')
radiusAuthServerTable = MibTable((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 3), )
if mibBuilder.loadTexts: radiusAuthServerTable.setStatus('deprecated')
radiusAuthServerEntry = MibTableRow((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 3, 1), ).setIndexNames((0, "RADIUS-AUTH-CLIENT-MIB", "radiusAuthServerIndex"))
if mibBuilder.loadTexts: radiusAuthServerEntry.setStatus('deprecated')
radiusAuthServerIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: radiusAuthServerIndex.setStatus('deprecated')
radiusAuthServerAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthServerAddress.setStatus('deprecated')
radiusAuthClientServerPortNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientServerPortNumber.setStatus('deprecated')
radiusAuthClientRoundTripTime = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 3, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientRoundTripTime.setStatus('deprecated')
radiusAuthClientAccessRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 3, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientAccessRequests.setStatus('deprecated')
radiusAuthClientAccessRetransmissions = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 3, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientAccessRetransmissions.setStatus('deprecated')
radiusAuthClientAccessAccepts = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 3, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientAccessAccepts.setStatus('deprecated')
radiusAuthClientAccessRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 3, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientAccessRejects.setStatus('deprecated')
radiusAuthClientAccessChallenges = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 3, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientAccessChallenges.setStatus('deprecated')
radiusAuthClientMalformedAccessResponses = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 3, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientMalformedAccessResponses.setStatus('deprecated')
radiusAuthClientBadAuthenticators = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 3, 1, 11), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientBadAuthenticators.setStatus('deprecated')
radiusAuthClientPendingRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 3, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientPendingRequests.setStatus('deprecated')
radiusAuthClientTimeouts = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 3, 1, 13), Counter32()).setUnits('timeouts').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientTimeouts.setStatus('deprecated')
radiusAuthClientUnknownTypes = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 3, 1, 14), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientUnknownTypes.setStatus('deprecated')
radiusAuthClientPacketsDropped = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 3, 1, 15), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientPacketsDropped.setStatus('deprecated')
radiusAuthServerExtTable = MibTable((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4), )
if mibBuilder.loadTexts: radiusAuthServerExtTable.setStatus('current')
radiusAuthServerExtEntry = MibTableRow((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1), ).setIndexNames((0, "RADIUS-AUTH-CLIENT-MIB", "radiusAuthServerExtIndex"))
if mibBuilder.loadTexts: radiusAuthServerExtEntry.setStatus('current')
radiusAuthServerExtIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: radiusAuthServerExtIndex.setStatus('current')
radiusAuthServerInetAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthServerInetAddressType.setStatus('current')
radiusAuthServerInetAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthServerInetAddress.setStatus('current')
radiusAuthClientServerInetPortNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1, 4), InetPortNumber().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientServerInetPortNumber.setStatus('current')
radiusAuthClientExtRoundTripTime = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientExtRoundTripTime.setStatus('current')
radiusAuthClientExtAccessRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientExtAccessRequests.setStatus('current')
radiusAuthClientExtAccessRetransmissions = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientExtAccessRetransmissions.setStatus('current')
radiusAuthClientExtAccessAccepts = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientExtAccessAccepts.setStatus('current')
radiusAuthClientExtAccessRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientExtAccessRejects.setStatus('current')
radiusAuthClientExtAccessChallenges = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientExtAccessChallenges.setStatus('current')
radiusAuthClientExtMalformedAccessResponses = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1, 11), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientExtMalformedAccessResponses.setStatus('current')
radiusAuthClientExtBadAuthenticators = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientExtBadAuthenticators.setStatus('current')
radiusAuthClientExtPendingRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1, 13), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientExtPendingRequests.setStatus('current')
radiusAuthClientExtTimeouts = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1, 14), Counter32()).setUnits('timeouts').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientExtTimeouts.setStatus('current')
radiusAuthClientExtUnknownTypes = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1, 15), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientExtUnknownTypes.setStatus('current')
radiusAuthClientExtPacketsDropped = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientExtPacketsDropped.setStatus('current')
radiusAuthClientCounterDiscontinuity = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 1, 2, 1, 1, 4, 1, 17), TimeTicks()).setUnits('centiseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAuthClientCounterDiscontinuity.setStatus('current')
radiusAuthClientMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 67, 1, 2, 2))
radiusAuthClientMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 67, 1, 2, 2, 1))
radiusAuthClientMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 67, 1, 2, 2, 2))
radiusAuthClientMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 67, 1, 2, 2, 1, 1)).setObjects(("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    radiusAuthClientMIBCompliance = radiusAuthClientMIBCompliance.setStatus('deprecated')
radiusAuthClientExtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 67, 1, 2, 2, 1, 2)).setObjects(("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientExtMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    radiusAuthClientExtMIBCompliance = radiusAuthClientExtMIBCompliance.setStatus('current')
radiusAuthClientMIBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 67, 1, 2, 2, 2, 1)).setObjects(("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientIdentifier"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientInvalidServerAddresses"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthServerAddress"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientServerPortNumber"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientRoundTripTime"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientAccessRequests"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientAccessRetransmissions"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientAccessAccepts"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientAccessRejects"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientAccessChallenges"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientMalformedAccessResponses"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientBadAuthenticators"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientPendingRequests"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientTimeouts"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientUnknownTypes"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientPacketsDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    radiusAuthClientMIBGroup = radiusAuthClientMIBGroup.setStatus('deprecated')
radiusAuthClientExtMIBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 67, 1, 2, 2, 2, 2)).setObjects(("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientIdentifier"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientInvalidServerAddresses"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthServerInetAddressType"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthServerInetAddress"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientServerInetPortNumber"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientExtRoundTripTime"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientExtAccessRequests"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientExtAccessRetransmissions"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientExtAccessAccepts"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientExtAccessRejects"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientExtAccessChallenges"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientExtMalformedAccessResponses"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientExtBadAuthenticators"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientExtPendingRequests"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientExtTimeouts"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientExtUnknownTypes"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientExtPacketsDropped"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientCounterDiscontinuity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    radiusAuthClientExtMIBGroup = radiusAuthClientExtMIBGroup.setStatus('current')
mibBuilder.exportSymbols("RADIUS-AUTH-CLIENT-MIB", radiusAuthentication=radiusAuthentication, radiusAuthClientAccessRejects=radiusAuthClientAccessRejects, radiusAuthClientMIBCompliance=radiusAuthClientMIBCompliance, radiusAuthServerIndex=radiusAuthServerIndex, radiusAuthServerTable=radiusAuthServerTable, radiusAuthClientIdentifier=radiusAuthClientIdentifier, radiusAuthClientUnknownTypes=radiusAuthClientUnknownTypes, radiusAuthClientExtAccessAccepts=radiusAuthClientExtAccessAccepts, radiusAuthClientExtBadAuthenticators=radiusAuthClientExtBadAuthenticators, radiusAuthClientAccessRequests=radiusAuthClientAccessRequests, radiusAuthClientTimeouts=radiusAuthClientTimeouts, radiusAuthClientCounterDiscontinuity=radiusAuthClientCounterDiscontinuity, radiusAuthClientBadAuthenticators=radiusAuthClientBadAuthenticators, radiusAuthClientExtAccessRetransmissions=radiusAuthClientExtAccessRetransmissions, radiusAuthClientRoundTripTime=radiusAuthClientRoundTripTime, radiusAuthClientPacketsDropped=radiusAuthClientPacketsDropped, radiusAuthClientPendingRequests=radiusAuthClientPendingRequests, radiusAuthClientExtMIBCompliance=radiusAuthClientExtMIBCompliance, radiusAuthClientMIBGroup=radiusAuthClientMIBGroup, radiusAuthServerExtTable=radiusAuthServerExtTable, radiusAuthClientMalformedAccessResponses=radiusAuthClientMalformedAccessResponses, radiusAuthClientExtUnknownTypes=radiusAuthClientExtUnknownTypes, radiusAuthClientMIBConformance=radiusAuthClientMIBConformance, radiusAuthClientAccessChallenges=radiusAuthClientAccessChallenges, radiusAuthServerInetAddress=radiusAuthServerInetAddress, radiusAuthClientExtAccessRequests=radiusAuthClientExtAccessRequests, radiusAuthClientMIBCompliances=radiusAuthClientMIBCompliances, radiusAuthServerEntry=radiusAuthServerEntry, radiusAuthClientExtPendingRequests=radiusAuthClientExtPendingRequests, radiusAuthClientExtMIBGroup=radiusAuthClientExtMIBGroup, radiusAuthServerAddress=radiusAuthServerAddress, radiusAuthClientExtTimeouts=radiusAuthClientExtTimeouts, radiusAuthClient=radiusAuthClient, radiusAuthClientAccessAccepts=radiusAuthClientAccessAccepts, radiusAuthServerExtEntry=radiusAuthServerExtEntry, radiusAuthClientServerPortNumber=radiusAuthClientServerPortNumber, radiusAuthServerInetAddressType=radiusAuthServerInetAddressType, radiusMIB=radiusMIB, radiusAuthClientExtRoundTripTime=radiusAuthClientExtRoundTripTime, PYSNMP_MODULE_ID=radiusAuthClientMIB, radiusAuthClientExtAccessRejects=radiusAuthClientExtAccessRejects, radiusAuthClientExtAccessChallenges=radiusAuthClientExtAccessChallenges, radiusAuthServerExtIndex=radiusAuthServerExtIndex, radiusAuthClientMIBGroups=radiusAuthClientMIBGroups, radiusAuthClientExtMalformedAccessResponses=radiusAuthClientExtMalformedAccessResponses, radiusAuthClientMIB=radiusAuthClientMIB, radiusAuthClientExtPacketsDropped=radiusAuthClientExtPacketsDropped, radiusAuthClientServerInetPortNumber=radiusAuthClientServerInetPortNumber, radiusAuthClientMIBObjects=radiusAuthClientMIBObjects, radiusAuthClientInvalidServerAddresses=radiusAuthClientInvalidServerAddresses, radiusAuthClientAccessRetransmissions=radiusAuthClientAccessRetransmissions)
