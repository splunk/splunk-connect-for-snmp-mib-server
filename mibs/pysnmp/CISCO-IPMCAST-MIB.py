#
# PySNMP MIB module CISCO-IPMCAST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IPMCAST-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:45:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
igmpInterfaceEntry, = mibBuilder.importSymbols("IGMP-MIB", "igmpInterfaceEntry")
OwnerString, = mibBuilder.importSymbols("RFC1271-MIB", "OwnerString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Integer32, Gauge32, ObjectIdentity, Unsigned32, Counter32, TimeTicks, iso, Bits, ModuleIdentity, MibIdentifier, Counter64, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Integer32", "Gauge32", "ObjectIdentity", "Unsigned32", "Counter32", "TimeTicks", "iso", "Bits", "ModuleIdentity", "MibIdentifier", "Counter64", "IpAddress")
DisplayString, RowStatus, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TruthValue")
ciscoMcastMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 4))
if mibBuilder.loadTexts: ciscoMcastMIB.setLastUpdated('9407301359Z')
if mibBuilder.loadTexts: ciscoMcastMIB.setOrganization('Cisco System Inc.')
ciscoMcastMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 4, 1))
mcastAccess = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 1))
mcastTrace = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 2))
mcastFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 3))
pimRpAccessListTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 1, 1), )
if mibBuilder.loadTexts: pimRpAccessListTable.setStatus('current')
pimRpAccessListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-IPMCAST-MIB", "pimRpAccessListRP"))
if mibBuilder.loadTexts: pimRpAccessListEntry.setStatus('current')
pimRpAccessListRP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 1, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: pimRpAccessListRP.setStatus('current')
pimRpAccessListNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimRpAccessListNumber.setStatus('current')
pimRpAccessListStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimRpAccessListStatus.setStatus('current')
igmpAccessListTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 1, 2), )
if mibBuilder.loadTexts: igmpAccessListTable.setStatus('current')
igmpAccessListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 1, 2, 1), )
igmpInterfaceEntry.registerAugmentions(("CISCO-IPMCAST-MIB", "igmpAccessListEntry"))
igmpAccessListEntry.setIndexNames(*igmpInterfaceEntry.getIndexNames())
if mibBuilder.loadTexts: igmpAccessListEntry.setStatus('current')
igmpAccessListNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpAccessListNumber.setStatus('current')
mcastTraceRequest = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 2, 1))
mcastTraceResponse = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 2, 2))
mrbranchState = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mrbranchState.setStatus('current')
mrbranchGroup = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mrbranchGroup.setStatus('current')
mrbranchBranch = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mrbranchBranch.setStatus('current')
mrbranchTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 2, 1, 4), Integer32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: mrbranchTimeout.setStatus('current')
mrbranchRequestor = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 2, 1, 5), OwnerString()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: mrbranchRequestor.setStatus('current')
mrbranchResponseTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 2, 2, 1), )
if mibBuilder.loadTexts: mrbranchResponseTable.setStatus('current')
mrbranchResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 2, 2, 1, 1), ).setIndexNames((0, "CISCO-IPMCAST-MIB", "mrbranchResponseResponder"))
if mibBuilder.loadTexts: mrbranchResponseEntry.setStatus('current')
mrbranchResponseResponder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 2, 2, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: mrbranchResponseResponder.setStatus('current')
mrbranchResponseRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 2, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mrbranchResponseRtt.setStatus('current')
mrbranchResponseRPF = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 2, 2, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mrbranchResponseRPF.setStatus('current')
mrbranchInterfaceListTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 2, 2, 2), )
if mibBuilder.loadTexts: mrbranchInterfaceListTable.setStatus('current')
mrbranchInterfaceListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 2, 2, 2, 1), ).setIndexNames((0, "CISCO-IPMCAST-MIB", "mrbranchResponseResponder"), (0, "CISCO-IPMCAST-MIB", "mrbranchInterfaceListAddress"))
if mibBuilder.loadTexts: mrbranchInterfaceListEntry.setStatus('current')
mrbranchInterfaceListAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 2, 2, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mrbranchInterfaceListAddress.setStatus('current')
mrbranchInterfaceListNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 2, 2, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mrbranchInterfaceListNetMask.setStatus('current')
igmpConditionalFilteringEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 3, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpConditionalFilteringEnable.setStatus('current')
igmpMemberReportTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 3, 2), Integer32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpMemberReportTimeout.setStatus('current')
igmpCondFilterIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 3, 3), )
if mibBuilder.loadTexts: igmpCondFilterIfTable.setStatus('current')
igmpCondFilterIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 3, 3, 1), ).setIndexNames((0, "CISCO-IPMCAST-MIB", "igmpCondFilterIfIndex"))
if mibBuilder.loadTexts: igmpCondFilterIfEntry.setStatus('current')
igmpCondFilterIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 3, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: igmpCondFilterIfIndex.setStatus('current')
igmpCondFilterIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("routerPresent", 1), ("noRouter", 2), ("dynamic", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpCondFilterIfStatus.setStatus('current')
igmpCondFilterIfRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 3, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpCondFilterIfRouter.setStatus('current')
igmpCondFilterMcastTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 3, 4), )
if mibBuilder.loadTexts: igmpCondFilterMcastTable.setStatus('current')
igmpCondFilterMcastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 3, 4, 1), ).setIndexNames((0, "CISCO-IPMCAST-MIB", "igmpCondFilterMcastIfIndex"), (0, "CISCO-IPMCAST-MIB", "igmpCondFilterMcastAddress"))
if mibBuilder.loadTexts: igmpCondFilterMcastEntry.setStatus('current')
igmpCondFilterMcastIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 3, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: igmpCondFilterMcastIfIndex.setStatus('current')
igmpCondFilterMcastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 3, 4, 1, 2), IpAddress())
if mibBuilder.loadTexts: igmpCondFilterMcastAddress.setStatus('current')
igmpCondFilterMcastMember = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 3, 4, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: igmpCondFilterMcastMember.setStatus('current')
igmpCondFilterMcastInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 3, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpCondFilterMcastInPkts.setStatus('current')
igmpCondFilterMcastOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 3, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpCondFilterMcastOutPkts.setStatus('current')
igmpCondFilterMcastStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 4, 1, 3, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: igmpCondFilterMcastStatus.setStatus('current')
ciscoMcastMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 4, 2))
ciscoMcastMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 4, 2, 1))
ciscoMcastMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 4, 2, 2))
ciscoMcastMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 4, 2, 1, 1)).setObjects(("CISCO-IPMCAST-MIB", "ciscoMcastAccessMIBGroup"), ("CISCO-IPMCAST-MIB", "ciscoMrbranchMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMcastMIBCompliance = ciscoMcastMIBCompliance.setStatus('current')
ciscoMcastCondFilterMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 4, 2, 1, 2)).setObjects(("CISCO-IPMCAST-MIB", "ciscoMcastFilterMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMcastCondFilterMIBCompliance = ciscoMcastCondFilterMIBCompliance.setStatus('current')
ciscoMcastAccessMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 4, 2, 2, 1)).setObjects(("CISCO-IPMCAST-MIB", "pimRpAccessListNumber"), ("CISCO-IPMCAST-MIB", "pimRpAccessListStatus"), ("CISCO-IPMCAST-MIB", "igmpAccessListNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMcastAccessMIBGroup = ciscoMcastAccessMIBGroup.setStatus('current')
ciscoMrbranchMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 4, 2, 2, 2)).setObjects(("CISCO-IPMCAST-MIB", "mrbranchState"), ("CISCO-IPMCAST-MIB", "mrbranchGroup"), ("CISCO-IPMCAST-MIB", "mrbranchBranch"), ("CISCO-IPMCAST-MIB", "mrbranchTimeout"), ("CISCO-IPMCAST-MIB", "mrbranchRequestor"), ("CISCO-IPMCAST-MIB", "mrbranchResponseRtt"), ("CISCO-IPMCAST-MIB", "mrbranchResponseRPF"), ("CISCO-IPMCAST-MIB", "mrbranchInterfaceListNetMask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMrbranchMIBGroup = ciscoMrbranchMIBGroup.setStatus('current')
ciscoMcastFilterMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 4, 2, 2, 3)).setObjects(("CISCO-IPMCAST-MIB", "igmpConditionalFilteringEnable"), ("CISCO-IPMCAST-MIB", "igmpMemberReportTimeout"), ("CISCO-IPMCAST-MIB", "igmpCondFilterIfStatus"), ("CISCO-IPMCAST-MIB", "igmpCondFilterIfRouter"), ("CISCO-IPMCAST-MIB", "igmpCondFilterMcastMember"), ("CISCO-IPMCAST-MIB", "igmpCondFilterMcastInPkts"), ("CISCO-IPMCAST-MIB", "igmpCondFilterMcastOutPkts"), ("CISCO-IPMCAST-MIB", "igmpCondFilterMcastStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMcastFilterMIBGroup = ciscoMcastFilterMIBGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-IPMCAST-MIB", igmpCondFilterIfTable=igmpCondFilterIfTable, pimRpAccessListStatus=pimRpAccessListStatus, ciscoMcastMIBConformance=ciscoMcastMIBConformance, mrbranchResponseRtt=mrbranchResponseRtt, igmpCondFilterMcastMember=igmpCondFilterMcastMember, pimRpAccessListNumber=pimRpAccessListNumber, mrbranchState=mrbranchState, igmpCondFilterIfIndex=igmpCondFilterIfIndex, ciscoMcastMIB=ciscoMcastMIB, mrbranchInterfaceListTable=mrbranchInterfaceListTable, mrbranchBranch=mrbranchBranch, mrbranchResponseTable=mrbranchResponseTable, mrbranchInterfaceListAddress=mrbranchInterfaceListAddress, mrbranchGroup=mrbranchGroup, igmpCondFilterIfStatus=igmpCondFilterIfStatus, mrbranchInterfaceListNetMask=mrbranchInterfaceListNetMask, igmpCondFilterIfRouter=igmpCondFilterIfRouter, igmpCondFilterMcastTable=igmpCondFilterMcastTable, ciscoMcastFilterMIBGroup=ciscoMcastFilterMIBGroup, ciscoMcastMIBCompliances=ciscoMcastMIBCompliances, igmpCondFilterMcastStatus=igmpCondFilterMcastStatus, pimRpAccessListRP=pimRpAccessListRP, igmpCondFilterIfEntry=igmpCondFilterIfEntry, igmpAccessListEntry=igmpAccessListEntry, pimRpAccessListTable=pimRpAccessListTable, igmpCondFilterMcastOutPkts=igmpCondFilterMcastOutPkts, ciscoMcastMIBGroups=ciscoMcastMIBGroups, mcastAccess=mcastAccess, PYSNMP_MODULE_ID=ciscoMcastMIB, mrbranchInterfaceListEntry=mrbranchInterfaceListEntry, igmpCondFilterMcastIfIndex=igmpCondFilterMcastIfIndex, mcastFilter=mcastFilter, igmpMemberReportTimeout=igmpMemberReportTimeout, pimRpAccessListEntry=pimRpAccessListEntry, ciscoMcastAccessMIBGroup=ciscoMcastAccessMIBGroup, igmpCondFilterMcastInPkts=igmpCondFilterMcastInPkts, igmpConditionalFilteringEnable=igmpConditionalFilteringEnable, igmpAccessListNumber=igmpAccessListNumber, mrbranchResponseEntry=mrbranchResponseEntry, ciscoMrbranchMIBGroup=ciscoMrbranchMIBGroup, ciscoMcastMIBObjects=ciscoMcastMIBObjects, mrbranchRequestor=mrbranchRequestor, mcastTraceRequest=mcastTraceRequest, mcastTrace=mcastTrace, mrbranchTimeout=mrbranchTimeout, mrbranchResponseResponder=mrbranchResponseResponder, mrbranchResponseRPF=mrbranchResponseRPF, igmpCondFilterMcastAddress=igmpCondFilterMcastAddress, ciscoMcastMIBCompliance=ciscoMcastMIBCompliance, igmpAccessListTable=igmpAccessListTable, ciscoMcastCondFilterMIBCompliance=ciscoMcastCondFilterMIBCompliance, igmpCondFilterMcastEntry=igmpCondFilterMcastEntry, mcastTraceResponse=mcastTraceResponse)
