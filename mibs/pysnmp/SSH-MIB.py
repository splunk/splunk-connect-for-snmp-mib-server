#
# PySNMP MIB module SSH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SSH-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:02:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ObjectIdentity, IpAddress, Unsigned32, MibIdentifier, iso, ModuleIdentity, Gauge32, NotificationType, Counter64, TimeTicks, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ObjectIdentity", "IpAddress", "Unsigned32", "MibIdentifier", "iso", "ModuleIdentity", "Gauge32", "NotificationType", "Counter64", "TimeTicks", "Bits", "Counter32")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
privateMgmt, = mibBuilder.importSymbols("SWPRIMGMT-MIB", "privateMgmt")
swSSHMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5))
if mibBuilder.loadTexts: swSSHMIB.setLastUpdated('9911220000Z')
if mibBuilder.loadTexts: swSSHMIB.setOrganization('Working Group')
swSSHMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 1))
swSSHAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHAdmin.setStatus('current')
swSSHMaxConnections = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHMaxConnections.setStatus('current')
swSSHConnectionTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHConnectionTimeout.setStatus('current')
swSSHMaxAuthFailAttempts = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHMaxAuthFailAttempts.setStatus('current')
swSSHSessionKeyRekeying = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 10, 30, 60))).clone(namedValues=NamedValues(("never", 0), ("ten-min", 10), ("thirty-min", 30), ("sixty-min", 60)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHSessionKeyRekeying.setStatus('current')
swSSHPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHPortNumber.setStatus('current')
swSSHRegenerateHostKey = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("active", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHRegenerateHostKey.setStatus('current')
swSSHCtrlAlgGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2))
swSSHEncryptAlgCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 1))
swSSHEncryptAlg3DESAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHEncryptAlg3DESAdmin.setStatus('current')
swSSHEncryptAlgBlowfishAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHEncryptAlgBlowfishAdmin.setStatus('current')
swSSHEncryptAlgAES128Admin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHEncryptAlgAES128Admin.setStatus('current')
swSSHEncryptAlgAES192Admin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHEncryptAlgAES192Admin.setStatus('current')
swSSHEncryptAlgAES256Admin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHEncryptAlgAES256Admin.setStatus('current')
swSSHEncryptAlgArcfourAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHEncryptAlgArcfourAdmin.setStatus('current')
swSSHEncryptAlgCAST128Admin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHEncryptAlgCAST128Admin.setStatus('current')
swSSHEncryptAlgTwofish128Admin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHEncryptAlgTwofish128Admin.setStatus('current')
swSSHEncryptAlgTwofish192Admin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHEncryptAlgTwofish192Admin.setStatus('current')
swSSHEncryptAlgTwofish256Admin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHEncryptAlgTwofish256Admin.setStatus('current')
swSSHAuthenMethodCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 2))
swSSHAuthenMethodPasswdAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHAuthenMethodPasswdAdmin.setStatus('current')
swSSHAuthenMethodPubKeyAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHAuthenMethodPubKeyAdmin.setStatus('current')
swSSHAuthenMethodHostBaseAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHAuthenMethodHostBaseAdmin.setStatus('current')
swSSHInteAlgCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 3))
swSSHInteAlgSHA1Admin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHInteAlgSHA1Admin.setStatus('current')
swSSHInteAlgMD5Admin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHInteAlgMD5Admin.setStatus('current')
swSSHPubKeyAlgCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 4))
swSSHPubKeyAlgDSAAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHPubKeyAlgDSAAdmin.setStatus('current')
swSSHPubKeyAlgRSAAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 2, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHPubKeyAlgRSAAdmin.setStatus('current')
swSSHUserCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 3), )
if mibBuilder.loadTexts: swSSHUserCtrlTable.setStatus('current')
swSSHUserCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 3, 1), ).setIndexNames((0, "SSH-MIB", "swSSHUserCtrlUserName"))
if mibBuilder.loadTexts: swSSHUserCtrlEntry.setStatus('current')
swSSHUserCtrlUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSSHUserCtrlUserName.setStatus('current')
swSSHUserCtrlAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("publickey", 2), ("password", 3), ("hostbased", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHUserCtrlAuthMode.setStatus('current')
swSSHUserCtrlHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHUserCtrlHostName.setStatus('current')
swSSHUserCtrlHostIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2272, 1, 201, 1, 5, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSHUserCtrlHostIp.setStatus('current')
mibBuilder.exportSymbols("SSH-MIB", swSSHAuthenMethodPasswdAdmin=swSSHAuthenMethodPasswdAdmin, swSSHAuthenMethodPubKeyAdmin=swSSHAuthenMethodPubKeyAdmin, swSSHUserCtrlHostIp=swSSHUserCtrlHostIp, swSSHAdmin=swSSHAdmin, swSSHEncryptAlgTwofish128Admin=swSSHEncryptAlgTwofish128Admin, swSSHEncryptAlgAES128Admin=swSSHEncryptAlgAES128Admin, swSSHInteAlgCtrl=swSSHInteAlgCtrl, swSSHEncryptAlgTwofish192Admin=swSSHEncryptAlgTwofish192Admin, swSSHEncryptAlgTwofish256Admin=swSSHEncryptAlgTwofish256Admin, swSSHMgmt=swSSHMgmt, swSSHUserCtrlHostName=swSSHUserCtrlHostName, swSSHEncryptAlgAES192Admin=swSSHEncryptAlgAES192Admin, swSSHUserCtrlTable=swSSHUserCtrlTable, swSSHEncryptAlgAES256Admin=swSSHEncryptAlgAES256Admin, swSSHEncryptAlgCtrl=swSSHEncryptAlgCtrl, swSSHConnectionTimeout=swSSHConnectionTimeout, swSSHMaxAuthFailAttempts=swSSHMaxAuthFailAttempts, swSSHMaxConnections=swSSHMaxConnections, swSSHMIB=swSSHMIB, swSSHEncryptAlgBlowfishAdmin=swSSHEncryptAlgBlowfishAdmin, swSSHEncryptAlgCAST128Admin=swSSHEncryptAlgCAST128Admin, swSSHCtrlAlgGroup=swSSHCtrlAlgGroup, swSSHPubKeyAlgCtrl=swSSHPubKeyAlgCtrl, swSSHAuthenMethodCtrl=swSSHAuthenMethodCtrl, swSSHUserCtrlUserName=swSSHUserCtrlUserName, swSSHEncryptAlgArcfourAdmin=swSSHEncryptAlgArcfourAdmin, swSSHUserCtrlEntry=swSSHUserCtrlEntry, swSSHSessionKeyRekeying=swSSHSessionKeyRekeying, swSSHPubKeyAlgRSAAdmin=swSSHPubKeyAlgRSAAdmin, swSSHAuthenMethodHostBaseAdmin=swSSHAuthenMethodHostBaseAdmin, swSSHInteAlgMD5Admin=swSSHInteAlgMD5Admin, swSSHUserCtrlAuthMode=swSSHUserCtrlAuthMode, swSSHEncryptAlg3DESAdmin=swSSHEncryptAlg3DESAdmin, swSSHRegenerateHostKey=swSSHRegenerateHostKey, PYSNMP_MODULE_ID=swSSHMIB, swSSHPortNumber=swSSHPortNumber, swSSHPubKeyAlgDSAAdmin=swSSHPubKeyAlgDSAAdmin, swSSHInteAlgSHA1Admin=swSSHInteAlgSHA1Admin)
