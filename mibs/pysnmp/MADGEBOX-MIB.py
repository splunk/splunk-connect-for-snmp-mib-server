#
# PySNMP MIB module MADGEBOX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MADGEBOX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:59:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, iso, ModuleIdentity, Counter32, Gauge32, Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, NotificationType, Bits, Counter64, TimeTicks, Integer32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "ModuleIdentity", "Counter32", "Gauge32", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "NotificationType", "Bits", "Counter64", "TimeTicks", "Integer32", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

madge = MibIdentifier((1, 3, 6, 1, 4, 1, 494))
madgeBox = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 10))
madgeConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 10, 1))
madgeSecure = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 10, 2))
madgeDownload = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 10, 3))
madgeIP = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 10, 4))
madgeVersion = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 10, 5))
madgeTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 10, 6))
madgeUpload = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 10, 7))
madgeConfigIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeConfigIPAddress.setStatus('mandatory')
madgeConfigIPGateway = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeConfigIPGateway.setStatus('mandatory')
madgeConfigIPSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeConfigIPSubnetMask.setStatus('mandatory')
madgeConfigSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeConfigSerialNumber.setStatus('mandatory')
madgeConfigMCodeVersion = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeConfigMCodeVersion.setStatus('mandatory')
madgeConfigBCodeVersion = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeConfigBCodeVersion.setStatus('mandatory')
madgeConfigMCodeFilename = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeConfigMCodeFilename.setStatus('mandatory')
madgeConfigDeviceHealth = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("warning", 2), ("degraded", 3), ("critical", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeConfigDeviceHealth.setStatus('mandatory')
madgeConfigAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("normal", 1), ("reboot", 2), ("identify", 3), ("test", 4), ("erase-config", 5), ("erase-flash", 6), ("tftp-ip", 7), ("tftp-ipx", 8), ("rpl-ipx", 9), ("rpl-llc", 10), ("halt", 11), ("up-tftp-ip", 12), ("up-tftp-ipx", 13), ("snapshot", 14)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeConfigAdminStatus.setStatus('mandatory')
madgeConfigPassword = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeConfigPassword.setStatus('mandatory')
madgeConfigLinkTest = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeConfigLinkTest.setStatus('mandatory')
madgeConfigOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("normal", 1), ("reboot", 2), ("identify", 3), ("test", 4), ("downloading", 5), ("uploading", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeConfigOperStatus.setStatus('mandatory')
madgeConfigEraseFlashVersion = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeConfigEraseFlashVersion.setStatus('mandatory')
madgeConfigDefaultFlashVersion = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeConfigDefaultFlashVersion.setStatus('mandatory')
madgeConfigReadPassword = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeConfigReadPassword.setStatus('optional')
madgeConfigSnapshotName = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeConfigSnapshotName.setStatus('mandatory')
madgeConfigDefaultSnapshot = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeConfigDefaultSnapshot.setStatus('mandatory')
madgeConfigPasswordTableSize = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeConfigPasswordTableSize.setStatus('mandatory')
madgeConfigPasswordTable = MibTable((1, 3, 6, 1, 4, 1, 494, 10, 1, 21), )
if mibBuilder.loadTexts: madgeConfigPasswordTable.setStatus('mandatory')
madgeConfigPasswordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 494, 10, 1, 21, 1), ).setIndexNames((0, "MADGEBOX-MIB", "madgeConfigPasswordIndex"))
if mibBuilder.loadTexts: madgeConfigPasswordEntry.setStatus('mandatory')
madgeConfigPasswordIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 1, 21, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeConfigPasswordIndex.setStatus('mandatory')
madgeConfigPasswordRead = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 1, 21, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeConfigPasswordRead.setStatus('mandatory')
madgeConfigPasswordWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 1, 21, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeConfigPasswordWrite.setStatus('mandatory')
madgeConfigPasswordComment = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 1, 21, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeConfigPasswordComment.setStatus('mandatory')
madgeSecureCurrentTableSize = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeSecureCurrentTableSize.setStatus('mandatory')
madgeSecureCurrentTimeout = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeSecureCurrentTimeout.setStatus('mandatory')
madgeSecureCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 494, 10, 2, 3), )
if mibBuilder.loadTexts: madgeSecureCurrentTable.setStatus('mandatory')
madgeSecureCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 494, 10, 2, 3, 1), ).setIndexNames((0, "MADGEBOX-MIB", "madgeSecureCurrentIndex"))
if mibBuilder.loadTexts: madgeSecureCurrentEntry.setStatus('mandatory')
madgeSecureCurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeSecureCurrentIndex.setStatus('mandatory')
madgeSecureCurrentType = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("not-used", 1), ("ip-address", 2), ("ipx-address", 3), ("mac-address", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeSecureCurrentType.setStatus('mandatory')
madgeSecureCurrentAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 2, 3, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeSecureCurrentAddress.setStatus('mandatory')
madgeSecureCurrentUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 2, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeSecureCurrentUpdateTime.setStatus('mandatory')
madgeSecureCurrentIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 2, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeSecureCurrentIPAddress.setStatus('mandatory')
madgeSecureAllowedEnabled = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeSecureAllowedEnabled.setStatus('mandatory')
madgeSecureAllowedTableSize = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeSecureAllowedTableSize.setStatus('mandatory')
madgeSecureAllowedTable = MibTable((1, 3, 6, 1, 4, 1, 494, 10, 2, 6), )
if mibBuilder.loadTexts: madgeSecureAllowedTable.setStatus('mandatory')
madgeSecureAllowedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 494, 10, 2, 6, 1), ).setIndexNames((0, "MADGEBOX-MIB", "madgeSecureAllowedIndex"))
if mibBuilder.loadTexts: madgeSecureAllowedEntry.setStatus('mandatory')
madgeSecureAllowedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 2, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeSecureAllowedIndex.setStatus('mandatory')
madgeSecureAllowedType = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("not-used", 1), ("ip-address", 2), ("ipx-address", 3), ("mac-address", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeSecureAllowedType.setStatus('mandatory')
madgeSecureAllowedAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 2, 6, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeSecureAllowedAddress.setStatus('mandatory')
madgeSecureAllowedIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 2, 6, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeSecureAllowedIPAddress.setStatus('mandatory')
madgeSecureTrapDestEnabled = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeSecureTrapDestEnabled.setStatus('mandatory')
madgeSecureTrapDestTableSize = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeSecureTrapDestTableSize.setStatus('mandatory')
madgeSecureTrapDestTable = MibTable((1, 3, 6, 1, 4, 1, 494, 10, 2, 9), )
if mibBuilder.loadTexts: madgeSecureTrapDestTable.setStatus('mandatory')
madgeSecureTrapDestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 494, 10, 2, 9, 1), ).setIndexNames((0, "MADGEBOX-MIB", "madgeSecureTrapDestIndex"))
if mibBuilder.loadTexts: madgeSecureTrapDestEntry.setStatus('mandatory')
madgeSecureTrapDestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 2, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeSecureTrapDestIndex.setStatus('mandatory')
madgeSecureTrapDestType = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 2, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("not-used", 1), ("ip-address", 2), ("ipx-address", 3), ("mac-address", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeSecureTrapDestType.setStatus('mandatory')
madgeSecureTrapDestAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 2, 9, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeSecureTrapDestAddress.setStatus('mandatory')
madgeSecureTrapDestIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 2, 9, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeSecureTrapDestIPAddress.setStatus('mandatory')
madgeDownloadIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 3, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeDownloadIPAddress.setStatus('mandatory')
madgeDownloadIPGateway = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 3, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeDownloadIPGateway.setStatus('mandatory')
madgeDownloadIPXAddress = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 3, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeDownloadIPXAddress.setStatus('mandatory')
madgeDownloadNodeAddress = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 3, 4), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeDownloadNodeAddress.setStatus('mandatory')
madgeDownloadFileName = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 3, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeDownloadFileName.setStatus('mandatory')
madgeDownloadDestination = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 3, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeDownloadDestination.setStatus('mandatory')
madgeDownloadState = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("idle", 1), ("tftp-waiting-ip", 2), ("tftp-running-ip", 3), ("tftp-waiting-ipx", 4), ("tftp-running-ipx", 5), ("waiting-xmodem", 6), ("running-xmodem", 7), ("rpl-waiting-ipx", 8), ("rpl-running-ipx", 9), ("rpl-waiting-llc", 10), ("rpl-running-llc", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeDownloadState.setStatus('mandatory')
madgeDownloadFailureCode = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 100, 101, 102, 103, 104, 105, 106, 107))).clone(namedValues=NamedValues(("no-error", 1), ("config-error", 2), ("busy", 3), ("timeout", 4), ("cancelled", 5), ("incompatible-file", 6), ("file-too-big", 7), ("protocol-error", 8), ("flash-write-error", 9), ("undefined-error", 100), ("file-not-found", 101), ("access-violation", 102), ("out-of-memory", 103), ("illegal-operation", 104), ("unknown-transfer-id", 105), ("file-already-exists", 106), ("no-such-user", 107)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeDownloadFailureCode.setStatus('mandatory')
madgeDownloadStatusText = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 3, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeDownloadStatusText.setStatus('mandatory')
madgeDownloadSize = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeDownloadSize.setStatus('mandatory')
madgeIPCurrentAddress = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 4, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeIPCurrentAddress.setStatus('mandatory')
madgeIPCurrentGateway = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 4, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeIPCurrentGateway.setStatus('mandatory')
madgeIPCurrentSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 4, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeIPCurrentSubnetMask.setStatus('mandatory')
madgeIPDiscoveryMethod = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("not-discovered", 1), ("via-config", 2), ("via-bootp", 3), ("via-rarp", 4), ("via-dhcp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeIPDiscoveryMethod.setStatus('mandatory')
madgeIPBootpEnabled = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("not-supported", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeIPBootpEnabled.setStatus('mandatory')
madgeIPRarpEnabled = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("not-supported", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeIPRarpEnabled.setStatus('mandatory')
madgeIPDHCPEnabled = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("not-supported", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeIPDHCPEnabled.setStatus('mandatory')
madgeVersionTable = MibTable((1, 3, 6, 1, 4, 1, 494, 10, 5, 1), )
if mibBuilder.loadTexts: madgeVersionTable.setStatus('mandatory')
madgeVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 494, 10, 5, 1, 1), ).setIndexNames((0, "MADGEBOX-MIB", "madgeVersionIndex"))
if mibBuilder.loadTexts: madgeVersionEntry.setStatus('mandatory')
madgeVersionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 5, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: madgeVersionIndex.setStatus('mandatory')
madgeVersionDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeVersionDescription.setStatus('mandatory')
madgeVersionLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 5, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeVersionLocation.setStatus('mandatory')
madgeVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 5, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeVersionNumber.setStatus('mandatory')
madgeVersionType = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 20))).clone(namedValues=NamedValues(("flash", 1), ("boot-fixed", 2), ("boot-updateable", 3), ("hardware-fixed", 4), ("hardware-upgradeable", 5), ("other", 6), ("sw-running", 7), ("sw-config", 8), ("sw-image", 9), ("unknown", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeVersionType.setStatus('mandatory')
madgeVersionCount = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeVersionCount.setStatus('mandatory')
madgeTrapTable = MibTable((1, 3, 6, 1, 4, 1, 494, 10, 6, 1), )
if mibBuilder.loadTexts: madgeTrapTable.setStatus('mandatory')
madgeTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 494, 10, 6, 1, 1), ).setIndexNames((0, "MADGEBOX-MIB", "madgeTrapIndex"))
if mibBuilder.loadTexts: madgeTrapEntry.setStatus('mandatory')
madgeTrapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 6, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: madgeTrapIndex.setStatus('mandatory')
madgeTrapDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 6, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeTrapDescription.setStatus('mandatory')
madgeTrapEnterprise = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 6, 1, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeTrapEnterprise.setStatus('mandatory')
madgeTrapSpecificTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 6, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeTrapSpecificTrap.setStatus('mandatory')
madgeTrapSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("critical", 2), ("major", 3), ("minor", 4), ("warning", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeTrapSeverity.setStatus('mandatory')
madgeTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeTrapEnable.setStatus('mandatory')
madgeTrapEnableDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeTrapEnableDefault.setStatus('mandatory')
madgeTrapCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 494, 10, 6, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeTrapCounter.setStatus('mandatory')
madgeTrapEnableAll = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeTrapEnableAll.setStatus('mandatory')
madgeTrapResetCounters = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("reset", 2), ("resetting", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeTrapResetCounters.setStatus('mandatory')
madgeTrapDefaultAll = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("reset", 2), ("resetting", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeTrapDefaultAll.setStatus('mandatory')
madgeTrapMessage = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 6, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeTrapMessage.setStatus('optional')
madgeUploadIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 7, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeUploadIPAddress.setStatus('mandatory')
madgeUploadIPGateway = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 7, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeUploadIPGateway.setStatus('mandatory')
madgeUploadIPXAddress = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 7, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeUploadIPXAddress.setStatus('mandatory')
madgeUploadFileName = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 7, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeUploadFileName.setStatus('mandatory')
madgeUploadSource = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 7, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeUploadSource.setStatus('mandatory')
madgeUploadState = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 7, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("idle", 1), ("tftp-waiting-ip", 2), ("tftp-running-ip", 3), ("tftp-waiting-ipx", 4), ("tftp-running-ipx", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeUploadState.setStatus('mandatory')
madgeUploadFailureCode = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 7, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 100, 101, 102, 103, 104, 105, 106, 107))).clone(namedValues=NamedValues(("no-error", 1), ("config-error", 2), ("busy", 3), ("timeout", 4), ("cancelled", 5), ("incompatible-file", 6), ("file-too-big", 7), ("protocol-error", 8), ("flash-write-error", 9), ("undefined-error", 100), ("file-not-found", 101), ("access-violation", 102), ("out-of-memory", 103), ("illegal-operation", 104), ("unknown-transfer-id", 105), ("file-already-exists", 106), ("no-such-user", 107)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeUploadFailureCode.setStatus('mandatory')
madgeUploadStatusText = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 7, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeUploadStatusText.setStatus('mandatory')
madgeUploadSize = MibScalar((1, 3, 6, 1, 4, 1, 494, 10, 7, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeUploadSize.setStatus('mandatory')
mibBuilder.exportSymbols("MADGEBOX-MIB", madgeSecure=madgeSecure, madgeConfigSnapshotName=madgeConfigSnapshotName, madgeTrapEnterprise=madgeTrapEnterprise, madgeIPDHCPEnabled=madgeIPDHCPEnabled, madgeTrapEnableAll=madgeTrapEnableAll, madgeTrapSpecificTrap=madgeTrapSpecificTrap, madgeTrapEnable=madgeTrapEnable, madgeSecureCurrentTableSize=madgeSecureCurrentTableSize, madgeTrapEntry=madgeTrapEntry, madgeTrapResetCounters=madgeTrapResetCounters, madgeDownloadSize=madgeDownloadSize, madgeDownloadState=madgeDownloadState, madgeVersionDescription=madgeVersionDescription, madgeConfigOperStatus=madgeConfigOperStatus, madgeSecureCurrentType=madgeSecureCurrentType, madgeConfigPasswordIndex=madgeConfigPasswordIndex, madgeSecureCurrentUpdateTime=madgeSecureCurrentUpdateTime, madgeIPBootpEnabled=madgeIPBootpEnabled, madgeSecureTrapDestEntry=madgeSecureTrapDestEntry, madgeUploadSource=madgeUploadSource, madgeSecureAllowedEnabled=madgeSecureAllowedEnabled, madgeSecureTrapDestTableSize=madgeSecureTrapDestTableSize, madgeConfigIPGateway=madgeConfigIPGateway, madgeConfigPasswordTable=madgeConfigPasswordTable, madgeVersionCount=madgeVersionCount, madgeVersionType=madgeVersionType, madgeSecureAllowedEntry=madgeSecureAllowedEntry, madgeConfigIPAddress=madgeConfigIPAddress, madgeConfigLinkTest=madgeConfigLinkTest, madgeTrapDefaultAll=madgeTrapDefaultAll, madgeTrapEnableDefault=madgeTrapEnableDefault, madgeIPDiscoveryMethod=madgeIPDiscoveryMethod, madgeUploadFailureCode=madgeUploadFailureCode, madgeConfigDefaultFlashVersion=madgeConfigDefaultFlashVersion, madgeConfigSerialNumber=madgeConfigSerialNumber, madgeSecureAllowedTableSize=madgeSecureAllowedTableSize, madgeIPCurrentAddress=madgeIPCurrentAddress, madgeSecureTrapDestIndex=madgeSecureTrapDestIndex, madgeSecureCurrentIPAddress=madgeSecureCurrentIPAddress, madgeSecureTrapDestTable=madgeSecureTrapDestTable, madgeVersionNumber=madgeVersionNumber, madgeVersionIndex=madgeVersionIndex, madgeUploadFileName=madgeUploadFileName, madgeDownloadIPGateway=madgeDownloadIPGateway, madgeConfigBCodeVersion=madgeConfigBCodeVersion, madgeVersionLocation=madgeVersionLocation, madgeUploadStatusText=madgeUploadStatusText, madgeIPRarpEnabled=madgeIPRarpEnabled, madgeConfigReadPassword=madgeConfigReadPassword, madgeConfigDefaultSnapshot=madgeConfigDefaultSnapshot, madgeSecureTrapDestType=madgeSecureTrapDestType, madgeSecureAllowedIndex=madgeSecureAllowedIndex, madgeDownloadNodeAddress=madgeDownloadNodeAddress, madgeConfigPassword=madgeConfigPassword, madgeTrapDescription=madgeTrapDescription, madgeConfigPasswordEntry=madgeConfigPasswordEntry, madgeIPCurrentSubnetMask=madgeIPCurrentSubnetMask, madgeConfigDeviceHealth=madgeConfigDeviceHealth, madgeDownloadIPAddress=madgeDownloadIPAddress, madgeUploadSize=madgeUploadSize, madgeIPCurrentGateway=madgeIPCurrentGateway, madgeConfigEraseFlashVersion=madgeConfigEraseFlashVersion, madgeTrapCounter=madgeTrapCounter, madgeDownloadStatusText=madgeDownloadStatusText, madgeUploadIPXAddress=madgeUploadIPXAddress, madgeUploadIPGateway=madgeUploadIPGateway, madgeConfigPasswordWrite=madgeConfigPasswordWrite, madgeSecureAllowedIPAddress=madgeSecureAllowedIPAddress, madgeDownloadIPXAddress=madgeDownloadIPXAddress, madgeUploadState=madgeUploadState, madgeConfigPasswordRead=madgeConfigPasswordRead, madgeConfigMCodeVersion=madgeConfigMCodeVersion, madgeSecureCurrentEntry=madgeSecureCurrentEntry, madgeConfigMCodeFilename=madgeConfigMCodeFilename, madgeSecureCurrentTable=madgeSecureCurrentTable, madgeConfigIPSubnetMask=madgeConfigIPSubnetMask, DisplayString=DisplayString, madgeSecureCurrentIndex=madgeSecureCurrentIndex, madgeUploadIPAddress=madgeUploadIPAddress, madgeDownloadFileName=madgeDownloadFileName, madgeVersionTable=madgeVersionTable, madgeSecureCurrentTimeout=madgeSecureCurrentTimeout, madgeSecureTrapDestIPAddress=madgeSecureTrapDestIPAddress, madge=madge, madgeTrapSeverity=madgeTrapSeverity, madgeConfig=madgeConfig, MacAddress=MacAddress, madgeSecureAllowedTable=madgeSecureAllowedTable, madgeTrap=madgeTrap, madgeTrapIndex=madgeTrapIndex, madgeIP=madgeIP, madgeDownloadDestination=madgeDownloadDestination, madgeTrapTable=madgeTrapTable, madgeDownload=madgeDownload, madgeSecureTrapDestEnabled=madgeSecureTrapDestEnabled, madgeTrapMessage=madgeTrapMessage, madgeConfigPasswordTableSize=madgeConfigPasswordTableSize, madgeBox=madgeBox, madgeVersion=madgeVersion, madgeConfigPasswordComment=madgeConfigPasswordComment, madgeVersionEntry=madgeVersionEntry, madgeSecureAllowedType=madgeSecureAllowedType, madgeConfigAdminStatus=madgeConfigAdminStatus, madgeUpload=madgeUpload, madgeDownloadFailureCode=madgeDownloadFailureCode, madgeSecureTrapDestAddress=madgeSecureTrapDestAddress, madgeSecureCurrentAddress=madgeSecureCurrentAddress, madgeSecureAllowedAddress=madgeSecureAllowedAddress)
