#
# PySNMP MIB module NNCGNI00X8-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NNCGNI00X8-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:13:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
nncExtRptr, = mibBuilder.importSymbols("NNCGNI00X1-SMI", "nncExtRptr")
PositionIndex, = mibBuilder.importSymbols("NNCGNI00X4-MIB", "PositionIndex")
PortIndex, = mibBuilder.importSymbols("NNCGNI00X7-MIB", "PortIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Counter64, Gauge32, iso, NotificationType, Bits, ModuleIdentity, IpAddress, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "Gauge32", "iso", "NotificationType", "Bits", "ModuleIdentity", "IpAddress", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter32", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class RptrPortStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("inService", 1), ("forcedIsolate", 2), ("busyOut", 3), ("autoIsolate", 4), ("linkDown", 5))

class RptrIsolationStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("noPartitioning", 1), ("partitionedPort", 2))

nncExtRptrModuleTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 11, 1), )
if mibBuilder.loadTexts: nncExtRptrModuleTable.setStatus('mandatory')
nncExtRptrModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 11, 1, 1), ).setIndexNames((0, "NNCGNI00X8-MIB", "nncExtRptrModulePositionIndex"))
if mibBuilder.loadTexts: nncExtRptrModuleEntry.setStatus('mandatory')
nncExtRptrModulePositionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 11, 1, 1, 1), PositionIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtRptrModulePositionIndex.setStatus('mandatory')
nncExtRptrModuleAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("repeater", 1), ("cascade", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nncExtRptrModuleAdminMode.setStatus('mandatory')
nncExtRptrModuleOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 11, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("repeater", 1), ("cascade", 2), ("notPresent", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtRptrModuleOperMode.setStatus('mandatory')
nncExtRptrModuleStatisticsMask = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nncExtRptrModuleStatisticsMask.setStatus('mandatory')
nncExtRptrPortTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 11, 2), )
if mibBuilder.loadTexts: nncExtRptrPortTable.setStatus('mandatory')
nncExtRptrPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 11, 2, 1), ).setIndexNames((0, "NNCGNI00X8-MIB", "nncExtRptrPortPositionIndex"), (0, "NNCGNI00X8-MIB", "nncExtRptrPortIndex"))
if mibBuilder.loadTexts: nncExtRptrPortEntry.setStatus('mandatory')
nncExtRptrPortPositionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 11, 2, 1, 1), PositionIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtRptrPortPositionIndex.setStatus('mandatory')
nncExtRptrPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 11, 2, 1, 2), PortIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtRptrPortIndex.setStatus('mandatory')
nncExtRptrPortAlarmEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 11, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nncExtRptrPortAlarmEnable.setStatus('mandatory')
nncExtRptrPortLinkIntegrityLosses = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 11, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtRptrPortLinkIntegrityLosses.setStatus('mandatory')
nncExtRptrPortAutoPartitions = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 11, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtRptrPortAutoPartitions.setStatus('mandatory')
nncExtRptrPortAdminDisables = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 11, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtRptrPortAdminDisables.setStatus('mandatory')
nncExtRptrPortEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 11, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtRptrPortEvents.setStatus('mandatory')
nncExtRptrPortLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 11, 2, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtRptrPortLastChange.setStatus('mandatory')
nncExtRptrPortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 11, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("inService", 1), ("forcedIsolate", 2), ("busyOut", 3), ("autoIsolate", 4), ("linkDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtRptrPortOperStatus.setStatus('mandatory')
nncExtRptrPortIsolation = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 11, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noPartitioning", 1), ("partitionedPort", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nncExtRptrPortIsolation.setStatus('mandatory')
mibBuilder.exportSymbols("NNCGNI00X8-MIB", nncExtRptrModuleAdminMode=nncExtRptrModuleAdminMode, RptrPortStatus=RptrPortStatus, nncExtRptrPortEntry=nncExtRptrPortEntry, nncExtRptrModuleEntry=nncExtRptrModuleEntry, nncExtRptrPortLinkIntegrityLosses=nncExtRptrPortLinkIntegrityLosses, nncExtRptrModuleOperMode=nncExtRptrModuleOperMode, RptrIsolationStatus=RptrIsolationStatus, nncExtRptrPortIsolation=nncExtRptrPortIsolation, nncExtRptrModuleTable=nncExtRptrModuleTable, nncExtRptrPortAutoPartitions=nncExtRptrPortAutoPartitions, nncExtRptrPortAdminDisables=nncExtRptrPortAdminDisables, nncExtRptrPortAlarmEnable=nncExtRptrPortAlarmEnable, nncExtRptrModulePositionIndex=nncExtRptrModulePositionIndex, nncExtRptrPortIndex=nncExtRptrPortIndex, nncExtRptrPortTable=nncExtRptrPortTable, nncExtRptrPortLastChange=nncExtRptrPortLastChange, nncExtRptrModuleStatisticsMask=nncExtRptrModuleStatisticsMask, nncExtRptrPortOperStatus=nncExtRptrPortOperStatus, nncExtRptrPortEvents=nncExtRptrPortEvents, nncExtRptrPortPositionIndex=nncExtRptrPortPositionIndex)
