#
# PySNMP MIB module HP-VLAN-CAR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-SN-MIBS
# Produced by pysmi-0.3.4 at Mon Apr 29 19:23:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
PacketSource, RateLimitType, RateLimitAction = mibBuilder.importSymbols("HP-CAR-MIB", "PacketSource", "RateLimitType", "RateLimitAction")
snVLanCAR, = mibBuilder.importSymbols("HP-SN-SWITCH-GROUP-MIB", "snVLanCAR")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Integer32, Counter32, Counter64, Bits, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32, NotificationType, Unsigned32, ObjectIdentity, MibIdentifier, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Integer32", "Counter32", "Counter64", "Bits", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32", "NotificationType", "Unsigned32", "ObjectIdentity", "MibIdentifier", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
snVLanCARs = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1))
snVLanCARTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1, 1), )
if mibBuilder.loadTexts: snVLanCARTable.setStatus('mandatory')
snVLanCAREntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1, 1, 1), ).setIndexNames((0, "HP-VLAN-CAR-MIB", "snVLanCARVLanId"), (0, "HP-VLAN-CAR-MIB", "snVLanCARDirection"), (0, "HP-VLAN-CAR-MIB", "snVLanCARRowIndex"))
if mibBuilder.loadTexts: snVLanCAREntry.setStatus('mandatory')
snVLanCARVLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snVLanCARVLanId.setStatus('mandatory')
snVLanCARDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1, 1, 1, 2), PacketSource()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snVLanCARDirection.setStatus('mandatory')
snVLanCARRowIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snVLanCARRowIndex.setStatus('mandatory')
snVLanCARType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1, 1, 1, 4), RateLimitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snVLanCARType.setStatus('mandatory')
snVLanCARAccIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snVLanCARAccIdx.setStatus('mandatory')
snVLanCARRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snVLanCARRate.setStatus('mandatory')
snVLanCARLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snVLanCARLimit.setStatus('mandatory')
snVLanCARExtLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snVLanCARExtLimit.setStatus('mandatory')
snVLanCARConformAction = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1, 1, 1, 9), RateLimitAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snVLanCARConformAction.setStatus('mandatory')
snVLanCARExceedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1, 1, 1, 10), RateLimitAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snVLanCARExceedAction.setStatus('mandatory')
snVLanCARStatSwitchedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snVLanCARStatSwitchedPkts.setStatus('mandatory')
snVLanCARStatSwitchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snVLanCARStatSwitchedBytes.setStatus('mandatory')
snVLanCARStatFilteredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snVLanCARStatFilteredPkts.setStatus('mandatory')
snVLanCARStatFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snVLanCARStatFilteredBytes.setStatus('mandatory')
snVLanCARStatCurBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 3, 17, 1, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snVLanCARStatCurBurst.setStatus('mandatory')
mibBuilder.exportSymbols("HP-VLAN-CAR-MIB", snVLanCARAccIdx=snVLanCARAccIdx, snVLanCARDirection=snVLanCARDirection, snVLanCARVLanId=snVLanCARVLanId, snVLanCARLimit=snVLanCARLimit, snVLanCARs=snVLanCARs, snVLanCARTable=snVLanCARTable, snVLanCARRowIndex=snVLanCARRowIndex, snVLanCARConformAction=snVLanCARConformAction, snVLanCARExtLimit=snVLanCARExtLimit, snVLanCARType=snVLanCARType, snVLanCARStatSwitchedBytes=snVLanCARStatSwitchedBytes, snVLanCARStatSwitchedPkts=snVLanCARStatSwitchedPkts, snVLanCARRate=snVLanCARRate, snVLanCARStatFilteredPkts=snVLanCARStatFilteredPkts, snVLanCARStatFilteredBytes=snVLanCARStatFilteredBytes, snVLanCARStatCurBurst=snVLanCARStatCurBurst, snVLanCAREntry=snVLanCAREntry, snVLanCARExceedAction=snVLanCARExceedAction)
