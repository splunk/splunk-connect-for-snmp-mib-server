#
# PySNMP MIB module APPC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APPC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:07:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
snanauMIB, = mibBuilder.importSymbols("SNA-NAU-MIB", "snanauMIB")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, mib_2, Counter32, Integer32, IpAddress, ObjectIdentity, MibIdentifier, Counter64, ModuleIdentity, Unsigned32, iso, Bits, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "mib-2", "Counter32", "Integer32", "IpAddress", "ObjectIdentity", "MibIdentifier", "Counter64", "ModuleIdentity", "Unsigned32", "iso", "Bits", "NotificationType")
InstancePointer, DisplayString, TextualConvention, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "InstancePointer", "DisplayString", "TextualConvention", "DateAndTime")
appcMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 34, 3))
if mibBuilder.loadTexts: appcMIB.setLastUpdated('9512150000Z')
if mibBuilder.loadTexts: appcMIB.setOrganization('IETF SNA NAU MIB Working Group')
appcObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1))
appcGlobal = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 1))
appcLu = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 2))
appcTp = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 3))
appcSession = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 4))
appcConversation = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 5))
appcCPIC = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 6))
class SnaSenseData(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

appcCntrlAdminGroup = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 1))
appcCntrlAdminStat = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notActive", 1), ("active", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appcCntrlAdminStat.setStatus('current')
appcCntrlAdminRscv = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notActive", 1), ("active", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appcCntrlAdminRscv.setStatus('current')
appcCntrlAdminTrace = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notActive", 1), ("active", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appcCntrlAdminTrace.setStatus('current')
appcCntrlAdminTraceParm = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appcCntrlAdminTraceParm.setStatus('current')
appcCntrlOperGroup = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 2))
appcCntrlOperStat = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notActive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCntrlOperStat.setStatus('current')
appcCntrlOperStatTime = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 2, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCntrlOperStatTime.setStatus('current')
appcCntrlOperRscv = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notActive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCntrlOperRscv.setStatus('current')
appcCntrlOperRscvTime = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 2, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCntrlOperRscvTime.setStatus('current')
appcCntrlOperTrace = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notActive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCntrlOperTrace.setStatus('current')
appcCntrlOperTraceTime = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 2, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCntrlOperTraceTime.setStatus('current')
appcCntrlOperTraceParm = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCntrlOperTraceParm.setStatus('current')
appcGlobalObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3))
appcUpTime = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcUpTime.setStatus('current')
appcDefaultModeName = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcDefaultModeName.setStatus('current')
appcDefaultLuName = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcDefaultLuName.setStatus('current')
appcDefaultImplInbndPlu = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcDefaultImplInbndPlu.setStatus('current')
appcDefaultMaxMcLlSndSize = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcDefaultMaxMcLlSndSize.setStatus('current')
appcDefaultFileSpec = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcDefaultFileSpec.setStatus('current')
appcDefaultTpOperation = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("queuedOperatorStarted", 2), ("queuedOperatorPreloaded", 3), ("queuedAmStarted", 4), ("nonqueuedAmStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcDefaultTpOperation.setStatus('current')
appcDefaultTpConvSecRqd = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcDefaultTpConvSecRqd.setStatus('current')
appcLocalCpName = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLocalCpName.setStatus('current')
appcActiveSessions = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveSessions.setStatus('current')
appcActiveHprSessions = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveHprSessions.setStatus('current')
appcCnosControl = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4))
appcCnosCommand = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("initSesslimit", 1), ("changeSesslimit", 2), ("resetSesslimit", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appcCnosCommand.setStatus('current')
appcCnosMaxSessLimit = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appcCnosMaxSessLimit.setStatus('current')
appcCnosMinCwinLimit = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appcCnosMinCwinLimit.setStatus('current')
appcCnosMinClosLimit = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appcCnosMinClosLimit.setStatus('current')
appcCnosDrainSelf = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appcCnosDrainSelf.setStatus('current')
appcCnosDrainPart = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appcCnosDrainPart.setStatus('current')
appcCnosResponsible = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("source", 1), ("target", 2))).clone('source')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appcCnosResponsible.setStatus('current')
appcCnosForce = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appcCnosForce.setStatus('current')
appcCnosTargetLocLuName = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appcCnosTargetLocLuName.setStatus('current')
appcCnosTargetParLuName = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appcCnosTargetParLuName.setStatus('current')
appcCnosTargetModeName = MibScalar((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appcCnosTargetModeName.setStatus('current')
appcLluAdminTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1), )
if mibBuilder.loadTexts: appcLluAdminTable.setStatus('current')
appcLluAdminEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1), ).setIndexNames((0, "APPC-MIB", "appcLluAdminName"))
if mibBuilder.loadTexts: appcLluAdminEntry.setStatus('current')
appcLluAdminName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcLluAdminName.setStatus('current')
appcLluAdminDepType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dependent", 1), ("independent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluAdminDepType.setStatus('current')
appcLluAdminLocalAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluAdminLocalAddress.setStatus('current')
appcLluAdminSessLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluAdminSessLimit.setStatus('current')
appcLluAdminBindRspMayQ = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluAdminBindRspMayQ.setStatus('current')
appcLluAdminCompression = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("prohibited", 1), ("required", 2), ("negotiable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluAdminCompression.setStatus('current')
appcLluAdminInBoundCompLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("rle", 2), ("lz9", 3), ("lz10", 4), ("lz12", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluAdminInBoundCompLevel.setStatus('current')
appcLluAdminOutBoundCompLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("rle", 2), ("lz9", 3), ("lz10", 4), ("lz12", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluAdminOutBoundCompLevel.setStatus('current')
appcLluAdminCompRleBeforeLZ = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluAdminCompRleBeforeLZ.setStatus('current')
appcLluAdminAlias = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluAdminAlias.setStatus('current')
appcLluOperTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2), )
if mibBuilder.loadTexts: appcLluOperTable.setStatus('current')
appcLluOperEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1), ).setIndexNames((0, "APPC-MIB", "appcLluOperName"))
if mibBuilder.loadTexts: appcLluOperEntry.setStatus('current')
appcLluOperName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcLluOperName.setStatus('current')
appcLluOperDepType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dependent", 1), ("independent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluOperDepType.setStatus('current')
appcLluOperLocalAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluOperLocalAddress.setStatus('current')
appcLluOperSessLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluOperSessLimit.setStatus('current')
appcLluOperBindRspMayQ = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluOperBindRspMayQ.setStatus('current')
appcLluOperCompression = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("prohibited", 1), ("required", 2), ("negotiable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluOperCompression.setStatus('current')
appcLluOperInBoundCompLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("rle", 2), ("lz9", 3), ("lz10", 4), ("lz12", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluOperInBoundCompLevel.setStatus('current')
appcLluOperOutBoundCompLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("rle", 2), ("lz9", 3), ("lz10", 4), ("lz12", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluOperOutBoundCompLevel.setStatus('current')
appcLluOperCompRleBeforeLZ = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluOperCompRleBeforeLZ.setStatus('current')
appcLluOperAlias = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluOperAlias.setStatus('current')
appcLluOperActiveSessions = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLluOperActiveSessions.setStatus('current')
appcLuPairAdminTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3), )
if mibBuilder.loadTexts: appcLuPairAdminTable.setStatus('current')
appcLuPairAdminEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1), ).setIndexNames((0, "APPC-MIB", "appcLuPairAdminLocLuName"), (0, "APPC-MIB", "appcLuPairAdminParLuName"))
if mibBuilder.loadTexts: appcLuPairAdminEntry.setStatus('current')
appcLuPairAdminLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcLuPairAdminLocLuName.setStatus('current')
appcLuPairAdminParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcLuPairAdminParLuName.setStatus('current')
appcLuPairAdminParLuAlias = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLuPairAdminParLuAlias.setStatus('current')
appcLuPairAdminSessLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLuPairAdminSessLimit.setStatus('current')
appcLuPairAdminSessSec = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("required", 1), ("accepted", 2), ("notAllowed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLuPairAdminSessSec.setStatus('current')
appcLuPairAdminSecAccept = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("conversation", 2), ("alreadyVerified", 3), ("persistentVerification", 4), ("aVandpV", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLuPairAdminSecAccept.setStatus('current')
appcLuPairAdminLinkObjId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1, 7), InstancePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLuPairAdminLinkObjId.setStatus('current')
appcLuPairAdminParaSessSup = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLuPairAdminParaSessSup.setStatus('current')
appcLuPairOperTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4), )
if mibBuilder.loadTexts: appcLuPairOperTable.setStatus('current')
appcLuPairOperEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1), ).setIndexNames((0, "APPC-MIB", "appcLuPairOperLocLuName"), (0, "APPC-MIB", "appcLuPairOperParLuName"))
if mibBuilder.loadTexts: appcLuPairOperEntry.setStatus('current')
appcLuPairOperLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcLuPairOperLocLuName.setStatus('current')
appcLuPairOperParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcLuPairOperParLuName.setStatus('current')
appcLuPairOperParLuAlias = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLuPairOperParLuAlias.setStatus('current')
appcLuPairOperSessLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLuPairOperSessLimit.setStatus('current')
appcLuPairOperSessSec = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("required", 1), ("accepted", 2), ("notAllowed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLuPairOperSessSec.setStatus('current')
appcLuPairOperSecAccept = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("conversation", 2), ("alreadyVerified", 3), ("persistentVerification", 4), ("aVandpV", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLuPairOperSecAccept.setStatus('current')
appcLuPairOperLinkObjId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 7), InstancePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLuPairOperLinkObjId.setStatus('current')
appcLuPairOperParaSessSup = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLuPairOperParaSessSup.setStatus('current')
appcLuPairOperParaSessSupLS = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLuPairOperParaSessSupLS.setStatus('current')
appcLuPairOperState = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcLuPairOperState.setStatus('current')
appcModeAdminTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5), )
if mibBuilder.loadTexts: appcModeAdminTable.setStatus('current')
appcModeAdminEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1), ).setIndexNames((0, "APPC-MIB", "appcModeAdminLocLuName"), (0, "APPC-MIB", "appcModeAdminParLuName"), (0, "APPC-MIB", "appcModeAdminModeName"))
if mibBuilder.loadTexts: appcModeAdminEntry.setStatus('current')
appcModeAdminLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcModeAdminLocLuName.setStatus('current')
appcModeAdminParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcModeAdminParLuName.setStatus('current')
appcModeAdminModeName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8)))
if mibBuilder.loadTexts: appcModeAdminModeName.setStatus('current')
appcModeAdminCosName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminCosName.setStatus('current')
appcModeAdminSessEndTpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminSessEndTpName.setStatus('current')
appcModeAdminMaxSessLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminMaxSessLimit.setStatus('current')
appcModeAdminMinCwinLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminMinCwinLimit.setStatus('current')
appcModeAdminMinClosLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminMinClosLimit.setStatus('current')
appcModeAdminConWinAutoActLmt = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminConWinAutoActLmt.setStatus('current')
appcModeAdminRecvPacWinSz = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminRecvPacWinSz.setStatus('current')
appcModeAdminSendPacWinSz = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminSendPacWinSz.setStatus('current')
appcModeAdminPrefRecvRuSz = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminPrefRecvRuSz.setStatus('current')
appcModeAdminPrefSendRuSz = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminPrefSendRuSz.setStatus('current')
appcModeAdminRecvRuSzUpBnd = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminRecvRuSzUpBnd.setStatus('current')
appcModeAdminSendRuSzUpBnd = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminSendRuSzUpBnd.setStatus('current')
appcModeAdminRecvRuSzLoBnd = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminRecvRuSzLoBnd.setStatus('current')
appcModeAdminSendRuSzLoBnd = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminSendRuSzLoBnd.setStatus('current')
appcModeAdminSingSessReinit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notApplicable", 1), ("operatorControlled", 2), ("primaryOnly", 3), ("secondaryOnly", 4), ("primaryOrSecondary", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminSingSessReinit.setStatus('current')
appcModeAdminCompression = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("prohibited", 1), ("required", 2), ("negotiable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminCompression.setStatus('current')
appcModeAdminInBoundCompLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("rle", 2), ("lz9", 3), ("lz10", 4), ("lz12", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminInBoundCompLevel.setStatus('current')
appcModeAdminOutBoundCompLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("rle", 2), ("lz9", 3), ("lz10", 4), ("lz12", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminOutBoundCompLevel.setStatus('current')
appcModeAdminCompRleBeforeLZ = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminCompRleBeforeLZ.setStatus('current')
appcModeAdminSyncLvl = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("noneConfirm", 2), ("noneConfirmSyncPoint", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminSyncLvl.setStatus('current')
appcModeAdminCrypto = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("mandatory", 2), ("selective", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeAdminCrypto.setStatus('current')
appcModeOperTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6), )
if mibBuilder.loadTexts: appcModeOperTable.setStatus('current')
appcModeOperEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1), ).setIndexNames((0, "APPC-MIB", "appcModeOperLocLuName"), (0, "APPC-MIB", "appcModeOperParLuName"), (0, "APPC-MIB", "appcModeOperModeName"))
if mibBuilder.loadTexts: appcModeOperEntry.setStatus('current')
appcModeOperLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcModeOperLocLuName.setStatus('current')
appcModeOperParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcModeOperParLuName.setStatus('current')
appcModeOperModeName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8)))
if mibBuilder.loadTexts: appcModeOperModeName.setStatus('current')
appcModeOperCosName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperCosName.setStatus('current')
appcModeOperSessEndTpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperSessEndTpName.setStatus('current')
appcModeOperSessLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperSessLimit.setStatus('current')
appcModeOperMaxSessLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperMaxSessLimit.setStatus('current')
appcModeOperMinCwinLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperMinCwinLimit.setStatus('current')
appcModeOperMinClosLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperMinClosLimit.setStatus('current')
appcModeOperConWinAutoActLmt = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperConWinAutoActLmt.setStatus('current')
appcModeOperRecvPacWinSz = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperRecvPacWinSz.setStatus('current')
appcModeOperSendPacWinSz = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperSendPacWinSz.setStatus('current')
appcModeOperPrefRecvRuSz = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperPrefRecvRuSz.setStatus('current')
appcModeOperPrefSendRuSz = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperPrefSendRuSz.setStatus('current')
appcModeOperRecvRuSzUpBnd = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperRecvRuSzUpBnd.setStatus('current')
appcModeOperSendRuSzUpBnd = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperSendRuSzUpBnd.setStatus('current')
appcModeOperRecvRuSzLoBnd = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperRecvRuSzLoBnd.setStatus('current')
appcModeOperSendRuSzLoBnd = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperSendRuSzLoBnd.setStatus('current')
appcModeOperSingSessReinit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notApplicable", 1), ("operatorControlled", 2), ("primaryOnly", 3), ("secondaryOnly", 4), ("primaryOrSecondary", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperSingSessReinit.setStatus('current')
appcModeOperCompression = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("prohibited", 1), ("required", 2), ("negotiable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperCompression.setStatus('current')
appcModeOperInBoundCompLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("rle", 2), ("lz9", 3), ("lz10", 4), ("lz12", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperInBoundCompLevel.setStatus('current')
appcModeOperOutBoundCompLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("rle", 2), ("lz9", 3), ("lz10", 4), ("lz12", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperOutBoundCompLevel.setStatus('current')
appcModeOperCompRleBeforeLZ = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperCompRleBeforeLZ.setStatus('current')
appcModeOperSyncLvl = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("noneConfirm", 2), ("noneConfirmSyncPoint", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperSyncLvl.setStatus('current')
appcModeOperCrypto = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("mandatory", 2), ("selective", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperCrypto.setStatus('current')
appcModeOperSyncLvlLastStart = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("noneConfirm", 2), ("noneConfirmSyncPoint", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperSyncLvlLastStart.setStatus('current')
appcModeOperCryptoLastStart = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("mandatory", 2), ("selective", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperCryptoLastStart.setStatus('current')
appcModeOperCNOSNeg = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperCNOSNeg.setStatus('current')
appcModeOperActCwin = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperActCwin.setStatus('current')
appcModeOperActClos = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperActClos.setStatus('current')
appcModeOperPndCwin = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperPndCwin.setStatus('current')
appcModeOperPndClos = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperPndClos.setStatus('current')
appcModeOperPtmCwin = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperPtmCwin.setStatus('current')
appcModeOperPtmClos = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperPtmClos.setStatus('current')
appcModeOperDrainSelf = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperDrainSelf.setStatus('current')
appcModeOperDrainPart = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcModeOperDrainPart.setStatus('current')
appcTpAdminTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1), )
if mibBuilder.loadTexts: appcTpAdminTable.setStatus('current')
appcTpAdminEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1), ).setIndexNames((0, "APPC-MIB", "appcTpAdminLocLuName"), (0, "APPC-MIB", "appcTpAdminTpName"))
if mibBuilder.loadTexts: appcTpAdminEntry.setStatus('current')
appcTpAdminLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcTpAdminLocLuName.setStatus('current')
appcTpAdminTpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: appcTpAdminTpName.setStatus('current')
appcTpAdminFileSpec = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcTpAdminFileSpec.setStatus('current')
appcTpAdminStartParm = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcTpAdminStartParm.setStatus('current')
appcTpAdminTpOperation = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("queuedOperatorStarted", 2), ("queuedOperatorPreloaded", 3), ("queuedAmStarted", 4), ("nonqueuedAmStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcTpAdminTpOperation.setStatus('current')
appcTpAdminInAttachTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcTpAdminInAttachTimeout.setStatus('current')
appcTpAdminRcvAllocTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcTpAdminRcvAllocTimeout.setStatus('current')
appcTpAdminSyncLvl = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("confirm", 2), ("noneAndConfirm", 3), ("syncpoint", 4), ("noneAndSyncpoint", 5), ("confirmAndSyncpoint", 6), ("all", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcTpAdminSyncLvl.setStatus('current')
appcTpAdminInstLmt = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcTpAdminInstLmt.setStatus('current')
appcTpAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("tempDisabled", 2), ("permDisabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcTpAdminStatus.setStatus('current')
appcTpAdminLongRun = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcTpAdminLongRun.setStatus('current')
appcTpAdminConvType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("basic", 1), ("mapped", 2), ("basicOrMapped", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcTpAdminConvType.setStatus('current')
appcTpAdminConvDuplex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("half", 1), ("full", 2), ("halfOrFull", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcTpAdminConvDuplex.setStatus('current')
appcTpAdminConvSecReq = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcTpAdminConvSecReq.setStatus('current')
appcTpAdminVerPip = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcTpAdminVerPip.setStatus('current')
appcTpAdminPipSubNum = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcTpAdminPipSubNum.setStatus('current')
appcActSessTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1), )
if mibBuilder.loadTexts: appcActSessTable.setStatus('current')
appcActSessEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1), ).setIndexNames((0, "APPC-MIB", "appcActSessLocLuName"), (0, "APPC-MIB", "appcActSessParLuName"), (0, "APPC-MIB", "appcActSessIndex"))
if mibBuilder.loadTexts: appcActSessEntry.setStatus('current')
appcActSessLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcActSessLocLuName.setStatus('current')
appcActSessParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcActSessParLuName.setStatus('current')
appcActSessIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 3), Integer32())
if mibBuilder.loadTexts: appcActSessIndex.setStatus('current')
appcActSessPcidCpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 4), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(3, 17), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessPcidCpName.setStatus('current')
appcActSessPcid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 5), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessPcid.setStatus('current')
appcActSessPluIndicator = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("localLuIsPlu", 1), ("partnerLuIsPlu", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessPluIndicator.setStatus('current')
appcActSessModeName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessModeName.setStatus('current')
appcActSessCosName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessCosName.setStatus('current')
appcActSessTransPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("low", 2), ("medium", 3), ("high", 4), ("network", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessTransPriority.setStatus('current')
appcActSessEnhanceSecSup = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("level1", 2), ("level2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessEnhanceSecSup.setStatus('current')
appcActSessSendPacingType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("fixed", 2), ("adaptive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessSendPacingType.setStatus('current')
appcActSessSendRpc = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessSendRpc.setStatus('current')
appcActSessSendNxWndwSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessSendNxWndwSize.setStatus('current')
appcActSessRecvPacingType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("fixed", 2), ("adaptive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessRecvPacingType.setStatus('current')
appcActSessRecvRpc = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessRecvRpc.setStatus('current')
appcActSessRecvNxWndwSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessRecvNxWndwSize.setStatus('current')
appcActSessRscv = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessRscv.setStatus('current')
appcActSessInUse = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessInUse.setStatus('current')
appcActSessMaxSndRuSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessMaxSndRuSize.setStatus('current')
appcActSessMaxRcvRuSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessMaxRcvRuSize.setStatus('current')
appcActSessSndPacingSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessSndPacingSize.setStatus('current')
appcActSessRcvPacingSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessRcvPacingSize.setStatus('current')
appcActSessOperState = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unbound", 1), ("pendingBind", 2), ("bound", 3), ("pendingUnbind", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appcActSessOperState.setStatus('current')
appcActSessUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 24), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessUpTime.setStatus('current')
appcActSessRtpNceId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessRtpNceId.setStatus('current')
appcActSessRtpTcid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 26), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessRtpTcid.setStatus('current')
appcActSessLinkIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 27), InstancePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActSessLinkIndex.setStatus('current')
appcSessStatsTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2), )
if mibBuilder.loadTexts: appcSessStatsTable.setStatus('current')
appcSessStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1), ).setIndexNames((0, "APPC-MIB", "appcSessStatsLocLuName"), (0, "APPC-MIB", "appcSessStatsParLuName"), (0, "APPC-MIB", "appcSessStatsSessIndex"))
if mibBuilder.loadTexts: appcSessStatsEntry.setStatus('current')
appcSessStatsLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcSessStatsLocLuName.setStatus('current')
appcSessStatsParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcSessStatsParLuName.setStatus('current')
appcSessStatsSessIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 3), Integer32())
if mibBuilder.loadTexts: appcSessStatsSessIndex.setStatus('current')
appcSessStatsSentFmdBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcSessStatsSentFmdBytes.setStatus('current')
appcSessStatsSentNonFmdBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcSessStatsSentNonFmdBytes.setStatus('current')
appcSessStatsRcvdFmdBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcSessStatsRcvdFmdBytes.setStatus('current')
appcSessStatsRcvdNonFmdBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcSessStatsRcvdNonFmdBytes.setStatus('current')
appcSessStatsSentFmdRus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcSessStatsSentFmdRus.setStatus('current')
appcSessStatsSentNonFmdRus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcSessStatsSentNonFmdRus.setStatus('current')
appcSessStatsRcvdFmdRus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcSessStatsRcvdFmdRus.setStatus('current')
appcSessStatsRcvdNonFmdRus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcSessStatsRcvdNonFmdRus.setStatus('current')
appcSessStatsCtrUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcSessStatsCtrUpTime.setStatus('current')
appcHistSessTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3), )
if mibBuilder.loadTexts: appcHistSessTable.setStatus('current')
appcHistSessEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1), ).setIndexNames((0, "APPC-MIB", "appcHistSessIndex"))
if mibBuilder.loadTexts: appcHistSessEntry.setStatus('current')
appcHistSessIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: appcHistSessIndex.setStatus('current')
appcHistSessTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistSessTime.setStatus('current')
appcHistSessType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("recvNegBindRsp", 1), ("sendNegBindRsp", 2), ("sessActRejected", 3), ("unbindSent", 4), ("unbindReceived", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistSessType.setStatus('current')
appcHistSessLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistSessLocLuName.setStatus('current')
appcHistSessParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistSessParLuName.setStatus('current')
appcHistSessModeName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistSessModeName.setStatus('current')
appcHistSessUnbindType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistSessUnbindType.setStatus('current')
appcHistSessSenseData = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 8), SnaSenseData()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistSessSenseData.setStatus('current')
appcHistSessComponentId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistSessComponentId.setStatus('current')
appcHistSessDetectModule = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistSessDetectModule.setStatus('current')
appcSessRtpTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 4), )
if mibBuilder.loadTexts: appcSessRtpTable.setStatus('current')
appcSessRtpEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 4, 1), ).setIndexNames((0, "APPC-MIB", "appcSessRtpNceId"), (0, "APPC-MIB", "appcSessRtpTcid"))
if mibBuilder.loadTexts: appcSessRtpEntry.setStatus('current')
appcSessRtpNceId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8)))
if mibBuilder.loadTexts: appcSessRtpNceId.setStatus('current')
appcSessRtpTcid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8))
if mibBuilder.loadTexts: appcSessRtpTcid.setStatus('current')
appcSessRtpSessions = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcSessRtpSessions.setStatus('current')
appcActiveConvTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1), )
if mibBuilder.loadTexts: appcActiveConvTable.setStatus('current')
appcActiveConvEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1), ).setIndexNames((0, "APPC-MIB", "appcActiveConvLocLuName"), (0, "APPC-MIB", "appcActiveConvParLuName"), (0, "APPC-MIB", "appcActiveConvSessIndex"))
if mibBuilder.loadTexts: appcActiveConvEntry.setStatus('current')
appcActiveConvLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcActiveConvLocLuName.setStatus('current')
appcActiveConvParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcActiveConvParLuName.setStatus('current')
appcActiveConvSessIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 3), Integer32())
if mibBuilder.loadTexts: appcActiveConvSessIndex.setStatus('current')
appcActiveConvId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvId.setStatus('current')
appcActiveConvState = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("reset", 1), ("send", 2), ("receive", 3), ("confirm", 4), ("confirmSend", 5), ("confirmDealloc", 6), ("pendingDeallocate", 7), ("pendingPost", 8), ("sendReceive", 9), ("sendOnly", 10), ("receiveOnly", 11), ("deferReceive", 12), ("deferDeallocate", 13), ("syncpoint", 14), ("syncpointSend", 15), ("syncpointDeallocate", 16), ("backoutRequired", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvState.setStatus('current')
appcActiveConvType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("basic", 1), ("mapped", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvType.setStatus('current')
appcActiveConvCorrelator = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvCorrelator.setStatus('current')
appcActiveConvSyncLvl = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("confirm", 2), ("syncpt", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvSyncLvl.setStatus('current')
appcActiveConvSource = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("localLu", 1), ("partnerLu", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvSource.setStatus('current')
appcActiveConvDuplex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("half", 1), ("full", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvDuplex.setStatus('current')
appcActiveConvUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvUpTime.setStatus('current')
appcActiveConvSendBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvSendBytes.setStatus('current')
appcActiveConvRcvBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvRcvBytes.setStatus('current')
appcActiveConvUserid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvUserid.setStatus('current')
appcActiveConvPcidNauName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 15), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(3, 17), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvPcidNauName.setStatus('current')
appcActiveConvPcid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 16), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvPcid.setStatus('current')
appcActiveConvModeName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvModeName.setStatus('current')
appcActiveConvLuwIdName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvLuwIdName.setStatus('current')
appcActiveConvLuwIdInstance = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvLuwIdInstance.setStatus('current')
appcActiveConvLuwIdSequence = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvLuwIdSequence.setStatus('current')
appcActiveConvTpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcActiveConvTpName.setStatus('current')
appcHistConvTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2), )
if mibBuilder.loadTexts: appcHistConvTable.setStatus('current')
appcHistConvEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1), ).setIndexNames((0, "APPC-MIB", "appcHistConvIndex"))
if mibBuilder.loadTexts: appcHistConvEntry.setStatus('current')
appcHistConvIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: appcHistConvIndex.setStatus('current')
appcHistConvEndTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistConvEndTime.setStatus('current')
appcHistConvLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistConvLocLuName.setStatus('current')
appcHistConvParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistConvParLuName.setStatus('current')
appcHistConvTpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistConvTpName.setStatus('current')
appcHistConvPcidNauName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 6), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(3, 17), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistConvPcidNauName.setStatus('current')
appcHistConvPcid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 7), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistConvPcid.setStatus('current')
appcHistConvSenseData = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 8), SnaSenseData()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistConvSenseData.setStatus('current')
appcHistConvLogData = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistConvLogData.setStatus('current')
appcHistConvEndedBy = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("localLu", 1), ("partnerLu", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcHistConvEndedBy.setStatus('current')
appcCpicAdminTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1), )
if mibBuilder.loadTexts: appcCpicAdminTable.setStatus('current')
appcCpicAdminEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1), ).setIndexNames((0, "APPC-MIB", "appcCpicAdminLocLuName"), (0, "APPC-MIB", "appcCpicAdminSymbDestName"))
if mibBuilder.loadTexts: appcCpicAdminEntry.setStatus('current')
appcCpicAdminLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcCpicAdminLocLuName.setStatus('current')
appcCpicAdminSymbDestName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8)))
if mibBuilder.loadTexts: appcCpicAdminSymbDestName.setStatus('current')
appcCpicAdminParLuAlias = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCpicAdminParLuAlias.setStatus('current')
appcCpicAdminParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCpicAdminParLuName.setStatus('current')
appcCpicAdminModeName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCpicAdminModeName.setStatus('current')
appcCpicAdminTpNameType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("snaServiceTp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCpicAdminTpNameType.setStatus('current')
appcCpicAdminTpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCpicAdminTpName.setStatus('current')
appcCpicAdminUserid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCpicAdminUserid.setStatus('current')
appcCpicAdminSecurity = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("same", 2), ("pgm", 3), ("pgmStrong", 4), ("distributed", 5), ("mutual", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCpicAdminSecurity.setStatus('current')
appcCpicOperTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2), )
if mibBuilder.loadTexts: appcCpicOperTable.setStatus('current')
appcCpicOperEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1), ).setIndexNames((0, "APPC-MIB", "appcCpicOperLocLuName"), (0, "APPC-MIB", "appcCpicOperSymbDestName"))
if mibBuilder.loadTexts: appcCpicOperEntry.setStatus('current')
appcCpicOperLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appcCpicOperLocLuName.setStatus('current')
appcCpicOperSymbDestName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8)))
if mibBuilder.loadTexts: appcCpicOperSymbDestName.setStatus('current')
appcCpicOperParLuAlias = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCpicOperParLuAlias.setStatus('current')
appcCpicOperParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCpicOperParLuName.setStatus('current')
appcCpicOperModeName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCpicOperModeName.setStatus('current')
appcCpicOperTpNameType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("snaServiceTp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCpicOperTpNameType.setStatus('current')
appcCpicOperTpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCpicOperTpName.setStatus('current')
appcCpicOperUserid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCpicOperUserid.setStatus('current')
appcCpicOperSecurity = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("same", 2), ("pgm", 3), ("pgmStrong", 4), ("distributed", 5), ("mutual", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appcCpicOperSecurity.setStatus('current')
appcConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 2))
appcCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 2, 1))
appcGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 2, 2))
appcCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 34, 3, 2, 1, 1)).setObjects(("APPC-MIB", "appcGlobalConfGroup"), ("APPC-MIB", "appcLluConfGroup"), ("APPC-MIB", "appcParLuConfGroup"), ("APPC-MIB", "appcModeConfGroup"), ("APPC-MIB", "appcTpConfGroup"), ("APPC-MIB", "appcSessionConfGroup"), ("APPC-MIB", "appcControlConfGroup"), ("APPC-MIB", "appcCnosConfGroup"), ("APPC-MIB", "appcCpicConfGroup"), ("APPC-MIB", "appcConversationConfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appcCompliance = appcCompliance.setStatus('current')
appcGlobalConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 1)).setObjects(("APPC-MIB", "appcUpTime"), ("APPC-MIB", "appcDefaultModeName"), ("APPC-MIB", "appcDefaultLuName"), ("APPC-MIB", "appcDefaultImplInbndPlu"), ("APPC-MIB", "appcDefaultMaxMcLlSndSize"), ("APPC-MIB", "appcDefaultFileSpec"), ("APPC-MIB", "appcDefaultTpOperation"), ("APPC-MIB", "appcDefaultTpConvSecRqd"), ("APPC-MIB", "appcLocalCpName"), ("APPC-MIB", "appcActiveSessions"), ("APPC-MIB", "appcActiveHprSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appcGlobalConfGroup = appcGlobalConfGroup.setStatus('current')
appcLluConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 2)).setObjects(("APPC-MIB", "appcLluAdminDepType"), ("APPC-MIB", "appcLluAdminLocalAddress"), ("APPC-MIB", "appcLluAdminSessLimit"), ("APPC-MIB", "appcLluAdminBindRspMayQ"), ("APPC-MIB", "appcLluAdminCompression"), ("APPC-MIB", "appcLluAdminInBoundCompLevel"), ("APPC-MIB", "appcLluAdminOutBoundCompLevel"), ("APPC-MIB", "appcLluAdminCompRleBeforeLZ"), ("APPC-MIB", "appcLluAdminAlias"), ("APPC-MIB", "appcLluOperDepType"), ("APPC-MIB", "appcLluOperLocalAddress"), ("APPC-MIB", "appcLluOperSessLimit"), ("APPC-MIB", "appcLluOperBindRspMayQ"), ("APPC-MIB", "appcLluOperCompression"), ("APPC-MIB", "appcLluOperInBoundCompLevel"), ("APPC-MIB", "appcLluOperOutBoundCompLevel"), ("APPC-MIB", "appcLluOperCompRleBeforeLZ"), ("APPC-MIB", "appcLluOperAlias"), ("APPC-MIB", "appcLluOperActiveSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appcLluConfGroup = appcLluConfGroup.setStatus('current')
appcParLuConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 3)).setObjects(("APPC-MIB", "appcLuPairAdminParLuAlias"), ("APPC-MIB", "appcLuPairAdminSessLimit"), ("APPC-MIB", "appcLuPairAdminSessSec"), ("APPC-MIB", "appcLuPairAdminSecAccept"), ("APPC-MIB", "appcLuPairAdminLinkObjId"), ("APPC-MIB", "appcLuPairAdminParaSessSup"), ("APPC-MIB", "appcLuPairOperParLuAlias"), ("APPC-MIB", "appcLuPairOperSessLimit"), ("APPC-MIB", "appcLuPairOperSessSec"), ("APPC-MIB", "appcLuPairOperSecAccept"), ("APPC-MIB", "appcLuPairOperLinkObjId"), ("APPC-MIB", "appcLuPairOperParaSessSup"), ("APPC-MIB", "appcLuPairOperParaSessSupLS"), ("APPC-MIB", "appcLuPairOperState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appcParLuConfGroup = appcParLuConfGroup.setStatus('current')
appcModeConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 4)).setObjects(("APPC-MIB", "appcModeAdminCosName"), ("APPC-MIB", "appcModeAdminSessEndTpName"), ("APPC-MIB", "appcModeAdminMaxSessLimit"), ("APPC-MIB", "appcModeAdminMinCwinLimit"), ("APPC-MIB", "appcModeAdminMinClosLimit"), ("APPC-MIB", "appcModeAdminConWinAutoActLmt"), ("APPC-MIB", "appcModeAdminRecvPacWinSz"), ("APPC-MIB", "appcModeAdminSendPacWinSz"), ("APPC-MIB", "appcModeAdminPrefRecvRuSz"), ("APPC-MIB", "appcModeAdminPrefSendRuSz"), ("APPC-MIB", "appcModeAdminRecvRuSzUpBnd"), ("APPC-MIB", "appcModeAdminSendRuSzUpBnd"), ("APPC-MIB", "appcModeAdminRecvRuSzLoBnd"), ("APPC-MIB", "appcModeAdminSendRuSzLoBnd"), ("APPC-MIB", "appcModeAdminSingSessReinit"), ("APPC-MIB", "appcModeAdminCompression"), ("APPC-MIB", "appcModeAdminInBoundCompLevel"), ("APPC-MIB", "appcModeAdminOutBoundCompLevel"), ("APPC-MIB", "appcModeAdminCompRleBeforeLZ"), ("APPC-MIB", "appcModeAdminSyncLvl"), ("APPC-MIB", "appcModeAdminCrypto"), ("APPC-MIB", "appcModeOperCosName"), ("APPC-MIB", "appcModeOperSessEndTpName"), ("APPC-MIB", "appcModeOperSessLimit"), ("APPC-MIB", "appcModeOperMaxSessLimit"), ("APPC-MIB", "appcModeOperMinCwinLimit"), ("APPC-MIB", "appcModeOperMinClosLimit"), ("APPC-MIB", "appcModeOperConWinAutoActLmt"), ("APPC-MIB", "appcModeOperRecvPacWinSz"), ("APPC-MIB", "appcModeOperSendPacWinSz"), ("APPC-MIB", "appcModeOperPrefRecvRuSz"), ("APPC-MIB", "appcModeOperPrefSendRuSz"), ("APPC-MIB", "appcModeOperRecvRuSzUpBnd"), ("APPC-MIB", "appcModeOperSendRuSzUpBnd"), ("APPC-MIB", "appcModeOperRecvRuSzLoBnd"), ("APPC-MIB", "appcModeOperSendRuSzLoBnd"), ("APPC-MIB", "appcModeOperSingSessReinit"), ("APPC-MIB", "appcModeOperCompression"), ("APPC-MIB", "appcModeOperInBoundCompLevel"), ("APPC-MIB", "appcModeOperOutBoundCompLevel"), ("APPC-MIB", "appcModeOperCompRleBeforeLZ"), ("APPC-MIB", "appcModeOperSyncLvl"), ("APPC-MIB", "appcModeOperCrypto"), ("APPC-MIB", "appcModeOperSyncLvlLastStart"), ("APPC-MIB", "appcModeOperCryptoLastStart"), ("APPC-MIB", "appcModeOperCNOSNeg"), ("APPC-MIB", "appcModeOperActCwin"), ("APPC-MIB", "appcModeOperActClos"), ("APPC-MIB", "appcModeOperPndCwin"), ("APPC-MIB", "appcModeOperPndClos"), ("APPC-MIB", "appcModeOperPtmCwin"), ("APPC-MIB", "appcModeOperPtmClos"), ("APPC-MIB", "appcModeOperDrainSelf"), ("APPC-MIB", "appcModeOperDrainPart"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appcModeConfGroup = appcModeConfGroup.setStatus('current')
appcTpConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 5)).setObjects(("APPC-MIB", "appcTpAdminFileSpec"), ("APPC-MIB", "appcTpAdminStartParm"), ("APPC-MIB", "appcTpAdminTpOperation"), ("APPC-MIB", "appcTpAdminInAttachTimeout"), ("APPC-MIB", "appcTpAdminRcvAllocTimeout"), ("APPC-MIB", "appcTpAdminSyncLvl"), ("APPC-MIB", "appcTpAdminInstLmt"), ("APPC-MIB", "appcTpAdminStatus"), ("APPC-MIB", "appcTpAdminLongRun"), ("APPC-MIB", "appcTpAdminConvType"), ("APPC-MIB", "appcTpAdminConvDuplex"), ("APPC-MIB", "appcTpAdminConvSecReq"), ("APPC-MIB", "appcTpAdminVerPip"), ("APPC-MIB", "appcTpAdminPipSubNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appcTpConfGroup = appcTpConfGroup.setStatus('current')
appcSessionConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 6)).setObjects(("APPC-MIB", "appcActSessPcidCpName"), ("APPC-MIB", "appcActSessPcid"), ("APPC-MIB", "appcActSessPluIndicator"), ("APPC-MIB", "appcActSessModeName"), ("APPC-MIB", "appcActSessCosName"), ("APPC-MIB", "appcActSessTransPriority"), ("APPC-MIB", "appcActSessEnhanceSecSup"), ("APPC-MIB", "appcActSessSendPacingType"), ("APPC-MIB", "appcActSessSendRpc"), ("APPC-MIB", "appcActSessSendNxWndwSize"), ("APPC-MIB", "appcActSessRecvPacingType"), ("APPC-MIB", "appcActSessRecvRpc"), ("APPC-MIB", "appcActSessRecvNxWndwSize"), ("APPC-MIB", "appcActSessRscv"), ("APPC-MIB", "appcActSessInUse"), ("APPC-MIB", "appcActSessMaxSndRuSize"), ("APPC-MIB", "appcActSessMaxRcvRuSize"), ("APPC-MIB", "appcActSessSndPacingSize"), ("APPC-MIB", "appcActSessRcvPacingSize"), ("APPC-MIB", "appcActSessOperState"), ("APPC-MIB", "appcActSessUpTime"), ("APPC-MIB", "appcActSessRtpNceId"), ("APPC-MIB", "appcActSessRtpTcid"), ("APPC-MIB", "appcActSessLinkIndex"), ("APPC-MIB", "appcSessStatsSentFmdBytes"), ("APPC-MIB", "appcSessStatsSentNonFmdBytes"), ("APPC-MIB", "appcSessStatsRcvdFmdBytes"), ("APPC-MIB", "appcSessStatsRcvdNonFmdBytes"), ("APPC-MIB", "appcSessStatsSentFmdRus"), ("APPC-MIB", "appcSessStatsSentNonFmdRus"), ("APPC-MIB", "appcSessStatsRcvdFmdRus"), ("APPC-MIB", "appcSessStatsRcvdNonFmdRus"), ("APPC-MIB", "appcSessStatsCtrUpTime"), ("APPC-MIB", "appcHistSessTime"), ("APPC-MIB", "appcHistSessType"), ("APPC-MIB", "appcHistSessLocLuName"), ("APPC-MIB", "appcHistSessParLuName"), ("APPC-MIB", "appcHistSessModeName"), ("APPC-MIB", "appcHistSessUnbindType"), ("APPC-MIB", "appcHistSessSenseData"), ("APPC-MIB", "appcHistSessComponentId"), ("APPC-MIB", "appcHistSessDetectModule"), ("APPC-MIB", "appcSessRtpSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appcSessionConfGroup = appcSessionConfGroup.setStatus('current')
appcControlConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 7)).setObjects(("APPC-MIB", "appcCntrlAdminStat"), ("APPC-MIB", "appcCntrlAdminRscv"), ("APPC-MIB", "appcCntrlAdminTrace"), ("APPC-MIB", "appcCntrlAdminTraceParm"), ("APPC-MIB", "appcCntrlOperStat"), ("APPC-MIB", "appcCntrlOperStatTime"), ("APPC-MIB", "appcCntrlOperRscv"), ("APPC-MIB", "appcCntrlOperRscvTime"), ("APPC-MIB", "appcCntrlOperTrace"), ("APPC-MIB", "appcCntrlOperTraceTime"), ("APPC-MIB", "appcCntrlOperTraceParm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appcControlConfGroup = appcControlConfGroup.setStatus('current')
appcCnosConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 8)).setObjects(("APPC-MIB", "appcCnosCommand"), ("APPC-MIB", "appcCnosMaxSessLimit"), ("APPC-MIB", "appcCnosMinCwinLimit"), ("APPC-MIB", "appcCnosMinClosLimit"), ("APPC-MIB", "appcCnosDrainSelf"), ("APPC-MIB", "appcCnosDrainPart"), ("APPC-MIB", "appcCnosResponsible"), ("APPC-MIB", "appcCnosForce"), ("APPC-MIB", "appcCnosTargetLocLuName"), ("APPC-MIB", "appcCnosTargetParLuName"), ("APPC-MIB", "appcCnosTargetModeName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appcCnosConfGroup = appcCnosConfGroup.setStatus('current')
appcCpicConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 9)).setObjects(("APPC-MIB", "appcCpicAdminParLuAlias"), ("APPC-MIB", "appcCpicAdminParLuName"), ("APPC-MIB", "appcCpicAdminModeName"), ("APPC-MIB", "appcCpicAdminTpNameType"), ("APPC-MIB", "appcCpicAdminTpName"), ("APPC-MIB", "appcCpicAdminUserid"), ("APPC-MIB", "appcCpicAdminSecurity"), ("APPC-MIB", "appcCpicOperParLuAlias"), ("APPC-MIB", "appcCpicOperParLuName"), ("APPC-MIB", "appcCpicOperModeName"), ("APPC-MIB", "appcCpicOperTpNameType"), ("APPC-MIB", "appcCpicOperTpName"), ("APPC-MIB", "appcCpicOperUserid"), ("APPC-MIB", "appcCpicOperSecurity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appcCpicConfGroup = appcCpicConfGroup.setStatus('current')
appcConversationConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 10)).setObjects(("APPC-MIB", "appcActiveConvId"), ("APPC-MIB", "appcActiveConvState"), ("APPC-MIB", "appcActiveConvType"), ("APPC-MIB", "appcActiveConvCorrelator"), ("APPC-MIB", "appcActiveConvSyncLvl"), ("APPC-MIB", "appcActiveConvSource"), ("APPC-MIB", "appcActiveConvDuplex"), ("APPC-MIB", "appcActiveConvUpTime"), ("APPC-MIB", "appcActiveConvSendBytes"), ("APPC-MIB", "appcActiveConvRcvBytes"), ("APPC-MIB", "appcActiveConvUserid"), ("APPC-MIB", "appcActiveConvPcidNauName"), ("APPC-MIB", "appcActiveConvPcid"), ("APPC-MIB", "appcActiveConvModeName"), ("APPC-MIB", "appcActiveConvLuwIdName"), ("APPC-MIB", "appcActiveConvLuwIdInstance"), ("APPC-MIB", "appcActiveConvLuwIdSequence"), ("APPC-MIB", "appcActiveConvTpName"), ("APPC-MIB", "appcHistConvEndTime"), ("APPC-MIB", "appcHistConvLocLuName"), ("APPC-MIB", "appcHistConvParLuName"), ("APPC-MIB", "appcHistConvTpName"), ("APPC-MIB", "appcHistConvPcidNauName"), ("APPC-MIB", "appcHistConvPcid"), ("APPC-MIB", "appcHistConvSenseData"), ("APPC-MIB", "appcHistConvLogData"), ("APPC-MIB", "appcHistConvEndedBy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appcConversationConfGroup = appcConversationConfGroup.setStatus('current')
mibBuilder.exportSymbols("APPC-MIB", appcLluOperActiveSessions=appcLluOperActiveSessions, appcLuPairAdminSessLimit=appcLuPairAdminSessLimit, appcCpicOperParLuName=appcCpicOperParLuName, appcHistConvTable=appcHistConvTable, appcCnosResponsible=appcCnosResponsible, appcActiveConvEntry=appcActiveConvEntry, appcModeAdminMinCwinLimit=appcModeAdminMinCwinLimit, appcActiveConvUserid=appcActiveConvUserid, appcModeOperModeName=appcModeOperModeName, appcLluOperDepType=appcLluOperDepType, appcControlConfGroup=appcControlConfGroup, appcCpicAdminSecurity=appcCpicAdminSecurity, appcHistConvIndex=appcHistConvIndex, appcCntrlOperGroup=appcCntrlOperGroup, appcMIB=appcMIB, appcModeOperSessEndTpName=appcModeOperSessEndTpName, appcCpicOperParLuAlias=appcCpicOperParLuAlias, appcActiveConvCorrelator=appcActiveConvCorrelator, appcActiveConvId=appcActiveConvId, appcActiveConvParLuName=appcActiveConvParLuName, appcCpicOperSymbDestName=appcCpicOperSymbDestName, appcModeOperSendRuSzLoBnd=appcModeOperSendRuSzLoBnd, appcSessStatsRcvdNonFmdRus=appcSessStatsRcvdNonFmdRus, appcCPIC=appcCPIC, appcCnosMinClosLimit=appcCnosMinClosLimit, appcLuPairAdminLinkObjId=appcLuPairAdminLinkObjId, appcActSessRecvNxWndwSize=appcActSessRecvNxWndwSize, appcModeAdminSingSessReinit=appcModeAdminSingSessReinit, appcCntrlAdminStat=appcCntrlAdminStat, appcLluOperTable=appcLluOperTable, appcModeOperInBoundCompLevel=appcModeOperInBoundCompLevel, appcModeAdminMinClosLimit=appcModeAdminMinClosLimit, appcCnosTargetModeName=appcCnosTargetModeName, appcCnosCommand=appcCnosCommand, appcLuPairOperParLuName=appcLuPairOperParLuName, appcModeAdminCosName=appcModeAdminCosName, appcModeOperDrainSelf=appcModeOperDrainSelf, appcLluOperCompRleBeforeLZ=appcLluOperCompRleBeforeLZ, appcModeOperSyncLvl=appcModeOperSyncLvl, appcActiveConvState=appcActiveConvState, appcCpicAdminParLuAlias=appcCpicAdminParLuAlias, appcModeOperActClos=appcModeOperActClos, appcActiveSessions=appcActiveSessions, appcLluOperInBoundCompLevel=appcLluOperInBoundCompLevel, appcActSessUpTime=appcActSessUpTime, appcActiveConvTpName=appcActiveConvTpName, appcModeAdminRecvRuSzLoBnd=appcModeAdminRecvRuSzLoBnd, appcModeAdminTable=appcModeAdminTable, appcTpAdminTpName=appcTpAdminTpName, appcSessRtpTable=appcSessRtpTable, appcCntrlAdminTrace=appcCntrlAdminTrace, appcLluAdminCompression=appcLluAdminCompression, appcLuPairOperEntry=appcLuPairOperEntry, appcActSessCosName=appcActSessCosName, appcLluOperOutBoundCompLevel=appcLluOperOutBoundCompLevel, appcTpAdminLocLuName=appcTpAdminLocLuName, appcModeOperCompRleBeforeLZ=appcModeOperCompRleBeforeLZ, appcHistSessLocLuName=appcHistSessLocLuName, appcModeOperPrefSendRuSz=appcModeOperPrefSendRuSz, appcSessStatsRcvdNonFmdBytes=appcSessStatsRcvdNonFmdBytes, appcTpAdminConvSecReq=appcTpAdminConvSecReq, appcHistConvEndedBy=appcHistConvEndedBy, appcCpicOperUserid=appcCpicOperUserid, appcModeAdminConWinAutoActLmt=appcModeAdminConWinAutoActLmt, appcModeOperTable=appcModeOperTable, appcDefaultMaxMcLlSndSize=appcDefaultMaxMcLlSndSize, appcActSessRtpNceId=appcActSessRtpNceId, appcModeOperPndClos=appcModeOperPndClos, appcLuPairAdminSecAccept=appcLuPairAdminSecAccept, appcCpicAdminTpNameType=appcCpicAdminTpNameType, appcHistSessSenseData=appcHistSessSenseData, appcLluAdminCompRleBeforeLZ=appcLluAdminCompRleBeforeLZ, appcActSessLocLuName=appcActSessLocLuName, appcTpAdminInstLmt=appcTpAdminInstLmt, appcLuPairOperParaSessSup=appcLuPairOperParaSessSup, appcDefaultTpOperation=appcDefaultTpOperation, appcModeAdminInBoundCompLevel=appcModeAdminInBoundCompLevel, appcGroups=appcGroups, appcActSessPcid=appcActSessPcid, appcLluOperEntry=appcLluOperEntry, appcLluConfGroup=appcLluConfGroup, appcCpicAdminParLuName=appcCpicAdminParLuName, appcLluAdminOutBoundCompLevel=appcLluAdminOutBoundCompLevel, appcModeOperSendRuSzUpBnd=appcModeOperSendRuSzUpBnd, appcLluOperCompression=appcLluOperCompression, appcDefaultLuName=appcDefaultLuName, appcLocalCpName=appcLocalCpName, appcModeOperSyncLvlLastStart=appcModeOperSyncLvlLastStart, appcTpConfGroup=appcTpConfGroup, appcLluAdminAlias=appcLluAdminAlias, appcCntrlOperStatTime=appcCntrlOperStatTime, appcLluOperAlias=appcLluOperAlias, appcLuPairOperLinkObjId=appcLuPairOperLinkObjId, appcSessStatsCtrUpTime=appcSessStatsCtrUpTime, appcTpAdminEntry=appcTpAdminEntry, appcSessRtpTcid=appcSessRtpTcid, appcGlobalConfGroup=appcGlobalConfGroup, appcModeOperPtmCwin=appcModeOperPtmCwin, appcHistSessEntry=appcHistSessEntry, appcSessRtpNceId=appcSessRtpNceId, appcModeAdminEntry=appcModeAdminEntry, appcLluAdminLocalAddress=appcLluAdminLocalAddress, appcTpAdminConvType=appcTpAdminConvType, appcModeAdminParLuName=appcModeAdminParLuName, appcSessRtpEntry=appcSessRtpEntry, appcDefaultModeName=appcDefaultModeName, appcLuPairOperTable=appcLuPairOperTable, appcHistSessParLuName=appcHistSessParLuName, appcCpicOperSecurity=appcCpicOperSecurity, appcActSessRecvPacingType=appcActSessRecvPacingType, appcActiveConvRcvBytes=appcActiveConvRcvBytes, appcActSessEntry=appcActSessEntry, appcSessStatsLocLuName=appcSessStatsLocLuName, appcSessStatsSessIndex=appcSessStatsSessIndex, appcActiveConvPcid=appcActiveConvPcid, appcTpAdminVerPip=appcTpAdminVerPip, appcLluAdminTable=appcLluAdminTable, appcCntrlOperTrace=appcCntrlOperTrace, appcConformance=appcConformance, appcLluAdminName=appcLluAdminName, appcSessStatsSentFmdBytes=appcSessStatsSentFmdBytes, appcCpicAdminModeName=appcCpicAdminModeName, appcSessionConfGroup=appcSessionConfGroup, appcSessStatsEntry=appcSessStatsEntry, appcActSessParLuName=appcActSessParLuName, appcCnosControl=appcCnosControl, appcModeAdminSessEndTpName=appcModeAdminSessEndTpName, appcModeOperParLuName=appcModeOperParLuName, appcTpAdminPipSubNum=appcTpAdminPipSubNum, appcModeAdminRecvRuSzUpBnd=appcModeAdminRecvRuSzUpBnd, appcModeOperRecvRuSzLoBnd=appcModeOperRecvRuSzLoBnd, appcModeAdminRecvPacWinSz=appcModeAdminRecvPacWinSz, appcModeOperMaxSessLimit=appcModeOperMaxSessLimit, appcActSessRtpTcid=appcActSessRtpTcid, appcActSessMaxSndRuSize=appcActSessMaxSndRuSize, appcCpicConfGroup=appcCpicConfGroup, appcModeOperSingSessReinit=appcModeOperSingSessReinit, appcConversation=appcConversation, appcTpAdminStatus=appcTpAdminStatus, appcModeAdminPrefRecvRuSz=appcModeAdminPrefRecvRuSz, appcCntrlOperTraceParm=appcCntrlOperTraceParm, appcHistConvLocLuName=appcHistConvLocLuName, appcLuPairAdminSessSec=appcLuPairAdminSessSec, appcModeOperCosName=appcModeOperCosName, appcActSessRscv=appcActSessRscv, appcLluAdminEntry=appcLluAdminEntry, appcSessRtpSessions=appcSessRtpSessions, appcLuPairAdminParaSessSup=appcLuPairAdminParaSessSup, appcModeAdminSendRuSzUpBnd=appcModeAdminSendRuSzUpBnd, appcActiveConvType=appcActiveConvType, appcActSessTransPriority=appcActSessTransPriority, appcActSessRecvRpc=appcActSessRecvRpc, appcHistSessComponentId=appcHistSessComponentId, appcCntrlOperRscvTime=appcCntrlOperRscvTime, appcActiveHprSessions=appcActiveHprSessions, appcCpicAdminSymbDestName=appcCpicAdminSymbDestName, appcModeConfGroup=appcModeConfGroup, appcLuPairOperParaSessSupLS=appcLuPairOperParaSessSupLS, appcModeAdminLocLuName=appcModeAdminLocLuName, appcModeAdminPrefSendRuSz=appcModeAdminPrefSendRuSz, appcModeAdminCompression=appcModeAdminCompression, appcLluOperLocalAddress=appcLluOperLocalAddress, appcModeAdminCompRleBeforeLZ=appcModeAdminCompRleBeforeLZ, appcModeOperRecvPacWinSz=appcModeOperRecvPacWinSz, appcActiveConvSendBytes=appcActiveConvSendBytes, appcActSessPluIndicator=appcActSessPluIndicator, appcModeOperSendPacWinSz=appcModeOperSendPacWinSz, appcLluAdminDepType=appcLluAdminDepType, appcTpAdminInAttachTimeout=appcTpAdminInAttachTimeout, appcTp=appcTp, appcHistSessIndex=appcHistSessIndex, appcHistConvSenseData=appcHistConvSenseData, appcModeOperCryptoLastStart=appcModeOperCryptoLastStart, appcCntrlAdminTraceParm=appcCntrlAdminTraceParm, appcLluOperSessLimit=appcLluOperSessLimit, appcActiveConvUpTime=appcActiveConvUpTime, appcLuPairOperParLuAlias=appcLuPairOperParLuAlias, appcActSessSendPacingType=appcActSessSendPacingType, appcActSessMaxRcvRuSize=appcActSessMaxRcvRuSize, appcTpAdminTable=appcTpAdminTable, appcActiveConvSessIndex=appcActiveConvSessIndex, appcActiveConvLuwIdName=appcActiveConvLuwIdName, appcSessStatsRcvdFmdRus=appcSessStatsRcvdFmdRus, appcHistConvPcidNauName=appcHistConvPcidNauName, appcHistConvEndTime=appcHistConvEndTime, appcLluAdminBindRspMayQ=appcLluAdminBindRspMayQ, appcCnosDrainSelf=appcCnosDrainSelf, appcActiveConvLuwIdSequence=appcActiveConvLuwIdSequence, appcCpicAdminUserid=appcCpicAdminUserid, appcActSessSndPacingSize=appcActSessSndPacingSize, appcModeOperSessLimit=appcModeOperSessLimit, appcCpicAdminEntry=appcCpicAdminEntry, appcActiveConvTable=appcActiveConvTable, appcHistConvEntry=appcHistConvEntry, appcHistSessModeName=appcHistSessModeName, appcActSessIndex=appcActSessIndex, appcGlobalObjects=appcGlobalObjects, appcLuPairAdminLocLuName=appcLuPairAdminLocLuName, appcTpAdminLongRun=appcTpAdminLongRun, appcSessStatsSentNonFmdRus=appcSessStatsSentNonFmdRus, appcModeAdminSendPacWinSz=appcModeAdminSendPacWinSz, appcTpAdminRcvAllocTimeout=appcTpAdminRcvAllocTimeout, appcModeOperPtmClos=appcModeOperPtmClos, appcModeOperOutBoundCompLevel=appcModeOperOutBoundCompLevel, appcCnosConfGroup=appcCnosConfGroup, appcCompliance=appcCompliance, appcModeOperPndCwin=appcModeOperPndCwin, appcCnosDrainPart=appcCnosDrainPart, appcHistConvLogData=appcHistConvLogData, appcHistSessDetectModule=appcHistSessDetectModule, appcCpicOperModeName=appcCpicOperModeName, appcHistSessUnbindType=appcHistSessUnbindType, appcLuPairAdminParLuAlias=appcLuPairAdminParLuAlias, appcCpicOperEntry=appcCpicOperEntry, appcLuPairOperState=appcLuPairOperState, appcActSessModeName=appcActSessModeName, appcCntrlAdminRscv=appcCntrlAdminRscv, appcModeOperActCwin=appcModeOperActCwin, appcCpicAdminTpName=appcCpicAdminTpName, appcSessStatsRcvdFmdBytes=appcSessStatsRcvdFmdBytes, appcActSessInUse=appcActSessInUse, appcCnosForce=appcCnosForce, appcTpAdminTpOperation=appcTpAdminTpOperation, appcLuPairAdminEntry=appcLuPairAdminEntry, appcSessStatsSentNonFmdBytes=appcSessStatsSentNonFmdBytes, SnaSenseData=SnaSenseData, appcActiveConvSyncLvl=appcActiveConvSyncLvl, appcActSessEnhanceSecSup=appcActSessEnhanceSecSup, appcActSessTable=appcActSessTable, appcObjects=appcObjects, appcSessStatsParLuName=appcSessStatsParLuName, appcTpAdminSyncLvl=appcTpAdminSyncLvl, appcModeOperEntry=appcModeOperEntry, appcModeOperRecvRuSzUpBnd=appcModeOperRecvRuSzUpBnd, appcModeOperCNOSNeg=appcModeOperCNOSNeg, appcActSessSendRpc=appcActSessSendRpc, appcModeAdminOutBoundCompLevel=appcModeAdminOutBoundCompLevel, appcModeOperDrainPart=appcModeOperDrainPart, appcModeOperConWinAutoActLmt=appcModeOperConWinAutoActLmt, appcCpicOperTpName=appcCpicOperTpName, appcModeAdminModeName=appcModeAdminModeName, appcCnosTargetLocLuName=appcCnosTargetLocLuName, appcUpTime=appcUpTime, appcHistSessTime=appcHistSessTime, appcActSessRcvPacingSize=appcActSessRcvPacingSize, appcModeAdminCrypto=appcModeAdminCrypto, appcCnosMinCwinLimit=appcCnosMinCwinLimit, appcDefaultImplInbndPlu=appcDefaultImplInbndPlu, appcLuPairOperSecAccept=appcLuPairOperSecAccept, PYSNMP_MODULE_ID=appcMIB, appcTpAdminFileSpec=appcTpAdminFileSpec, appcHistSessType=appcHistSessType, appcActiveConvLocLuName=appcActiveConvLocLuName, appcCpicAdminTable=appcCpicAdminTable)
mibBuilder.exportSymbols("APPC-MIB", appcHistConvParLuName=appcHistConvParLuName, appcActiveConvSource=appcActiveConvSource, appcLluAdminInBoundCompLevel=appcLluAdminInBoundCompLevel, appcModeOperMinClosLimit=appcModeOperMinClosLimit, appcTpAdminConvDuplex=appcTpAdminConvDuplex, appcHistConvTpName=appcHistConvTpName, appcCpicOperTable=appcCpicOperTable, appcSessStatsSentFmdRus=appcSessStatsSentFmdRus, appcActSessSendNxWndwSize=appcActSessSendNxWndwSize, appcLluOperBindRspMayQ=appcLluOperBindRspMayQ, appcCnosTargetParLuName=appcCnosTargetParLuName, appcActSessPcidCpName=appcActSessPcidCpName, appcActSessOperState=appcActSessOperState, appcCntrlOperStat=appcCntrlOperStat, appcConversationConfGroup=appcConversationConfGroup, appcGlobal=appcGlobal, appcCpicOperTpNameType=appcCpicOperTpNameType, appcLu=appcLu, appcSession=appcSession, appcLuPairOperSessSec=appcLuPairOperSessSec, appcModeAdminMaxSessLimit=appcModeAdminMaxSessLimit, appcCntrlAdminGroup=appcCntrlAdminGroup, appcLuPairOperLocLuName=appcLuPairOperLocLuName, appcParLuConfGroup=appcParLuConfGroup, appcActiveConvDuplex=appcActiveConvDuplex, appcHistConvPcid=appcHistConvPcid, appcModeAdminSendRuSzLoBnd=appcModeAdminSendRuSzLoBnd, appcActiveConvPcidNauName=appcActiveConvPcidNauName, appcLluOperName=appcLluOperName, appcModeOperMinCwinLimit=appcModeOperMinCwinLimit, appcHistSessTable=appcHistSessTable, appcActiveConvLuwIdInstance=appcActiveConvLuwIdInstance, appcCnosMaxSessLimit=appcCnosMaxSessLimit, appcTpAdminStartParm=appcTpAdminStartParm, appcActSessLinkIndex=appcActSessLinkIndex, appcCntrlOperTraceTime=appcCntrlOperTraceTime, appcCntrlOperRscv=appcCntrlOperRscv, appcLuPairAdminParLuName=appcLuPairAdminParLuName, appcCpicAdminLocLuName=appcCpicAdminLocLuName, appcLuPairAdminTable=appcLuPairAdminTable, appcLluAdminSessLimit=appcLluAdminSessLimit, appcSessStatsTable=appcSessStatsTable, appcDefaultFileSpec=appcDefaultFileSpec, appcModeOperLocLuName=appcModeOperLocLuName, appcModeOperPrefRecvRuSz=appcModeOperPrefRecvRuSz, appcModeOperCrypto=appcModeOperCrypto, appcModeOperCompression=appcModeOperCompression, appcCompliances=appcCompliances, appcCpicOperLocLuName=appcCpicOperLocLuName, appcActiveConvModeName=appcActiveConvModeName, appcDefaultTpConvSecRqd=appcDefaultTpConvSecRqd, appcModeAdminSyncLvl=appcModeAdminSyncLvl, appcLuPairOperSessLimit=appcLuPairOperSessLimit)
