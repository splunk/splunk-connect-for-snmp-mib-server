#
# PySNMP MIB module TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TRAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:19:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ctTrapTable, = mibBuilder.importSymbols("CTRON-MIB-NAMES", "ctTrapTable")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Bits, IpAddress, Integer32, NotificationType, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, ObjectIdentity, iso, TimeTicks, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Bits", "IpAddress", "Integer32", "NotificationType", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "ObjectIdentity", "iso", "TimeTicks", "Counter32", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
trap = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 7, 1))
trapTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 7, 1, 1), )
if mibBuilder.loadTexts: trapTable.setStatus('mandatory')
trapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 7, 1, 1, 1), ).setIndexNames((0, "TRAP-MIB", "trapIndex"))
if mibBuilder.loadTexts: trapEntry.setStatus('mandatory')
trapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 7, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapIndex.setStatus('mandatory')
trapCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 7, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapCommunityName.setStatus('mandatory')
trapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 7, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trapsDisabled", 1), ("trapsEnabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapStatus.setStatus('mandatory')
trapIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 7, 1, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIPAddr.setStatus('mandatory')
trapSrcParty = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 7, 1, 1, 1, 5), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapSrcParty.setStatus('mandatory')
trapDstParty = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 7, 1, 1, 1, 6), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapDstParty.setStatus('mandatory')
mibBuilder.exportSymbols("TRAP-MIB", trapCommunityName=trapCommunityName, trap=trap, trapIndex=trapIndex, trapEntry=trapEntry, trapTable=trapTable, trapDstParty=trapDstParty, trapSrcParty=trapSrcParty, trapStatus=trapStatus, trapIPAddr=trapIPAddr)
