#
# PySNMP MIB module Dell-rlBrgMulticast-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Dell-rlBrgMulticast-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:42:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
rnd, = mibBuilder.importSymbols("Dell-MIB", "rnd")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
PortList, VlanIndex = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList", "VlanIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Counter32, Gauge32, Bits, Integer32, Counter64, ObjectIdentity, MibIdentifier, Unsigned32, IpAddress, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter32", "Gauge32", "Bits", "Integer32", "Counter64", "ObjectIdentity", "MibIdentifier", "Unsigned32", "IpAddress", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "TimeTicks")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
rlBrgMulticast = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 116))
rlBrgMulticast.setRevisions(('2013-04-01 00:00',))
if mibBuilder.loadTexts: rlBrgMulticast.setLastUpdated('201304010000Z')
if mibBuilder.loadTexts: rlBrgMulticast.setOrganization('Dell')
rlBrgMulticastMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 89, 116, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgMulticastMibVersion.setStatus('current')
rlBrgStaticIpMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 89, 116, 3), )
if mibBuilder.loadTexts: rlBrgStaticIpMulticastTable.setStatus('current')
rlBrgStaticIpMulticastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 116, 3, 1), ).setIndexNames((0, "Dell-rlBrgMulticast-MIB", "rlBrgStaticIpMulticastVlanTag"), (0, "Dell-rlBrgMulticast-MIB", "rlBrgStaticIpMulticastGroupAddress"), (0, "Dell-rlBrgMulticast-MIB", "rlBrgStaticIpMulticastSourceAddress"))
if mibBuilder.loadTexts: rlBrgStaticIpMulticastEntry.setStatus('current')
rlBrgStaticIpMulticastVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 3, 1, 1), VlanIndex())
if mibBuilder.loadTexts: rlBrgStaticIpMulticastVlanTag.setStatus('current')
rlBrgStaticIpMulticastGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 3, 1, 2), IpAddress())
if mibBuilder.loadTexts: rlBrgStaticIpMulticastGroupAddress.setStatus('current')
rlBrgStaticIpMulticastSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 3, 1, 3), IpAddress())
if mibBuilder.loadTexts: rlBrgStaticIpMulticastSourceAddress.setStatus('current')
rlBrgStaticIpMulticastFrwPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 3, 1, 4), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgStaticIpMulticastFrwPorts.setStatus('current')
rlBrgStaticIpMulticastForbiddenPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 3, 1, 5), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgStaticIpMulticastForbiddenPorts.setStatus('current')
rlBrgStaticIpMulticastStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 3, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgStaticIpMulticastStatus.setStatus('current')
rlBrgIpMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 89, 116, 4), )
if mibBuilder.loadTexts: rlBrgIpMulticastTable.setStatus('current')
rlBrgIpMulticastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 116, 4, 1), ).setIndexNames((0, "Dell-rlBrgMulticast-MIB", "rlBrgIpMulticastVlanTag"), (0, "Dell-rlBrgMulticast-MIB", "rlBrgIpMulticastGroupAddress"), (0, "Dell-rlBrgMulticast-MIB", "rlBrgIpMulticastSourceAddress"))
if mibBuilder.loadTexts: rlBrgIpMulticastEntry.setStatus('current')
rlBrgIpMulticastVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 4, 1, 1), VlanIndex())
if mibBuilder.loadTexts: rlBrgIpMulticastVlanTag.setStatus('current')
rlBrgIpMulticastGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 4, 1, 2), IpAddress())
if mibBuilder.loadTexts: rlBrgIpMulticastGroupAddress.setStatus('current')
rlBrgIpMulticastSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 4, 1, 3), IpAddress())
if mibBuilder.loadTexts: rlBrgIpMulticastSourceAddress.setStatus('current')
rlBrgIpMulticastEgressPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 4, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgIpMulticastEgressPorts.setStatus('current')
rlBrgIpMulticastLearntPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 4, 1, 5), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgIpMulticastLearntPorts.setStatus('current')
rlBrgStaticInetMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 89, 116, 5), )
if mibBuilder.loadTexts: rlBrgStaticInetMulticastTable.setStatus('current')
rlBrgStaticInetMulticastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 116, 5, 1), ).setIndexNames((0, "Dell-rlBrgMulticast-MIB", "rlBrgStaticInetMulticastVlanTag"), (0, "Dell-rlBrgMulticast-MIB", "rlBrgStaticInetMulticastGroupAddressType"), (0, "Dell-rlBrgMulticast-MIB", "rlBrgStaticInetMulticastGroupAddress"), (0, "Dell-rlBrgMulticast-MIB", "rlBrgStaticInetMulticastSourceAddressType"), (0, "Dell-rlBrgMulticast-MIB", "rlBrgStaticInetMulticastSourceAddress"))
if mibBuilder.loadTexts: rlBrgStaticInetMulticastEntry.setStatus('current')
rlBrgStaticInetMulticastVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 5, 1, 1), VlanIndex())
if mibBuilder.loadTexts: rlBrgStaticInetMulticastVlanTag.setStatus('current')
rlBrgStaticInetMulticastGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 5, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgStaticInetMulticastGroupAddressType.setStatus('current')
rlBrgStaticInetMulticastGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 5, 1, 3), InetAddress())
if mibBuilder.loadTexts: rlBrgStaticInetMulticastGroupAddress.setStatus('current')
rlBrgStaticInetMulticastSourceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 5, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgStaticInetMulticastSourceAddressType.setStatus('current')
rlBrgStaticInetMulticastSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 5, 1, 5), InetAddress())
if mibBuilder.loadTexts: rlBrgStaticInetMulticastSourceAddress.setStatus('current')
rlBrgStaticInetMulticastFrwPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 5, 1, 6), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgStaticInetMulticastFrwPorts.setStatus('current')
rlBrgStaticInetMulticastForbiddenPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 5, 1, 7), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgStaticInetMulticastForbiddenPorts.setStatus('current')
rlBrgStaticInetMulticastStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 5, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgStaticInetMulticastStatus.setStatus('current')
rlBrgInetMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 89, 116, 6), )
if mibBuilder.loadTexts: rlBrgInetMulticastTable.setStatus('current')
rlBrgInetMulticastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 116, 6, 1), ).setIndexNames((0, "Dell-rlBrgMulticast-MIB", "rlBrgInetMulticastVlanTag"), (0, "Dell-rlBrgMulticast-MIB", "rlBrgInetMulticastGroupAddressType"), (0, "Dell-rlBrgMulticast-MIB", "rlBrgInetMulticastGroupAddress"), (0, "Dell-rlBrgMulticast-MIB", "rlBrgInetMulticastSourceAddressType"), (0, "Dell-rlBrgMulticast-MIB", "rlBrgInetMulticastSourceAddress"))
if mibBuilder.loadTexts: rlBrgInetMulticastEntry.setStatus('current')
rlBrgInetMulticastVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 6, 1, 1), VlanIndex())
if mibBuilder.loadTexts: rlBrgInetMulticastVlanTag.setStatus('current')
rlBrgInetMulticastGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 6, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgInetMulticastGroupAddressType.setStatus('current')
rlBrgInetMulticastGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 6, 1, 3), InetAddress())
if mibBuilder.loadTexts: rlBrgInetMulticastGroupAddress.setStatus('current')
rlBrgInetMulticastSourceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 6, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgInetMulticastSourceAddressType.setStatus('current')
rlBrgInetMulticastSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 6, 1, 5), InetAddress())
if mibBuilder.loadTexts: rlBrgInetMulticastSourceAddress.setStatus('current')
rlBrgInetMulticastEgressPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 6, 1, 6), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgInetMulticastEgressPorts.setStatus('current')
rlBrgInetMulticastLearntPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 6, 1, 7), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgInetMulticastLearntPorts.setStatus('current')
rlBrgIpmFdbRefTable = MibTable((1, 3, 6, 1, 4, 1, 89, 116, 7), )
if mibBuilder.loadTexts: rlBrgIpmFdbRefTable.setStatus('current')
rlBrgIpmFdbRefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 116, 7, 1), ).setIndexNames((0, "Dell-rlBrgMulticast-MIB", "rlBrgIpmFdbRefVlanTag"), (0, "Dell-rlBrgMulticast-MIB", "rlBrgIpmFdbRefGroupAddressType"), (0, "Dell-rlBrgMulticast-MIB", "rlBrgIpmFdbRefGroupAddress"), (0, "Dell-rlBrgMulticast-MIB", "rlBrgIpmFdbRefSourceAddressType"), (0, "Dell-rlBrgMulticast-MIB", "rlBrgIpmFdbRefSourceAddress"))
if mibBuilder.loadTexts: rlBrgIpmFdbRefEntry.setStatus('current')
rlBrgIpmFdbRefVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 7, 1, 1), VlanIndex())
if mibBuilder.loadTexts: rlBrgIpmFdbRefVlanTag.setStatus('current')
rlBrgIpmFdbRefGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 7, 1, 2), InetAddressType())
if mibBuilder.loadTexts: rlBrgIpmFdbRefGroupAddressType.setStatus('current')
rlBrgIpmFdbRefGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 7, 1, 3), InetAddress())
if mibBuilder.loadTexts: rlBrgIpmFdbRefGroupAddress.setStatus('current')
rlBrgIpmFdbRefSourceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 7, 1, 4), InetAddressType())
if mibBuilder.loadTexts: rlBrgIpmFdbRefSourceAddressType.setStatus('current')
rlBrgIpmFdbRefSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 7, 1, 5), InetAddress())
if mibBuilder.loadTexts: rlBrgIpmFdbRefSourceAddress.setStatus('current')
rlBrgIpmFdbRefPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 7, 1, 6), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgIpmFdbRefPorts.setStatus('current')
class DynamicCmdType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("createEntry", 0), ("deleteEntry", 1), ("addPorts", 2), ("deletePorts", 3))

rlBrgDynamicCmdTable = MibTable((1, 3, 6, 1, 4, 1, 89, 116, 8), )
if mibBuilder.loadTexts: rlBrgDynamicCmdTable.setStatus('current')
rlBrgDynamicCmdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 116, 8, 1), ).setIndexNames((0, "Dell-rlBrgMulticast-MIB", "rlBrgDynamicCmdKey"))
if mibBuilder.loadTexts: rlBrgDynamicCmdEntry.setStatus('current')
rlBrgDynamicCmdKey = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: rlBrgDynamicCmdKey.setStatus('current')
rlBrgDynamicCmdVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 8, 1, 2), VlanIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgDynamicCmdVlanTag.setStatus('current')
rlBrgDynamicCmdGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 8, 1, 3), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgDynamicCmdGroupAddressType.setStatus('current')
rlBrgDynamicCmdGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 8, 1, 4), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgDynamicCmdGroupAddress.setStatus('current')
rlBrgDynamicCmdSourceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 8, 1, 5), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgDynamicCmdSourceAddressType.setStatus('current')
rlBrgDynamicCmdSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 8, 1, 6), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgDynamicCmdSourceAddress.setStatus('current')
rlBrgDynamicCmdPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 8, 1, 7), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgDynamicCmdPorts.setStatus('current')
rlBrgDynamicCmdType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 8, 1, 8), DynamicCmdType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgDynamicCmdType.setStatus('current')
rlUserAssignedVidx = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 116, 9))
class VidxIndex(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4096, 32767), )
rlUserAssignedVidxConfigTable = MibTable((1, 3, 6, 1, 4, 1, 89, 116, 9, 1), )
if mibBuilder.loadTexts: rlUserAssignedVidxConfigTable.setStatus('current')
rlUserAssignedVidxConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 116, 9, 1, 1), ).setIndexNames((0, "Dell-rlBrgMulticast-MIB", "rlUserAssignedVidxConfigIndex"))
if mibBuilder.loadTexts: rlUserAssignedVidxConfigEntry.setStatus('current')
rlUserAssignedVidxConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 9, 1, 1, 1), VidxIndex())
if mibBuilder.loadTexts: rlUserAssignedVidxConfigIndex.setStatus('current')
rlUserAssignedVidxConfigPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 9, 1, 1, 2), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlUserAssignedVidxConfigPorts.setStatus('current')
rlUserAssignedVidxConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 116, 9, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlUserAssignedVidxConfigRowStatus.setStatus('current')
rlUserAssignedVidxGetNextFreeIndex = MibScalar((1, 3, 6, 1, 4, 1, 89, 116, 9, 2), VidxIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlUserAssignedVidxGetNextFreeIndex.setStatus('current')
rlBrgMulticastCurrentNumberOfEntries = MibScalar((1, 3, 6, 1, 4, 1, 89, 116, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgMulticastCurrentNumberOfEntries.setStatus('current')
mibBuilder.exportSymbols("Dell-rlBrgMulticast-MIB", rlBrgInetMulticastSourceAddress=rlBrgInetMulticastSourceAddress, rlBrgDynamicCmdType=rlBrgDynamicCmdType, rlBrgIpMulticastSourceAddress=rlBrgIpMulticastSourceAddress, rlBrgIpmFdbRefGroupAddressType=rlBrgIpmFdbRefGroupAddressType, rlBrgDynamicCmdSourceAddressType=rlBrgDynamicCmdSourceAddressType, rlBrgStaticIpMulticastStatus=rlBrgStaticIpMulticastStatus, rlBrgIpmFdbRefPorts=rlBrgIpmFdbRefPorts, rlBrgDynamicCmdEntry=rlBrgDynamicCmdEntry, rlBrgInetMulticastLearntPorts=rlBrgInetMulticastLearntPorts, rlBrgStaticInetMulticastVlanTag=rlBrgStaticInetMulticastVlanTag, rlBrgMulticastCurrentNumberOfEntries=rlBrgMulticastCurrentNumberOfEntries, rlBrgDynamicCmdTable=rlBrgDynamicCmdTable, rlBrgIpMulticastEntry=rlBrgIpMulticastEntry, rlBrgIpMulticastVlanTag=rlBrgIpMulticastVlanTag, rlBrgMulticastMibVersion=rlBrgMulticastMibVersion, rlBrgStaticInetMulticastTable=rlBrgStaticInetMulticastTable, rlBrgStaticInetMulticastSourceAddress=rlBrgStaticInetMulticastSourceAddress, rlBrgInetMulticastTable=rlBrgInetMulticastTable, rlBrgDynamicCmdKey=rlBrgDynamicCmdKey, rlBrgInetMulticastVlanTag=rlBrgInetMulticastVlanTag, rlBrgDynamicCmdGroupAddress=rlBrgDynamicCmdGroupAddress, rlBrgInetMulticastEntry=rlBrgInetMulticastEntry, rlBrgStaticIpMulticastGroupAddress=rlBrgStaticIpMulticastGroupAddress, rlBrgMulticast=rlBrgMulticast, rlBrgIpMulticastGroupAddress=rlBrgIpMulticastGroupAddress, rlBrgStaticInetMulticastGroupAddress=rlBrgStaticInetMulticastGroupAddress, DynamicCmdType=DynamicCmdType, rlBrgDynamicCmdVlanTag=rlBrgDynamicCmdVlanTag, rlBrgIpmFdbRefTable=rlBrgIpmFdbRefTable, rlBrgDynamicCmdPorts=rlBrgDynamicCmdPorts, VidxIndex=VidxIndex, rlUserAssignedVidxConfigEntry=rlUserAssignedVidxConfigEntry, rlBrgStaticIpMulticastSourceAddress=rlBrgStaticIpMulticastSourceAddress, rlBrgStaticInetMulticastFrwPorts=rlBrgStaticInetMulticastFrwPorts, rlBrgStaticInetMulticastStatus=rlBrgStaticInetMulticastStatus, rlUserAssignedVidxConfigTable=rlUserAssignedVidxConfigTable, rlBrgStaticInetMulticastGroupAddressType=rlBrgStaticInetMulticastGroupAddressType, rlBrgInetMulticastGroupAddressType=rlBrgInetMulticastGroupAddressType, rlBrgInetMulticastSourceAddressType=rlBrgInetMulticastSourceAddressType, rlUserAssignedVidx=rlUserAssignedVidx, rlBrgIpmFdbRefVlanTag=rlBrgIpmFdbRefVlanTag, rlBrgIpmFdbRefSourceAddress=rlBrgIpmFdbRefSourceAddress, rlBrgDynamicCmdSourceAddress=rlBrgDynamicCmdSourceAddress, rlBrgStaticInetMulticastForbiddenPorts=rlBrgStaticInetMulticastForbiddenPorts, rlBrgIpmFdbRefGroupAddress=rlBrgIpmFdbRefGroupAddress, rlBrgStaticInetMulticastSourceAddressType=rlBrgStaticInetMulticastSourceAddressType, rlBrgInetMulticastGroupAddress=rlBrgInetMulticastGroupAddress, PYSNMP_MODULE_ID=rlBrgMulticast, rlBrgInetMulticastEgressPorts=rlBrgInetMulticastEgressPorts, rlBrgIpMulticastTable=rlBrgIpMulticastTable, rlBrgStaticIpMulticastForbiddenPorts=rlBrgStaticIpMulticastForbiddenPorts, rlBrgStaticIpMulticastEntry=rlBrgStaticIpMulticastEntry, rlBrgIpMulticastEgressPorts=rlBrgIpMulticastEgressPorts, rlBrgStaticIpMulticastVlanTag=rlBrgStaticIpMulticastVlanTag, rlBrgStaticIpMulticastTable=rlBrgStaticIpMulticastTable, rlBrgStaticInetMulticastEntry=rlBrgStaticInetMulticastEntry, rlBrgStaticIpMulticastFrwPorts=rlBrgStaticIpMulticastFrwPorts, rlBrgDynamicCmdGroupAddressType=rlBrgDynamicCmdGroupAddressType, rlUserAssignedVidxConfigRowStatus=rlUserAssignedVidxConfigRowStatus, rlUserAssignedVidxGetNextFreeIndex=rlUserAssignedVidxGetNextFreeIndex, rlUserAssignedVidxConfigPorts=rlUserAssignedVidxConfigPorts, rlBrgIpMulticastLearntPorts=rlBrgIpMulticastLearntPorts, rlBrgIpmFdbRefSourceAddressType=rlBrgIpmFdbRefSourceAddressType, rlBrgIpmFdbRefEntry=rlBrgIpmFdbRefEntry, rlUserAssignedVidxConfigIndex=rlUserAssignedVidxConfigIndex)
