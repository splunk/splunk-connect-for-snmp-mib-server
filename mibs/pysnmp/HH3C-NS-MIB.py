#
# PySNMP MIB module HH3C-NS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-NS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:15:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, IpAddress, Integer32, Counter64, NotificationType, TimeTicks, ModuleIdentity, iso, ObjectIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Bits, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "IpAddress", "Integer32", "Counter64", "NotificationType", "TimeTicks", "ModuleIdentity", "iso", "ObjectIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Bits", "Unsigned32")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
hh3cNS = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 20))
hh3cNS.setRevisions(('2004-09-21 14:15',))
if mibBuilder.loadTexts: hh3cNS.setLastUpdated('200411071353Z')
if mibBuilder.loadTexts: hh3cNS.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cNSMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1))
hh3cNSMibScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 1))
hh3cNSActiveTime = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNSActiveTime.setStatus('current')
hh3cNSInactiveTime = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNSInactiveTime.setStatus('current')
hh3cNSVersion = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(9, 9), )).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNSVersion.setStatus('current')
hh3cNSAsType = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("peerAs", 1), ("originAs", 2))).clone('peerAs')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNSAsType.setStatus('current')
hh3cNSTemplateRefreshRate = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNSTemplateRefreshRate.setStatus('current')
hh3cNSTemplateTimeout = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNSTemplateTimeout.setStatus('current')
hh3cNSExportVlanOrIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("vlanId", 1), ("interfaceIndex", 2))).clone('vlanId')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNSExportVlanOrIfIndex.setStatus('current')
hh3cNSProcessSlotTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 2), )
if mibBuilder.loadTexts: hh3cNSProcessSlotTable.setStatus('current')
hh3cNSProcessSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 2, 1), ).setIndexNames((0, "HH3C-NS-MIB", "hh3cNSProcessSlot"))
if mibBuilder.loadTexts: hh3cNSProcessSlotEntry.setStatus('current')
hh3cNSProcessSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNSProcessSlot.setStatus('current')
hh3cNSExportConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 3), )
if mibBuilder.loadTexts: hh3cNSExportConfigTable.setStatus('current')
hh3cNSExportConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 3, 1), ).setIndexNames((0, "HH3C-NS-MIB", "hh3cNSAggregationType"))
if mibBuilder.loadTexts: hh3cNSExportConfigEntry.setStatus('current')
hh3cNSAggregationType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("v5Statistics", 1), ("as", 2), ("destinationPrefix", 3), ("sourcePrefix", 4), ("protocolPort", 5), ("prefix", 6), ("tosAs", 7), ("tosDestinationPrefix", 8), ("tosSourcePrefix", 9), ("tosProtocolPort", 10), ("tosPrefix", 11), ("prefixPort", 12))))
if mibBuilder.loadTexts: hh3cNSAggregationType.setStatus('current')
hh3cNSHostIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNSHostIPAddr.setStatus('current')
hh3cNSHostPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNSHostPort.setStatus('current')
hh3cNSSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNSSrcIpAddr.setStatus('current')
hh3cNSState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNSState.setStatus('current')
hh3cNSExportInformationTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 4), )
if mibBuilder.loadTexts: hh3cNSExportInformationTable.setStatus('current')
hh3cNSExportInformationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 4, 1), ).setIndexNames((0, "HH3C-NS-MIB", "hh3cNSExportType"), (0, "HH3C-NS-MIB", "hh3cNSExportSlot"))
if mibBuilder.loadTexts: hh3cNSExportInformationEntry.setStatus('current')
hh3cNSExportType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)))
if mibBuilder.loadTexts: hh3cNSExportType.setStatus('current')
hh3cNSExportSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 4, 1, 2), Integer32())
if mibBuilder.loadTexts: hh3cNSExportSlot.setStatus('current')
hh3cNSExportStream = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNSExportStream.setStatus('current')
hh3cNSExportNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNSExportNum.setStatus('current')
hh3cNSExportFail = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNSExportFail.setStatus('current')
hh3cNSConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 5), )
if mibBuilder.loadTexts: hh3cNSConfigTable.setStatus('current')
hh3cNSConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 5, 1), ).setIndexNames((0, "HH3C-NS-MIB", "hh3cNSSourceSlot"), (0, "HH3C-NS-MIB", "hh3cNSSourceIfIndex"), (0, "HH3C-NS-MIB", "hh3cNSDestSlot"))
if mibBuilder.loadTexts: hh3cNSConfigEntry.setStatus('current')
hh3cNSSourceSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hh3cNSSourceSlot.setStatus('current')
hh3cNSSourceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 5, 1, 2), Integer32())
if mibBuilder.loadTexts: hh3cNSSourceIfIndex.setStatus('current')
hh3cNSDestSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 5, 1, 3), Integer32())
if mibBuilder.loadTexts: hh3cNSDestSlot.setStatus('current')
hh3cNSDirect = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2))).clone('inbound')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNSDirect.setStatus('current')
hh3cNSACLNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNSACLNumber.setStatus('current')
hh3cNSACLName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 5, 1, 6), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNSACLName.setStatus('current')
hh3cNSACLRule = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 5, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNSACLRule.setStatus('current')
hh3cNSConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 5, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNSConfigRowStatus.setStatus('current')
hh3cNSStatusTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 6), )
if mibBuilder.loadTexts: hh3cNSStatusTable.setStatus('current')
hh3cNSStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 6, 1), ).setIndexNames((0, "HH3C-NS-MIB", "hh3cNSSlot"))
if mibBuilder.loadTexts: hh3cNSStatusEntry.setStatus('current')
hh3cNSSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cNSSlot.setStatus('current')
hh3cNSActiveStreamNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNSActiveStreamNumber.setStatus('current')
hh3cNSTotalStreamNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNSTotalStreamNumber.setStatus('current')
hh3cNSTotalPacketNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNSTotalPacketNumber.setStatus('current')
hh3cNSTotalOctetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNSTotalOctetNumber.setStatus('current')
hh3cNSMPLSActiveStreamNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNSMPLSActiveStreamNumber.setStatus('current')
hh3cNSMPLSTotalStreamNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNSMPLSTotalStreamNumber.setStatus('current')
hh3cNSMPLSTotalPacketNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNSMPLSTotalPacketNumber.setStatus('current')
hh3cNSMPLSTotalOctetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNSMPLSTotalOctetNumber.setStatus('current')
hh3cNSResetFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNSResetFlag.setStatus('current')
hh3cNSResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 20, 1, 6, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNSResetTime.setStatus('current')
mibBuilder.exportSymbols("HH3C-NS-MIB", hh3cNSProcessSlotTable=hh3cNSProcessSlotTable, hh3cNSSrcIpAddr=hh3cNSSrcIpAddr, hh3cNSTemplateTimeout=hh3cNSTemplateTimeout, hh3cNSExportInformationEntry=hh3cNSExportInformationEntry, hh3cNS=hh3cNS, hh3cNSAggregationType=hh3cNSAggregationType, hh3cNSProcessSlotEntry=hh3cNSProcessSlotEntry, hh3cNSExportConfigTable=hh3cNSExportConfigTable, hh3cNSVersion=hh3cNSVersion, hh3cNSTotalStreamNumber=hh3cNSTotalStreamNumber, hh3cNSTotalPacketNumber=hh3cNSTotalPacketNumber, hh3cNSDirect=hh3cNSDirect, hh3cNSExportVlanOrIfIndex=hh3cNSExportVlanOrIfIndex, hh3cNSSourceIfIndex=hh3cNSSourceIfIndex, hh3cNSStatusTable=hh3cNSStatusTable, hh3cNSACLRule=hh3cNSACLRule, PYSNMP_MODULE_ID=hh3cNS, hh3cNSActiveTime=hh3cNSActiveTime, hh3cNSTemplateRefreshRate=hh3cNSTemplateRefreshRate, hh3cNSMibObjects=hh3cNSMibObjects, hh3cNSExportSlot=hh3cNSExportSlot, hh3cNSACLName=hh3cNSACLName, hh3cNSDestSlot=hh3cNSDestSlot, hh3cNSMPLSTotalOctetNumber=hh3cNSMPLSTotalOctetNumber, hh3cNSExportType=hh3cNSExportType, hh3cNSExportStream=hh3cNSExportStream, hh3cNSExportNum=hh3cNSExportNum, hh3cNSResetFlag=hh3cNSResetFlag, hh3cNSMibScalarObjects=hh3cNSMibScalarObjects, hh3cNSHostPort=hh3cNSHostPort, hh3cNSConfigTable=hh3cNSConfigTable, hh3cNSSlot=hh3cNSSlot, hh3cNSActiveStreamNumber=hh3cNSActiveStreamNumber, hh3cNSMPLSActiveStreamNumber=hh3cNSMPLSActiveStreamNumber, hh3cNSExportInformationTable=hh3cNSExportInformationTable, hh3cNSExportFail=hh3cNSExportFail, hh3cNSResetTime=hh3cNSResetTime, hh3cNSAsType=hh3cNSAsType, hh3cNSState=hh3cNSState, hh3cNSStatusEntry=hh3cNSStatusEntry, hh3cNSConfigRowStatus=hh3cNSConfigRowStatus, hh3cNSHostIPAddr=hh3cNSHostIPAddr, hh3cNSConfigEntry=hh3cNSConfigEntry, hh3cNSMPLSTotalPacketNumber=hh3cNSMPLSTotalPacketNumber, hh3cNSMPLSTotalStreamNumber=hh3cNSMPLSTotalStreamNumber, hh3cNSTotalOctetNumber=hh3cNSTotalOctetNumber, hh3cNSInactiveTime=hh3cNSInactiveTime, hh3cNSACLNumber=hh3cNSACLNumber, hh3cNSProcessSlot=hh3cNSProcessSlot, hh3cNSSourceSlot=hh3cNSSourceSlot, hh3cNSExportConfigEntry=hh3cNSExportConfigEntry)
