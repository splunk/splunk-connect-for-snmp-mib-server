#
# PySNMP MIB module ADH-NETCOM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ADH-NETCOM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:58:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Counter64, IpAddress, enterprises, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter32, Gauge32, ModuleIdentity, iso, Integer32, ObjectIdentity, Bits, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "IpAddress", "enterprises", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter32", "Gauge32", "ModuleIdentity", "iso", "Integer32", "ObjectIdentity", "Bits", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
environmentalTechnology = ModuleIdentity((1, 3, 6, 1, 4, 1, 32185))
environmentalTechnology.setRevisions(('2010-02-10 00:00',))
if mibBuilder.loadTexts: environmentalTechnology.setLastUpdated('201002100000Z')
if mibBuilder.loadTexts: environmentalTechnology.setOrganization('Environmental Technology Inc.')
netcom = ObjectIdentity((1, 3, 6, 1, 4, 1, 32185, 2))
if mibBuilder.loadTexts: netcom.setStatus('current')
statusInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 32185, 2, 1))
paramsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 32185, 2, 2))
allStatuses = MibScalar((1, 3, 6, 1, 4, 1, 32185, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(80, 80)).setFixedLength(80)).setMaxAccess("readonly")
if mibBuilder.loadTexts: allStatuses.setStatus('current')
pressurePSI = MibScalar((1, 3, 6, 1, 4, 1, 32185, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: pressurePSI.setStatus('current')
dutycycle = MibScalar((1, 3, 6, 1, 4, 1, 32185, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dutycycle.setStatus('current')
statusVars = MibScalar((1, 3, 6, 1, 4, 1, 32185, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: statusVars.setStatus('current')
temperature = MibScalar((1, 3, 6, 1, 4, 1, 32185, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperature.setStatus('current')
alarms = MibScalar((1, 3, 6, 1, 4, 1, 32185, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(30, 30)).setFixedLength(30)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarms.setStatus('current')
compressorHours = MibScalar((1, 3, 6, 1, 4, 1, 32185, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(30, 30)).setFixedLength(30)).setMaxAccess("readonly")
if mibBuilder.loadTexts: compressorHours.setStatus('current')
majorState = MibScalar((1, 3, 6, 1, 4, 1, 32185, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("online", 1), ("standby", 2), ("leaky", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: majorState.setStatus('current')
cycleTime = MibScalar((1, 3, 6, 1, 4, 1, 32185, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cycleTime.setStatus('current')
lowerLimit = MibScalar((1, 3, 6, 1, 4, 1, 32185, 2, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowerLimit.setStatus('current')
upperLimit = MibScalar((1, 3, 6, 1, 4, 1, 32185, 2, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: upperLimit.setStatus('current')
lowerAlarmLimit = MibScalar((1, 3, 6, 1, 4, 1, 32185, 2, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowerAlarmLimit.setStatus('current')
upperAlarmLimit = MibScalar((1, 3, 6, 1, 4, 1, 32185, 2, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: upperAlarmLimit.setStatus('current')
mibBuilder.exportSymbols("ADH-NETCOM-MIB", cycleTime=cycleTime, statusVars=statusVars, PYSNMP_MODULE_ID=environmentalTechnology, netcom=netcom, pressurePSI=pressurePSI, environmentalTechnology=environmentalTechnology, alarms=alarms, lowerAlarmLimit=lowerAlarmLimit, dutycycle=dutycycle, upperAlarmLimit=upperAlarmLimit, temperature=temperature, paramsInfo=paramsInfo, statusInfo=statusInfo, majorState=majorState, lowerLimit=lowerLimit, compressorHours=compressorHours, upperLimit=upperLimit, allStatuses=allStatuses)
