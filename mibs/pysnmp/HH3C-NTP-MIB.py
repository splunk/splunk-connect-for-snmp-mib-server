#
# PySNMP MIB module HH3C-NTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-NTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:16:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
hh3cRhw, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cRhw")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Counter64, NotificationType, Gauge32, Bits, TimeTicks, Unsigned32, IpAddress, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ObjectIdentity, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter64", "NotificationType", "Gauge32", "Bits", "TimeTicks", "Unsigned32", "IpAddress", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ObjectIdentity", "ModuleIdentity")
TextualConvention, RowStatus, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TruthValue", "DisplayString")
hh3cNTP = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 8, 22))
hh3cNTP.setRevisions(('2003-03-15 00:00',))
if mibBuilder.loadTexts: hh3cNTP.setLastUpdated('200303150000Z')
if mibBuilder.loadTexts: hh3cNTP.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cNTPSystemMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1))
hh3cNTPSystemMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1))
hh3cNTPSysLeap = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noWarning", 0), ("addSecond", 1), ("subtractSecond", 2), ("alarm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPSysLeap.setStatus('current')
hh3cNTPSysStratum = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPSysStratum.setStatus('current')
hh3cNTPSysPrecision = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-20, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPSysPrecision.setStatus('current')
hh3cNTPSysRootdelay = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPSysRootdelay.setStatus('current')
hh3cNTPSysRootdispersion = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPSysRootdispersion.setStatus('current')
hh3cNTPSysRefid = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPSysRefid.setStatus('current')
hh3cNTPSysReftime = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPSysReftime.setStatus('current')
hh3cNTPSysPoll = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-20, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPSysPoll.setStatus('current')
hh3cNTPSysPeer = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPSysPeer.setStatus('current')
hh3cNTPSysState = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noUpdateClock", 0), ("getfreqInfo", 1), ("clockBySet", 2), ("clockBySetAndNoFreq", 3), ("clockBySyns", 4), ("findError", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPSysState.setStatus('current')
hh3cNTPSysOffset = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPSysOffset.setStatus('current')
hh3cNTPSysDrift = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPSysDrift.setStatus('current')
hh3cNTPSysCompliance = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPSysCompliance.setStatus('current')
hh3cNTPSysClock = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPSysClock.setStatus('current')
hh3cNTPSysStabil = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPSysStabil.setStatus('current')
hh3cNTPSysAuthenticate = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noAuthenticate", 0), ("authenticate", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNTPSysAuthenticate.setStatus('current')
hh3cNTPSysPollSec = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 1048576))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNTPSysPollSec.setStatus('current')
hh3cNTPSysClockSec = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPSysClockSec.setStatus('current')
hh3cNTPServerIP = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 22, 1, 1, 19), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNTPServerIP.setStatus('current')
hh3cNTPPeerMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2))
hh3cNTPPeerMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1))
hh3cNTPPeerTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1), )
if mibBuilder.loadTexts: hh3cNTPPeerTable.setStatus('current')
hh3cNTPPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1), ).setIndexNames((0, "HH3C-NTP-MIB", "hh3cNTPPeerRemAdr"), (0, "HH3C-NTP-MIB", "hh3cNTPPeerHMode"))
if mibBuilder.loadTexts: hh3cNTPPeerEntry.setStatus('current')
hh3cNTPPeerConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerConfig.setStatus('current')
hh3cNTPPeerAuthenable = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerAuthenable.setStatus('current')
hh3cNTPPeerAuthentic = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerAuthentic.setStatus('current')
hh3cNTPPeerRemAdr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 4), IpAddress())
if mibBuilder.loadTexts: hh3cNTPPeerRemAdr.setStatus('current')
hh3cNTPPeerRemPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerRemPort.setStatus('current')
hh3cNTPPeerLocAdr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerLocAdr.setStatus('current')
hh3cNTPPeerLocPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerLocPort.setStatus('current')
hh3cNTPPeerLeap = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noWarning", 0), ("addSecond", 1), ("subtractSecond", 2), ("alarm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerLeap.setStatus('current')
hh3cNTPPeerHMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unspecified", 0), ("symmetricActive", 1), ("symmetricPassive", 2), ("client", 3), ("server", 4), ("broadcast", 5), ("reservedControl", 6), ("reservedPrivate", 7), ("broadcastclient", 8), ("multicastclient", 9))))
if mibBuilder.loadTexts: hh3cNTPPeerHMode.setStatus('current')
hh3cNTPPeerStratum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerStratum.setStatus('current')
hh3cNTPPeerPPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-20, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerPPoll.setStatus('current')
hh3cNTPPeerHPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-20, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerHPoll.setStatus('current')
hh3cNTPPeerPrecision = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-20, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerPrecision.setStatus('current')
hh3cNTPPeerRootDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerRootDelay.setStatus('current')
hh3cNTPPeerRootDispersion = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerRootDispersion.setStatus('current')
hh3cNTPPeerRefId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerRefId.setStatus('current')
hh3cNTPPeerRefTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerRefTime.setStatus('current')
hh3cNTPPeerOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerOrg.setStatus('current')
hh3cNTPPeerRec = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerRec.setStatus('current')
hh3cNTPPeerXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerXmt.setStatus('current')
hh3cNTPPeerReach = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerReach.setStatus('current')
hh3cNTPPeerValid = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerValid.setStatus('current')
hh3cNTPPeerTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerTimer.setStatus('current')
hh3cNTPPeerDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerDelay.setStatus('current')
hh3cNTPPeerOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerOffset.setStatus('current')
hh3cNTPPeerJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 26), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerJitter.setStatus('current')
hh3cNTPPeerDispersion = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 27), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerDispersion.setStatus('current')
hh3cNTPPeerKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerKeyId.setStatus('current')
hh3cNTPPeerFiltDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 29), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerFiltDelay.setStatus('current')
hh3cNTPPeerFiltOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 30), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerFiltOffset.setStatus('current')
hh3cNTPPeerFiltError = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 31), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerFiltError.setStatus('current')
hh3cNTPPeerPMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unspecified", 0), ("symmetricActive", 1), ("symmetricPassive", 2), ("client", 3), ("server", 4), ("broadcast", 5), ("reservedControl", 6), ("reservedPrivate", 7), ("broadcastclient", 8), ("multicastclient", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerPMode.setStatus('current')
hh3cNTPPeerReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerReceived.setStatus('current')
hh3cNTPPeerSent = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerSent.setStatus('current')
hh3cNTPPeerFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 35), Bits().clone(namedValues=NamedValues(("recvRepeatMsg", 0), ("recvremanMsg", 1), ("unSynMsg", 2), ("dispBeyond", 3), ("unauthenticate", 4), ("unSynClock", 5), ("straBeyond", 6), ("rootDispBeyond", 7), ("noAuthen", 8), ("refuOperate", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNTPPeerFlash.setStatus('current')
hh3cNTPPeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 22, 2, 1, 1, 1, 36), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNTPPeerRowStatus.setStatus('current')
mibBuilder.exportSymbols("HH3C-NTP-MIB", hh3cNTPPeerEntry=hh3cNTPPeerEntry, hh3cNTPPeerFlash=hh3cNTPPeerFlash, hh3cNTPPeerJitter=hh3cNTPPeerJitter, hh3cNTPPeerValid=hh3cNTPPeerValid, hh3cNTPPeerLocPort=hh3cNTPPeerLocPort, hh3cNTPPeerRec=hh3cNTPPeerRec, hh3cNTPSysStabil=hh3cNTPSysStabil, hh3cNTPPeerRowStatus=hh3cNTPPeerRowStatus, hh3cNTPPeerFiltDelay=hh3cNTPPeerFiltDelay, hh3cNTPPeerAuthentic=hh3cNTPPeerAuthentic, hh3cNTPSysRefid=hh3cNTPSysRefid, hh3cNTPSysReftime=hh3cNTPSysReftime, hh3cNTPPeerMIBObjects=hh3cNTPPeerMIBObjects, hh3cNTPPeerHMode=hh3cNTPPeerHMode, PYSNMP_MODULE_ID=hh3cNTP, hh3cNTPPeerHPoll=hh3cNTPPeerHPoll, hh3cNTPPeerReach=hh3cNTPPeerReach, hh3cNTPSysCompliance=hh3cNTPSysCompliance, hh3cNTPSysClock=hh3cNTPSysClock, hh3cNTPPeerKeyId=hh3cNTPPeerKeyId, hh3cNTPPeerOffset=hh3cNTPPeerOffset, hh3cNTPPeerPMode=hh3cNTPPeerPMode, hh3cNTPSysLeap=hh3cNTPSysLeap, hh3cNTPSysPeer=hh3cNTPSysPeer, hh3cNTPPeerLocAdr=hh3cNTPPeerLocAdr, hh3cNTPPeerFiltOffset=hh3cNTPPeerFiltOffset, hh3cNTPSysPrecision=hh3cNTPSysPrecision, hh3cNTPSysClockSec=hh3cNTPSysClockSec, hh3cNTPPeerPPoll=hh3cNTPPeerPPoll, hh3cNTPPeerFiltError=hh3cNTPPeerFiltError, hh3cNTPPeerSent=hh3cNTPPeerSent, hh3cNTPSysState=hh3cNTPSysState, hh3cNTPPeerLeap=hh3cNTPPeerLeap, hh3cNTPPeerPrecision=hh3cNTPPeerPrecision, hh3cNTPSystemMIBObjects=hh3cNTPSystemMIBObjects, hh3cNTPSysDrift=hh3cNTPSysDrift, hh3cNTPPeerRootDispersion=hh3cNTPPeerRootDispersion, hh3cNTPPeerStratum=hh3cNTPPeerStratum, hh3cNTPSysPoll=hh3cNTPSysPoll, hh3cNTPPeerConfig=hh3cNTPPeerConfig, hh3cNTPPeerXmt=hh3cNTPPeerXmt, hh3cNTPSystemMIB=hh3cNTPSystemMIB, hh3cNTPPeerDispersion=hh3cNTPPeerDispersion, hh3cNTPPeerRootDelay=hh3cNTPPeerRootDelay, hh3cNTP=hh3cNTP, hh3cNTPPeerAuthenable=hh3cNTPPeerAuthenable, hh3cNTPSysRootdelay=hh3cNTPSysRootdelay, hh3cNTPServerIP=hh3cNTPServerIP, hh3cNTPPeerReceived=hh3cNTPPeerReceived, hh3cNTPPeerRefId=hh3cNTPPeerRefId, hh3cNTPSysStratum=hh3cNTPSysStratum, hh3cNTPPeerRemPort=hh3cNTPPeerRemPort, hh3cNTPPeerDelay=hh3cNTPPeerDelay, hh3cNTPPeerOrg=hh3cNTPPeerOrg, hh3cNTPSysPollSec=hh3cNTPSysPollSec, hh3cNTPPeerRemAdr=hh3cNTPPeerRemAdr, hh3cNTPPeerTable=hh3cNTPPeerTable, hh3cNTPSysOffset=hh3cNTPSysOffset, hh3cNTPPeerMIB=hh3cNTPPeerMIB, hh3cNTPSysRootdispersion=hh3cNTPSysRootdispersion, hh3cNTPPeerTimer=hh3cNTPPeerTimer, hh3cNTPPeerRefTime=hh3cNTPPeerRefTime, hh3cNTPSysAuthenticate=hh3cNTPSysAuthenticate)
