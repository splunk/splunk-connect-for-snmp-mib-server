#
# PySNMP MIB module CISCOSB-rlFft (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCOSB-rlFft
# Produced by pysmi-0.3.4 at Mon Apr 29 18:08:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
switch001, = mibBuilder.importSymbols("CISCOSB-MIB", "switch001")
InetAddressType, InetAddress, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetAddressPrefixLength")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, Integer32, Counter32, Gauge32, TimeTicks, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, NotificationType, Unsigned32, iso, Counter64, IpAddress, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Integer32", "Counter32", "Gauge32", "TimeTicks", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "NotificationType", "Unsigned32", "iso", "Counter64", "IpAddress", "ObjectIdentity")
RowStatus, TextualConvention, TruthValue, DisplayString, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TruthValue", "DisplayString", "PhysAddress")
class Percents(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 100)

class NetNumber(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

rlFFT = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47))
rlFFT.setRevisions(('2004-06-01 00:00',))
if mibBuilder.loadTexts: rlFFT.setLastUpdated('200406010000Z')
if mibBuilder.loadTexts: rlFFT.setOrganization('Cisco Small Business')
rlIpFFT = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1))
rlIpFftMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftMibVersion.setStatus('current')
rlInetMaxFftNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetMaxFftNumber.setStatus('current')
rlInetFftDynamicSupported = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftDynamicSupported.setStatus('current')
rlInetFftSubnetSupported = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubnetSupported.setStatus('current')
rlIpFftUnknownAddrMsgUsed = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("used", 1), ("unused", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftUnknownAddrMsgUsed.setStatus('current')
rlInetFftAgingTimeSupported = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftAgingTimeSupported.setStatus('current')
rlIpFftSrcAddrSupported = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSrcAddrSupported.setStatus('current')
rlInetFftAgingTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlInetFftAgingTimeout.setStatus('current')
rlIpFftRedBoundary = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 9), Percents()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIpFftRedBoundary.setStatus('current')
rlIpFftYellowBoundary = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 10), Percents()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIpFftYellowBoundary.setStatus('current')
rlInetFftNumTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 12), )
if mibBuilder.loadTexts: rlInetFftNumTable.setStatus('current')
rlInetFftNumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 12, 1), ).setIndexNames((0, "CISCOSB-rlFft", "rlInetFftNumIndex"), (0, "CISCOSB-rlFft", "rlInetFftNumAddressType"))
if mibBuilder.loadTexts: rlInetFftNumEntry.setStatus('current')
rlInetFftNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftNumIndex.setStatus('current')
rlInetFftNumAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 12, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftNumAddressType.setStatus('current')
rlInetFftNumStnRoutesNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftNumStnRoutesNumber.setStatus('current')
rlInetFftNumSubRoutesNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftNumSubRoutesNumber.setStatus('current')
rlInetFftNumInetTomeRoutesNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftNumInetTomeRoutesNumber.setStatus('current')
rlInetFftStnTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 13), )
if mibBuilder.loadTexts: rlInetFftStnTable.setStatus('current')
rlInetFftStnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 13, 1), ).setIndexNames((0, "CISCOSB-rlFft", "rlInetFftStnIndex"), (0, "CISCOSB-rlFft", "rlInetFftStnMrid"), (0, "CISCOSB-rlFft", "rlInetFftStnDstInetAddressType"), (0, "CISCOSB-rlFft", "rlInetFftStnDstInetAddress"))
if mibBuilder.loadTexts: rlInetFftStnEntry.setStatus('current')
rlInetFftStnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftStnIndex.setStatus('current')
rlInetFftStnMrid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftStnMrid.setStatus('current')
rlInetFftStnDstInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 13, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftStnDstInetAddressType.setStatus('current')
rlInetFftStnDstInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 13, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftStnDstInetAddress.setStatus('current')
rlInetFftStnDstRouteInetPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 13, 1, 5), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftStnDstRouteInetPrefix.setStatus('current')
rlInetFftStnDstInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftStnDstInetAddrType.setStatus('current')
rlInetFftStnDstMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 13, 1, 7), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftStnDstMacAddress.setStatus('current')
rlInetFftStnSrcMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 13, 1, 8), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftStnSrcMacAddress.setStatus('current')
rlInetFftStnOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 13, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftStnOutIfIndex.setStatus('current')
rlInetFftStnVid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 13, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftStnVid.setStatus('current')
rlInetFftStnTaggedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 13, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("untagged", 1), ("tagged", 2), ("basedPortConfig", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftStnTaggedMode.setStatus('current')
rlInetFftStnAge = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 13, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftStnAge.setStatus('current')
rlInetFftSubTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14), )
if mibBuilder.loadTexts: rlInetFftSubTable.setStatus('current')
rlInetFftSubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1), ).setIndexNames((0, "CISCOSB-rlFft", "rlInetFftSubMrid"), (0, "CISCOSB-rlFft", "rlInetFftSubDstInetSubnetType"), (0, "CISCOSB-rlFft", "rlInetFftSubDstInetSubnet"), (0, "CISCOSB-rlFft", "rlInetFftSubDstInetPrefix"))
if mibBuilder.loadTexts: rlInetFftSubEntry.setStatus('current')
rlInetFftSubMrid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubMrid.setStatus('current')
rlInetFftSubDstInetSubnetType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubDstInetSubnetType.setStatus('current')
rlInetFftSubDstInetSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubDstInetSubnet.setStatus('current')
rlInetFftSubDstInetPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 4), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubDstInetPrefix.setStatus('current')
rlInetFftSubNextHopSetRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopSetRefCount.setStatus('current')
rlInetFftSubNextHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopCount.setStatus('current')
rlInetFftSubNextHopIfindex1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopIfindex1.setStatus('current')
rlInetFftSubNextHopInetAddr1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopInetAddr1Type.setStatus('current')
rlInetFftSubNextHopInetAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 9), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopInetAddr1.setStatus('current')
rlInetFftSubNextHopIfindex2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopIfindex2.setStatus('current')
rlInetFftSubNextHopInetAddr2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 11), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopInetAddr2Type.setStatus('current')
rlInetFftSubNextHopInetAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 12), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopInetAddr2.setStatus('current')
rlInetFftSubNextHopIfindex3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopIfindex3.setStatus('current')
rlInetFftSubNextHopInetAddr3Type = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 14), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopInetAddr3Type.setStatus('current')
rlInetFftSubNextHopInetAddr3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 15), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopInetAddr3.setStatus('current')
rlInetFftSubNextHopIfindex4 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopIfindex4.setStatus('current')
rlInetFftSubNextHopInetAddr4Type = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 17), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopInetAddr4Type.setStatus('current')
rlInetFftSubNextHopInetAddr4 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 18), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopInetAddr4.setStatus('current')
rlInetFftSubNextHopIfindex5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopIfindex5.setStatus('current')
rlInetFftSubNextHopInetAddr5Type = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 20), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopInetAddr5Type.setStatus('current')
rlInetFftSubNextHopInetAddr5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 21), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopInetAddr5.setStatus('current')
rlInetFftSubNextHopIfindex6 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopIfindex6.setStatus('current')
rlInetFftSubNextHopInetAddr6Type = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 23), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopInetAddr6Type.setStatus('current')
rlInetFftSubNextHopInetAddr6 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 24), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopInetAddr6.setStatus('current')
rlInetFftSubNextHopIfindex7 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopIfindex7.setStatus('current')
rlInetFftSubNextHopInetAddr7Type = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 26), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopInetAddr7Type.setStatus('current')
rlInetFftSubNextHopInetAddr7 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 27), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopInetAddr7.setStatus('current')
rlInetFftSubNextHopIfindex8 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopIfindex8.setStatus('current')
rlInetFftSubNextHopInetAddr8Type = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 29), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopInetAddr8Type.setStatus('current')
rlInetFftSubNextHopInetAddr8 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 30), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubNextHopInetAddr8.setStatus('current')
rlInetFftSubAge = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 14, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftSubAge.setStatus('current')
rlInetFftCountersTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 15), )
if mibBuilder.loadTexts: rlInetFftCountersTable.setStatus('current')
rlInetFftCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 15, 1), ).setIndexNames((0, "CISCOSB-rlFft", "rlInetFftCountersIndex"))
if mibBuilder.loadTexts: rlInetFftCountersEntry.setStatus('current')
rlInetFftCountersIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftCountersIndex.setStatus('current')
rlInetFftInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftInReceives.setStatus('current')
rlInetFftForwDatagrams = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 15, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftForwDatagrams.setStatus('current')
rlInetFftInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 15, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftInDiscards.setStatus('current')
rlInetFftNextHopTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 16), )
if mibBuilder.loadTexts: rlInetFftNextHopTable.setStatus('current')
rlInetFftNextHopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 16, 1), ).setIndexNames((0, "CISCOSB-rlFft", "rlInetFftNextHopifindex"), (0, "CISCOSB-rlFft", "rlInetFftNextHopInetAddressType"), (0, "CISCOSB-rlFft", "rlInetFftNextHopInetAddress"))
if mibBuilder.loadTexts: rlInetFftNextHopEntry.setStatus('current')
rlInetFftNextHopifindex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftNextHopifindex.setStatus('current')
rlInetFftNextHopInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 16, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftNextHopInetAddressType.setStatus('current')
rlInetFftNextHopInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 16, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftNextHopInetAddress.setStatus('current')
rlInetFftNextHopValid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftNextHopValid.setStatus('current')
rlInetFftNextHopType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("local", 1), ("remote", 2), ("reject", 3), ("drop", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftNextHopType.setStatus('current')
rlInetFftNextHopReferenceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 16, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftNextHopReferenceCount.setStatus('current')
rlInetFftNextHopNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 16, 1, 7), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftNextHopNetAddress.setStatus('current')
rlInetFftNextHopVid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 16, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftNextHopVid.setStatus('current')
rlInetFftNextHopMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 16, 1, 9), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftNextHopMacAddress.setStatus('current')
rlInetFftNextHopOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 16, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftNextHopOutIfIndex.setStatus('current')
rlInetFftL2InfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 17), )
if mibBuilder.loadTexts: rlInetFftL2InfoTable.setStatus('current')
rlInetFftL2InfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 17, 1), ).setIndexNames((0, "CISCOSB-rlFft", "rlInetFftL2InfoIfindex"), (0, "CISCOSB-rlFft", "rlInetFftL2InfoDstMacAddress"))
if mibBuilder.loadTexts: rlInetFftL2InfoEntry.setStatus('current')
rlInetFftL2InfoIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 17, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftL2InfoIfindex.setStatus('current')
rlInetFftL2InfoDstMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 17, 1, 2), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftL2InfoDstMacAddress.setStatus('current')
rlInetFftL2InfoValid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftL2InfoValid.setStatus('current')
rlInetFftL2InfoType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("vlan", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftL2InfoType.setStatus('current')
rlInetFftL2InfoReferenceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 17, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftL2InfoReferenceCount.setStatus('current')
rlInetFftL2InfoVid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 17, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftL2InfoVid.setStatus('current')
rlInetFftL2InfoSrcMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 17, 1, 7), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftL2InfoSrcMacAddress.setStatus('current')
rlInetFftL2InfoOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 17, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftL2InfoOutIfIndex.setStatus('current')
rlInetFftL2InfoTaggedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 17, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("untagged", 1), ("tagged", 2), ("basedPortConfig", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlInetFftL2InfoTaggedMode.setStatus('current')
rlIpv6FftRedBoundary = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 18), Percents()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIpv6FftRedBoundary.setStatus('current')
rlIpv6FftYellowBoundary = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 1, 19), Percents()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIpv6FftYellowBoundary.setStatus('current')
rlIpxFFT = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2))
rlIpxFftMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftMibVersion.setStatus('current')
rlIpxMaxFftNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxMaxFftNumber.setStatus('current')
rlIpxFftDynamicSupported = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftDynamicSupported.setStatus('current')
rlIpxFftNetworkSupported = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftNetworkSupported.setStatus('current')
rlIpxFftUnknownAddrMsgUsed = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("used", 1), ("unused", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftUnknownAddrMsgUsed.setStatus('current')
rlIpxFftAgingTimeSupported = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftAgingTimeSupported.setStatus('current')
rlIpxFftSrcAddrSupported = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSrcAddrSupported.setStatus('current')
rlIpxFftAgingTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIpxFftAgingTimeout.setStatus('current')
rlIpxFftRedBoundary = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIpxFftRedBoundary.setStatus('current')
rlIpxFftYellowBoundary = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 10), Percents()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIpxFftYellowBoundary.setStatus('current')
rlIpxFftNumTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 12), )
if mibBuilder.loadTexts: rlIpxFftNumTable.setStatus('current')
rlIpxFftNumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 12, 1), ).setIndexNames((0, "CISCOSB-rlFft", "rlIpxFftNumIndex"))
if mibBuilder.loadTexts: rlIpxFftNumEntry.setStatus('current')
rlIpxFftNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftNumIndex.setStatus('current')
rlIpxFftNumStnRoutesNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftNumStnRoutesNumber.setStatus('current')
rlIpxFftNumSubRoutesNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftNumSubRoutesNumber.setStatus('current')
rlIpxFftStnTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 13), )
if mibBuilder.loadTexts: rlIpxFftStnTable.setStatus('current')
rlIpxFftStnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 13, 1), ).setIndexNames((0, "CISCOSB-rlFft", "rlIpxFftStnIndex"), (0, "CISCOSB-rlFft", "rlIpxFftStnDstNetid"), (0, "CISCOSB-rlFft", "rlIpxFftStnDstNode"), (0, "CISCOSB-rlFft", "rlIpxFftStnSrcNetid"), (0, "CISCOSB-rlFft", "rlIpxFftStnSrcNode"))
if mibBuilder.loadTexts: rlIpxFftStnEntry.setStatus('current')
rlIpxFftStnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnIndex.setStatus('current')
rlIpxFftStnDstNetid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 13, 1, 2), NetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnDstNetid.setStatus('current')
rlIpxFftStnDstNode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 13, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnDstNode.setStatus('current')
rlIpxFftStnSrcNetid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 13, 1, 4), NetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnSrcNetid.setStatus('current')
rlIpxFftStnSrcNode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 13, 1, 5), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnSrcNode.setStatus('current')
rlIpxFftStnDstIpxAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnDstIpxAddrType.setStatus('current')
rlIpxFftStnEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("novell", 1), ("ethernet", 2), ("llc", 3), ("snap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnEncapsulation.setStatus('current')
rlIpxFftStnDstMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 13, 1, 8), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnDstMacAddress.setStatus('current')
rlIpxFftStnSrcMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 13, 1, 9), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnSrcMacAddress.setStatus('current')
rlIpxFftStnOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 13, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnOutIfIndex.setStatus('current')
rlIpxFftStnTci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 13, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnTci.setStatus('current')
rlIpxFftStnFacsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 13, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnFacsIndex.setStatus('current')
rlIpxFftStnAge = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 13, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnAge.setStatus('current')
rlIpxFftSubTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 14), )
if mibBuilder.loadTexts: rlIpxFftSubTable.setStatus('current')
rlIpxFftSubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 14, 1), ).setIndexNames((0, "CISCOSB-rlFft", "rlIpxFftSubIndex"), (0, "CISCOSB-rlFft", "rlIpxFftSubDstNetid"))
if mibBuilder.loadTexts: rlIpxFftSubEntry.setStatus('current')
rlIpxFftSubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubIndex.setStatus('current')
rlIpxFftSubDstNetid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 14, 1, 2), NetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubDstNetid.setStatus('current')
rlIpxFftSubEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("novell", 1), ("ethernet", 2), ("llc", 3), ("snap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubEncapsulation.setStatus('current')
rlIpxFftSubDstMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 14, 1, 4), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubDstMacAddress.setStatus('current')
rlIpxFftSubSrcMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 14, 1, 5), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubSrcMacAddress.setStatus('current')
rlIpxFftSubOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 14, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubOutIfIndex.setStatus('current')
rlIpxFftSubTci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 14, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubTci.setStatus('current')
rlIpxFftSubFacsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 14, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubFacsIndex.setStatus('current')
rlIpxFftSubAge = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 14, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubAge.setStatus('current')
rlIpxFftCountersTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 15), )
if mibBuilder.loadTexts: rlIpxFftCountersTable.setStatus('current')
rlIpxFftCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 15, 1), ).setIndexNames((0, "CISCOSB-rlFft", "rlIpxFftCountersIndex"))
if mibBuilder.loadTexts: rlIpxFftCountersEntry.setStatus('current')
rlIpxFftCountersIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftCountersIndex.setStatus('current')
rlIpxFftInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftInReceives.setStatus('current')
rlIpxFftForwDatagrams = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 15, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftForwDatagrams.setStatus('current')
rlIpxFftInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 2, 15, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftInDiscards.setStatus('current')
rlIpmFFT = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3))
rlIpmFftMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftMibVersion.setStatus('current')
rlIpmMaxFftNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmMaxFftNumber.setStatus('current')
rlIpmFftDynamicSupported = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftDynamicSupported.setStatus('current')
rlIpmFftUnknownAddrMsgUsed = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("used", 1), ("unused", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftUnknownAddrMsgUsed.setStatus('current')
rlIpmFftUserAgingTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIpmFftUserAgingTimeout.setStatus('current')
rlIpmFftRouterAgingTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftRouterAgingTimeout.setStatus('current')
rlIpmFftNumTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 8), )
if mibBuilder.loadTexts: rlIpmFftNumTable.setStatus('current')
rlIpmFftNumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 8, 1), ).setIndexNames((0, "CISCOSB-rlFft", "rlIpmFftNumIndex"))
if mibBuilder.loadTexts: rlIpmFftNumEntry.setStatus('current')
rlIpmFftNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftNumIndex.setStatus('current')
rlIpmFftNumRoutesNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftNumRoutesNumber.setStatus('current')
rlIpmFftTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 9), )
if mibBuilder.loadTexts: rlIpmFftTable.setStatus('current')
rlIpmFftEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 9, 1), ).setIndexNames((0, "CISCOSB-rlFft", "rlIpmFftIndex"), (0, "CISCOSB-rlFft", "rlIpmFftSrcIpAddress"), (0, "CISCOSB-rlFft", "rlIpmFftDstIpAddress"))
if mibBuilder.loadTexts: rlIpmFftEntry.setStatus('current')
rlIpmFftIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftIndex.setStatus('current')
rlIpmFftSrcIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 9, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftSrcIpAddress.setStatus('current')
rlIpmFftDstIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 9, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftDstIpAddress.setStatus('current')
rlIpmFftSrcIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 9, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftSrcIpMask.setStatus('current')
rlIpmFftInputIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 9, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftInputIfIndex.setStatus('current')
rlIpmFftInputVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftInputVlanTag.setStatus('current')
rlIpmFftForwardAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftForwardAction.setStatus('current')
rlIpmFftInportAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sentToCPU", 1), ("discard", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftInportAction.setStatus('current')
rlIpmFftAge = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 9, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftAge.setStatus('current')
rlIpmFftPortTagTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 10), )
if mibBuilder.loadTexts: rlIpmFftPortTagTable.setStatus('current')
rlIpmFftPortTagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 10, 1), ).setIndexNames((0, "CISCOSB-rlFft", "rlIpmFftPortIndex"), (0, "CISCOSB-rlFft", "rlIpmFftPortSrcIpAddress"), (0, "CISCOSB-rlFft", "rlIpmFftPortDstIpAddress"), (0, "CISCOSB-rlFft", "rlIpmFftPortOutputifIndex"), (0, "CISCOSB-rlFft", "rlIpmFftPortOutputTag"))
if mibBuilder.loadTexts: rlIpmFftPortTagEntry.setStatus('current')
rlIpmFftPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftPortIndex.setStatus('current')
rlIpmFftPortSrcIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 10, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftPortSrcIpAddress.setStatus('current')
rlIpmFftPortDstIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 10, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftPortDstIpAddress.setStatus('current')
rlIpmFftPortOutputifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftPortOutputifIndex.setStatus('current')
rlIpmFftPortOutputTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftPortOutputTag.setStatus('current')
rlIpmFftCountersTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 11), )
if mibBuilder.loadTexts: rlIpmFftCountersTable.setStatus('current')
rlIpmFftCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 11, 1), ).setIndexNames((0, "CISCOSB-rlFft", "rlIpmFftCountersIndex"))
if mibBuilder.loadTexts: rlIpmFftCountersEntry.setStatus('current')
rlIpmFftCountersIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftCountersIndex.setStatus('current')
rlIpmFftInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftInReceives.setStatus('current')
rlIpmFftForwDatagrams = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftForwDatagrams.setStatus('current')
rlIpmFftInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 47, 3, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftInDiscards.setStatus('current')
mibBuilder.exportSymbols("CISCOSB-rlFft", NetNumber=NetNumber, rlInetFftNextHopReferenceCount=rlInetFftNextHopReferenceCount, rlInetFftSubNextHopInetAddr2Type=rlInetFftSubNextHopInetAddr2Type, rlIpmFftNumTable=rlIpmFftNumTable, rlIpxFftSubEntry=rlIpxFftSubEntry, rlInetFftL2InfoEntry=rlInetFftL2InfoEntry, rlIpxFftYellowBoundary=rlIpxFftYellowBoundary, rlIpmFftPortTagTable=rlIpmFftPortTagTable, rlIpmFftPortIndex=rlIpmFftPortIndex, rlIpmFftPortTagEntry=rlIpmFftPortTagEntry, rlIpmFftPortDstIpAddress=rlIpmFftPortDstIpAddress, rlIpxFftStnEncapsulation=rlIpxFftStnEncapsulation, rlInetFftDynamicSupported=rlInetFftDynamicSupported, rlIpmFftSrcIpAddress=rlIpmFftSrcIpAddress, rlIpmMaxFftNumber=rlIpmMaxFftNumber, rlIpxFftSubDstMacAddress=rlIpxFftSubDstMacAddress, rlInetFftL2InfoDstMacAddress=rlInetFftL2InfoDstMacAddress, rlIpxFftInDiscards=rlIpxFftInDiscards, rlIpxFftStnDstIpxAddrType=rlIpxFftStnDstIpxAddrType, rlInetFftSubNextHopInetAddr5Type=rlInetFftSubNextHopInetAddr5Type, rlInetFftNextHopEntry=rlInetFftNextHopEntry, rlIpxFftStnFacsIndex=rlIpxFftStnFacsIndex, rlIpmFftCountersEntry=rlIpmFftCountersEntry, rlInetFftSubMrid=rlInetFftSubMrid, rlInetFftSubNextHopInetAddr6Type=rlInetFftSubNextHopInetAddr6Type, rlInetFftSubNextHopInetAddr3Type=rlInetFftSubNextHopInetAddr3Type, rlIpFftRedBoundary=rlIpFftRedBoundary, rlInetFftStnAge=rlInetFftStnAge, rlInetFftNumTable=rlInetFftNumTable, rlInetFftSubNextHopInetAddr8Type=rlInetFftSubNextHopInetAddr8Type, rlInetFftNextHopTable=rlInetFftNextHopTable, rlIpxFftNetworkSupported=rlIpxFftNetworkSupported, rlIpmFftInDiscards=rlIpmFftInDiscards, rlIpmFftNumIndex=rlIpmFftNumIndex, rlIpxFftNumSubRoutesNumber=rlIpxFftNumSubRoutesNumber, rlIpmFftForwDatagrams=rlIpmFftForwDatagrams, rlInetFftL2InfoTaggedMode=rlInetFftL2InfoTaggedMode, rlIpxFftRedBoundary=rlIpxFftRedBoundary, rlIpFftYellowBoundary=rlIpFftYellowBoundary, rlIpxFftStnSrcNetid=rlIpxFftStnSrcNetid, rlIpxFftSubAge=rlIpxFftSubAge, rlIpxFftAgingTimeSupported=rlIpxFftAgingTimeSupported, rlInetFftNumEntry=rlInetFftNumEntry, rlInetFftNextHopValid=rlInetFftNextHopValid, rlInetFftSubNextHopIfindex3=rlInetFftSubNextHopIfindex3, rlIpmFftCountersTable=rlIpmFftCountersTable, rlInetFftSubNextHopIfindex1=rlInetFftSubNextHopIfindex1, rlInetFftSubNextHopInetAddr4=rlInetFftSubNextHopInetAddr4, rlInetFftSubNextHopInetAddr4Type=rlInetFftSubNextHopInetAddr4Type, rlIpmFftEntry=rlIpmFftEntry, rlInetMaxFftNumber=rlInetMaxFftNumber, rlIpFFT=rlIpFFT, rlInetFftSubNextHopIfindex7=rlInetFftSubNextHopIfindex7, rlInetFftStnDstInetAddrType=rlInetFftStnDstInetAddrType, rlIpxFftStnSrcMacAddress=rlIpxFftStnSrcMacAddress, rlIpxFftSrcAddrSupported=rlIpxFftSrcAddrSupported, rlIpmFftForwardAction=rlIpmFftForwardAction, rlInetFftStnTable=rlInetFftStnTable, rlInetFftNextHopVid=rlInetFftNextHopVid, rlIpxFftStnTci=rlIpxFftStnTci, rlIpxFftAgingTimeout=rlIpxFftAgingTimeout, rlIpxFftForwDatagrams=rlIpxFftForwDatagrams, rlInetFftForwDatagrams=rlInetFftForwDatagrams, rlIpxFftSubSrcMacAddress=rlIpxFftSubSrcMacAddress, rlInetFftNextHopType=rlInetFftNextHopType, rlIpxFftNumTable=rlIpxFftNumTable, rlIpmFftCountersIndex=rlIpmFftCountersIndex, rlInetFftNextHopifindex=rlInetFftNextHopifindex, rlIpmFftTable=rlIpmFftTable, rlInetFftInReceives=rlInetFftInReceives, rlIpmFftNumEntry=rlIpmFftNumEntry, rlIpxFftUnknownAddrMsgUsed=rlIpxFftUnknownAddrMsgUsed, rlIpxFftSubEncapsulation=rlIpxFftSubEncapsulation, rlInetFftAgingTimeout=rlInetFftAgingTimeout, rlIpmFftUserAgingTimeout=rlIpmFftUserAgingTimeout, rlIpxFftSubDstNetid=rlIpxFftSubDstNetid, rlInetFftL2InfoVid=rlInetFftL2InfoVid, rlIpmFftInputVlanTag=rlIpmFftInputVlanTag, rlInetFftL2InfoIfindex=rlInetFftL2InfoIfindex, rlInetFftNextHopMacAddress=rlInetFftNextHopMacAddress, rlInetFftStnIndex=rlInetFftStnIndex, rlIpv6FftRedBoundary=rlIpv6FftRedBoundary, rlIpmFftSrcIpMask=rlIpmFftSrcIpMask, rlIpxFftStnOutIfIndex=rlIpxFftStnOutIfIndex, rlInetFftSubNextHopIfindex6=rlInetFftSubNextHopIfindex6, rlInetFftNumStnRoutesNumber=rlInetFftNumStnRoutesNumber, rlIpmFftInReceives=rlIpmFftInReceives, rlIpxMaxFftNumber=rlIpxMaxFftNumber, rlInetFftSubNextHopInetAddr1=rlInetFftSubNextHopInetAddr1, rlInetFftSubNextHopInetAddr6=rlInetFftSubNextHopInetAddr6, rlInetFftCountersIndex=rlInetFftCountersIndex, rlIpxFFT=rlIpxFFT, rlInetFftSubDstInetSubnetType=rlInetFftSubDstInetSubnetType, rlIpxFftNumEntry=rlIpxFftNumEntry, rlIpxFftSubOutIfIndex=rlIpxFftSubOutIfIndex, rlInetFftSubNextHopIfindex4=rlInetFftSubNextHopIfindex4, rlIpmFftUnknownAddrMsgUsed=rlIpmFftUnknownAddrMsgUsed, rlInetFftSubTable=rlInetFftSubTable, rlInetFftSubNextHopInetAddr7Type=rlInetFftSubNextHopInetAddr7Type, rlInetFftSubNextHopIfindex5=rlInetFftSubNextHopIfindex5, rlIpmFftPortOutputifIndex=rlIpmFftPortOutputifIndex, rlIpxFftStnEntry=rlIpxFftStnEntry, rlInetFftStnEntry=rlInetFftStnEntry, rlIpmFFT=rlIpmFFT, rlIpxFftCountersEntry=rlIpxFftCountersEntry, rlIpmFftPortSrcIpAddress=rlIpmFftPortSrcIpAddress, rlIpmFftAge=rlIpmFftAge, rlInetFftSubNextHopIfindex8=rlInetFftSubNextHopIfindex8, rlInetFftNextHopNetAddress=rlInetFftNextHopNetAddress, rlIpxFftStnDstNetid=rlIpxFftStnDstNetid, rlIpmFftRouterAgingTimeout=rlIpmFftRouterAgingTimeout, rlInetFftStnDstInetAddress=rlInetFftStnDstInetAddress, rlInetFftL2InfoTable=rlInetFftL2InfoTable, rlIpmFftIndex=rlIpmFftIndex, rlInetFftCountersEntry=rlInetFftCountersEntry, rlIpmFftInputIfIndex=rlIpmFftInputIfIndex, rlInetFftSubDstInetSubnet=rlInetFftSubDstInetSubnet, rlIpFftUnknownAddrMsgUsed=rlIpFftUnknownAddrMsgUsed, rlInetFftSubNextHopInetAddr7=rlInetFftSubNextHopInetAddr7, rlInetFftSubNextHopIfindex2=rlInetFftSubNextHopIfindex2, rlInetFftNextHopInetAddress=rlInetFftNextHopInetAddress, rlIpxFftNumIndex=rlIpxFftNumIndex, rlIpxFftNumStnRoutesNumber=rlIpxFftNumStnRoutesNumber, rlInetFftSubNextHopInetAddr1Type=rlInetFftSubNextHopInetAddr1Type, rlIpxFftStnDstMacAddress=rlIpxFftStnDstMacAddress, rlInetFftL2InfoOutIfIndex=rlInetFftL2InfoOutIfIndex, rlFFT=rlFFT, rlIpxFftStnIndex=rlIpxFftStnIndex, rlInetFftSubNextHopInetAddr2=rlInetFftSubNextHopInetAddr2, rlIpxFftSubIndex=rlIpxFftSubIndex, rlIpxFftCountersTable=rlIpxFftCountersTable, rlIpxFftInReceives=rlIpxFftInReceives, rlIpmFftMibVersion=rlIpmFftMibVersion, rlInetFftSubNextHopCount=rlInetFftSubNextHopCount, rlInetFftSubNextHopInetAddr5=rlInetFftSubNextHopInetAddr5, rlInetFftSubAge=rlInetFftSubAge, rlInetFftL2InfoSrcMacAddress=rlInetFftL2InfoSrcMacAddress, rlInetFftL2InfoType=rlInetFftL2InfoType, rlIpxFftStnSrcNode=rlIpxFftStnSrcNode, rlInetFftStnDstRouteInetPrefix=rlInetFftStnDstRouteInetPrefix, rlIpxFftStnTable=rlIpxFftStnTable, rlIpxFftSubFacsIndex=rlIpxFftSubFacsIndex, rlIpxFftMibVersion=rlIpxFftMibVersion, rlIpxFftStnDstNode=rlIpxFftStnDstNode, PYSNMP_MODULE_ID=rlFFT, rlInetFftNumIndex=rlInetFftNumIndex, rlInetFftCountersTable=rlInetFftCountersTable, Percents=Percents, rlInetFftStnTaggedMode=rlInetFftStnTaggedMode, rlInetFftNumSubRoutesNumber=rlInetFftNumSubRoutesNumber, rlIpmFftNumRoutesNumber=rlIpmFftNumRoutesNumber, rlInetFftSubEntry=rlInetFftSubEntry, rlInetFftSubDstInetPrefix=rlInetFftSubDstInetPrefix, rlIpxFftSubTable=rlIpxFftSubTable, rlInetFftSubNextHopInetAddr3=rlInetFftSubNextHopInetAddr3, rlInetFftL2InfoValid=rlInetFftL2InfoValid, rlInetFftStnOutIfIndex=rlInetFftStnOutIfIndex, rlInetFftSubNextHopSetRefCount=rlInetFftSubNextHopSetRefCount, rlIpmFftInportAction=rlIpmFftInportAction, rlIpFftSrcAddrSupported=rlIpFftSrcAddrSupported, rlIpFftMibVersion=rlIpFftMibVersion, rlInetFftAgingTimeSupported=rlInetFftAgingTimeSupported, rlInetFftStnDstMacAddress=rlInetFftStnDstMacAddress, rlInetFftSubnetSupported=rlInetFftSubnetSupported, rlInetFftStnMrid=rlInetFftStnMrid, rlInetFftNumInetTomeRoutesNumber=rlInetFftNumInetTomeRoutesNumber, rlInetFftSubNextHopInetAddr8=rlInetFftSubNextHopInetAddr8, rlIpxFftStnAge=rlIpxFftStnAge, rlIpmFftPortOutputTag=rlIpmFftPortOutputTag, rlInetFftInDiscards=rlInetFftInDiscards, rlIpxFftDynamicSupported=rlIpxFftDynamicSupported, rlInetFftNumAddressType=rlInetFftNumAddressType, rlInetFftNextHopInetAddressType=rlInetFftNextHopInetAddressType, rlIpmFftDynamicSupported=rlIpmFftDynamicSupported, rlIpmFftDstIpAddress=rlIpmFftDstIpAddress, rlIpxFftCountersIndex=rlIpxFftCountersIndex, rlInetFftStnDstInetAddressType=rlInetFftStnDstInetAddressType, rlInetFftNextHopOutIfIndex=rlInetFftNextHopOutIfIndex, rlIpv6FftYellowBoundary=rlIpv6FftYellowBoundary, rlIpxFftSubTci=rlIpxFftSubTci, rlInetFftStnVid=rlInetFftStnVid, rlInetFftStnSrcMacAddress=rlInetFftStnSrcMacAddress, rlInetFftL2InfoReferenceCount=rlInetFftL2InfoReferenceCount)
