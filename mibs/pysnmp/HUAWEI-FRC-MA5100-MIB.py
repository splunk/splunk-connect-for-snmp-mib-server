#
# PySNMP MIB module HUAWEI-FRC-MA5100-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-FRC-MA5100-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:32:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
hwMa5100Mib, hwMusaFrameIndex, hwMusaSlotIndex = mibBuilder.importSymbols("HUAWEI-MUSA-MA5100-MIB", "hwMa5100Mib", "hwMusaFrameIndex", "hwMusaSlotIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Gauge32, ObjectIdentity, Counter32, TimeTicks, IpAddress, MibIdentifier, Counter64, Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Gauge32", "ObjectIdentity", "Counter32", "TimeTicks", "IpAddress", "MibIdentifier", "Counter64", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ModuleIdentity", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hwMusaFrcMib = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9))
hwMusaFrcBoardTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 1), )
if mibBuilder.loadTexts: hwMusaFrcBoardTable.setStatus('mandatory')
hwMusaFrcBoardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 1, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"))
if mibBuilder.loadTexts: hwMusaFrcBoardEntry.setStatus('mandatory')
hwMusaFrcPvcAlarmEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcPvcAlarmEnable.setStatus('mandatory')
hwMusaFrcBoardClearStatistic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 1, 1, 2), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaFrcBoardClearStatistic.setStatus('mandatory')
hwMusaFrcClockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("local", 0), ("backplate", 1), ("line", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcClockMode.setStatus('mandatory')
hwMusaFrcPhyPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcPhyPortId.setStatus('mandatory')
hwMusaFrcPhyPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("e1", 1), ("t1", 2), ("v35", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcPhyPortType.setStatus('mandatory')
hwMusaFrcPhyPortLineIfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 2), )
if mibBuilder.loadTexts: hwMusaFrcPhyPortLineIfTable.setStatus('mandatory')
hwMusaFrcPhyPortLineIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 2, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"), (0, "HUAWEI-FRC-MA5100-MIB", "hwMusaFrcPhyPortId"))
if mibBuilder.loadTexts: hwMusaFrcPhyPortLineIfEntry.setStatus('mandatory')
hwMusaFrcMainClock = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("local", 0), ("backplate", 1), ("line", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcMainClock.setStatus('mandatory')
hwMusaFrcT1HaulMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("short", 0), ("long", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcT1HaulMode.setStatus('mandatory')
hwMusaFrcT1E1Crc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcT1E1Crc.setStatus('mandatory')
hwMusaFrcT1FrameFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("t1esf", 0), ("t1d44mf", 1), ("t1d412mf", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcT1FrameFormat.setStatus('mandatory')
hwMusaFrcT1LineCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("b8zs", 0), ("ami", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcT1LineCode.setStatus('mandatory')
hwMusaFrcV35ClockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("dceinner", 0), ("dceslave", 1), ("dceouter", 2), ("dteinner", 3), ("dteslave", 4), ("dteouter", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcV35ClockMode.setStatus('mandatory')
hwMusaFrcT1E1TsBitMap = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcT1E1TsBitMap.setStatus('mandatory')
hwMusaFrcClockLoopMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("payloop", 0), ("remoteloop", 1), ("single-timeslot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcClockLoopMode.setStatus('mandatory')
hwMusaFrcLoopState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noloop", 0), ("loop", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcLoopState.setStatus('mandatory')
hwMusaFrcV35InvertTxClock = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcV35InvertTxClock.setStatus('mandatory')
hwMusaFrcSingleTimeSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcSingleTimeSlotId.setStatus('mandatory')
hwMusaFrcPhyPortAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 3), )
if mibBuilder.loadTexts: hwMusaFrcPhyPortAlarmTable.setStatus('mandatory')
hwMusaFrcPhyPortAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 3, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"), (0, "HUAWEI-FRC-MA5100-MIB", "hwMusaFrcPhyPortId"))
if mibBuilder.loadTexts: hwMusaFrcPhyPortAlarmEntry.setStatus('mandatory')
hwMusaFrcAlarmSw = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcAlarmSw.setStatus('mandatory')
hwMusaFrcRACTS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noalarmup", 0), ("alarmdown", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcRACTS.setStatus('mandatory')
hwMusaFrcLFADSR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noalarmup", 0), ("alarmdown", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcLFADSR.setStatus('mandatory')
hwMusaFrcLOSPLL = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noalarmup", 0), ("alarmdown", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcLOSPLL.setStatus('mandatory')
hwMusaFrcAISDCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noalarmup", 0), ("alarmdown", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcAISDCD.setStatus('mandatory')
hwMusaFrcAlarmCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcAlarmCount.setStatus('mandatory')
hwMusaFrcDTR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("up", 0), ("down", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcDTR.setStatus('mandatory')
hwMusaFrcRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("up", 0), ("down", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcRTS.setStatus('mandatory')
hwMusaFrcSCOL = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noalarm", 0), ("alarm", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSCOL.setStatus('mandatory')
hwMusaFrcLogicPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 4), )
if mibBuilder.loadTexts: hwMusaFrcLogicPortTable.setStatus('mandatory')
hwMusaFrcLogicPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 4, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"), (0, "HUAWEI-FRC-MA5100-MIB", "hwMusaFrcLogicPortId"))
if mibBuilder.loadTexts: hwMusaFrcLogicPortEntry.setStatus('mandatory')
hwMusaFrcLogicPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: hwMusaFrcLogicPortId.setStatus('mandatory')
hwMusaFrcPhyPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcPhyPort.setStatus('mandatory')
hwMusaFrcE1T1TsBitMapV35NValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 4, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcE1T1TsBitMapV35NValue.setStatus('mandatory')
hwMusaFrcDlciType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcDlciType.setStatus('mandatory')
hwMusaFrcFreeBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcFreeBandwidth.setStatus('mandatory')
hwMusaFrcServiceFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("network11", 0), ("service", 1), ("hdlc", 2), ("networkN1", 3), ("frIwf", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcServiceFlag.setStatus('mandatory')
hwMusaFrcPortActivate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("block", 0), ("unblock", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcPortActivate.setStatus('mandatory')
hwMusaFrcLogicPortOperate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("add", 0), ("del", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcLogicPortOperate.setStatus('mandatory')
hwMusaFrcLogPortSigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 5), )
if mibBuilder.loadTexts: hwMusaFrcLogPortSigTable.setStatus('mandatory')
hwMusaFrcLogPortSigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 5, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"), (0, "HUAWEI-FRC-MA5100-MIB", "hwMusaFrcLogPortSigSide"), (0, "HUAWEI-FRC-MA5100-MIB", "hwMusaFrcLogicPortId"))
if mibBuilder.loadTexts: hwMusaFrcLogPortSigEntry.setStatus('mandatory')
hwMusaFrcLogPortSigSide = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("frside", 0), ("atmside", 1))))
if mibBuilder.loadTexts: hwMusaFrcLogPortSigSide.setStatus('mandatory')
hwMusaFrcLogPortSigProtocalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("q933a", 0), ("ansit167d", 1), ("cisiolmi", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcLogPortSigProtocalType.setStatus('mandatory')
hwMusaFrcLogPortSigPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("user", 1), ("net", 2), ("bid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcLogPortSigPortType.setStatus('mandatory')
hwMusaFrcLogPortSigN391 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcLogPortSigN391.setStatus('mandatory')
hwMusaFrcLogPortSigUserN392 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcLogPortSigUserN392.setStatus('mandatory')
hwMusaFrcLogPortSigUserN393 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcLogPortSigUserN393.setStatus('mandatory')
hwMusaFrcLogPortSigNetN392 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcLogPortSigNetN392.setStatus('mandatory')
hwMusaFrcLogPortSigNetN393 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcLogPortSigNetN393.setStatus('mandatory')
hwMusaFrcLogPortSigT391 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcLogPortSigT391.setStatus('mandatory')
hwMusaFrcLogPortSigT392 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcLogPortSigT392.setStatus('mandatory')
hwMusaFrcLogPortSigOper = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("add", 0), ("del", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcLogPortSigOper.setStatus('mandatory')
hwMusaFrcIwfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 6), )
if mibBuilder.loadTexts: hwMusaFrcIwfTable.setStatus('mandatory')
hwMusaFrcIwfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 6, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"), (0, "HUAWEI-FRC-MA5100-MIB", "hwMusaFrcIwfCcid"))
if mibBuilder.loadTexts: hwMusaFrcIwfEntry.setStatus('mandatory')
hwMusaFrcIwfCcid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999)))
if mibBuilder.loadTexts: hwMusaFrcIwfCcid.setStatus('mandatory')
hwMusaFrcConnectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("network11", 0), ("service", 1), ("hdlc", 2), ("networkN1", 3), ("frIwf", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcConnectMode.setStatus('mandatory')
hwMusaFrcLogicPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 494))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcLogicPort.setStatus('mandatory')
hwMusaFrcDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 6, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcDlci.setStatus('mandatory')
hwMusaFrcAtmVcc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 494))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcAtmVcc.setStatus('mandatory')
hwMusaFrcAtmDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 6, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcAtmDlci.setStatus('mandatory')
hwMusaFrcEfci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("efcn", 0), ("valure0", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcEfci.setStatus('mandatory')
hwMusaFrcDe = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("netdeClpFrsscs", 0), ("netdeFrsscs", 1), ("srvdeClp", 2), ("srvde0", 3), ("srvde1", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcDe.setStatus('mandatory')
hwMusaFrcClp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("clpDe", 0), ("clp0", 1), ("clp1", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcClp.setStatus('mandatory')
hwMusaFrcCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcCir.setStatus('mandatory')
hwMusaFrcEir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 6, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1984))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcEir.setStatus('mandatory')
hwMusaFrcServiceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 6, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcServiceMode.setStatus('mandatory')
hwMusaFrcOperate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 6, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("add", 0), ("del", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcOperate.setStatus('mandatory')
hwMusaFrcLogicPortStatisTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 7), )
if mibBuilder.loadTexts: hwMusaFrcLogicPortStatisTable.setStatus('mandatory')
hwMusaFrcLogicPortStatisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 7, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"), (0, "HUAWEI-FRC-MA5100-MIB", "hwMusaFrcLogicPortId"))
if mibBuilder.loadTexts: hwMusaFrcLogicPortStatisEntry.setStatus('mandatory')
hwMusaFrcLogicPortActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcLogicPortActive.setStatus('mandatory')
hwMusaFrcCongestState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("serious", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcCongestState.setStatus('mandatory')
hwMusaFrcInFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcInFrameCount.setStatus('mandatory')
hwMusaFrcInByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcInByteCount.setStatus('mandatory')
hwMusaFrcInLossParkageC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcInLossParkageC.setStatus('mandatory')
hwMusaFrcOutFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcOutFrameCount.setStatus('mandatory')
hwMusaFrcOutByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcOutByteCount.setStatus('mandatory')
hwMusaFrcOutLossParkageC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcOutLossParkageC.setStatus('mandatory')
hwMusaFrcAtmPortStatisTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 8), )
if mibBuilder.loadTexts: hwMusaFrcAtmPortStatisTable.setStatus('mandatory')
hwMusaFrcAtmPortStatisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 8, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"), (0, "HUAWEI-FRC-MA5100-MIB", "hwMusaFrcAtmVcc"))
if mibBuilder.loadTexts: hwMusaFrcAtmPortStatisEntry.setStatus('mandatory')
hwMusaFrcAtmPortActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcAtmPortActive.setStatus('mandatory')
hwMusaFrcAtmCongestState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("serious", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcAtmCongestState.setStatus('mandatory')
hwMusaFrcAtmInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 8, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcAtmInFrames.setStatus('mandatory')
hwMusaFrcAtmInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcAtmInBytes.setStatus('mandatory')
hwMusaFrcAtmInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 8, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcAtmInDiscards.setStatus('mandatory')
hwMusaFrcAtmOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcAtmOutFrames.setStatus('mandatory')
hwMusaFrcAtmOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 8, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcAtmOutBytes.setStatus('mandatory')
hwMusaFrcAtmOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 8, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcAtmOutDiscards.setStatus('mandatory')
hwMusaFrcSigPortStatisTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 9), )
if mibBuilder.loadTexts: hwMusaFrcSigPortStatisTable.setStatus('mandatory')
hwMusaFrcSigPortStatisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 9, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"), (0, "HUAWEI-FRC-MA5100-MIB", "hwMusaFrcLogPortSigSide"), (0, "HUAWEI-FRC-MA5100-MIB", "hwMusaFrcLogicPortId"))
if mibBuilder.loadTexts: hwMusaFrcSigPortStatisEntry.setStatus('mandatory')
hwMusaFrcSigType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("userside", 1), ("networkside", 2), ("bidside", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcSigType.setStatus('mandatory')
hwMusaFrcSigPortSide = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("fr", 0), ("atm", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcSigPortSide.setStatus('mandatory')
hwMusaFrcUserLinkC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 9, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcUserLinkC.setStatus('mandatory')
hwMusaFrcUserProtocalC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 9, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcUserProtocalC.setStatus('mandatory')
hwMusaFrcUserDeactC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 9, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcUserDeactC.setStatus('mandatory')
hwMusaFrcNetworkLinkC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 9, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcNetworkLinkC.setStatus('mandatory')
hwMusaFrcNetworkProtocalC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 9, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcNetworkProtocalC.setStatus('mandatory')
hwMusaFrcNetworkDeactC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 9, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcNetworkDeactC.setStatus('mandatory')
hwMusaFrcSendFrameC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 9, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcSendFrameC.setStatus('mandatory')
hwMusaFrcRecvFrameC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 9, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcRecvFrameC.setStatus('mandatory')
hwMusaFrcIwfStatisTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10), )
if mibBuilder.loadTexts: hwMusaFrcIwfStatisTable.setStatus('mandatory')
hwMusaFrcIwfStatisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"), (0, "HUAWEI-FRC-MA5100-MIB", "hwMusaFrcIwfCcid"))
if mibBuilder.loadTexts: hwMusaFrcIwfStatisEntry.setStatus('mandatory')
hwMusaFrcPvcType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("networkiwf", 0), ("serviceiwf", 1), ("hdlc", 2), ("ppp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcPvcType.setStatus('mandatory')
hwMusaFrcPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcPortId.setStatus('mandatory')
hwMusaFrcPortDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcPortDlci.setStatus('mandatory')
hwMusaFrcUpInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcUpInFrames.setStatus('mandatory')
hwMusaFrcUpInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcUpInBytes.setStatus('mandatory')
hwMusaFrcUpInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcUpInDiscards.setStatus('mandatory')
hwMusaFrcUpOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcUpOutFrames.setStatus('mandatory')
hwMusaFrcUpOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcUpOutBytes.setStatus('mandatory')
hwMusaFrcUpOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcUpOutDiscards.setStatus('mandatory')
hwMusaFrcAtmPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcAtmPort.setStatus('mandatory')
hwMusaFrcAtmPortDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcAtmPortDlci.setStatus('mandatory')
hwMusaFrcDownInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcDownInFrames.setStatus('mandatory')
hwMusaFrcDownInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcDownInBytes.setStatus('mandatory')
hwMusaFrcDownInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcDownInDiscards.setStatus('mandatory')
hwMusaFrcDownOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 15), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcDownOutFrames.setStatus('mandatory')
hwMusaFrcDownOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 16), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcDownOutBytes.setStatus('mandatory')
hwMusaFrcDownOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 17), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcDownOutDiscards.setStatus('mandatory')
hwMusaFrcIwfActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 10, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrcIwfActive.setStatus('mandatory')
hwMusaFrcPhyStatisGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11))
hwMusaFrcPhyMCCStatisTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1), )
if mibBuilder.loadTexts: hwMusaFrcPhyMCCStatisTable.setStatus('mandatory')
hwMusaFrcPhyMCCStatisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"), (0, "HUAWEI-FRC-MA5100-MIB", "hwMusaMccType"))
if mibBuilder.loadTexts: hwMusaFrcPhyMCCStatisEntry.setStatus('mandatory')
hwMusaMccType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mcc1", 1), ("mcc2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaMccType.setStatus('mandatory')
hwMusaFrcMccTxSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccTxSucc.setStatus('mandatory')
hwMusaFrcMccRxSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccRxSucc.setStatus('mandatory')
hwMusaFrcMccRxQOV = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccRxQOV.setStatus('mandatory')
hwMusaFrcMccRxMRF = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccRxMRF.setStatus('mandatory')
hwMusaFrcMccRxLRF = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccRxLRF.setStatus('mandatory')
hwMusaFrcMccRxIDL = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccRxIDL.setStatus('mandatory')
hwMusaFrcMccRxBSY = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccRxBSY.setStatus('mandatory')
hwMusaFrcMccRxLG = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccRxLG.setStatus('mandatory')
hwMusaFrcMccRxNO = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccRxNO.setStatus('mandatory')
hwMusaFrcMccRxAB = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccRxAB.setStatus('mandatory')
hwMusaFrcMccRxCR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccRxCR.setStatus('mandatory')
hwMusaFrcMccTxRxNID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccTxRxNID.setStatus('mandatory')
hwMusaFrcMccTxQOV = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccTxQOV.setStatus('mandatory')
hwMusaFrcMccTxGUN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccTxGUN.setStatus('mandatory')
hwMusaFrcMccTxGOV = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccTxGOV.setStatus('mandatory')
hwMusaFrcMccTxUN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccTxUN.setStatus('mandatory')
hwMusaFrcMccTxNoBD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccTxNoBD.setStatus('mandatory')
hwMusaFrcMccRxNoBuff = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcMccRxNoBuff.setStatus('mandatory')
hwMusaFrcPhySARStatisTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2), )
if mibBuilder.loadTexts: hwMusaFrcPhySARStatisTable.setStatus('mandatory')
hwMusaFrcPhySARStatisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"))
if mibBuilder.loadTexts: hwMusaFrcPhySARStatisEntry.setStatus('mandatory')
hwMusaFrcSarSendSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSarSendSucc.setStatus('mandatory')
hwMusaFrcSarRecvSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSarRecvSucc.setStatus('mandatory')
hwMusaFrcSarRxErrBSY = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSarRxErrBSY.setStatus('mandatory')
hwMusaFrcSarRxErrTBNR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSarRxErrTBNR.setStatus('mandatory')
hwMusaFrcSarRxErrGRLI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSarRxErrGRLI.setStatus('mandatory')
hwMusaFrcSarRxErrGBPB = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSarRxErrGBPB.setStatus('mandatory')
hwMusaFrcSarRxErrINTO = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSarRxErrINTO.setStatus('mandatory')
hwMusaFrcSarRxErrABRT = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSarRxErrABRT.setStatus('mandatory')
hwMusaFrcSarRxErrLNE = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSarRxErrLNE.setStatus('mandatory')
hwMusaFrcSarRxErrCRE = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSarRxErrCRE.setStatus('mandatory')
hwMusaFrcSarRxErrCLP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSarRxErrCLP.setStatus('mandatory')
hwMusaFrcSarRxErrCNG = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSarRxErrCNG.setStatus('mandatory')
hwMusaFrcSarRxErrCPUU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSarRxErrCPUU.setStatus('mandatory')
hwMusaFrcSarRxErrRedLine = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSarRxErrRedLine.setStatus('mandatory')
hwMusaFrcSarRxErrNoBuff = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSarRxErrNoBuff.setStatus('mandatory')
hwMusaFrcSarTxErrTIRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSarTxErrTIRU.setStatus('mandatory')
hwMusaFrcSarTxErrNoBD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 9, 11, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrcSarTxErrNoBD.setStatus('mandatory')
mibBuilder.exportSymbols("HUAWEI-FRC-MA5100-MIB", hwMusaFrcV35InvertTxClock=hwMusaFrcV35InvertTxClock, hwMusaFrcV35ClockMode=hwMusaFrcV35ClockMode, hwMusaFrcOperate=hwMusaFrcOperate, hwMusaFrcMccTxSucc=hwMusaFrcMccTxSucc, hwMusaFrcSigType=hwMusaFrcSigType, hwMusaFrcDownOutBytes=hwMusaFrcDownOutBytes, hwMusaFrcClockMode=hwMusaFrcClockMode, hwMusaFrcMainClock=hwMusaFrcMainClock, hwMusaFrcSarRxErrABRT=hwMusaFrcSarRxErrABRT, hwMusaFrcPvcType=hwMusaFrcPvcType, hwMusaFrcLogPortSigSide=hwMusaFrcLogPortSigSide, hwMusaFrcDlciType=hwMusaFrcDlciType, hwMusaFrcIwfStatisTable=hwMusaFrcIwfStatisTable, hwMusaFrcAlarmCount=hwMusaFrcAlarmCount, hwMusaFrcCir=hwMusaFrcCir, hwMusaFrcMccRxMRF=hwMusaFrcMccRxMRF, hwMusaFrcPhyPort=hwMusaFrcPhyPort, hwMusaFrcDTR=hwMusaFrcDTR, hwMusaFrcRecvFrameC=hwMusaFrcRecvFrameC, hwMusaFrcSarRecvSucc=hwMusaFrcSarRecvSucc, hwMusaFrcSarRxErrGBPB=hwMusaFrcSarRxErrGBPB, hwMusaFrcOutByteCount=hwMusaFrcOutByteCount, hwMusaFrcDownOutFrames=hwMusaFrcDownOutFrames, hwMusaFrcLogicPortActive=hwMusaFrcLogicPortActive, hwMusaFrcNetworkLinkC=hwMusaFrcNetworkLinkC, hwMusaFrcBoardTable=hwMusaFrcBoardTable, hwMusaFrcPortDlci=hwMusaFrcPortDlci, hwMusaFrcUpOutDiscards=hwMusaFrcUpOutDiscards, hwMusaFrcLogPortSigUserN393=hwMusaFrcLogPortSigUserN393, hwMusaFrcMccRxAB=hwMusaFrcMccRxAB, hwMusaFrcConnectMode=hwMusaFrcConnectMode, hwMusaFrcFreeBandwidth=hwMusaFrcFreeBandwidth, hwMusaFrcSarRxErrCPUU=hwMusaFrcSarRxErrCPUU, hwMusaFrcMccRxNoBuff=hwMusaFrcMccRxNoBuff, hwMusaFrcLFADSR=hwMusaFrcLFADSR, hwMusaFrcMccTxUN=hwMusaFrcMccTxUN, hwMusaFrcMccTxNoBD=hwMusaFrcMccTxNoBD, hwMusaFrcSarRxErrINTO=hwMusaFrcSarRxErrINTO, hwMusaFrcPhySARStatisEntry=hwMusaFrcPhySARStatisEntry, hwMusaFrcDownInFrames=hwMusaFrcDownInFrames, hwMusaFrcMccRxIDL=hwMusaFrcMccRxIDL, hwMusaFrcLogicPortId=hwMusaFrcLogicPortId, hwMusaFrcLogPortSigT392=hwMusaFrcLogPortSigT392, hwMusaFrcBoardClearStatistic=hwMusaFrcBoardClearStatistic, hwMusaFrcMccTxRxNID=hwMusaFrcMccTxRxNID, hwMusaFrcClockLoopMode=hwMusaFrcClockLoopMode, hwMusaFrcAtmOutDiscards=hwMusaFrcAtmOutDiscards, hwMusaMccType=hwMusaMccType, hwMusaFrcSarRxErrBSY=hwMusaFrcSarRxErrBSY, hwMusaFrcLogicPort=hwMusaFrcLogicPort, hwMusaFrcEir=hwMusaFrcEir, hwMusaFrcIwfTable=hwMusaFrcIwfTable, hwMusaFrcLogPortSigPortType=hwMusaFrcLogPortSigPortType, hwMusaFrcLogPortSigEntry=hwMusaFrcLogPortSigEntry, hwMusaFrcLogPortSigT391=hwMusaFrcLogPortSigT391, hwMusaFrcSigPortStatisTable=hwMusaFrcSigPortStatisTable, hwMusaFrcUserProtocalC=hwMusaFrcUserProtocalC, hwMusaFrcPortId=hwMusaFrcPortId, hwMusaFrcSarRxErrRedLine=hwMusaFrcSarRxErrRedLine, hwMusaFrcSigPortStatisEntry=hwMusaFrcSigPortStatisEntry, hwMusaFrcLogPortSigUserN392=hwMusaFrcLogPortSigUserN392, hwMusaFrcSarRxErrCNG=hwMusaFrcSarRxErrCNG, hwMusaFrcPhyPortAlarmTable=hwMusaFrcPhyPortAlarmTable, hwMusaFrcAtmPortStatisTable=hwMusaFrcAtmPortStatisTable, hwMusaFrcAlarmSw=hwMusaFrcAlarmSw, hwMusaFrcInByteCount=hwMusaFrcInByteCount, hwMusaFrcIwfCcid=hwMusaFrcIwfCcid, hwMusaFrcLogicPortOperate=hwMusaFrcLogicPortOperate, hwMusaFrcEfci=hwMusaFrcEfci, hwMusaFrcDownOutDiscards=hwMusaFrcDownOutDiscards, hwMusaFrcSarTxErrNoBD=hwMusaFrcSarTxErrNoBD, hwMusaFrcLogPortSigTable=hwMusaFrcLogPortSigTable, hwMusaFrcT1FrameFormat=hwMusaFrcT1FrameFormat, hwMusaFrcUserDeactC=hwMusaFrcUserDeactC, hwMusaFrcMccRxBSY=hwMusaFrcMccRxBSY, hwMusaFrcUpInFrames=hwMusaFrcUpInFrames, hwMusaFrcUserLinkC=hwMusaFrcUserLinkC, hwMusaFrcIwfStatisEntry=hwMusaFrcIwfStatisEntry, hwMusaFrcSarRxErrNoBuff=hwMusaFrcSarRxErrNoBuff, hwMusaFrcDe=hwMusaFrcDe, hwMusaFrcSarRxErrCLP=hwMusaFrcSarRxErrCLP, hwMusaFrcAISDCD=hwMusaFrcAISDCD, hwMusaFrcMccRxLG=hwMusaFrcMccRxLG, hwMusaFrcSarRxErrGRLI=hwMusaFrcSarRxErrGRLI, hwMusaFrcPvcAlarmEnable=hwMusaFrcPvcAlarmEnable, hwMusaFrcLOSPLL=hwMusaFrcLOSPLL, hwMusaFrcAtmCongestState=hwMusaFrcAtmCongestState, hwMusaFrcMccRxQOV=hwMusaFrcMccRxQOV, hwMusaFrcLogPortSigProtocalType=hwMusaFrcLogPortSigProtocalType, hwMusaFrcSarTxErrTIRU=hwMusaFrcSarTxErrTIRU, hwMusaFrcMccTxGOV=hwMusaFrcMccTxGOV, hwMusaFrcDlci=hwMusaFrcDlci, hwMusaFrcUpInBytes=hwMusaFrcUpInBytes, hwMusaFrcMccTxGUN=hwMusaFrcMccTxGUN, hwMusaFrcSarRxErrTBNR=hwMusaFrcSarRxErrTBNR, hwMusaFrcPortActivate=hwMusaFrcPortActivate, hwMusaFrcAtmInFrames=hwMusaFrcAtmInFrames, hwMusaFrcMib=hwMusaFrcMib, hwMusaFrcDownInBytes=hwMusaFrcDownInBytes, hwMusaFrcLogicPortEntry=hwMusaFrcLogicPortEntry, hwMusaFrcServiceFlag=hwMusaFrcServiceFlag, hwMusaFrcUpInDiscards=hwMusaFrcUpInDiscards, hwMusaFrcSarSendSucc=hwMusaFrcSarSendSucc, hwMusaFrcLogPortSigNetN392=hwMusaFrcLogPortSigNetN392, hwMusaFrcT1E1TsBitMap=hwMusaFrcT1E1TsBitMap, hwMusaFrcInLossParkageC=hwMusaFrcInLossParkageC, hwMusaFrcAtmInDiscards=hwMusaFrcAtmInDiscards, hwMusaFrcSingleTimeSlotId=hwMusaFrcSingleTimeSlotId, hwMusaFrcT1LineCode=hwMusaFrcT1LineCode, hwMusaFrcAtmDlci=hwMusaFrcAtmDlci, hwMusaFrcAtmVcc=hwMusaFrcAtmVcc, hwMusaFrcLogicPortTable=hwMusaFrcLogicPortTable, hwMusaFrcLogicPortStatisEntry=hwMusaFrcLogicPortStatisEntry, hwMusaFrcMccTxQOV=hwMusaFrcMccTxQOV, hwMusaFrcAtmPortDlci=hwMusaFrcAtmPortDlci, hwMusaFrcSarRxErrCRE=hwMusaFrcSarRxErrCRE, hwMusaFrcE1T1TsBitMapV35NValue=hwMusaFrcE1T1TsBitMapV35NValue, hwMusaFrcInFrameCount=hwMusaFrcInFrameCount, hwMusaFrcSCOL=hwMusaFrcSCOL, hwMusaFrcRACTS=hwMusaFrcRACTS, hwMusaFrcBoardEntry=hwMusaFrcBoardEntry, hwMusaFrcIwfEntry=hwMusaFrcIwfEntry, hwMusaFrcPhyMCCStatisTable=hwMusaFrcPhyMCCStatisTable, hwMusaFrcLoopState=hwMusaFrcLoopState, hwMusaFrcLogicPortStatisTable=hwMusaFrcLogicPortStatisTable, hwMusaFrcPhyMCCStatisEntry=hwMusaFrcPhyMCCStatisEntry, hwMusaFrcMccRxSucc=hwMusaFrcMccRxSucc, hwMusaFrcIwfActive=hwMusaFrcIwfActive, hwMusaFrcSigPortSide=hwMusaFrcSigPortSide, hwMusaFrcSarRxErrLNE=hwMusaFrcSarRxErrLNE, hwMusaFrcPhySARStatisTable=hwMusaFrcPhySARStatisTable, hwMusaFrcMccRxLRF=hwMusaFrcMccRxLRF, hwMusaFrcPhyPortId=hwMusaFrcPhyPortId, hwMusaFrcOutLossParkageC=hwMusaFrcOutLossParkageC, hwMusaFrcServiceMode=hwMusaFrcServiceMode, hwMusaFrcNetworkProtocalC=hwMusaFrcNetworkProtocalC, hwMusaFrcSendFrameC=hwMusaFrcSendFrameC, hwMusaFrcAtmPortStatisEntry=hwMusaFrcAtmPortStatisEntry, hwMusaFrcCongestState=hwMusaFrcCongestState, hwMusaFrcPhyStatisGroup=hwMusaFrcPhyStatisGroup, hwMusaFrcRTS=hwMusaFrcRTS, hwMusaFrcPhyPortType=hwMusaFrcPhyPortType, hwMusaFrcDownInDiscards=hwMusaFrcDownInDiscards, hwMusaFrcAtmPortActive=hwMusaFrcAtmPortActive, hwMusaFrcUpOutFrames=hwMusaFrcUpOutFrames, hwMusaFrcT1HaulMode=hwMusaFrcT1HaulMode, hwMusaFrcUpOutBytes=hwMusaFrcUpOutBytes, hwMusaFrcPhyPortAlarmEntry=hwMusaFrcPhyPortAlarmEntry, hwMusaFrcClp=hwMusaFrcClp, hwMusaFrcPhyPortLineIfEntry=hwMusaFrcPhyPortLineIfEntry, hwMusaFrcLogPortSigOper=hwMusaFrcLogPortSigOper, hwMusaFrcAtmInBytes=hwMusaFrcAtmInBytes, hwMusaFrcAtmOutFrames=hwMusaFrcAtmOutFrames, hwMusaFrcAtmPort=hwMusaFrcAtmPort, hwMusaFrcNetworkDeactC=hwMusaFrcNetworkDeactC, hwMusaFrcMccRxNO=hwMusaFrcMccRxNO, hwMusaFrcAtmOutBytes=hwMusaFrcAtmOutBytes, hwMusaFrcT1E1Crc=hwMusaFrcT1E1Crc, hwMusaFrcPhyPortLineIfTable=hwMusaFrcPhyPortLineIfTable, hwMusaFrcLogPortSigN391=hwMusaFrcLogPortSigN391, hwMusaFrcMccRxCR=hwMusaFrcMccRxCR, hwMusaFrcOutFrameCount=hwMusaFrcOutFrameCount, hwMusaFrcLogPortSigNetN393=hwMusaFrcLogPortSigNetN393)
