#
# PySNMP MIB module ATT-CNM-SIP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ATT-CNM-SIP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:15:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, iso, Counter64, Unsigned32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, MibIdentifier, ModuleIdentity, ObjectIdentity, IpAddress, NotificationType, TimeTicks, Integer32, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "Counter64", "Unsigned32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "MibIdentifier", "ModuleIdentity", "ObjectIdentity", "IpAddress", "NotificationType", "TimeTicks", "Integer32", "enterprises")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
att_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 74)).setLabel("att-2")
att_products = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 1)).setLabel("att-products")
att_mgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 2)).setLabel("att-mgmt")
att_cnmAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 1, 9)).setLabel("att-cnmAgent")
att_cnm = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 2, 15)).setLabel("att-cnm")
att_cnm_sip = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 2, 15, 5)).setLabel("att-cnm-sip")
class SMDSAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

attCNMsipConfigTable = MibTable((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 1), )
if mibBuilder.loadTexts: attCNMsipConfigTable.setStatus('mandatory')
attCNMsipConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 1, 1), ).setIndexNames((0, "ATT-CNM-SIP-MIB", "attCNMsipConfigIndex"))
if mibBuilder.loadTexts: attCNMsipConfigEntry.setStatus('mandatory')
attCNMsipConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipConfigIndex.setStatus('mandatory')
attCNMsipMeasMaxIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipMeasMaxIntervals.setStatus('mandatory')
attCNMsipMeasIntervalLen = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipMeasIntervalLen.setStatus('mandatory')
attCNMsipMeasTable = MibTable((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2), )
if mibBuilder.loadTexts: attCNMsipMeasTable.setStatus('mandatory')
attCNMsipMeasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1), ).setIndexNames((0, "ATT-CNM-SIP-MIB", "attCNMsipMeasIndex"), (0, "ATT-CNM-SIP-MIB", "attCNMsipMeasInterval"))
if mibBuilder.loadTexts: attCNMsipMeasEntry.setStatus('mandatory')
attCNMsipMeasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipMeasIndex.setStatus('mandatory')
attCNMsipMeasInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipMeasInterval.setStatus('mandatory')
attCNMsipMeasTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipMeasTimeStamp.setStatus('mandatory')
attCNMsipMeasLocalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipMeasLocalTime.setStatus('mandatory')
attCNMsipReceivedL3PDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipReceivedL3PDUs.setStatus('mandatory')
attCNMsipSentL3PDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipSentL3PDUs.setStatus('mandatory')
attCNMsipReceivedGroupL3PDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipReceivedGroupL3PDUs.setStatus('mandatory')
attCNMsipSentGroupL3PDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipSentGroupL3PDUs.setStatus('mandatory')
attCNMsipReceivedL2PDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipReceivedL2PDUs.setStatus('mandatory')
attCNMsipSentL2PDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipSentL2PDUs.setStatus('mandatory')
attCNMsipL3ErrorLogTable = MibTable((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 3), )
if mibBuilder.loadTexts: attCNMsipL3ErrorLogTable.setStatus('mandatory')
attCNMsipL3ErrorLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 3, 1), ).setIndexNames((0, "ATT-CNM-SIP-MIB", "attCNMsipL3ErrorLogIndex"), (0, "ATT-CNM-SIP-MIB", "attCNMsipL3ErrorLogType"))
if mibBuilder.loadTexts: attCNMsipL3ErrorLogEntry.setStatus('mandatory')
attCNMsipL3ErrorLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipL3ErrorLogIndex.setStatus('mandatory')
attCNMsipL3ErrorLogType = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("daFieldFormatError", 1), ("saFieldFormatError", 2), ("baSizeFieldValueInvalid", 3), ("heLengthInvalid", 4), ("heElementLengthInvalid", 5), ("heVersionElementInvalid", 6), ("heCarrierSelectionElementInvalid", 7), ("hePADInvalid", 8), ("beTagMismatch", 9), ("baSizeFieldNotEqualLengthField", 10), ("incorrectLength", 11), ("mriTimeout", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipL3ErrorLogType.setStatus('mandatory')
attCNMsipL3ErrorLogSA = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 3, 1, 3), SMDSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipL3ErrorLogSA.setStatus('mandatory')
attCNMsipL3ErrorLogDA = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 3, 1, 4), SMDSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipL3ErrorLogDA.setStatus('mandatory')
attCNMsipL3ErrorLogTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipL3ErrorLogTimeStamp.setStatus('mandatory')
attCNMsipL3ErrorLogLocalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipL3ErrorLogLocalTime.setStatus('mandatory')
mibBuilder.exportSymbols("ATT-CNM-SIP-MIB", att_products=att_products, attCNMsipMeasMaxIntervals=attCNMsipMeasMaxIntervals, attCNMsipL3ErrorLogDA=attCNMsipL3ErrorLogDA, attCNMsipConfigTable=attCNMsipConfigTable, attCNMsipSentGroupL3PDUs=attCNMsipSentGroupL3PDUs, attCNMsipL3ErrorLogSA=attCNMsipL3ErrorLogSA, attCNMsipMeasEntry=attCNMsipMeasEntry, attCNMsipL3ErrorLogLocalTime=attCNMsipL3ErrorLogLocalTime, attCNMsipSentL2PDUs=attCNMsipSentL2PDUs, att_cnm_sip=att_cnm_sip, attCNMsipMeasIntervalLen=attCNMsipMeasIntervalLen, attCNMsipL3ErrorLogIndex=attCNMsipL3ErrorLogIndex, att_cnmAgent=att_cnmAgent, att_mgmt=att_mgmt, attCNMsipL3ErrorLogTimeStamp=attCNMsipL3ErrorLogTimeStamp, attCNMsipMeasIndex=attCNMsipMeasIndex, attCNMsipSentL3PDUs=attCNMsipSentL3PDUs, attCNMsipMeasTable=attCNMsipMeasTable, attCNMsipReceivedGroupL3PDUs=attCNMsipReceivedGroupL3PDUs, attCNMsipConfigIndex=attCNMsipConfigIndex, att_2=att_2, attCNMsipMeasLocalTime=attCNMsipMeasLocalTime, attCNMsipReceivedL2PDUs=attCNMsipReceivedL2PDUs, attCNMsipMeasInterval=attCNMsipMeasInterval, attCNMsipL3ErrorLogTable=attCNMsipL3ErrorLogTable, attCNMsipReceivedL3PDUs=attCNMsipReceivedL3PDUs, attCNMsipL3ErrorLogEntry=attCNMsipL3ErrorLogEntry, att_cnm=att_cnm, SMDSAddress=SMDSAddress, attCNMsipConfigEntry=attCNMsipConfigEntry, attCNMsipMeasTimeStamp=attCNMsipMeasTimeStamp, attCNMsipL3ErrorLogType=attCNMsipL3ErrorLogType)
