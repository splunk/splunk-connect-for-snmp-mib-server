#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:21:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
InterfaceIndex, RowPointer, Gauge32, RowStatus, StorageType, DisplayString, Integer32, Counter32, Unsigned32 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "InterfaceIndex", "RowPointer", "Gauge32", "RowStatus", "StorageType", "DisplayString", "Integer32", "Counter32", "Unsigned32")
PassportCounter64, Unsigned64, Link, NonReplicated, HexString, DigitString, EnterpriseDateAndTime, AsciiString, Hex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "PassportCounter64", "Unsigned64", "Link", "NonReplicated", "HexString", "DigitString", "EnterpriseDateAndTime", "AsciiString", "Hex")
mscComponents, mscPassportMIBs = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscComponents", "mscPassportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, ObjectIdentity, TimeTicks, Gauge32, NotificationType, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Integer32, Bits, iso, Counter32, Unsigned32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "ObjectIdentity", "TimeTicks", "Gauge32", "NotificationType", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Integer32", "Bits", "iso", "Counter32", "Unsigned32", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
mpaNetworkLinkMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 119))
mscMpanl = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123))
mscMpanlRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 1), )
if mibBuilder.loadTexts: mscMpanlRowStatusTable.setStatus('mandatory')
mscMpanlRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"))
if mibBuilder.loadTexts: mscMpanlRowStatusEntry.setStatus('mandatory')
mscMpanlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlRowStatus.setStatus('mandatory')
mscMpanlComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlComponentName.setStatus('mandatory')
mscMpanlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlStorageType.setStatus('mandatory')
mscMpanlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: mscMpanlIndex.setStatus('mandatory')
mscMpanlCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 10), )
if mibBuilder.loadTexts: mscMpanlCidDataTable.setStatus('mandatory')
mscMpanlCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"))
if mibBuilder.loadTexts: mscMpanlCidDataEntry.setStatus('mandatory')
mscMpanlCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlCustomerIdentifier.setStatus('mandatory')
mscMpanlProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 12), )
if mibBuilder.loadTexts: mscMpanlProvTable.setStatus('mandatory')
mscMpanlProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"))
if mibBuilder.loadTexts: mscMpanlProvEntry.setStatus('mandatory')
mscMpanlCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 12, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlCommentText.setStatus('mandatory')
mscMpanlEmissionPriorityQsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 13), )
if mibBuilder.loadTexts: mscMpanlEmissionPriorityQsTable.setStatus('mandatory')
mscMpanlEmissionPriorityQsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"))
if mibBuilder.loadTexts: mscMpanlEmissionPriorityQsEntry.setStatus('mandatory')
mscMpanlNumberOfEmissionQs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), )).clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlNumberOfEmissionQs.setStatus('mandatory')
mscMpanlStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 14), )
if mibBuilder.loadTexts: mscMpanlStateTable.setStatus('mandatory')
mscMpanlStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"))
if mibBuilder.loadTexts: mscMpanlStateEntry.setStatus('mandatory')
mscMpanlAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlAdminState.setStatus('mandatory')
mscMpanlOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlOperationalState.setStatus('mandatory')
mscMpanlUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlUsageState.setStatus('mandatory')
mscMpanlAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 14, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlAvailabilityStatus.setStatus('mandatory')
mscMpanlProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 14, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlProceduralStatus.setStatus('mandatory')
mscMpanlControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 14, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlControlStatus.setStatus('mandatory')
mscMpanlAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 14, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlAlarmStatus.setStatus('mandatory')
mscMpanlStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 14, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlStandbyStatus.setStatus('mandatory')
mscMpanlUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 14, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlUnknownStatus.setStatus('mandatory')
mscMpanlStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 16), )
if mibBuilder.loadTexts: mscMpanlStatsTable.setStatus('mandatory')
mscMpanlStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"))
if mibBuilder.loadTexts: mscMpanlStatsEntry.setStatus('mandatory')
mscMpanlLastUnknownDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 16, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlLastUnknownDlci.setStatus('mandatory')
mscMpanlUnknownDlciFramesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 16, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlUnknownDlciFramesFromIf.setStatus('mandatory')
mscMpanlInvalidHeaderFramesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 16, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlInvalidHeaderFramesFromIf.setStatus('mandatory')
mscMpanlTrafficStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 17), )
if mibBuilder.loadTexts: mscMpanlTrafficStatsTable.setStatus('mandatory')
mscMpanlTrafficStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"))
if mibBuilder.loadTexts: mscMpanlTrafficStatsEntry.setStatus('mandatory')
mscMpanlFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 17, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFrmToIf.setStatus('mandatory')
mscMpanlOctetToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 17, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlOctetToIf.setStatus('mandatory')
mscMpanlFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 17, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFrmFromIf.setStatus('mandatory')
mscMpanlOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 17, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlOctetFromIf.setStatus('mandatory')
mscMpanlIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 23), )
if mibBuilder.loadTexts: mscMpanlIfEntryTable.setStatus('mandatory')
mscMpanlIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 23, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"))
if mibBuilder.loadTexts: mscMpanlIfEntryEntry.setStatus('mandatory')
mscMpanlIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 23, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlIfAdminStatus.setStatus('mandatory')
mscMpanlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 23, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlIfIndex.setStatus('mandatory')
mscMpanlOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 24), )
if mibBuilder.loadTexts: mscMpanlOperStatusTable.setStatus('mandatory')
mscMpanlOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 24, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"))
if mibBuilder.loadTexts: mscMpanlOperStatusEntry.setStatus('mandatory')
mscMpanlSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 24, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSnmpOperStatus.setStatus('mandatory')
mscMpanlOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 25), )
if mibBuilder.loadTexts: mscMpanlOperTable.setStatus('mandatory')
mscMpanlOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 25, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"))
if mibBuilder.loadTexts: mscMpanlOperEntry.setStatus('mandatory')
mscMpanlRoundTripDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 25, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlRoundTripDelay.setStatus('mandatory')
mscMpanlFrmToIfByQueueTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 350), )
if mibBuilder.loadTexts: mscMpanlFrmToIfByQueueTable.setStatus('mandatory')
mscMpanlFrmToIfByQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 350, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlFrmToIfByQueueIndex"))
if mibBuilder.loadTexts: mscMpanlFrmToIfByQueueEntry.setStatus('mandatory')
mscMpanlFrmToIfByQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 350, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscMpanlFrmToIfByQueueIndex.setStatus('mandatory')
mscMpanlFrmToIfByQueueValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 350, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFrmToIfByQueueValue.setStatus('mandatory')
mscMpanlOctetToIfByQueueTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 351), )
if mibBuilder.loadTexts: mscMpanlOctetToIfByQueueTable.setStatus('mandatory')
mscMpanlOctetToIfByQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 351, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlOctetToIfByQueueIndex"))
if mibBuilder.loadTexts: mscMpanlOctetToIfByQueueEntry.setStatus('mandatory')
mscMpanlOctetToIfByQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 351, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscMpanlOctetToIfByQueueIndex.setStatus('mandatory')
mscMpanlOctetToIfByQueueValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 351, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlOctetToIfByQueueValue.setStatus('mandatory')
mscMpanlDna = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 2))
mscMpanlDnaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 2, 1), )
if mibBuilder.loadTexts: mscMpanlDnaRowStatusTable.setStatus('mandatory')
mscMpanlDnaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDnaIndex"))
if mibBuilder.loadTexts: mscMpanlDnaRowStatusEntry.setStatus('mandatory')
mscMpanlDnaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDnaRowStatus.setStatus('mandatory')
mscMpanlDnaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDnaComponentName.setStatus('mandatory')
mscMpanlDnaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDnaStorageType.setStatus('mandatory')
mscMpanlDnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMpanlDnaIndex.setStatus('mandatory')
mscMpanlDnaOutgoingOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 2, 11), )
if mibBuilder.loadTexts: mscMpanlDnaOutgoingOptionsTable.setStatus('mandatory')
mscMpanlDnaOutgoingOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDnaIndex"))
if mibBuilder.loadTexts: mscMpanlDnaOutgoingOptionsEntry.setStatus('mandatory')
mscMpanlDnaDefaultTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 2, 11, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15))).clone('n0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlDnaDefaultTransferPriority.setStatus('mandatory')
mscMpanlDnaCallOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 2, 13), )
if mibBuilder.loadTexts: mscMpanlDnaCallOptionsTable.setStatus('mandatory')
mscMpanlDnaCallOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDnaIndex"))
if mibBuilder.loadTexts: mscMpanlDnaCallOptionsEntry.setStatus('mandatory')
mscMpanlDnaAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 2, 13, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlDnaAccountClass.setStatus('mandatory')
mscMpanlDnaAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 2, 13, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="80")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlDnaAccountCollection.setStatus('mandatory')
mscMpanlDnaServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 2, 13, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlDnaServiceExchange.setStatus('mandatory')
mscMpanlDnaEgressAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 2, 13, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlDnaEgressAccounting.setStatus('mandatory')
mscMpanlFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3))
mscMpanlFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 1), )
if mibBuilder.loadTexts: mscMpanlFramerRowStatusTable.setStatus('mandatory')
mscMpanlFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlFramerIndex"))
if mibBuilder.loadTexts: mscMpanlFramerRowStatusEntry.setStatus('mandatory')
mscMpanlFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlFramerRowStatus.setStatus('mandatory')
mscMpanlFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerComponentName.setStatus('mandatory')
mscMpanlFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerStorageType.setStatus('mandatory')
mscMpanlFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMpanlFramerIndex.setStatus('mandatory')
mscMpanlFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 10), )
if mibBuilder.loadTexts: mscMpanlFramerProvTable.setStatus('mandatory')
mscMpanlFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlFramerIndex"))
if mibBuilder.loadTexts: mscMpanlFramerProvEntry.setStatus('mandatory')
mscMpanlFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlFramerInterfaceName.setStatus('mandatory')
mscMpanlFramerLinkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 11), )
if mibBuilder.loadTexts: mscMpanlFramerLinkTable.setStatus('mandatory')
mscMpanlFramerLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlFramerIndex"))
if mibBuilder.loadTexts: mscMpanlFramerLinkEntry.setStatus('mandatory')
mscMpanlFramerDataInversion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 16))).clone(namedValues=NamedValues(("off", 0), ("on", 16))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlFramerDataInversion.setStatus('mandatory')
mscMpanlFramerFrameCrcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("crc16", 0), ("crc32", 1), ("noCrc", 2))).clone('crc16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlFramerFrameCrcType.setStatus('mandatory')
mscMpanlFramerFlagsBetweenFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlFramerFlagsBetweenFrames.setStatus('mandatory')
mscMpanlFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 12), )
if mibBuilder.loadTexts: mscMpanlFramerStateTable.setStatus('mandatory')
mscMpanlFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlFramerIndex"))
if mibBuilder.loadTexts: mscMpanlFramerStateEntry.setStatus('mandatory')
mscMpanlFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerAdminState.setStatus('mandatory')
mscMpanlFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerOperationalState.setStatus('mandatory')
mscMpanlFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerUsageState.setStatus('mandatory')
mscMpanlFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 13), )
if mibBuilder.loadTexts: mscMpanlFramerStatsTable.setStatus('mandatory')
mscMpanlFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlFramerIndex"))
if mibBuilder.loadTexts: mscMpanlFramerStatsEntry.setStatus('mandatory')
mscMpanlFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerFrmToIf.setStatus('obsolete')
mscMpanlFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerFrmFromIf.setStatus('obsolete')
mscMpanlFramerOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerOctetFromIf.setStatus('obsolete')
mscMpanlFramerAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerAborts.setStatus('mandatory')
mscMpanlFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerCrcErrors.setStatus('mandatory')
mscMpanlFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerLrcErrors.setStatus('mandatory')
mscMpanlFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerNonOctetErrors.setStatus('mandatory')
mscMpanlFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerOverruns.setStatus('mandatory')
mscMpanlFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerUnderruns.setStatus('mandatory')
mscMpanlFramerLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerLargeFrmErrors.setStatus('mandatory')
mscMpanlFramerFrmModeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerFrmModeErrors.setStatus('mandatory')
mscMpanlFramerFrmToIf64 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 13, 1, 14), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerFrmToIf64.setStatus('mandatory')
mscMpanlFramerFrmFromIf64 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 13, 1, 15), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerFrmFromIf64.setStatus('mandatory')
mscMpanlFramerOctetFromIf64 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 13, 1, 16), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerOctetFromIf64.setStatus('mandatory')
mscMpanlFramerUtilTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 14), )
if mibBuilder.loadTexts: mscMpanlFramerUtilTable.setStatus('mandatory')
mscMpanlFramerUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlFramerIndex"))
if mibBuilder.loadTexts: mscMpanlFramerUtilEntry.setStatus('mandatory')
mscMpanlFramerNormPrioLinkUtilToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 14, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerNormPrioLinkUtilToIf.setStatus('mandatory')
mscMpanlFramerNormPrioLinkUtilFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 3, 14, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFramerNormPrioLinkUtilFromIf.setStatus('mandatory')
mscMpanlPrefixDna = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 4))
mscMpanlPrefixDnaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 4, 1), )
if mibBuilder.loadTexts: mscMpanlPrefixDnaRowStatusTable.setStatus('mandatory')
mscMpanlPrefixDnaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlPrefixDnaNumberingPlanIndicatorIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlPrefixDnaDataNetworkAddressIndex"))
if mibBuilder.loadTexts: mscMpanlPrefixDnaRowStatusEntry.setStatus('mandatory')
mscMpanlPrefixDnaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlPrefixDnaRowStatus.setStatus('mandatory')
mscMpanlPrefixDnaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlPrefixDnaComponentName.setStatus('mandatory')
mscMpanlPrefixDnaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlPrefixDnaStorageType.setStatus('mandatory')
mscMpanlPrefixDnaNumberingPlanIndicatorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))))
if mibBuilder.loadTexts: mscMpanlPrefixDnaNumberingPlanIndicatorIndex.setStatus('mandatory')
mscMpanlPrefixDnaDataNetworkAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 4, 1, 1, 11), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15)))
if mibBuilder.loadTexts: mscMpanlPrefixDnaDataNetworkAddressIndex.setStatus('mandatory')
mscMpanlDlci = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5))
mscMpanlDlciRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 1), )
if mibBuilder.loadTexts: mscMpanlDlciRowStatusTable.setStatus('mandatory')
mscMpanlDlciRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"))
if mibBuilder.loadTexts: mscMpanlDlciRowStatusEntry.setStatus('mandatory')
mscMpanlDlciRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciRowStatus.setStatus('mandatory')
mscMpanlDlciComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciComponentName.setStatus('mandatory')
mscMpanlDlciStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciStorageType.setStatus('mandatory')
mscMpanlDlciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(17, 1007)))
if mibBuilder.loadTexts: mscMpanlDlciIndex.setStatus('mandatory')
mscMpanlDlciStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 10), )
if mibBuilder.loadTexts: mscMpanlDlciStateTable.setStatus('mandatory')
mscMpanlDlciStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"))
if mibBuilder.loadTexts: mscMpanlDlciStateEntry.setStatus('mandatory')
mscMpanlDlciAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciAdminState.setStatus('mandatory')
mscMpanlDlciOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciOperationalState.setStatus('mandatory')
mscMpanlDlciUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciUsageState.setStatus('mandatory')
mscMpanlDlciAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciAvailabilityStatus.setStatus('mandatory')
mscMpanlDlciProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciProceduralStatus.setStatus('mandatory')
mscMpanlDlciControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciControlStatus.setStatus('mandatory')
mscMpanlDlciAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciAlarmStatus.setStatus('mandatory')
mscMpanlDlciStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciStandbyStatus.setStatus('mandatory')
mscMpanlDlciUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciUnknownStatus.setStatus('mandatory')
mscMpanlDlciCalldTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 11), )
if mibBuilder.loadTexts: mscMpanlDlciCalldTable.setStatus('mandatory')
mscMpanlDlciCalldEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"))
if mibBuilder.loadTexts: mscMpanlDlciCalldEntry.setStatus('mandatory')
mscMpanlDlciQ933CallState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 6, 9, 10, 11, 12, 19, 20))).clone(namedValues=NamedValues(("null", 0), ("callInitiated", 1), ("outgoingCallProceeding", 3), ("callPresent", 6), ("incomingCallProceeding", 9), ("active", 10), ("disconnectRequest", 11), ("disconnectIndication", 12), ("releaseRequest", 19), ("notApplicable", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciQ933CallState.setStatus('mandatory')
mscMpanlDlciQ933CallReference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciQ933CallReference.setStatus('mandatory')
mscMpanlDlciSpOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 12), )
if mibBuilder.loadTexts: mscMpanlDlciSpOpTable.setStatus('mandatory')
mscMpanlDlciSpOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"))
if mibBuilder.loadTexts: mscMpanlDlciSpOpEntry.setStatus('mandatory')
mscMpanlDlciMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciMaximumFrameSize.setStatus('mandatory')
mscMpanlDlciCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciCommittedBurstSize.setStatus('mandatory')
mscMpanlDlciExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciExcessBurstSize.setStatus('mandatory')
mscMpanlDlciAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciAccounting.setStatus('mandatory')
mscMpanlDlciEmissionPriorityToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciEmissionPriorityToIf.setStatus('mandatory')
mscMpanlDlciTransferPriToNwk = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 12, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciTransferPriToNwk.setStatus('mandatory')
mscMpanlDlciTransferPriFromNwk = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 12, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciTransferPriFromNwk.setStatus('mandatory')
mscMpanlDlciStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13), )
if mibBuilder.loadTexts: mscMpanlDlciStatsTable.setStatus('mandatory')
mscMpanlDlciStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"))
if mibBuilder.loadTexts: mscMpanlDlciStatsEntry.setStatus('mandatory')
mscMpanlDlciFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciFrmToIf.setStatus('mandatory')
mscMpanlDlciFecnFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciFecnFrmToIf.setStatus('mandatory')
mscMpanlDlciBecnFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciBecnFrmToIf.setStatus('mandatory')
mscMpanlDlciBciToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciBciToSubnet.setStatus('mandatory')
mscMpanlDlciDeFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDeFrmToIf.setStatus('mandatory')
mscMpanlDlciDiscCongestedToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDiscCongestedToIf.setStatus('mandatory')
mscMpanlDlciDiscDeCongestedToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDiscDeCongestedToIf.setStatus('mandatory')
mscMpanlDlciFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciFrmFromIf.setStatus('mandatory')
mscMpanlDlciFecnFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciFecnFrmFromIf.setStatus('mandatory')
mscMpanlDlciBecnFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciBecnFrmFromIf.setStatus('mandatory')
mscMpanlDlciFciFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciFciFromSubnet.setStatus('mandatory')
mscMpanlDlciBciFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciBciFromSubnet.setStatus('mandatory')
mscMpanlDlciDeFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDeFrmFromIf.setStatus('mandatory')
mscMpanlDlciExcessFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciExcessFrmFromIf.setStatus('mandatory')
mscMpanlDlciDiscExcessFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDiscExcessFromIf.setStatus('mandatory')
mscMpanlDlciDiscFrameAbit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDiscFrameAbit.setStatus('mandatory')
mscMpanlDlciDiscCongestedFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDiscCongestedFromIf.setStatus('mandatory')
mscMpanlDlciDiscDeCongestedFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDiscDeCongestedFromIf.setStatus('mandatory')
mscMpanlDlciErrorShortFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciErrorShortFrmFromIf.setStatus('mandatory')
mscMpanlDlciErrorLongFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciErrorLongFrmFromIf.setStatus('mandatory')
mscMpanlDlciBecnFrmSetByService = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciBecnFrmSetByService.setStatus('mandatory')
mscMpanlDlciBytesToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciBytesToIf.setStatus('mandatory')
mscMpanlDlciDeBytesToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDeBytesToIf.setStatus('mandatory')
mscMpanlDlciDiscCongestedToIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDiscCongestedToIfBytes.setStatus('mandatory')
mscMpanlDlciDiscDeCongestedToIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDiscDeCongestedToIfBytes.setStatus('mandatory')
mscMpanlDlciBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciBytesFromIf.setStatus('mandatory')
mscMpanlDlciDeBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDeBytesFromIf.setStatus('mandatory')
mscMpanlDlciExcessBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciExcessBytesFromIf.setStatus('mandatory')
mscMpanlDlciDiscExcessFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDiscExcessFromIfBytes.setStatus('mandatory')
mscMpanlDlciDiscByteAbit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDiscByteAbit.setStatus('mandatory')
mscMpanlDlciDiscCongestedFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDiscCongestedFromIfBytes.setStatus('mandatory')
mscMpanlDlciDiscDeCongestedFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDiscDeCongestedFromIfBytes.setStatus('mandatory')
mscMpanlDlciErrorLongBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciErrorLongBytesFromIf.setStatus('mandatory')
mscMpanlDlciTransferPriorityToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciTransferPriorityToNetwork.setStatus('obsolete')
mscMpanlDlciTransferPriorityFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 13, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciTransferPriorityFromNetwork.setStatus('obsolete')
mscMpanlDlciIntTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 14), )
if mibBuilder.loadTexts: mscMpanlDlciIntTable.setStatus('mandatory')
mscMpanlDlciIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"))
if mibBuilder.loadTexts: mscMpanlDlciIntEntry.setStatus('mandatory')
mscMpanlDlciStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 14, 1, 1), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciStartTime.setStatus('mandatory')
mscMpanlDlciTotalIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 14, 1, 2), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciTotalIngressBytes.setStatus('mandatory')
mscMpanlDlciTotalEgressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 14, 1, 3), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciTotalEgressBytes.setStatus('mandatory')
mscMpanlDlciEirIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 14, 1, 4), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciEirIngressBytes.setStatus('mandatory')
mscMpanlDlciEirEgressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 14, 1, 5), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciEirEgressBytes.setStatus('mandatory')
mscMpanlDlciDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 14, 1, 6), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDiscardedBytes.setStatus('mandatory')
mscMpanlDlciTotalIngressSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 14, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciTotalIngressSegFrm.setStatus('mandatory')
mscMpanlDlciTotalEgressSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 14, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciTotalEgressSegFrm.setStatus('mandatory')
mscMpanlDlciEirIngressSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 14, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciEirIngressSegFrm.setStatus('mandatory')
mscMpanlDlciEirEgressSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 14, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciEirEgressSegFrm.setStatus('mandatory')
mscMpanlDlciDiscardedSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 14, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciDiscardedSegFrm.setStatus('mandatory')
mscMpanlDlciCallReferenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 14, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciCallReferenceNumber.setStatus('mandatory')
mscMpanlDlciElapsedDifference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 14, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciElapsedDifference.setStatus('mandatory')
mscMpanlDlciAbitTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 15), )
if mibBuilder.loadTexts: mscMpanlDlciAbitTable.setStatus('mandatory')
mscMpanlDlciAbitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"))
if mibBuilder.loadTexts: mscMpanlDlciAbitEntry.setStatus('mandatory')
mscMpanlDlciABitStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1), ("notApplicable", 2))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciABitStatusToIf.setStatus('mandatory')
mscMpanlDlciABitReasonToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 5, 6))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignaled", 1), ("remoteLmiError", 3), ("remoteLinkDown", 5), ("vcDown", 6))).clone('vcDown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciABitReasonToIf.setStatus('mandatory')
mscMpanlDlciABitStatusFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1), ("notApplicable", 2))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciABitStatusFromIf.setStatus('mandatory')
mscMpanlDlciABitReasonFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 5, 6))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignaled", 1), ("remoteLmiError", 3), ("remoteLinkDown", 5), ("vcDown", 6))).clone('vcDown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciABitReasonFromIf.setStatus('mandatory')
mscMpanlDlciLoopbackState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLoopbackState.setStatus('mandatory')
mscMpanlDlciLb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2))
mscMpanlDlciLbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 1), )
if mibBuilder.loadTexts: mscMpanlDlciLbRowStatusTable.setStatus('mandatory')
mscMpanlDlciLbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciLbIndex"))
if mibBuilder.loadTexts: mscMpanlDlciLbRowStatusEntry.setStatus('mandatory')
mscMpanlDlciLbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLbRowStatus.setStatus('mandatory')
mscMpanlDlciLbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLbComponentName.setStatus('mandatory')
mscMpanlDlciLbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLbStorageType.setStatus('mandatory')
mscMpanlDlciLbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMpanlDlciLbIndex.setStatus('mandatory')
mscMpanlDlciLbStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 10), )
if mibBuilder.loadTexts: mscMpanlDlciLbStatsTable.setStatus('mandatory')
mscMpanlDlciLbStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciLbIndex"))
if mibBuilder.loadTexts: mscMpanlDlciLbStatsEntry.setStatus('mandatory')
mscMpanlDlciLbLocalTotalFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLbLocalTotalFrm.setStatus('mandatory')
mscMpanlDlciLbLocalTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLbLocalTotalBytes.setStatus('mandatory')
mscMpanlDlciLbLocalFecnFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLbLocalFecnFrm.setStatus('mandatory')
mscMpanlDlciLbLocalBecnFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLbLocalBecnFrm.setStatus('mandatory')
mscMpanlDlciLbLocalDeFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLbLocalDeFrm.setStatus('mandatory')
mscMpanlDlciLbLocalDeBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLbLocalDeBytes.setStatus('mandatory')
mscMpanlDlciLbRemoteTotalFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLbRemoteTotalFrm.setStatus('mandatory')
mscMpanlDlciLbRemoteTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLbRemoteTotalBytes.setStatus('mandatory')
mscMpanlDlciLbRemoteFecnFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLbRemoteFecnFrm.setStatus('mandatory')
mscMpanlDlciLbRemoteBecnFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLbRemoteBecnFrm.setStatus('mandatory')
mscMpanlDlciLbRemoteDeFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLbRemoteDeFrm.setStatus('mandatory')
mscMpanlDlciLbRemoteDeBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 2, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLbRemoteDeBytes.setStatus('mandatory')
mscMpanlDlciVc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3))
mscMpanlDlciVcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 1), )
if mibBuilder.loadTexts: mscMpanlDlciVcRowStatusTable.setStatus('mandatory')
mscMpanlDlciVcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciVcIndex"))
if mibBuilder.loadTexts: mscMpanlDlciVcRowStatusEntry.setStatus('mandatory')
mscMpanlDlciVcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcRowStatus.setStatus('mandatory')
mscMpanlDlciVcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcComponentName.setStatus('mandatory')
mscMpanlDlciVcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcStorageType.setStatus('mandatory')
mscMpanlDlciVcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMpanlDlciVcIndex.setStatus('mandatory')
mscMpanlDlciVcCadTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10), )
if mibBuilder.loadTexts: mscMpanlDlciVcCadTable.setStatus('mandatory')
mscMpanlDlciVcCadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciVcIndex"))
if mibBuilder.loadTexts: mscMpanlDlciVcCadEntry.setStatus('mandatory')
mscMpanlDlciVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("svc", 0), ("pvc", 1), ("spvc", 2), ("frf10spvc", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcType.setStatus('mandatory')
mscMpanlDlciVcState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("creating", 0), ("readyP1", 1), ("dteWaitingP2", 2), ("dceWaitingP3", 3), ("dataTransferP4", 4), ("unsupportedP5", 5), ("dteClearRequestP6", 6), ("dceClearIndicationP7", 7), ("termination", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcState.setStatus('mandatory')
mscMpanlDlciVcPreviousState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("creating", 0), ("readyP1", 1), ("dteWaitingP2", 2), ("dceWaitingP3", 3), ("dataTransferP4", 4), ("unsupportedP5", 5), ("dteClearRequestP6", 6), ("dceClearIndicationP7", 7), ("termination", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcPreviousState.setStatus('mandatory')
mscMpanlDlciVcDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcDiagnosticCode.setStatus('mandatory')
mscMpanlDlciVcPreviousDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcPreviousDiagnosticCode.setStatus('mandatory')
mscMpanlDlciVcCalledNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcCalledNpi.setStatus('mandatory')
mscMpanlDlciVcCalledDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 7), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcCalledDna.setStatus('mandatory')
mscMpanlDlciVcCalledLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcCalledLcn.setStatus('mandatory')
mscMpanlDlciVcCallingNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcCallingNpi.setStatus('mandatory')
mscMpanlDlciVcCallingDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 10), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcCallingDna.setStatus('mandatory')
mscMpanlDlciVcCallingLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcCallingLcn.setStatus('mandatory')
mscMpanlDlciVcAccountingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcAccountingEnabled.setStatus('mandatory')
mscMpanlDlciVcFastSelectCall = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcFastSelectCall.setStatus('mandatory')
mscMpanlDlciVcPathReliability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("high", 0), ("normal", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcPathReliability.setStatus('mandatory')
mscMpanlDlciVcAccountingEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("callingEnd", 0), ("calledEnd", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcAccountingEnd.setStatus('mandatory')
mscMpanlDlciVcPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcPriority.setStatus('mandatory')
mscMpanlDlciVcSegmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcSegmentSize.setStatus('mandatory')
mscMpanlDlciVcMaxSubnetPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcMaxSubnetPktSize.setStatus('mandatory')
mscMpanlDlciVcRcosToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1), ("multimedia", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcRcosToNetwork.setStatus('mandatory')
mscMpanlDlciVcRcosFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1), ("multimedia", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcRcosFromNetwork.setStatus('mandatory')
mscMpanlDlciVcEmissionPriorityToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("interrupting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcEmissionPriorityToNetwork.setStatus('mandatory')
mscMpanlDlciVcEmissionPriorityFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("interrupting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcEmissionPriorityFromNetwork.setStatus('mandatory')
mscMpanlDlciVcDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 10, 1, 32), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcDataPath.setStatus('mandatory')
mscMpanlDlciVcIntdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 11), )
if mibBuilder.loadTexts: mscMpanlDlciVcIntdTable.setStatus('mandatory')
mscMpanlDlciVcIntdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciVcIndex"))
if mibBuilder.loadTexts: mscMpanlDlciVcIntdEntry.setStatus('mandatory')
mscMpanlDlciVcCallReferenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 11, 1, 1), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcCallReferenceNumber.setStatus('obsolete')
mscMpanlDlciVcElapsedTimeTillNow = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcElapsedTimeTillNow.setStatus('mandatory')
mscMpanlDlciVcSegmentsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcSegmentsRx.setStatus('mandatory')
mscMpanlDlciVcSegmentsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcSegmentsSent.setStatus('mandatory')
mscMpanlDlciVcStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 11, 1, 5), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcStartTime.setStatus('mandatory')
mscMpanlDlciVcCallReferenceNumberDecimal = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 11, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcCallReferenceNumberDecimal.setStatus('mandatory')
mscMpanlDlciVcFrdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12), )
if mibBuilder.loadTexts: mscMpanlDlciVcFrdTable.setStatus('mandatory')
mscMpanlDlciVcFrdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciVcIndex"))
if mibBuilder.loadTexts: mscMpanlDlciVcFrdEntry.setStatus('mandatory')
mscMpanlDlciVcFrmCongestedToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcFrmCongestedToSubnet.setStatus('mandatory')
mscMpanlDlciVcCannotForwardToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcCannotForwardToSubnet.setStatus('mandatory')
mscMpanlDlciVcNotDataXferToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcNotDataXferToSubnet.setStatus('mandatory')
mscMpanlDlciVcOutOfRangeFrmFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcOutOfRangeFrmFromSubnet.setStatus('mandatory')
mscMpanlDlciVcCombErrorsFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcCombErrorsFromSubnet.setStatus('mandatory')
mscMpanlDlciVcDuplicatesFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcDuplicatesFromSubnet.setStatus('mandatory')
mscMpanlDlciVcNotDataXferFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcNotDataXferFromSubnet.setStatus('mandatory')
mscMpanlDlciVcFrmLossTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcFrmLossTimeouts.setStatus('mandatory')
mscMpanlDlciVcOoSeqByteCntExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcOoSeqByteCntExceeded.setStatus('mandatory')
mscMpanlDlciVcPeakOoSeqPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcPeakOoSeqPktCount.setStatus('mandatory')
mscMpanlDlciVcPeakOoSeqFrmForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcPeakOoSeqFrmForwarded.setStatus('mandatory')
mscMpanlDlciVcSendSequenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcSendSequenceNumber.setStatus('mandatory')
mscMpanlDlciVcPktRetryTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcPktRetryTimeouts.setStatus('mandatory')
mscMpanlDlciVcPeakRetryQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcPeakRetryQueueSize.setStatus('mandatory')
mscMpanlDlciVcSubnetRecoveries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcSubnetRecoveries.setStatus('mandatory')
mscMpanlDlciVcOoSeqPktCntExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcOoSeqPktCntExceeded.setStatus('mandatory')
mscMpanlDlciVcPeakOoSeqByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 12, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcPeakOoSeqByteCount.setStatus('mandatory')
mscMpanlDlciVcDmepTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 417), )
if mibBuilder.loadTexts: mscMpanlDlciVcDmepTable.setStatus('mandatory')
mscMpanlDlciVcDmepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 417, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciVcIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciVcDmepValue"))
if mibBuilder.loadTexts: mscMpanlDlciVcDmepEntry.setStatus('mandatory')
mscMpanlDlciVcDmepValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 3, 417, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciVcDmepValue.setStatus('mandatory')
mscMpanlDlciLCo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4))
mscMpanlDlciLCoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 1), )
if mibBuilder.loadTexts: mscMpanlDlciLCoRowStatusTable.setStatus('mandatory')
mscMpanlDlciLCoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciLCoIndex"))
if mibBuilder.loadTexts: mscMpanlDlciLCoRowStatusEntry.setStatus('mandatory')
mscMpanlDlciLCoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoRowStatus.setStatus('mandatory')
mscMpanlDlciLCoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoComponentName.setStatus('mandatory')
mscMpanlDlciLCoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoStorageType.setStatus('mandatory')
mscMpanlDlciLCoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMpanlDlciLCoIndex.setStatus('mandatory')
mscMpanlDlciLCoPathDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10), )
if mibBuilder.loadTexts: mscMpanlDlciLCoPathDataTable.setStatus('mandatory')
mscMpanlDlciLCoPathDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciLCoIndex"))
if mibBuilder.loadTexts: mscMpanlDlciLCoPathDataEntry.setStatus('mandatory')
mscMpanlDlciLCoState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("pathDown", 0), ("selectingRoute", 1), ("connecting", 2), ("pathUp", 3), ("pathDownRetrying", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoState.setStatus('mandatory')
mscMpanlDlciLCoEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("calling", 0), ("called", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoEnd.setStatus('mandatory')
mscMpanlDlciLCoCostMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoCostMetric.setStatus('mandatory')
mscMpanlDlciLCoDelayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoDelayMetric.setStatus('mandatory')
mscMpanlDlciLCoRoundTripDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoRoundTripDelay.setStatus('mandatory')
mscMpanlDlciLCoSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoSetupPriority.setStatus('mandatory')
mscMpanlDlciLCoHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoHoldingPriority.setStatus('mandatory')
mscMpanlDlciLCoRequiredTxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoRequiredTxBandwidth.setStatus('mandatory')
mscMpanlDlciLCoRequiredRxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoRequiredRxBandwidth.setStatus('mandatory')
mscMpanlDlciLCoRequiredTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("voice", 0), ("data", 1), ("video", 2), ("trafficType1", 3), ("trafficType2", 4), ("trafficType3", 5), ("trafficType4", 6), ("trafficType5", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoRequiredTrafficType.setStatus('mandatory')
mscMpanlDlciLCoPermittedTrunkTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoPermittedTrunkTypes.setStatus('mandatory')
mscMpanlDlciLCoRequiredSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoRequiredSecurity.setStatus('mandatory')
mscMpanlDlciLCoRequiredCustomerParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoRequiredCustomerParameter.setStatus('mandatory')
mscMpanlDlciLCoEmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoEmissionPriority.setStatus('mandatory')
mscMpanlDlciLCoDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoDiscardPriority.setStatus('mandatory')
mscMpanlDlciLCoRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoRetryCount.setStatus('mandatory')
mscMpanlDlciLCoPathFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoPathFailureCount.setStatus('mandatory')
mscMpanlDlciLCoReasonForNoRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("none", 0), ("destinationNameTooLong", 1), ("destinationNotSpecified", 2), ("unknownDestinationName", 3), ("incorrectDestination", 4), ("incorrectDestinationEndPoint", 5), ("unknownSource", 6), ("unknownDestination", 7), ("sameNode", 8), ("routeCostTooMuch", 9), ("routesDelayTooLong", 10), ("attributesNotMet", 11), ("anError", 12), ("attributeProfileProblem", 13), ("manualPathIndexProblem", 14))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoReasonForNoRoute.setStatus('mandatory')
mscMpanlDlciLCoLastTearDownReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("none", 0), ("normalShutDown", 1), ("insufficientTxLcOrBandwidth", 2), ("insufficientRxLcOrBandwidth", 3), ("trunkFailure", 4), ("trunkCardFailure", 5), ("operatorForced", 6), ("lostLcnClash", 7), ("networkCongestion", 8), ("trunkNotFound", 9), ("farEndNotFound", 10), ("wrongModuleReached", 11), ("farEndBusy", 12), ("callLoopedBack", 13), ("unknownReason", 14), ("farEndNotReady", 15), ("remoteNameMismatch", 16), ("serviceTypeMismatch", 17), ("reconnectFromFarEnd", 18), ("bumped", 19), ("accessCardFailure", 20), ("optimized", 21), ("overrideRemoteName", 22))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoLastTearDownReason.setStatus('mandatory')
mscMpanlDlciLCoPathFailureAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disconnectConnection", 0), ("reRoutePath", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoPathFailureAction.setStatus('mandatory')
mscMpanlDlciLCoBumpPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bumpWhenNecessary", 0), ("bumpToObtainBestRoute", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoBumpPreference.setStatus('mandatory')
mscMpanlDlciLCoOptimization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoOptimization.setStatus('mandatory')
mscMpanlDlciLCoPathUpDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 10, 1, 25), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoPathUpDateTime.setStatus('mandatory')
mscMpanlDlciLCoStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 11), )
if mibBuilder.loadTexts: mscMpanlDlciLCoStatsTable.setStatus('mandatory')
mscMpanlDlciLCoStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciLCoIndex"))
if mibBuilder.loadTexts: mscMpanlDlciLCoStatsEntry.setStatus('mandatory')
mscMpanlDlciLCoPktsToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 11, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoPktsToNetwork.setStatus('mandatory')
mscMpanlDlciLCoBytesToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 11, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoBytesToNetwork.setStatus('mandatory')
mscMpanlDlciLCoPktsFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 11, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoPktsFromNetwork.setStatus('mandatory')
mscMpanlDlciLCoBytesFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 11, 1, 4), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoBytesFromNetwork.setStatus('mandatory')
mscMpanlDlciLCoCallDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 12), )
if mibBuilder.loadTexts: mscMpanlDlciLCoCallDataTable.setStatus('mandatory')
mscMpanlDlciLCoCallDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciLCoIndex"))
if mibBuilder.loadTexts: mscMpanlDlciLCoCallDataEntry.setStatus('mandatory')
mscMpanlDlciLCoCallingNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 12, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoCallingNpi.setStatus('mandatory')
mscMpanlDlciLCoCallingDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 12, 1, 28), DigitString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoCallingDna.setStatus('mandatory')
mscMpanlDlciLCoElapsedTimeTillNow = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 12, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoElapsedTimeTillNow.setStatus('mandatory')
mscMpanlDlciLCoCallReferenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 12, 1, 31), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoCallReferenceNumber.setStatus('mandatory')
mscMpanlDlciLCoCalledNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 12, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoCalledNpi.setStatus('mandatory')
mscMpanlDlciLCoCalledDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 12, 1, 34), DigitString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoCalledDna.setStatus('mandatory')
mscMpanlDlciLCoPathTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 401), )
if mibBuilder.loadTexts: mscMpanlDlciLCoPathTable.setStatus('mandatory')
mscMpanlDlciLCoPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 401, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciLCoIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciLCoPathValue"))
if mibBuilder.loadTexts: mscMpanlDlciLCoPathEntry.setStatus('mandatory')
mscMpanlDlciLCoPathValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 4, 401, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciLCoPathValue.setStatus('mandatory')
mscMpanlDlciJvc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5))
mscMpanlDlciJvcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 1), )
if mibBuilder.loadTexts: mscMpanlDlciJvcRowStatusTable.setStatus('mandatory')
mscMpanlDlciJvcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciJvcIndex"))
if mibBuilder.loadTexts: mscMpanlDlciJvcRowStatusEntry.setStatus('mandatory')
mscMpanlDlciJvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciJvcRowStatus.setStatus('mandatory')
mscMpanlDlciJvcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciJvcComponentName.setStatus('mandatory')
mscMpanlDlciJvcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciJvcStorageType.setStatus('mandatory')
mscMpanlDlciJvcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMpanlDlciJvcIndex.setStatus('mandatory')
mscMpanlDlciJvcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 10), )
if mibBuilder.loadTexts: mscMpanlDlciJvcOperTable.setStatus('mandatory')
mscMpanlDlciJvcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciJvcIndex"))
if mibBuilder.loadTexts: mscMpanlDlciJvcOperEntry.setStatus('mandatory')
mscMpanlDlciJvcCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("null", 0), ("callRequest", 1), ("callIndication", 2), ("callBlockPresent", 3), ("active", 4), ("discInitiated", 5), ("discPktPresent", 6), ("callDisconnected", 7), ("callTerminated", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciJvcCurrentState.setStatus('mandatory')
mscMpanlDlciJvcPreviousState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("null", 0), ("callRequest", 1), ("callIndication", 2), ("callBlockPresent", 3), ("active", 4), ("discInitiated", 5), ("discPktPresent", 6), ("callDisconnected", 7), ("callTerminated", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciJvcPreviousState.setStatus('mandatory')
mscMpanlDlciJvcCallingNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciJvcCallingNpi.setStatus('mandatory')
mscMpanlDlciJvcCallingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 10, 1, 7), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciJvcCallingAddress.setStatus('mandatory')
mscMpanlDlciJvcCallingLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciJvcCallingLcn.setStatus('mandatory')
mscMpanlDlciJvcCalledNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciJvcCalledNpi.setStatus('mandatory')
mscMpanlDlciJvcCalledAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 10, 1, 10), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciJvcCalledAddress.setStatus('mandatory')
mscMpanlDlciJvcCalledLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciJvcCalledLcn.setStatus('mandatory')
mscMpanlDlciJvcStatTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 11), )
if mibBuilder.loadTexts: mscMpanlDlciJvcStatTable.setStatus('mandatory')
mscMpanlDlciJvcStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlDlciJvcIndex"))
if mibBuilder.loadTexts: mscMpanlDlciJvcStatEntry.setStatus('mandatory')
mscMpanlDlciJvcPacketsFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciJvcPacketsFromSubnet.setStatus('mandatory')
mscMpanlDlciJvcPacketsToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciJvcPacketsToSubnet.setStatus('mandatory')
mscMpanlDlciJvcPacketsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciJvcPacketsDiscarded.setStatus('mandatory')
mscMpanlDlciJvcProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 5, 5, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlDlciJvcProtocolErrors.setStatus('mandatory')
mscMpanlSig = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6))
mscMpanlSigRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 1), )
if mibBuilder.loadTexts: mscMpanlSigRowStatusTable.setStatus('mandatory')
mscMpanlSigRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlSigIndex"))
if mibBuilder.loadTexts: mscMpanlSigRowStatusEntry.setStatus('mandatory')
mscMpanlSigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigRowStatus.setStatus('mandatory')
mscMpanlSigComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigComponentName.setStatus('mandatory')
mscMpanlSigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigStorageType.setStatus('mandatory')
mscMpanlSigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMpanlSigIndex.setStatus('mandatory')
mscMpanlSigSysParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 13), )
if mibBuilder.loadTexts: mscMpanlSigSysParmsTable.setStatus('mandatory')
mscMpanlSigSysParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlSigIndex"))
if mibBuilder.loadTexts: mscMpanlSigSysParmsEntry.setStatus('mandatory')
mscMpanlSigCallSetupTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlSigCallSetupTimer.setStatus('mandatory')
mscMpanlSigDisconnectTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlSigDisconnectTimer.setStatus('mandatory')
mscMpanlSigReleaseTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlSigReleaseTimer.setStatus('mandatory')
mscMpanlSigCallProceedingTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 13, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlSigCallProceedingTimer.setStatus('mandatory')
mscMpanlSigNetworkType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("private", 1), ("public", 2))).clone('private')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlSigNetworkType.setStatus('mandatory')
mscMpanlSigLapfSysTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 14), )
if mibBuilder.loadTexts: mscMpanlSigLapfSysTable.setStatus('mandatory')
mscMpanlSigLapfSysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlSigIndex"))
if mibBuilder.loadTexts: mscMpanlSigLapfSysEntry.setStatus('mandatory')
mscMpanlSigWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 14, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlSigWindowSize.setStatus('mandatory')
mscMpanlSigRetransmitLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 14, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlSigRetransmitLimit.setStatus('mandatory')
mscMpanlSigAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 14, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 10000)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlSigAckTimer.setStatus('mandatory')
mscMpanlSigAckDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlSigAckDelayTimer.setStatus('mandatory')
mscMpanlSigIdleProbeTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 14, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 65535000)).clone(30000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlSigIdleProbeTimer.setStatus('mandatory')
mscMpanlSigSvcaccTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 15), )
if mibBuilder.loadTexts: mscMpanlSigSvcaccTable.setStatus('mandatory')
mscMpanlSigSvcaccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlSigIndex"))
if mibBuilder.loadTexts: mscMpanlSigSvcaccEntry.setStatus('mandatory')
mscMpanlSigDefaultAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlSigDefaultAccounting.setStatus('mandatory')
mscMpanlSigStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 16), )
if mibBuilder.loadTexts: mscMpanlSigStateTable.setStatus('mandatory')
mscMpanlSigStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlSigIndex"))
if mibBuilder.loadTexts: mscMpanlSigStateEntry.setStatus('mandatory')
mscMpanlSigAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigAdminState.setStatus('mandatory')
mscMpanlSigOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigOperationalState.setStatus('mandatory')
mscMpanlSigUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigUsageState.setStatus('mandatory')
mscMpanlSigStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 17), )
if mibBuilder.loadTexts: mscMpanlSigStatsTable.setStatus('mandatory')
mscMpanlSigStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlSigIndex"))
if mibBuilder.loadTexts: mscMpanlSigStatsEntry.setStatus('mandatory')
mscMpanlSigCurrentNumberOfSvcCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 17, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 991))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigCurrentNumberOfSvcCalls.setStatus('mandatory')
mscMpanlSigInCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 17, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigInCalls.setStatus('mandatory')
mscMpanlSigInCallsRefused = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 17, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigInCallsRefused.setStatus('mandatory')
mscMpanlSigOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigOutCalls.setStatus('mandatory')
mscMpanlSigOutCallsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigOutCallsFailed.setStatus('mandatory')
mscMpanlSigProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigProtocolErrors.setStatus('mandatory')
mscMpanlSigQualityOfServiceNotAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 17, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigQualityOfServiceNotAvailable.setStatus('mandatory')
mscMpanlSigSetupTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 17, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigSetupTimeout.setStatus('mandatory')
mscMpanlSigLastCauseInStatusMsgReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 17, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigLastCauseInStatusMsgReceived.setStatus('mandatory')
mscMpanlSigLastStateInStatusMsgReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 17, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63))).clone(namedValues=NamedValues(("null", 0), ("callInitiated", 1), ("n2", 2), ("outgoingCallProceeding", 3), ("n4", 4), ("n5", 5), ("callPresent", 6), ("n7", 7), ("n8", 8), ("incomingCallProceeding", 9), ("active", 10), ("disconnectRequest", 11), ("disconnectIndication", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("n16", 16), ("n17", 17), ("n18", 18), ("releaseRequest", 19), ("notApplicable", 20), ("n21", 21), ("n22", 22), ("n23", 23), ("n24", 24), ("n25", 25), ("n26", 26), ("n27", 27), ("n28", 28), ("n29", 29), ("n30", 30), ("n31", 31), ("n32", 32), ("n33", 33), ("n34", 34), ("n35", 35), ("n36", 36), ("n37", 37), ("n38", 38), ("n39", 39), ("n40", 40), ("n41", 41), ("n42", 42), ("n43", 43), ("n44", 44), ("n45", 45), ("n46", 46), ("n47", 47), ("n48", 48), ("n49", 49), ("n50", 50), ("n51", 51), ("n52", 52), ("n53", 53), ("n54", 54), ("n55", 55), ("n56", 56), ("n57", 57), ("n58", 58), ("n59", 59), ("n60", 60), ("n61", 61), ("n62", 62), ("n63", 63)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigLastStateInStatusMsgReceived.setStatus('mandatory')
mscMpanlSigLastDlciReceivedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 17, 1, 13), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(17, 1007), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigLastDlciReceivedStatus.setStatus('mandatory')
mscMpanlSigLastQ933StateReceivedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 17, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 6, 9, 10, 11, 12, 19, 20))).clone(namedValues=NamedValues(("null", 0), ("callInitiated", 1), ("outgoingCallProceeding", 3), ("callPresent", 6), ("incomingCallProceeding", 9), ("active", 10), ("disconnectRequest", 11), ("disconnectIndication", 12), ("releaseRequest", 19), ("notApplicable", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigLastQ933StateReceivedStatus.setStatus('mandatory')
mscMpanlSigLastTimeMsgBlockCongested = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 17, 1, 15), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigLastTimeMsgBlockCongested.setStatus('mandatory')
mscMpanlSigLastDlciWithMsgBlockCongestion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 17, 1, 16), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1007), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigLastDlciWithMsgBlockCongestion.setStatus('mandatory')
mscMpanlSigLapfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 18), )
if mibBuilder.loadTexts: mscMpanlSigLapfStatusTable.setStatus('mandatory')
mscMpanlSigLapfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlSigIndex"))
if mibBuilder.loadTexts: mscMpanlSigLapfStatusEntry.setStatus('mandatory')
mscMpanlSigCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 7))).clone(namedValues=NamedValues(("disconnected", 1), ("linkSetup", 2), ("disconnectRequest", 4), ("informationTransfer", 5), ("waitingAck", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigCurrentState.setStatus('mandatory')
mscMpanlSigLastStateChangeReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 5, 6, 7, 8, 9, 10, 12, 13))).clone(namedValues=NamedValues(("notStarted", 1), ("abmeEntered", 3), ("abmeReset", 5), ("dmReceived", 6), ("dmSent", 7), ("discReceived", 8), ("discSent", 9), ("frmrReceived", 10), ("n200RetranTimeOut", 12), ("other", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigLastStateChangeReason.setStatus('mandatory')
mscMpanlSigFrmrReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 18, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigFrmrReceive.setStatus('mandatory')
mscMpanlSigCurrentQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 18, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigCurrentQueueSize.setStatus('mandatory')
mscMpanlSigLapfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 19), )
if mibBuilder.loadTexts: mscMpanlSigLapfStatsTable.setStatus('mandatory')
mscMpanlSigLapfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 19, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlSigIndex"))
if mibBuilder.loadTexts: mscMpanlSigLapfStatsEntry.setStatus('mandatory')
mscMpanlSigStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigStateChange.setStatus('mandatory')
mscMpanlSigRemoteBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigRemoteBusy.setStatus('mandatory')
mscMpanlSigReceiveRejectFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigReceiveRejectFrame.setStatus('mandatory')
mscMpanlSigAckTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigAckTimeout.setStatus('mandatory')
mscMpanlSigIFramesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigIFramesTransmitted.setStatus('mandatory')
mscMpanlSigIFramesTxDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 19, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigIFramesTxDiscarded.setStatus('mandatory')
mscMpanlSigIFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 19, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigIFramesReceived.setStatus('mandatory')
mscMpanlSigIFramesRcvdDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 6, 19, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigIFramesRcvdDiscarded.setStatus('mandatory')
mscMpanlSigMpanl = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7))
mscMpanlSigMpanlRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 1), )
if mibBuilder.loadTexts: mscMpanlSigMpanlRowStatusTable.setStatus('mandatory')
mscMpanlSigMpanlRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlSigMpanlIndex"))
if mibBuilder.loadTexts: mscMpanlSigMpanlRowStatusEntry.setStatus('mandatory')
mscMpanlSigMpanlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlRowStatus.setStatus('mandatory')
mscMpanlSigMpanlComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlComponentName.setStatus('mandatory')
mscMpanlSigMpanlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlStorageType.setStatus('mandatory')
mscMpanlSigMpanlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMpanlSigMpanlIndex.setStatus('mandatory')
mscMpanlSigMpanlStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 10), )
if mibBuilder.loadTexts: mscMpanlSigMpanlStateTable.setStatus('mandatory')
mscMpanlSigMpanlStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlSigMpanlIndex"))
if mibBuilder.loadTexts: mscMpanlSigMpanlStateEntry.setStatus('mandatory')
mscMpanlSigMpanlAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlAdminState.setStatus('mandatory')
mscMpanlSigMpanlOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlOperationalState.setStatus('mandatory')
mscMpanlSigMpanlUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlUsageState.setStatus('mandatory')
mscMpanlSigMpanlProfileTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 11), )
if mibBuilder.loadTexts: mscMpanlSigMpanlProfileTable.setStatus('mandatory')
mscMpanlSigMpanlProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlSigMpanlIndex"))
if mibBuilder.loadTexts: mscMpanlSigMpanlProfileEntry.setStatus('mandatory')
mscMpanlSigMpanlDteCustomerId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlDteCustomerId.setStatus('mandatory')
mscMpanlSigMpanlDteNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlDteNodeId.setStatus('mandatory')
mscMpanlSigMpanlDteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 11, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlDteComponentName.setStatus('mandatory')
mscMpanlSigMpanlHighestDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(17, 1007), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlHighestDlci.setStatus('mandatory')
mscMpanlSigMpanlStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 12), )
if mibBuilder.loadTexts: mscMpanlSigMpanlStatsTable.setStatus('mandatory')
mscMpanlSigMpanlStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlSigMpanlIndex"))
if mibBuilder.loadTexts: mscMpanlSigMpanlStatsEntry.setStatus('mandatory')
mscMpanlSigMpanlProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlProtocolErrors.setStatus('mandatory')
mscMpanlSigMpanlSap0CommandsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlSap0CommandsRx.setStatus('mandatory')
mscMpanlSigMpanlSap0CommandsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlSap0CommandsTx.setStatus('mandatory')
mscMpanlSigMpanlSapXCommandsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlSapXCommandsRx.setStatus('mandatory')
mscMpanlSigMpanlSapXCommandsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlSapXCommandsTx.setStatus('mandatory')
mscMpanlSigMpanlLapfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 13), )
if mibBuilder.loadTexts: mscMpanlSigMpanlLapfStatusTable.setStatus('mandatory')
mscMpanlSigMpanlLapfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlSigMpanlIndex"))
if mibBuilder.loadTexts: mscMpanlSigMpanlLapfStatusEntry.setStatus('mandatory')
mscMpanlSigMpanlCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 7))).clone(namedValues=NamedValues(("disconnected", 1), ("linkSetup", 2), ("disconnectRequest", 4), ("informationTransfer", 5), ("waitingAck", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlCurrentState.setStatus('mandatory')
mscMpanlSigMpanlLastStateChangeReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 5, 6, 7, 8, 9, 10, 12, 13))).clone(namedValues=NamedValues(("notStarted", 1), ("abmeEntered", 3), ("abmeReset", 5), ("dmReceived", 6), ("dmSent", 7), ("discReceived", 8), ("discSent", 9), ("frmrReceived", 10), ("n200RetranTimeOut", 12), ("other", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlLastStateChangeReason.setStatus('mandatory')
mscMpanlSigMpanlFrmrReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 13, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlFrmrReceive.setStatus('mandatory')
mscMpanlSigMpanlCurrentQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlCurrentQueueSize.setStatus('mandatory')
mscMpanlSigMpanlLapfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 14), )
if mibBuilder.loadTexts: mscMpanlSigMpanlLapfStatsTable.setStatus('mandatory')
mscMpanlSigMpanlLapfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlSigMpanlIndex"))
if mibBuilder.loadTexts: mscMpanlSigMpanlLapfStatsEntry.setStatus('mandatory')
mscMpanlSigMpanlStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 14, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlStateChange.setStatus('mandatory')
mscMpanlSigMpanlRemoteBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlRemoteBusy.setStatus('mandatory')
mscMpanlSigMpanlReceiveRejectFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 14, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlReceiveRejectFrame.setStatus('mandatory')
mscMpanlSigMpanlAckTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlAckTimeout.setStatus('mandatory')
mscMpanlSigMpanlIFramesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 14, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlIFramesTransmitted.setStatus('mandatory')
mscMpanlSigMpanlIFramesTxDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 14, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlIFramesTxDiscarded.setStatus('mandatory')
mscMpanlSigMpanlIFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 14, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlIFramesReceived.setStatus('mandatory')
mscMpanlSigMpanlIFramesRcvdDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 7, 14, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlSigMpanlIFramesRcvdDiscarded.setStatus('mandatory')
mscMpanlLmi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 8))
mscMpanlLmiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 8, 1), )
if mibBuilder.loadTexts: mscMpanlLmiRowStatusTable.setStatus('mandatory')
mscMpanlLmiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlLmiIndex"))
if mibBuilder.loadTexts: mscMpanlLmiRowStatusEntry.setStatus('mandatory')
mscMpanlLmiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlLmiRowStatus.setStatus('mandatory')
mscMpanlLmiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlLmiComponentName.setStatus('mandatory')
mscMpanlLmiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlLmiStorageType.setStatus('mandatory')
mscMpanlLmiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMpanlLmiIndex.setStatus('mandatory')
mscMpanlLmiParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 8, 10), )
if mibBuilder.loadTexts: mscMpanlLmiParmsTable.setStatus('mandatory')
mscMpanlLmiParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlLmiIndex"))
if mibBuilder.loadTexts: mscMpanlLmiParmsEntry.setStatus('mandatory')
mscMpanlLmiProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 8, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("vendorForum", 1), ("ansi", 2), ("ccitt", 3))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlLmiProcedures.setStatus('mandatory')
mscMpanlLmiStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 8, 12), )
if mibBuilder.loadTexts: mscMpanlLmiStateTable.setStatus('mandatory')
mscMpanlLmiStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 8, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlLmiIndex"))
if mibBuilder.loadTexts: mscMpanlLmiStateEntry.setStatus('mandatory')
mscMpanlLmiAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 8, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlLmiAdminState.setStatus('mandatory')
mscMpanlLmiOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 8, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlLmiOperationalState.setStatus('mandatory')
mscMpanlLmiUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 8, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlLmiUsageState.setStatus('mandatory')
mscMpanlVoFr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 18))
mscMpanlVoFrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 18, 1), )
if mibBuilder.loadTexts: mscMpanlVoFrRowStatusTable.setStatus('mandatory')
mscMpanlVoFrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 18, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlVoFrIndex"))
if mibBuilder.loadTexts: mscMpanlVoFrRowStatusEntry.setStatus('mandatory')
mscMpanlVoFrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 18, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlVoFrRowStatus.setStatus('mandatory')
mscMpanlVoFrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 18, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlVoFrComponentName.setStatus('mandatory')
mscMpanlVoFrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 18, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlVoFrStorageType.setStatus('mandatory')
mscMpanlVoFrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 18, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMpanlVoFrIndex.setStatus('mandatory')
mscMpanlVoFrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 18, 10), )
if mibBuilder.loadTexts: mscMpanlVoFrOperTable.setStatus('mandatory')
mscMpanlVoFrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 18, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlVoFrIndex"))
if mibBuilder.loadTexts: mscMpanlVoFrOperEntry.setStatus('mandatory')
mscMpanlVoFrMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 18, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlVoFrMaximumFrameSize.setStatus('mandatory')
mscMpanlVoFrTransmitInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 18, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlVoFrTransmitInformationRate.setStatus('mandatory')
mscMpanlVoFrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 18, 11), )
if mibBuilder.loadTexts: mscMpanlVoFrStatsTable.setStatus('mandatory')
mscMpanlVoFrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 18, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlVoFrIndex"))
if mibBuilder.loadTexts: mscMpanlVoFrStatsEntry.setStatus('mandatory')
mscMpanlVoFrFragmentedHighestPriorityFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 18, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlVoFrFragmentedHighestPriorityFrames.setStatus('mandatory')
mscMpanlVoFrLostFragmentsFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 18, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlVoFrLostFragmentsFromIf.setStatus('mandatory')
mscMpanlVoFrProtocolViolationsFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 18, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlVoFrProtocolViolationsFromIf.setStatus('mandatory')
mscMpanlFrMuxSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19))
mscMpanlFrMuxSetupRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 1), )
if mibBuilder.loadTexts: mscMpanlFrMuxSetupRowStatusTable.setStatus('mandatory')
mscMpanlFrMuxSetupRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlFrMuxSetupIndex"))
if mibBuilder.loadTexts: mscMpanlFrMuxSetupRowStatusEntry.setStatus('mandatory')
mscMpanlFrMuxSetupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlFrMuxSetupRowStatus.setStatus('mandatory')
mscMpanlFrMuxSetupComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFrMuxSetupComponentName.setStatus('mandatory')
mscMpanlFrMuxSetupStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFrMuxSetupStorageType.setStatus('mandatory')
mscMpanlFrMuxSetupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMpanlFrMuxSetupIndex.setStatus('mandatory')
mscMpanlFrMuxSetupOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 11), )
if mibBuilder.loadTexts: mscMpanlFrMuxSetupOpTable.setStatus('mandatory')
mscMpanlFrMuxSetupOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlFrMuxSetupIndex"))
if mibBuilder.loadTexts: mscMpanlFrMuxSetupOpEntry.setStatus('mandatory')
mscMpanlFrMuxSetupCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16000, 4294967295)).clone(16000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFrMuxSetupCommittedInformationRate.setStatus('mandatory')
mscMpanlFrMuxSetupDlciCompName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 11, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFrMuxSetupDlciCompName.setStatus('mandatory')
mscMpanlFrMuxSetupPvcSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 2))
mscMpanlFrMuxSetupPvcSetupRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 2, 1), )
if mibBuilder.loadTexts: mscMpanlFrMuxSetupPvcSetupRowStatusTable.setStatus('mandatory')
mscMpanlFrMuxSetupPvcSetupRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlFrMuxSetupIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlFrMuxSetupPvcSetupIndex"))
if mibBuilder.loadTexts: mscMpanlFrMuxSetupPvcSetupRowStatusEntry.setStatus('mandatory')
mscMpanlFrMuxSetupPvcSetupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFrMuxSetupPvcSetupRowStatus.setStatus('mandatory')
mscMpanlFrMuxSetupPvcSetupComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFrMuxSetupPvcSetupComponentName.setStatus('mandatory')
mscMpanlFrMuxSetupPvcSetupStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlFrMuxSetupPvcSetupStorageType.setStatus('mandatory')
mscMpanlFrMuxSetupPvcSetupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMpanlFrMuxSetupPvcSetupIndex.setStatus('mandatory')
mscMpanlFrMuxSetupPvcSetupProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 2, 10), )
if mibBuilder.loadTexts: mscMpanlFrMuxSetupPvcSetupProvTable.setStatus('mandatory')
mscMpanlFrMuxSetupPvcSetupProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlFrMuxSetupIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlFrMuxSetupPvcSetupIndex"))
if mibBuilder.loadTexts: mscMpanlFrMuxSetupPvcSetupProvEntry.setStatus('mandatory')
mscMpanlFrMuxSetupPvcSetupDlciName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 19, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlFrMuxSetupPvcSetupDlciName.setStatus('mandatory')
mscMpanlIsdn = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22))
mscMpanlIsdnRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22, 1), )
if mibBuilder.loadTexts: mscMpanlIsdnRowStatusTable.setStatus('mandatory')
mscMpanlIsdnRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIsdnIndex"))
if mibBuilder.loadTexts: mscMpanlIsdnRowStatusEntry.setStatus('mandatory')
mscMpanlIsdnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlIsdnRowStatus.setStatus('mandatory')
mscMpanlIsdnComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlIsdnComponentName.setStatus('mandatory')
mscMpanlIsdnStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlIsdnStorageType.setStatus('mandatory')
mscMpanlIsdnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMpanlIsdnIndex.setStatus('mandatory')
mscMpanlIsdnProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22, 11), )
if mibBuilder.loadTexts: mscMpanlIsdnProvTable.setStatus('mandatory')
mscMpanlIsdnProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIsdnIndex"))
if mibBuilder.loadTexts: mscMpanlIsdnProvEntry.setStatus('mandatory')
mscMpanlIsdnT320 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlIsdnT320.setStatus('mandatory')
mscMpanlIsdnAddressSignalling = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("isdnDna", 0), ("normalBehavior", 1))).clone('normalBehavior')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMpanlIsdnAddressSignalling.setStatus('mandatory')
mscMpanlIsdnOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22, 12), )
if mibBuilder.loadTexts: mscMpanlIsdnOperTable.setStatus('mandatory')
mscMpanlIsdnOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIndex"), (0, "Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", "mscMpanlIsdnIndex"))
if mibBuilder.loadTexts: mscMpanlIsdnOperEntry.setStatus('mandatory')
mscMpanlIsdnDataSigChan = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlIsdnDataSigChan.setStatus('mandatory')
mscMpanlIsdnBChannelState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("busy", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlIsdnBChannelState.setStatus('mandatory')
mscMpanlIsdnLastUsedCgpn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22, 12, 1, 3), DigitString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlIsdnLastUsedCgpn.setStatus('mandatory')
mscMpanlIsdnBChanIntState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("isdnInit", 0), ("waitAccEnable", 1), ("waitLnsResponse", 2), ("waitFramerData", 3), ("enabling", 4), ("waitAccRegAck", 5), ("up", 6), ("down", 7), ("releasing", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlIsdnBChanIntState.setStatus('mandatory')
mscMpanlIsdnActiveVirtualCircuitsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 123, 22, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMpanlIsdnActiveVirtualCircuitsCount.setStatus('mandatory')
mpaNetworkLinkGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 119, 1))
mpaNetworkLinkGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 119, 1, 1))
mpaNetworkLinkGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 119, 1, 1, 3))
mpaNetworkLinkGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 119, 1, 1, 3, 2))
mpaNetworkLinkCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 119, 3))
mpaNetworkLinkCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 119, 3, 1))
mpaNetworkLinkCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 119, 3, 1, 3))
mpaNetworkLinkCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 119, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", mpaNetworkLinkGroupCA=mpaNetworkLinkGroupCA, mscMpanlDlciABitReasonToIf=mscMpanlDlciABitReasonToIf, mscMpanlFramerLargeFrmErrors=mscMpanlFramerLargeFrmErrors, mscMpanlDlciAlarmStatus=mscMpanlDlciAlarmStatus, mscMpanlFramerNonOctetErrors=mscMpanlFramerNonOctetErrors, mscMpanlDlciLb=mscMpanlDlciLb, mscMpanlDlciLbRemoteBecnFrm=mscMpanlDlciLbRemoteBecnFrm, mscMpanlSigCurrentQueueSize=mscMpanlSigCurrentQueueSize, mscMpanlDlciVcDmepTable=mscMpanlDlciVcDmepTable, mscMpanlFramerRowStatus=mscMpanlFramerRowStatus, mscMpanlDlciVcState=mscMpanlDlciVcState, mscMpanlDlciJvcIndex=mscMpanlDlciJvcIndex, mscMpanlFramerLinkTable=mscMpanlFramerLinkTable, mscMpanlDlciLbLocalFecnFrm=mscMpanlDlciLbLocalFecnFrm, mscMpanlDlciJvcCurrentState=mscMpanlDlciJvcCurrentState, mscMpanlDlciVcFastSelectCall=mscMpanlDlciVcFastSelectCall, mscMpanlPrefixDna=mscMpanlPrefixDna, mscMpanlDlciFrmFromIf=mscMpanlDlciFrmFromIf, mscMpanlDlciLbRemoteDeFrm=mscMpanlDlciLbRemoteDeFrm, mscMpanlOperStatusTable=mscMpanlOperStatusTable, mscMpanlDlciVcSendSequenceNumber=mscMpanlDlciVcSendSequenceNumber, mscMpanlDlciLCoRoundTripDelay=mscMpanlDlciLCoRoundTripDelay, mscMpanlDlciLCoEmissionPriority=mscMpanlDlciLCoEmissionPriority, mscMpanlSigLastCauseInStatusMsgReceived=mscMpanlSigLastCauseInStatusMsgReceived, mscMpanlSigMpanlSapXCommandsRx=mscMpanlSigMpanlSapXCommandsRx, mscMpanlFramerAdminState=mscMpanlFramerAdminState, mscMpanlSigAdminState=mscMpanlSigAdminState, mscMpanlDlciDiscardedBytes=mscMpanlDlciDiscardedBytes, mscMpanlLmi=mscMpanlLmi, mscMpanlFramerUtilTable=mscMpanlFramerUtilTable, mpaNetworkLinkCapabilitiesCA02A=mpaNetworkLinkCapabilitiesCA02A, mscMpanlAvailabilityStatus=mscMpanlAvailabilityStatus, mscMpanlIsdnStorageType=mscMpanlIsdnStorageType, mscMpanlOctetToIfByQueueIndex=mscMpanlOctetToIfByQueueIndex, mscMpanlDlciIntEntry=mscMpanlDlciIntEntry, mscMpanlIsdnRowStatusTable=mscMpanlIsdnRowStatusTable, mscMpanlRowStatusEntry=mscMpanlRowStatusEntry, mscMpanlDlciJvcCallingAddress=mscMpanlDlciJvcCallingAddress, mscMpanlDlciVcIndex=mscMpanlDlciVcIndex, mscMpanlVoFrIndex=mscMpanlVoFrIndex, mscMpanlFramerIndex=mscMpanlFramerIndex, mscMpanlDlciVcStorageType=mscMpanlDlciVcStorageType, mscMpanlSigWindowSize=mscMpanlSigWindowSize, mscMpanlDlciLCoReasonForNoRoute=mscMpanlDlciLCoReasonForNoRoute, mscMpanlFramerAborts=mscMpanlFramerAborts, mscMpanlDlciVcPktRetryTimeouts=mscMpanlDlciVcPktRetryTimeouts, mscMpanlVoFrStatsTable=mscMpanlVoFrStatsTable, mscMpanlDlciDeBytesToIf=mscMpanlDlciDeBytesToIf, mscMpanlDlciLCoPathFailureAction=mscMpanlDlciLCoPathFailureAction, mscMpanlDlciJvcOperEntry=mscMpanlDlciJvcOperEntry, mscMpanlAlarmStatus=mscMpanlAlarmStatus, mscMpanlVoFrProtocolViolationsFromIf=mscMpanlVoFrProtocolViolationsFromIf, mscMpanlFramerNormPrioLinkUtilFromIf=mscMpanlFramerNormPrioLinkUtilFromIf, mscMpanlVoFrOperTable=mscMpanlVoFrOperTable, mscMpanlSigSysParmsEntry=mscMpanlSigSysParmsEntry, mscMpanlSigMpanlAckTimeout=mscMpanlSigMpanlAckTimeout, mscMpanlIsdnBChanIntState=mscMpanlIsdnBChanIntState, mscMpanlDlciIntTable=mscMpanlDlciIntTable, mscMpanlDlciABitStatusToIf=mscMpanlDlciABitStatusToIf, mscMpanlDlciStatsTable=mscMpanlDlciStatsTable, mscMpanlDlciLbIndex=mscMpanlDlciLbIndex, mscMpanlSigFrmrReceive=mscMpanlSigFrmrReceive, mscMpanl=mscMpanl, mscMpanlDlciJvcRowStatus=mscMpanlDlciJvcRowStatus, mscMpanlDlciTotalIngressSegFrm=mscMpanlDlciTotalIngressSegFrm, mscMpanlSigLapfStatsTable=mscMpanlSigLapfStatsTable, mscMpanlCustomerIdentifier=mscMpanlCustomerIdentifier, mscMpanlDlciExcessFrmFromIf=mscMpanlDlciExcessFrmFromIf, mscMpanlVoFrStatsEntry=mscMpanlVoFrStatsEntry, mscMpanlSigMpanlLapfStatusTable=mscMpanlSigMpanlLapfStatusTable, mscMpanlDlciErrorLongBytesFromIf=mscMpanlDlciErrorLongBytesFromIf, mscMpanlSigMpanlUsageState=mscMpanlSigMpanlUsageState, mscMpanlDnaEgressAccounting=mscMpanlDnaEgressAccounting, mscMpanlSigMpanlLapfStatusEntry=mscMpanlSigMpanlLapfStatusEntry, mscMpanlDlciStartTime=mscMpanlDlciStartTime, mscMpanlDlciJvcRowStatusEntry=mscMpanlDlciJvcRowStatusEntry, mscMpanlDlciComponentName=mscMpanlDlciComponentName, mscMpanlDlciStateTable=mscMpanlDlciStateTable, mscMpanlPrefixDnaRowStatusEntry=mscMpanlPrefixDnaRowStatusEntry, mscMpanlSigMpanlProtocolErrors=mscMpanlSigMpanlProtocolErrors, mscMpanlSigMpanlReceiveRejectFrame=mscMpanlSigMpanlReceiveRejectFrame, mscMpanlDlciLCoElapsedTimeTillNow=mscMpanlDlciLCoElapsedTimeTillNow, mscMpanlSigMpanlComponentName=mscMpanlSigMpanlComponentName, mscMpanlDnaComponentName=mscMpanlDnaComponentName, mscMpanlDlciLbStorageType=mscMpanlDlciLbStorageType, mscMpanlSigSetupTimeout=mscMpanlSigSetupTimeout, mpaNetworkLinkCapabilitiesCA=mpaNetworkLinkCapabilitiesCA, mscMpanlSigMpanlProfileEntry=mscMpanlSigMpanlProfileEntry, mscMpanlDlciVcCombErrorsFromSubnet=mscMpanlDlciVcCombErrorsFromSubnet, mscMpanlSnmpOperStatus=mscMpanlSnmpOperStatus, mscMpanlSigOutCalls=mscMpanlSigOutCalls, mscMpanlDlciLCoPktsFromNetwork=mscMpanlDlciLCoPktsFromNetwork, mscMpanlIsdnComponentName=mscMpanlIsdnComponentName, mscMpanlUnknownStatus=mscMpanlUnknownStatus, mscMpanlDlciVcCalledNpi=mscMpanlDlciVcCalledNpi, mscMpanlIsdn=mscMpanlIsdn, mscMpanlIsdnOperEntry=mscMpanlIsdnOperEntry, mscMpanlIsdnIndex=mscMpanlIsdnIndex, mscMpanlDlciLCoCallDataEntry=mscMpanlDlciLCoCallDataEntry, mscMpanlDlciLCoIndex=mscMpanlDlciLCoIndex, mscMpanlDlciLbRowStatusTable=mscMpanlDlciLbRowStatusTable, mscMpanlDlciDiscardedSegFrm=mscMpanlDlciDiscardedSegFrm, mscMpanlDlciJvcCalledLcn=mscMpanlDlciJvcCalledLcn, mscMpanlControlStatus=mscMpanlControlStatus, mscMpanlFrMuxSetupOpEntry=mscMpanlFrMuxSetupOpEntry, mscMpanlDlciLCoComponentName=mscMpanlDlciLCoComponentName, mscMpanlFrMuxSetupPvcSetupIndex=mscMpanlFrMuxSetupPvcSetupIndex, mscMpanlFrMuxSetupOpTable=mscMpanlFrMuxSetupOpTable, mscMpanlDlciDiscDeCongestedFromIfBytes=mscMpanlDlciDiscDeCongestedFromIfBytes, mscMpanlDlciJvcStatEntry=mscMpanlDlciJvcStatEntry, mscMpanlLmiStateEntry=mscMpanlLmiStateEntry, mscMpanlSigMpanlIndex=mscMpanlSigMpanlIndex, mscMpanlIsdnProvEntry=mscMpanlIsdnProvEntry, mscMpanlDnaDefaultTransferPriority=mscMpanlDnaDefaultTransferPriority, mscMpanlDlciEmissionPriorityToIf=mscMpanlDlciEmissionPriorityToIf, mscMpanlDlciVcPeakRetryQueueSize=mscMpanlDlciVcPeakRetryQueueSize, mscMpanlFramerUtilEntry=mscMpanlFramerUtilEntry, mscMpanlDlciVcOutOfRangeFrmFromSubnet=mscMpanlDlciVcOutOfRangeFrmFromSubnet, mscMpanlSigLastTimeMsgBlockCongested=mscMpanlSigLastTimeMsgBlockCongested, mscMpanlDlciRowStatusEntry=mscMpanlDlciRowStatusEntry, mscMpanlSigStateTable=mscMpanlSigStateTable, mscMpanlDlciLCoHoldingPriority=mscMpanlDlciLCoHoldingPriority, mscMpanlPrefixDnaStorageType=mscMpanlPrefixDnaStorageType, mscMpanlDlciRowStatus=mscMpanlDlciRowStatus, mscMpanlLmiParmsEntry=mscMpanlLmiParmsEntry, mscMpanlDlciLCoRequiredSecurity=mscMpanlDlciLCoRequiredSecurity, mscMpanlVoFrRowStatusTable=mscMpanlVoFrRowStatusTable, mscMpanlSigMpanlDteNodeId=mscMpanlSigMpanlDteNodeId, mscMpanlDlciMaximumFrameSize=mscMpanlDlciMaximumFrameSize, mscMpanlDlciStorageType=mscMpanlDlciStorageType, mscMpanlDlciLbRowStatusEntry=mscMpanlDlciLbRowStatusEntry, mscMpanlFramerFrmModeErrors=mscMpanlFramerFrmModeErrors, mscMpanlDlciDeFrmToIf=mscMpanlDlciDeFrmToIf, mscMpanlSigMpanlIFramesReceived=mscMpanlSigMpanlIFramesReceived, mscMpanlVoFrTransmitInformationRate=mscMpanlVoFrTransmitInformationRate, mscMpanlDlciJvcStorageType=mscMpanlDlciJvcStorageType, mscMpanlDlciFrmToIf=mscMpanlDlciFrmToIf, mscMpanlFramerStorageType=mscMpanlFramerStorageType, mscMpanlIsdnRowStatus=mscMpanlIsdnRowStatus, mscMpanlProvEntry=mscMpanlProvEntry, mscMpanlDlciVcRowStatusTable=mscMpanlDlciVcRowStatusTable, mscMpanlVoFrFragmentedHighestPriorityFrames=mscMpanlVoFrFragmentedHighestPriorityFrames, mscMpanlDnaServiceExchange=mscMpanlDnaServiceExchange, mscMpanlDna=mscMpanlDna, mscMpanlSigMpanlOperationalState=mscMpanlSigMpanlOperationalState, mscMpanlRowStatusTable=mscMpanlRowStatusTable, mscMpanlLmiOperationalState=mscMpanlLmiOperationalState, mscMpanlSigMpanlLapfStatsEntry=mscMpanlSigMpanlLapfStatsEntry, mscMpanlDlciVcCallingNpi=mscMpanlDlciVcCallingNpi, mscMpanlLmiStorageType=mscMpanlLmiStorageType, mpaNetworkLinkGroup=mpaNetworkLinkGroup, mscMpanlSigRowStatus=mscMpanlSigRowStatus, mscMpanlSigMpanlIFramesTxDiscarded=mscMpanlSigMpanlIFramesTxDiscarded, mscMpanlDlciProceduralStatus=mscMpanlDlciProceduralStatus, mscMpanlDlciTotalIngressBytes=mscMpanlDlciTotalIngressBytes, mscMpanlSigIFramesTransmitted=mscMpanlSigIFramesTransmitted, mscMpanlSigMpanlRowStatusEntry=mscMpanlSigMpanlRowStatusEntry, mscMpanlSigRowStatusEntry=mscMpanlSigRowStatusEntry, mscMpanlFrMuxSetupRowStatusEntry=mscMpanlFrMuxSetupRowStatusEntry, mscMpanlSigMpanlHighestDlci=mscMpanlSigMpanlHighestDlci, mscMpanlDlciVcAccountingEnd=mscMpanlDlciVcAccountingEnd, mscMpanlDlciLoopbackState=mscMpanlDlciLoopbackState, mscMpanlDlciLCoCostMetric=mscMpanlDlciLCoCostMetric, mscMpanlFramerLrcErrors=mscMpanlFramerLrcErrors, mscMpanlDlciJvcPreviousState=mscMpanlDlciJvcPreviousState, mscMpanlIsdnAddressSignalling=mscMpanlIsdnAddressSignalling, mscMpanlFramerFrmToIf64=mscMpanlFramerFrmToIf64, mscMpanlSigMpanlLastStateChangeReason=mscMpanlSigMpanlLastStateChangeReason, mscMpanlDlciCommittedBurstSize=mscMpanlDlciCommittedBurstSize, mscMpanlSigAckTimeout=mscMpanlSigAckTimeout, mscMpanlSigDefaultAccounting=mscMpanlSigDefaultAccounting, mscMpanlDlciJvc=mscMpanlDlciJvc, mscMpanlDlciLCoRequiredRxBandwidth=mscMpanlDlciLCoRequiredRxBandwidth, mscMpanlDlciLCoRetryCount=mscMpanlDlciLCoRetryCount, mscMpanlDlciAdminState=mscMpanlDlciAdminState, mscMpanlFrMuxSetupStorageType=mscMpanlFrMuxSetupStorageType, mscMpanlIsdnProvTable=mscMpanlIsdnProvTable, mscMpanlSigMpanlStateChange=mscMpanlSigMpanlStateChange, mscMpanlSigMpanlDteCustomerId=mscMpanlSigMpanlDteCustomerId, mscMpanlPrefixDnaRowStatusTable=mscMpanlPrefixDnaRowStatusTable, mscMpanlDlciVcDmepValue=mscMpanlDlciVcDmepValue, mscMpanlDlciVcFrmCongestedToSubnet=mscMpanlDlciVcFrmCongestedToSubnet, mscMpanlDlciJvcCalledNpi=mscMpanlDlciJvcCalledNpi, mscMpanlFrMuxSetupPvcSetupProvEntry=mscMpanlFrMuxSetupPvcSetupProvEntry, mscMpanlVoFrStorageType=mscMpanlVoFrStorageType, mscMpanlFramerComponentName=mscMpanlFramerComponentName, mscMpanlDlciDiscCongestedToIf=mscMpanlDlciDiscCongestedToIf, mscMpanlFramerProvEntry=mscMpanlFramerProvEntry, mpaNetworkLinkCapabilities=mpaNetworkLinkCapabilities, mscMpanlDlciLCoBytesFromNetwork=mscMpanlDlciLCoBytesFromNetwork, mscMpanlDlciVcType=mscMpanlDlciVcType, mscMpanlDnaRowStatusTable=mscMpanlDnaRowStatusTable, mscMpanlIsdnActiveVirtualCircuitsCount=mscMpanlIsdnActiveVirtualCircuitsCount, mscMpanlFramerOperationalState=mscMpanlFramerOperationalState, mscMpanlFramerFrmFromIf64=mscMpanlFramerFrmFromIf64, mscMpanlSigMpanlStateEntry=mscMpanlSigMpanlStateEntry, mscMpanlDlciLCoDiscardPriority=mscMpanlDlciLCoDiscardPriority, mscMpanlDlciBecnFrmToIf=mscMpanlDlciBecnFrmToIf, mscMpanlDlciEirIngressBytes=mscMpanlDlciEirIngressBytes, mscMpanlFramerUnderruns=mscMpanlFramerUnderruns, mscMpanlFramerStatsEntry=mscMpanlFramerStatsEntry, mscMpanlCidDataEntry=mscMpanlCidDataEntry, mscMpanlDlciTransferPriFromNwk=mscMpanlDlciTransferPriFromNwk, mscMpanlDlciVcCannotForwardToSubnet=mscMpanlDlciVcCannotForwardToSubnet, mscMpanlDlciStateEntry=mscMpanlDlciStateEntry, mscMpanlDlciLCoRequiredTxBandwidth=mscMpanlDlciLCoRequiredTxBandwidth, mscMpanlDlciTransferPriorityToNetwork=mscMpanlDlciTransferPriorityToNetwork, mscMpanlSigQualityOfServiceNotAvailable=mscMpanlSigQualityOfServiceNotAvailable, mscMpanlVoFrMaximumFrameSize=mscMpanlVoFrMaximumFrameSize, mscMpanlDnaAccountClass=mscMpanlDnaAccountClass, mscMpanlDlciStatsEntry=mscMpanlDlciStatsEntry, mscMpanlSigLapfStatsEntry=mscMpanlSigLapfStatsEntry, mscMpanlDlciAbitTable=mscMpanlDlciAbitTable, mscMpanlDlciVcDiagnosticCode=mscMpanlDlciVcDiagnosticCode, mscMpanlDlciDiscCongestedFromIf=mscMpanlDlciDiscCongestedFromIf, mscMpanlDlciVcIntdEntry=mscMpanlDlciVcIntdEntry, mscMpanlFramerStateTable=mscMpanlFramerStateTable, mscMpanlDlciVcPeakOoSeqFrmForwarded=mscMpanlDlciVcPeakOoSeqFrmForwarded, mscMpanlDnaRowStatus=mscMpanlDnaRowStatus, mscMpanlSigStateEntry=mscMpanlSigStateEntry, mscMpanlIsdnDataSigChan=mscMpanlIsdnDataSigChan, mscMpanlSigOutCallsFailed=mscMpanlSigOutCallsFailed, mscMpanlDlciJvcOperTable=mscMpanlDlciJvcOperTable, mscMpanlDlciEirEgressBytes=mscMpanlDlciEirEgressBytes, mscMpanlSigMpanlFrmrReceive=mscMpanlSigMpanlFrmrReceive, mscMpanlOperationalState=mscMpanlOperationalState, mscMpanlDlciVcRcosFromNetwork=mscMpanlDlciVcRcosFromNetwork, mscMpanlDnaAccountCollection=mscMpanlDnaAccountCollection, mscMpanlFrmFromIf=mscMpanlFrmFromIf, mscMpanlDlciEirIngressSegFrm=mscMpanlDlciEirIngressSegFrm, mscMpanlDlciJvcCalledAddress=mscMpanlDlciJvcCalledAddress, mscMpanlFrMuxSetupPvcSetupStorageType=mscMpanlFrMuxSetupPvcSetupStorageType, mscMpanlDlciLbRemoteTotalBytes=mscMpanlDlciLbRemoteTotalBytes, mscMpanlFrMuxSetupPvcSetupComponentName=mscMpanlFrMuxSetupPvcSetupComponentName, mscMpanlDlciJvcComponentName=mscMpanlDlciJvcComponentName, mscMpanlLastUnknownDlci=mscMpanlLastUnknownDlci, mscMpanlDlciBytesToIf=mscMpanlDlciBytesToIf, mscMpanlDlciJvcStatTable=mscMpanlDlciJvcStatTable, mscMpanlTrafficStatsEntry=mscMpanlTrafficStatsEntry, mscMpanlDlciLCoRequiredCustomerParameter=mscMpanlDlciLCoRequiredCustomerParameter, mscMpanlSigStorageType=mscMpanlSigStorageType, mscMpanlDlciTransferPriToNwk=mscMpanlDlciTransferPriToNwk, mscMpanlDlciLCoRowStatus=mscMpanlDlciLCoRowStatus, mpaNetworkLinkMIB=mpaNetworkLinkMIB, mscMpanlUnknownDlciFramesFromIf=mscMpanlUnknownDlciFramesFromIf, mscMpanlSigMpanlRemoteBusy=mscMpanlSigMpanlRemoteBusy, mscMpanlSigLapfSysTable=mscMpanlSigLapfSysTable, mscMpanlDlciVcCadEntry=mscMpanlDlciVcCadEntry, mscMpanlFrMuxSetupPvcSetupRowStatusEntry=mscMpanlFrMuxSetupPvcSetupRowStatusEntry, mscMpanlDlciControlStatus=mscMpanlDlciControlStatus, mscMpanlIndex=mscMpanlIndex, mscMpanlFramerFrmFromIf=mscMpanlFramerFrmFromIf, mscMpanlDlciLbLocalTotalFrm=mscMpanlDlciLbLocalTotalFrm, mpaNetworkLinkGroupCA02=mpaNetworkLinkGroupCA02)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", mscMpanlOctetToIfByQueueEntry=mscMpanlOctetToIfByQueueEntry, mscMpanlDlciLCoDelayMetric=mscMpanlDlciLCoDelayMetric, mscMpanlDlciCallReferenceNumber=mscMpanlDlciCallReferenceNumber, mscMpanlSigComponentName=mscMpanlSigComponentName, mscMpanlDnaIndex=mscMpanlDnaIndex, mscMpanlDlciVcSubnetRecoveries=mscMpanlDlciVcSubnetRecoveries, mscMpanlDlciVcFrdTable=mscMpanlDlciVcFrdTable, mscMpanlDlciVcPeakOoSeqByteCount=mscMpanlDlciVcPeakOoSeqByteCount, mscMpanlSigRemoteBusy=mscMpanlSigRemoteBusy, mscMpanlLmiStateTable=mscMpanlLmiStateTable, mscMpanlSigAckTimer=mscMpanlSigAckTimer, mscMpanlDlciAbitEntry=mscMpanlDlciAbitEntry, mscMpanlDlciVcPreviousState=mscMpanlDlciVcPreviousState, mscMpanlFrmToIf=mscMpanlFrmToIf, mscMpanlDlciDiscDeCongestedFromIf=mscMpanlDlciDiscDeCongestedFromIf, mscMpanlOctetToIfByQueueTable=mscMpanlOctetToIfByQueueTable, mscMpanlDlciLbStatsEntry=mscMpanlDlciLbStatsEntry, mscMpanlDlciBciFromSubnet=mscMpanlDlciBciFromSubnet, mscMpanlProvTable=mscMpanlProvTable, mscMpanlSigMpanlAdminState=mscMpanlSigMpanlAdminState, mscMpanlFramerRowStatusTable=mscMpanlFramerRowStatusTable, mscMpanlDlciSpOpEntry=mscMpanlDlciSpOpEntry, mscMpanlDlciLbStatsTable=mscMpanlDlciLbStatsTable, mscMpanlSigInCallsRefused=mscMpanlSigInCallsRefused, mscMpanlTrafficStatsTable=mscMpanlTrafficStatsTable, mscMpanlSigInCalls=mscMpanlSigInCalls, mscMpanlStatsEntry=mscMpanlStatsEntry, mscMpanlDlciDiscExcessFromIfBytes=mscMpanlDlciDiscExcessFromIfBytes, mscMpanlUsageState=mscMpanlUsageState, mscMpanlSigProtocolErrors=mscMpanlSigProtocolErrors, mscMpanlVoFr=mscMpanlVoFr, mscMpanlSigMpanlSap0CommandsRx=mscMpanlSigMpanlSap0CommandsRx, mscMpanlSigIFramesReceived=mscMpanlSigIFramesReceived, mscMpanlDlciLCoRequiredTrafficType=mscMpanlDlciLCoRequiredTrafficType, mscMpanlIsdnRowStatusEntry=mscMpanlIsdnRowStatusEntry, mscMpanlSigCallSetupTimer=mscMpanlSigCallSetupTimer, mscMpanlDlciRowStatusTable=mscMpanlDlciRowStatusTable, mscMpanlDlciLCoPathEntry=mscMpanlDlciLCoPathEntry, mscMpanlDlciBytesFromIf=mscMpanlDlciBytesFromIf, mscMpanlSigMpanlStatsEntry=mscMpanlSigMpanlStatsEntry, mscMpanlIsdnBChannelState=mscMpanlIsdnBChannelState, mscMpanlFramerCrcErrors=mscMpanlFramerCrcErrors, mscMpanlDlciDeBytesFromIf=mscMpanlDlciDeBytesFromIf, mscMpanlFramerNormPrioLinkUtilToIf=mscMpanlFramerNormPrioLinkUtilToIf, mscMpanlStateTable=mscMpanlStateTable, mscMpanlDlciJvcRowStatusTable=mscMpanlDlciJvcRowStatusTable, mscMpanlDlciJvcCallingLcn=mscMpanlDlciJvcCallingLcn, mscMpanlDlciLbComponentName=mscMpanlDlciLbComponentName, mscMpanlDlciErrorShortFrmFromIf=mscMpanlDlciErrorShortFrmFromIf, mscMpanlSigMpanlCurrentState=mscMpanlSigMpanlCurrentState, mscMpanlDlciLCoPathUpDateTime=mscMpanlDlciLCoPathUpDateTime, mscMpanlFramerUsageState=mscMpanlFramerUsageState, mscMpanlSigMpanlRowStatus=mscMpanlSigMpanlRowStatus, mscMpanlVoFrOperEntry=mscMpanlVoFrOperEntry, mscMpanlFramerOverruns=mscMpanlFramerOverruns, mscMpanlDlciFecnFrmFromIf=mscMpanlDlciFecnFrmFromIf, mscMpanlDlciCalldEntry=mscMpanlDlciCalldEntry, mscMpanlDlciVcRcosToNetwork=mscMpanlDlciVcRcosToNetwork, mscMpanlDlciLCoPathValue=mscMpanlDlciLCoPathValue, mscMpanlDlciLbRemoteDeBytes=mscMpanlDlciLbRemoteDeBytes, mscMpanlSigMpanlStorageType=mscMpanlSigMpanlStorageType, mscMpanlSigCallProceedingTimer=mscMpanlSigCallProceedingTimer, mscMpanlDlciVc=mscMpanlDlciVc, mscMpanlDlciVcElapsedTimeTillNow=mscMpanlDlciVcElapsedTimeTillNow, mscMpanlStorageType=mscMpanlStorageType, mscMpanlFramerFrmToIf=mscMpanlFramerFrmToIf, mscMpanlSigLastStateChangeReason=mscMpanlSigLastStateChangeReason, mscMpanlSigIFramesTxDiscarded=mscMpanlSigIFramesTxDiscarded, mscMpanlFramerOctetFromIf=mscMpanlFramerOctetFromIf, mscMpanlDlciTransferPriorityFromNetwork=mscMpanlDlciTransferPriorityFromNetwork, mscMpanlDlciElapsedDifference=mscMpanlDlciElapsedDifference, mscMpanlSigIFramesRcvdDiscarded=mscMpanlSigIFramesRcvdDiscarded, mscMpanlFramerDataInversion=mscMpanlFramerDataInversion, mscMpanlSigIndex=mscMpanlSigIndex, mscMpanlSigAckDelayTimer=mscMpanlSigAckDelayTimer, mscMpanlDlciVcPreviousDiagnosticCode=mscMpanlDlciVcPreviousDiagnosticCode, mscMpanlDlciVcCallingDna=mscMpanlDlciVcCallingDna, mscMpanlDlciBecnFrmSetByService=mscMpanlDlciBecnFrmSetByService, mscMpanlSigLapfSysEntry=mscMpanlSigLapfSysEntry, mscMpanlSigLapfStatusEntry=mscMpanlSigLapfStatusEntry, mscMpanlVoFrRowStatusEntry=mscMpanlVoFrRowStatusEntry, mscMpanlDlciLCoPathTable=mscMpanlDlciLCoPathTable, mscMpanlDlciIndex=mscMpanlDlciIndex, mscMpanlDlciJvcPacketsFromSubnet=mscMpanlDlciJvcPacketsFromSubnet, mscMpanlSigOperationalState=mscMpanlSigOperationalState, mscMpanlDlciUnknownStatus=mscMpanlDlciUnknownStatus, mscMpanlIsdnOperTable=mscMpanlIsdnOperTable, mscMpanlSigMpanlSapXCommandsTx=mscMpanlSigMpanlSapXCommandsTx, mscMpanlDlci=mscMpanlDlci, mscMpanlDlciLCoPathDataTable=mscMpanlDlciLCoPathDataTable, mscMpanlDlciABitReasonFromIf=mscMpanlDlciABitReasonFromIf, mscMpanlSigMpanlProfileTable=mscMpanlSigMpanlProfileTable, mscMpanlSigSvcaccEntry=mscMpanlSigSvcaccEntry, mscMpanlDlciLCoLastTearDownReason=mscMpanlDlciLCoLastTearDownReason, mscMpanlFrMuxSetupComponentName=mscMpanlFrMuxSetupComponentName, mscMpanlDlciLCoEnd=mscMpanlDlciLCoEnd, mscMpanlDnaOutgoingOptionsTable=mscMpanlDnaOutgoingOptionsTable, mscMpanlDlciVcFrmLossTimeouts=mscMpanlDlciVcFrmLossTimeouts, mscMpanlFrMuxSetupPvcSetupDlciName=mscMpanlFrMuxSetupPvcSetupDlciName, mscMpanlSigMpanlLapfStatsTable=mscMpanlSigMpanlLapfStatsTable, mscMpanlSigMpanlCurrentQueueSize=mscMpanlSigMpanlCurrentQueueSize, mscMpanlIsdnLastUsedCgpn=mscMpanlIsdnLastUsedCgpn, mscMpanlFramerOctetFromIf64=mscMpanlFramerOctetFromIf64, mscMpanlSigLastStateInStatusMsgReceived=mscMpanlSigLastStateInStatusMsgReceived, mscMpanlFrMuxSetupCommittedInformationRate=mscMpanlFrMuxSetupCommittedInformationRate, mscMpanlSigCurrentNumberOfSvcCalls=mscMpanlSigCurrentNumberOfSvcCalls, mscMpanlFrMuxSetupPvcSetupRowStatus=mscMpanlFrMuxSetupPvcSetupRowStatus, mscMpanlDlciVcPathReliability=mscMpanlDlciVcPathReliability, mscMpanlSigMpanlSap0CommandsTx=mscMpanlSigMpanlSap0CommandsTx, mscMpanlSigDisconnectTimer=mscMpanlSigDisconnectTimer, mscMpanlDlciStandbyStatus=mscMpanlDlciStandbyStatus, mscMpanlDlciVcCallReferenceNumberDecimal=mscMpanlDlciVcCallReferenceNumberDecimal, mscMpanlDlciVcCallingLcn=mscMpanlDlciVcCallingLcn, mscMpanlFrMuxSetupRowStatus=mscMpanlFrMuxSetupRowStatus, mscMpanlSigUsageState=mscMpanlSigUsageState, mscMpanlPrefixDnaRowStatus=mscMpanlPrefixDnaRowStatus, mscMpanlSigMpanlIFramesRcvdDiscarded=mscMpanlSigMpanlIFramesRcvdDiscarded, mscMpanlAdminState=mscMpanlAdminState, mscMpanlSigSysParmsTable=mscMpanlSigSysParmsTable, mscMpanlLmiParmsTable=mscMpanlLmiParmsTable, mscMpanlFramerInterfaceName=mscMpanlFramerInterfaceName, mscMpanlLmiProcedures=mscMpanlLmiProcedures, mscMpanlDlciCalldTable=mscMpanlDlciCalldTable, mscMpanlOctetFromIf=mscMpanlOctetFromIf, mscMpanlDlciLCoState=mscMpanlDlciLCoState, mscMpanlDlciLCoCalledDna=mscMpanlDlciLCoCalledDna, mscMpanlFrMuxSetupPvcSetup=mscMpanlFrMuxSetupPvcSetup, mscMpanlFramerLinkEntry=mscMpanlFramerLinkEntry, mscMpanlDlciBciToSubnet=mscMpanlDlciBciToSubnet, mscMpanlLmiUsageState=mscMpanlLmiUsageState, mscMpanlFramerProvTable=mscMpanlFramerProvTable, mscMpanlDlciVcDuplicatesFromSubnet=mscMpanlDlciVcDuplicatesFromSubnet, mscMpanlProceduralStatus=mscMpanlProceduralStatus, mscMpanlSigLapfStatusTable=mscMpanlSigLapfStatusTable, mscMpanlFrMuxSetupRowStatusTable=mscMpanlFrMuxSetupRowStatusTable, mscMpanlDlciJvcCallingNpi=mscMpanlDlciJvcCallingNpi, mscMpanlCidDataTable=mscMpanlCidDataTable, mscMpanlDlciVcComponentName=mscMpanlDlciVcComponentName, mscMpanlDlciSpOpTable=mscMpanlDlciSpOpTable, mscMpanlDnaStorageType=mscMpanlDnaStorageType, mscMpanlDlciVcDataPath=mscMpanlDlciVcDataPath, mscMpanlDlciExcessBytesFromIf=mscMpanlDlciExcessBytesFromIf, mscMpanlDlciVcNotDataXferFromSubnet=mscMpanlDlciVcNotDataXferFromSubnet, mscMpanlDlciLbRemoteFecnFrm=mscMpanlDlciLbRemoteFecnFrm, mscMpanlOperStatusEntry=mscMpanlOperStatusEntry, mscMpanlSigMpanlStatsTable=mscMpanlSigMpanlStatsTable, mscMpanlDlciVcEmissionPriorityFromNetwork=mscMpanlDlciVcEmissionPriorityFromNetwork, mscMpanlDlciLCoPathDataEntry=mscMpanlDlciLCoPathDataEntry, mscMpanlDnaCallOptionsTable=mscMpanlDnaCallOptionsTable, mscMpanlDlciLCoStorageType=mscMpanlDlciLCoStorageType, mscMpanlSigRetransmitLimit=mscMpanlSigRetransmitLimit, mscMpanlLmiAdminState=mscMpanlLmiAdminState, mscMpanlSigMpanlDteComponentName=mscMpanlSigMpanlDteComponentName, mscMpanlSigReceiveRejectFrame=mscMpanlSigReceiveRejectFrame, mscMpanlDlciVcPriority=mscMpanlDlciVcPriority, mscMpanlSigStatsEntry=mscMpanlSigStatsEntry, mscMpanlDlciLbLocalTotalBytes=mscMpanlDlciLbLocalTotalBytes, mscMpanlFramerStatsTable=mscMpanlFramerStatsTable, mscMpanlFrmToIfByQueueValue=mscMpanlFrmToIfByQueueValue, mpaNetworkLinkCapabilitiesCA02=mpaNetworkLinkCapabilitiesCA02, mscMpanlDlciFciFromSubnet=mscMpanlDlciFciFromSubnet, mscMpanlDlciJvcPacketsToSubnet=mscMpanlDlciJvcPacketsToSubnet, mscMpanlDlciVcAccountingEnabled=mscMpanlDlciVcAccountingEnabled, mscMpanlDlciDiscFrameAbit=mscMpanlDlciDiscFrameAbit, mscMpanlDlciVcStartTime=mscMpanlDlciVcStartTime, mscMpanlSigRowStatusTable=mscMpanlSigRowStatusTable, mscMpanlDlciLCoBumpPreference=mscMpanlDlciLCoBumpPreference, mscMpanlFramerRowStatusEntry=mscMpanlFramerRowStatusEntry, mscMpanlSigLastDlciReceivedStatus=mscMpanlSigLastDlciReceivedStatus, mscMpanlSigMpanl=mscMpanlSigMpanl, mscMpanlFrmToIfByQueueEntry=mscMpanlFrmToIfByQueueEntry, mscMpanlDlciDiscCongestedToIfBytes=mscMpanlDlciDiscCongestedToIfBytes, mscMpanlDlciVcEmissionPriorityToNetwork=mscMpanlDlciVcEmissionPriorityToNetwork, mscMpanlVoFrLostFragmentsFromIf=mscMpanlVoFrLostFragmentsFromIf, mscMpanlCommentText=mscMpanlCommentText, mscMpanlOctetToIfByQueueValue=mscMpanlOctetToIfByQueueValue, mscMpanlFrMuxSetupPvcSetupProvTable=mscMpanlFrMuxSetupPvcSetupProvTable, mscMpanlDlciQ933CallState=mscMpanlDlciQ933CallState, mscMpanlDlciLCoStatsTable=mscMpanlDlciLCoStatsTable, mpaNetworkLinkGroupCA02A=mpaNetworkLinkGroupCA02A, mscMpanlDlciTotalEgressBytes=mscMpanlDlciTotalEgressBytes, mscMpanlDlciLCoPathFailureCount=mscMpanlDlciLCoPathFailureCount, mscMpanlRowStatus=mscMpanlRowStatus, mscMpanlSigStatsTable=mscMpanlSigStatsTable, mscMpanlLmiComponentName=mscMpanlLmiComponentName, mscMpanlDlciVcMaxSubnetPktSize=mscMpanlDlciVcMaxSubnetPktSize, mscMpanlDlciDeFrmFromIf=mscMpanlDlciDeFrmFromIf, mscMpanlFrmToIfByQueueTable=mscMpanlFrmToIfByQueueTable, mscMpanlDnaRowStatusEntry=mscMpanlDnaRowStatusEntry, mscMpanlVoFrComponentName=mscMpanlVoFrComponentName, mscMpanlSigSvcaccTable=mscMpanlSigSvcaccTable, mscMpanlStatsTable=mscMpanlStatsTable, mscMpanlLmiIndex=mscMpanlLmiIndex, mscMpanlStateEntry=mscMpanlStateEntry, mscMpanlDlciJvcPacketsDiscarded=mscMpanlDlciJvcPacketsDiscarded, mscMpanlDlciLCoCalledNpi=mscMpanlDlciLCoCalledNpi, mscMpanlDlciVcOoSeqPktCntExceeded=mscMpanlDlciVcOoSeqPktCntExceeded, mscMpanlDlciVcCalledDna=mscMpanlDlciVcCalledDna, mscMpanlSig=mscMpanlSig, mscMpanlFrMuxSetupIndex=mscMpanlFrMuxSetupIndex, mscMpanlSigLastQ933StateReceivedStatus=mscMpanlSigLastQ933StateReceivedStatus, mscMpanlDlciBecnFrmFromIf=mscMpanlDlciBecnFrmFromIf, mscMpanlDlciAvailabilityStatus=mscMpanlDlciAvailabilityStatus, mscMpanlDlciUsageState=mscMpanlDlciUsageState, mscMpanlRoundTripDelay=mscMpanlRoundTripDelay, mscMpanlSigReleaseTimer=mscMpanlSigReleaseTimer, mscMpanlDlciVcRowStatusEntry=mscMpanlDlciVcRowStatusEntry, mscMpanlDlciLCoCallingNpi=mscMpanlDlciLCoCallingNpi, mscMpanlLmiRowStatusTable=mscMpanlLmiRowStatusTable, mscMpanlDlciVcSegmentsRx=mscMpanlDlciVcSegmentsRx, mscMpanlDlciVcNotDataXferToSubnet=mscMpanlDlciVcNotDataXferToSubnet, mscMpanlDlciLCoCallingDna=mscMpanlDlciLCoCallingDna, mscMpanlDlciLCoStatsEntry=mscMpanlDlciLCoStatsEntry, mscMpanlFrMuxSetupPvcSetupRowStatusTable=mscMpanlFrMuxSetupPvcSetupRowStatusTable, mscMpanlDlciErrorLongFrmFromIf=mscMpanlDlciErrorLongFrmFromIf, mscMpanlDlciDiscCongestedFromIfBytes=mscMpanlDlciDiscCongestedFromIfBytes, mscMpanlDlciLbLocalDeFrm=mscMpanlDlciLbLocalDeFrm, mscMpanlFrMuxSetup=mscMpanlFrMuxSetup, mscMpanlDlciVcSegmentsSent=mscMpanlDlciVcSegmentsSent, mscMpanlDlciTotalEgressSegFrm=mscMpanlDlciTotalEgressSegFrm, mscMpanlFramerFrameCrcType=mscMpanlFramerFrameCrcType, mscMpanlDlciLCo=mscMpanlDlciLCo, mscMpanlFramerStateEntry=mscMpanlFramerStateEntry, mscMpanlDlciVcPeakOoSeqPktCount=mscMpanlDlciVcPeakOoSeqPktCount, mscMpanlDnaOutgoingOptionsEntry=mscMpanlDnaOutgoingOptionsEntry, mscMpanlEmissionPriorityQsTable=mscMpanlEmissionPriorityQsTable, mscMpanlDlciJvcProtocolErrors=mscMpanlDlciJvcProtocolErrors, mscMpanlStandbyStatus=mscMpanlStandbyStatus, mscMpanlPrefixDnaComponentName=mscMpanlPrefixDnaComponentName, mscMpanlDlciLCoCallReferenceNumber=mscMpanlDlciLCoCallReferenceNumber, mscMpanlDlciVcIntdTable=mscMpanlDlciVcIntdTable, mscMpanlDlciOperationalState=mscMpanlDlciOperationalState, mscMpanlDlciLCoSetupPriority=mscMpanlDlciLCoSetupPriority, mscMpanlDlciVcCadTable=mscMpanlDlciVcCadTable, mscMpanlSigMpanlRowStatusTable=mscMpanlSigMpanlRowStatusTable, mscMpanlDlciAccounting=mscMpanlDlciAccounting, mscMpanlDlciLCoPermittedTrunkTypes=mscMpanlDlciLCoPermittedTrunkTypes, mscMpanlDlciLCoRowStatusTable=mscMpanlDlciLCoRowStatusTable, mscMpanlOperTable=mscMpanlOperTable, mscMpanlInvalidHeaderFramesFromIf=mscMpanlInvalidHeaderFramesFromIf, mscMpanlIfEntryTable=mscMpanlIfEntryTable, mscMpanlSigIdleProbeTimer=mscMpanlSigIdleProbeTimer, mscMpanlDlciLCoBytesToNetwork=mscMpanlDlciLCoBytesToNetwork, mscMpanlIfAdminStatus=mscMpanlIfAdminStatus, mscMpanlPrefixDnaNumberingPlanIndicatorIndex=mscMpanlPrefixDnaNumberingPlanIndicatorIndex, mscMpanlFramer=mscMpanlFramer, mscMpanlDlciDiscByteAbit=mscMpanlDlciDiscByteAbit, mscMpanlFrMuxSetupDlciCompName=mscMpanlFrMuxSetupDlciCompName, mscMpanlDlciDiscDeCongestedToIf=mscMpanlDlciDiscDeCongestedToIf, mscMpanlDlciLCoRowStatusEntry=mscMpanlDlciLCoRowStatusEntry, mscMpanlDlciDiscDeCongestedToIfBytes=mscMpanlDlciDiscDeCongestedToIfBytes, mscMpanlDlciVcRowStatus=mscMpanlDlciVcRowStatus, mscMpanlOctetToIf=mscMpanlOctetToIf, mscMpanlDlciVcCalledLcn=mscMpanlDlciVcCalledLcn)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-MpaNetworkLinkMIB", mscMpanlVoFrRowStatus=mscMpanlVoFrRowStatus, mscMpanlDlciABitStatusFromIf=mscMpanlDlciABitStatusFromIf, mscMpanlDlciExcessBurstSize=mscMpanlDlciExcessBurstSize, mscMpanlIsdnT320=mscMpanlIsdnT320, mscMpanlDlciLbRowStatus=mscMpanlDlciLbRowStatus, mscMpanlDlciLbRemoteTotalFrm=mscMpanlDlciLbRemoteTotalFrm, mscMpanlIfEntryEntry=mscMpanlIfEntryEntry, mscMpanlLmiRowStatus=mscMpanlLmiRowStatus, mscMpanlNumberOfEmissionQs=mscMpanlNumberOfEmissionQs, mscMpanlDlciDiscExcessFromIf=mscMpanlDlciDiscExcessFromIf, mscMpanlSigNetworkType=mscMpanlSigNetworkType, mscMpanlDlciLbLocalDeBytes=mscMpanlDlciLbLocalDeBytes, mscMpanlLmiRowStatusEntry=mscMpanlLmiRowStatusEntry, mscMpanlOperEntry=mscMpanlOperEntry, mscMpanlDlciLCoOptimization=mscMpanlDlciLCoOptimization, mscMpanlFramerFlagsBetweenFrames=mscMpanlFramerFlagsBetweenFrames, mscMpanlPrefixDnaDataNetworkAddressIndex=mscMpanlPrefixDnaDataNetworkAddressIndex, mscMpanlDlciLCoPktsToNetwork=mscMpanlDlciLCoPktsToNetwork, mscMpanlSigMpanlStateTable=mscMpanlSigMpanlStateTable, mscMpanlDlciLCoCallDataTable=mscMpanlDlciLCoCallDataTable, mscMpanlDlciQ933CallReference=mscMpanlDlciQ933CallReference, mscMpanlSigStateChange=mscMpanlSigStateChange, mscMpanlDlciLbLocalBecnFrm=mscMpanlDlciLbLocalBecnFrm, mscMpanlSigCurrentState=mscMpanlSigCurrentState, mscMpanlDlciVcSegmentSize=mscMpanlDlciVcSegmentSize, mscMpanlDlciVcDmepEntry=mscMpanlDlciVcDmepEntry, mscMpanlIfIndex=mscMpanlIfIndex, mscMpanlSigMpanlIFramesTransmitted=mscMpanlSigMpanlIFramesTransmitted, mscMpanlSigLastDlciWithMsgBlockCongestion=mscMpanlSigLastDlciWithMsgBlockCongestion, mscMpanlDnaCallOptionsEntry=mscMpanlDnaCallOptionsEntry, mscMpanlEmissionPriorityQsEntry=mscMpanlEmissionPriorityQsEntry, mscMpanlDlciEirEgressSegFrm=mscMpanlDlciEirEgressSegFrm, mscMpanlDlciVcFrdEntry=mscMpanlDlciVcFrdEntry, mscMpanlDlciVcOoSeqByteCntExceeded=mscMpanlDlciVcOoSeqByteCntExceeded, mscMpanlComponentName=mscMpanlComponentName, mscMpanlFrmToIfByQueueIndex=mscMpanlFrmToIfByQueueIndex, mscMpanlDlciFecnFrmToIf=mscMpanlDlciFecnFrmToIf, mscMpanlDlciVcCallReferenceNumber=mscMpanlDlciVcCallReferenceNumber)
