#
# PySNMP MIB module CISCO-TRUSTSEC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-TRUSTSEC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:58:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CtsPasswordEncryptionType, CtsSecurityGroupTag, CtsGenerationId, CtsCredentialRecordType, CtsAcsAuthorityIdentity = mibBuilder.importSymbols("CISCO-TRUSTSEC-TC-MIB", "CtsPasswordEncryptionType", "CtsSecurityGroupTag", "CtsGenerationId", "CtsCredentialRecordType", "CtsAcsAuthorityIdentity")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks, Counter32, Unsigned32, NotificationType, Bits, Gauge32, ObjectIdentity, IpAddress, Counter64, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks", "Counter32", "Unsigned32", "NotificationType", "Bits", "Gauge32", "ObjectIdentity", "IpAddress", "Counter64", "iso")
DisplayString, TruthValue, DateAndTime, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "DateAndTime", "TextualConvention", "RowStatus")
ciscoTrustSecMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 730))
ciscoTrustSecMIB.setRevisions(('2014-01-30 00:00', '2012-09-26 00:00', '2011-03-15 00:00', '2010-09-21 00:00',))
if mibBuilder.loadTexts: ciscoTrustSecMIB.setLastUpdated('201401300000Z')
if mibBuilder.loadTexts: ciscoTrustSecMIB.setOrganization('Cisco Systems, Inc.')
ciscoTrustSecMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 730, 0))
ciscoTrustSecMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 730, 1))
ciscoTrustSecMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 730, 2))
ctsCacheObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 1))
ctsSgtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 2))
ctsCredentialObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3))
ctsEnvironmentDataObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 4))
ctsNotifsControlObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 5))
ctsNotifsInfoObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 6))
ctsCriticalAuthObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 7))
ctsCacheEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsCacheEnabled.setStatus('current')
ctsCacheNvStorage = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 1, 2), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsCacheNvStorage.setStatus('current')
ctsCacheClear = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("all", 2), ("authzPolicies", 3), ("authzPoliciesPeer", 4), ("authzPoliciesSgt", 5), ("environmentData", 6), ("interfaceController", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsCacheClear.setStatus('current')
ctsSecurityGroupTagId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 2, 1), CtsSecurityGroupTag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsSecurityGroupTagId.setStatus('current')
ctsSgtAssignmentMethod = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("ingress", 2), ("egress", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsSgtAssignmentMethod.setStatus('current')
ctsDeviceId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 1), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsDeviceId.setStatus('current')
ctsDevicePasswordType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 2), CtsPasswordEncryptionType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsDevicePasswordType.setStatus('current')
ctsDevicePassword = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 3), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsDevicePassword.setStatus('current')
ctsKeystoreType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hardwareKeystore", 1), ("softwareEmulation", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsKeystoreType.setStatus('current')
ctsKeystoreFwVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsKeystoreFwVersion.setStatus('current')
ctsKeystoreFwAlerts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsKeystoreFwAlerts.setStatus('current')
ctsKeystoreFwResets = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsKeystoreFwResets.setStatus('current')
ctsKeystoreRxTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsKeystoreRxTimeouts.setStatus('current')
ctsKeystoreRxBadChecksums = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsKeystoreRxBadChecksums.setStatus('current')
ctsKeystoreRxBadFragmentLengths = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsKeystoreRxBadFragmentLengths.setStatus('current')
ctsKeystoreCorruptions = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsKeystoreCorruptions.setStatus('current')
ctsKeystorePasswordRecordTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 13), )
if mibBuilder.loadTexts: ctsKeystorePasswordRecordTable.setStatus('current')
ctsKeystorePasswordRecordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 13, 1), ).setIndexNames((1, "CISCO-TRUSTSEC-MIB", "ctsKeystorePasswordRecordName"))
if mibBuilder.loadTexts: ctsKeystorePasswordRecordEntry.setStatus('current')
ctsKeystorePasswordRecordName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 13, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: ctsKeystorePasswordRecordName.setStatus('current')
ctsKeystorePasswordRecordType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 13, 1, 2), CtsCredentialRecordType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsKeystorePasswordRecordType.setStatus('current')
ctsKeystorePacRecordTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 14), )
if mibBuilder.loadTexts: ctsKeystorePacRecordTable.setStatus('current')
ctsKeystorePacRecordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 14, 1), ).setIndexNames((1, "CISCO-TRUSTSEC-MIB", "ctsKeystorePacRecordName"))
if mibBuilder.loadTexts: ctsKeystorePacRecordEntry.setStatus('current')
ctsKeystorePacRecordName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 14, 1, 1), CtsAcsAuthorityIdentity().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: ctsKeystorePacRecordName.setStatus('current')
ctsKeystorePacRecordType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 14, 1, 2), CtsCredentialRecordType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsKeystorePacRecordType.setStatus('current')
ctsPacInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 15), )
if mibBuilder.loadTexts: ctsPacInfoTable.setStatus('current')
ctsPacInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 15, 1), ).setIndexNames((1, "CISCO-TRUSTSEC-MIB", "ctsPacAcsAuthId"))
if mibBuilder.loadTexts: ctsPacInfoEntry.setStatus('current')
ctsPacAcsAuthId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 15, 1, 1), CtsAcsAuthorityIdentity().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: ctsPacAcsAuthId.setStatus('current')
ctsPacAcsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 15, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsPacAcsDescription.setStatus('current')
ctsPacType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("tunnel", 2), ("machineAuthentication", 3), ("userAuthorization", 4), ("posture", 5), ("ciscoTrustSec", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsPacType.setStatus('current')
ctsPacExpirationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 15, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsPacExpirationTime.setStatus('current')
ctsPacTimeToRefresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 15, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsPacTimeToRefresh.setStatus('current')
ctsPacStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 15, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsPacStatus.setStatus('current')
ctsCredentialsClearAll = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 3, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsCredentialsClearAll.setStatus('current')
ctsEnvDataLastDownloadStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("succeeded", 2), ("failed", 3), ("inprogress", 4), ("incomplete", 5), ("timedout", 6), ("cleared", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsEnvDataLastDownloadStatus.setStatus('current')
ctsEnvSecurityGroupTagId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 4, 2), CtsSecurityGroupTag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsEnvSecurityGroupTagId.setStatus('current')
ctsEnvSecurityGroupTagGenId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 4, 3), CtsGenerationId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsEnvSecurityGroupTagGenId.setStatus('current')
ctsEnvDataLastUpdate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 4, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsEnvDataLastUpdate.setStatus('current')
ctsEnvDataRefreshInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 4, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsEnvDataRefreshInterval.setStatus('current')
ctsEnvDataTimeLeft = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 4, 6), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsEnvDataTimeLeft.setStatus('current')
ctsEnvDataTimeToRefresh = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 4, 7), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsEnvDataTimeToRefresh.setStatus('current')
ctsEnvDataSource = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("cached", 2), ("downloaded", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsEnvDataSource.setStatus('current')
ctsEnvDataAction = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("refresh", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsEnvDataAction.setStatus('current')
ctsEnvSecurityGroupNameTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 4, 16), )
if mibBuilder.loadTexts: ctsEnvSecurityGroupNameTable.setStatus('current')
ctsEnvSecurityGroupNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 4, 16, 1), ).setIndexNames((0, "CISCO-TRUSTSEC-MIB", "ctsEnvSecurityGroupNameSgt"))
if mibBuilder.loadTexts: ctsEnvSecurityGroupNameEntry.setStatus('current')
ctsEnvSecurityGroupNameSgt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 4, 16, 1, 1), CtsSecurityGroupTag().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: ctsEnvSecurityGroupNameSgt.setStatus('current')
ctsEnvSecurityGroupNameSgtGenId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 4, 16, 1, 2), CtsGenerationId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsEnvSecurityGroupNameSgtGenId.setStatus('current')
ctsEnvSecurityGroupNameSgtFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 4, 16, 1, 3), Bits().clone(namedValues=NamedValues(("recognizedSgt", 0), ("unicastSgt", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsEnvSecurityGroupNameSgtFlag.setStatus('current')
ctsEnvSecurityGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 4, 16, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsEnvSecurityGroupName.setStatus('current')
ctsFileErrNotifReason = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("openFailedForWrite", 1), ("writeFailed", 2), ("openFailedForRead", 3), ("readFailed", 4), ("badMagic", 5), ("unexpectedEof", 6), ("badHeader", 7)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsFileErrNotifReason.setStatus('current')
ctsSwKeystoreSyncFailNotifReason = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ipcPortCreationFailed", 1), ("ipcPortOpenFailed", 2), ("ipcConnectionFailure", 3), ("ipcSendFailure", 4), ("standbyIncompatible", 5), ("syncProcessCreationFailed", 6)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsSwKeystoreSyncFailNotifReason.setStatus('current')
ctsNotifMessageString = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 6, 3), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsNotifMessageString.setStatus('current')
ctsSwKeystoreFileErrNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 5, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsSwKeystoreFileErrNotifEnable.setStatus('current')
ctsSwKeystoreSyncFailNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 5, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsSwKeystoreSyncFailNotifEnable.setStatus('current')
ctsAuthzCacheFileErrNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 5, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsAuthzCacheFileErrNotifEnable.setStatus('current')
ctsCacheFileAccessErrNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 5, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsCacheFileAccessErrNotifEnable.setStatus('current')
ctsSrcEntropyFailNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 5, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsSrcEntropyFailNotifEnable.setStatus('current')
ctsSapRandomNumberFailNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 5, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsSapRandomNumberFailNotifEnable.setStatus('current')
ctsCriticalAuthEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 7, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsCriticalAuthEnabled.setStatus('current')
ctsCriticalAuthFallback = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("cache", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsCriticalAuthFallback.setStatus('current')
ctsCriticalAuthPeerSgt = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 7, 3), CtsSecurityGroupTag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsCriticalAuthPeerSgt.setStatus('current')
ctsCriticalAuthPeerSgtTrust = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 7, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsCriticalAuthPeerSgtTrust.setStatus('current')
ctsCriticalAuthDefaultPmk = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 7, 5), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(32, 32), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsCriticalAuthDefaultPmk.setStatus('current')
ctsCriticalAuthViewDefaultPmk = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 730, 1, 7, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsCriticalAuthViewDefaultPmk.setStatus('current')
ctsSwKeystoreFileErrNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 730, 0, 1)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsFileErrNotifReason"))
if mibBuilder.loadTexts: ctsSwKeystoreFileErrNotif.setStatus('current')
ctsSwKeystoreSyncFailNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 730, 0, 2)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsSwKeystoreSyncFailNotifReason"))
if mibBuilder.loadTexts: ctsSwKeystoreSyncFailNotif.setStatus('current')
ctsAuthzCacheFileErrNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 730, 0, 3)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsFileErrNotifReason"), ("CISCO-TRUSTSEC-MIB", "ctsNotifMessageString"))
if mibBuilder.loadTexts: ctsAuthzCacheFileErrNotif.setStatus('current')
ctsCacheFileAccessErrNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 730, 0, 4)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsFileErrNotifReason"), ("CISCO-TRUSTSEC-MIB", "ctsNotifMessageString"))
if mibBuilder.loadTexts: ctsCacheFileAccessErrNotif.setStatus('current')
ctsSrcEntropyFailNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 730, 0, 5))
if mibBuilder.loadTexts: ctsSrcEntropyFailNotif.setStatus('current')
ctsSapRandomNumberFailNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 730, 0, 6)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsNotifMessageString"))
if mibBuilder.loadTexts: ctsSapRandomNumberFailNotif.setStatus('current')
ciscoTrustSecMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 1))
ciscoTrustSecMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2))
ciscoTrustSecMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 1, 1)).setObjects(("CISCO-TRUSTSEC-MIB", "ciscoTrustSecCacheGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecSgtGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecCredentialsGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecHwKeystoreInfoGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecEnvDataGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecSgtAssignmentGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecMIBCompliance = ciscoTrustSecMIBCompliance.setStatus('deprecated')
ciscoTrustSecMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 1, 2)).setObjects(("CISCO-TRUSTSEC-MIB", "ciscoTrustSecCacheGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecSgtGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecCredentialsGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecHwKeystoreInfoGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecEnvDataGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecSgtAssignmentGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecEnvSecGroupNameGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecMIBCompliance2 = ciscoTrustSecMIBCompliance2.setStatus('deprecated')
ciscoTrustSecMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 1, 3)).setObjects(("CISCO-TRUSTSEC-MIB", "ciscoTrustSecCacheGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecSgtGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecCredentialsGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecHwKeystoreInfoGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecEnvDataGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecSgtAssignmentGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecEnvSecGroupNameGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecSwKeystoreNotifsInfoGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecSwKeystoreNotifsControlGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecSwKeystoreNotifsGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecFileErrNotifsInfoGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecNotifsMessageStringInfoGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecCacheFileNotifsControlGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecCacheFileNotifsGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecCtrDrbgNotifsControlGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecCtrDrbgNotifsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecMIBCompliance3 = ciscoTrustSecMIBCompliance3.setStatus('deprecated')
ciscoTrustSecMIBCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 1, 4)).setObjects(("CISCO-TRUSTSEC-MIB", "ciscoTrustSecCacheGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecSgtGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecCredentialsGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecHwKeystoreInfoGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecEnvDataGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecSgtAssignmentGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecEnvSecGroupNameGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecSwKeystoreNotifsInfoGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecSwKeystoreNotifsControlGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecSwKeystoreNotifsGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecFileErrNotifsInfoGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecNotifsMessageStringInfoGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecCacheFileNotifsControlGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecCacheFileNotifsGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecCtrDrbgNotifsControlGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecCtrDrbgNotifsGroup"), ("CISCO-TRUSTSEC-MIB", "ciscoTrustSecCrtclAuthGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecMIBCompliance4 = ciscoTrustSecMIBCompliance4.setStatus('current')
ciscoTrustSecCacheGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2, 1)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsCacheEnabled"), ("CISCO-TRUSTSEC-MIB", "ctsCacheNvStorage"), ("CISCO-TRUSTSEC-MIB", "ctsCacheClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecCacheGroup = ciscoTrustSecCacheGroup.setStatus('current')
ciscoTrustSecSgtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2, 2)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsSecurityGroupTagId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecSgtGroup = ciscoTrustSecSgtGroup.setStatus('current')
ciscoTrustSecCredentialsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2, 3)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsDeviceId"), ("CISCO-TRUSTSEC-MIB", "ctsDevicePasswordType"), ("CISCO-TRUSTSEC-MIB", "ctsDevicePassword"), ("CISCO-TRUSTSEC-MIB", "ctsKeystoreType"), ("CISCO-TRUSTSEC-MIB", "ctsKeystorePasswordRecordType"), ("CISCO-TRUSTSEC-MIB", "ctsKeystorePacRecordType"), ("CISCO-TRUSTSEC-MIB", "ctsPacAcsDescription"), ("CISCO-TRUSTSEC-MIB", "ctsPacType"), ("CISCO-TRUSTSEC-MIB", "ctsPacExpirationTime"), ("CISCO-TRUSTSEC-MIB", "ctsPacTimeToRefresh"), ("CISCO-TRUSTSEC-MIB", "ctsPacStatus"), ("CISCO-TRUSTSEC-MIB", "ctsCredentialsClearAll"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecCredentialsGroup = ciscoTrustSecCredentialsGroup.setStatus('current')
ciscoTrustSecHwKeystoreInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2, 4)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsKeystoreFwVersion"), ("CISCO-TRUSTSEC-MIB", "ctsKeystoreFwAlerts"), ("CISCO-TRUSTSEC-MIB", "ctsKeystoreFwResets"), ("CISCO-TRUSTSEC-MIB", "ctsKeystoreRxTimeouts"), ("CISCO-TRUSTSEC-MIB", "ctsKeystoreRxBadChecksums"), ("CISCO-TRUSTSEC-MIB", "ctsKeystoreRxBadFragmentLengths"), ("CISCO-TRUSTSEC-MIB", "ctsKeystoreCorruptions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecHwKeystoreInfoGroup = ciscoTrustSecHwKeystoreInfoGroup.setStatus('current')
ciscoTrustSecEnvDataGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2, 5)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsEnvDataLastDownloadStatus"), ("CISCO-TRUSTSEC-MIB", "ctsEnvSecurityGroupTagId"), ("CISCO-TRUSTSEC-MIB", "ctsEnvSecurityGroupTagGenId"), ("CISCO-TRUSTSEC-MIB", "ctsEnvDataLastUpdate"), ("CISCO-TRUSTSEC-MIB", "ctsEnvDataRefreshInterval"), ("CISCO-TRUSTSEC-MIB", "ctsEnvDataTimeLeft"), ("CISCO-TRUSTSEC-MIB", "ctsEnvDataTimeToRefresh"), ("CISCO-TRUSTSEC-MIB", "ctsEnvDataSource"), ("CISCO-TRUSTSEC-MIB", "ctsEnvDataAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecEnvDataGroup = ciscoTrustSecEnvDataGroup.setStatus('current')
ciscoTrustSecSgtAssignmentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2, 6)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsSgtAssignmentMethod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecSgtAssignmentGroup = ciscoTrustSecSgtAssignmentGroup.setStatus('current')
ciscoTrustSecEnvSecGroupNameGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2, 7)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsEnvSecurityGroupNameSgtGenId"), ("CISCO-TRUSTSEC-MIB", "ctsEnvSecurityGroupNameSgtFlag"), ("CISCO-TRUSTSEC-MIB", "ctsEnvSecurityGroupName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecEnvSecGroupNameGroup = ciscoTrustSecEnvSecGroupNameGroup.setStatus('current')
ciscoTrustSecSwKeystoreNotifsInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2, 8)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsSwKeystoreSyncFailNotifReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecSwKeystoreNotifsInfoGroup = ciscoTrustSecSwKeystoreNotifsInfoGroup.setStatus('current')
ciscoTrustSecSwKeystoreNotifsControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2, 9)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsSwKeystoreFileErrNotifEnable"), ("CISCO-TRUSTSEC-MIB", "ctsSwKeystoreSyncFailNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecSwKeystoreNotifsControlGroup = ciscoTrustSecSwKeystoreNotifsControlGroup.setStatus('current')
ciscoTrustSecSwKeystoreNotifsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2, 10)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsSwKeystoreFileErrNotif"), ("CISCO-TRUSTSEC-MIB", "ctsSwKeystoreSyncFailNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecSwKeystoreNotifsGroup = ciscoTrustSecSwKeystoreNotifsGroup.setStatus('current')
ciscoTrustSecFileErrNotifsInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2, 11)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsFileErrNotifReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecFileErrNotifsInfoGroup = ciscoTrustSecFileErrNotifsInfoGroup.setStatus('current')
ciscoTrustSecNotifsMessageStringInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2, 12)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsNotifMessageString"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecNotifsMessageStringInfoGroup = ciscoTrustSecNotifsMessageStringInfoGroup.setStatus('current')
ciscoTrustSecCacheFileNotifsControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2, 13)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsAuthzCacheFileErrNotifEnable"), ("CISCO-TRUSTSEC-MIB", "ctsCacheFileAccessErrNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecCacheFileNotifsControlGroup = ciscoTrustSecCacheFileNotifsControlGroup.setStatus('current')
ciscoTrustSecCacheFileNotifsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2, 14)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsAuthzCacheFileErrNotif"), ("CISCO-TRUSTSEC-MIB", "ctsCacheFileAccessErrNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecCacheFileNotifsGroup = ciscoTrustSecCacheFileNotifsGroup.setStatus('current')
ciscoTrustSecCtrDrbgNotifsControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2, 15)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsSrcEntropyFailNotifEnable"), ("CISCO-TRUSTSEC-MIB", "ctsSapRandomNumberFailNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecCtrDrbgNotifsControlGroup = ciscoTrustSecCtrDrbgNotifsControlGroup.setStatus('current')
ciscoTrustSecCtrDrbgNotifsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2, 16)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsSrcEntropyFailNotif"), ("CISCO-TRUSTSEC-MIB", "ctsSapRandomNumberFailNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecCtrDrbgNotifsGroup = ciscoTrustSecCtrDrbgNotifsGroup.setStatus('current')
ciscoTrustSecCrtclAuthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 730, 2, 2, 17)).setObjects(("CISCO-TRUSTSEC-MIB", "ctsCriticalAuthEnabled"), ("CISCO-TRUSTSEC-MIB", "ctsCriticalAuthFallback"), ("CISCO-TRUSTSEC-MIB", "ctsCriticalAuthPeerSgt"), ("CISCO-TRUSTSEC-MIB", "ctsCriticalAuthPeerSgtTrust"), ("CISCO-TRUSTSEC-MIB", "ctsCriticalAuthDefaultPmk"), ("CISCO-TRUSTSEC-MIB", "ctsCriticalAuthViewDefaultPmk"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecCrtclAuthGroup = ciscoTrustSecCrtclAuthGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-TRUSTSEC-MIB", ctsSgtAssignmentMethod=ctsSgtAssignmentMethod, ctsSwKeystoreFileErrNotif=ctsSwKeystoreFileErrNotif, ctsEnvSecurityGroupNameTable=ctsEnvSecurityGroupNameTable, ctsSrcEntropyFailNotifEnable=ctsSrcEntropyFailNotifEnable, ctsSrcEntropyFailNotif=ctsSrcEntropyFailNotif, ciscoTrustSecMIBConform=ciscoTrustSecMIBConform, ctsEnvSecurityGroupName=ctsEnvSecurityGroupName, ctsKeystoreFwVersion=ctsKeystoreFwVersion, ctsKeystorePacRecordType=ctsKeystorePacRecordType, ctsCriticalAuthObjects=ctsCriticalAuthObjects, ctsCredentialObjects=ctsCredentialObjects, ctsPacInfoTable=ctsPacInfoTable, ctsEnvDataTimeLeft=ctsEnvDataTimeLeft, ciscoTrustSecMIBCompliance3=ciscoTrustSecMIBCompliance3, ciscoTrustSecSwKeystoreNotifsGroup=ciscoTrustSecSwKeystoreNotifsGroup, ciscoTrustSecMIBCompliances=ciscoTrustSecMIBCompliances, ctsCriticalAuthViewDefaultPmk=ctsCriticalAuthViewDefaultPmk, ciscoTrustSecSwKeystoreNotifsControlGroup=ciscoTrustSecSwKeystoreNotifsControlGroup, ctsKeystoreRxBadChecksums=ctsKeystoreRxBadChecksums, ctsEnvSecurityGroupNameSgtFlag=ctsEnvSecurityGroupNameSgtFlag, ctsCacheNvStorage=ctsCacheNvStorage, ctsCriticalAuthPeerSgtTrust=ctsCriticalAuthPeerSgtTrust, ctsKeystorePasswordRecordTable=ctsKeystorePasswordRecordTable, ctsSgtObjects=ctsSgtObjects, ciscoTrustSecCtrDrbgNotifsControlGroup=ciscoTrustSecCtrDrbgNotifsControlGroup, ctsPacInfoEntry=ctsPacInfoEntry, ctsEnvSecurityGroupTagGenId=ctsEnvSecurityGroupTagGenId, ciscoTrustSecMIBGroups=ciscoTrustSecMIBGroups, ciscoTrustSecCacheGroup=ciscoTrustSecCacheGroup, ctsKeystoreCorruptions=ctsKeystoreCorruptions, ctsAuthzCacheFileErrNotifEnable=ctsAuthzCacheFileErrNotifEnable, ciscoTrustSecNotifsMessageStringInfoGroup=ciscoTrustSecNotifsMessageStringInfoGroup, ctsEnvSecurityGroupTagId=ctsEnvSecurityGroupTagId, ctsCacheFileAccessErrNotif=ctsCacheFileAccessErrNotif, ctsSapRandomNumberFailNotif=ctsSapRandomNumberFailNotif, ciscoTrustSecCacheFileNotifsGroup=ciscoTrustSecCacheFileNotifsGroup, ctsSwKeystoreFileErrNotifEnable=ctsSwKeystoreFileErrNotifEnable, ctsEnvDataSource=ctsEnvDataSource, ctsAuthzCacheFileErrNotif=ctsAuthzCacheFileErrNotif, ctsSapRandomNumberFailNotifEnable=ctsSapRandomNumberFailNotifEnable, ctsCriticalAuthPeerSgt=ctsCriticalAuthPeerSgt, ctsCredentialsClearAll=ctsCredentialsClearAll, ctsPacTimeToRefresh=ctsPacTimeToRefresh, ciscoTrustSecSgtAssignmentGroup=ciscoTrustSecSgtAssignmentGroup, ctsCacheEnabled=ctsCacheEnabled, ciscoTrustSecMIBNotifs=ciscoTrustSecMIBNotifs, ctsKeystoreFwResets=ctsKeystoreFwResets, ctsKeystoreRxTimeouts=ctsKeystoreRxTimeouts, ctsPacAcsAuthId=ctsPacAcsAuthId, ctsPacStatus=ctsPacStatus, ctsSwKeystoreSyncFailNotifEnable=ctsSwKeystoreSyncFailNotifEnable, ciscoTrustSecCrtclAuthGroup=ciscoTrustSecCrtclAuthGroup, ctsPacExpirationTime=ctsPacExpirationTime, ctsKeystoreType=ctsKeystoreType, PYSNMP_MODULE_ID=ciscoTrustSecMIB, ctsCacheClear=ctsCacheClear, ciscoTrustSecFileErrNotifsInfoGroup=ciscoTrustSecFileErrNotifsInfoGroup, ctsKeystorePacRecordTable=ctsKeystorePacRecordTable, ctsSwKeystoreSyncFailNotifReason=ctsSwKeystoreSyncFailNotifReason, ctsEnvSecurityGroupNameEntry=ctsEnvSecurityGroupNameEntry, ctsCacheFileAccessErrNotifEnable=ctsCacheFileAccessErrNotifEnable, ciscoTrustSecEnvDataGroup=ciscoTrustSecEnvDataGroup, ciscoTrustSecCacheFileNotifsControlGroup=ciscoTrustSecCacheFileNotifsControlGroup, ctsCriticalAuthDefaultPmk=ctsCriticalAuthDefaultPmk, ctsEnvDataAction=ctsEnvDataAction, ctsFileErrNotifReason=ctsFileErrNotifReason, ctsEnvDataLastUpdate=ctsEnvDataLastUpdate, ctsNotifsControlObjects=ctsNotifsControlObjects, ctsEnvSecurityGroupNameSgtGenId=ctsEnvSecurityGroupNameSgtGenId, ctsSecurityGroupTagId=ctsSecurityGroupTagId, ciscoTrustSecMIBCompliance4=ciscoTrustSecMIBCompliance4, ciscoTrustSecCredentialsGroup=ciscoTrustSecCredentialsGroup, ctsEnvDataRefreshInterval=ctsEnvDataRefreshInterval, ctsPacType=ctsPacType, ctsNotifsInfoObjects=ctsNotifsInfoObjects, ctsKeystorePasswordRecordType=ctsKeystorePasswordRecordType, ctsEnvDataLastDownloadStatus=ctsEnvDataLastDownloadStatus, ctsDeviceId=ctsDeviceId, ctsKeystorePasswordRecordName=ctsKeystorePasswordRecordName, ctsKeystorePacRecordEntry=ctsKeystorePacRecordEntry, ctsDevicePassword=ctsDevicePassword, ciscoTrustSecMIBObjects=ciscoTrustSecMIBObjects, ciscoTrustSecSwKeystoreNotifsInfoGroup=ciscoTrustSecSwKeystoreNotifsInfoGroup, ctsKeystoreFwAlerts=ctsKeystoreFwAlerts, ciscoTrustSecEnvSecGroupNameGroup=ciscoTrustSecEnvSecGroupNameGroup, ciscoTrustSecMIBCompliance=ciscoTrustSecMIBCompliance, ctsKeystorePacRecordName=ctsKeystorePacRecordName, ctsSwKeystoreSyncFailNotif=ctsSwKeystoreSyncFailNotif, ctsEnvDataTimeToRefresh=ctsEnvDataTimeToRefresh, ciscoTrustSecMIBCompliance2=ciscoTrustSecMIBCompliance2, ctsEnvironmentDataObjects=ctsEnvironmentDataObjects, ciscoTrustSecHwKeystoreInfoGroup=ciscoTrustSecHwKeystoreInfoGroup, ctsCriticalAuthFallback=ctsCriticalAuthFallback, ctsKeystorePasswordRecordEntry=ctsKeystorePasswordRecordEntry, ciscoTrustSecCtrDrbgNotifsGroup=ciscoTrustSecCtrDrbgNotifsGroup, ctsKeystoreRxBadFragmentLengths=ctsKeystoreRxBadFragmentLengths, ctsPacAcsDescription=ctsPacAcsDescription, ctsNotifMessageString=ctsNotifMessageString, ctsCriticalAuthEnabled=ctsCriticalAuthEnabled, ciscoTrustSecSgtGroup=ciscoTrustSecSgtGroup, ctsCacheObjects=ctsCacheObjects, ctsEnvSecurityGroupNameSgt=ctsEnvSecurityGroupNameSgt, ctsDevicePasswordType=ctsDevicePasswordType, ciscoTrustSecMIB=ciscoTrustSecMIB)
