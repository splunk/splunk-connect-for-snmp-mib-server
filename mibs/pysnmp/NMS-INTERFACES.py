#
# PySNMP MIB module NMS-INTERFACES (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NMS-INTERFACES
# Produced by pysmi-0.3.4 at Mon Apr 29 20:12:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
nmslocal, = mibBuilder.importSymbols("NMS-SMI", "nmslocal")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, iso, Integer32, Counter64, Counter32, TimeTicks, Gauge32, ModuleIdentity, Unsigned32, Bits, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "Integer32", "Counter64", "Counter32", "TimeTicks", "Gauge32", "ModuleIdentity", "Unsigned32", "Bits", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nmslinterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2))
nmslifTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1), )
if mibBuilder.loadTexts: nmslifTable.setStatus('mandatory')
nmslifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nmslifEntry.setStatus('mandatory')
nmslocIfHardType = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfHardType.setStatus('mandatory')
nmslocIfLineProt = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfLineProt.setStatus('mandatory')
nmslocIfLastIn = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfLastIn.setStatus('mandatory')
nmslocIfLastOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfLastOut.setStatus('mandatory')
nmslocIfLastOutHang = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfLastOutHang.setStatus('mandatory')
nmslocIfInBitsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfInBitsSec.setStatus('mandatory')
nmslocIfInPktsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfInPktsSec.setStatus('mandatory')
nmslocIfOutBitsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfOutBitsSec.setStatus('mandatory')
nmslocIfOutPktsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfOutPktsSec.setStatus('mandatory')
nmslocIfInRunts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfInRunts.setStatus('mandatory')
nmslocIfInGiants = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfInGiants.setStatus('mandatory')
nmslocIfInCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfInCRC.setStatus('mandatory')
nmslocIfInFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfInFrame.setStatus('mandatory')
nmslocIfInOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfInOverrun.setStatus('mandatory')
nmslocIfInIgnored = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfInIgnored.setStatus('mandatory')
nmslocIfInAbort = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfInAbort.setStatus('mandatory')
nmslocIfResets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfResets.setStatus('mandatory')
nmslocIfRestarts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfRestarts.setStatus('mandatory')
nmslocIfKeep = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfKeep.setStatus('mandatory')
nmslocIfReason = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfReason.setStatus('mandatory')
nmslocIfCarTrans = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfCarTrans.setStatus('mandatory')
nmslocIfReliab = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfReliab.setStatus('mandatory')
nmslocIfDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfDelay.setStatus('mandatory')
nmslocIfLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfLoad.setStatus('mandatory')
nmslocIfCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfCollisions.setStatus('mandatory')
nmslocIfInputQueueDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfInputQueueDrops.setStatus('mandatory')
nmslocIfOutputQueueDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfOutputQueueDrops.setStatus('mandatory')
nmslocIfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 28), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmslocIfDescr.setStatus('mandatory')
nmslocIfSlowInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfSlowInPkts.setStatus('mandatory')
nmslocIfSlowOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfSlowOutPkts.setStatus('mandatory')
nmslocIfSlowInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfSlowInOctets.setStatus('mandatory')
nmslocIfSlowOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfSlowOutOctets.setStatus('mandatory')
nmslocIfFastInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfFastInPkts.setStatus('mandatory')
nmslocIfFastOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfFastOutPkts.setStatus('mandatory')
nmslocIfFastInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfFastInOctets.setStatus('mandatory')
nmslocIfFastOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfFastOutOctets.setStatus('mandatory')
nmslocIfotherInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfotherInPkts.setStatus('mandatory')
nmslocIfotherOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfotherOutPkts.setStatus('mandatory')
nmslocIfotherInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfotherInOctets.setStatus('mandatory')
nmslocIfotherOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfotherOutOctets.setStatus('mandatory')
nmslocIfipInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfipInPkts.setStatus('mandatory')
nmslocIfipOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfipOutPkts.setStatus('mandatory')
nmslocIfipInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfipInOctets.setStatus('mandatory')
nmslocIfipOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfipOutOctets.setStatus('mandatory')
nmslocIfdecnetInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfdecnetInPkts.setStatus('mandatory')
nmslocIfdecnetOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfdecnetOutPkts.setStatus('mandatory')
nmslocIfdecnetInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfdecnetInOctets.setStatus('mandatory')
nmslocIfdecnetOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfdecnetOutOctets.setStatus('mandatory')
nmslocIfxnsInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfxnsInPkts.setStatus('mandatory')
nmslocIfxnsOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfxnsOutPkts.setStatus('mandatory')
nmslocIfxnsInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfxnsInOctets.setStatus('mandatory')
nmslocIfxnsOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfxnsOutOctets.setStatus('mandatory')
nmslocIfclnsInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfclnsInPkts.setStatus('mandatory')
nmslocIfclnsOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfclnsOutPkts.setStatus('mandatory')
nmslocIfclnsInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfclnsInOctets.setStatus('mandatory')
nmslocIfclnsOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfclnsOutOctets.setStatus('mandatory')
nmslocIfappletalkInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfappletalkInPkts.setStatus('mandatory')
nmslocIfappletalkOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfappletalkOutPkts.setStatus('mandatory')
nmslocIfappletalkInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfappletalkInOctets.setStatus('mandatory')
nmslocIfappletalkOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfappletalkOutOctets.setStatus('mandatory')
nmslocIfnovellInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfnovellInPkts.setStatus('mandatory')
nmslocIfnovellOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfnovellOutPkts.setStatus('mandatory')
nmslocIfnovellInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfnovellInOctets.setStatus('mandatory')
nmslocIfnovellOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfnovellOutOctets.setStatus('mandatory')
nmslocIfapolloInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfapolloInPkts.setStatus('mandatory')
nmslocIfapolloOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 67), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfapolloOutPkts.setStatus('mandatory')
nmslocIfapolloInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfapolloInOctets.setStatus('mandatory')
nmslocIfapolloOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfapolloOutOctets.setStatus('mandatory')
nmslocIfvinesInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfvinesInPkts.setStatus('mandatory')
nmslocIfvinesOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 71), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfvinesOutPkts.setStatus('mandatory')
nmslocIfvinesInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 72), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfvinesInOctets.setStatus('mandatory')
nmslocIfvinesOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 73), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfvinesOutOctets.setStatus('mandatory')
nmslocIfbridgedInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 74), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfbridgedInPkts.setStatus('mandatory')
nmslocIfbridgedOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 75), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfbridgedOutPkts.setStatus('mandatory')
nmslocIfbridgedInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 76), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfbridgedInOctets.setStatus('mandatory')
nmslocIfbridgedOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 77), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfbridgedOutOctets.setStatus('mandatory')
nmslocIfsrbInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 78), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfsrbInPkts.setStatus('mandatory')
nmslocIfsrbOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 79), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfsrbOutPkts.setStatus('mandatory')
nmslocIfsrbInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 80), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfsrbInOctets.setStatus('mandatory')
nmslocIfsrbOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 81), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfsrbOutOctets.setStatus('mandatory')
nmslocIfchaosInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 82), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfchaosInPkts.setStatus('mandatory')
nmslocIfchaosOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 83), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfchaosOutPkts.setStatus('mandatory')
nmslocIfchaosInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 84), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfchaosInOctets.setStatus('mandatory')
nmslocIfchaosOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 85), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfchaosOutOctets.setStatus('mandatory')
nmslocIfpupInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 86), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfpupInPkts.setStatus('mandatory')
nmslocIfpupOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 87), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfpupOutPkts.setStatus('mandatory')
nmslocIfpupInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 88), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfpupInOctets.setStatus('mandatory')
nmslocIfpupOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 89), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfpupOutOctets.setStatus('mandatory')
nmslocIfmopInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 90), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfmopInPkts.setStatus('mandatory')
nmslocIfmopOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 91), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfmopOutPkts.setStatus('mandatory')
nmslocIfmopInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 92), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfmopInOctets.setStatus('mandatory')
nmslocIfmopOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 93), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfmopOutOctets.setStatus('mandatory')
nmslocIflanmanInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 94), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIflanmanInPkts.setStatus('mandatory')
nmslocIflanmanOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 95), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIflanmanOutPkts.setStatus('mandatory')
nmslocIflanmanInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 96), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIflanmanInOctets.setStatus('mandatory')
nmslocIflanmanOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 97), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIflanmanOutOctets.setStatus('mandatory')
nmslocIfstunInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 98), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfstunInPkts.setStatus('mandatory')
nmslocIfstunOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 99), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfstunOutPkts.setStatus('mandatory')
nmslocIfstunInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 100), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfstunInOctets.setStatus('mandatory')
nmslocIfstunOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 101), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfstunOutOctets.setStatus('mandatory')
nmslocIfspanInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 102), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfspanInPkts.setStatus('mandatory')
nmslocIfspanOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 103), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfspanOutPkts.setStatus('mandatory')
nmslocIfspanInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 104), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfspanInOctets.setStatus('mandatory')
nmslocIfspanOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 105), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfspanOutOctets.setStatus('mandatory')
nmslocIfarpInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 106), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfarpInPkts.setStatus('mandatory')
nmslocIfarpOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 107), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfarpOutPkts.setStatus('mandatory')
nmslocIfarpInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 108), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfarpInOctets.setStatus('mandatory')
nmslocIfarpOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 109), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfarpOutOctets.setStatus('mandatory')
nmslocIfprobeInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 110), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfprobeInPkts.setStatus('mandatory')
nmslocIfprobeOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 111), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfprobeOutPkts.setStatus('mandatory')
nmslocIfprobeInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 112), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfprobeInOctets.setStatus('mandatory')
nmslocIfprobeOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 113), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfprobeOutOctets.setStatus('mandatory')
nmslocIfDribbleInputs = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 1, 1, 114), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfDribbleInputs.setStatus('mandatory')
nmslFSIPTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 2), )
if mibBuilder.loadTexts: nmslFSIPTable.setStatus('mandatory')
nmslFSIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 2, 1), ).setIndexNames((0, "NMS-INTERFACES", "nmslocIfFSIPIndex"))
if mibBuilder.loadTexts: nmslFSIPEntry.setStatus('mandatory')
nmslocIfFSIPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfFSIPIndex.setStatus('mandatory')
nmslocIfFSIPtype = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notAvailable", 1), ("dte", 2), ("dce", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfFSIPtype.setStatus('mandatory')
nmslocIfFSIPrts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notAvailable", 1), ("up", 2), ("down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfFSIPrts.setStatus('mandatory')
nmslocIfFSIPcts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notAvailable", 1), ("up", 2), ("down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfFSIPcts.setStatus('mandatory')
nmslocIfFSIPdtr = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notAvailable", 1), ("up", 2), ("down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfFSIPdtr.setStatus('mandatory')
nmslocIfFSIPdcd = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notAvailable", 1), ("up", 2), ("down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfFSIPdcd.setStatus('mandatory')
nmslocIfFSIPdsr = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notAvailable", 1), ("up", 2), ("down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfFSIPdsr.setStatus('mandatory')
nmslocIfFSIPrxClockrate = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfFSIPrxClockrate.setStatus('mandatory')
nmslocIfFSIPrxClockrateHi = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfFSIPrxClockrateHi.setStatus('mandatory')
nmslocIfFSIPportType = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("noCable", 1), ("rs232", 2), ("rs422", 3), ("rs423", 4), ("v35", 5), ("x21", 6), ("rs449", 7), ("rs530", 8), ("hssi", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmslocIfFSIPportType.setStatus('mandatory')
mibBuilder.exportSymbols("NMS-INTERFACES", nmslocIfarpInPkts=nmslocIfarpInPkts, nmslocIfotherOutOctets=nmslocIfotherOutOctets, nmslocIfFSIPcts=nmslocIfFSIPcts, nmslocIfFSIPdcd=nmslocIfFSIPdcd, nmslocIfsrbOutOctets=nmslocIfsrbOutOctets, nmslocIfFSIPrxClockrateHi=nmslocIfFSIPrxClockrateHi, nmslocIfFSIPrts=nmslocIfFSIPrts, nmslocIfCarTrans=nmslocIfCarTrans, nmslocIfbridgedInPkts=nmslocIfbridgedInPkts, nmslocIfxnsInPkts=nmslocIfxnsInPkts, nmslocIfmopInOctets=nmslocIfmopInOctets, nmslocIfSlowOutOctets=nmslocIfSlowOutOctets, nmslocIfapolloInOctets=nmslocIfapolloInOctets, nmslocIfappletalkOutOctets=nmslocIfappletalkOutOctets, nmslocIfapolloOutOctets=nmslocIfapolloOutOctets, nmslocIflanmanOutOctets=nmslocIflanmanOutOctets, nmslocIfappletalkInOctets=nmslocIfappletalkInOctets, nmslocIfFSIPdtr=nmslocIfFSIPdtr, nmslocIfipInOctets=nmslocIfipInOctets, nmslocIfdecnetInOctets=nmslocIfdecnetInOctets, nmslocIfSlowInOctets=nmslocIfSlowInOctets, nmslocIfpupOutOctets=nmslocIfpupOutOctets, nmslocIfarpOutPkts=nmslocIfarpOutPkts, nmslocIfSlowInPkts=nmslocIfSlowInPkts, nmslocIfmopOutOctets=nmslocIfmopOutOctets, nmslocIfspanOutOctets=nmslocIfspanOutOctets, nmslocIfDelay=nmslocIfDelay, nmslocIfipInPkts=nmslocIfipInPkts, nmslocIfspanInPkts=nmslocIfspanInPkts, nmslocIfsrbOutPkts=nmslocIfsrbOutPkts, nmslocIfbridgedOutPkts=nmslocIfbridgedOutPkts, nmslocIfpupInOctets=nmslocIfpupInOctets, nmslocIfpupInPkts=nmslocIfpupInPkts, nmslocIfdecnetOutOctets=nmslocIfdecnetOutOctets, nmslocIfmopInPkts=nmslocIfmopInPkts, nmslocIfInIgnored=nmslocIfInIgnored, nmslocIfKeep=nmslocIfKeep, nmslFSIPTable=nmslFSIPTable, nmslocIfchaosOutPkts=nmslocIfchaosOutPkts, nmslocIfarpInOctets=nmslocIfarpInOctets, nmslocIfOutPktsSec=nmslocIfOutPktsSec, nmslocIfappletalkOutPkts=nmslocIfappletalkOutPkts, nmslinterfaces=nmslinterfaces, nmslocIfdecnetOutPkts=nmslocIfdecnetOutPkts, nmslocIfotherOutPkts=nmslocIfotherOutPkts, nmslocIfxnsOutOctets=nmslocIfxnsOutOctets, nmslocIfsrbInOctets=nmslocIfsrbInOctets, nmslocIfResets=nmslocIfResets, nmslocIfchaosInOctets=nmslocIfchaosInOctets, nmslocIfInBitsSec=nmslocIfInBitsSec, nmslocIfSlowOutPkts=nmslocIfSlowOutPkts, nmslocIfarpOutOctets=nmslocIfarpOutOctets, nmslocIfprobeInOctets=nmslocIfprobeInOctets, nmslocIfFastInPkts=nmslocIfFastInPkts, nmslocIfnovellOutPkts=nmslocIfnovellOutPkts, nmslocIfxnsOutPkts=nmslocIfxnsOutPkts, nmslocIfappletalkInPkts=nmslocIfappletalkInPkts, nmslocIfvinesInPkts=nmslocIfvinesInPkts, nmslocIfFastInOctets=nmslocIfFastInOctets, nmslocIfLastOut=nmslocIfLastOut, nmslocIfotherInPkts=nmslocIfotherInPkts, nmslocIfchaosInPkts=nmslocIfchaosInPkts, nmslocIfDescr=nmslocIfDescr, nmslocIfLineProt=nmslocIfLineProt, nmslocIfInCRC=nmslocIfInCRC, nmslocIfFastOutOctets=nmslocIfFastOutOctets, nmslocIfLastOutHang=nmslocIfLastOutHang, nmslocIfnovellInPkts=nmslocIfnovellInPkts, nmslocIfvinesInOctets=nmslocIfvinesInOctets, nmslocIfclnsInPkts=nmslocIfclnsInPkts, nmslocIfdecnetInPkts=nmslocIfdecnetInPkts, nmslocIfInPktsSec=nmslocIfInPktsSec, nmslocIfDribbleInputs=nmslocIfDribbleInputs, nmslocIfFSIPrxClockrate=nmslocIfFSIPrxClockrate, nmslocIfipOutOctets=nmslocIfipOutOctets, nmslocIfFastOutPkts=nmslocIfFastOutPkts, nmslocIfprobeInPkts=nmslocIfprobeInPkts, nmslFSIPEntry=nmslFSIPEntry, nmslocIfnovellOutOctets=nmslocIfnovellOutOctets, nmslocIfsrbInPkts=nmslocIfsrbInPkts, nmslocIfstunOutOctets=nmslocIfstunOutOctets, nmslocIfInOverrun=nmslocIfInOverrun, nmslocIfclnsInOctets=nmslocIfclnsInOctets, nmslocIfRestarts=nmslocIfRestarts, nmslocIfipOutPkts=nmslocIfipOutPkts, nmslocIflanmanInPkts=nmslocIflanmanInPkts, nmslocIfapolloOutPkts=nmslocIfapolloOutPkts, nmslocIfCollisions=nmslocIfCollisions, nmslocIfbridgedInOctets=nmslocIfbridgedInOctets, nmslocIfOutputQueueDrops=nmslocIfOutputQueueDrops, nmslocIfpupOutPkts=nmslocIfpupOutPkts, nmslocIfspanOutPkts=nmslocIfspanOutPkts, nmslocIfLastIn=nmslocIfLastIn, nmslocIfbridgedOutOctets=nmslocIfbridgedOutOctets, nmslocIfInRunts=nmslocIfInRunts, nmslocIfReliab=nmslocIfReliab, nmslocIfprobeOutPkts=nmslocIfprobeOutPkts, nmslocIfapolloInPkts=nmslocIfapolloInPkts, nmslocIfstunInOctets=nmslocIfstunInOctets, nmslifTable=nmslifTable, nmslocIflanmanInOctets=nmslocIflanmanInOctets, nmslocIfInAbort=nmslocIfInAbort, nmslocIfprobeOutOctets=nmslocIfprobeOutOctets, nmslocIfInFrame=nmslocIfInFrame, nmslocIfmopOutPkts=nmslocIfmopOutPkts, nmslocIfxnsInOctets=nmslocIfxnsInOctets, nmslocIfspanInOctets=nmslocIfspanInOctets, nmslocIfvinesOutPkts=nmslocIfvinesOutPkts, nmslocIfLoad=nmslocIfLoad, nmslocIfstunInPkts=nmslocIfstunInPkts, nmslocIfFSIPIndex=nmslocIfFSIPIndex, nmslocIfchaosOutOctets=nmslocIfchaosOutOctets, nmslocIfFSIPdsr=nmslocIfFSIPdsr, nmslocIfvinesOutOctets=nmslocIfvinesOutOctets, nmslocIfInputQueueDrops=nmslocIfInputQueueDrops, nmslocIfHardType=nmslocIfHardType, nmslocIfFSIPportType=nmslocIfFSIPportType, nmslocIfOutBitsSec=nmslocIfOutBitsSec, nmslocIfReason=nmslocIfReason, nmslocIfotherInOctets=nmslocIfotherInOctets, nmslocIflanmanOutPkts=nmslocIflanmanOutPkts, nmslocIfclnsOutOctets=nmslocIfclnsOutOctets, nmslocIfnovellInOctets=nmslocIfnovellInOctets, nmslocIfclnsOutPkts=nmslocIfclnsOutPkts, nmslocIfstunOutPkts=nmslocIfstunOutPkts, nmslifEntry=nmslifEntry, nmslocIfFSIPtype=nmslocIfFSIPtype, nmslocIfInGiants=nmslocIfInGiants)
