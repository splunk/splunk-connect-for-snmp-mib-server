#
# PySNMP MIB module ZHONE-PHY-WTN-RADIO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZHONE-PHY-WTN-RADIO-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:41:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso, ObjectIdentity, MibIdentifier, ModuleIdentity, TimeTicks, Counter32, Unsigned32, NotificationType, Bits, Gauge32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "TimeTicks", "Counter32", "Unsigned32", "NotificationType", "Bits", "Gauge32", "Integer32")
DisplayString, TextualConvention, TruthValue, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "TimeStamp")
SkyZhoneRadioChannelNumber, SkyZhoneScientificNotation = mibBuilder.importSymbols("ZHONE-RADIO-TC-MIB", "SkyZhoneRadioChannelNumber", "SkyZhoneScientificNotation")
zhoneModules, zhoneRadio = mibBuilder.importSymbols("Zhone", "zhoneModules", "zhoneRadio")
ZhoneAdminString, = mibBuilder.importSymbols("Zhone-TC", "ZhoneAdminString")
zhonePhyWtnRadio = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 6, 106))
zhonePhyWtnRadio.setRevisions(('2001-07-11 13:00', '2001-06-07 14:14', '2001-05-18 10:02', '2000-11-24 08:18', '2000-11-21 15:35', '2000-11-03 09:44',))
if mibBuilder.loadTexts: zhonePhyWtnRadio.setLastUpdated('190011031129Z')
if mibBuilder.loadTexts: zhonePhyWtnRadio.setOrganization('Zhone Technologies, Inc.')
wtnConfigTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1), )
if mibBuilder.loadTexts: wtnConfigTable.setStatus('current')
wtnConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1), ).setIndexNames((0, "ZHONE-PHY-WTN-RADIO-MIB", "wtnRadioIfIndex"))
if mibBuilder.loadTexts: wtnConfigEntry.setStatus('current')
wtnRadioIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: wtnRadioIfIndex.setStatus('current')
wtnActiveChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 2), SkyZhoneRadioChannelNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtnActiveChannelNumber.setStatus('current')
wtnActiveTransmitFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 3), SkyZhoneScientificNotation()).setUnits('Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtnActiveTransmitFrequency.setStatus('current')
wtnStandbyChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 4), SkyZhoneRadioChannelNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtnStandbyChannelNumber.setStatus('current')
wtnStandbyTransmitFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 5), SkyZhoneScientificNotation()).setUnits('Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtnStandbyTransmitFrequency.setStatus('current')
wtnAutoChannelSwitchEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtnAutoChannelSwitchEnable.setStatus('current')
wtnChannelSeparation = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("na", 0), ("s1232MHz", 1), ("s1200MHz", 2), ("s1008MHz", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtnChannelSeparation.setStatus('current')
wtnRadioAmplifiersEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtnRadioAmplifiersEnable.setStatus('current')
wtnRxBERThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 9), SkyZhoneScientificNotation()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtnRxBERThresh.setStatus('current')
wtnRxBERHysteresisWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 10), SkyZhoneScientificNotation()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtnRxBERHysteresisWindow.setStatus('current')
wtnAntennaSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 6))).clone(namedValues=NamedValues(("oneFoot", 1), ("twoFeet", 2), ("fourFeet", 4), ("sixFeet", 6))).clone('sixFeet')).setUnits('feet').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtnAntennaSize.setStatus('current')
wtnIduOduCableLength = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300))).setUnits('feet').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtnIduOduCableLength.setStatus('current')
wtnRssiThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-99, -30)).clone(-80)).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtnRssiThresh.setStatus('current')
wtnRssiHysteresisWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 14), Integer32().clone(10)).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtnRssiHysteresisWindow.setStatus('current')
wtnTrapsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtnTrapsEnable.setStatus('current')
wtnOduLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loopbackOn", 1), ("loopbackOff", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtnOduLoopback.setStatus('current')
wtnOduIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 17), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtnOduIdentifier.setStatus('current')
wtnTxLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 45))).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtnTxLevel.setStatus('current')
wtnStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 5, 8, 2), )
if mibBuilder.loadTexts: wtnStatusTable.setStatus('current')
wtnStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 5, 8, 2, 1), )
wtnConfigEntry.registerAugmentions(("ZHONE-PHY-WTN-RADIO-MIB", "wtnStatusEntry"))
wtnStatusEntry.setIndexNames(*wtnConfigEntry.getIndexNames())
if mibBuilder.loadTexts: wtnStatusEntry.setStatus('current')
wtnCriticalAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 2, 1, 1), Bits().clone(namedValues=NamedValues(("rssiDeviation", 0), ("iduOOL", 1), ("oduTempAlert", 2), ("rxBerAlarm", 3), ("rxEbnoAlarm", 4), ("unused5", 5), ("unused6", 6), ("unused7", 7), ("iduEquipFail", 8), ("oduEquipFail", 9), ("iduOduLinkFail", 10), ("mcChannelFail", 11), ("unused12", 12), ("unused13", 13), ("unused14", 14), ("serviceAffected", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtnCriticalAlarmStatus.setStatus('current')
wtnCriticalAlarmStatusLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 2, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtnCriticalAlarmStatusLastChange.setStatus('current')
wtnMinorAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 2, 1, 3), Bits().clone(namedValues=NamedValues(("rssiDeviation", 0), ("iduOOL", 1), ("oduTempAlert", 2), ("rxBerAlarm", 3), ("rxEbnoAlarm", 4), ("unused5", 5), ("unused6", 6), ("unused7", 7), ("iduEquipFail", 8), ("oduEquipFail", 9), ("iduOduLinkFail", 10), ("mcChannelFail", 11), ("unused12", 12), ("unused13", 13), ("unused14", 14), ("serviceAffected", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtnMinorAlarmStatus.setStatus('current')
wtnMinorAlarmStatusLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 2, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtnMinorAlarmStatusLastChange.setStatus('current')
wtnOduTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtnOduTemperature.setStatus('current')
wtnReceiveFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 2, 1, 6), SkyZhoneScientificNotation()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: wtnReceiveFrequency.setStatus('current')
wtnInfoTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 5, 8, 3), )
if mibBuilder.loadTexts: wtnInfoTable.setStatus('current')
wtnInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 5, 8, 3, 1), )
wtnConfigEntry.registerAugmentions(("ZHONE-PHY-WTN-RADIO-MIB", "wtnInfoEntry"))
wtnInfoEntry.setIndexNames(*wtnConfigEntry.getIndexNames())
if mibBuilder.loadTexts: wtnInfoEntry.setStatus('current')
wtnOduSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 3, 1, 1), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtnOduSerialNumber.setStatus('current')
wtnOduMfgCLEICode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 3, 1, 2), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtnOduMfgCLEICode.setStatus('current')
wtnSnapshotTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 5, 8, 4), )
if mibBuilder.loadTexts: wtnSnapshotTable.setStatus('current')
wtnSnapshotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 5, 8, 4, 1), )
wtnConfigEntry.registerAugmentions(("ZHONE-PHY-WTN-RADIO-MIB", "wtnSnapshotEntry"))
wtnSnapshotEntry.setIndexNames(*wtnConfigEntry.getIndexNames())
if mibBuilder.loadTexts: wtnSnapshotEntry.setStatus('current')
wtnRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-90, 0))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: wtnRSSI.setStatus('current')
wtnTSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 45))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: wtnTSSI.setStatus('current')
wtnRxBerFloat = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 4, 1, 3), SkyZhoneScientificNotation()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtnRxBerFloat.setStatus('current')
wtnRcvEbNoFloat = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 4, 1, 4), SkyZhoneScientificNotation()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtnRcvEbNoFloat.setStatus('current')
wtnTrapData = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5))
wtnTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 0))
wtnIduEquipFailCritical = NotificationType((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 0, 1)).setObjects(("ZHONE-PHY-WTN-RADIO-MIB", "wtnTrapCondition"), ("ZHONE-PHY-WTN-RADIO-MIB", "wtnServiceAffected"))
if mibBuilder.loadTexts: wtnIduEquipFailCritical.setStatus('current')
wtnIduEquipFail = NotificationType((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 0, 2)).setObjects(("ZHONE-PHY-WTN-RADIO-MIB", "wtnTrapCondition"), ("ZHONE-PHY-WTN-RADIO-MIB", "wtnServiceAffected"))
if mibBuilder.loadTexts: wtnIduEquipFail.setStatus('current')
wtnIduOduLinkFailCritical = NotificationType((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 0, 3)).setObjects(("ZHONE-PHY-WTN-RADIO-MIB", "wtnTrapCondition"), ("ZHONE-PHY-WTN-RADIO-MIB", "wtnServiceAffected"))
if mibBuilder.loadTexts: wtnIduOduLinkFailCritical.setStatus('current')
wtnIduOduLinkFail = NotificationType((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 0, 4)).setObjects(("ZHONE-PHY-WTN-RADIO-MIB", "wtnTrapCondition"), ("ZHONE-PHY-WTN-RADIO-MIB", "wtnServiceAffected"))
if mibBuilder.loadTexts: wtnIduOduLinkFail.setStatus('current')
wtnIduOutOfLockCritical = NotificationType((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 0, 5)).setObjects(("ZHONE-PHY-WTN-RADIO-MIB", "wtnTrapCondition"), ("ZHONE-PHY-WTN-RADIO-MIB", "wtnServiceAffected"))
if mibBuilder.loadTexts: wtnIduOutOfLockCritical.setStatus('current')
wtnIduOutOfLock = NotificationType((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 0, 6)).setObjects(("ZHONE-PHY-WTN-RADIO-MIB", "wtnTrapCondition"), ("ZHONE-PHY-WTN-RADIO-MIB", "wtnServiceAffected"))
if mibBuilder.loadTexts: wtnIduOutOfLock.setStatus('current')
wtnMcChannelFailCritical = NotificationType((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 0, 7)).setObjects(("ZHONE-PHY-WTN-RADIO-MIB", "wtnTrapCondition"), ("ZHONE-PHY-WTN-RADIO-MIB", "wtnServiceAffected"))
if mibBuilder.loadTexts: wtnMcChannelFailCritical.setStatus('current')
wtnMcChannelFail = NotificationType((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 0, 8)).setObjects(("ZHONE-PHY-WTN-RADIO-MIB", "wtnTrapCondition"), ("ZHONE-PHY-WTN-RADIO-MIB", "wtnServiceAffected"))
if mibBuilder.loadTexts: wtnMcChannelFail.setStatus('current')
wtnOduEquipFailCritical = NotificationType((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 0, 9)).setObjects(("ZHONE-PHY-WTN-RADIO-MIB", "wtnTrapCondition"), ("ZHONE-PHY-WTN-RADIO-MIB", "wtnServiceAffected"))
if mibBuilder.loadTexts: wtnOduEquipFailCritical.setStatus('current')
wtnOduEquipFail = NotificationType((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 0, 10)).setObjects(("ZHONE-PHY-WTN-RADIO-MIB", "wtnTrapCondition"), ("ZHONE-PHY-WTN-RADIO-MIB", "wtnServiceAffected"))
if mibBuilder.loadTexts: wtnOduEquipFail.setStatus('current')
wtnOduTempAlertCritical = NotificationType((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 0, 11)).setObjects(("ZHONE-PHY-WTN-RADIO-MIB", "wtnTrapCondition"), ("ZHONE-PHY-WTN-RADIO-MIB", "wtnServiceAffected"))
if mibBuilder.loadTexts: wtnOduTempAlertCritical.setStatus('current')
wtnOduTempAlert = NotificationType((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 0, 12)).setObjects(("ZHONE-PHY-WTN-RADIO-MIB", "wtnTrapCondition"), ("ZHONE-PHY-WTN-RADIO-MIB", "wtnServiceAffected"))
if mibBuilder.loadTexts: wtnOduTempAlert.setStatus('current')
wtnRSSIDeviation = NotificationType((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 0, 13)).setObjects(("ZHONE-PHY-WTN-RADIO-MIB", "wtnTrapCondition"), ("ZHONE-PHY-WTN-RADIO-MIB", "wtnServiceAffected"))
if mibBuilder.loadTexts: wtnRSSIDeviation.setStatus('current')
wtnBerAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 0, 14)).setObjects(("ZHONE-PHY-WTN-RADIO-MIB", "wtnTrapCondition"), ("ZHONE-PHY-WTN-RADIO-MIB", "wtnServiceAffected"))
if mibBuilder.loadTexts: wtnBerAlarm.setStatus('current')
wtnEbNoAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 0, 15)).setObjects(("ZHONE-PHY-WTN-RADIO-MIB", "wtnTrapCondition"), ("ZHONE-PHY-WTN-RADIO-MIB", "wtnServiceAffected"))
if mibBuilder.loadTexts: wtnEbNoAlarm.setStatus('current')
wtnTrapCondition = MibScalar((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("conditionPresent", 1), ("conditionCleared", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wtnTrapCondition.setStatus('current')
wtnServiceAffected = MibScalar((1, 3, 6, 1, 4, 1, 5504, 5, 8, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("serviceAffected", 1), ("serviceNotAffected", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wtnServiceAffected.setStatus('current')
radioTotalTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 5, 8, 6), )
if mibBuilder.loadTexts: radioTotalTable.setStatus('current')
radioTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 5, 8, 6, 1), )
wtnConfigEntry.registerAugmentions(("ZHONE-PHY-WTN-RADIO-MIB", "radioTotalEntry"))
radioTotalEntry.setIndexNames(*wtnConfigEntry.getIndexNames())
if mibBuilder.loadTexts: radioTotalEntry.setStatus('current')
radioTotalES = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 6, 1, 1), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioTotalES.setStatus('current')
radioTotalSES = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 6, 1, 2), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioTotalSES.setStatus('current')
radioTotalUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 8, 6, 1, 3), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioTotalUAS.setStatus('current')
mibBuilder.exportSymbols("ZHONE-PHY-WTN-RADIO-MIB", wtnBerAlarm=wtnBerAlarm, wtnIduOduLinkFailCritical=wtnIduOduLinkFailCritical, wtnServiceAffected=wtnServiceAffected, wtnConfigTable=wtnConfigTable, wtnActiveChannelNumber=wtnActiveChannelNumber, wtnTrapsEnable=wtnTrapsEnable, wtnRcvEbNoFloat=wtnRcvEbNoFloat, wtnAutoChannelSwitchEnable=wtnAutoChannelSwitchEnable, wtnRadioIfIndex=wtnRadioIfIndex, wtnIduOutOfLock=wtnIduOutOfLock, wtnRxBERThresh=wtnRxBERThresh, wtnOduLoopback=wtnOduLoopback, wtnTraps=wtnTraps, wtnRssiHysteresisWindow=wtnRssiHysteresisWindow, wtnOduEquipFail=wtnOduEquipFail, wtnIduOduCableLength=wtnIduOduCableLength, wtnOduTempAlert=wtnOduTempAlert, wtnMinorAlarmStatusLastChange=wtnMinorAlarmStatusLastChange, wtnIduEquipFailCritical=wtnIduEquipFailCritical, wtnOduIdentifier=wtnOduIdentifier, wtnOduSerialNumber=wtnOduSerialNumber, wtnStandbyChannelNumber=wtnStandbyChannelNumber, wtnRSSIDeviation=wtnRSSIDeviation, radioTotalES=radioTotalES, wtnOduTemperature=wtnOduTemperature, wtnIduEquipFail=wtnIduEquipFail, wtnRxBERHysteresisWindow=wtnRxBERHysteresisWindow, wtnOduTempAlertCritical=wtnOduTempAlertCritical, radioTotalSES=radioTotalSES, wtnInfoTable=wtnInfoTable, zhonePhyWtnRadio=zhonePhyWtnRadio, wtnChannelSeparation=wtnChannelSeparation, wtnTrapCondition=wtnTrapCondition, wtnTrapData=wtnTrapData, wtnOduEquipFailCritical=wtnOduEquipFailCritical, wtnStandbyTransmitFrequency=wtnStandbyTransmitFrequency, radioTotalTable=radioTotalTable, wtnStatusEntry=wtnStatusEntry, wtnOduMfgCLEICode=wtnOduMfgCLEICode, wtnIduOutOfLockCritical=wtnIduOutOfLockCritical, wtnStatusTable=wtnStatusTable, wtnReceiveFrequency=wtnReceiveFrequency, wtnRssiThresh=wtnRssiThresh, wtnConfigEntry=wtnConfigEntry, wtnMcChannelFailCritical=wtnMcChannelFailCritical, wtnRSSI=wtnRSSI, wtnSnapshotEntry=wtnSnapshotEntry, PYSNMP_MODULE_ID=zhonePhyWtnRadio, wtnTSSI=wtnTSSI, wtnRxBerFloat=wtnRxBerFloat, wtnTxLevel=wtnTxLevel, wtnMcChannelFail=wtnMcChannelFail, wtnActiveTransmitFrequency=wtnActiveTransmitFrequency, wtnInfoEntry=wtnInfoEntry, radioTotalUAS=radioTotalUAS, wtnCriticalAlarmStatus=wtnCriticalAlarmStatus, wtnCriticalAlarmStatusLastChange=wtnCriticalAlarmStatusLastChange, wtnAntennaSize=wtnAntennaSize, wtnSnapshotTable=wtnSnapshotTable, wtnMinorAlarmStatus=wtnMinorAlarmStatus, wtnIduOduLinkFail=wtnIduOduLinkFail, wtnEbNoAlarm=wtnEbNoAlarm, wtnRadioAmplifiersEnable=wtnRadioAmplifiersEnable, radioTotalEntry=radioTotalEntry)
