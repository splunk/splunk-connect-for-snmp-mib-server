#
# PySNMP MIB module HH3C-NQA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-NQA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:15:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
pingCtlOwnerIndex, pingCtlEntry, pingCtlTestName, pingCtlDescr, pingCtlType, pingCtlTargetAddress, pingCtlTargetAddressType = mibBuilder.importSymbols("DISMAN-PING-MIB", "pingCtlOwnerIndex", "pingCtlEntry", "pingCtlTestName", "pingCtlDescr", "pingCtlType", "pingCtlTargetAddress", "pingCtlTargetAddressType")
hh3cRhw, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cRhw")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, TimeTicks, iso, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, Unsigned32, Counter32, IpAddress, Gauge32, MibIdentifier, ObjectIdentity, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "TimeTicks", "iso", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "Unsigned32", "Counter32", "IpAddress", "Gauge32", "MibIdentifier", "ObjectIdentity", "ModuleIdentity")
RowStatus, TextualConvention, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DateAndTime", "DisplayString")
hh3cNqa = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 8, 3))
if mibBuilder.loadTexts: hh3cNqa.setLastUpdated('200608140000Z')
if mibBuilder.loadTexts: hh3cNqa.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cNqaObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1))
hh3cNqaImplementationTypeDomains = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 3, 2))
hh3cNqaUdpEcho = ObjectIdentity((1, 3, 6, 1, 4, 1, 25506, 8, 3, 2, 1))
if mibBuilder.loadTexts: hh3cNqaUdpEcho.setStatus('current')
hh3cNqaTcpconnect = ObjectIdentity((1, 3, 6, 1, 4, 1, 25506, 8, 3, 2, 2))
if mibBuilder.loadTexts: hh3cNqaTcpconnect.setStatus('current')
hh3cNqajitter = ObjectIdentity((1, 3, 6, 1, 4, 1, 25506, 8, 3, 2, 3))
if mibBuilder.loadTexts: hh3cNqajitter.setStatus('current')
hh3cNqaHttp = ObjectIdentity((1, 3, 6, 1, 4, 1, 25506, 8, 3, 2, 4))
if mibBuilder.loadTexts: hh3cNqaHttp.setStatus('current')
hh3cNqadlsw = ObjectIdentity((1, 3, 6, 1, 4, 1, 25506, 8, 3, 2, 5))
if mibBuilder.loadTexts: hh3cNqadlsw.setStatus('current')
hh3cNqadhcp = ObjectIdentity((1, 3, 6, 1, 4, 1, 25506, 8, 3, 2, 6))
if mibBuilder.loadTexts: hh3cNqadhcp.setStatus('current')
hh3cNqaftp = ObjectIdentity((1, 3, 6, 1, 4, 1, 25506, 8, 3, 2, 7))
if mibBuilder.loadTexts: hh3cNqaftp.setStatus('current')
hh3cNqaMIBVersion = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaMIBVersion.setStatus('current')
hh3cNqaCtlTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2), )
if mibBuilder.loadTexts: hh3cNqaCtlTable.setStatus('current')
hh3cNqaCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2, 1), )
pingCtlEntry.registerAugmentions(("HH3C-NQA-MIB", "hh3cNqaCtlEntry"))
hh3cNqaCtlEntry.setIndexNames(*pingCtlEntry.getIndexNames())
if mibBuilder.loadTexts: hh3cNqaCtlEntry.setStatus('current')
hh3cNqaCtlTargetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlTargetPort.setStatus('current')
hh3cNqaCtlSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlSourcePort.setStatus('current')
hh3cNqaCtlTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2, 1, 3), Integer32().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlTTL.setStatus('current')
hh3cNqaCtlJitterAdminInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000)).clone(20)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlJitterAdminInterval.setStatus('current')
hh3cNqaCtlJitterAdminNumPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2, 1, 5), Integer32().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlJitterAdminNumPackets.setStatus('current')
hh3cNqaCtlHttpOperationType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("get", 1), ("post", 2))).clone('get')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlHttpOperationType.setStatus('current')
hh3cNqaCtlHttpOperationString = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlHttpOperationString.setStatus('current')
hh3cNqaCtlFtpOperationType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("get", 1), ("put", 2))).clone('get')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlFtpOperationType.setStatus('current')
hh3cNqaCtlFtpUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlFtpUsername.setStatus('current')
hh3cNqaCtlFtpPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlFtpPassword.setStatus('current')
hh3cNqaCtlFtpOperationString = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlFtpOperationString.setStatus('current')
hh3cNqaCtlVPNInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlVPNInstance.setStatus('current')
hh3cNqaCtlHistoryKeptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(120)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlHistoryKeptTime.setStatus('current')
hh3cNqaCtlHistoryEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlHistoryEnable.setStatus('current')
hh3cNqaCtlICPIFAdvFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlICPIFAdvFactor.setStatus('current')
hh3cNqaCtlCodecType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notDefined", 1), ("g711Alaw", 2), ("g711Ulaw", 3), ("g729A", 4), ("icmpTimestamp", 5))).clone('notDefined')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlCodecType.setStatus('current')
hh3cNqaResultsTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3), )
if mibBuilder.loadTexts: hh3cNqaResultsTable.setStatus('current')
hh3cNqaResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1), ).setIndexNames((0, "DISMAN-PING-MIB", "pingCtlOwnerIndex"), (0, "DISMAN-PING-MIB", "pingCtlTestName"))
if mibBuilder.loadTexts: hh3cNqaResultsEntry.setStatus('current')
hh3cNqaResultsRttNumDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsRttNumDisconnects.setStatus('current')
hh3cNqaResultsRttTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsRttTimeouts.setStatus('current')
hh3cNqaResultsRttBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsRttBusies.setStatus('current')
hh3cNqaResultsRttNoConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsRttNoConnections.setStatus('current')
hh3cNqaResultsRttDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsRttDrops.setStatus('current')
hh3cNqaResultsRttSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsRttSequenceErrors.setStatus('current')
hh3cNqaResultsRttStatsErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsRttStatsErrors.setStatus('current')
hh3cNqaResultsMaxDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 8), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsMaxDelaySD.setStatus('current')
hh3cNqaResultsMaxDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 9), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsMaxDelayDS.setStatus('current')
hh3cNqaResultsLostPacketRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 10), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsLostPacketRatio.setStatus('current')
hh3cNqaResultsPacketLateArrival = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsPacketLateArrival.setStatus('current')
hh3cNqaResultsRttSum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsRttSum.setStatus('current')
hh3cNqaResultsNumOfDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsNumOfDelaySD.setStatus('current')
hh3cNqaResultsMinDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsMinDelaySD.setStatus('current')
hh3cNqaResultsSumDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsSumDelaySD.setStatus('current')
hh3cNqaResultsSum2DelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsSum2DelaySD.setStatus('current')
hh3cNqaResultsNumOfDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsNumOfDelayDS.setStatus('current')
hh3cNqaResultsMinDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsMinDelayDS.setStatus('current')
hh3cNqaResultsSumDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsSumDelayDS.setStatus('current')
hh3cNqaResultsSum2DelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 3, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaResultsSum2DelayDS.setStatus('current')
hh3cNqaJitterStatsTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4), )
if mibBuilder.loadTexts: hh3cNqaJitterStatsTable.setStatus('current')
hh3cNqaJitterStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1), ).setIndexNames((0, "DISMAN-PING-MIB", "pingCtlOwnerIndex"), (0, "DISMAN-PING-MIB", "pingCtlTestName"))
if mibBuilder.loadTexts: hh3cNqaJitterStatsEntry.setStatus('current')
hh3cNqaJitterStatsNumOfRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsNumOfRTT.setStatus('current')
hh3cNqaJitterStatsMinOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsMinOfPositivesSD.setStatus('current')
hh3cNqaJitterStatsMaxOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsMaxOfPositivesSD.setStatus('current')
hh3cNqaJitterStatsNumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsNumOfPositivesSD.setStatus('current')
hh3cNqaJitterStatsSumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsSumOfPositivesSD.setStatus('current')
hh3cNqaJitterStatsSum2PositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsSum2PositivesSD.setStatus('current')
hh3cNqaJitterStatsMinOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsMinOfNegativesSD.setStatus('current')
hh3cNqaJitterStatsMaxOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsMaxOfNegativesSD.setStatus('current')
hh3cNqaJitterStatsNumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsNumOfNegativesSD.setStatus('current')
hh3cNqaJitterStatsSumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsSumOfNegativesSD.setStatus('current')
hh3cNqaJitterStatsSum2NegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsSum2NegativesSD.setStatus('current')
hh3cNqaJitterStatsMinOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsMinOfPositivesDS.setStatus('current')
hh3cNqaJitterStatsMaxOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsMaxOfPositivesDS.setStatus('current')
hh3cNqaJitterStatsNumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsNumOfPositivesDS.setStatus('current')
hh3cNqaJitterStatsSumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsSumOfPositivesDS.setStatus('current')
hh3cNqaJitterStatsSum2PositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsSum2PositivesDS.setStatus('current')
hh3cNqaJitterStatsMinOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsMinOfNegativesDS.setStatus('current')
hh3cNqaJitterStatsMaxOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsMaxOfNegativesDS.setStatus('current')
hh3cNqaJitterStatsNumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsNumOfNegativesDS.setStatus('current')
hh3cNqaJitterStatsSumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsSumOfNegativesDS.setStatus('current')
hh3cNqaJitterStatsSum2NegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsSum2NegativesDS.setStatus('current')
hh3cNqaJitterStatsPacketLossSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsPacketLossSD.setStatus('current')
hh3cNqaJitterStatsPacketLossDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsPacketLossDS.setStatus('current')
hh3cNqaJitterStatsAvePositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsAvePositivesSD.setStatus('current')
hh3cNqaJitterStatsAveNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsAveNegativesSD.setStatus('current')
hh3cNqaJitterStatsAvePositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsAvePositivesDS.setStatus('current')
hh3cNqaJitterStatsAveNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsAveNegativesDS.setStatus('current')
hh3cNqaJitterStatsPktLossUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 28), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsPktLossUnknown.setStatus('current')
hh3cNqaJitterStatsOperOfICPIF = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsOperOfICPIF.setStatus('current')
hh3cNqaJitterStatsOperOfMOS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 4, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaJitterStatsOperOfMOS.setStatus('current')
hh3cNqaAgentEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNqaAgentEnable.setStatus('current')
hh3cNqaTcpServerTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 6), )
if mibBuilder.loadTexts: hh3cNqaTcpServerTable.setStatus('current')
hh3cNqaTcpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 6, 1), ).setIndexNames((0, "HH3C-NQA-MIB", "hh3cNqaTcpServerIpAddress"), (0, "HH3C-NQA-MIB", "hh3cNqaTcpServerPort"))
if mibBuilder.loadTexts: hh3cNqaTcpServerEntry.setStatus('current')
hh3cNqaTcpServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 6, 1, 1), InetAddress().clone(hexValue=""))
if mibBuilder.loadTexts: hh3cNqaTcpServerIpAddress.setStatus('current')
hh3cNqaTcpServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)))
if mibBuilder.loadTexts: hh3cNqaTcpServerPort.setStatus('current')
hh3cNqaTcpServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaTcpServerRowStatus.setStatus('current')
hh3cNqaUdpServerTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 7), )
if mibBuilder.loadTexts: hh3cNqaUdpServerTable.setStatus('current')
hh3cNqaUdpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 7, 1), ).setIndexNames((0, "HH3C-NQA-MIB", "hh3cNqaUdpServerIpAddress"), (0, "HH3C-NQA-MIB", "hh3cNqaUdpServerPort"))
if mibBuilder.loadTexts: hh3cNqaUdpServerEntry.setStatus('current')
hh3cNqaUdpServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 7, 1, 1), InetAddress().clone(hexValue=""))
if mibBuilder.loadTexts: hh3cNqaUdpServerIpAddress.setStatus('current')
hh3cNqaUdpServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)))
if mibBuilder.loadTexts: hh3cNqaUdpServerPort.setStatus('current')
hh3cNqaUdpServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaUdpServerRowStatus.setStatus('current')
hh3cNqaServerEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNqaServerEnable.setStatus('current')
hh3cNqaStatsMaxGroupNumber = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatsMaxGroupNumber.setStatus('current')
hh3cNqaStatisticsCtlTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 10), )
if mibBuilder.loadTexts: hh3cNqaStatisticsCtlTable.setStatus('current')
hh3cNqaStatisticsCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 10, 1), )
pingCtlEntry.registerAugmentions(("HH3C-NQA-MIB", "hh3cNqaStatisticsCtlEntry"))
hh3cNqaStatisticsCtlEntry.setIndexNames(*pingCtlEntry.getIndexNames())
if mibBuilder.loadTexts: hh3cNqaStatisticsCtlEntry.setStatus('current')
hh3cNqaCtlStatisticsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 10, 1, 1), Unsigned32()).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlStatisticsInterval.setStatus('current')
hh3cNqaCtlStatisticsGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 10, 1, 2), Unsigned32().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlStatisticsGroupNumber.setStatus('current')
hh3cNqaCtlStatisticsKeptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(120)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlStatisticsKeptTime.setStatus('current')
hh3cNqaCtlBeginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 10, 1, 4), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlBeginTime.setStatus('current')
hh3cNqaCtlLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 10, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaCtlLifeTime.setStatus('current')
hh3cNqaStatisticsResultsTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11), )
if mibBuilder.loadTexts: hh3cNqaStatisticsResultsTable.setStatus('current')
hh3cNqaStatisticsResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1), ).setIndexNames((0, "DISMAN-PING-MIB", "pingCtlOwnerIndex"), (0, "DISMAN-PING-MIB", "pingCtlTestName"), (0, "HH3C-NQA-MIB", "hh3cNqaStatResIndex"))
if mibBuilder.loadTexts: hh3cNqaStatisticsResultsEntry.setStatus('current')
hh3cNqaStatResIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hh3cNqaStatResIndex.setStatus('current')
hh3cNqaStatResIpTargetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 2), InetAddressType().clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResIpTargetAddressType.setStatus('current')
hh3cNqaStatResIpTargetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 3), InetAddress().clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResIpTargetAddress.setStatus('current')
hh3cNqaStatResMinRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 4), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResMinRtt.setStatus('current')
hh3cNqaStatResMaxRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 5), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResMaxRtt.setStatus('current')
hh3cNqaStatResAverageRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 6), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResAverageRtt.setStatus('current')
hh3cNqaStatResProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResProbeResponses.setStatus('current')
hh3cNqaStatResSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 8), Counter32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResSentProbes.setStatus('current')
hh3cNqaStatResRttSumOfSquares = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 9), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResRttSumOfSquares.setStatus('current')
hh3cNqaStatResStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResStartTime.setStatus('current')
hh3cNqaStatResInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 11), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResInterval.setStatus('current')
hh3cNqaStatResRttNumDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResRttNumDisconnects.setStatus('current')
hh3cNqaStatResRttTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResRttTimeouts.setStatus('current')
hh3cNqaStatResRttBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResRttBusies.setStatus('current')
hh3cNqaStatResRttNoConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResRttNoConnections.setStatus('current')
hh3cNqaStatResRttDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResRttDrops.setStatus('current')
hh3cNqaStatResRttSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResRttSequenceErrors.setStatus('current')
hh3cNqaStatResRttErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResRttErrors.setStatus('current')
hh3cNqaStatResLostPacketRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResLostPacketRatio.setStatus('current')
hh3cNqaStatResPacketLateArrival = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResPacketLateArrival.setStatus('current')
hh3cNqaStatResRttSum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResRttSum.setStatus('current')
hh3cNqaStatResNumOfDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResNumOfDelaySD.setStatus('current')
hh3cNqaStatResMinDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResMinDelaySD.setStatus('current')
hh3cNqaStatResMaxDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResMaxDelaySD.setStatus('current')
hh3cNqaStatResSumDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResSumDelaySD.setStatus('current')
hh3cNqaStatResSum2DelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResSum2DelaySD.setStatus('current')
hh3cNqaStatResNumOfDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResNumOfDelayDS.setStatus('current')
hh3cNqaStatResMinDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResMinDelayDS.setStatus('current')
hh3cNqaStatResMaxDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResMaxDelayDS.setStatus('current')
hh3cNqaStatResSumDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResSumDelayDS.setStatus('current')
hh3cNqaStatResSum2DelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 11, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatResSum2DelayDS.setStatus('current')
hh3cNqaGroupStatsJitterTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12), )
if mibBuilder.loadTexts: hh3cNqaGroupStatsJitterTable.setStatus('current')
hh3cNqaGroupStatsJitterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1), ).setIndexNames((0, "DISMAN-PING-MIB", "pingCtlOwnerIndex"), (0, "DISMAN-PING-MIB", "pingCtlTestName"), (0, "HH3C-NQA-MIB", "hh3cNqaStatJitterIndex"))
if mibBuilder.loadTexts: hh3cNqaGroupStatsJitterEntry.setStatus('current')
hh3cNqaStatJitterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hh3cNqaStatJitterIndex.setStatus('current')
hh3cNqaStatJitterMinOfPosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 2), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterMinOfPosSD.setStatus('current')
hh3cNqaStatJitterMaxOfPosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 3), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterMaxOfPosSD.setStatus('current')
hh3cNqaStatJitterNumOfPosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterNumOfPosSD.setStatus('current')
hh3cNqaStatJitterSumOfPosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 5), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterSumOfPosSD.setStatus('current')
hh3cNqaStatJitterSumOfSquarePosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 6), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterSumOfSquarePosSD.setStatus('current')
hh3cNqaStatJitterMinOfNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 7), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterMinOfNegSD.setStatus('current')
hh3cNqaStatJitterMaxOfNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 8), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterMaxOfNegSD.setStatus('current')
hh3cNqaStatJitterNumOfNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterNumOfNegSD.setStatus('current')
hh3cNqaStatJitterSumOfNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 10), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterSumOfNegSD.setStatus('current')
hh3cNqaStatJitterSumOfSquareNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 11), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterSumOfSquareNegSD.setStatus('current')
hh3cNqaStatJitterMinOfPosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 12), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterMinOfPosDS.setStatus('current')
hh3cNqaStatJitterMaxOfPosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 13), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterMaxOfPosDS.setStatus('current')
hh3cNqaStatJitterNumOfPosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterNumOfPosDS.setStatus('current')
hh3cNqaStatJitterSumOfPosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 15), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterSumOfPosDS.setStatus('current')
hh3cNqaStatJitterSumOfSquarePosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 16), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterSumOfSquarePosDS.setStatus('current')
hh3cNqaStatJitterMinOfNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 17), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterMinOfNegDS.setStatus('current')
hh3cNqaStatJitterMaxOfNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 18), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterMaxOfNegDS.setStatus('current')
hh3cNqaStatJitterNumOfNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterNumOfNegDS.setStatus('current')
hh3cNqaStatJitterSumOfNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 20), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterSumOfNegDS.setStatus('current')
hh3cNqaStatJitterSumOfSquareNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 21), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterSumOfSquareNegDS.setStatus('current')
hh3cNqaStatJitterPacketLossSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterPacketLossSD.setStatus('current')
hh3cNqaStatJitterPacketLossDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterPacketLossDS.setStatus('current')
hh3cNqaStatJitterAvePosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 24), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterAvePosSD.setStatus('current')
hh3cNqaStatJitterAveNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 25), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterAveNegSD.setStatus('current')
hh3cNqaStatJitterAvePosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 26), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterAvePosDS.setStatus('current')
hh3cNqaStatJitterAveNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 27), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterAveNegDS.setStatus('current')
hh3cNqaStatJitterPktLossUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterPktLossUnknown.setStatus('current')
hh3cNqaStatJitterMaxOfICPIF = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterMaxOfICPIF.setStatus('current')
hh3cNqaStatJitterMinOfICPIF = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterMinOfICPIF.setStatus('current')
hh3cNqaStatJitterMaxOfMOS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterMaxOfMOS.setStatus('current')
hh3cNqaStatJitterMinOfMOS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 12, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatJitterMinOfMOS.setStatus('current')
hh3cNqaReactionTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 13), )
if mibBuilder.loadTexts: hh3cNqaReactionTable.setStatus('current')
hh3cNqaReactionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 13, 1), ).setIndexNames((0, "HH3C-NQA-MIB", "hh3cNqaReactOwnerIndex"), (0, "HH3C-NQA-MIB", "hh3cNqaReactTestName"), (0, "HH3C-NQA-MIB", "hh3cNqaReactItemIndex"))
if mibBuilder.loadTexts: hh3cNqaReactionEntry.setStatus('current')
hh3cNqaReactOwnerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 13, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cNqaReactOwnerIndex.setStatus('current')
hh3cNqaReactTestName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 13, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cNqaReactTestName.setStatus('current')
hh3cNqaReactItemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cNqaReactItemIndex.setStatus('current')
hh3cNqaReactCheckedElement = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("probetime", 1), ("probefailure", 2), ("jitterrtt", 3), ("jitterpacketloss", 4), ("jittersd", 5), ("jitterds", 6), ("icpif", 7), ("mos", 8), ("jitterOwdSD", 9), ("jitterOwdDS", 10)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaReactCheckedElement.setStatus('current')
hh3cNqaReactThresholdUpperLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 13, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaReactThresholdUpperLimit.setStatus('current')
hh3cNqaReactThresholdLowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 13, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaReactThresholdLowerLimit.setStatus('current')
hh3cNqaReactThresholdType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("invalid", 0), ("average", 1), ("consecutive", 2), ("accumulative", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaReactThresholdType.setStatus('current')
hh3cNqaReactThresholdConsecNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 13, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaReactThresholdConsecNum.setStatus('current')
hh3cNqaReactThresholdAccumNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 13, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaReactThresholdAccumNum.setStatus('current')
hh3cNqaReactActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 13, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("trapOnly", 1), ("triggerOnly", 2), ("trapAndTrigger", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaReactActionType.setStatus('current')
hh3cNqaReactCurrentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 13, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("overThreshold", 2), ("belowThreshold", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaReactCurrentStatus.setStatus('current')
hh3cNqaReactRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 13, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cNqaReactRowStatus.setStatus('current')
hh3cNqaReactCheckedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 13, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaReactCheckedNum.setStatus('current')
hh3cNqaReactThresholdNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 13, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaReactThresholdNum.setStatus('current')
hh3cNqaStatisticsReactionTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 14), )
if mibBuilder.loadTexts: hh3cNqaStatisticsReactionTable.setStatus('current')
hh3cNqaStatisticsReactionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 14, 1), ).setIndexNames((0, "HH3C-NQA-MIB", "hh3cNqaStatReactOwnerIndex"), (0, "HH3C-NQA-MIB", "hh3cNqaStatReactTestName"), (0, "HH3C-NQA-MIB", "hh3cNqaStatReactIndex"), (0, "HH3C-NQA-MIB", "hh3cNqaStatReactItemIndex"))
if mibBuilder.loadTexts: hh3cNqaStatisticsReactionEntry.setStatus('current')
hh3cNqaStatReactOwnerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 14, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hh3cNqaStatReactOwnerIndex.setStatus('current')
hh3cNqaStatReactTestName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 14, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hh3cNqaStatReactTestName.setStatus('current')
hh3cNqaStatReactIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 14, 1, 3), Unsigned32())
if mibBuilder.loadTexts: hh3cNqaStatReactIndex.setStatus('current')
hh3cNqaStatReactItemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 14, 1, 4), Unsigned32())
if mibBuilder.loadTexts: hh3cNqaStatReactItemIndex.setStatus('current')
hh3cNqaStatReactCheckedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 14, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatReactCheckedNum.setStatus('current')
hh3cNqaStatReactThresholdNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 3, 1, 14, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cNqaStatReactThresholdNum.setStatus('current')
hh3cNqaNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 3, 3))
hh3cNqaProbeTimeOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 3, 3, 1)).setObjects(("HH3C-NQA-MIB", "hh3cNqaReactOwnerIndex"), ("HH3C-NQA-MIB", "hh3cNqaReactTestName"), ("HH3C-NQA-MIB", "hh3cNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("HH3C-NQA-MIB", "hh3cNqaReactThresholdType"), ("HH3C-NQA-MIB", "hh3cNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hh3cNqaProbeTimeOverThreshold.setStatus('current')
hh3cNqaJitterRTTOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 3, 3, 2)).setObjects(("HH3C-NQA-MIB", "hh3cNqaReactOwnerIndex"), ("HH3C-NQA-MIB", "hh3cNqaReactTestName"), ("HH3C-NQA-MIB", "hh3cNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("HH3C-NQA-MIB", "hh3cNqaReactThresholdType"), ("HH3C-NQA-MIB", "hh3cNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hh3cNqaJitterRTTOverThreshold.setStatus('current')
hh3cNqaProbeFailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 3, 3, 3)).setObjects(("HH3C-NQA-MIB", "hh3cNqaReactOwnerIndex"), ("HH3C-NQA-MIB", "hh3cNqaReactTestName"), ("HH3C-NQA-MIB", "hh3cNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("HH3C-NQA-MIB", "hh3cNqaReactThresholdType"), ("HH3C-NQA-MIB", "hh3cNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hh3cNqaProbeFailure.setStatus('current')
hh3cNqaJitterPacketLoss = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 3, 3, 4)).setObjects(("HH3C-NQA-MIB", "hh3cNqaReactOwnerIndex"), ("HH3C-NQA-MIB", "hh3cNqaReactTestName"), ("HH3C-NQA-MIB", "hh3cNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("HH3C-NQA-MIB", "hh3cNqaReactThresholdType"), ("HH3C-NQA-MIB", "hh3cNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hh3cNqaJitterPacketLoss.setStatus('current')
hh3cNqaJitterSDOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 3, 3, 5)).setObjects(("HH3C-NQA-MIB", "hh3cNqaReactOwnerIndex"), ("HH3C-NQA-MIB", "hh3cNqaReactTestName"), ("HH3C-NQA-MIB", "hh3cNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("HH3C-NQA-MIB", "hh3cNqaReactThresholdType"), ("HH3C-NQA-MIB", "hh3cNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hh3cNqaJitterSDOverThreshold.setStatus('current')
hh3cNqaJitterDSOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 3, 3, 6)).setObjects(("HH3C-NQA-MIB", "hh3cNqaReactOwnerIndex"), ("HH3C-NQA-MIB", "hh3cNqaReactTestName"), ("HH3C-NQA-MIB", "hh3cNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("HH3C-NQA-MIB", "hh3cNqaReactThresholdType"), ("HH3C-NQA-MIB", "hh3cNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hh3cNqaJitterDSOverThreshold.setStatus('current')
hh3cNqaICPIFOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 3, 3, 7)).setObjects(("HH3C-NQA-MIB", "hh3cNqaReactOwnerIndex"), ("HH3C-NQA-MIB", "hh3cNqaReactTestName"), ("HH3C-NQA-MIB", "hh3cNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("HH3C-NQA-MIB", "hh3cNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hh3cNqaICPIFOverThreshold.setStatus('current')
hh3cNqaMOSOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 3, 3, 8)).setObjects(("HH3C-NQA-MIB", "hh3cNqaReactOwnerIndex"), ("HH3C-NQA-MIB", "hh3cNqaReactTestName"), ("HH3C-NQA-MIB", "hh3cNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("HH3C-NQA-MIB", "hh3cNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hh3cNqaMOSOverThreshold.setStatus('current')
mibBuilder.exportSymbols("HH3C-NQA-MIB", hh3cNqaJitterStatsSum2PositivesSD=hh3cNqaJitterStatsSum2PositivesSD, hh3cNqaStatsMaxGroupNumber=hh3cNqaStatsMaxGroupNumber, hh3cNqaStatResSum2DelayDS=hh3cNqaStatResSum2DelayDS, hh3cNqaStatisticsCtlTable=hh3cNqaStatisticsCtlTable, hh3cNqaStatisticsCtlEntry=hh3cNqaStatisticsCtlEntry, hh3cNqaStatResRttTimeouts=hh3cNqaStatResRttTimeouts, hh3cNqaJitterStatsAveNegativesDS=hh3cNqaJitterStatsAveNegativesDS, hh3cNqaStatJitterPacketLossDS=hh3cNqaStatJitterPacketLossDS, hh3cNqaJitterStatsMaxOfPositivesSD=hh3cNqaJitterStatsMaxOfPositivesSD, hh3cNqaStatJitterMaxOfICPIF=hh3cNqaStatJitterMaxOfICPIF, hh3cNqaStatResMinDelaySD=hh3cNqaStatResMinDelaySD, hh3cNqaStatJitterSumOfSquarePosDS=hh3cNqaStatJitterSumOfSquarePosDS, hh3cNqaReactTestName=hh3cNqaReactTestName, hh3cNqaStatResSumDelayDS=hh3cNqaStatResSumDelayDS, hh3cNqaStatJitterAvePosSD=hh3cNqaStatJitterAvePosSD, hh3cNqaStatResMaxDelaySD=hh3cNqaStatResMaxDelaySD, hh3cNqaCtlTargetPort=hh3cNqaCtlTargetPort, hh3cNqaUdpEcho=hh3cNqaUdpEcho, hh3cNqaTcpServerTable=hh3cNqaTcpServerTable, hh3cNqaCtlStatisticsKeptTime=hh3cNqaCtlStatisticsKeptTime, hh3cNqaStatJitterNumOfNegDS=hh3cNqaStatJitterNumOfNegDS, hh3cNqaReactionEntry=hh3cNqaReactionEntry, hh3cNqaAgentEnable=hh3cNqaAgentEnable, hh3cNqaJitterStatsPacketLossDS=hh3cNqaJitterStatsPacketLossDS, hh3cNqaCtlEntry=hh3cNqaCtlEntry, hh3cNqaStatResMinDelayDS=hh3cNqaStatResMinDelayDS, hh3cNqaReactThresholdLowerLimit=hh3cNqaReactThresholdLowerLimit, hh3cNqaReactActionType=hh3cNqaReactActionType, hh3cNqaResultsSumDelayDS=hh3cNqaResultsSumDelayDS, hh3cNqaStatJitterMaxOfMOS=hh3cNqaStatJitterMaxOfMOS, hh3cNqaUdpServerEntry=hh3cNqaUdpServerEntry, hh3cNqaStatResRttSumOfSquares=hh3cNqaStatResRttSumOfSquares, hh3cNqaJitterStatsPktLossUnknown=hh3cNqaJitterStatsPktLossUnknown, hh3cNqaCtlHttpOperationString=hh3cNqaCtlHttpOperationString, hh3cNqaResultsNumOfDelayDS=hh3cNqaResultsNumOfDelayDS, hh3cNqaJitterStatsAveNegativesSD=hh3cNqaJitterStatsAveNegativesSD, hh3cNqaTcpServerIpAddress=hh3cNqaTcpServerIpAddress, hh3cNqaJitterStatsOperOfICPIF=hh3cNqaJitterStatsOperOfICPIF, hh3cNqaTcpServerPort=hh3cNqaTcpServerPort, hh3cNqaStatResRttBusies=hh3cNqaStatResRttBusies, hh3cNqaTcpServerEntry=hh3cNqaTcpServerEntry, hh3cNqaJitterStatsSum2NegativesSD=hh3cNqaJitterStatsSum2NegativesSD, hh3cNqaCtlHttpOperationType=hh3cNqaCtlHttpOperationType, hh3cNqaJitterStatsSumOfPositivesDS=hh3cNqaJitterStatsSumOfPositivesDS, hh3cNqaStatReactTestName=hh3cNqaStatReactTestName, hh3cNqaResultsRttSum=hh3cNqaResultsRttSum, hh3cNqaHttp=hh3cNqaHttp, hh3cNqaJitterStatsAvePositivesDS=hh3cNqaJitterStatsAvePositivesDS, hh3cNqaStatResIpTargetAddressType=hh3cNqaStatResIpTargetAddressType, hh3cNqaReactItemIndex=hh3cNqaReactItemIndex, hh3cNqaStatJitterPktLossUnknown=hh3cNqaStatJitterPktLossUnknown, hh3cNqaGroupStatsJitterTable=hh3cNqaGroupStatsJitterTable, hh3cNqaStatJitterSumOfPosSD=hh3cNqaStatJitterSumOfPosSD, hh3cNqaNotifications=hh3cNqaNotifications, hh3cNqajitter=hh3cNqajitter, hh3cNqaJitterStatsMaxOfNegativesSD=hh3cNqaJitterStatsMaxOfNegativesSD, hh3cNqaMIBVersion=hh3cNqaMIBVersion, hh3cNqaStatResSentProbes=hh3cNqaStatResSentProbes, hh3cNqaResultsSum2DelayDS=hh3cNqaResultsSum2DelayDS, hh3cNqaStatReactThresholdNum=hh3cNqaStatReactThresholdNum, hh3cNqaCtlTable=hh3cNqaCtlTable, hh3cNqaCtlFtpOperationType=hh3cNqaCtlFtpOperationType, hh3cNqaJitterStatsMaxOfPositivesDS=hh3cNqaJitterStatsMaxOfPositivesDS, hh3cNqaStatResMinRtt=hh3cNqaStatResMinRtt, hh3cNqaReactThresholdNum=hh3cNqaReactThresholdNum, hh3cNqaStatisticsResultsEntry=hh3cNqaStatisticsResultsEntry, hh3cNqaResultsMaxDelaySD=hh3cNqaResultsMaxDelaySD, hh3cNqaResultsLostPacketRatio=hh3cNqaResultsLostPacketRatio, hh3cNqaStatJitterAvePosDS=hh3cNqaStatJitterAvePosDS, hh3cNqaUdpServerPort=hh3cNqaUdpServerPort, hh3cNqaftp=hh3cNqaftp, hh3cNqaCtlJitterAdminNumPackets=hh3cNqaCtlJitterAdminNumPackets, hh3cNqaStatResSumDelaySD=hh3cNqaStatResSumDelaySD, hh3cNqaImplementationTypeDomains=hh3cNqaImplementationTypeDomains, hh3cNqaJitterStatsSum2PositivesDS=hh3cNqaJitterStatsSum2PositivesDS, hh3cNqaStatJitterSumOfSquareNegDS=hh3cNqaStatJitterSumOfSquareNegDS, hh3cNqaStatJitterAveNegDS=hh3cNqaStatJitterAveNegDS, hh3cNqaStatJitterSumOfSquarePosSD=hh3cNqaStatJitterSumOfSquarePosSD, hh3cNqaStatJitterSumOfNegDS=hh3cNqaStatJitterSumOfNegDS, hh3cNqaStatResMaxRtt=hh3cNqaStatResMaxRtt, hh3cNqaCtlLifeTime=hh3cNqaCtlLifeTime, hh3cNqaStatJitterMinOfICPIF=hh3cNqaStatJitterMinOfICPIF, hh3cNqaReactThresholdUpperLimit=hh3cNqaReactThresholdUpperLimit, hh3cNqaReactThresholdType=hh3cNqaReactThresholdType, hh3cNqaResultsRttStatsErrors=hh3cNqaResultsRttStatsErrors, hh3cNqaResultsRttSequenceErrors=hh3cNqaResultsRttSequenceErrors, hh3cNqaJitterStatsSum2NegativesDS=hh3cNqaJitterStatsSum2NegativesDS, hh3cNqaCtlFtpPassword=hh3cNqaCtlFtpPassword, hh3cNqaStatJitterIndex=hh3cNqaStatJitterIndex, hh3cNqaResultsRttDrops=hh3cNqaResultsRttDrops, hh3cNqaCtlHistoryKeptTime=hh3cNqaCtlHistoryKeptTime, hh3cNqaResultsTable=hh3cNqaResultsTable, hh3cNqaReactCurrentStatus=hh3cNqaReactCurrentStatus, hh3cNqaJitterStatsNumOfPositivesDS=hh3cNqaJitterStatsNumOfPositivesDS, hh3cNqaCtlICPIFAdvFactor=hh3cNqaCtlICPIFAdvFactor, hh3cNqaStatJitterNumOfNegSD=hh3cNqaStatJitterNumOfNegSD, hh3cNqaResultsRttTimeouts=hh3cNqaResultsRttTimeouts, hh3cNqaResultsRttBusies=hh3cNqaResultsRttBusies, hh3cNqaJitterStatsNumOfNegativesSD=hh3cNqaJitterStatsNumOfNegativesSD, hh3cNqaJitterStatsMinOfNegativesSD=hh3cNqaJitterStatsMinOfNegativesSD, hh3cNqaJitterPacketLoss=hh3cNqaJitterPacketLoss, hh3cNqaJitterStatsNumOfPositivesSD=hh3cNqaJitterStatsNumOfPositivesSD, hh3cNqaTcpconnect=hh3cNqaTcpconnect, hh3cNqaResultsSum2DelaySD=hh3cNqaResultsSum2DelaySD, hh3cNqaStatJitterMaxOfPosSD=hh3cNqaStatJitterMaxOfPosSD, hh3cNqaReactThresholdConsecNum=hh3cNqaReactThresholdConsecNum, hh3cNqaStatReactItemIndex=hh3cNqaStatReactItemIndex, hh3cNqaJitterStatsMinOfNegativesDS=hh3cNqaJitterStatsMinOfNegativesDS, hh3cNqaReactRowStatus=hh3cNqaReactRowStatus, hh3cNqaTcpServerRowStatus=hh3cNqaTcpServerRowStatus, hh3cNqaJitterStatsNumOfNegativesDS=hh3cNqaJitterStatsNumOfNegativesDS, hh3cNqaStatJitterAveNegSD=hh3cNqaStatJitterAveNegSD, hh3cNqaStatisticsReactionEntry=hh3cNqaStatisticsReactionEntry, hh3cNqaJitterStatsOperOfMOS=hh3cNqaJitterStatsOperOfMOS, hh3cNqaCtlStatisticsGroupNumber=hh3cNqaCtlStatisticsGroupNumber, hh3cNqaJitterStatsSumOfNegativesSD=hh3cNqaJitterStatsSumOfNegativesSD, hh3cNqaStatResPacketLateArrival=hh3cNqaStatResPacketLateArrival, hh3cNqaStatJitterMaxOfNegSD=hh3cNqaStatJitterMaxOfNegSD, hh3cNqaStatResRttNoConnections=hh3cNqaStatResRttNoConnections, hh3cNqaStatReactOwnerIndex=hh3cNqaStatReactOwnerIndex, hh3cNqaStatResRttDrops=hh3cNqaStatResRttDrops, hh3cNqaCtlHistoryEnable=hh3cNqaCtlHistoryEnable, hh3cNqaResultsPacketLateArrival=hh3cNqaResultsPacketLateArrival, hh3cNqaServerEnable=hh3cNqaServerEnable, hh3cNqadlsw=hh3cNqadlsw, hh3cNqaJitterStatsTable=hh3cNqaJitterStatsTable, hh3cNqaStatJitterSumOfSquareNegSD=hh3cNqaStatJitterSumOfSquareNegSD, hh3cNqaCtlCodecType=hh3cNqaCtlCodecType, hh3cNqaCtlFtpOperationString=hh3cNqaCtlFtpOperationString, hh3cNqaGroupStatsJitterEntry=hh3cNqaGroupStatsJitterEntry, hh3cNqaStatResRttSequenceErrors=hh3cNqaStatResRttSequenceErrors, hh3cNqaICPIFOverThreshold=hh3cNqaICPIFOverThreshold, hh3cNqaUdpServerRowStatus=hh3cNqaUdpServerRowStatus, hh3cNqaStatResStartTime=hh3cNqaStatResStartTime, hh3cNqaReactOwnerIndex=hh3cNqaReactOwnerIndex, hh3cNqaStatResSum2DelaySD=hh3cNqaStatResSum2DelaySD, hh3cNqaUdpServerTable=hh3cNqaUdpServerTable, PYSNMP_MODULE_ID=hh3cNqa, hh3cNqaCtlStatisticsInterval=hh3cNqaCtlStatisticsInterval, hh3cNqaStatJitterMaxOfNegDS=hh3cNqaStatJitterMaxOfNegDS, hh3cNqaObjects=hh3cNqaObjects, hh3cNqaJitterStatsNumOfRTT=hh3cNqaJitterStatsNumOfRTT, hh3cNqaStatJitterMaxOfPosDS=hh3cNqaStatJitterMaxOfPosDS, hh3cNqaStatResRttErrors=hh3cNqaStatResRttErrors, hh3cNqaStatisticsReactionTable=hh3cNqaStatisticsReactionTable, hh3cNqaJitterStatsMinOfPositivesSD=hh3cNqaJitterStatsMinOfPositivesSD, hh3cNqaReactThresholdAccumNum=hh3cNqaReactThresholdAccumNum, hh3cNqaStatResIpTargetAddress=hh3cNqaStatResIpTargetAddress, hh3cNqaStatResRttNumDisconnects=hh3cNqaStatResRttNumDisconnects, hh3cNqaResultsMaxDelayDS=hh3cNqaResultsMaxDelayDS, hh3cNqaJitterStatsMaxOfNegativesDS=hh3cNqaJitterStatsMaxOfNegativesDS, hh3cNqaJitterStatsSumOfPositivesSD=hh3cNqaJitterStatsSumOfPositivesSD, hh3cNqaStatJitterNumOfPosSD=hh3cNqaStatJitterNumOfPosSD, hh3cNqaResultsSumDelaySD=hh3cNqaResultsSumDelaySD, hh3cNqaStatJitterNumOfPosDS=hh3cNqaStatJitterNumOfPosDS, hh3cNqaStatReactCheckedNum=hh3cNqaStatReactCheckedNum, hh3cNqaJitterStatsSumOfNegativesDS=hh3cNqaJitterStatsSumOfNegativesDS, hh3cNqaStatJitterSumOfNegSD=hh3cNqaStatJitterSumOfNegSD, hh3cNqaJitterStatsMinOfPositivesDS=hh3cNqaJitterStatsMinOfPositivesDS, hh3cNqaResultsRttNoConnections=hh3cNqaResultsRttNoConnections, hh3cNqaJitterRTTOverThreshold=hh3cNqaJitterRTTOverThreshold, hh3cNqa=hh3cNqa, hh3cNqaStatJitterMinOfPosSD=hh3cNqaStatJitterMinOfPosSD, hh3cNqaStatisticsResultsTable=hh3cNqaStatisticsResultsTable, hh3cNqaJitterStatsAvePositivesSD=hh3cNqaJitterStatsAvePositivesSD, hh3cNqaStatJitterSumOfPosDS=hh3cNqaStatJitterSumOfPosDS, hh3cNqaProbeTimeOverThreshold=hh3cNqaProbeTimeOverThreshold, hh3cNqaResultsMinDelayDS=hh3cNqaResultsMinDelayDS, hh3cNqaStatJitterMinOfMOS=hh3cNqaStatJitterMinOfMOS, hh3cNqaCtlFtpUsername=hh3cNqaCtlFtpUsername, hh3cNqaResultsMinDelaySD=hh3cNqaResultsMinDelaySD, hh3cNqaStatReactIndex=hh3cNqaStatReactIndex, hh3cNqaCtlVPNInstance=hh3cNqaCtlVPNInstance, hh3cNqaStatResNumOfDelayDS=hh3cNqaStatResNumOfDelayDS, hh3cNqaStatResMaxDelayDS=hh3cNqaStatResMaxDelayDS, hh3cNqaCtlSourcePort=hh3cNqaCtlSourcePort, hh3cNqaStatJitterPacketLossSD=hh3cNqaStatJitterPacketLossSD, hh3cNqaUdpServerIpAddress=hh3cNqaUdpServerIpAddress, hh3cNqaMOSOverThreshold=hh3cNqaMOSOverThreshold, hh3cNqaResultsEntry=hh3cNqaResultsEntry, hh3cNqaProbeFailure=hh3cNqaProbeFailure, hh3cNqaStatResAverageRtt=hh3cNqaStatResAverageRtt, hh3cNqaResultsRttNumDisconnects=hh3cNqaResultsRttNumDisconnects, hh3cNqaStatResRttSum=hh3cNqaStatResRttSum, hh3cNqaResultsNumOfDelaySD=hh3cNqaResultsNumOfDelaySD, hh3cNqaStatJitterMinOfNegSD=hh3cNqaStatJitterMinOfNegSD, hh3cNqaJitterStatsEntry=hh3cNqaJitterStatsEntry, hh3cNqaStatJitterMinOfPosDS=hh3cNqaStatJitterMinOfPosDS, hh3cNqaReactionTable=hh3cNqaReactionTable, hh3cNqaJitterDSOverThreshold=hh3cNqaJitterDSOverThreshold, hh3cNqaJitterStatsPacketLossSD=hh3cNqaJitterStatsPacketLossSD, hh3cNqaStatResIndex=hh3cNqaStatResIndex, hh3cNqaStatResProbeResponses=hh3cNqaStatResProbeResponses, hh3cNqaStatResLostPacketRatio=hh3cNqaStatResLostPacketRatio, hh3cNqadhcp=hh3cNqadhcp, hh3cNqaCtlBeginTime=hh3cNqaCtlBeginTime, hh3cNqaStatResNumOfDelaySD=hh3cNqaStatResNumOfDelaySD, hh3cNqaReactCheckedElement=hh3cNqaReactCheckedElement, hh3cNqaJitterSDOverThreshold=hh3cNqaJitterSDOverThreshold, hh3cNqaCtlTTL=hh3cNqaCtlTTL, hh3cNqaReactCheckedNum=hh3cNqaReactCheckedNum, hh3cNqaStatResInterval=hh3cNqaStatResInterval, hh3cNqaStatJitterMinOfNegDS=hh3cNqaStatJitterMinOfNegDS, hh3cNqaCtlJitterAdminInterval=hh3cNqaCtlJitterAdminInterval)
