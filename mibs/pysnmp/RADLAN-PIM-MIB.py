#
# PySNMP MIB module RADLAN-PIM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADLAN-PIM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:39:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
IANAipRouteProtocol, = mibBuilder.importSymbols("IANA-RTPROTO-MIB", "IANAipRouteProtocol")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
InetAddressType, InetAddressPrefixLength, InetAddress, InetVersion = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddressPrefixLength", "InetAddress", "InetVersion")
pimInterfaceIfIndex, pimNeighborIfIndex, pimInterfaceIPVersion, pimInterfaceEntry, pimNeighborAddressType, pimNeighborAddress = mibBuilder.importSymbols("PIM-STD-MIB", "pimInterfaceIfIndex", "pimNeighborIfIndex", "pimInterfaceIPVersion", "pimInterfaceEntry", "pimNeighborAddressType", "pimNeighborAddress")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Integer32, IpAddress, iso, MibIdentifier, Gauge32, Counter64, Unsigned32, Counter32, ObjectIdentity, Bits, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "iso", "MibIdentifier", "Gauge32", "Counter64", "Unsigned32", "Counter32", "ObjectIdentity", "Bits", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "NotificationType")
TextualConvention, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "TruthValue")
rlPim = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 211))
rlPim.setRevisions(('2008-09-25 00:00',))
if mibBuilder.loadTexts: rlPim.setLastUpdated('200809250000Z')
if mibBuilder.loadTexts: rlPim.setOrganization('Marvell Semiconductor, Inc.')
class AdminStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("adminStatusUp", 1), ("adminStatusDown", 2))

class OperStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("operStatusUp", 1), ("operStatusDown", 2), ("operStatusGoingUp", 3), ("operStatusGoingDown", 4), ("operStatusActFailed", 5))

class Unsigned32NonZero(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class NumericIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class NumericIndexOrZero(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class EntityIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class EntityIndexOrZero(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class StdAccessListListIndexOrZero(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class StdAccessListRuleIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class ExtAccessListListIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class ExtAccessListListIndexOrZero(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class PimStatsCounter(TextualConvention, Unsigned32):
    status = 'current'

class NpgOperStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 8, 10, 11))
    namedValues = NamedValues(("operStatusUp", 1), ("operStatusDown", 2), ("operStatusGoingUp", 3), ("operStatusGoingDown", 4), ("operStatusActFailed", 5), ("operStatusFailed", 8), ("operStatusFailedPerm", 10), ("operStatusFailing", 11))

rlPimInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 89, 211, 1), )
if mibBuilder.loadTexts: rlPimInterfaceTable.setStatus('current')
rlPimInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 211, 1, 1), )
pimInterfaceEntry.registerAugmentions(("RADLAN-PIM-MIB", "rlPimInterfaceEntry"))
rlPimInterfaceEntry.setIndexNames(*pimInterfaceEntry.getIndexNames())
if mibBuilder.loadTexts: rlPimInterfaceEntry.setStatus('current')
rlPimInterfaceAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 1, 1, 3), AdminStatus().clone('adminStatusUp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimInterfaceAdminStatus.setStatus('current')
rlPimInterfaceOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 1, 1, 4), NpgOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimInterfaceOperStatus.setStatus('current')
rlPimInterfaceStubInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimInterfaceStubInterface.setStatus('current')
rlPimInterfaceP2PNoHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimInterfaceP2PNoHellos.setStatus('current')
rlPimInterfaceMgmdEntIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 1, 1, 7), NumericIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimInterfaceMgmdEntIndex.setStatus('current')
rlPimInterfaceNeighborCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimInterfaceNeighborCount.setStatus('current')
rlPimInterfaceStarGStateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 1, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimInterfaceStarGStateLimit.setStatus('current')
rlPimInterfaceStarGStateWarnThold = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 1, 1, 10), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimInterfaceStarGStateWarnThold.setStatus('current')
rlPimInterfaceStarGStateStored = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimInterfaceStarGStateStored.setStatus('current')
rlPimInterfaceSGStateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 1, 1, 12), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimInterfaceSGStateLimit.setStatus('current')
rlPimInterfaceSGStateWarnThold = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 1, 1, 13), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimInterfaceSGStateWarnThold.setStatus('current')
rlPimInterfaceSGStateStored = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimInterfaceSGStateStored.setStatus('current')
rlPimInterfaceNeighborFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 1, 1, 15), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimInterfaceNeighborFilter.setStatus('current')
rlPimInterfaceAssertInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(177)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimInterfaceAssertInterval.setStatus('current')
rlPimInterfaceAssertHoldtime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(180)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimInterfaceAssertHoldtime.setStatus('current')
rlPimInterfaceAsmGrpFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 1, 1, 18), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimInterfaceAsmGrpFilter.setStatus('current')
rlPimInterfaceSsmSrcAndGrpFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 1, 1, 19), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimInterfaceSsmSrcAndGrpFilter.setStatus('current')
rlPimIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 89, 211, 2), )
if mibBuilder.loadTexts: rlPimIfStatsTable.setStatus('current')
rlPimIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 211, 2, 1), ).setIndexNames((0, "PIM-STD-MIB", "pimInterfaceIfIndex"), (0, "PIM-STD-MIB", "pimInterfaceIPVersion"))
if mibBuilder.loadTexts: rlPimIfStatsEntry.setStatus('current')
rlPimIfStatsNumSentHello = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 2, 1, 1), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimIfStatsNumSentHello.setStatus('current')
rlPimIfStatsNumSentJoinPrune = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 2, 1, 2), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimIfStatsNumSentJoinPrune.setStatus('current')
rlPimIfStatsNumSentAssert = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 2, 1, 3), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimIfStatsNumSentAssert.setStatus('current')
rlPimIfStatsNumSentBsm = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 2, 1, 4), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimIfStatsNumSentBsm.setStatus('current')
rlPimIfStatsNumErrHello = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 2, 1, 5), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimIfStatsNumErrHello.setStatus('current')
rlPimIfStatsNumRecvUnknownNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 2, 1, 6), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimIfStatsNumRecvUnknownNbr.setStatus('current')
rlPimIfStatsNumUnknownHelloOpt = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 2, 1, 7), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimIfStatsNumUnknownHelloOpt.setStatus('current')
rlPimIfStatsNumFilteredOut = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 2, 1, 8), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimIfStatsNumFilteredOut.setStatus('current')
rlPimNmEntTable = MibTable((1, 3, 6, 1, 4, 1, 89, 211, 3), )
if mibBuilder.loadTexts: rlPimNmEntTable.setStatus('current')
rlPimNmEntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 211, 3, 1), ).setIndexNames((0, "RADLAN-PIM-MIB", "rlPimNmEntIndex"))
if mibBuilder.loadTexts: rlPimNmEntEntry.setStatus('current')
rlPimNmEntIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 3, 1, 1), NumericIndex())
if mibBuilder.loadTexts: rlPimNmEntIndex.setStatus('current')
rlPimNmEntRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimNmEntRowStatus.setStatus('current')
rlPimNmEntAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 3, 1, 3), AdminStatus().clone('adminStatusUp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimNmEntAdminStatus.setStatus('current')
rlPimNmEntOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 3, 1, 4), NpgOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntOperStatus.setStatus('current')
rlPimNmEntTmEntIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 3, 1, 5), NumericIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimNmEntTmEntIndex.setStatus('current')
rlPimNmEntI3JoinOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 3, 1, 6), NpgOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntI3JoinOperStatus.setStatus('current')
rlPimNmEntNmiJoinOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 3, 1, 7), NpgOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntNmiJoinOperStatus.setStatus('current')
rlPimNmEntSckJoinOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 3, 1, 8), NpgOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntSckJoinOperStatus.setStatus('current')
rlPimNmEntClearStatsCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 3, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimNmEntClearStatsCounters.setStatus('current')
rlPimNmEntStatsUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 3, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntStatsUpTime.setStatus('current')
rlPimNmEntEnableUnicastMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 3, 1, 11), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimNmEntEnableUnicastMessages.setStatus('current')
rlPimNmEntAcceptUnicastBsms = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 3, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimNmEntAcceptUnicastBsms.setStatus('current')
rlPimNmEntCrpAdvFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 3, 1, 13), StdAccessListListIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimNmEntCrpAdvFilterIndex.setStatus('current')
rlPimNmEntStatsTable = MibTable((1, 3, 6, 1, 4, 1, 89, 211, 4), )
if mibBuilder.loadTexts: rlPimNmEntStatsTable.setStatus('current')
rlPimNmEntStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 211, 4, 1), ).setIndexNames((0, "RADLAN-PIM-MIB", "rlPimNmEntIndex"))
if mibBuilder.loadTexts: rlPimNmEntStatsEntry.setStatus('current')
rlPimNmEntStatsNumSentCRPAdvert = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 4, 1, 1), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntStatsNumSentCRPAdvert.setStatus('current')
rlPimNmEntStatsNumSentRegister = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 4, 1, 2), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntStatsNumSentRegister.setStatus('current')
rlPimNmEntStatsNumSentRegisterStop = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 4, 1, 3), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntStatsNumSentRegisterStop.setStatus('current')
rlPimNmEntStatsNumRecvCRPAdvert = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 4, 1, 4), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntStatsNumRecvCRPAdvert.setStatus('current')
rlPimNmEntStatsNumRecvRegister = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 4, 1, 5), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntStatsNumRecvRegister.setStatus('current')
rlPimNmEntStatsNumRecvRegisterStop = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 4, 1, 6), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntStatsNumRecvRegisterStop.setStatus('current')
rlPimNmEntStatsNumErrCRPAdvert = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 4, 1, 7), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntStatsNumErrCRPAdvert.setStatus('current')
rlPimNmEntStatsNumErrRegister = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 4, 1, 8), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntStatsNumErrRegister.setStatus('current')
rlPimNmEntStatsNumErrRegisterStop = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 4, 1, 9), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntStatsNumErrRegisterStop.setStatus('current')
rlPimNmEntStatsNumRecvIgnoredType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 4, 1, 10), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntStatsNumRecvIgnoredType.setStatus('current')
rlPimNmEntStatsNumRecvUnknownType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 4, 1, 11), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntStatsNumRecvUnknownType.setStatus('current')
rlPimNmEntStatsNumRecvUnknownVer = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 4, 1, 12), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntStatsNumRecvUnknownVer.setStatus('current')
rlPimNmEntStatsNumRecvBadChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 4, 1, 13), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntStatsNumRecvBadChecksum.setStatus('current')
rlPimNmEntStatsNumRecvBadLength = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 4, 1, 14), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntStatsNumRecvBadLength.setStatus('current')
rlPimNmEntStatsNumCRPAdvfiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 4, 1, 15), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNmEntStatsNumCRPAdvfiltered.setStatus('current')
rlPimNbrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 89, 211, 5), )
if mibBuilder.loadTexts: rlPimNbrStatsTable.setStatus('current')
rlPimNbrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 211, 5, 1), ).setIndexNames((0, "PIM-STD-MIB", "pimNeighborIfIndex"), (0, "PIM-STD-MIB", "pimNeighborAddressType"), (0, "PIM-STD-MIB", "pimNeighborAddress"))
if mibBuilder.loadTexts: rlPimNbrStatsEntry.setStatus('current')
rlPimNbrStatsNumRecvHello = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 5, 1, 1), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNbrStatsNumRecvHello.setStatus('current')
rlPimNbrStatsNumRecvJoinPrune = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 5, 1, 2), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNbrStatsNumRecvJoinPrune.setStatus('current')
rlPimNbrStatsNumRecvAssert = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 5, 1, 3), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNbrStatsNumRecvAssert.setStatus('current')
rlPimNbrStatsNumRecvBSM = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 5, 1, 4), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNbrStatsNumRecvBSM.setStatus('current')
rlPimNbrStatsNumErrJoinPrune = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 5, 1, 5), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNbrStatsNumErrJoinPrune.setStatus('current')
rlPimNbrStatsNumErrAssert = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 5, 1, 6), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNbrStatsNumErrAssert.setStatus('current')
rlPimNbrStatsNumErrBSM = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 5, 1, 7), PimStatsCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimNbrStatsNumErrBSM.setStatus('current')
rlPimTmEntTable = MibTable((1, 3, 6, 1, 4, 1, 89, 211, 6), )
if mibBuilder.loadTexts: rlPimTmEntTable.setStatus('current')
rlPimTmEntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 211, 6, 1), ).setIndexNames((0, "RADLAN-PIM-MIB", "rlPimTmEntIndex"))
if mibBuilder.loadTexts: rlPimTmEntEntry.setStatus('current')
rlPimTmEntIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 1), NumericIndex())
if mibBuilder.loadTexts: rlPimTmEntIndex.setStatus('current')
rlPimTmEntRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntRowStatus.setStatus('current')
rlPimTmEntAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 3), AdminStatus().clone('adminStatusUp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntAdminStatus.setStatus('current')
rlPimTmEntOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 4), NpgOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimTmEntOperStatus.setStatus('current')
rlPimTmEntGStateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntGStateLimit.setStatus('current')
rlPimTmEntGStateWarnThold = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntGStateWarnThold.setStatus('current')
rlPimTmEntGStateStored = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimTmEntGStateStored.setStatus('current')
rlPimTmEntSGStateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntSGStateLimit.setStatus('current')
rlPimTmEntSGStateWarnThold = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntSGStateWarnThold.setStatus('current')
rlPimTmEntSGStateStored = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimTmEntSGStateStored.setStatus('current')
rlPimTmEntStarGIStateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 11), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntStarGIStateLimit.setStatus('current')
rlPimTmEntStarGIStateWarnThold = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 12), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntStarGIStateWarnThold.setStatus('current')
rlPimTmEntStarGIStateStored = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimTmEntStarGIStateStored.setStatus('current')
rlPimTmEntSGIStateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 14), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntSGIStateLimit.setStatus('current')
rlPimTmEntSGIStateWarnThold = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 15), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntSGIStateWarnThold.setStatus('current')
rlPimTmEntSGIStateStored = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPimTmEntSGIStateStored.setStatus('current')
rlPimTmEntAsmGrpFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 17), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntAsmGrpFilter.setStatus('current')
rlPimTmEntSsmSrcAndGrpFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 18), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntSsmSrcAndGrpFilter.setStatus('current')
rlPimTmEntRegSrcAndGrpFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 19), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntRegSrcAndGrpFilter.setStatus('current')
rlPimTmEntRegSuppressionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntRegSuppressionTime.setStatus('current')
rlPimTmEntRegProbeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntRegProbeTime.setStatus('current')
rlPimTmEntKeepalivePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(210)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntKeepalivePeriod.setStatus('current')
rlPimTmEntSendIfStateChangeTraps = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 23), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntSendIfStateChangeTraps.setStatus('current')
rlPimTmEntSupportedAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 211, 6, 1, 24), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlPimTmEntSupportedAddrType.setStatus('current')
rlPimEmbeddedRpEnabled = MibScalar((1, 3, 6, 1, 4, 1, 89, 211, 7), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPimEmbeddedRpEnabled.setStatus('current')
mibBuilder.exportSymbols("RADLAN-PIM-MIB", rlPimTmEntRowStatus=rlPimTmEntRowStatus, rlPimNmEntAcceptUnicastBsms=rlPimNmEntAcceptUnicastBsms, rlPimInterfaceAssertHoldtime=rlPimInterfaceAssertHoldtime, NumericIndexOrZero=NumericIndexOrZero, rlPimNmEntStatsNumRecvIgnoredType=rlPimNmEntStatsNumRecvIgnoredType, rlPimNbrStatsNumRecvHello=rlPimNbrStatsNumRecvHello, rlPimIfStatsNumErrHello=rlPimIfStatsNumErrHello, rlPimNmEntNmiJoinOperStatus=rlPimNmEntNmiJoinOperStatus, rlPimTmEntGStateWarnThold=rlPimTmEntGStateWarnThold, rlPimInterfaceNeighborFilter=rlPimInterfaceNeighborFilter, rlPimTmEntSendIfStateChangeTraps=rlPimTmEntSendIfStateChangeTraps, rlPimNmEntStatsNumRecvUnknownType=rlPimNmEntStatsNumRecvUnknownType, rlPimIfStatsNumSentAssert=rlPimIfStatsNumSentAssert, rlPimIfStatsNumFilteredOut=rlPimIfStatsNumFilteredOut, rlPimInterfaceNeighborCount=rlPimInterfaceNeighborCount, rlPimNmEntStatsNumSentRegisterStop=rlPimNmEntStatsNumSentRegisterStop, rlPimInterfaceTable=rlPimInterfaceTable, rlPimTmEntSsmSrcAndGrpFilter=rlPimTmEntSsmSrcAndGrpFilter, rlPimNmEntStatsEntry=rlPimNmEntStatsEntry, ExtAccessListListIndex=ExtAccessListListIndex, rlPimNmEntI3JoinOperStatus=rlPimNmEntI3JoinOperStatus, rlPimNbrStatsEntry=rlPimNbrStatsEntry, rlPimInterfaceSGStateWarnThold=rlPimInterfaceSGStateWarnThold, rlPimInterfaceP2PNoHellos=rlPimInterfaceP2PNoHellos, OperStatus=OperStatus, rlPimInterfaceEntry=rlPimInterfaceEntry, AdminStatus=AdminStatus, rlPim=rlPim, rlPimNmEntStatsNumSentRegister=rlPimNmEntStatsNumSentRegister, rlPimTmEntIndex=rlPimTmEntIndex, rlPimNmEntStatsNumRecvCRPAdvert=rlPimNmEntStatsNumRecvCRPAdvert, rlPimNmEntCrpAdvFilterIndex=rlPimNmEntCrpAdvFilterIndex, rlPimTmEntSGIStateStored=rlPimTmEntSGIStateStored, rlPimNmEntAdminStatus=rlPimNmEntAdminStatus, EntityIndexOrZero=EntityIndexOrZero, rlPimNbrStatsNumErrBSM=rlPimNbrStatsNumErrBSM, rlPimNmEntOperStatus=rlPimNmEntOperStatus, rlPimTmEntAdminStatus=rlPimTmEntAdminStatus, rlPimInterfaceMgmdEntIndex=rlPimInterfaceMgmdEntIndex, rlPimNmEntSckJoinOperStatus=rlPimNmEntSckJoinOperStatus, rlPimTmEntSGIStateLimit=rlPimTmEntSGIStateLimit, rlPimIfStatsNumUnknownHelloOpt=rlPimIfStatsNumUnknownHelloOpt, rlPimNmEntStatsNumRecvBadChecksum=rlPimNmEntStatsNumRecvBadChecksum, rlPimTmEntAsmGrpFilter=rlPimTmEntAsmGrpFilter, rlPimNmEntStatsNumRecvRegister=rlPimNmEntStatsNumRecvRegister, rlPimInterfaceStarGStateWarnThold=rlPimInterfaceStarGStateWarnThold, PimStatsCounter=PimStatsCounter, rlPimNbrStatsTable=rlPimNbrStatsTable, StdAccessListRuleIndex=StdAccessListRuleIndex, rlPimIfStatsTable=rlPimIfStatsTable, rlPimNbrStatsNumRecvBSM=rlPimNbrStatsNumRecvBSM, rlPimInterfaceStarGStateStored=rlPimInterfaceStarGStateStored, rlPimTmEntOperStatus=rlPimTmEntOperStatus, rlPimNmEntEntry=rlPimNmEntEntry, EntityIndex=EntityIndex, rlPimNmEntStatsNumRecvUnknownVer=rlPimNmEntStatsNumRecvUnknownVer, rlPimNmEntIndex=rlPimNmEntIndex, rlPimNmEntStatsTable=rlPimNmEntStatsTable, rlPimNbrStatsNumRecvAssert=rlPimNbrStatsNumRecvAssert, rlPimInterfaceAdminStatus=rlPimInterfaceAdminStatus, rlPimNbrStatsNumErrAssert=rlPimNbrStatsNumErrAssert, rlPimTmEntGStateStored=rlPimTmEntGStateStored, rlPimNmEntStatsNumSentCRPAdvert=rlPimNmEntStatsNumSentCRPAdvert, rlPimIfStatsNumSentJoinPrune=rlPimIfStatsNumSentJoinPrune, rlPimTmEntGStateLimit=rlPimTmEntGStateLimit, rlPimTmEntSGStateStored=rlPimTmEntSGStateStored, rlPimInterfaceStubInterface=rlPimInterfaceStubInterface, NpgOperStatus=NpgOperStatus, rlPimNmEntStatsNumErrRegister=rlPimNmEntStatsNumErrRegister, rlPimIfStatsNumRecvUnknownNbr=rlPimIfStatsNumRecvUnknownNbr, rlPimTmEntSGStateLimit=rlPimTmEntSGStateLimit, rlPimInterfaceSGStateStored=rlPimInterfaceSGStateStored, rlPimIfStatsNumSentBsm=rlPimIfStatsNumSentBsm, rlPimTmEntRegSrcAndGrpFilter=rlPimTmEntRegSrcAndGrpFilter, Unsigned32NonZero=Unsigned32NonZero, rlPimNmEntClearStatsCounters=rlPimNmEntClearStatsCounters, rlPimTmEntEntry=rlPimTmEntEntry, rlPimNmEntStatsNumRecvRegisterStop=rlPimNmEntStatsNumRecvRegisterStop, ExtAccessListListIndexOrZero=ExtAccessListListIndexOrZero, rlPimNmEntRowStatus=rlPimNmEntRowStatus, PYSNMP_MODULE_ID=rlPim, NumericIndex=NumericIndex, rlPimIfStatsEntry=rlPimIfStatsEntry, rlPimTmEntStarGIStateWarnThold=rlPimTmEntStarGIStateWarnThold, rlPimTmEntSGIStateWarnThold=rlPimTmEntSGIStateWarnThold, rlPimTmEntKeepalivePeriod=rlPimTmEntKeepalivePeriod, rlPimNmEntEnableUnicastMessages=rlPimNmEntEnableUnicastMessages, rlPimNmEntTmEntIndex=rlPimNmEntTmEntIndex, rlPimTmEntRegSuppressionTime=rlPimTmEntRegSuppressionTime, rlPimTmEntSupportedAddrType=rlPimTmEntSupportedAddrType, rlPimNmEntStatsUpTime=rlPimNmEntStatsUpTime, rlPimNmEntStatsNumRecvBadLength=rlPimNmEntStatsNumRecvBadLength, rlPimInterfaceStarGStateLimit=rlPimInterfaceStarGStateLimit, rlPimInterfaceAssertInterval=rlPimInterfaceAssertInterval, rlPimNbrStatsNumRecvJoinPrune=rlPimNbrStatsNumRecvJoinPrune, rlPimInterfaceSGStateLimit=rlPimInterfaceSGStateLimit, rlPimNmEntTable=rlPimNmEntTable, rlPimEmbeddedRpEnabled=rlPimEmbeddedRpEnabled, rlPimTmEntTable=rlPimTmEntTable, StdAccessListListIndexOrZero=StdAccessListListIndexOrZero, rlPimTmEntSGStateWarnThold=rlPimTmEntSGStateWarnThold, rlPimInterfaceSsmSrcAndGrpFilter=rlPimInterfaceSsmSrcAndGrpFilter, rlPimTmEntStarGIStateStored=rlPimTmEntStarGIStateStored, rlPimTmEntRegProbeTime=rlPimTmEntRegProbeTime, rlPimInterfaceOperStatus=rlPimInterfaceOperStatus, rlPimNmEntStatsNumErrRegisterStop=rlPimNmEntStatsNumErrRegisterStop, rlPimNbrStatsNumErrJoinPrune=rlPimNbrStatsNumErrJoinPrune, rlPimInterfaceAsmGrpFilter=rlPimInterfaceAsmGrpFilter, rlPimNmEntStatsNumErrCRPAdvert=rlPimNmEntStatsNumErrCRPAdvert, rlPimTmEntStarGIStateLimit=rlPimTmEntStarGIStateLimit, rlPimNmEntStatsNumCRPAdvfiltered=rlPimNmEntStatsNumCRPAdvfiltered, rlPimIfStatsNumSentHello=rlPimIfStatsNumSentHello)
