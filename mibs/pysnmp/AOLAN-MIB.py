#
# PySNMP MIB module AOLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AOLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:07:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, NotificationType, NotificationType, Gauge32, MibIdentifier, ObjectIdentity, Bits, TimeTicks, enterprises, Counter32, IpAddress, ModuleIdentity, Unsigned32, Counter64, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "NotificationType", "NotificationType", "Gauge32", "MibIdentifier", "ObjectIdentity", "Bits", "TimeTicks", "enterprises", "Counter32", "IpAddress", "ModuleIdentity", "Unsigned32", "Counter64", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
intel = MibIdentifier((1, 3, 6, 1, 4, 1, 343))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2))
mangement_products = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2, 8)).setLabel("mangement-products")
tCO_products = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2, 8, 1)).setLabel("tCO-products")
alert_on_LAN = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1)).setLabel("alert-on-LAN")
systemName = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemName.setStatus('current')
systemGUID = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemGUID.setStatus('current')
eventString = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventString.setStatus('current')
eventInfo = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(9, 9)).setFixedLength(9)).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventInfo.setStatus('current')
iPAddress = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: iPAddress.setStatus('current')
presenceHeartbeat = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,0)).setObjects(("AOLAN-MIB", "systemName"))
coverTamper = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,1)).setObjects(("AOLAN-MIB", "systemName"))
voltage_Fan_Temperature = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,2)).setLabel("voltage-Fan-Temperature").setObjects(("AOLAN-MIB", "systemName"))
lANLeash = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,3)).setObjects(("AOLAN-MIB", "systemName"))
temperature = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,4)).setObjects(("AOLAN-MIB", "systemName"))
processorMissing = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,5)).setObjects(("AOLAN-MIB", "systemName"))
processorTemperature = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,6)).setObjects(("AOLAN-MIB", "systemName"))
watchdog = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,7)).setObjects(("AOLAN-MIB", "systemName"))
p_O_S_T = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,8)).setLabel("p-O-S-T").setObjects(("AOLAN-MIB", "systemName"))
unknownEvent = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,9)).setObjects(("AOLAN-MIB", "systemName"))
processor_0_Missing = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,10)).setLabel("processor-0-Missing").setObjects(("AOLAN-MIB", "systemName"))
processor_1_Missing = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,11)).setLabel("processor-1-Missing").setObjects(("AOLAN-MIB", "systemName"))
voltage_Fan = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,12)).setLabel("voltage-Fan").setObjects(("AOLAN-MIB", "systemName"))
voltage = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,13)).setObjects(("AOLAN-MIB", "systemName"))
fan = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,14)).setObjects(("AOLAN-MIB", "systemName"))
fan_Temperature = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,15)).setLabel("fan-Temperature").setObjects(("AOLAN-MIB", "systemName"))
voltage_Temperature = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,16)).setLabel("voltage-Temperature").setObjects(("AOLAN-MIB", "systemName"))
undock = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,17)).setObjects(("AOLAN-MIB", "systemName"))
eventClear = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,18)).setObjects(("AOLAN-MIB", "systemName"))
clientAdded = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,19)).setObjects(("AOLAN-MIB", "systemName"))
clientDeleted = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 8, 1, 1) + (0,20)).setObjects(("AOLAN-MIB", "systemName"))
mibBuilder.exportSymbols("AOLAN-MIB", processorMissing=processorMissing, mangement_products=mangement_products, eventInfo=eventInfo, watchdog=watchdog, lANLeash=lANLeash, systemName=systemName, unknownEvent=unknownEvent, voltage_Fan_Temperature=voltage_Fan_Temperature, voltage=voltage, p_O_S_T=p_O_S_T, intel=intel, voltage_Fan=voltage_Fan, systemGUID=systemGUID, temperature=temperature, presenceHeartbeat=presenceHeartbeat, eventString=eventString, alert_on_LAN=alert_on_LAN, fan=fan, undock=undock, fan_Temperature=fan_Temperature, processor_1_Missing=processor_1_Missing, clientDeleted=clientDeleted, voltage_Temperature=voltage_Temperature, iPAddress=iPAddress, processorTemperature=processorTemperature, coverTamper=coverTamper, eventClear=eventClear, clientAdded=clientAdded, products=products, tCO_products=tCO_products, processor_0_Missing=processor_0_Missing)
