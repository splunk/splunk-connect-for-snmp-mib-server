#
# PySNMP MIB module SNR-ERD-3 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SNR-ERD-3
# Produced by pysmi-0.3.4 at Mon Apr 29 21:00:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, ObjectIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress, Integer32, enterprises, MibIdentifier, TimeTicks, Counter64, Bits, Counter32, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "ObjectIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress", "Integer32", "enterprises", "MibIdentifier", "TimeTicks", "Counter64", "Bits", "Counter32", "NotificationType", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
snr = ModuleIdentity((1, 3, 6, 1, 4, 1, 40418))
snr.setRevisions(('2015-04-29 12:00',))
if mibBuilder.loadTexts: snr.setLastUpdated('201504291200Z')
if mibBuilder.loadTexts: snr.setOrganization('NAG ')
snr_erd = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2)).setLabel("snr-erd")
snr_erd_3 = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 3)).setLabel("snr-erd-3")
ipAddressEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 3, 1))
resetsSet = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 3, 2))
sensesSet1 = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 3, 3))
sensesSet2 = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 3, 4))
commS = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 3, 5))
temperatureSensorsOut = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 3, 4, 2))
erd3Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0))
temperatureSensorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 0))
if mibBuilder.loadTexts: temperatureSensorAlarm.setStatus('current')
temperatureSensorRelease = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 1))
if mibBuilder.loadTexts: temperatureSensorRelease.setStatus('current')
signal1Contact5Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 2))
if mibBuilder.loadTexts: signal1Contact5Alarm.setStatus('current')
signal1Contact5Ok = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 3))
if mibBuilder.loadTexts: signal1Contact5Ok.setStatus('current')
signal2Contact6Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 4))
if mibBuilder.loadTexts: signal2Contact6Alarm.setStatus('current')
signal2Contact6Ok = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 5))
if mibBuilder.loadTexts: signal2Contact6Ok.setStatus('current')
voltageSignal1Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 6))
if mibBuilder.loadTexts: voltageSignal1Alarm.setStatus('current')
voltageSignal1Ok = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 7))
if mibBuilder.loadTexts: voltageSignal1Ok.setStatus('current')
voltageSignal2Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 8))
if mibBuilder.loadTexts: voltageSignal2Alarm.setStatus('current')
voltageSignal2Ok = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 9))
if mibBuilder.loadTexts: voltageSignal2Ok.setStatus('current')
anySensorSignal1contact2Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 10))
if mibBuilder.loadTexts: anySensorSignal1contact2Alarm.setStatus('current')
anySensorSignal1contact2Ok = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 11))
if mibBuilder.loadTexts: anySensorSignal1contact2Ok.setStatus('current')
anySensorSignal2contact3Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 12))
if mibBuilder.loadTexts: anySensorSignal2contact3Alarm.setStatus('current')
anySensorSignal2contact3Ok = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 13))
if mibBuilder.loadTexts: anySensorSignal2contact3Ok.setStatus('current')
anySensorSignal3contact4Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 14))
if mibBuilder.loadTexts: anySensorSignal3contact4Alarm.setStatus('current')
anySensorSignal3contact4Ok = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 15))
if mibBuilder.loadTexts: anySensorSignal3contact4Ok.setStatus('current')
voltage1Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 16))
if mibBuilder.loadTexts: voltage1Alarm.setStatus('current')
voltage1Ok = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 17))
if mibBuilder.loadTexts: voltage1Ok.setStatus('current')
voltage2Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 18))
if mibBuilder.loadTexts: voltage2Alarm.setStatus('current')
voltage2Ok = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 19))
if mibBuilder.loadTexts: voltage2Ok.setStatus('current')
remoteControlContact8On = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 20))
if mibBuilder.loadTexts: remoteControlContact8On.setStatus('current')
remoteControlContact8Off = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 21))
if mibBuilder.loadTexts: remoteControlContact8Off.setStatus('current')
resetedSmartContact7 = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 22))
if mibBuilder.loadTexts: resetedSmartContact7.setStatus('current')
temperatureSensorOutAlarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 23))
if mibBuilder.loadTexts: temperatureSensorOutAlarm.setStatus('current')
temperatureSensorOutRelease = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 24))
if mibBuilder.loadTexts: temperatureSensorOutRelease.setStatus('current')
temperatureSensorOutFail = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 25))
if mibBuilder.loadTexts: temperatureSensorOutFail.setStatus('current')
temperatureSensorOutOk = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 3, 0, 26))
if mibBuilder.loadTexts: temperatureSensorOutOk.setStatus('current')
erd3TrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 40418, 2, 3, 99)).setObjects(("SNR-ERD-3", "temperatureSensorAlarm"), ("SNR-ERD-3", "temperatureSensorRelease"), ("SNR-ERD-3", "signal1Contact5Alarm"), ("SNR-ERD-3", "signal1Contact5Ok"), ("SNR-ERD-3", "signal2Contact6Alarm"), ("SNR-ERD-3", "signal2Contact6Ok"), ("SNR-ERD-3", "voltageSignal1Alarm"), ("SNR-ERD-3", "voltageSignal1Ok"), ("SNR-ERD-3", "voltageSignal2Alarm"), ("SNR-ERD-3", "voltageSignal2Ok"), ("SNR-ERD-3", "anySensorSignal1contact2Alarm"), ("SNR-ERD-3", "anySensorSignal1contact2Ok"), ("SNR-ERD-3", "anySensorSignal2contact3Alarm"), ("SNR-ERD-3", "anySensorSignal2contact3Ok"), ("SNR-ERD-3", "anySensorSignal3contact4Alarm"), ("SNR-ERD-3", "anySensorSignal3contact4Ok"), ("SNR-ERD-3", "voltage1Alarm"), ("SNR-ERD-3", "voltage1Ok"), ("SNR-ERD-3", "voltage2Alarm"), ("SNR-ERD-3", "voltage2Ok"), ("SNR-ERD-3", "remoteControlContact8On"), ("SNR-ERD-3", "remoteControlContact8Off"), ("SNR-ERD-3", "resetedSmartContact7"), ("SNR-ERD-3", "temperatureSensorOutAlarm"), ("SNR-ERD-3", "temperatureSensorOutRelease"), ("SNR-ERD-3", "temperatureSensorOutFail"), ("SNR-ERD-3", "temperatureSensorOutOk"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    erd3TrapGroup = erd3TrapGroup.setStatus('current')
ipAddress = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipAddress.setStatus('current')
ipGatewayAddress = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipGatewayAddress.setStatus('current')
ipMonitoringDevice = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipMonitoringDevice.setStatus('current')
ipForTrap = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForTrap.setStatus('current')
resetSmartContact7 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("reset", 1), ("bypass", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetSmartContact7.setStatus('current')
numberOfResetPositives = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("resetPositives", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: numberOfResetPositives.setStatus('current')
remoteControlContact8 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 2, 1, 0, 6, 5))).clone(namedValues=NamedValues(("termostatSetON", 3), ("switch", 4), ("manualSetON", 2), ("manOFF", 1), ("manON", 0), ("autoOFF", 6), ("autoON", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: remoteControlContact8.setStatus('current')
monitorAlarmSignal1Contact5 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 1, 2, 0))).clone(namedValues=NamedValues(("sensorOn", 3), ("doorIsClose", 1), ("doorIsOpen", 2), ("sensorOff", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: monitorAlarmSignal1Contact5.setStatus('current')
monitorAlarmSignal2Contact6 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 1, 2, 0))).clone(namedValues=NamedValues(("sensorOn", 3), ("doorIsClose", 1), ("doorIsOpen", 2), ("sensorOff", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: monitorAlarmSignal2Contact6.setStatus('current')
numberOfAlarmPositives = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("resetPositives", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: numberOfAlarmPositives.setStatus('current')
monitorAnySensorSignal1contact2 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 1, 2, 0))).clone(namedValues=NamedValues(("sensorOn", 3), ("sensorIs0", 1), ("sensorIs1", 2), ("sensorOff", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: monitorAnySensorSignal1contact2.setStatus('current')
monitorAnySensorSignal2contact3 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 1, 2, 0))).clone(namedValues=NamedValues(("sensorOn", 3), ("sensorIs0", 1), ("sensorIs1", 2), ("sensorOff", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: monitorAnySensorSignal2contact3.setStatus('current')
monitorAnySensorSignal3contact4 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 1, 2, 0))).clone(namedValues=NamedValues(("sensorOn", 3), ("sensorIs0", 1), ("sensorIs1", 2), ("sensorOff", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: monitorAnySensorSignal3contact4.setStatus('current')
monitorVoltageSignal1 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 2, 1, 0))).clone(namedValues=NamedValues(("sensorOn", 3), ("voltageIsYes", 2), ("voltageIsNo", 1), ("sensorOff", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: monitorVoltageSignal1.setStatus('current')
monitorVoltageSignal2 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 2, 1, 0))).clone(namedValues=NamedValues(("sensorOn", 3), ("voltageIsYes", 2), ("voltageIsNo", 1), ("sensorOff", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: monitorVoltageSignal2.setStatus('current')
temperatureSensor = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureSensor.setStatus('current')
temperatureSensorOutSerial1 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 4, 2, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureSensorOutSerial1.setStatus('current')
temperatureSensorOut1 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 4, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureSensorOut1.setStatus('current')
temperatureSensorOutSerial2 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 4, 2, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureSensorOutSerial2.setStatus('current')
temperatureSensorOut2 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 4, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureSensorOut2.setStatus('current')
temperatureSensorOutSerial3 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 4, 2, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureSensorOutSerial3.setStatus('current')
temperatureSensorOut3 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 4, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureSensorOut3.setStatus('current')
temperatureSensorOutSerial4 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 4, 2, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureSensorOutSerial4.setStatus('current')
temperatureSensorOut4 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 4, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureSensorOut4.setStatus('current')
temperatureSensorOutSerial5 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 4, 2, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureSensorOutSerial5.setStatus('current')
temperatureSensorOut5 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 4, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureSensorOut5.setStatus('current')
voltageSensor1Contact10 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageSensor1Contact10.setStatus('current')
sysVoltageAlarm = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 4, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysVoltageAlarm.setStatus('current')
voltageSensor2Contact11 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageSensor2Contact11.setStatus('current')
sysVoltage2Alarm = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 4, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysVoltage2Alarm.setStatus('current')
communityString = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: communityString.setStatus('current')
trapMode = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("once", 1), ("cyclically", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapMode.setStatus('current')
alarmSense1Name = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 5, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmSense1Name.setStatus('current')
alarmSense2Name = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 5, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmSense2Name.setStatus('current')
userSense1Name = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 5, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userSense1Name.setStatus('current')
userSense2Name = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 5, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userSense2Name.setStatus('current')
userSense3Name = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 5, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userSense3Name.setStatus('current')
message = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 3, 5, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: message.setStatus('current')
mibBuilder.exportSymbols("SNR-ERD-3", erd3Traps=erd3Traps, userSense2Name=userSense2Name, resetsSet=resetsSet, temperatureSensorOutSerial4=temperatureSensorOutSerial4, anySensorSignal1contact2Ok=anySensorSignal1contact2Ok, communityString=communityString, voltageSignal1Ok=voltageSignal1Ok, temperatureSensorOutOk=temperatureSensorOutOk, monitorAlarmSignal1Contact5=monitorAlarmSignal1Contact5, sysVoltage2Alarm=sysVoltage2Alarm, numberOfAlarmPositives=numberOfAlarmPositives, monitorAlarmSignal2Contact6=monitorAlarmSignal2Contact6, voltage1Ok=voltage1Ok, temperatureSensorOutRelease=temperatureSensorOutRelease, temperatureSensorsOut=temperatureSensorsOut, temperatureSensorOutSerial2=temperatureSensorOutSerial2, monitorVoltageSignal1=monitorVoltageSignal1, signal2Contact6Ok=signal2Contact6Ok, commS=commS, temperatureSensorOutSerial5=temperatureSensorOutSerial5, signal1Contact5Alarm=signal1Contact5Alarm, sensesSet1=sensesSet1, voltageSignal1Alarm=voltageSignal1Alarm, temperatureSensorOutFail=temperatureSensorOutFail, remoteControlContact8=remoteControlContact8, remoteControlContact8Off=remoteControlContact8Off, monitorVoltageSignal2=monitorVoltageSignal2, temperatureSensorOutSerial1=temperatureSensorOutSerial1, PYSNMP_MODULE_ID=snr, remoteControlContact8On=remoteControlContact8On, numberOfResetPositives=numberOfResetPositives, temperatureSensorOut2=temperatureSensorOut2, anySensorSignal3contact4Alarm=anySensorSignal3contact4Alarm, ipMonitoringDevice=ipMonitoringDevice, voltage2Alarm=voltage2Alarm, monitorAnySensorSignal2contact3=monitorAnySensorSignal2contact3, anySensorSignal2contact3Alarm=anySensorSignal2contact3Alarm, monitorAnySensorSignal3contact4=monitorAnySensorSignal3contact4, temperatureSensorOut4=temperatureSensorOut4, signal2Contact6Alarm=signal2Contact6Alarm, signal1Contact5Ok=signal1Contact5Ok, voltageSensor2Contact11=voltageSensor2Contact11, ipAddressEntry=ipAddressEntry, temperatureSensorOutAlarm=temperatureSensorOutAlarm, resetedSmartContact7=resetedSmartContact7, monitorAnySensorSignal1contact2=monitorAnySensorSignal1contact2, alarmSense1Name=alarmSense1Name, anySensorSignal1contact2Alarm=anySensorSignal1contact2Alarm, snr_erd_3=snr_erd_3, voltageSignal2Alarm=voltageSignal2Alarm, ipGatewayAddress=ipGatewayAddress, snr=snr, temperatureSensor=temperatureSensor, userSense1Name=userSense1Name, voltage2Ok=voltage2Ok, voltageSignal2Ok=voltageSignal2Ok, temperatureSensorOut3=temperatureSensorOut3, temperatureSensorOutSerial3=temperatureSensorOutSerial3, temperatureSensorRelease=temperatureSensorRelease, temperatureSensorOut1=temperatureSensorOut1, voltage1Alarm=voltage1Alarm, voltageSensor1Contact10=voltageSensor1Contact10, temperatureSensorAlarm=temperatureSensorAlarm, resetSmartContact7=resetSmartContact7, alarmSense2Name=alarmSense2Name, ipAddress=ipAddress, anySensorSignal2contact3Ok=anySensorSignal2contact3Ok, snr_erd=snr_erd, sysVoltageAlarm=sysVoltageAlarm, trapMode=trapMode, userSense3Name=userSense3Name, erd3TrapGroup=erd3TrapGroup, ipForTrap=ipForTrap, anySensorSignal3contact4Ok=anySensorSignal3contact4Ok, message=message, temperatureSensorOut5=temperatureSensorOut5, sensesSet2=sensesSet2)
