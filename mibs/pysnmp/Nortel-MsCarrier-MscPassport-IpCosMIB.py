#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-IpCosMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-IpCosMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:21:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
mscVrIpIndex, mscVrIp = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex", "mscVrIp")
Integer32, StorageType, DisplayString, RowStatus, Unsigned32 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Integer32", "StorageType", "DisplayString", "RowStatus", "Unsigned32")
NonReplicated, Link, Hex, AsciiStringIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "NonReplicated", "Link", "Hex", "AsciiStringIndex")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
mscVrIndex, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, TimeTicks, Gauge32, ObjectIdentity, Bits, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, MibIdentifier, iso, Unsigned32, IpAddress, NotificationType, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "TimeTicks", "Gauge32", "ObjectIdentity", "Bits", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "MibIdentifier", "iso", "Unsigned32", "IpAddress", "NotificationType", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ipCosMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 161))
mscVrIpPg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20))
mscVrIpPgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 1), )
if mibBuilder.loadTexts: mscVrIpPgRowStatusTable.setStatus('mandatory')
mscVrIpPgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgIndex"))
if mibBuilder.loadTexts: mscVrIpPgRowStatusEntry.setStatus('mandatory')
mscVrIpPgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpPgRowStatus.setStatus('mandatory')
mscVrIpPgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpPgComponentName.setStatus('mandatory')
mscVrIpPgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpPgStorageType.setStatus('mandatory')
mscVrIpPgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: mscVrIpPgIndex.setStatus('mandatory')
mscVrIpPgUsersTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 432), )
if mibBuilder.loadTexts: mscVrIpPgUsersTable.setStatus('mandatory')
mscVrIpPgUsersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 432, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgUsersValue"))
if mibBuilder.loadTexts: mscVrIpPgUsersEntry.setStatus('mandatory')
mscVrIpPgUsersValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 432, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpPgUsersValue.setStatus('mandatory')
mscVrIpPgUsersRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 432, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscVrIpPgUsersRowStatus.setStatus('mandatory')
mscVrIpPgPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2))
mscVrIpPgPolicyRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 1), )
if mibBuilder.loadTexts: mscVrIpPgPolicyRowStatusTable.setStatus('mandatory')
mscVrIpPgPolicyRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyIndex"))
if mibBuilder.loadTexts: mscVrIpPgPolicyRowStatusEntry.setStatus('mandatory')
mscVrIpPgPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpPgPolicyRowStatus.setStatus('mandatory')
mscVrIpPgPolicyComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpPgPolicyComponentName.setStatus('mandatory')
mscVrIpPgPolicyStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpPgPolicyStorageType.setStatus('mandatory')
mscVrIpPgPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: mscVrIpPgPolicyIndex.setStatus('mandatory')
mscVrIpPgPolicyProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 10), )
if mibBuilder.loadTexts: mscVrIpPgPolicyProvTable.setStatus('mandatory')
mscVrIpPgPolicyProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyIndex"))
if mibBuilder.loadTexts: mscVrIpPgPolicyProvEntry.setStatus('mandatory')
mscVrIpPgPolicyCosTreatmentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpPgPolicyCosTreatmentIndex.setStatus('mandatory')
mscVrIpPgPolicyTosMap = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 2))
mscVrIpPgPolicyTosMapRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 2, 1), )
if mibBuilder.loadTexts: mscVrIpPgPolicyTosMapRowStatusTable.setStatus('mandatory')
mscVrIpPgPolicyTosMapRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyTosMapIndex"))
if mibBuilder.loadTexts: mscVrIpPgPolicyTosMapRowStatusEntry.setStatus('mandatory')
mscVrIpPgPolicyTosMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpPgPolicyTosMapRowStatus.setStatus('mandatory')
mscVrIpPgPolicyTosMapComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpPgPolicyTosMapComponentName.setStatus('mandatory')
mscVrIpPgPolicyTosMapStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpPgPolicyTosMapStorageType.setStatus('mandatory')
mscVrIpPgPolicyTosMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpPgPolicyTosMapIndex.setStatus('mandatory')
mscVrIpPgPolicyTosMapOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 2, 11), )
if mibBuilder.loadTexts: mscVrIpPgPolicyTosMapOperTable.setStatus('mandatory')
mscVrIpPgPolicyTosMapOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyTosMapIndex"))
if mibBuilder.loadTexts: mscVrIpPgPolicyTosMapOperEntry.setStatus('mandatory')
mscVrIpPgPolicyTosMapCos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 2, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpPgPolicyTosMapCos.setStatus('mandatory')
mscVrIpPgPolicyTosMapTosTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 2, 434), )
if mibBuilder.loadTexts: mscVrIpPgPolicyTosMapTosTable.setStatus('mandatory')
mscVrIpPgPolicyTosMapTosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 2, 434, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyTosMapIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyTosMapTosValue"))
if mibBuilder.loadTexts: mscVrIpPgPolicyTosMapTosEntry.setStatus('mandatory')
mscVrIpPgPolicyTosMapTosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 2, 434, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpPgPolicyTosMapTosValue.setStatus('mandatory')
mscVrIpPgPolicyTosMapTosRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 2, 434, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscVrIpPgPolicyTosMapTosRowStatus.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4Flow = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3))
mscVrIpPgPolicyIpAddrLayer4FlowRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 1), )
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowRowStatusTable.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyIpAddrLayer4FlowIndex"))
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowRowStatusEntry.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowRowStatus.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowComponentName.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowStorageType.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023)))
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowIndex.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 10), )
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowProvTable.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyIpAddrLayer4FlowIndex"))
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowProvEntry.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 10, 1, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowPrefix.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowPrefixLength.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowProtoProvisionedTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 11), )
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowProtoProvisionedTable.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowProtoProvisionedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyIpAddrLayer4FlowIndex"))
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowProtoProvisionedEntry.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 6, 17))).clone(namedValues=NamedValues(("icmp", 1), ("tcp", 6), ("udp", 17))).clone('tcp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowProtocol.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 12), )
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowOperTable.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyIpAddrLayer4FlowIndex"))
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowOperEntry.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowCos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowCos.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowPortNumberRangeTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 435), )
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowPortNumberRangeTable.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowPortNumberRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 435, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyIpAddrLayer4FlowIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgPolicyIpAddrLayer4FlowPortNumberRangeValue"))
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowPortNumberRangeEntry.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowPortNumberRangeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 435, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowPortNumberRangeValue.setStatus('mandatory')
mscVrIpPgPolicyIpAddrLayer4FlowPortNumberRangeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 2, 3, 435, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscVrIpPgPolicyIpAddrLayer4FlowPortNumberRangeRowStatus.setStatus('mandatory')
mscVrIpPgCosTreatment = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 3))
mscVrIpPgCosTreatmentRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 3, 1), )
if mibBuilder.loadTexts: mscVrIpPgCosTreatmentRowStatusTable.setStatus('mandatory')
mscVrIpPgCosTreatmentRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgCosTreatmentIndex"))
if mibBuilder.loadTexts: mscVrIpPgCosTreatmentRowStatusEntry.setStatus('mandatory')
mscVrIpPgCosTreatmentRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpPgCosTreatmentRowStatus.setStatus('mandatory')
mscVrIpPgCosTreatmentComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpPgCosTreatmentComponentName.setStatus('mandatory')
mscVrIpPgCosTreatmentStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpPgCosTreatmentStorageType.setStatus('mandatory')
mscVrIpPgCosTreatmentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscVrIpPgCosTreatmentIndex.setStatus('mandatory')
mscVrIpPgCosTreatmentProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 3, 10), )
if mibBuilder.loadTexts: mscVrIpPgCosTreatmentProvTable.setStatus('mandatory')
mscVrIpPgCosTreatmentProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgIndex"), (0, "Nortel-MsCarrier-MscPassport-IpCosMIB", "mscVrIpPgCosTreatmentIndex"))
if mibBuilder.loadTexts: mscVrIpPgCosTreatmentProvEntry.setStatus('mandatory')
mscVrIpPgCosTreatmentCos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpPgCosTreatmentCos.setStatus('mandatory')
mscVrIpPgCosTreatmentSetTosByte = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpPgCosTreatmentSetTosByte.setStatus('mandatory')
mscVrIpPgCosTreatmentTos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 3, 10, 1, 4), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpPgCosTreatmentTos.setStatus('mandatory')
mscVrIpPgCosTreatmentTosMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 20, 3, 10, 1, 5), Hex().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(224)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpPgCosTreatmentTosMask.setStatus('mandatory')
ipCosGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 161, 1))
ipCosGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 161, 1, 1))
ipCosGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 161, 1, 1, 3))
ipCosGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 161, 1, 1, 3, 2))
ipCosCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 161, 3))
ipCosCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 161, 3, 1))
ipCosCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 161, 3, 1, 3))
ipCosCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 161, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-IpCosMIB", mscVrIpPgComponentName=mscVrIpPgComponentName, ipCosGroupCA02=ipCosGroupCA02, mscVrIpPgPolicyRowStatusTable=mscVrIpPgPolicyRowStatusTable, mscVrIpPgPolicyStorageType=mscVrIpPgPolicyStorageType, mscVrIpPgPolicyProvEntry=mscVrIpPgPolicyProvEntry, mscVrIpPgPolicyIpAddrLayer4FlowProvEntry=mscVrIpPgPolicyIpAddrLayer4FlowProvEntry, mscVrIpPgPolicyIpAddrLayer4FlowCos=mscVrIpPgPolicyIpAddrLayer4FlowCos, mscVrIpPgPolicyIpAddrLayer4FlowIndex=mscVrIpPgPolicyIpAddrLayer4FlowIndex, mscVrIpPgPolicyCosTreatmentIndex=mscVrIpPgPolicyCosTreatmentIndex, mscVrIpPgPolicyIpAddrLayer4FlowPortNumberRangeTable=mscVrIpPgPolicyIpAddrLayer4FlowPortNumberRangeTable, mscVrIpPgCosTreatmentProvEntry=mscVrIpPgCosTreatmentProvEntry, mscVrIpPgUsersTable=mscVrIpPgUsersTable, mscVrIpPgRowStatusEntry=mscVrIpPgRowStatusEntry, mscVrIpPgStorageType=mscVrIpPgStorageType, mscVrIpPgPolicyTosMapTosRowStatus=mscVrIpPgPolicyTosMapTosRowStatus, mscVrIpPgPolicyTosMap=mscVrIpPgPolicyTosMap, mscVrIpPgCosTreatmentRowStatusTable=mscVrIpPgCosTreatmentRowStatusTable, mscVrIpPgCosTreatmentStorageType=mscVrIpPgCosTreatmentStorageType, mscVrIpPgPolicyIpAddrLayer4FlowProvTable=mscVrIpPgPolicyIpAddrLayer4FlowProvTable, mscVrIpPgPolicyIpAddrLayer4FlowProtoProvisionedTable=mscVrIpPgPolicyIpAddrLayer4FlowProtoProvisionedTable, mscVrIpPgPolicyIpAddrLayer4FlowProtocol=mscVrIpPgPolicyIpAddrLayer4FlowProtocol, ipCosGroupCA=ipCosGroupCA, mscVrIpPgPolicyTosMapTosValue=mscVrIpPgPolicyTosMapTosValue, mscVrIpPgCosTreatmentIndex=mscVrIpPgCosTreatmentIndex, mscVrIpPgCosTreatmentCos=mscVrIpPgCosTreatmentCos, ipCosGroupCA02A=ipCosGroupCA02A, mscVrIpPgPolicyTosMapTosTable=mscVrIpPgPolicyTosMapTosTable, mscVrIpPgPolicyIpAddrLayer4FlowRowStatus=mscVrIpPgPolicyIpAddrLayer4FlowRowStatus, mscVrIpPgCosTreatmentTos=mscVrIpPgCosTreatmentTos, mscVrIpPgPolicyIpAddrLayer4FlowPrefix=mscVrIpPgPolicyIpAddrLayer4FlowPrefix, mscVrIpPgPolicyIpAddrLayer4FlowOperEntry=mscVrIpPgPolicyIpAddrLayer4FlowOperEntry, mscVrIpPgPolicyIpAddrLayer4FlowRowStatusEntry=mscVrIpPgPolicyIpAddrLayer4FlowRowStatusEntry, mscVrIpPgCosTreatmentRowStatus=mscVrIpPgCosTreatmentRowStatus, mscVrIpPgPolicyTosMapOperTable=mscVrIpPgPolicyTosMapOperTable, mscVrIpPgIndex=mscVrIpPgIndex, ipCosGroup=ipCosGroup, mscVrIpPgUsersValue=mscVrIpPgUsersValue, mscVrIpPgPolicyTosMapTosEntry=mscVrIpPgPolicyTosMapTosEntry, mscVrIpPgPolicyComponentName=mscVrIpPgPolicyComponentName, mscVrIpPgPolicyTosMapComponentName=mscVrIpPgPolicyTosMapComponentName, ipCosCapabilitiesCA02=ipCosCapabilitiesCA02, mscVrIpPgPolicyIpAddrLayer4FlowPrefixLength=mscVrIpPgPolicyIpAddrLayer4FlowPrefixLength, mscVrIpPgPolicyTosMapIndex=mscVrIpPgPolicyTosMapIndex, ipCosCapabilitiesCA=ipCosCapabilitiesCA, mscVrIpPgRowStatus=mscVrIpPgRowStatus, mscVrIpPgCosTreatmentComponentName=mscVrIpPgCosTreatmentComponentName, mscVrIpPgPolicyIpAddrLayer4FlowStorageType=mscVrIpPgPolicyIpAddrLayer4FlowStorageType, mscVrIpPgPolicy=mscVrIpPgPolicy, mscVrIpPgPolicyIpAddrLayer4Flow=mscVrIpPgPolicyIpAddrLayer4Flow, mscVrIpPgPolicyTosMapCos=mscVrIpPgPolicyTosMapCos, mscVrIpPgPolicyTosMapStorageType=mscVrIpPgPolicyTosMapStorageType, mscVrIpPgPolicyIpAddrLayer4FlowPortNumberRangeRowStatus=mscVrIpPgPolicyIpAddrLayer4FlowPortNumberRangeRowStatus, mscVrIpPgPolicyIpAddrLayer4FlowPortNumberRangeValue=mscVrIpPgPolicyIpAddrLayer4FlowPortNumberRangeValue, mscVrIpPgPolicyTosMapOperEntry=mscVrIpPgPolicyTosMapOperEntry, mscVrIpPgPolicyTosMapRowStatus=mscVrIpPgPolicyTosMapRowStatus, mscVrIpPgPolicyRowStatus=mscVrIpPgPolicyRowStatus, mscVrIpPgPolicyProvTable=mscVrIpPgPolicyProvTable, mscVrIpPgPolicyIndex=mscVrIpPgPolicyIndex, mscVrIpPgPolicyIpAddrLayer4FlowProtoProvisionedEntry=mscVrIpPgPolicyIpAddrLayer4FlowProtoProvisionedEntry, mscVrIpPg=mscVrIpPg, mscVrIpPgPolicyIpAddrLayer4FlowRowStatusTable=mscVrIpPgPolicyIpAddrLayer4FlowRowStatusTable, mscVrIpPgPolicyRowStatusEntry=mscVrIpPgPolicyRowStatusEntry, ipCosCapabilities=ipCosCapabilities, mscVrIpPgPolicyIpAddrLayer4FlowComponentName=mscVrIpPgPolicyIpAddrLayer4FlowComponentName, mscVrIpPgPolicyIpAddrLayer4FlowOperTable=mscVrIpPgPolicyIpAddrLayer4FlowOperTable, mscVrIpPgCosTreatment=mscVrIpPgCosTreatment, mscVrIpPgPolicyTosMapRowStatusEntry=mscVrIpPgPolicyTosMapRowStatusEntry, mscVrIpPgCosTreatmentRowStatusEntry=mscVrIpPgCosTreatmentRowStatusEntry, mscVrIpPgUsersEntry=mscVrIpPgUsersEntry, mscVrIpPgCosTreatmentSetTosByte=mscVrIpPgCosTreatmentSetTosByte, mscVrIpPgPolicyTosMapRowStatusTable=mscVrIpPgPolicyTosMapRowStatusTable, mscVrIpPgPolicyIpAddrLayer4FlowPortNumberRangeEntry=mscVrIpPgPolicyIpAddrLayer4FlowPortNumberRangeEntry, ipCosMIB=ipCosMIB, mscVrIpPgUsersRowStatus=mscVrIpPgUsersRowStatus, mscVrIpPgCosTreatmentProvTable=mscVrIpPgCosTreatmentProvTable, mscVrIpPgCosTreatmentTosMask=mscVrIpPgCosTreatmentTosMask, ipCosCapabilitiesCA02A=ipCosCapabilitiesCA02A, mscVrIpPgRowStatusTable=mscVrIpPgRowStatusTable)
