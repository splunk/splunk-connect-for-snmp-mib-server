#
# PySNMP MIB module GWSNADSMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GWSNADSMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:07:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Bits, Integer32, MibIdentifier, NotificationType, enterprises, IpAddress, Gauge32, TimeTicks, NotificationType, ModuleIdentity, Counter32, Counter64, iso, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Bits", "Integer32", "MibIdentifier", "NotificationType", "enterprises", "IpAddress", "Gauge32", "TimeTicks", "NotificationType", "ModuleIdentity", "Counter32", "Counter64", "iso", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
novell = MibIdentifier((1, 3, 6, 1, 4, 1, 922))
gateways = MibIdentifier((1, 3, 6, 1, 4, 1, 922, 2))
ngwsnads = MibIdentifier((1, 3, 6, 1, 4, 1, 922, 2, 42))
ngwsnadsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 922, 2, 42, 1))
ngwsnadsTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 922, 2, 42, 2))
ngwsnadsGatewayName = MibScalar((1, 3, 6, 1, 4, 1, 922, 2, 42, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ngwsnadsGatewayName.setStatus('mandatory')
ngwsnadsUptime = MibScalar((1, 3, 6, 1, 4, 1, 922, 2, 42, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ngwsnadsUptime.setStatus('mandatory')
ngwsnadsGroupWiseLink = MibScalar((1, 3, 6, 1, 4, 1, 922, 2, 42, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ngwsnadsGroupWiseLink.setStatus('mandatory')
ngwsnadsFrgnLink = MibScalar((1, 3, 6, 1, 4, 1, 922, 2, 42, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ngwsnadsFrgnLink.setStatus('mandatory')
ngwsnadsOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 922, 2, 42, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ngwsnadsOutBytes.setStatus('mandatory')
ngwsnadsInBytes = MibScalar((1, 3, 6, 1, 4, 1, 922, 2, 42, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ngwsnadsInBytes.setStatus('mandatory')
ngwsnadsOutMsgs = MibScalar((1, 3, 6, 1, 4, 1, 922, 2, 42, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ngwsnadsOutMsgs.setStatus('mandatory')
ngwsnadsInMsgs = MibScalar((1, 3, 6, 1, 4, 1, 922, 2, 42, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ngwsnadsInMsgs.setStatus('mandatory')
ngwsnadsOutStatuses = MibScalar((1, 3, 6, 1, 4, 1, 922, 2, 42, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ngwsnadsOutStatuses.setStatus('mandatory')
ngwsnadsInStatuses = MibScalar((1, 3, 6, 1, 4, 1, 922, 2, 42, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ngwsnadsInStatuses.setStatus('mandatory')
ngwsnadsOutErrors = MibScalar((1, 3, 6, 1, 4, 1, 922, 2, 42, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ngwsnadsOutErrors.setStatus('mandatory')
ngwsnadsInErrors = MibScalar((1, 3, 6, 1, 4, 1, 922, 2, 42, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ngwsnadsInErrors.setStatus('mandatory')
ngwsnadsTrapTime = MibScalar((1, 3, 6, 1, 4, 1, 922, 2, 42, 2, 1), Integer32())
if mibBuilder.loadTexts: ngwsnadsTrapTime.setStatus('mandatory')
ngwsnadsStartTrap = NotificationType((1, 3, 6, 1, 4, 1, 922, 2, 42, 1) + (0,1)).setObjects(("GWSNADSMIB", "ngwsnadsTrapTime"), ("GWSNADSMIB", "ngwsnadsGatewayName"))
ngwsnadsStopTrap = NotificationType((1, 3, 6, 1, 4, 1, 922, 2, 42, 1) + (0,2)).setObjects(("GWSNADSMIB", "ngwsnadsTrapTime"), ("GWSNADSMIB", "ngwsnadsGatewayName"))
ngwsnadsRestartTrap = NotificationType((1, 3, 6, 1, 4, 1, 922, 2, 42, 1) + (0,3)).setObjects(("GWSNADSMIB", "ngwsnadsTrapTime"), ("GWSNADSMIB", "ngwsnadsGatewayName"))
ngwsnadsGroupWiseLinkTrap = NotificationType((1, 3, 6, 1, 4, 1, 922, 2, 42, 1) + (0,4)).setObjects(("GWSNADSMIB", "ngwsnadsTrapTime"), ("GWSNADSMIB", "ngwsnadsGatewayName"))
ngwsnadsFgnLinkTrap = NotificationType((1, 3, 6, 1, 4, 1, 922, 2, 42, 1) + (0,5)).setObjects(("GWSNADSMIB", "ngwsnadsTrapTime"), ("GWSNADSMIB", "ngwsnadsGatewayName"))
mibBuilder.exportSymbols("GWSNADSMIB", ngwsnadsInStatuses=ngwsnadsInStatuses, ngwsnadsGroupWiseLinkTrap=ngwsnadsGroupWiseLinkTrap, ngwsnadsOutBytes=ngwsnadsOutBytes, ngwsnadsStopTrap=ngwsnadsStopTrap, ngwsnadsOutErrors=ngwsnadsOutErrors, ngwsnadsOutStatuses=ngwsnadsOutStatuses, ngwsnadsTrapTime=ngwsnadsTrapTime, ngwsnadsRestartTrap=ngwsnadsRestartTrap, ngwsnads=ngwsnads, ngwsnadsUptime=ngwsnadsUptime, gateways=gateways, ngwsnadsGroupWiseLink=ngwsnadsGroupWiseLink, ngwsnadsTrapInfo=ngwsnadsTrapInfo, novell=novell, ngwsnadsGatewayName=ngwsnadsGatewayName, ngwsnadsFgnLinkTrap=ngwsnadsFgnLinkTrap, ngwsnadsInfo=ngwsnadsInfo, ngwsnadsOutMsgs=ngwsnadsOutMsgs, ngwsnadsStartTrap=ngwsnadsStartTrap, ngwsnadsInMsgs=ngwsnadsInMsgs, ngwsnadsFrgnLink=ngwsnadsFrgnLink, ngwsnadsInErrors=ngwsnadsInErrors, ngwsnadsInBytes=ngwsnadsInBytes)
