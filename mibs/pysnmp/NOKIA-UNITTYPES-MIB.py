#
# PySNMP MIB module NOKIA-UNITTYPES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NOKIA-UNITTYPES-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:13:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
ntcCommonModules, ntcHWUnitTypeMibs = mibBuilder.importSymbols("NOKIA-COMMON-MIB-OID-REGISTRATION-MIB", "ntcCommonModules", "ntcHWUnitTypeMibs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Counter64, NotificationType, Unsigned32, IpAddress, ModuleIdentity, Bits, Integer32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, iso, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "NotificationType", "Unsigned32", "IpAddress", "ModuleIdentity", "Bits", "Integer32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "iso", "MibIdentifier", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ntcHWUnitTypeModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 94, 1, 16, 5, 3))
ntcHWUnitTypeModule.setRevisions(('1998-09-24 00:00', '1998-10-04 00:00', '1998-11-25 00:00', '1998-12-03 00:00', '1999-10-18 00:00', '1901-03-14 00:00', '1902-02-08 00:00',))
if mibBuilder.loadTexts: ntcHWUnitTypeModule.setLastUpdated('9808270000Z')
if mibBuilder.loadTexts: ntcHWUnitTypeModule.setOrganization('Nokia')
ntcHWUnitNone = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 1))
ntcHWUnitAny = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 2))
ntcHWSlot = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 21))
ntcHWBackplane = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 22))
ntcHWUnitIanNcaStm1Electrical = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 3))
ntcHWUnitNcaStm1SingleModeOptical = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 4))
ntcHWUnitNcaStm1MultiModeOptical = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 5))
ntcHWUnitIanASU = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 6))
ntcHWUnitIan4PortV35 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 7))
ntcHWUnitIan4PortE1 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 8))
ntcHWUnitIan4PortMsdsl = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 9))
ntcHWUnitIanIpFwrdingUnit = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 10))
ntcHWUnitBbanAlbaStm1E = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 11))
ntcHWUnitBbanAlbaStm1Om = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 12))
ntcHWUnitBbanAlbaStm1Os = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 13))
ntcHWUnitBbanAlbaE3 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 14))
ntcHWUnitBbanSliuAdslMiDmt = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 15))
ntcHWUnitBbanSliuAdslAdDmt = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 16))
ntcHWUnitBbanSliuE1I75 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 17))
ntcHWUnitBbanSliuE1I120 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 18))
ntcHWUnitBbanBackplane8 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 19))
ntcHWUnitBbanBackplane17 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 20))
ntcHWUnitIprgSeqCrp = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 23))
ntcHWUnitIprgSeqGplc1 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 24))
ntcHWUnitIprgSeqGplc2 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 25))
ntcHWUnitIprgSeqWslc = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 26))
ntcHWUnitIprgEth1 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 27))
ntcHWUnitIprgEth2 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 28))
ntcHWUnitIprgEth4 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 29))
ntcHWUnitIprgAtm = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 30))
ntcHWUnitIprgX211 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 31))
ntcHWUnitIprgV351 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 32))
ntcHWUnitIprgX212 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 33))
ntcHWUnitIprgV352 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 34))
ntcHWUnitIprgHssi = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 35))
ntcHWUnitIprgE1 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 36))
ntcHWUnitIprgT1 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 37))
ntcHWUnitIprgFddi = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 38))
ntcHWUnitIprgTok = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 39))
ntcHWUnitIprgIsdn = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 40))
ntcHWUnitIpsoGigEth1 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 57))
ntcHWUnitIpsoSs7 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 58))
ntcHWUnitIpsoCryptoAccelerator = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 59))
ntcHWUnitIprgBackplaneIP110 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 41))
ntcHWUnitIprgBackplaneIP330 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 42))
ntcHWUnitIprgBackplaneIP440 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 43))
ntcHWUnitIprgBackplaneIP530 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 44))
ntcHWUnitIprgBackplaneIP650 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 45))
ntcHWUnitIprgBackplaneIP730 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 46))
ntcHWUnitIprgBackplaneSeq9 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 47))
ntcHWUnitIprgBackplaneSeq18 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 48))
ntcHWUnitIprgChassisIP110 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 49))
ntcHWUnitIprgChassisIP330 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 50))
ntcHWUnitIprgChassisIP440 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 51))
ntcHWUnitIprgChassisIP530 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 52))
ntcHWUnitIprgChassisIP650 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 53))
ntcHWUnitIprgChassisIP730 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 54))
ntcHWUnitIprgChassisSeq9 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 55))
ntcHWUnitIprgChassisSeq18 = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 56))
ntcHWUnitIpsoHardDisk = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 16, 7, 3, 60))
mibBuilder.exportSymbols("NOKIA-UNITTYPES-MIB", ntcHWUnitBbanAlbaE3=ntcHWUnitBbanAlbaE3, ntcHWUnitIprgSeqGplc1=ntcHWUnitIprgSeqGplc1, ntcHWUnitIprgSeqCrp=ntcHWUnitIprgSeqCrp, ntcHWUnitIprgBackplaneIP730=ntcHWUnitIprgBackplaneIP730, ntcHWUnitBbanAlbaStm1E=ntcHWUnitBbanAlbaStm1E, ntcHWUnitIan4PortMsdsl=ntcHWUnitIan4PortMsdsl, PYSNMP_MODULE_ID=ntcHWUnitTypeModule, ntcHWUnitIprgHssi=ntcHWUnitIprgHssi, ntcHWUnitIprgEth1=ntcHWUnitIprgEth1, ntcHWUnitBbanSliuAdslAdDmt=ntcHWUnitBbanSliuAdslAdDmt, ntcHWUnitIprgEth2=ntcHWUnitIprgEth2, ntcHWSlot=ntcHWSlot, ntcHWUnitIprgChassisSeq9=ntcHWUnitIprgChassisSeq9, ntcHWUnitAny=ntcHWUnitAny, ntcHWUnitIprgFddi=ntcHWUnitIprgFddi, ntcHWUnitIan4PortV35=ntcHWUnitIan4PortV35, ntcHWUnitIprgBackplaneIP530=ntcHWUnitIprgBackplaneIP530, ntcHWUnitIprgBackplaneIP650=ntcHWUnitIprgBackplaneIP650, ntcHWUnitIprgT1=ntcHWUnitIprgT1, ntcHWUnitIprgChassisIP440=ntcHWUnitIprgChassisIP440, ntcHWUnitIprgSeqWslc=ntcHWUnitIprgSeqWslc, ntcHWUnitIprgChassisIP650=ntcHWUnitIprgChassisIP650, ntcHWUnitBbanSliuAdslMiDmt=ntcHWUnitBbanSliuAdslMiDmt, ntcHWUnitIprgChassisIP530=ntcHWUnitIprgChassisIP530, ntcHWUnitIprgAtm=ntcHWUnitIprgAtm, ntcHWBackplane=ntcHWBackplane, ntcHWUnitIanASU=ntcHWUnitIanASU, ntcHWUnitBbanAlbaStm1Om=ntcHWUnitBbanAlbaStm1Om, ntcHWUnitBbanSliuE1I120=ntcHWUnitBbanSliuE1I120, ntcHWUnitIpsoSs7=ntcHWUnitIpsoSs7, ntcHWUnitIprgBackplaneSeq9=ntcHWUnitIprgBackplaneSeq9, ntcHWUnitBbanBackplane8=ntcHWUnitBbanBackplane8, ntcHWUnitIprgV351=ntcHWUnitIprgV351, ntcHWUnitIpsoCryptoAccelerator=ntcHWUnitIpsoCryptoAccelerator, ntcHWUnitIprgBackplaneIP440=ntcHWUnitIprgBackplaneIP440, ntcHWUnitIprgIsdn=ntcHWUnitIprgIsdn, ntcHWUnitIpsoGigEth1=ntcHWUnitIpsoGigEth1, ntcHWUnitIprgChassisIP110=ntcHWUnitIprgChassisIP110, ntcHWUnitIprgChassisSeq18=ntcHWUnitIprgChassisSeq18, ntcHWUnitIprgV352=ntcHWUnitIprgV352, ntcHWUnitNcaStm1SingleModeOptical=ntcHWUnitNcaStm1SingleModeOptical, ntcHWUnitBbanAlbaStm1Os=ntcHWUnitBbanAlbaStm1Os, ntcHWUnitIprgSeqGplc2=ntcHWUnitIprgSeqGplc2, ntcHWUnitIprgX211=ntcHWUnitIprgX211, ntcHWUnitIprgBackplaneIP110=ntcHWUnitIprgBackplaneIP110, ntcHWUnitIprgBackplaneIP330=ntcHWUnitIprgBackplaneIP330, ntcHWUnitIan4PortE1=ntcHWUnitIan4PortE1, ntcHWUnitIprgTok=ntcHWUnitIprgTok, ntcHWUnitIpsoHardDisk=ntcHWUnitIpsoHardDisk, ntcHWUnitIprgBackplaneSeq18=ntcHWUnitIprgBackplaneSeq18, ntcHWUnitIprgEth4=ntcHWUnitIprgEth4, ntcHWUnitTypeModule=ntcHWUnitTypeModule, ntcHWUnitNcaStm1MultiModeOptical=ntcHWUnitNcaStm1MultiModeOptical, ntcHWUnitBbanSliuE1I75=ntcHWUnitBbanSliuE1I75, ntcHWUnitIprgX212=ntcHWUnitIprgX212, ntcHWUnitIanNcaStm1Electrical=ntcHWUnitIanNcaStm1Electrical, ntcHWUnitIanIpFwrdingUnit=ntcHWUnitIanIpFwrdingUnit, ntcHWUnitIprgE1=ntcHWUnitIprgE1, ntcHWUnitIprgChassisIP330=ntcHWUnitIprgChassisIP330, ntcHWUnitNone=ntcHWUnitNone, ntcHWUnitBbanBackplane17=ntcHWUnitBbanBackplane17, ntcHWUnitIprgChassisIP730=ntcHWUnitIprgChassisIP730)
