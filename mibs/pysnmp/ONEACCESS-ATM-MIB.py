#
# PySNMP MIB module ONEACCESS-ATM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ONEACCESS-ATM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:24:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
AtmVpIdentifier, AtmVcIdentifier = mibBuilder.importSymbols("ATM-TC-MIB", "AtmVpIdentifier", "AtmVcIdentifier")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
oacMIBModules, oacExpIMAtmStatistics = mibBuilder.importSymbols("ONEACCESS-GLOBAL-REG", "oacMIBModules", "oacExpIMAtmStatistics")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibIdentifier, Gauge32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, TimeTicks, Integer32, Bits, IpAddress, NotificationType, ModuleIdentity, Counter32, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Gauge32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "TimeTicks", "Integer32", "Bits", "IpAddress", "NotificationType", "ModuleIdentity", "Counter32", "Unsigned32", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
oacAtmMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 13191, 1, 100, 667))
oacAtmMIBModule.setRevisions(('2011-10-27 00:00', '2010-07-08 00:01',))
if mibBuilder.loadTexts: oacAtmMIBModule.setLastUpdated('201110270000Z')
if mibBuilder.loadTexts: oacAtmMIBModule.setOrganization(' OneAccess ')
oacAtmStatObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1))
oacAtmStatNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 2))
oacAtmStatConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 3))
oacAtmChannelTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1), )
if mibBuilder.loadTexts: oacAtmChannelTable.setStatus('current')
oacAtmChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ONEACCESS-ATM-MIB", "oacAtmChanVpi"), (0, "ONEACCESS-ATM-MIB", "oacAtmChanVci"))
if mibBuilder.loadTexts: oacAtmChannelEntry.setStatus('current')
oacAtmChanVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1, 1), AtmVpIdentifier())
if mibBuilder.loadTexts: oacAtmChanVpi.setStatus('current')
oacAtmChanVci = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1, 2), AtmVcIdentifier())
if mibBuilder.loadTexts: oacAtmChanVci.setStatus('current')
oacAtmChanTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmChanTxBytes.setStatus('current')
oacAtmChanTxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmChanTxCells.setStatus('current')
oacAtmChanRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmChanRxBytes.setStatus('current')
oacAtmChanRxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmChanRxCells.setStatus('current')
oacAtmChanRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmChanRxErrors.setStatus('current')
oacAtmChanTxOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmChanTxOverflows.setStatus('current')
oacAtmAal0ChannelGlobalStatTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 2), )
if mibBuilder.loadTexts: oacAtmAal0ChannelGlobalStatTable.setStatus('current')
oacAtmAal0ChannelGlobalStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ONEACCESS-ATM-MIB", "oacAtmChanVpi"), (0, "ONEACCESS-ATM-MIB", "oacAtmChanVci"))
if mibBuilder.loadTexts: oacAtmAal0ChannelGlobalStatEntry.setStatus('current')
oacAtmAal0ChanRxCellsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal0ChanRxCellsDiscarded.setStatus('current')
oacAtmAal1ChannelGlobalStatTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 3), )
if mibBuilder.loadTexts: oacAtmAal1ChannelGlobalStatTable.setStatus('current')
oacAtmAal1ChannelGlobalStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ONEACCESS-ATM-MIB", "oacAtmChanVpi"), (0, "ONEACCESS-ATM-MIB", "oacAtmChanVci"))
if mibBuilder.loadTexts: oacAtmAal1ChannelGlobalStatEntry.setStatus('current')
oacAtmAal1ChanTxUnderflows = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal1ChanTxUnderflows.setStatus('current')
oacAtmAal1ChanRxOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal1ChanRxOverflows.setStatus('current')
oacAtmAal5ChannelGlobalStatTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 4), )
if mibBuilder.loadTexts: oacAtmAal5ChannelGlobalStatTable.setStatus('current')
oacAtmAal5ChannelGlobalStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ONEACCESS-ATM-MIB", "oacAtmChanVpi"), (0, "ONEACCESS-ATM-MIB", "oacAtmChanVci"))
if mibBuilder.loadTexts: oacAtmAal5ChannelGlobalStatEntry.setStatus('current')
oacAtmAal5ChanTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5ChanTxFrames.setStatus('current')
oacAtmAal5ChanRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5ChanRxFrames.setStatus('current')
oacAtmAal5ChanRxFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5ChanRxFramesDiscarded.setStatus('current')
oacAtmAal5ChanCrc32Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5ChanCrc32Errors.setStatus('current')
oacAtmAal5ChanLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5ChanLengthErrors.setStatus('current')
oacAtmAal5ChanReassemblyTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5ChanReassemblyTimeouts.setStatus('current')
oacAtmPortStatTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 5), )
if mibBuilder.loadTexts: oacAtmPortStatTable.setStatus('current')
oacAtmPortStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: oacAtmPortStatEntry.setStatus('current')
oacAtmPortTxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmPortTxCells.setStatus('current')
oacAtmPortRxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmPortRxCells.setStatus('current')
oacAtmPortRxCellsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmPortRxCellsDiscarded.setStatus('current')
oacAtmPortHecErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmPortHecErrors.setStatus('current')
oacAtmAal5PortStatTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6), )
if mibBuilder.loadTexts: oacAtmAal5PortStatTable.setStatus('current')
oacAtmAal5PortStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: oacAtmAal5PortStatEntry.setStatus('current')
oacAtmAal5PortTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5PortTxBytes.setStatus('current')
oacAtmAal5PortTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5PortTxFrames.setStatus('current')
oacAtmAal5PortTxFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5PortTxFramesDiscarded.setStatus('current')
oacAtmAal5PortRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5PortRxBytes.setStatus('current')
oacAtmAal5PortRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5PortRxFrames.setStatus('current')
oacAtmAal5PortRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5PortRxErrors.setStatus('current')
oacAtmAal5PortRxFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5PortRxFramesDiscarded.setStatus('current')
oacAtmStatGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 3, 1))
oacAtmStatCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 3, 2))
oacAtmStatCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 3, 2, 1)).setObjects(("ONEACCESS-ATM-MIB", "oacAtmStatGeneralGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    oacAtmStatCompliance = oacAtmStatCompliance.setStatus('current')
oacAtmStatGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 3, 1, 1)).setObjects(("ONEACCESS-ATM-MIB", "oacAtmChanTxBytes"), ("ONEACCESS-ATM-MIB", "oacAtmChanTxCells"), ("ONEACCESS-ATM-MIB", "oacAtmChanRxBytes"), ("ONEACCESS-ATM-MIB", "oacAtmChanRxCells"), ("ONEACCESS-ATM-MIB", "oacAtmChanRxErrors"), ("ONEACCESS-ATM-MIB", "oacAtmChanTxOverflows"), ("ONEACCESS-ATM-MIB", "oacAtmAal0ChanRxCellsDiscarded"), ("ONEACCESS-ATM-MIB", "oacAtmAal1ChanTxUnderflows"), ("ONEACCESS-ATM-MIB", "oacAtmAal1ChanRxOverflows"), ("ONEACCESS-ATM-MIB", "oacAtmAal5ChanTxFrames"), ("ONEACCESS-ATM-MIB", "oacAtmAal5ChanRxFrames"), ("ONEACCESS-ATM-MIB", "oacAtmAal5ChanRxFramesDiscarded"), ("ONEACCESS-ATM-MIB", "oacAtmAal5ChanCrc32Errors"), ("ONEACCESS-ATM-MIB", "oacAtmAal5ChanLengthErrors"), ("ONEACCESS-ATM-MIB", "oacAtmAal5ChanReassemblyTimeouts"), ("ONEACCESS-ATM-MIB", "oacAtmPortTxCells"), ("ONEACCESS-ATM-MIB", "oacAtmPortRxCells"), ("ONEACCESS-ATM-MIB", "oacAtmPortRxCellsDiscarded"), ("ONEACCESS-ATM-MIB", "oacAtmPortHecErrors"), ("ONEACCESS-ATM-MIB", "oacAtmAal5PortTxBytes"), ("ONEACCESS-ATM-MIB", "oacAtmAal5PortTxFrames"), ("ONEACCESS-ATM-MIB", "oacAtmAal5PortTxFramesDiscarded"), ("ONEACCESS-ATM-MIB", "oacAtmAal5PortRxBytes"), ("ONEACCESS-ATM-MIB", "oacAtmAal5PortRxFrames"), ("ONEACCESS-ATM-MIB", "oacAtmAal5PortRxErrors"), ("ONEACCESS-ATM-MIB", "oacAtmAal5PortRxFramesDiscarded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    oacAtmStatGeneralGroup = oacAtmStatGeneralGroup.setStatus('current')
mibBuilder.exportSymbols("ONEACCESS-ATM-MIB", oacAtmMIBModule=oacAtmMIBModule, oacAtmAal5PortRxFrames=oacAtmAal5PortRxFrames, oacAtmChanTxBytes=oacAtmChanTxBytes, oacAtmPortTxCells=oacAtmPortTxCells, oacAtmAal0ChannelGlobalStatEntry=oacAtmAal0ChannelGlobalStatEntry, oacAtmChanRxErrors=oacAtmChanRxErrors, oacAtmPortStatEntry=oacAtmPortStatEntry, oacAtmStatCompliances=oacAtmStatCompliances, oacAtmStatConformance=oacAtmStatConformance, oacAtmAal5ChanCrc32Errors=oacAtmAal5ChanCrc32Errors, oacAtmAal5PortRxErrors=oacAtmAal5PortRxErrors, oacAtmAal5PortTxBytes=oacAtmAal5PortTxBytes, PYSNMP_MODULE_ID=oacAtmMIBModule, oacAtmAal5ChanRxFramesDiscarded=oacAtmAal5ChanRxFramesDiscarded, oacAtmChanVpi=oacAtmChanVpi, oacAtmAal5PortStatEntry=oacAtmAal5PortStatEntry, oacAtmChanTxCells=oacAtmChanTxCells, oacAtmAal5PortRxBytes=oacAtmAal5PortRxBytes, oacAtmStatNotifications=oacAtmStatNotifications, oacAtmStatCompliance=oacAtmStatCompliance, oacAtmAal5PortRxFramesDiscarded=oacAtmAal5PortRxFramesDiscarded, oacAtmAal5ChanLengthErrors=oacAtmAal5ChanLengthErrors, oacAtmChanRxCells=oacAtmChanRxCells, oacAtmAal5ChanTxFrames=oacAtmAal5ChanTxFrames, oacAtmChanRxBytes=oacAtmChanRxBytes, oacAtmChanTxOverflows=oacAtmChanTxOverflows, oacAtmAal5ChannelGlobalStatEntry=oacAtmAal5ChannelGlobalStatEntry, oacAtmStatObjects=oacAtmStatObjects, oacAtmPortRxCells=oacAtmPortRxCells, oacAtmAal1ChanTxUnderflows=oacAtmAal1ChanTxUnderflows, oacAtmAal5ChannelGlobalStatTable=oacAtmAal5ChannelGlobalStatTable, oacAtmAal1ChanRxOverflows=oacAtmAal1ChanRxOverflows, oacAtmPortStatTable=oacAtmPortStatTable, oacAtmPortRxCellsDiscarded=oacAtmPortRxCellsDiscarded, oacAtmAal5ChanReassemblyTimeouts=oacAtmAal5ChanReassemblyTimeouts, oacAtmStatGroups=oacAtmStatGroups, oacAtmAal0ChannelGlobalStatTable=oacAtmAal0ChannelGlobalStatTable, oacAtmAal1ChannelGlobalStatEntry=oacAtmAal1ChannelGlobalStatEntry, oacAtmAal5PortTxFrames=oacAtmAal5PortTxFrames, oacAtmChanVci=oacAtmChanVci, oacAtmAal0ChanRxCellsDiscarded=oacAtmAal0ChanRxCellsDiscarded, oacAtmStatGeneralGroup=oacAtmStatGeneralGroup, oacAtmPortHecErrors=oacAtmPortHecErrors, oacAtmAal5ChanRxFrames=oacAtmAal5ChanRxFrames, oacAtmAal5PortStatTable=oacAtmAal5PortStatTable, oacAtmAal5PortTxFramesDiscarded=oacAtmAal5PortTxFramesDiscarded, oacAtmChannelEntry=oacAtmChannelEntry, oacAtmChannelTable=oacAtmChannelTable, oacAtmAal1ChannelGlobalStatTable=oacAtmAal1ChannelGlobalStatTable)
