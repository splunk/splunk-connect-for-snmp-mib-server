#
# PySNMP MIB module METRO1500-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/METRO1500-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:01:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, ObjectIdentity, Counter64, IpAddress, NotificationType, Unsigned32, TimeTicks, iso, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, NotificationType, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ObjectIdentity", "Counter64", "IpAddress", "NotificationType", "Unsigned32", "TimeTicks", "iso", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "NotificationType", "Integer32", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
adva = MibIdentifier((1, 3, 6, 1, 4, 1, 2544))
advaProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1))
metro1500 = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 3))
metro1500Main = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1))
metro1500Housing = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1))
metro1500Manufacturer = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500Manufacturer.setStatus('mandatory')
metro1500MainType = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500MainType.setStatus('mandatory')
metro1500MainSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500MainSerialNumber.setStatus('mandatory')
metro1500MainHardwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500MainHardwareVersion.setStatus('mandatory')
metro1500MainSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500MainSoftwareVersion.setStatus('mandatory')
metro1500MainBusMessages = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500MainBusMessages.setStatus('mandatory')
metro1500MainBusErrors = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500MainBusErrors.setStatus('mandatory')
metro1500MainLastEvent = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500MainLastEvent.setStatus('mandatory')
metro1500MainMotd = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500MainMotd.setStatus('mandatory')
metro1500MainTrapsinkTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 10), )
if mibBuilder.loadTexts: metro1500MainTrapsinkTable.setStatus('mandatory')
metro1500MainTrapsinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 10, 1), ).setIndexNames((0, "METRO1500-MIB", "metro1500MainTrapsinkNumber"))
if mibBuilder.loadTexts: metro1500MainTrapsinkEntry.setStatus('mandatory')
metro1500MainTrapsinkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500MainTrapsinkNumber.setStatus('mandatory')
metro1500MainTrapsinkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500MainTrapsinkAddress.setStatus('mandatory')
metro1500MainTrapsinkCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 10, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500MainTrapsinkCommunity.setStatus('mandatory')
metro1500MainTrapsinkPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500MainTrapsinkPriority.setStatus('mandatory')
metro1500MainLogfileTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 11), )
if mibBuilder.loadTexts: metro1500MainLogfileTable.setStatus('mandatory')
metro1500MainLogfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 11, 1), ).setIndexNames((0, "METRO1500-MIB", "metro1500MainLogfileNumber"))
if mibBuilder.loadTexts: metro1500MainLogfileEntry.setStatus('mandatory')
metro1500MainLogfileNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500MainLogfileNumber.setStatus('mandatory')
metro1500MainLogfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500MainLogfileName.setStatus('mandatory')
metro1500MainLogfileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500MainLogfileSize.setStatus('mandatory')
metro1500MainLogfilePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500MainLogfilePriority.setStatus('mandatory')
metro1500SlotTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 2), )
if mibBuilder.loadTexts: metro1500SlotTable.setStatus('mandatory')
metro1500SlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 2, 1), ).setIndexNames((0, "METRO1500-MIB", "metro1500SlotNumber"))
if mibBuilder.loadTexts: metro1500SlotEntry.setStatus('mandatory')
metro1500SlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 79))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500SlotNumber.setStatus('mandatory')
metro1500Type = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500Type.setStatus('mandatory')
metro1500SlotTypeNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 7, 10, 32, 33, 39, 64, 255))).clone(namedValues=NamedValues(("metro1500Converter", 1), ("metro1000Converter", 2), ("metro1000EthernetConverter", 3), ("metro1500-2-5GbConverter", 5), ("metro1500-TRL-Converter", 7), ("metro1500-4PortTDMCard", 10), ("nemi", 32), ("demi", 33), ("metro1500-EthernetHubCard", 39), ("switch", 64), ("other", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500SlotTypeNumber.setStatus('mandatory')
metro1500SerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500SerialNumber.setStatus('mandatory')
metro1500HardwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500HardwareVersion.setStatus('mandatory')
metro1500SoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500SoftwareVersion.setStatus('mandatory')
metro1500Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500Temperature.setStatus('mandatory')
metro1500BoardVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500BoardVoltage.setStatus('mandatory')
metro1500DetailInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 2, 1, 9), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500DetailInfo.setStatus('mandatory')
metro1500EPLDVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EPLDVersion.setStatus('mandatory')
metro1500PSTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 3), )
if mibBuilder.loadTexts: metro1500PSTable.setStatus('mandatory')
metro1500PSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 3, 1), ).setIndexNames((0, "METRO1500-MIB", "metro1500PSNumber"))
if mibBuilder.loadTexts: metro1500PSEntry.setStatus('mandatory')
metro1500PSNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500PSNumber.setStatus('mandatory')
metro1500PSOn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500PSOn.setStatus('mandatory')
metro1500FanTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 4), )
if mibBuilder.loadTexts: metro1500FanTable.setStatus('mandatory')
metro1500FanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 4, 1), ).setIndexNames((0, "METRO1500-MIB", "metro1500FanNumber"))
if mibBuilder.loadTexts: metro1500FanEntry.setStatus('mandatory')
metro1500FanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500FanNumber.setStatus('mandatory')
metro1500FanOn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500FanOn.setStatus('mandatory')
metro1500Converter = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5))
metro1500ConverterTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5, 1), )
if mibBuilder.loadTexts: metro1500ConverterTable.setStatus('mandatory')
metro1500ConverterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5, 1, 1), ).setIndexNames((0, "METRO1500-MIB", "metro1500ConverterNumber"))
if mibBuilder.loadTexts: metro1500ConverterEntry.setStatus('mandatory')
metro1500ConverterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 79))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500ConverterNumber.setStatus('mandatory')
metro1500RxLoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500RxLoc.setStatus('mandatory')
metro1500TxLoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("alwaysOn", 3), ("alwaysOff", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TxLoc.setStatus('mandatory')
metro1500TxLocC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TxLocC.setStatus('mandatory')
metro1500TxLocTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-50, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TxLocTemp.setStatus('mandatory')
metro1500RxRem = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500RxRem.setStatus('mandatory')
metro1500TxRem = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("alwaysOn", 3), ("alwaysOff", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TxRem.setStatus('mandatory')
metro1500TxRemC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TxRemC.setStatus('mandatory')
metro1500TxRemTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-50, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TxRemTemp.setStatus('mandatory')
metro1500RxRem2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500RxRem2.setStatus('mandatory')
metro1500ClockState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("fail", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500ClockState.setStatus('mandatory')
metro1500ClockFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500ClockFreq.setStatus('mandatory')
metro1500LocLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500LocLoop.setStatus('mandatory')
metro1500RemLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500RemLoop.setStatus('mandatory')
metro1500ClockType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 5, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 7, 9, 11, 21, 22, 31, 32, 41, 42, 51, 52, 61, 62, 71, 72, 75, 76, 81, 82, 255))).clone(namedValues=NamedValues(("multiClockLSModule", 1), ("multiClockLS", 2), ("multiClockFCGbE", 3), ("multiClockOCxGbE", 5), ("multiClockOCxFC", 7), ("multiClockOCxGbEFC", 9), ("multiClockFCGbEOnBoard", 11), ("fixedClock125MbpsModule", 21), ("fixedClock125Mbps", 22), ("fixedClock155MbpsModule", 31), ("fixedClock155Mbps", 32), ("fixedClock200MbpsModule", 41), ("fixedClock200Mbps", 42), ("fixedClock266MbpsModule", 51), ("fixedClock266Mbps", 52), ("fixedClock622MbpsModule", 61), ("fixedClock622Mbps", 62), ("fixedClock1062MbpsModule", 71), ("fixedClock1062Mbps", 72), ("fixedClock1250MbpsModule", 75), ("fixedClock1250Mbps", 76), ("fixedClock2500MbpsModule", 81), ("fixedClock2500Mbps", 82), ("other", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500ClockType.setStatus('mandatory')
metro1500Switch = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 3, 10))
metro1500SwitchTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 3, 10, 1), )
if mibBuilder.loadTexts: metro1500SwitchTable.setStatus('mandatory')
metro1500SwitchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 3, 10, 1, 1), ).setIndexNames((0, "METRO1500-MIB", "metro1500SwitchNumber"))
if mibBuilder.loadTexts: metro1500SwitchEntry.setStatus('mandatory')
metro1500SwitchNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 79))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500SwitchNumber.setStatus('mandatory')
metro1500SwitchLine = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lineA", 1), ("lineB", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500SwitchLine.setStatus('mandatory')
metro1500SwitchMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("automatic", 1), ("locked", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500SwitchMode.setStatus('mandatory')
metro1500SwitchLaserOn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500SwitchLaserOn.setStatus('mandatory')
metro1500SwitchLineAavail = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("available", 1), ("notAvailable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500SwitchLineAavail.setStatus('mandatory')
metro1500SwitchLineBavail = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("available", 1), ("notAvailable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500SwitchLineBavail.setStatus('mandatory')
metro1500EthernetHub = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14))
metro1500EthernetHubTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1), )
if mibBuilder.loadTexts: metro1500EthernetHubTable.setStatus('mandatory')
metro1500EthernetHubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1), ).setIndexNames((0, "METRO1500-MIB", "metro1500EthernetHubNumber"))
if mibBuilder.loadTexts: metro1500EthernetHubEntry.setStatus('mandatory')
metro1500EthernetHubNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 79))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubNumber.setStatus('mandatory')
metro1500EthernetHubPortEnable1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortEnable1.setStatus('mandatory')
metro1500EthernetHubPortPartitionStatus1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("partitioned", 1), ("notPartitioned", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortPartitionStatus1.setStatus('mandatory')
metro1500EthernetHubPortLinkStatus1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("linked", 1), ("notLinked", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortLinkStatus1.setStatus('mandatory')
metro1500EthernetHubPortPolarity1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("positive", 1), ("negative", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortPolarity1.setStatus('mandatory')
metro1500EthernetHubPortEnable2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortEnable2.setStatus('mandatory')
metro1500EthernetHubPortPartitionStatus2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("partitioned", 1), ("notPartitioned", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortPartitionStatus2.setStatus('mandatory')
metro1500EthernetHubPortLinkStatus2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("linked", 1), ("notLinked", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortLinkStatus2.setStatus('mandatory')
metro1500EthernetHubPortPolarity2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("positive", 1), ("negative", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortPolarity2.setStatus('mandatory')
metro1500EthernetHubPortEnable3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortEnable3.setStatus('mandatory')
metro1500EthernetHubPortPartitionStatus3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("partitioned", 1), ("notPartitioned", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortPartitionStatus3.setStatus('mandatory')
metro1500EthernetHubPortLinkStatus3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("linked", 1), ("notLinked", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortLinkStatus3.setStatus('mandatory')
metro1500EthernetHubPortPolarity3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("positive", 1), ("negative", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortPolarity3.setStatus('mandatory')
metro1500EthernetHubPortEnable4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortEnable4.setStatus('mandatory')
metro1500EthernetHubPortPartitionStatus4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("partitioned", 1), ("notPartitioned", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortPartitionStatus4.setStatus('mandatory')
metro1500EthernetHubPortLinkStatus4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("linked", 1), ("notLinked", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortLinkStatus4.setStatus('mandatory')
metro1500EthernetHubPortPolarity4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("positive", 1), ("negative", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortPolarity4.setStatus('mandatory')
metro1500EthernetHubPortEnable5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortEnable5.setStatus('mandatory')
metro1500EthernetHubPortPartitionStatus5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("partitioned", 1), ("notPartitioned", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortPartitionStatus5.setStatus('mandatory')
metro1500EthernetHubPortLinkStatus5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("linked", 1), ("notLinked", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortLinkStatus5.setStatus('mandatory')
metro1500EthernetHubPortPolarity5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 14, 1, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("positive", 1), ("negative", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500EthernetHubPortPolarity5.setStatus('mandatory')
metro1500TDM = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15))
metro1500TDMTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1), )
if mibBuilder.loadTexts: metro1500TDMTable.setStatus('mandatory')
metro1500TDMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1), ).setIndexNames((0, "METRO1500-MIB", "metro1500TDMNumber"))
if mibBuilder.loadTexts: metro1500TDMEntry.setStatus('mandatory')
metro1500TDMNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 79))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMNumber.setStatus('mandatory')
metro1500TDMRxRem = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMRxRem.setStatus('mandatory')
metro1500TDMRxSync = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sync", 1), ("noSync", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMRxSync.setStatus('mandatory')
metro1500TDMTxRem = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("alwaysOn", 3), ("alwaysOff", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMTxRem.setStatus('mandatory')
metro1500TDMTxRemC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMTxRemC.setStatus('mandatory')
metro1500TDMTxRemTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-50, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMTxRemTemp.setStatus('mandatory')
metro1500TDMLocLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocLoop.setStatus('mandatory')
metro1500TDMLocModuleInst1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("installed", 1), ("notInstalled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleInst1.setStatus('mandatory')
metro1500TDMLocModuleEnable1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("notEnabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleEnable1.setStatus('mandatory')
metro1500TDMLocModuleRx1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleRx1.setStatus('mandatory')
metro1500TDMLocModuleTx1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("alwaysOn", 3), ("alwaysOff", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleTx1.setStatus('mandatory')
metro1500TDMLocModuleRemoteData1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("data", 1), ("noData", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleRemoteData1.setStatus('mandatory')
metro1500TDMLocModuleClockFrequency1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleClockFrequency1.setStatus('mandatory')
metro1500TDMLocModuleClockError1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("error", 1), ("noError", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleClockError1.setStatus('mandatory')
metro1500TDMLocModuleInst2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("installed", 1), ("notInstalled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleInst2.setStatus('mandatory')
metro1500TDMLocModuleEnable2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("notEnabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleEnable2.setStatus('mandatory')
metro1500TDMLocModuleRx2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleRx2.setStatus('mandatory')
metro1500TDMLocModuleTx2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("alwaysOn", 3), ("alwaysOff", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleTx2.setStatus('mandatory')
metro1500TDMLocModuleRemoteData2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("data", 1), ("noData", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleRemoteData2.setStatus('mandatory')
metro1500TDMLocModuleClockFrequency2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleClockFrequency2.setStatus('mandatory')
metro1500TDMLocModuleClockError2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("error", 1), ("noError", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleClockError2.setStatus('mandatory')
metro1500TDMLocModuleInst3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("installed", 1), ("notInstalled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleInst3.setStatus('mandatory')
metro1500TDMLocModuleEnable3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("notEnabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleEnable3.setStatus('mandatory')
metro1500TDMLocModuleRx3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleRx3.setStatus('mandatory')
metro1500TDMLocModuleTx3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("alwaysOn", 3), ("alwaysOff", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleTx3.setStatus('mandatory')
metro1500TDMLocModuleRemoteData3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("data", 1), ("noData", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleRemoteData3.setStatus('mandatory')
metro1500TDMLocModuleClockFrequency3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleClockFrequency3.setStatus('mandatory')
metro1500TDMLocModuleClockError3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("error", 1), ("noError", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleClockError3.setStatus('mandatory')
metro1500TDMLocModuleInst4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("installed", 1), ("notInstalled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleInst4.setStatus('mandatory')
metro1500TDMLocModuleEnable4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("notEnabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleEnable4.setStatus('mandatory')
metro1500TDMLocModuleRx4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleRx4.setStatus('mandatory')
metro1500TDMLocModuleTx4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("alwaysOn", 3), ("alwaysOff", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleTx4.setStatus('mandatory')
metro1500TDMLocModuleRemoteData4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("data", 1), ("noData", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleRemoteData4.setStatus('mandatory')
metro1500TDMLocModuleClockFrequency4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleClockFrequency4.setStatus('mandatory')
metro1500TDMLocModuleClockError4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 3, 15, 1, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("error", 1), ("noError", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: metro1500TDMLocModuleClockError4.setStatus('mandatory')
metro1500Trap = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100))
metro1500HardwareAdded = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,1)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500HardwareDeleted = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,2)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500PSNotFail = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,3)).setObjects(("METRO1500-MIB", "metro1500PSNumber"))
metro1500PSFail = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,4)).setObjects(("METRO1500-MIB", "metro1500PSNumber"))
metro1500FanNotFail = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,5)).setObjects(("METRO1500-MIB", "metro1500FanNumber"))
metro1500FanFail = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,6)).setObjects(("METRO1500-MIB", "metro1500FanNumber"))
metro1500BusNotFail = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,7))
metro1500BusFail = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,8))
metro1500RxLocOn = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,20)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500RxLocOff = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,21)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TxLocOn = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,22)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TxLocOff = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,23)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500RxRemOn = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,24)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500RxRemOff = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,25)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TxRemOn = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,26)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TxRemOff = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,27)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500RxRem2On = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,28)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500RxRem2Off = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,29)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TxRem2On = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,30)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TxRem2Off = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,31)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500ClockNoFail = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,32)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500ClockFail = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,33)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500ClockChangeFrequency = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,34)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500LocLoopOn = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,35)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500LocLoopOff = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,36)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500RemLoopOn = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,37)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500RemLoopOff = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,38)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500switchReferenceLaserOn = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,40)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500switchReferenceLaserOff = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,41)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500switchToA = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,42)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500switchToB = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,43)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500switchAutomatic = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,44)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500switchLocked = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,45)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500switchLineAavail = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,46)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500switchLineANotAvail = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,47)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500switchLineBavail = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,48)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500switchLineBNotAvail = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,49)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500repeatedMessage = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,50)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500INNCDown = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,51))
metro1500INNCUp = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,52))
metro1500EthernetHubPortEnable = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,60)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500EthernetHubPortDisable = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,61)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500EthernetHubPortPartitioned = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,62)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500EthernetHubPortNotPartitioned = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,63)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500EthernetHubPortLinkPulses = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,64)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500EthernetHubPortNoLinkPulses = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,65)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMRemoteSyncLoss = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,70)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMRemoteSync = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,71)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleEnabled1 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,72)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleDisable1 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,73)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleEnabled2 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,74)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleDisable2 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,75)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleEnabled3 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,76)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleDisable3 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,77)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleEnabled4 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,78)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleDisable4 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,79)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleRxOn1 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,88)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleRxOff1 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,89)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleRxOn2 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,90)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleRxOff2 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,91)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleRxOn3 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,92)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleRxOff3 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,93)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleRxOn4 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,94)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleRxOff4 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,95)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleData1 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,104)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleNoData1 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,105)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleData2 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,106)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleNoData2 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,107)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleData3 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,108)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleNoData3 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,109)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleData4 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,110)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleNoData4 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,111)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleClockFail1 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,120)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleClockNoFail1 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,121)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleClockFail2 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,122)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleClockNoFail2 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,123)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleClockFail3 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,124)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleClockNoFail3 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,125)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleClockFail4 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,126)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
metro1500TDMLocModuleClockNoFail4 = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 3, 100) + (0,127)).setObjects(("METRO1500-MIB", "metro1500SlotNumber"))
mibBuilder.exportSymbols("METRO1500-MIB", metro1500ClockFreq=metro1500ClockFreq, metro1500TDMLocModuleData2=metro1500TDMLocModuleData2, metro1500EthernetHubPortPolarity2=metro1500EthernetHubPortPolarity2, metro1500TDMLocModuleEnabled2=metro1500TDMLocModuleEnabled2, metro1500MainLogfilePriority=metro1500MainLogfilePriority, metro1500SwitchLineAavail=metro1500SwitchLineAavail, metro1500MainTrapsinkEntry=metro1500MainTrapsinkEntry, metro1500TDMLocModuleClockError2=metro1500TDMLocModuleClockError2, metro1500MainMotd=metro1500MainMotd, metro1500MainLogfileEntry=metro1500MainLogfileEntry, metro1500SwitchLine=metro1500SwitchLine, metro1500EthernetHubPortPartitionStatus3=metro1500EthernetHubPortPartitionStatus3, metro1500TDMLocModuleClockNoFail2=metro1500TDMLocModuleClockNoFail2, metro1500TDMLocModuleRemoteData1=metro1500TDMLocModuleRemoteData1, metro1500ConverterEntry=metro1500ConverterEntry, metro1500TDMLocModuleTx2=metro1500TDMLocModuleTx2, metro1500ClockState=metro1500ClockState, metro1500TDMLocModuleEnable2=metro1500TDMLocModuleEnable2, metro1500MainBusMessages=metro1500MainBusMessages, metro1500MainBusErrors=metro1500MainBusErrors, metro1500EthernetHubPortEnable3=metro1500EthernetHubPortEnable3, metro1500SwitchEntry=metro1500SwitchEntry, metro1500EthernetHubPortLinkStatus4=metro1500EthernetHubPortLinkStatus4, metro1500RxLocOff=metro1500RxLocOff, metro1500INNCUp=metro1500INNCUp, metro1500TDMLocModuleData4=metro1500TDMLocModuleData4, metro1500PSNumber=metro1500PSNumber, metro1500PSFail=metro1500PSFail, metro1500FanNotFail=metro1500FanNotFail, metro1500TDMLocModuleInst2=metro1500TDMLocModuleInst2, metro1500SwitchLaserOn=metro1500SwitchLaserOn, metro1500LocLoop=metro1500LocLoop, metro1500TDM=metro1500TDM, metro1500MainTrapsinkNumber=metro1500MainTrapsinkNumber, metro1500DetailInfo=metro1500DetailInfo, metro1500EthernetHubEntry=metro1500EthernetHubEntry, metro1500TDMLocModuleClockFrequency1=metro1500TDMLocModuleClockFrequency1, metro1500RemLoop=metro1500RemLoop, metro1500EPLDVersion=metro1500EPLDVersion, metro1500TDMTxRemC=metro1500TDMTxRemC, metro1500HardwareAdded=metro1500HardwareAdded, metro1500BoardVoltage=metro1500BoardVoltage, metro1500SlotTypeNumber=metro1500SlotTypeNumber, metro1500RxRem2On=metro1500RxRem2On, metro1500TDMLocModuleData1=metro1500TDMLocModuleData1, metro1500EthernetHubPortLinkStatus1=metro1500EthernetHubPortLinkStatus1, metro1500EthernetHubPortPartitionStatus5=metro1500EthernetHubPortPartitionStatus5, dod=dod, metro1500TDMLocModuleDisable4=metro1500TDMLocModuleDisable4, metro1500RxRemOff=metro1500RxRemOff, metro1500TDMLocModuleDisable2=metro1500TDMLocModuleDisable2, metro1500TDMLocModuleClockError4=metro1500TDMLocModuleClockError4, metro1500LocLoopOff=metro1500LocLoopOff, metro1500TDMLocModuleRx4=metro1500TDMLocModuleRx4, private=private, metro1500TxRem2Off=metro1500TxRem2Off, metro1500BusNotFail=metro1500BusNotFail, metro1500TDMLocModuleEnabled1=metro1500TDMLocModuleEnabled1, metro1500EthernetHubPortLinkStatus5=metro1500EthernetHubPortLinkStatus5, metro1500TDMLocModuleInst3=metro1500TDMLocModuleInst3, metro1500EthernetHubPortLinkPulses=metro1500EthernetHubPortLinkPulses, metro1500TDMTxRem=metro1500TDMTxRem, metro1500TDMRemoteSyncLoss=metro1500TDMRemoteSyncLoss, metro1500switchLocked=metro1500switchLocked, metro1500EthernetHubPortDisable=metro1500EthernetHubPortDisable, metro1500SwitchTable=metro1500SwitchTable, metro1500TDMLocModuleClockNoFail4=metro1500TDMLocModuleClockNoFail4, metro1500TDMLocModuleTx4=metro1500TDMLocModuleTx4, metro1500SlotNumber=metro1500SlotNumber, metro1500RemLoopOn=metro1500RemLoopOn, metro1500switchLineANotAvail=metro1500switchLineANotAvail, metro1500EthernetHubPortEnable4=metro1500EthernetHubPortEnable4, metro1500TxLoc=metro1500TxLoc, metro1500TDMNumber=metro1500TDMNumber, metro1500INNCDown=metro1500INNCDown, metro1500TDMLocModuleRemoteData4=metro1500TDMLocModuleRemoteData4, metro1500ConverterTable=metro1500ConverterTable, metro1500RxRem2=metro1500RxRem2, metro1500EthernetHubPortEnable=metro1500EthernetHubPortEnable, metro1500TDMLocModuleNoData3=metro1500TDMLocModuleNoData3, metro1500MainLogfileTable=metro1500MainLogfileTable, metro1500TDMLocModuleRx2=metro1500TDMLocModuleRx2, metro1500TDMLocModuleTx3=metro1500TDMLocModuleTx3, metro1500EthernetHubPortEnable5=metro1500EthernetHubPortEnable5, metro1500BusFail=metro1500BusFail, metro1500SlotEntry=metro1500SlotEntry, metro1500TDMLocModuleRemoteData2=metro1500TDMLocModuleRemoteData2, metro1500switchLineAavail=metro1500switchLineAavail, metro1500EthernetHubPortLinkStatus2=metro1500EthernetHubPortLinkStatus2, metro1500TDMLocModuleRxOn1=metro1500TDMLocModuleRxOn1, metro1500TDMLocModuleClockNoFail1=metro1500TDMLocModuleClockNoFail1, metro1500EthernetHubPortNotPartitioned=metro1500EthernetHubPortNotPartitioned, metro1500TDMLocModuleEnabled3=metro1500TDMLocModuleEnabled3, metro1500TDMLocModuleRxOff4=metro1500TDMLocModuleRxOff4, metro1500Converter=metro1500Converter, metro1500LocLoopOn=metro1500LocLoopOn, metro1500FanFail=metro1500FanFail, metro1500RxLocOn=metro1500RxLocOn, metro1500switchLineBavail=metro1500switchLineBavail, metro1500TDMRemoteSync=metro1500TDMRemoteSync, metro1500TDMLocModuleNoData1=metro1500TDMLocModuleNoData1, metro1500TDMLocModuleEnabled4=metro1500TDMLocModuleEnabled4, metro1500TDMLocModuleClockNoFail3=metro1500TDMLocModuleClockNoFail3, metro1500TDMRxRem=metro1500TDMRxRem, metro1500RxRem2Off=metro1500RxRem2Off, metro1500TxLocTemp=metro1500TxLocTemp, metro1500EthernetHubPortEnable2=metro1500EthernetHubPortEnable2, metro1500HardwareVersion=metro1500HardwareVersion, metro1500TDMEntry=metro1500TDMEntry, metro1500MainTrapsinkAddress=metro1500MainTrapsinkAddress, metro1500SerialNumber=metro1500SerialNumber, metro1500Temperature=metro1500Temperature, metro1500repeatedMessage=metro1500repeatedMessage, metro1500Housing=metro1500Housing, metro1500MainHardwareVersion=metro1500MainHardwareVersion, metro1500TDMLocModuleRx3=metro1500TDMLocModuleRx3, metro1500Main=metro1500Main, metro1500TDMLocModuleEnable1=metro1500TDMLocModuleEnable1, metro1500TDMLocModuleDisable3=metro1500TDMLocModuleDisable3, metro1500TDMLocModuleData3=metro1500TDMLocModuleData3, metro1500ClockType=metro1500ClockType, metro1500Switch=metro1500Switch, metro1500Trap=metro1500Trap, metro1500FanOn=metro1500FanOn, metro1500TxRem2On=metro1500TxRem2On, metro1500TDMLocModuleNoData4=metro1500TDMLocModuleNoData4, advaProducts=advaProducts, metro1500TDMLocModuleInst1=metro1500TDMLocModuleInst1, metro1500TDMRxSync=metro1500TDMRxSync, metro1500switchToA=metro1500switchToA, metro1500MainLogfileNumber=metro1500MainLogfileNumber, metro1500TDMTable=metro1500TDMTable, metro1500ClockFail=metro1500ClockFail, metro1500switchReferenceLaserOn=metro1500switchReferenceLaserOn, metro1500TDMLocModuleTx1=metro1500TDMLocModuleTx1, metro1500TxRem=metro1500TxRem, metro1500TDMLocLoop=metro1500TDMLocLoop, metro1500EthernetHubTable=metro1500EthernetHubTable, metro1500EthernetHubPortPartitionStatus4=metro1500EthernetHubPortPartitionStatus4, metro1500TxLocOn=metro1500TxLocOn, metro1500MainLastEvent=metro1500MainLastEvent, internet=internet, metro1500EthernetHub=metro1500EthernetHub, adva=adva, metro1500SlotTable=metro1500SlotTable, metro1500switchReferenceLaserOff=metro1500switchReferenceLaserOff, metro1500EthernetHubPortPartitioned=metro1500EthernetHubPortPartitioned, metro1500TDMLocModuleRxOn4=metro1500TDMLocModuleRxOn4, metro1500RxLoc=metro1500RxLoc, metro1500MainSoftwareVersion=metro1500MainSoftwareVersion, metro1500TxRemOff=metro1500TxRemOff, metro1500RemLoopOff=metro1500RemLoopOff, metro1500TDMLocModuleClockFail4=metro1500TDMLocModuleClockFail4, metro1500switchAutomatic=metro1500switchAutomatic, metro1500ConverterNumber=metro1500ConverterNumber, metro1500EthernetHubPortPolarity4=metro1500EthernetHubPortPolarity4, metro1500switchLineBNotAvail=metro1500switchLineBNotAvail, metro1500TxLocOff=metro1500TxLocOff, metro1500EthernetHubPortPolarity1=metro1500EthernetHubPortPolarity1, metro1500FanTable=metro1500FanTable, metro1500Type=metro1500Type, metro1500SoftwareVersion=metro1500SoftwareVersion, metro1500EthernetHubPortPolarity3=metro1500EthernetHubPortPolarity3, metro1500TDMLocModuleInst4=metro1500TDMLocModuleInst4, metro1500TDMLocModuleClockFail1=metro1500TDMLocModuleClockFail1, metro1500PSOn=metro1500PSOn, metro1500MainTrapsinkPriority=metro1500MainTrapsinkPriority, metro1500MainLogfileSize=metro1500MainLogfileSize, metro1500MainTrapsinkTable=metro1500MainTrapsinkTable, metro1500RxRemOn=metro1500RxRemOn, metro1500ClockChangeFrequency=metro1500ClockChangeFrequency, metro1500TDMLocModuleRxOn3=metro1500TDMLocModuleRxOn3, metro1500TDMLocModuleEnable4=metro1500TDMLocModuleEnable4, metro1500RxRem=metro1500RxRem, metro1500TDMLocModuleRxOn2=metro1500TDMLocModuleRxOn2, org=org, metro1500TDMLocModuleClockFail3=metro1500TDMLocModuleClockFail3, metro1500HardwareDeleted=metro1500HardwareDeleted, metro1500=metro1500, metro1500TDMLocModuleClockFail2=metro1500TDMLocModuleClockFail2, metro1500FanNumber=metro1500FanNumber, metro1500TDMLocModuleClockError3=metro1500TDMLocModuleClockError3, metro1500TDMLocModuleClockError1=metro1500TDMLocModuleClockError1, metro1500MainSerialNumber=metro1500MainSerialNumber, metro1500EthernetHubPortLinkStatus3=metro1500EthernetHubPortLinkStatus3, metro1500TDMLocModuleDisable1=metro1500TDMLocModuleDisable1, enterprises=enterprises, metro1500TDMLocModuleNoData2=metro1500TDMLocModuleNoData2, metro1500TDMLocModuleRx1=metro1500TDMLocModuleRx1, metro1500TDMLocModuleClockFrequency2=metro1500TDMLocModuleClockFrequency2, metro1500TDMLocModuleEnable3=metro1500TDMLocModuleEnable3, metro1500MainType=metro1500MainType, metro1500TxLocC=metro1500TxLocC, metro1500EthernetHubPortEnable1=metro1500EthernetHubPortEnable1, metro1500EthernetHubPortPartitionStatus1=metro1500EthernetHubPortPartitionStatus1, metro1500TxRemOn=metro1500TxRemOn, metro1500ClockNoFail=metro1500ClockNoFail, metro1500TDMLocModuleRxOff1=metro1500TDMLocModuleRxOff1, metro1500TxRemC=metro1500TxRemC, metro1500SwitchNumber=metro1500SwitchNumber, metro1500SwitchLineBavail=metro1500SwitchLineBavail, metro1500Manufacturer=metro1500Manufacturer, metro1500PSTable=metro1500PSTable, metro1500FanEntry=metro1500FanEntry, metro1500SwitchMode=metro1500SwitchMode, metro1500TDMLocModuleRemoteData3=metro1500TDMLocModuleRemoteData3, metro1500PSEntry=metro1500PSEntry, metro1500TDMLocModuleClockFrequency4=metro1500TDMLocModuleClockFrequency4, metro1500switchToB=metro1500switchToB, metro1500EthernetHubPortNoLinkPulses=metro1500EthernetHubPortNoLinkPulses, metro1500TDMLocModuleRxOff2=metro1500TDMLocModuleRxOff2, metro1500EthernetHubPortPartitionStatus2=metro1500EthernetHubPortPartitionStatus2, metro1500TDMTxRemTemp=metro1500TDMTxRemTemp, metro1500EthernetHubPortPolarity5=metro1500EthernetHubPortPolarity5, metro1500TxRemTemp=metro1500TxRemTemp, metro1500TDMLocModuleRxOff3=metro1500TDMLocModuleRxOff3, metro1500MainTrapsinkCommunity=metro1500MainTrapsinkCommunity, metro1500EthernetHubNumber=metro1500EthernetHubNumber, metro1500MainLogfileName=metro1500MainLogfileName, metro1500TDMLocModuleClockFrequency3=metro1500TDMLocModuleClockFrequency3, metro1500PSNotFail=metro1500PSNotFail)
