#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-AtmPnniMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-AtmPnniMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
mscAtmIfIndex, mscAtmIfVptIndex, mscAtmIf, mscAtmIfVpt = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex", "mscAtmIfVptIndex", "mscAtmIf", "mscAtmIfVpt")
Integer32, Counter32, DisplayString, Gauge32, Unsigned32, StorageType, RowStatus = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Integer32", "Counter32", "DisplayString", "Gauge32", "Unsigned32", "StorageType", "RowStatus")
HexString, NonReplicated, Hex, AsciiStringIndex, FixedPoint1 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "HexString", "NonReplicated", "Hex", "AsciiStringIndex", "FixedPoint1")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, ObjectIdentity, ModuleIdentity, Bits, Counter32, IpAddress, Gauge32, NotificationType, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ObjectIdentity", "ModuleIdentity", "Bits", "Counter32", "IpAddress", "Gauge32", "NotificationType", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "Counter64", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
atmPnniMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 72))
mscAtmIfVptPnni = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7))
mscAtmIfVptPnniRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 1), )
if mibBuilder.loadTexts: mscAtmIfVptPnniRowStatusTable.setStatus('mandatory')
mscAtmIfVptPnniRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniRowStatusEntry.setStatus('mandatory')
mscAtmIfVptPnniRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniRowStatus.setStatus('mandatory')
mscAtmIfVptPnniComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniComponentName.setStatus('mandatory')
mscAtmIfVptPnniStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniStorageType.setStatus('mandatory')
mscAtmIfVptPnniIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptPnniIndex.setStatus('mandatory')
mscAtmIfVptPnniProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 10), )
if mibBuilder.loadTexts: mscAtmIfVptPnniProvTable.setStatus('mandatory')
mscAtmIfVptPnniProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniProvEntry.setStatus('mandatory')
mscAtmIfVptPnniSoftPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniSoftPvcRetryPeriod.setStatus('obsolete')
mscAtmIfVptPnniSoftPvpAndPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniSoftPvpAndPvcRetryPeriod.setStatus('mandatory')
mscAtmIfVptPnniSoftPvpAndPvcHoldOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(50, 20000), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniSoftPvpAndPvcHoldOffTime.setStatus('mandatory')
mscAtmIfVptPnniAdminWeightsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 11), )
if mibBuilder.loadTexts: mscAtmIfVptPnniAdminWeightsTable.setStatus('mandatory')
mscAtmIfVptPnniAdminWeightsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniAdminWeightsEntry.setStatus('mandatory')
mscAtmIfVptPnniCbrWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(5040)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniCbrWeight.setStatus('mandatory')
mscAtmIfVptPnniRtVbrWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(5040)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniRtVbrWeight.setStatus('mandatory')
mscAtmIfVptPnniNrtVbrWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(5040)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniNrtVbrWeight.setStatus('mandatory')
mscAtmIfVptPnniUbrWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(5040)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniUbrWeight.setStatus('mandatory')
mscAtmIfVptPnniAcctOptTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 12), )
if mibBuilder.loadTexts: mscAtmIfVptPnniAcctOptTable.setStatus('mandatory')
mscAtmIfVptPnniAcctOptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniAcctOptEntry.setStatus('mandatory')
mscAtmIfVptPnniAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 12, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniAccountCollection.setStatus('mandatory')
mscAtmIfVptPnniAccountConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("origTerm", 0), ("intermediate", 1))).clone('intermediate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniAccountConnectionType.setStatus('mandatory')
mscAtmIfVptPnniAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniAccountClass.setStatus('mandatory')
mscAtmIfVptPnniServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniServiceExchange.setStatus('mandatory')
mscAtmIfVptPnniOperationalTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 13), )
if mibBuilder.loadTexts: mscAtmIfVptPnniOperationalTable.setStatus('mandatory')
mscAtmIfVptPnniOperationalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniOperationalEntry.setStatus('mandatory')
mscAtmIfVptPnniPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniPortId.setStatus('mandatory')
mscAtmIfVptPnniVProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 14), )
if mibBuilder.loadTexts: mscAtmIfVptPnniVProvTable.setStatus('mandatory')
mscAtmIfVptPnniVProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniVProvEntry.setStatus('mandatory')
mscAtmIfVptPnniVpci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniVpci.setStatus('mandatory')
mscAtmIfVptPnniSig = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2))
mscAtmIfVptPnniSigRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfVptPnniSigRowStatusTable.setStatus('mandatory')
mscAtmIfVptPnniSigRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniSigRowStatusEntry.setStatus('mandatory')
mscAtmIfVptPnniSigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigRowStatus.setStatus('mandatory')
mscAtmIfVptPnniSigComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigComponentName.setStatus('mandatory')
mscAtmIfVptPnniSigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigStorageType.setStatus('mandatory')
mscAtmIfVptPnniSigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptPnniSigIndex.setStatus('mandatory')
mscAtmIfVptPnniSigProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 10), )
if mibBuilder.loadTexts: mscAtmIfVptPnniSigProvTable.setStatus('mandatory')
mscAtmIfVptPnniSigProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniSigProvEntry.setStatus('mandatory')
mscAtmIfVptPnniSigVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVci.setStatus('mandatory')
mscAtmIfVptPnniSigAddressConversion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("nativeE164", 1), ("nsap", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigAddressConversion.setStatus('mandatory')
mscAtmIfVptPnniSigOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("provisionedOnly", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigOperatingMode.setStatus('mandatory')
mscAtmIfVptPnniSigStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 11), )
if mibBuilder.loadTexts: mscAtmIfVptPnniSigStateTable.setStatus('mandatory')
mscAtmIfVptPnniSigStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniSigStateEntry.setStatus('mandatory')
mscAtmIfVptPnniSigAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigAdminState.setStatus('mandatory')
mscAtmIfVptPnniSigOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigOperationalState.setStatus('mandatory')
mscAtmIfVptPnniSigUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigUsageState.setStatus('mandatory')
mscAtmIfVptPnniSigOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 12), )
if mibBuilder.loadTexts: mscAtmIfVptPnniSigOperTable.setStatus('mandatory')
mscAtmIfVptPnniSigOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniSigOperEntry.setStatus('mandatory')
mscAtmIfVptPnniSigLastTxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigLastTxCauseCode.setStatus('mandatory')
mscAtmIfVptPnniSigLastTxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 12, 1, 2), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigLastTxDiagCode.setStatus('mandatory')
mscAtmIfVptPnniSigLastRxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigLastRxCauseCode.setStatus('mandatory')
mscAtmIfVptPnniSigLastRxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 12, 1, 4), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigLastRxDiagCode.setStatus('mandatory')
mscAtmIfVptPnniSigStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 13), )
if mibBuilder.loadTexts: mscAtmIfVptPnniSigStatsTable.setStatus('mandatory')
mscAtmIfVptPnniSigStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniSigStatsEntry.setStatus('mandatory')
mscAtmIfVptPnniSigCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigCurrentConnections.setStatus('obsolete')
mscAtmIfVptPnniSigPeakConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 13, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigPeakConnections.setStatus('mandatory')
mscAtmIfVptPnniSigSuccessfulConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigSuccessfulConnections.setStatus('mandatory')
mscAtmIfVptPnniSigFailedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigFailedConnections.setStatus('mandatory')
mscAtmIfVptPnniSigTxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigTxPdus.setStatus('mandatory')
mscAtmIfVptPnniSigRxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigRxPdus.setStatus('mandatory')
mscAtmIfVptPnniSigCurrentPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 13, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigCurrentPmpConnections.setStatus('mandatory')
mscAtmIfVptPnniSigPeakPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 13, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigPeakPmpConnections.setStatus('mandatory')
mscAtmIfVptPnniSigSuccessfulPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigSuccessfulPmpConnections.setStatus('mandatory')
mscAtmIfVptPnniSigFailedPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigFailedPmpConnections.setStatus('mandatory')
mscAtmIfVptPnniSigNewCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 13, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigNewCurrentConnections.setStatus('mandatory')
mscAtmIfVptPnniSigVcd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2))
mscAtmIfVptPnniSigVcdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdRowStatusTable.setStatus('mandatory')
mscAtmIfVptPnniSigVcdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniSigVcdIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdRowStatusEntry.setStatus('mandatory')
mscAtmIfVptPnniSigVcdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdRowStatus.setStatus('mandatory')
mscAtmIfVptPnniSigVcdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdComponentName.setStatus('mandatory')
mscAtmIfVptPnniSigVcdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdStorageType.setStatus('mandatory')
mscAtmIfVptPnniSigVcdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdIndex.setStatus('mandatory')
mscAtmIfVptPnniSigVcdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 10), )
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdProvTable.setStatus('mandatory')
mscAtmIfVptPnniSigVcdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniSigVcdIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdProvEntry.setStatus('mandatory')
mscAtmIfVptPnniSigVcdTrafficDescType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 6, 7, 8))).clone(namedValues=NamedValues(("n3", 3), ("n6", 6), ("n7", 7), ("n8", 8))).clone('n6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdTrafficDescType.setStatus('mandatory')
mscAtmIfVptPnniSigVcdAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unspecifiedBitRate", 0), ("constantBitRate", 1), ("rtVariableBitRate", 2), ("nrtVariableBitRate", 3))).clone('rtVariableBitRate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdAtmServiceCategory.setStatus('mandatory')
mscAtmIfVptPnniSigVcdWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ValueRangeConstraint(65535, 65535), )).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdWeight.setStatus('mandatory')
mscAtmIfVptPnniSigVcdQosClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4))).clone('n2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdQosClass.setStatus('mandatory')
mscAtmIfVptPnniSigVcdTrafficShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 10, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdTrafficShaping.setStatus('mandatory')
mscAtmIfVptPnniSigVcdUnshapedTransmitQueueing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 10, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("common", 1), ("sameAsCa", 3))).clone('sameAsCa')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdUnshapedTransmitQueueing.setStatus('mandatory')
mscAtmIfVptPnniSigVcdUsageParameterControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 10, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdUsageParameterControl.setStatus('mandatory')
mscAtmIfVptPnniSigVcdTdpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 387), )
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdTdpTable.setStatus('mandatory')
mscAtmIfVptPnniSigVcdTdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 387, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniSigVcdIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniSigVcdTdpIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdTdpEntry.setStatus('mandatory')
mscAtmIfVptPnniSigVcdTdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 387, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdTdpIndex.setStatus('mandatory')
mscAtmIfVptPnniSigVcdTdpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 2, 2, 387, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniSigVcdTdpValue.setStatus('mandatory')
mscAtmIfVptPnniRcc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3))
mscAtmIfVptPnniRccRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 1), )
if mibBuilder.loadTexts: mscAtmIfVptPnniRccRowStatusTable.setStatus('mandatory')
mscAtmIfVptPnniRccRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniRccIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniRccRowStatusEntry.setStatus('mandatory')
mscAtmIfVptPnniRccRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccRowStatus.setStatus('mandatory')
mscAtmIfVptPnniRccComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccComponentName.setStatus('mandatory')
mscAtmIfVptPnniRccStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccStorageType.setStatus('mandatory')
mscAtmIfVptPnniRccIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptPnniRccIndex.setStatus('mandatory')
mscAtmIfVptPnniRccProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 10), )
if mibBuilder.loadTexts: mscAtmIfVptPnniRccProvTable.setStatus('mandatory')
mscAtmIfVptPnniRccProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniRccIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniRccProvEntry.setStatus('mandatory')
mscAtmIfVptPnniRccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(18)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVci.setStatus('mandatory')
mscAtmIfVptPnniRccHlParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 11), )
if mibBuilder.loadTexts: mscAtmIfVptPnniRccHlParmsTable.setStatus('mandatory')
mscAtmIfVptPnniRccHlParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniRccIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniRccHlParmsEntry.setStatus('mandatory')
mscAtmIfVptPnniRccHelloHoldDown = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 11, 1, 1), FixedPoint1().subtype(subtypeSpec=ValueRangeConstraint(0, 655350))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccHelloHoldDown.setStatus('mandatory')
mscAtmIfVptPnniRccHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccHelloInterval.setStatus('mandatory')
mscAtmIfVptPnniRccHelloInactivityFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccHelloInactivityFactor.setStatus('mandatory')
mscAtmIfVptPnniRccStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 12), )
if mibBuilder.loadTexts: mscAtmIfVptPnniRccStateTable.setStatus('mandatory')
mscAtmIfVptPnniRccStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniRccIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniRccStateEntry.setStatus('mandatory')
mscAtmIfVptPnniRccAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccAdminState.setStatus('mandatory')
mscAtmIfVptPnniRccOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccOperationalState.setStatus('mandatory')
mscAtmIfVptPnniRccUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccUsageState.setStatus('mandatory')
mscAtmIfVptPnniRccOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 13), )
if mibBuilder.loadTexts: mscAtmIfVptPnniRccOperTable.setStatus('mandatory')
mscAtmIfVptPnniRccOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniRccIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniRccOperEntry.setStatus('mandatory')
mscAtmIfVptPnniRccType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("lowestLevelHorizLink", 1), ("lowestLevelOutsideLink", 2), ("horizontalLinkToLGN", 3), ("uplink", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccType.setStatus('mandatory')
mscAtmIfVptPnniRccNegotiatedVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unsupported", 0), ("version1point0", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccNegotiatedVersion.setStatus('mandatory')
mscAtmIfVptPnniRccHelloState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notApplicable", 0), ("down", 1), ("attempt", 2), ("oneWayInside", 3), ("twoWayInside", 4), ("oneWayOutside", 5), ("twoWayOutside", 6), ("commonOutside", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccHelloState.setStatus('mandatory')
mscAtmIfVptPnniRccRemoteNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 13, 1, 4), HexString().subtype(subtypeSpec=ValueSizeConstraint(22, 22)).setFixedLength(22)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccRemoteNodeId.setStatus('mandatory')
mscAtmIfVptPnniRccRemotePortId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 13, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccRemotePortId.setStatus('mandatory')
mscAtmIfVptPnniRccStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 14), )
if mibBuilder.loadTexts: mscAtmIfVptPnniRccStatsTable.setStatus('mandatory')
mscAtmIfVptPnniRccStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniRccIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniRccStatsEntry.setStatus('mandatory')
mscAtmIfVptPnniRccHelloPacketsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 14, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccHelloPacketsRx.setStatus('mandatory')
mscAtmIfVptPnniRccHelloPacketsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccHelloPacketsTx.setStatus('mandatory')
mscAtmIfVptPnniRccMismatchedHelloPacketsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 14, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccMismatchedHelloPacketsRx.setStatus('mandatory')
mscAtmIfVptPnniRccBadHelloPacketsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccBadHelloPacketsRx.setStatus('mandatory')
mscAtmIfVptPnniRccVcd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2))
mscAtmIfVptPnniRccVcdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdRowStatusTable.setStatus('mandatory')
mscAtmIfVptPnniRccVcdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniRccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniRccVcdIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdRowStatusEntry.setStatus('mandatory')
mscAtmIfVptPnniRccVcdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdRowStatus.setStatus('mandatory')
mscAtmIfVptPnniRccVcdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdComponentName.setStatus('mandatory')
mscAtmIfVptPnniRccVcdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdStorageType.setStatus('mandatory')
mscAtmIfVptPnniRccVcdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdIndex.setStatus('mandatory')
mscAtmIfVptPnniRccVcdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 10), )
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdProvTable.setStatus('mandatory')
mscAtmIfVptPnniRccVcdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniRccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniRccVcdIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdProvEntry.setStatus('mandatory')
mscAtmIfVptPnniRccVcdTrafficDescType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 6, 7, 8))).clone(namedValues=NamedValues(("n3", 3), ("n6", 6), ("n7", 7), ("n8", 8))).clone('n6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdTrafficDescType.setStatus('mandatory')
mscAtmIfVptPnniRccVcdAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unspecifiedBitRate", 0), ("constantBitRate", 1), ("rtVariableBitRate", 2), ("nrtVariableBitRate", 3))).clone('rtVariableBitRate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdAtmServiceCategory.setStatus('mandatory')
mscAtmIfVptPnniRccVcdWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ValueRangeConstraint(65535, 65535), )).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdWeight.setStatus('mandatory')
mscAtmIfVptPnniRccVcdQosClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4))).clone('n2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdQosClass.setStatus('mandatory')
mscAtmIfVptPnniRccVcdTrafficShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 10, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdTrafficShaping.setStatus('mandatory')
mscAtmIfVptPnniRccVcdUnshapedTransmitQueueing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 10, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("common", 1), ("sameAsCa", 3))).clone('sameAsCa')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdUnshapedTransmitQueueing.setStatus('mandatory')
mscAtmIfVptPnniRccVcdUsageParameterControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 10, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdUsageParameterControl.setStatus('mandatory')
mscAtmIfVptPnniRccVcdTdpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 387), )
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdTdpTable.setStatus('mandatory')
mscAtmIfVptPnniRccVcdTdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 387, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniRccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniRccVcdIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniRccVcdTdpIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdTdpEntry.setStatus('mandatory')
mscAtmIfVptPnniRccVcdTdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 387, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdTdpIndex.setStatus('mandatory')
mscAtmIfVptPnniRccVcdTdpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 3, 2, 387, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniRccVcdTdpValue.setStatus('mandatory')
mscAtmIfVptPnniAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4))
mscAtmIfVptPnniAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 1), )
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrRowStatusTable.setStatus('mandatory')
mscAtmIfVptPnniAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniAddrAddressTypeIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrRowStatusEntry.setStatus('mandatory')
mscAtmIfVptPnniAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrRowStatus.setStatus('mandatory')
mscAtmIfVptPnniAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrComponentName.setStatus('mandatory')
mscAtmIfVptPnniAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrStorageType.setStatus('mandatory')
mscAtmIfVptPnniAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrAddressIndex.setStatus('mandatory')
mscAtmIfVptPnniAddrAddressTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("primary", 0), ("alternate", 1), ("registered", 2), ("default", 3))))
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrAddressTypeIndex.setStatus('mandatory')
mscAtmIfVptPnniAddrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 10), )
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrOperTable.setStatus('mandatory')
mscAtmIfVptPnniAddrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniAddrAddressTypeIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrOperEntry.setStatus('mandatory')
mscAtmIfVptPnniAddrScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrScope.setStatus('mandatory')
mscAtmIfVptPnniAddrReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrReachability.setStatus('mandatory')
mscAtmIfVptPnniAddrTermSP = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 2))
mscAtmIfVptPnniAddrTermSPRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrTermSPRowStatusTable.setStatus('mandatory')
mscAtmIfVptPnniAddrTermSPRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniAddrTermSPIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrTermSPRowStatusEntry.setStatus('mandatory')
mscAtmIfVptPnniAddrTermSPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrTermSPRowStatus.setStatus('mandatory')
mscAtmIfVptPnniAddrTermSPComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrTermSPComponentName.setStatus('mandatory')
mscAtmIfVptPnniAddrTermSPStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrTermSPStorageType.setStatus('mandatory')
mscAtmIfVptPnniAddrTermSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrTermSPIndex.setStatus('mandatory')
mscAtmIfVptPnniAddrPnniInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 3))
mscAtmIfVptPnniAddrPnniInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 3, 1), )
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrPnniInfoRowStatusTable.setStatus('mandatory')
mscAtmIfVptPnniAddrPnniInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniAddrPnniInfoIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrPnniInfoRowStatusEntry.setStatus('mandatory')
mscAtmIfVptPnniAddrPnniInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrPnniInfoRowStatus.setStatus('mandatory')
mscAtmIfVptPnniAddrPnniInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrPnniInfoComponentName.setStatus('mandatory')
mscAtmIfVptPnniAddrPnniInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrPnniInfoStorageType.setStatus('mandatory')
mscAtmIfVptPnniAddrPnniInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrPnniInfoIndex.setStatus('mandatory')
mscAtmIfVptPnniAddrPnniInfoProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 3, 10), )
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrPnniInfoProvTable.setStatus('mandatory')
mscAtmIfVptPnniAddrPnniInfoProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfVptPnniAddrPnniInfoIndex"))
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrPnniInfoProvEntry.setStatus('mandatory')
mscAtmIfVptPnniAddrPnniInfoScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrPnniInfoScope.setStatus('mandatory')
mscAtmIfVptPnniAddrPnniInfoReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 7, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptPnniAddrPnniInfoReachability.setStatus('mandatory')
mscAtmIfPnni = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96))
mscAtmIfPnniRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 1), )
if mibBuilder.loadTexts: mscAtmIfPnniRowStatusTable.setStatus('mandatory')
mscAtmIfPnniRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniRowStatusEntry.setStatus('mandatory')
mscAtmIfPnniRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniRowStatus.setStatus('mandatory')
mscAtmIfPnniComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniComponentName.setStatus('mandatory')
mscAtmIfPnniStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniStorageType.setStatus('mandatory')
mscAtmIfPnniIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfPnniIndex.setStatus('mandatory')
mscAtmIfPnniProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 10), )
if mibBuilder.loadTexts: mscAtmIfPnniProvTable.setStatus('mandatory')
mscAtmIfPnniProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniProvEntry.setStatus('mandatory')
mscAtmIfPnniSoftPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniSoftPvcRetryPeriod.setStatus('obsolete')
mscAtmIfPnniSoftPvpAndPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniSoftPvpAndPvcRetryPeriod.setStatus('mandatory')
mscAtmIfPnniSoftPvpAndPvcHoldOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(50, 20000), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniSoftPvpAndPvcHoldOffTime.setStatus('mandatory')
mscAtmIfPnniAdminWeightsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 11), )
if mibBuilder.loadTexts: mscAtmIfPnniAdminWeightsTable.setStatus('mandatory')
mscAtmIfPnniAdminWeightsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniAdminWeightsEntry.setStatus('mandatory')
mscAtmIfPnniCbrWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(5040)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniCbrWeight.setStatus('mandatory')
mscAtmIfPnniRtVbrWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(5040)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniRtVbrWeight.setStatus('mandatory')
mscAtmIfPnniNrtVbrWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(5040)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniNrtVbrWeight.setStatus('mandatory')
mscAtmIfPnniUbrWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(5040)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniUbrWeight.setStatus('mandatory')
mscAtmIfPnniAcctOptTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 12), )
if mibBuilder.loadTexts: mscAtmIfPnniAcctOptTable.setStatus('mandatory')
mscAtmIfPnniAcctOptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniAcctOptEntry.setStatus('mandatory')
mscAtmIfPnniAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 12, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniAccountCollection.setStatus('mandatory')
mscAtmIfPnniAccountConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("origTerm", 0), ("intermediate", 1))).clone('intermediate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniAccountConnectionType.setStatus('mandatory')
mscAtmIfPnniAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniAccountClass.setStatus('mandatory')
mscAtmIfPnniServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniServiceExchange.setStatus('mandatory')
mscAtmIfPnniOperationalTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 13), )
if mibBuilder.loadTexts: mscAtmIfPnniOperationalTable.setStatus('mandatory')
mscAtmIfPnniOperationalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniOperationalEntry.setStatus('mandatory')
mscAtmIfPnniPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniPortId.setStatus('mandatory')
mscAtmIfPnniSig = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2))
mscAtmIfPnniSigRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfPnniSigRowStatusTable.setStatus('mandatory')
mscAtmIfPnniSigRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniSigRowStatusEntry.setStatus('mandatory')
mscAtmIfPnniSigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigRowStatus.setStatus('mandatory')
mscAtmIfPnniSigComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigComponentName.setStatus('mandatory')
mscAtmIfPnniSigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigStorageType.setStatus('mandatory')
mscAtmIfPnniSigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfPnniSigIndex.setStatus('mandatory')
mscAtmIfPnniSigProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 10), )
if mibBuilder.loadTexts: mscAtmIfPnniSigProvTable.setStatus('mandatory')
mscAtmIfPnniSigProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniSigProvEntry.setStatus('mandatory')
mscAtmIfPnniSigVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniSigVci.setStatus('mandatory')
mscAtmIfPnniSigAddressConversion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("nativeE164", 1), ("nsap", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniSigAddressConversion.setStatus('mandatory')
mscAtmIfPnniSigOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("provisionedOnly", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniSigOperatingMode.setStatus('mandatory')
mscAtmIfPnniSigStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 11), )
if mibBuilder.loadTexts: mscAtmIfPnniSigStateTable.setStatus('mandatory')
mscAtmIfPnniSigStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniSigStateEntry.setStatus('mandatory')
mscAtmIfPnniSigAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigAdminState.setStatus('mandatory')
mscAtmIfPnniSigOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigOperationalState.setStatus('mandatory')
mscAtmIfPnniSigUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigUsageState.setStatus('mandatory')
mscAtmIfPnniSigOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 12), )
if mibBuilder.loadTexts: mscAtmIfPnniSigOperTable.setStatus('mandatory')
mscAtmIfPnniSigOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniSigOperEntry.setStatus('mandatory')
mscAtmIfPnniSigLastTxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigLastTxCauseCode.setStatus('mandatory')
mscAtmIfPnniSigLastTxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 12, 1, 2), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigLastTxDiagCode.setStatus('mandatory')
mscAtmIfPnniSigLastRxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigLastRxCauseCode.setStatus('mandatory')
mscAtmIfPnniSigLastRxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 12, 1, 4), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigLastRxDiagCode.setStatus('mandatory')
mscAtmIfPnniSigStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 13), )
if mibBuilder.loadTexts: mscAtmIfPnniSigStatsTable.setStatus('mandatory')
mscAtmIfPnniSigStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniSigStatsEntry.setStatus('mandatory')
mscAtmIfPnniSigCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigCurrentConnections.setStatus('obsolete')
mscAtmIfPnniSigPeakConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 13, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigPeakConnections.setStatus('mandatory')
mscAtmIfPnniSigSuccessfulConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigSuccessfulConnections.setStatus('mandatory')
mscAtmIfPnniSigFailedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigFailedConnections.setStatus('mandatory')
mscAtmIfPnniSigTxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigTxPdus.setStatus('mandatory')
mscAtmIfPnniSigRxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigRxPdus.setStatus('mandatory')
mscAtmIfPnniSigCurrentPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 13, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigCurrentPmpConnections.setStatus('mandatory')
mscAtmIfPnniSigPeakPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 13, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigPeakPmpConnections.setStatus('mandatory')
mscAtmIfPnniSigSuccessfulPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigSuccessfulPmpConnections.setStatus('mandatory')
mscAtmIfPnniSigFailedPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigFailedPmpConnections.setStatus('mandatory')
mscAtmIfPnniSigNewCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 13, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigNewCurrentConnections.setStatus('mandatory')
mscAtmIfPnniSigVcd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2))
mscAtmIfPnniSigVcdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdRowStatusTable.setStatus('mandatory')
mscAtmIfPnniSigVcdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniSigVcdIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdRowStatusEntry.setStatus('mandatory')
mscAtmIfPnniSigVcdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdRowStatus.setStatus('mandatory')
mscAtmIfPnniSigVcdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdComponentName.setStatus('mandatory')
mscAtmIfPnniSigVcdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdStorageType.setStatus('mandatory')
mscAtmIfPnniSigVcdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdIndex.setStatus('mandatory')
mscAtmIfPnniSigVcdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 10), )
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdProvTable.setStatus('mandatory')
mscAtmIfPnniSigVcdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniSigVcdIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdProvEntry.setStatus('mandatory')
mscAtmIfPnniSigVcdTrafficDescType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 6, 7, 8))).clone(namedValues=NamedValues(("n3", 3), ("n6", 6), ("n7", 7), ("n8", 8))).clone('n6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdTrafficDescType.setStatus('mandatory')
mscAtmIfPnniSigVcdAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unspecifiedBitRate", 0), ("constantBitRate", 1), ("rtVariableBitRate", 2), ("nrtVariableBitRate", 3))).clone('rtVariableBitRate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdAtmServiceCategory.setStatus('mandatory')
mscAtmIfPnniSigVcdWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ValueRangeConstraint(65535, 65535), )).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdWeight.setStatus('mandatory')
mscAtmIfPnniSigVcdQosClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4))).clone('n2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdQosClass.setStatus('mandatory')
mscAtmIfPnniSigVcdTrafficShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 10, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdTrafficShaping.setStatus('mandatory')
mscAtmIfPnniSigVcdUnshapedTransmitQueueing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 10, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("common", 1), ("sameAsCa", 3))).clone('sameAsCa')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdUnshapedTransmitQueueing.setStatus('mandatory')
mscAtmIfPnniSigVcdUsageParameterControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 10, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdUsageParameterControl.setStatus('mandatory')
mscAtmIfPnniSigVcdTdpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 387), )
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdTdpTable.setStatus('mandatory')
mscAtmIfPnniSigVcdTdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 387, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniSigVcdIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniSigVcdTdpIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdTdpEntry.setStatus('mandatory')
mscAtmIfPnniSigVcdTdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 387, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdTdpIndex.setStatus('mandatory')
mscAtmIfPnniSigVcdTdpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 2, 2, 387, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniSigVcdTdpValue.setStatus('mandatory')
mscAtmIfPnniRcc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3))
mscAtmIfPnniRccRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 1), )
if mibBuilder.loadTexts: mscAtmIfPnniRccRowStatusTable.setStatus('mandatory')
mscAtmIfPnniRccRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniRccIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniRccRowStatusEntry.setStatus('mandatory')
mscAtmIfPnniRccRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniRccRowStatus.setStatus('mandatory')
mscAtmIfPnniRccComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniRccComponentName.setStatus('mandatory')
mscAtmIfPnniRccStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniRccStorageType.setStatus('mandatory')
mscAtmIfPnniRccIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfPnniRccIndex.setStatus('mandatory')
mscAtmIfPnniRccProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 10), )
if mibBuilder.loadTexts: mscAtmIfPnniRccProvTable.setStatus('mandatory')
mscAtmIfPnniRccProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniRccIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniRccProvEntry.setStatus('mandatory')
mscAtmIfPnniRccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(18)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniRccVci.setStatus('mandatory')
mscAtmIfPnniRccHlParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 11), )
if mibBuilder.loadTexts: mscAtmIfPnniRccHlParmsTable.setStatus('mandatory')
mscAtmIfPnniRccHlParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniRccIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniRccHlParmsEntry.setStatus('mandatory')
mscAtmIfPnniRccHelloHoldDown = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 11, 1, 1), FixedPoint1().subtype(subtypeSpec=ValueRangeConstraint(0, 655350))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniRccHelloHoldDown.setStatus('mandatory')
mscAtmIfPnniRccHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniRccHelloInterval.setStatus('mandatory')
mscAtmIfPnniRccHelloInactivityFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniRccHelloInactivityFactor.setStatus('mandatory')
mscAtmIfPnniRccStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 12), )
if mibBuilder.loadTexts: mscAtmIfPnniRccStateTable.setStatus('mandatory')
mscAtmIfPnniRccStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniRccIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniRccStateEntry.setStatus('mandatory')
mscAtmIfPnniRccAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniRccAdminState.setStatus('mandatory')
mscAtmIfPnniRccOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniRccOperationalState.setStatus('mandatory')
mscAtmIfPnniRccUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniRccUsageState.setStatus('mandatory')
mscAtmIfPnniRccOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 13), )
if mibBuilder.loadTexts: mscAtmIfPnniRccOperTable.setStatus('mandatory')
mscAtmIfPnniRccOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniRccIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniRccOperEntry.setStatus('mandatory')
mscAtmIfPnniRccType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("lowestLevelHorizLink", 1), ("lowestLevelOutsideLink", 2), ("horizontalLinkToLGN", 3), ("uplink", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniRccType.setStatus('mandatory')
mscAtmIfPnniRccNegotiatedVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unsupported", 0), ("version1point0", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniRccNegotiatedVersion.setStatus('mandatory')
mscAtmIfPnniRccHelloState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notApplicable", 0), ("down", 1), ("attempt", 2), ("oneWayInside", 3), ("twoWayInside", 4), ("oneWayOutside", 5), ("twoWayOutside", 6), ("commonOutside", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniRccHelloState.setStatus('mandatory')
mscAtmIfPnniRccRemoteNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 13, 1, 4), HexString().subtype(subtypeSpec=ValueSizeConstraint(22, 22)).setFixedLength(22)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniRccRemoteNodeId.setStatus('mandatory')
mscAtmIfPnniRccRemotePortId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 13, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniRccRemotePortId.setStatus('mandatory')
mscAtmIfPnniRccStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 14), )
if mibBuilder.loadTexts: mscAtmIfPnniRccStatsTable.setStatus('mandatory')
mscAtmIfPnniRccStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniRccIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniRccStatsEntry.setStatus('mandatory')
mscAtmIfPnniRccHelloPacketsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 14, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniRccHelloPacketsRx.setStatus('mandatory')
mscAtmIfPnniRccHelloPacketsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniRccHelloPacketsTx.setStatus('mandatory')
mscAtmIfPnniRccMismatchedHelloPacketsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 14, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniRccMismatchedHelloPacketsRx.setStatus('mandatory')
mscAtmIfPnniRccBadHelloPacketsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniRccBadHelloPacketsRx.setStatus('mandatory')
mscAtmIfPnniRccVcd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2))
mscAtmIfPnniRccVcdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdRowStatusTable.setStatus('mandatory')
mscAtmIfPnniRccVcdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniRccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniRccVcdIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdRowStatusEntry.setStatus('mandatory')
mscAtmIfPnniRccVcdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdRowStatus.setStatus('mandatory')
mscAtmIfPnniRccVcdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdComponentName.setStatus('mandatory')
mscAtmIfPnniRccVcdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdStorageType.setStatus('mandatory')
mscAtmIfPnniRccVcdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdIndex.setStatus('mandatory')
mscAtmIfPnniRccVcdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 10), )
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdProvTable.setStatus('mandatory')
mscAtmIfPnniRccVcdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniRccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniRccVcdIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdProvEntry.setStatus('mandatory')
mscAtmIfPnniRccVcdTrafficDescType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 6, 7, 8))).clone(namedValues=NamedValues(("n3", 3), ("n6", 6), ("n7", 7), ("n8", 8))).clone('n6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdTrafficDescType.setStatus('mandatory')
mscAtmIfPnniRccVcdAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unspecifiedBitRate", 0), ("constantBitRate", 1), ("rtVariableBitRate", 2), ("nrtVariableBitRate", 3))).clone('rtVariableBitRate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdAtmServiceCategory.setStatus('mandatory')
mscAtmIfPnniRccVcdWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ValueRangeConstraint(65535, 65535), )).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdWeight.setStatus('mandatory')
mscAtmIfPnniRccVcdQosClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4))).clone('n2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdQosClass.setStatus('mandatory')
mscAtmIfPnniRccVcdTrafficShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 10, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdTrafficShaping.setStatus('mandatory')
mscAtmIfPnniRccVcdUnshapedTransmitQueueing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 10, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("common", 1), ("sameAsCa", 3))).clone('sameAsCa')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdUnshapedTransmitQueueing.setStatus('mandatory')
mscAtmIfPnniRccVcdUsageParameterControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 10, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdUsageParameterControl.setStatus('mandatory')
mscAtmIfPnniRccVcdTdpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 387), )
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdTdpTable.setStatus('mandatory')
mscAtmIfPnniRccVcdTdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 387, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniRccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniRccVcdIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniRccVcdTdpIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdTdpEntry.setStatus('mandatory')
mscAtmIfPnniRccVcdTdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 387, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdTdpIndex.setStatus('mandatory')
mscAtmIfPnniRccVcdTdpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 3, 2, 387, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniRccVcdTdpValue.setStatus('mandatory')
mscAtmIfPnniAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4))
mscAtmIfPnniAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 1), )
if mibBuilder.loadTexts: mscAtmIfPnniAddrRowStatusTable.setStatus('mandatory')
mscAtmIfPnniAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniAddrAddressTypeIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniAddrRowStatusEntry.setStatus('mandatory')
mscAtmIfPnniAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniAddrRowStatus.setStatus('mandatory')
mscAtmIfPnniAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniAddrComponentName.setStatus('mandatory')
mscAtmIfPnniAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniAddrStorageType.setStatus('mandatory')
mscAtmIfPnniAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: mscAtmIfPnniAddrAddressIndex.setStatus('mandatory')
mscAtmIfPnniAddrAddressTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("primary", 0), ("alternate", 1), ("registered", 2), ("default", 3))))
if mibBuilder.loadTexts: mscAtmIfPnniAddrAddressTypeIndex.setStatus('mandatory')
mscAtmIfPnniAddrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 10), )
if mibBuilder.loadTexts: mscAtmIfPnniAddrOperTable.setStatus('mandatory')
mscAtmIfPnniAddrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniAddrAddressTypeIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniAddrOperEntry.setStatus('mandatory')
mscAtmIfPnniAddrScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniAddrScope.setStatus('mandatory')
mscAtmIfPnniAddrReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniAddrReachability.setStatus('mandatory')
mscAtmIfPnniAddrTermSP = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 2))
mscAtmIfPnniAddrTermSPRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfPnniAddrTermSPRowStatusTable.setStatus('mandatory')
mscAtmIfPnniAddrTermSPRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniAddrTermSPIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniAddrTermSPRowStatusEntry.setStatus('mandatory')
mscAtmIfPnniAddrTermSPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniAddrTermSPRowStatus.setStatus('mandatory')
mscAtmIfPnniAddrTermSPComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniAddrTermSPComponentName.setStatus('mandatory')
mscAtmIfPnniAddrTermSPStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniAddrTermSPStorageType.setStatus('mandatory')
mscAtmIfPnniAddrTermSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfPnniAddrTermSPIndex.setStatus('mandatory')
mscAtmIfPnniAddrPnniInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 3))
mscAtmIfPnniAddrPnniInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 3, 1), )
if mibBuilder.loadTexts: mscAtmIfPnniAddrPnniInfoRowStatusTable.setStatus('mandatory')
mscAtmIfPnniAddrPnniInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniAddrPnniInfoIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniAddrPnniInfoRowStatusEntry.setStatus('mandatory')
mscAtmIfPnniAddrPnniInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniAddrPnniInfoRowStatus.setStatus('mandatory')
mscAtmIfPnniAddrPnniInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniAddrPnniInfoComponentName.setStatus('mandatory')
mscAtmIfPnniAddrPnniInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfPnniAddrPnniInfoStorageType.setStatus('mandatory')
mscAtmIfPnniAddrPnniInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfPnniAddrPnniInfoIndex.setStatus('mandatory')
mscAtmIfPnniAddrPnniInfoProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 3, 10), )
if mibBuilder.loadTexts: mscAtmIfPnniAddrPnniInfoProvTable.setStatus('mandatory')
mscAtmIfPnniAddrPnniInfoProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmPnniMIB", "mscAtmIfPnniAddrPnniInfoIndex"))
if mibBuilder.loadTexts: mscAtmIfPnniAddrPnniInfoProvEntry.setStatus('mandatory')
mscAtmIfPnniAddrPnniInfoScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniAddrPnniInfoScope.setStatus('mandatory')
mscAtmIfPnniAddrPnniInfoReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 96, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfPnniAddrPnniInfoReachability.setStatus('mandatory')
atmPnniGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 72, 1))
atmPnniGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 72, 1, 1))
atmPnniGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 72, 1, 1, 3))
atmPnniGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 72, 1, 1, 3, 2))
atmPnniCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 72, 3))
atmPnniCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 72, 3, 1))
atmPnniCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 72, 3, 1, 3))
atmPnniCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 72, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-AtmPnniMIB", mscAtmIfVptPnniRccVcdRowStatusTable=mscAtmIfVptPnniRccVcdRowStatusTable, mscAtmIfPnniAddrPnniInfoReachability=mscAtmIfPnniAddrPnniInfoReachability, mscAtmIfVptPnniSigVcdProvEntry=mscAtmIfVptPnniSigVcdProvEntry, mscAtmIfVptPnniSigOperationalState=mscAtmIfVptPnniSigOperationalState, mscAtmIfPnniAdminWeightsEntry=mscAtmIfPnniAdminWeightsEntry, mscAtmIfVptPnniAddrComponentName=mscAtmIfVptPnniAddrComponentName, mscAtmIfPnniAddrPnniInfoRowStatusTable=mscAtmIfPnniAddrPnniInfoRowStatusTable, mscAtmIfPnniSigOperationalState=mscAtmIfPnniSigOperationalState, mscAtmIfPnniRowStatusTable=mscAtmIfPnniRowStatusTable, mscAtmIfPnniAddrPnniInfoProvTable=mscAtmIfPnniAddrPnniInfoProvTable, mscAtmIfPnniAddrStorageType=mscAtmIfPnniAddrStorageType, mscAtmIfVptPnniRccStatsEntry=mscAtmIfVptPnniRccStatsEntry, mscAtmIfVptPnniAddrPnniInfoRowStatusTable=mscAtmIfVptPnniAddrPnniInfoRowStatusTable, mscAtmIfVptPnniRccVcdTrafficShaping=mscAtmIfVptPnniRccVcdTrafficShaping, mscAtmIfVptPnniAddrPnniInfoProvEntry=mscAtmIfVptPnniAddrPnniInfoProvEntry, mscAtmIfPnniSigOperTable=mscAtmIfPnniSigOperTable, mscAtmIfVptPnniRccVcdQosClass=mscAtmIfVptPnniRccVcdQosClass, mscAtmIfVptPnniRccNegotiatedVersion=mscAtmIfVptPnniRccNegotiatedVersion, mscAtmIfPnniSigVcdTrafficShaping=mscAtmIfPnniSigVcdTrafficShaping, mscAtmIfPnni=mscAtmIfPnni, mscAtmIfPnniRccRowStatus=mscAtmIfPnniRccRowStatus, mscAtmIfPnniRccType=mscAtmIfPnniRccType, mscAtmIfVptPnniAdminWeightsTable=mscAtmIfVptPnniAdminWeightsTable, mscAtmIfVptPnniSigLastRxCauseCode=mscAtmIfVptPnniSigLastRxCauseCode, mscAtmIfPnniAccountCollection=mscAtmIfPnniAccountCollection, mscAtmIfPnniRccStorageType=mscAtmIfPnniRccStorageType, mscAtmIfPnniAddrAddressTypeIndex=mscAtmIfPnniAddrAddressTypeIndex, mscAtmIfVptPnniRccVcdTdpValue=mscAtmIfVptPnniRccVcdTdpValue, mscAtmIfPnniRccAdminState=mscAtmIfPnniRccAdminState, mscAtmIfPnniAddrTermSPRowStatus=mscAtmIfPnniAddrTermSPRowStatus, mscAtmIfPnniSigComponentName=mscAtmIfPnniSigComponentName, mscAtmIfVptPnniRccType=mscAtmIfVptPnniRccType, mscAtmIfVptPnniProvTable=mscAtmIfVptPnniProvTable, mscAtmIfVptPnniSoftPvcRetryPeriod=mscAtmIfVptPnniSoftPvcRetryPeriod, mscAtmIfVptPnniAddrTermSP=mscAtmIfVptPnniAddrTermSP, mscAtmIfPnniRccHelloPacketsTx=mscAtmIfPnniRccHelloPacketsTx, mscAtmIfVptPnniAddrPnniInfoIndex=mscAtmIfVptPnniAddrPnniInfoIndex, mscAtmIfPnniRtVbrWeight=mscAtmIfPnniRtVbrWeight, mscAtmIfVptPnniRccHlParmsTable=mscAtmIfVptPnniRccHlParmsTable, atmPnniCapabilitiesCA=atmPnniCapabilitiesCA, mscAtmIfVptPnniAddrTermSPRowStatusTable=mscAtmIfVptPnniAddrTermSPRowStatusTable, mscAtmIfVptPnniRccVcdComponentName=mscAtmIfVptPnniRccVcdComponentName, mscAtmIfVptPnniRccVcdWeight=mscAtmIfVptPnniRccVcdWeight, mscAtmIfVptPnniSigVcdIndex=mscAtmIfVptPnniSigVcdIndex, mscAtmIfVptPnniAddrTermSPRowStatus=mscAtmIfVptPnniAddrTermSPRowStatus, mscAtmIfPnniRccVcdRowStatusTable=mscAtmIfPnniRccVcdRowStatusTable, mscAtmIfVptPnniSigStatsEntry=mscAtmIfVptPnniSigStatsEntry, mscAtmIfPnniPortId=mscAtmIfPnniPortId, mscAtmIfVptPnniRccVcdTdpEntry=mscAtmIfVptPnniRccVcdTdpEntry, mscAtmIfVptPnniRccHelloHoldDown=mscAtmIfVptPnniRccHelloHoldDown, atmPnniCapabilitiesCA02A=atmPnniCapabilitiesCA02A, mscAtmIfPnniRccOperEntry=mscAtmIfPnniRccOperEntry, mscAtmIfVptPnniAddrRowStatusEntry=mscAtmIfVptPnniAddrRowStatusEntry, mscAtmIfVptPnniRccHelloState=mscAtmIfVptPnniRccHelloState, mscAtmIfVptPnniSigVcdQosClass=mscAtmIfVptPnniSigVcdQosClass, mscAtmIfVptPnniServiceExchange=mscAtmIfVptPnniServiceExchange, mscAtmIfPnniRccVcdIndex=mscAtmIfPnniRccVcdIndex, mscAtmIfPnniAddrRowStatus=mscAtmIfPnniAddrRowStatus, mscAtmIfPnniRccHlParmsEntry=mscAtmIfPnniRccHlParmsEntry, mscAtmIfPnniRccHelloInterval=mscAtmIfPnniRccHelloInterval, mscAtmIfPnniRccVcdTdpEntry=mscAtmIfPnniRccVcdTdpEntry, mscAtmIfPnniRccVcdTrafficShaping=mscAtmIfPnniRccVcdTrafficShaping, atmPnniCapabilitiesCA02=atmPnniCapabilitiesCA02, mscAtmIfPnniSigFailedConnections=mscAtmIfPnniSigFailedConnections, mscAtmIfVptPnniAddrPnniInfoReachability=mscAtmIfVptPnniAddrPnniInfoReachability, mscAtmIfPnniRccVcdWeight=mscAtmIfPnniRccVcdWeight, atmPnniGroupCA=atmPnniGroupCA, mscAtmIfPnniSigVcdStorageType=mscAtmIfPnniSigVcdStorageType, mscAtmIfPnniRccHlParmsTable=mscAtmIfPnniRccHlParmsTable, mscAtmIfPnniSigProvEntry=mscAtmIfPnniSigProvEntry, mscAtmIfVptPnniAcctOptTable=mscAtmIfVptPnniAcctOptTable, mscAtmIfPnniAccountConnectionType=mscAtmIfPnniAccountConnectionType, mscAtmIfPnniProvEntry=mscAtmIfPnniProvEntry, mscAtmIfVptPnniAddrPnniInfoStorageType=mscAtmIfVptPnniAddrPnniInfoStorageType, mscAtmIfPnniAcctOptTable=mscAtmIfPnniAcctOptTable, mscAtmIfVptPnniRccVcdTdpTable=mscAtmIfVptPnniRccVcdTdpTable, mscAtmIfVptPnniOperationalEntry=mscAtmIfVptPnniOperationalEntry, mscAtmIfPnniSigVcdAtmServiceCategory=mscAtmIfPnniSigVcdAtmServiceCategory, mscAtmIfVptPnniSigSuccessfulConnections=mscAtmIfVptPnniSigSuccessfulConnections, mscAtmIfVptPnniRccStateEntry=mscAtmIfVptPnniRccStateEntry, mscAtmIfVptPnniSigVcdStorageType=mscAtmIfVptPnniSigVcdStorageType, mscAtmIfVptPnniSigSuccessfulPmpConnections=mscAtmIfVptPnniSigSuccessfulPmpConnections, mscAtmIfVptPnniSigProvTable=mscAtmIfVptPnniSigProvTable, mscAtmIfPnniRccNegotiatedVersion=mscAtmIfPnniRccNegotiatedVersion, mscAtmIfPnniSigVcdComponentName=mscAtmIfPnniSigVcdComponentName, mscAtmIfPnniSigAddressConversion=mscAtmIfPnniSigAddressConversion, mscAtmIfVptPnniAddrPnniInfoComponentName=mscAtmIfVptPnniAddrPnniInfoComponentName, mscAtmIfPnniRccHelloInactivityFactor=mscAtmIfPnniRccHelloInactivityFactor, mscAtmIfVptPnniSigVcdTrafficDescType=mscAtmIfVptPnniSigVcdTrafficDescType, mscAtmIfPnniRccRowStatusEntry=mscAtmIfPnniRccRowStatusEntry, mscAtmIfVptPnniSigVcdUsageParameterControl=mscAtmIfVptPnniSigVcdUsageParameterControl, mscAtmIfVptPnniSigOperEntry=mscAtmIfVptPnniSigOperEntry, mscAtmIfPnniSigVcd=mscAtmIfPnniSigVcd, mscAtmIfPnniRowStatusEntry=mscAtmIfPnniRowStatusEntry, mscAtmIfPnniStorageType=mscAtmIfPnniStorageType, mscAtmIfVptPnniVpci=mscAtmIfVptPnniVpci, mscAtmIfVptPnniSigVcdRowStatusEntry=mscAtmIfVptPnniSigVcdRowStatusEntry, mscAtmIfPnniSigOperEntry=mscAtmIfPnniSigOperEntry, atmPnniGroup=atmPnniGroup, mscAtmIfVptPnniRccRowStatus=mscAtmIfVptPnniRccRowStatus, mscAtmIfPnniRccHelloState=mscAtmIfPnniRccHelloState, mscAtmIfVptPnniSigVcdRowStatus=mscAtmIfVptPnniSigVcdRowStatus, mscAtmIfVptPnniVProvEntry=mscAtmIfVptPnniVProvEntry, mscAtmIfVptPnniRccAdminState=mscAtmIfVptPnniRccAdminState, mscAtmIfPnniSigPeakConnections=mscAtmIfPnniSigPeakConnections, mscAtmIfVptPnniSig=mscAtmIfVptPnniSig, mscAtmIfPnniSigVcdTrafficDescType=mscAtmIfPnniSigVcdTrafficDescType, mscAtmIfPnniAddr=mscAtmIfPnniAddr, mscAtmIfPnniAddrPnniInfo=mscAtmIfPnniAddrPnniInfo, mscAtmIfPnniAddrPnniInfoStorageType=mscAtmIfPnniAddrPnniInfoStorageType, mscAtmIfVptPnniRccStorageType=mscAtmIfVptPnniRccStorageType, mscAtmIfVptPnniRccVcdTdpIndex=mscAtmIfVptPnniRccVcdTdpIndex, mscAtmIfVptPnniSoftPvpAndPvcHoldOffTime=mscAtmIfVptPnniSoftPvpAndPvcHoldOffTime, mscAtmIfVptPnniComponentName=mscAtmIfVptPnniComponentName, mscAtmIfVptPnniRccHelloInactivityFactor=mscAtmIfVptPnniRccHelloInactivityFactor, mscAtmIfVptPnniCbrWeight=mscAtmIfVptPnniCbrWeight, mscAtmIfPnniRccStateTable=mscAtmIfPnniRccStateTable, mscAtmIfPnniAddrTermSPStorageType=mscAtmIfPnniAddrTermSPStorageType, mscAtmIfVptPnniSigCurrentPmpConnections=mscAtmIfVptPnniSigCurrentPmpConnections, mscAtmIfPnniRccVcdRowStatusEntry=mscAtmIfPnniRccVcdRowStatusEntry, mscAtmIfPnniRccOperTable=mscAtmIfPnniRccOperTable, mscAtmIfPnniRccVcdTrafficDescType=mscAtmIfPnniRccVcdTrafficDescType, mscAtmIfVptPnniRccVcdAtmServiceCategory=mscAtmIfVptPnniRccVcdAtmServiceCategory, mscAtmIfVptPnniRccProvTable=mscAtmIfVptPnniRccProvTable, mscAtmIfPnniRccOperationalState=mscAtmIfPnniRccOperationalState, mscAtmIfPnniSigLastTxCauseCode=mscAtmIfPnniSigLastTxCauseCode, mscAtmIfVptPnniProvEntry=mscAtmIfVptPnniProvEntry, mscAtmIfVptPnniAddrTermSPIndex=mscAtmIfVptPnniAddrTermSPIndex, mscAtmIfPnniOperationalTable=mscAtmIfPnniOperationalTable, mscAtmIfVptPnni=mscAtmIfVptPnni, mscAtmIfPnniRcc=mscAtmIfPnniRcc, mscAtmIfVptPnniRccHlParmsEntry=mscAtmIfVptPnniRccHlParmsEntry, mscAtmIfVptPnniAdminWeightsEntry=mscAtmIfVptPnniAdminWeightsEntry, mscAtmIfVptPnniSigRxPdus=mscAtmIfVptPnniSigRxPdus, mscAtmIfVptPnniSigNewCurrentConnections=mscAtmIfVptPnniSigNewCurrentConnections, mscAtmIfVptPnniAccountCollection=mscAtmIfVptPnniAccountCollection, mscAtmIfPnniRccVcd=mscAtmIfPnniRccVcd, mscAtmIfVptPnniRowStatus=mscAtmIfVptPnniRowStatus, mscAtmIfVptPnniSigVcdTrafficShaping=mscAtmIfVptPnniSigVcdTrafficShaping, mscAtmIfPnniAddrPnniInfoRowStatusEntry=mscAtmIfPnniAddrPnniInfoRowStatusEntry, mscAtmIfPnniSigVcdIndex=mscAtmIfPnniSigVcdIndex, mscAtmIfPnniRccMismatchedHelloPacketsRx=mscAtmIfPnniRccMismatchedHelloPacketsRx, mscAtmIfVptPnniRccVcdProvEntry=mscAtmIfVptPnniRccVcdProvEntry, mscAtmIfPnniSigStateEntry=mscAtmIfPnniSigStateEntry, mscAtmIfPnniSigTxPdus=mscAtmIfPnniSigTxPdus, mscAtmIfVptPnniSigVcdRowStatusTable=mscAtmIfVptPnniSigVcdRowStatusTable, mscAtmIfVptPnniSigProvEntry=mscAtmIfVptPnniSigProvEntry, mscAtmIfVptPnniSigLastTxDiagCode=mscAtmIfVptPnniSigLastTxDiagCode, mscAtmIfPnniAddrPnniInfoRowStatus=mscAtmIfPnniAddrPnniInfoRowStatus, mscAtmIfVptPnniOperationalTable=mscAtmIfVptPnniOperationalTable, mscAtmIfVptPnniAccountClass=mscAtmIfVptPnniAccountClass, mscAtmIfPnniSigVcdTdpIndex=mscAtmIfPnniSigVcdTdpIndex, mscAtmIfPnniAddrPnniInfoProvEntry=mscAtmIfPnniAddrPnniInfoProvEntry, mscAtmIfVptPnniRccProvEntry=mscAtmIfVptPnniRccProvEntry, atmPnniMIB=atmPnniMIB, mscAtmIfVptPnniRccHelloPacketsTx=mscAtmIfVptPnniRccHelloPacketsTx, mscAtmIfVptPnniSigCurrentConnections=mscAtmIfVptPnniSigCurrentConnections, mscAtmIfVptPnniRccStateTable=mscAtmIfVptPnniRccStateTable, mscAtmIfVptPnniSigTxPdus=mscAtmIfVptPnniSigTxPdus, mscAtmIfVptPnniSigPeakConnections=mscAtmIfVptPnniSigPeakConnections, mscAtmIfVptPnniRccOperEntry=mscAtmIfVptPnniRccOperEntry, mscAtmIfPnniSigRowStatus=mscAtmIfPnniSigRowStatus, mscAtmIfVptPnniAddrPnniInfoRowStatus=mscAtmIfVptPnniAddrPnniInfoRowStatus, mscAtmIfPnniRccVcdTdpIndex=mscAtmIfPnniRccVcdTdpIndex, mscAtmIfVptPnniAddrPnniInfoRowStatusEntry=mscAtmIfVptPnniAddrPnniInfoRowStatusEntry, mscAtmIfPnniSigAdminState=mscAtmIfPnniSigAdminState, mscAtmIfPnniSigVcdTdpEntry=mscAtmIfPnniSigVcdTdpEntry, mscAtmIfPnniSigStorageType=mscAtmIfPnniSigStorageType, mscAtmIfPnniRccVcdUsageParameterControl=mscAtmIfPnniRccVcdUsageParameterControl, mscAtmIfPnniRccVcdProvTable=mscAtmIfPnniRccVcdProvTable, mscAtmIfPnniRccProvEntry=mscAtmIfPnniRccProvEntry, mscAtmIfVptPnniSigAddressConversion=mscAtmIfVptPnniSigAddressConversion, mscAtmIfPnniOperationalEntry=mscAtmIfPnniOperationalEntry, mscAtmIfVptPnniSigVcd=mscAtmIfVptPnniSigVcd, mscAtmIfVptPnniRccVcdRowStatusEntry=mscAtmIfVptPnniRccVcdRowStatusEntry, mscAtmIfPnniAddrTermSPComponentName=mscAtmIfPnniAddrTermSPComponentName, mscAtmIfPnniRccProvTable=mscAtmIfPnniRccProvTable, mscAtmIfVptPnniUbrWeight=mscAtmIfVptPnniUbrWeight, mscAtmIfPnniSigStatsTable=mscAtmIfPnniSigStatsTable, mscAtmIfVptPnniAddrTermSPComponentName=mscAtmIfVptPnniAddrTermSPComponentName, mscAtmIfPnniRccRowStatusTable=mscAtmIfPnniRccRowStatusTable, mscAtmIfPnniRccIndex=mscAtmIfPnniRccIndex, mscAtmIfVptPnniSigVcdTdpIndex=mscAtmIfVptPnniSigVcdTdpIndex, mscAtmIfVptPnniRccMismatchedHelloPacketsRx=mscAtmIfVptPnniRccMismatchedHelloPacketsRx, mscAtmIfPnniRccComponentName=mscAtmIfPnniRccComponentName, mscAtmIfPnniSigNewCurrentConnections=mscAtmIfPnniSigNewCurrentConnections, mscAtmIfPnniRccVcdTdpTable=mscAtmIfPnniRccVcdTdpTable, mscAtmIfPnniSigRxPdus=mscAtmIfPnniSigRxPdus, mscAtmIfPnniSigCurrentConnections=mscAtmIfPnniSigCurrentConnections, mscAtmIfPnniRccBadHelloPacketsRx=mscAtmIfPnniRccBadHelloPacketsRx, mscAtmIfVptPnniRccVcdUsageParameterControl=mscAtmIfVptPnniRccVcdUsageParameterControl, atmPnniGroupCA02A=atmPnniGroupCA02A, mscAtmIfPnniSoftPvcRetryPeriod=mscAtmIfPnniSoftPvcRetryPeriod, mscAtmIfPnniSigCurrentPmpConnections=mscAtmIfPnniSigCurrentPmpConnections, mscAtmIfPnniComponentName=mscAtmIfPnniComponentName, mscAtmIfPnniAccountClass=mscAtmIfPnniAccountClass, mscAtmIfVptPnniRowStatusEntry=mscAtmIfVptPnniRowStatusEntry, mscAtmIfVptPnniSigStorageType=mscAtmIfVptPnniSigStorageType, mscAtmIfVptPnniSigFailedConnections=mscAtmIfVptPnniSigFailedConnections, mscAtmIfVptPnniRccVcdTrafficDescType=mscAtmIfVptPnniRccVcdTrafficDescType, mscAtmIfPnniSigIndex=mscAtmIfPnniSigIndex, mscAtmIfPnniRccStatsEntry=mscAtmIfPnniRccStatsEntry, mscAtmIfVptPnniSigRowStatusTable=mscAtmIfVptPnniSigRowStatusTable, mscAtmIfVptPnniSigPeakPmpConnections=mscAtmIfVptPnniSigPeakPmpConnections, mscAtmIfVptPnniSigOperTable=mscAtmIfVptPnniSigOperTable, mscAtmIfPnniSigVcdRowStatusTable=mscAtmIfPnniSigVcdRowStatusTable, mscAtmIfVptPnniAddrStorageType=mscAtmIfVptPnniAddrStorageType, mscAtmIfVptPnniAccountConnectionType=mscAtmIfVptPnniAccountConnectionType, mscAtmIfVptPnniSigRowStatusEntry=mscAtmIfVptPnniSigRowStatusEntry, mscAtmIfVptPnniSigVcdTdpValue=mscAtmIfVptPnniSigVcdTdpValue, mscAtmIfVptPnniRccVcdProvTable=mscAtmIfVptPnniRccVcdProvTable, mscAtmIfVptPnniAddrPnniInfoScope=mscAtmIfVptPnniAddrPnniInfoScope, mscAtmIfPnniRccVcdUnshapedTransmitQueueing=mscAtmIfPnniRccVcdUnshapedTransmitQueueing, mscAtmIfPnniSig=mscAtmIfPnniSig, mscAtmIfPnniAddrTermSPIndex=mscAtmIfPnniAddrTermSPIndex, mscAtmIfVptPnniRcc=mscAtmIfVptPnniRcc, mscAtmIfVptPnniSigVcdWeight=mscAtmIfVptPnniSigVcdWeight, mscAtmIfVptPnniSigVcdTdpTable=mscAtmIfVptPnniSigVcdTdpTable, mscAtmIfVptPnniRtVbrWeight=mscAtmIfVptPnniRtVbrWeight, mscAtmIfPnniSoftPvpAndPvcRetryPeriod=mscAtmIfPnniSoftPvpAndPvcRetryPeriod, mscAtmIfPnniUbrWeight=mscAtmIfPnniUbrWeight, mscAtmIfPnniRccVcdRowStatus=mscAtmIfPnniRccVcdRowStatus, mscAtmIfVptPnniSigLastRxDiagCode=mscAtmIfVptPnniSigLastRxDiagCode, mscAtmIfVptPnniSigStatsTable=mscAtmIfVptPnniSigStatsTable, mscAtmIfVptPnniSigStateEntry=mscAtmIfVptPnniSigStateEntry, mscAtmIfPnniRccVcdAtmServiceCategory=mscAtmIfPnniRccVcdAtmServiceCategory, mscAtmIfVptPnniSigVci=mscAtmIfVptPnniSigVci, mscAtmIfPnniAddrPnniInfoScope=mscAtmIfPnniAddrPnniInfoScope, mscAtmIfVptPnniAddrRowStatusTable=mscAtmIfVptPnniAddrRowStatusTable, mscAtmIfPnniSigStateTable=mscAtmIfPnniSigStateTable, mscAtmIfVptPnniSigRowStatus=mscAtmIfVptPnniSigRowStatus, mscAtmIfVptPnniSigVcdUnshapedTransmitQueueing=mscAtmIfVptPnniSigVcdUnshapedTransmitQueueing, mscAtmIfPnniSigVcdRowStatusEntry=mscAtmIfPnniSigVcdRowStatusEntry, mscAtmIfPnniRccVcdProvEntry=mscAtmIfPnniRccVcdProvEntry, mscAtmIfPnniAddrRowStatusTable=mscAtmIfPnniAddrRowStatusTable, mscAtmIfPnniAddrTermSP=mscAtmIfPnniAddrTermSP, mscAtmIfPnniSigRowStatusTable=mscAtmIfPnniSigRowStatusTable, mscAtmIfPnniRccRemotePortId=mscAtmIfPnniRccRemotePortId, mscAtmIfVptPnniStorageType=mscAtmIfVptPnniStorageType, mscAtmIfPnniRowStatus=mscAtmIfPnniRowStatus, mscAtmIfPnniCbrWeight=mscAtmIfPnniCbrWeight, mscAtmIfPnniAddrPnniInfoComponentName=mscAtmIfPnniAddrPnniInfoComponentName, mscAtmIfVptPnniRccStatsTable=mscAtmIfVptPnniRccStatsTable, mscAtmIfVptPnniRccVcdIndex=mscAtmIfVptPnniRccVcdIndex, mscAtmIfPnniSigVcdUsageParameterControl=mscAtmIfPnniSigVcdUsageParameterControl, mscAtmIfVptPnniRccVcdRowStatus=mscAtmIfVptPnniRccVcdRowStatus, mscAtmIfVptPnniAddrTermSPStorageType=mscAtmIfVptPnniAddrTermSPStorageType, mscAtmIfPnniAddrScope=mscAtmIfPnniAddrScope, mscAtmIfVptPnniSigVcdAtmServiceCategory=mscAtmIfVptPnniSigVcdAtmServiceCategory, mscAtmIfPnniSigVcdUnshapedTransmitQueueing=mscAtmIfPnniSigVcdUnshapedTransmitQueueing, mscAtmIfVptPnniRccVcdUnshapedTransmitQueueing=mscAtmIfVptPnniRccVcdUnshapedTransmitQueueing, mscAtmIfPnniAddrComponentName=mscAtmIfPnniAddrComponentName, mscAtmIfPnniNrtVbrWeight=mscAtmIfPnniNrtVbrWeight, mscAtmIfVptPnniRccIndex=mscAtmIfVptPnniRccIndex)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-AtmPnniMIB", mscAtmIfPnniProvTable=mscAtmIfPnniProvTable, mscAtmIfPnniSigFailedPmpConnections=mscAtmIfPnniSigFailedPmpConnections, mscAtmIfPnniSigVcdQosClass=mscAtmIfPnniSigVcdQosClass, mscAtmIfPnniSigVcdWeight=mscAtmIfPnniSigVcdWeight, mscAtmIfVptPnniSigComponentName=mscAtmIfVptPnniSigComponentName, mscAtmIfVptPnniAddrScope=mscAtmIfVptPnniAddrScope, mscAtmIfPnniAddrRowStatusEntry=mscAtmIfPnniAddrRowStatusEntry, mscAtmIfVptPnniIndex=mscAtmIfVptPnniIndex, mscAtmIfVptPnniRccVcd=mscAtmIfVptPnniRccVcd, mscAtmIfPnniRccVci=mscAtmIfPnniRccVci, mscAtmIfPnniSigProvTable=mscAtmIfPnniSigProvTable, mscAtmIfVptPnniSigFailedPmpConnections=mscAtmIfVptPnniSigFailedPmpConnections, mscAtmIfVptPnniAddrRowStatus=mscAtmIfVptPnniAddrRowStatus, mscAtmIfPnniRccVcdComponentName=mscAtmIfPnniRccVcdComponentName, mscAtmIfVptPnniRccOperTable=mscAtmIfVptPnniRccOperTable, mscAtmIfPnniSigVcdProvEntry=mscAtmIfPnniSigVcdProvEntry, mscAtmIfPnniRccRemoteNodeId=mscAtmIfPnniRccRemoteNodeId, mscAtmIfVptPnniRccVci=mscAtmIfVptPnniRccVci, mscAtmIfPnniSigPeakPmpConnections=mscAtmIfPnniSigPeakPmpConnections, mscAtmIfPnniSigVci=mscAtmIfPnniSigVci, mscAtmIfVptPnniSigStateTable=mscAtmIfVptPnniSigStateTable, mscAtmIfVptPnniAddrAddressIndex=mscAtmIfVptPnniAddrAddressIndex, mscAtmIfVptPnniRccRemoteNodeId=mscAtmIfVptPnniRccRemoteNodeId, mscAtmIfVptPnniRccRowStatusTable=mscAtmIfVptPnniRccRowStatusTable, mscAtmIfPnniSigVcdProvTable=mscAtmIfPnniSigVcdProvTable, mscAtmIfVptPnniNrtVbrWeight=mscAtmIfVptPnniNrtVbrWeight, mscAtmIfVptPnniRccBadHelloPacketsRx=mscAtmIfVptPnniRccBadHelloPacketsRx, mscAtmIfVptPnniRccHelloInterval=mscAtmIfVptPnniRccHelloInterval, mscAtmIfPnniSigLastRxCauseCode=mscAtmIfPnniSigLastRxCauseCode, mscAtmIfPnniServiceExchange=mscAtmIfPnniServiceExchange, mscAtmIfPnniAddrTermSPRowStatusEntry=mscAtmIfPnniAddrTermSPRowStatusEntry, mscAtmIfPnniSigLastTxDiagCode=mscAtmIfPnniSigLastTxDiagCode, mscAtmIfVptPnniSigVcdTdpEntry=mscAtmIfVptPnniSigVcdTdpEntry, mscAtmIfVptPnniRccComponentName=mscAtmIfVptPnniRccComponentName, mscAtmIfPnniRccStatsTable=mscAtmIfPnniRccStatsTable, mscAtmIfVptPnniSigUsageState=mscAtmIfVptPnniSigUsageState, mscAtmIfPnniAddrOperTable=mscAtmIfPnniAddrOperTable, mscAtmIfVptPnniAddrOperTable=mscAtmIfVptPnniAddrOperTable, mscAtmIfVptPnniAddrPnniInfo=mscAtmIfVptPnniAddrPnniInfo, mscAtmIfPnniAddrOperEntry=mscAtmIfPnniAddrOperEntry, mscAtmIfVptPnniRccUsageState=mscAtmIfVptPnniRccUsageState, mscAtmIfPnniSigOperatingMode=mscAtmIfPnniSigOperatingMode, mscAtmIfVptPnniSigVcdComponentName=mscAtmIfVptPnniSigVcdComponentName, mscAtmIfVptPnniPortId=mscAtmIfVptPnniPortId, mscAtmIfVptPnniRowStatusTable=mscAtmIfVptPnniRowStatusTable, mscAtmIfPnniRccStateEntry=mscAtmIfPnniRccStateEntry, mscAtmIfPnniRccVcdStorageType=mscAtmIfPnniRccVcdStorageType, mscAtmIfPnniRccUsageState=mscAtmIfPnniRccUsageState, mscAtmIfVptPnniAddrAddressTypeIndex=mscAtmIfVptPnniAddrAddressTypeIndex, mscAtmIfPnniRccVcdTdpValue=mscAtmIfPnniRccVcdTdpValue, mscAtmIfPnniSigUsageState=mscAtmIfPnniSigUsageState, mscAtmIfVptPnniSigVcdProvTable=mscAtmIfVptPnniSigVcdProvTable, atmPnniCapabilities=atmPnniCapabilities, mscAtmIfPnniAddrPnniInfoIndex=mscAtmIfPnniAddrPnniInfoIndex, mscAtmIfVptPnniSigLastTxCauseCode=mscAtmIfVptPnniSigLastTxCauseCode, mscAtmIfPnniRccHelloHoldDown=mscAtmIfPnniRccHelloHoldDown, mscAtmIfPnniSigRowStatusEntry=mscAtmIfPnniSigRowStatusEntry, mscAtmIfPnniAcctOptEntry=mscAtmIfPnniAcctOptEntry, mscAtmIfVptPnniAcctOptEntry=mscAtmIfVptPnniAcctOptEntry, mscAtmIfPnniSigSuccessfulPmpConnections=mscAtmIfPnniSigSuccessfulPmpConnections, mscAtmIfPnniSigVcdTdpValue=mscAtmIfPnniSigVcdTdpValue, mscAtmIfPnniRccHelloPacketsRx=mscAtmIfPnniRccHelloPacketsRx, mscAtmIfPnniSoftPvpAndPvcHoldOffTime=mscAtmIfPnniSoftPvpAndPvcHoldOffTime, mscAtmIfPnniSigLastRxDiagCode=mscAtmIfPnniSigLastRxDiagCode, mscAtmIfVptPnniAddrOperEntry=mscAtmIfVptPnniAddrOperEntry, mscAtmIfVptPnniRccOperationalState=mscAtmIfVptPnniRccOperationalState, mscAtmIfPnniRccVcdQosClass=mscAtmIfPnniRccVcdQosClass, mscAtmIfPnniSigVcdTdpTable=mscAtmIfPnniSigVcdTdpTable, mscAtmIfPnniSigSuccessfulConnections=mscAtmIfPnniSigSuccessfulConnections, mscAtmIfPnniAddrAddressIndex=mscAtmIfPnniAddrAddressIndex, mscAtmIfVptPnniVProvTable=mscAtmIfVptPnniVProvTable, mscAtmIfVptPnniSigOperatingMode=mscAtmIfVptPnniSigOperatingMode, mscAtmIfPnniIndex=mscAtmIfPnniIndex, mscAtmIfVptPnniRccVcdStorageType=mscAtmIfVptPnniRccVcdStorageType, mscAtmIfVptPnniAddr=mscAtmIfVptPnniAddr, mscAtmIfVptPnniAddrTermSPRowStatusEntry=mscAtmIfVptPnniAddrTermSPRowStatusEntry, mscAtmIfVptPnniAddrPnniInfoProvTable=mscAtmIfVptPnniAddrPnniInfoProvTable, mscAtmIfPnniAdminWeightsTable=mscAtmIfPnniAdminWeightsTable, mscAtmIfPnniSigVcdRowStatus=mscAtmIfPnniSigVcdRowStatus, mscAtmIfVptPnniSigAdminState=mscAtmIfVptPnniSigAdminState, mscAtmIfVptPnniSoftPvpAndPvcRetryPeriod=mscAtmIfVptPnniSoftPvpAndPvcRetryPeriod, mscAtmIfVptPnniSigIndex=mscAtmIfVptPnniSigIndex, mscAtmIfPnniAddrTermSPRowStatusTable=mscAtmIfPnniAddrTermSPRowStatusTable, mscAtmIfVptPnniRccHelloPacketsRx=mscAtmIfVptPnniRccHelloPacketsRx, mscAtmIfPnniSigStatsEntry=mscAtmIfPnniSigStatsEntry, mscAtmIfVptPnniRccRemotePortId=mscAtmIfVptPnniRccRemotePortId, mscAtmIfPnniAddrReachability=mscAtmIfPnniAddrReachability, atmPnniGroupCA02=atmPnniGroupCA02, mscAtmIfVptPnniRccRowStatusEntry=mscAtmIfVptPnniRccRowStatusEntry, mscAtmIfVptPnniAddrReachability=mscAtmIfVptPnniAddrReachability)
