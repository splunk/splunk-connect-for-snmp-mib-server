#
# PySNMP MIB module TPLINK-SSL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-SSL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:18:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, Gauge32, ObjectIdentity, TimeTicks, NotificationType, Bits, Integer32, Counter32, ModuleIdentity, IpAddress, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "Gauge32", "ObjectIdentity", "TimeTicks", "NotificationType", "Bits", "Integer32", "Counter32", "ModuleIdentity", "IpAddress", "iso", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
tplinkSslMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 42))
tplinkSslMIB.setRevisions(('2012-12-13 09:30',))
if mibBuilder.loadTexts: tplinkSslMIB.setLastUpdated('201212130930Z')
if mibBuilder.loadTexts: tplinkSslMIB.setOrganization('TPLINK')
tplinkSslMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 42, 1))
tplinkSslNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 42, 2))
tpHttpsEnable = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 42, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpHttpsEnable.setStatus('current')
tpSslv3Enable = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 42, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSslv3Enable.setStatus('current')
tpTlsv1Enable = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 42, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpTlsv1Enable.setStatus('current')
tpRc4Md5 = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 42, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpRc4Md5.setStatus('current')
tpRc4Sha = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 42, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpRc4Sha.setStatus('current')
tpDesCbcSha = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 42, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpDesCbcSha.setStatus('current')
tp3DesEdeCbcSha = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 42, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tp3DesEdeCbcSha.setStatus('current')
tpHttpsSessionTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 42, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpHttpsSessionTimeOut.setStatus('current')
tpHttpsUserLimitEnable = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 42, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpHttpsUserLimitEnable.setStatus('current')
tpHttpsUserLimitMaxAdminNum = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 42, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpHttpsUserLimitMaxAdminNum.setStatus('current')
tpHttpsUserLimitMaxGuestNum = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 42, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpHttpsUserLimitMaxGuestNum.setStatus('current')
mibBuilder.exportSymbols("TPLINK-SSL-MIB", tplinkSslNotifications=tplinkSslNotifications, PYSNMP_MODULE_ID=tplinkSslMIB, tp3DesEdeCbcSha=tp3DesEdeCbcSha, tpRc4Md5=tpRc4Md5, tpRc4Sha=tpRc4Sha, tpHttpsEnable=tpHttpsEnable, tpDesCbcSha=tpDesCbcSha, tpHttpsUserLimitMaxAdminNum=tpHttpsUserLimitMaxAdminNum, tplinkSslMIBObjects=tplinkSslMIBObjects, tplinkSslMIB=tplinkSslMIB, tpSslv3Enable=tpSslv3Enable, tpTlsv1Enable=tpTlsv1Enable, tpHttpsUserLimitMaxGuestNum=tpHttpsUserLimitMaxGuestNum, tpHttpsSessionTimeOut=tpHttpsSessionTimeOut, tpHttpsUserLimitEnable=tpHttpsUserLimitEnable)
