#
# PySNMP MIB module NETSCREEN-CHASSIS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-CHASSIS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
netscreen, = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreen")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, MibIdentifier, Counter32, ObjectIdentity, ModuleIdentity, Integer32, Unsigned32, Bits, Gauge32, IpAddress, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "MibIdentifier", "Counter32", "ObjectIdentity", "ModuleIdentity", "Integer32", "Unsigned32", "Bits", "Gauge32", "IpAddress", "TimeTicks", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
netscreenChassis = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 21))
if mibBuilder.loadTexts: netscreenChassis.setLastUpdated('200705080000Z')
if mibBuilder.loadTexts: netscreenChassis.setOrganization('Juniper Networks, Inc.')
nsPowerTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 21, 1), )
if mibBuilder.loadTexts: nsPowerTable.setStatus('current')
nsPowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 21, 1, 1), ).setIndexNames((0, "NETSCREEN-CHASSIS-MIB", "nsPowerId"))
if mibBuilder.loadTexts: nsPowerEntry.setStatus('current')
nsPowerId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 21, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPowerId.setStatus('current')
nsPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 21, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPowerStatus.setStatus('current')
nsPowerDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 21, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPowerDesc.setStatus('current')
nsFanTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 21, 2), )
if mibBuilder.loadTexts: nsFanTable.setStatus('current')
nsFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 21, 2, 1), ).setIndexNames((0, "NETSCREEN-CHASSIS-MIB", "nsFanId"))
if mibBuilder.loadTexts: nsFanEntry.setStatus('current')
nsFanId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 21, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsFanId.setStatus('current')
nsFanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 21, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsFanStatus.setStatus('current')
nsFanDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 21, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsFanDesc.setStatus('current')
sysBatteryStatus = MibScalar((1, 3, 6, 1, 4, 1, 3224, 21, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBatteryStatus.setStatus('current')
nsTemperatureTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 21, 4), )
if mibBuilder.loadTexts: nsTemperatureTable.setStatus('current')
nsTemperatureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 21, 4, 1), ).setIndexNames((0, "NETSCREEN-CHASSIS-MIB", "nsTemperatureId"))
if mibBuilder.loadTexts: nsTemperatureEntry.setStatus('current')
nsTemperatureId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 21, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsTemperatureId.setStatus('current')
nsTemperatureSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 21, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsTemperatureSlotId.setStatus('current')
nsTemperatureCur = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 21, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsTemperatureCur.setStatus('current')
nsTemperatureDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 21, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsTemperatureDesc.setStatus('current')
nsSlotTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 21, 5), )
if mibBuilder.loadTexts: nsSlotTable.setStatus('current')
nsSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 21, 5, 1), ).setIndexNames((0, "NETSCREEN-CHASSIS-MIB", "nsSlotId"), (0, "NETSCREEN-CHASSIS-MIB", "nsSubSlotId"))
if mibBuilder.loadTexts: nsSlotEntry.setStatus('current')
nsSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 21, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSlotId.setStatus('current')
nsSlotType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 21, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSlotType.setStatus('current')
nsSlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 21, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSlotStatus.setStatus('current')
nsSlotSN = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 21, 5, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSlotSN.setStatus('current')
mibBuilder.exportSymbols("NETSCREEN-CHASSIS-MIB", nsTemperatureDesc=nsTemperatureDesc, nsPowerEntry=nsPowerEntry, nsTemperatureId=nsTemperatureId, nsPowerDesc=nsPowerDesc, nsTemperatureTable=nsTemperatureTable, nsSlotStatus=nsSlotStatus, nsTemperatureEntry=nsTemperatureEntry, nsFanEntry=nsFanEntry, nsSlotType=nsSlotType, nsFanId=nsFanId, netscreenChassis=netscreenChassis, nsPowerId=nsPowerId, nsSlotEntry=nsSlotEntry, nsSlotSN=nsSlotSN, nsTemperatureCur=nsTemperatureCur, PYSNMP_MODULE_ID=netscreenChassis, nsPowerStatus=nsPowerStatus, nsSlotTable=nsSlotTable, nsSlotId=nsSlotId, nsFanTable=nsFanTable, nsFanDesc=nsFanDesc, sysBatteryStatus=sysBatteryStatus, nsPowerTable=nsPowerTable, nsTemperatureSlotId=nsTemperatureSlotId, nsFanStatus=nsFanStatus)
