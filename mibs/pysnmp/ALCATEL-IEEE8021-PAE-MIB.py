#
# PySNMP MIB module ALCATEL-IEEE8021-PAE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IEEE8021-PAE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:01:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
dot1xAuthConfigEntry, = mibBuilder.importSymbols("IEEE8021-PAE-MIB", "dot1xAuthConfigEntry")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
IpAddress, ObjectIdentity, Gauge32, iso, ModuleIdentity, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Bits, Integer32, Unsigned32, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "ObjectIdentity", "Gauge32", "iso", "ModuleIdentity", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Bits", "Integer32", "Unsigned32", "TimeTicks", "Counter64")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
alcatelObjects, alcatelNotifyPrefix, alcatelCommonMIBModules, alcatelConformance = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "alcatelObjects", "alcatelNotifyPrefix", "alcatelCommonMIBModules", "alcatelConformance")
TPolicyStatementNameOrEmpty, ServiceAdminStatus, TNamedItem = mibBuilder.importSymbols("TIMETRA-TC-MIB", "TPolicyStatementNameOrEmpty", "ServiceAdminStatus", "TNamedItem")
alcatelIEEE8021PaeMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 1, 5, 3))
alcatelIEEE8021PaeMIBModule.setRevisions(('1907-01-01 00:00', '1905-08-31 00:00', '1905-03-29 00:00', '1904-08-03 00:00',))
if mibBuilder.loadTexts: alcatelIEEE8021PaeMIBModule.setLastUpdated('0701010000Z')
if mibBuilder.loadTexts: alcatelIEEE8021PaeMIBModule.setOrganization('Alcatel-Lucent')
alxDot1xObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3))
alxDot1xAuthenticatorObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 1))
alxDot1xRadiusObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2))
alxDot1xConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 3, 1, 3))
alxDot1xAuthenticatorConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 3, 1, 3, 1))
alxDot1xAuthenticatorCompliancs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 3, 1, 3, 1, 1))
alxDot1xAuthenticatorGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 3, 1, 3, 1, 2))
alxDot1xRadiusConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 3, 1, 3, 2))
alxDot1xRadiusCompliancs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 3, 1, 3, 2, 1))
alxDot1xRadiusGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 3, 1, 3, 2, 2))
alxDot1xNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 3, 3, 3))
alxDot1xNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 3, 3, 3, 0))
class AlxDot1xRadiusServerType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("authorization", 0), ("accounting", 1), ("combined", 2))

alxdot1xAuthConfigTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 1, 1), )
if mibBuilder.loadTexts: alxdot1xAuthConfigTable.setStatus('current')
alxDot1xAuthConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 1, 1, 1), )
dot1xAuthConfigEntry.registerAugmentions(("ALCATEL-IEEE8021-PAE-MIB", "alxDot1xAuthConfigEntry"))
alxDot1xAuthConfigEntry.setIndexNames(*dot1xAuthConfigEntry.getIndexNames())
if mibBuilder.loadTexts: alxDot1xAuthConfigEntry.setStatus('current')
alxDot1xAuthRadiusPlcy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 1, 1, 1, 50), TPolicyStatementNameOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alxDot1xAuthRadiusPlcy.setStatus('current')
alxDot1xRadiusServerPlcyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 1), )
if mibBuilder.loadTexts: alxDot1xRadiusServerPlcyTable.setStatus('current')
alxDot1xRadiusServerPlcyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 1, 1), ).setIndexNames((0, "ALCATEL-IEEE8021-PAE-MIB", "alxDot1xRadiusPlcyName"))
if mibBuilder.loadTexts: alxDot1xRadiusServerPlcyEntry.setStatus('current')
alxDot1xRadiusPlcyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 1, 1, 1), TNamedItem())
if mibBuilder.loadTexts: alxDot1xRadiusPlcyName.setStatus('current')
alxDot1xRadiusPlcySrceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 1, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alxDot1xRadiusPlcySrceAddr.setStatus('current')
alxDot1xRadiusPlcyAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 1, 1, 3), ServiceAdminStatus().clone('down')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alxDot1xRadiusPlcyAdminState.setStatus('current')
alxDot1xRadiusPlcyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alxDot1xRadiusPlcyRowStatus.setStatus('current')
alxDot1xRadiusPlcyRetryAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alxDot1xRadiusPlcyRetryAttempts.setStatus('current')
alxDot1xRadiusPlcyTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 90)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alxDot1xRadiusPlcyTimeout.setStatus('current')
alxDot1xRadiusServerTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 2), )
if mibBuilder.loadTexts: alxDot1xRadiusServerTable.setStatus('current')
alxDot1xRadiusServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 2, 1), ).setIndexNames((0, "ALCATEL-IEEE8021-PAE-MIB", "alxDot1xRadiusServerPlcyName"), (0, "ALCATEL-IEEE8021-PAE-MIB", "alxDot1xRadiusServerIndex"))
if mibBuilder.loadTexts: alxDot1xRadiusServerEntry.setStatus('current')
alxDot1xRadiusServerPlcyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: alxDot1xRadiusServerPlcyName.setStatus('current')
alxDot1xRadiusServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: alxDot1xRadiusServerIndex.setStatus('current')
alxDot1xRadiusServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 2, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alxDot1xRadiusServerAddress.setStatus('current')
alxDot1xRadiusServerSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alxDot1xRadiusServerSecret.setStatus('current')
alxDot1xRadiusServerAuthPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1812)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alxDot1xRadiusServerAuthPort.setStatus('current')
alxDot1xRadiusServerOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alxDot1xRadiusServerOperStatus.setStatus('current')
alxDot1xRadiusServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alxDot1xRadiusServerRowStatus.setStatus('current')
alxDot1xRadiusServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 2, 1, 8), AlxDot1xRadiusServerType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alxDot1xRadiusServerType.setStatus('current')
alxDot1xRadiusServerAcctPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2, 3, 2, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1813)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alxDot1xRadiusServerAcctPort.setStatus('current')
alxDot1xAuthConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 3, 1, 3, 1, 2, 1)).setObjects(("ALCATEL-IEEE8021-PAE-MIB", "alxDot1xAuthRadiusPlcy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alxDot1xAuthConfigGroup = alxDot1xAuthConfigGroup.setStatus('current')
alxDot1xRadiusPlcyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 3, 1, 3, 2, 2, 1)).setObjects(("ALCATEL-IEEE8021-PAE-MIB", "alxDot1xRadiusPlcySrceAddr"), ("ALCATEL-IEEE8021-PAE-MIB", "alxDot1xRadiusPlcyAdminState"), ("ALCATEL-IEEE8021-PAE-MIB", "alxDot1xRadiusPlcyRowStatus"), ("ALCATEL-IEEE8021-PAE-MIB", "alxDot1xRadiusPlcyRetryAttempts"), ("ALCATEL-IEEE8021-PAE-MIB", "alxDot1xRadiusPlcyTimeout"), ("ALCATEL-IEEE8021-PAE-MIB", "alxDot1xRadiusServerAddress"), ("ALCATEL-IEEE8021-PAE-MIB", "alxDot1xRadiusServerSecret"), ("ALCATEL-IEEE8021-PAE-MIB", "alxDot1xRadiusServerAuthPort"), ("ALCATEL-IEEE8021-PAE-MIB", "alxDot1xRadiusServerAcctPort"), ("ALCATEL-IEEE8021-PAE-MIB", "alxDot1xRadiusServerOperStatus"), ("ALCATEL-IEEE8021-PAE-MIB", "alxDot1xRadiusServerRowStatus"), ("ALCATEL-IEEE8021-PAE-MIB", "alxDot1xRadiusServerType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alxDot1xRadiusPlcyGroup = alxDot1xRadiusPlcyGroup.setStatus('current')
alxDot1xAuthenticatorCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 3, 1, 3, 1, 1, 1)).setObjects(("ALCATEL-IEEE8021-PAE-MIB", "alxDot1xAuthConfigGroup"), ("ALCATEL-IEEE8021-PAE-MIB", "alxDot1xRadiusPlcyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alxDot1xAuthenticatorCompliance = alxDot1xAuthenticatorCompliance.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IEEE8021-PAE-MIB", alxDot1xRadiusPlcyGroup=alxDot1xRadiusPlcyGroup, alxDot1xAuthenticatorCompliance=alxDot1xAuthenticatorCompliance, alxDot1xRadiusObjs=alxDot1xRadiusObjs, alxDot1xRadiusServerRowStatus=alxDot1xRadiusServerRowStatus, alxDot1xAuthenticatorCompliancs=alxDot1xAuthenticatorCompliancs, alxDot1xRadiusServerEntry=alxDot1xRadiusServerEntry, alxDot1xAuthConfigGroup=alxDot1xAuthConfigGroup, alxDot1xRadiusServerPlcyTable=alxDot1xRadiusServerPlcyTable, alxDot1xRadiusPlcyName=alxDot1xRadiusPlcyName, alxDot1xRadiusPlcyAdminState=alxDot1xRadiusPlcyAdminState, alxDot1xAuthenticatorConformance=alxDot1xAuthenticatorConformance, alxdot1xAuthConfigTable=alxdot1xAuthConfigTable, alxDot1xAuthRadiusPlcy=alxDot1xAuthRadiusPlcy, alxDot1xRadiusConformance=alxDot1xRadiusConformance, alxDot1xRadiusCompliancs=alxDot1xRadiusCompliancs, alxDot1xRadiusServerPlcyName=alxDot1xRadiusServerPlcyName, alxDot1xRadiusServerAcctPort=alxDot1xRadiusServerAcctPort, alxDot1xRadiusServerAuthPort=alxDot1xRadiusServerAuthPort, AlxDot1xRadiusServerType=AlxDot1xRadiusServerType, alxDot1xNotificationsPrefix=alxDot1xNotificationsPrefix, alxDot1xRadiusServerIndex=alxDot1xRadiusServerIndex, alxDot1xRadiusServerOperStatus=alxDot1xRadiusServerOperStatus, alcatelIEEE8021PaeMIBModule=alcatelIEEE8021PaeMIBModule, alxDot1xRadiusServerPlcyEntry=alxDot1xRadiusServerPlcyEntry, alxDot1xRadiusPlcySrceAddr=alxDot1xRadiusPlcySrceAddr, alxDot1xRadiusServerType=alxDot1xRadiusServerType, alxDot1xRadiusServerAddress=alxDot1xRadiusServerAddress, alxDot1xRadiusPlcyRowStatus=alxDot1xRadiusPlcyRowStatus, alxDot1xRadiusServerTable=alxDot1xRadiusServerTable, alxDot1xAuthenticatorGroups=alxDot1xAuthenticatorGroups, alxDot1xObjs=alxDot1xObjs, alxDot1xAuthenticatorObjs=alxDot1xAuthenticatorObjs, PYSNMP_MODULE_ID=alcatelIEEE8021PaeMIBModule, alxDot1xRadiusGroups=alxDot1xRadiusGroups, alxDot1xRadiusPlcyRetryAttempts=alxDot1xRadiusPlcyRetryAttempts, alxDot1xConformance=alxDot1xConformance, alxDot1xNotifications=alxDot1xNotifications, alxDot1xRadiusServerSecret=alxDot1xRadiusServerSecret, alxDot1xAuthConfigEntry=alxDot1xAuthConfigEntry, alxDot1xRadiusPlcyTimeout=alxDot1xRadiusPlcyTimeout)
