#
# PySNMP MIB module APTIS-HDLC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APTIS-HDLC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:08:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
aptis_generic, = mibBuilder.importSymbols("APTIS-MIB", "aptis-generic")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ObjectIdentity, TimeTicks, MibIdentifier, Unsigned32, iso, Gauge32, NotificationType, ModuleIdentity, Integer32, Counter32, Counter64, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ObjectIdentity", "TimeTicks", "MibIdentifier", "Unsigned32", "iso", "Gauge32", "NotificationType", "ModuleIdentity", "Integer32", "Counter32", "Counter64", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
aptisHdlc = MibIdentifier((1, 3, 6, 1, 4, 1, 2637, 2, 7))
class Index(Integer32):
    pass

aptisHdlcTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 7, 1), )
if mibBuilder.loadTexts: aptisHdlcTable.setStatus('mandatory')
aptisHdlcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 7, 1, 1), ).setIndexNames((0, "APTIS-HDLC-MIB", "aptisHdlcIfIndex"))
if mibBuilder.loadTexts: aptisHdlcEntry.setStatus('mandatory')
aptisHdlcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 1, 1, 1), Index()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcIfIndex.setStatus('mandatory')
aptisHdlcReceiveDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcReceiveDrops.setStatus('mandatory')
aptisHdlcTransmitDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcTransmitDrops.setStatus('mandatory')
aptisHdlcSysErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcSysErrors.setStatus('mandatory')
aptisHdlcParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcParityErrors.setStatus('mandatory')
aptisHdlcFCSErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcFCSErrors.setStatus('mandatory')
aptisHdlcAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcAborts.setStatus('mandatory')
aptisHdlcFramingErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcFramingErrors.setStatus('mandatory')
aptisHdlcReceiveOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcReceiveOverruns.setStatus('mandatory')
aptisHdlcTransmitUnderflows = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcTransmitUnderflows.setStatus('mandatory')
aptisHdlcChannelTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 7, 2), )
if mibBuilder.loadTexts: aptisHdlcChannelTable.setStatus('mandatory')
aptisHdlcChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 7, 2, 1), ).setIndexNames((0, "APTIS-HDLC-MIB", "aptisHdlcIfIndex"), (0, "APTIS-HDLC-MIB", "aptisHdlcChannelIfIndex"))
if mibBuilder.loadTexts: aptisHdlcChannelEntry.setStatus('mandatory')
aptisHdlcChannelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 2, 1, 1), Index()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcChannelIfIndex.setStatus('mandatory')
aptisHdlcChannelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("init", 1), ("down", 2), ("disabled", 3), ("smconnnectwait", 4), ("up", 5), ("smdisconnectwait", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcChannelStatus.setStatus('mandatory')
aptisHdlcChannelRcvFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcChannelRcvFrames.setStatus('mandatory')
aptisHdlcChannelRcvOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcChannelRcvOctets.setStatus('mandatory')
aptisHdlcChannelRcvDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcChannelRcvDrops.setStatus('mandatory')
aptisHdlcChannelRcvMaxPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcChannelRcvMaxPacket.setStatus('mandatory')
aptisHdlcChannelRcvOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcChannelRcvOverruns.setStatus('mandatory')
aptisHdlcChannelRcvFCSErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcChannelRcvFCSErrors.setStatus('mandatory')
aptisHdlcChannelRcvByteAlign = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcChannelRcvByteAlign.setStatus('mandatory')
aptisHdlcChannelRcvAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcChannelRcvAborts.setStatus('mandatory')
aptisHdlcChannelTransmitFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcChannelTransmitFrames.setStatus('mandatory')
aptisHdlcChannelTransmitOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcChannelTransmitOctets.setStatus('mandatory')
aptisHdlcChannelTransmitDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcChannelTransmitDrops.setStatus('mandatory')
aptisHdlcChannelTransmitUnderflows = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcChannelTransmitUnderflows.setStatus('mandatory')
aptisHdlcChannelTransmitBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 7, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisHdlcChannelTransmitBuffer.setStatus('mandatory')
mibBuilder.exportSymbols("APTIS-HDLC-MIB", aptisHdlcChannelRcvDrops=aptisHdlcChannelRcvDrops, aptisHdlcIfIndex=aptisHdlcIfIndex, aptisHdlcReceiveDrops=aptisHdlcReceiveDrops, aptisHdlcFramingErrors=aptisHdlcFramingErrors, aptisHdlcChannelRcvAborts=aptisHdlcChannelRcvAborts, aptisHdlcChannelTable=aptisHdlcChannelTable, aptisHdlcChannelTransmitOctets=aptisHdlcChannelTransmitOctets, aptisHdlcTable=aptisHdlcTable, aptisHdlcParityErrors=aptisHdlcParityErrors, aptisHdlcChannelTransmitUnderflows=aptisHdlcChannelTransmitUnderflows, aptisHdlcSysErrors=aptisHdlcSysErrors, Index=Index, aptisHdlcChannelRcvByteAlign=aptisHdlcChannelRcvByteAlign, aptisHdlcReceiveOverruns=aptisHdlcReceiveOverruns, aptisHdlcChannelRcvOverruns=aptisHdlcChannelRcvOverruns, aptisHdlcTransmitUnderflows=aptisHdlcTransmitUnderflows, aptisHdlcChannelTransmitDrops=aptisHdlcChannelTransmitDrops, aptisHdlcChannelIfIndex=aptisHdlcChannelIfIndex, aptisHdlcTransmitDrops=aptisHdlcTransmitDrops, aptisHdlcChannelRcvFrames=aptisHdlcChannelRcvFrames, aptisHdlcChannelRcvOctets=aptisHdlcChannelRcvOctets, aptisHdlcChannelStatus=aptisHdlcChannelStatus, aptisHdlcEntry=aptisHdlcEntry, aptisHdlc=aptisHdlc, aptisHdlcChannelRcvFCSErrors=aptisHdlcChannelRcvFCSErrors, aptisHdlcChannelRcvMaxPacket=aptisHdlcChannelRcvMaxPacket, aptisHdlcAborts=aptisHdlcAborts, aptisHdlcChannelTransmitBuffer=aptisHdlcChannelTransmitBuffer, aptisHdlcFCSErrors=aptisHdlcFCSErrors, aptisHdlcChannelTransmitFrames=aptisHdlcChannelTransmitFrames, aptisHdlcChannelEntry=aptisHdlcChannelEntry)
