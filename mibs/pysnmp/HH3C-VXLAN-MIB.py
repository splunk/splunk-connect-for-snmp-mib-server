#
# PySNMP MIB module HH3C-VXLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-VXLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:17:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, ModuleIdentity, Gauge32, ObjectIdentity, Integer32, TimeTicks, Unsigned32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter64, MibIdentifier, Counter32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ModuleIdentity", "Gauge32", "ObjectIdentity", "Integer32", "TimeTicks", "Unsigned32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter64", "MibIdentifier", "Counter32", "IpAddress")
DisplayString, TruthValue, TextualConvention, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "MacAddress", "RowStatus")
hh3cVxlan = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 150))
hh3cVxlan.setRevisions(('2013-11-21 09:00',))
if mibBuilder.loadTexts: hh3cVxlan.setLastUpdated('201311210900Z')
if mibBuilder.loadTexts: hh3cVxlan.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
hh3cVxlanObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1))
hh3cVxlanScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 1))
hh3cVxlanLocalMacNotify = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cVxlanLocalMacNotify.setStatus('current')
hh3cVxlanRemoteMacLearn = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cVxlanRemoteMacLearn.setStatus('current')
hh3cVxlanNextVxlanID = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVxlanNextVxlanID.setStatus('current')
hh3cVxlanConfigured = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVxlanConfigured.setStatus('current')
hh3cVxlanTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 2), )
if mibBuilder.loadTexts: hh3cVxlanTable.setStatus('current')
hh3cVxlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 2, 1), ).setIndexNames((0, "HH3C-VXLAN-MIB", "hh3cVxlanID"))
if mibBuilder.loadTexts: hh3cVxlanEntry.setStatus('current')
hh3cVxlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hh3cVxlanID.setStatus('current')
hh3cVxlanAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 2, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cVxlanAddrType.setStatus('current')
hh3cVxlanGroupAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 2, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cVxlanGroupAddr.setStatus('current')
hh3cVxlanSourceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 2, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cVxlanSourceAddr.setStatus('current')
hh3cVxlanVsiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cVxlanVsiIndex.setStatus('current')
hh3cVxlanRemoteMacCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVxlanRemoteMacCount.setStatus('current')
hh3cVxlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cVxlanRowStatus.setStatus('current')
hh3cVxlanTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 3), )
if mibBuilder.loadTexts: hh3cVxlanTunnelTable.setStatus('current')
hh3cVxlanTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 3, 1), ).setIndexNames((0, "HH3C-VXLAN-MIB", "hh3cVxlanID"), (0, "HH3C-VXLAN-MIB", "hh3cVxlanTunnelID"))
if mibBuilder.loadTexts: hh3cVxlanTunnelEntry.setStatus('current')
hh3cVxlanTunnelID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hh3cVxlanTunnelID.setStatus('current')
hh3cVxlanTunnelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cVxlanTunnelRowStatus.setStatus('current')
hh3cVxlanTunnelOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVxlanTunnelOctets.setStatus('current')
hh3cVxlanTunnelPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVxlanTunnelPackets.setStatus('current')
hh3cVxlanTunnelBoundTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 4), )
if mibBuilder.loadTexts: hh3cVxlanTunnelBoundTable.setStatus('current')
hh3cVxlanTunnelBoundEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 4, 1), ).setIndexNames((0, "HH3C-VXLAN-MIB", "hh3cVxlanTunnelID"))
if mibBuilder.loadTexts: hh3cVxlanTunnelBoundEntry.setStatus('current')
hh3cVxlanTunnelBoundVxlanNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVxlanTunnelBoundVxlanNum.setStatus('current')
hh3cVxlanMacTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 5), )
if mibBuilder.loadTexts: hh3cVxlanMacTable.setStatus('current')
hh3cVxlanMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 5, 1), ).setIndexNames((0, "HH3C-VXLAN-MIB", "hh3cVxlanVsiIndex"), (0, "HH3C-VXLAN-MIB", "hh3cVxlanMacAddr"))
if mibBuilder.loadTexts: hh3cVxlanMacEntry.setStatus('current')
hh3cVxlanMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 5, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cVxlanMacAddr.setStatus('current')
hh3cVxlanMacTunnelID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVxlanMacTunnelID.setStatus('current')
hh3cVxlanMacType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("selfLearned", 1), ("staticConfigured", 2), ("protocolLearned", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVxlanMacType.setStatus('current')
hh3cVxlanStaticMacTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 6), )
if mibBuilder.loadTexts: hh3cVxlanStaticMacTable.setStatus('current')
hh3cVxlanStaticMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 6, 1), ).setIndexNames((0, "HH3C-VXLAN-MIB", "hh3cVxlanVsiIndex"), (0, "HH3C-VXLAN-MIB", "hh3cVxlanStaticMacAddr"))
if mibBuilder.loadTexts: hh3cVxlanStaticMacEntry.setStatus('current')
hh3cVxlanStaticMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 6, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cVxlanStaticMacAddr.setStatus('current')
hh3cVxlanStaticMacTunnelID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 6, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cVxlanStaticMacTunnelID.setStatus('current')
hh3cVxlanStaticMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 150, 1, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cVxlanStaticMacRowStatus.setStatus('current')
mibBuilder.exportSymbols("HH3C-VXLAN-MIB", hh3cVxlanGroupAddr=hh3cVxlanGroupAddr, hh3cVxlanEntry=hh3cVxlanEntry, hh3cVxlanSourceAddr=hh3cVxlanSourceAddr, hh3cVxlanTunnelBoundEntry=hh3cVxlanTunnelBoundEntry, hh3cVxlanStaticMacEntry=hh3cVxlanStaticMacEntry, hh3cVxlanScalarGroup=hh3cVxlanScalarGroup, PYSNMP_MODULE_ID=hh3cVxlan, hh3cVxlanAddrType=hh3cVxlanAddrType, hh3cVxlanMacTable=hh3cVxlanMacTable, hh3cVxlanNextVxlanID=hh3cVxlanNextVxlanID, hh3cVxlanTunnelEntry=hh3cVxlanTunnelEntry, hh3cVxlanMacType=hh3cVxlanMacType, hh3cVxlanTunnelBoundTable=hh3cVxlanTunnelBoundTable, hh3cVxlanTunnelTable=hh3cVxlanTunnelTable, hh3cVxlanTable=hh3cVxlanTable, hh3cVxlanTunnelPackets=hh3cVxlanTunnelPackets, hh3cVxlanTunnelRowStatus=hh3cVxlanTunnelRowStatus, hh3cVxlanStaticMacRowStatus=hh3cVxlanStaticMacRowStatus, hh3cVxlanStaticMacTable=hh3cVxlanStaticMacTable, hh3cVxlanRemoteMacLearn=hh3cVxlanRemoteMacLearn, hh3cVxlanMacTunnelID=hh3cVxlanMacTunnelID, hh3cVxlanMacEntry=hh3cVxlanMacEntry, hh3cVxlanTunnelID=hh3cVxlanTunnelID, hh3cVxlanID=hh3cVxlanID, hh3cVxlanRowStatus=hh3cVxlanRowStatus, hh3cVxlanLocalMacNotify=hh3cVxlanLocalMacNotify, hh3cVxlanTunnelBoundVxlanNum=hh3cVxlanTunnelBoundVxlanNum, hh3cVxlanStaticMacTunnelID=hh3cVxlanStaticMacTunnelID, hh3cVxlanVsiIndex=hh3cVxlanVsiIndex, hh3cVxlanTunnelOctets=hh3cVxlanTunnelOctets, hh3cVxlanConfigured=hh3cVxlanConfigured, hh3cVxlanStaticMacAddr=hh3cVxlanStaticMacAddr, hh3cVxlan=hh3cVxlan, hh3cVxlanObjects=hh3cVxlanObjects, hh3cVxlanRemoteMacCount=hh3cVxlanRemoteMacCount, hh3cVxlanMacAddr=hh3cVxlanMacAddr)
