#
# PySNMP MIB module IPV6-STATIC-ROUTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IPV6-STATIC-ROUTE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:45:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, MibIdentifier, ObjectIdentity, Counter32, Unsigned32, IpAddress, Counter64, NotificationType, ModuleIdentity, Gauge32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibIdentifier", "ObjectIdentity", "Counter32", "Unsigned32", "IpAddress", "Counter64", "NotificationType", "ModuleIdentity", "Gauge32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Bits")
TextualConvention, RowStatus, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "MacAddress")
swIPv6StaticRouteMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 26))
if mibBuilder.loadTexts: swIPv6StaticRouteMIB.setLastUpdated('0706150000Z')
if mibBuilder.loadTexts: swIPv6StaticRouteMIB.setOrganization('D-Link Corp.')
class Ipv6Address(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(16, 16)
    fixedLength = 16

swIPv6StaticRouteCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 26, 1))
swIPv6StaticRouteInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 26, 2))
swIPv6StaticRouteMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 26, 3))
swIPv6NeighborCacheMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 26, 4))
swIPv6StaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 26, 3, 1), )
if mibBuilder.loadTexts: swIPv6StaticRouteTable.setStatus('current')
swIPv6StaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 26, 3, 1, 1), ).setIndexNames((0, "IPV6-STATIC-ROUTE-MIB", "swIPv6StaticRouteDest"), (0, "IPV6-STATIC-ROUTE-MIB", "swIPv6StaticRoutePrefixLen"), (0, "IPV6-STATIC-ROUTE-MIB", "swIPv6StaticRouteInterfaceName"), (0, "IPV6-STATIC-ROUTE-MIB", "swIPv6StaticRouteNextHop"))
if mibBuilder.loadTexts: swIPv6StaticRouteEntry.setStatus('current')
swIPv6StaticRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 26, 3, 1, 1, 1), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIPv6StaticRouteDest.setStatus('current')
swIPv6StaticRoutePrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 26, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIPv6StaticRoutePrefixLen.setStatus('current')
swIPv6StaticRouteInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 26, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIPv6StaticRouteInterfaceName.setStatus('current')
swIPv6StaticRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 26, 3, 1, 1, 4), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIPv6StaticRouteNextHop.setStatus('current')
swIPv6StaticRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 26, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swIPv6StaticRouteMetric.setStatus('current')
swIPv6StaticRouteWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 26, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swIPv6StaticRouteWeight.setStatus('current')
swIPv6StaticProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 26, 3, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIPv6StaticProtocol.setStatus('current')
swIPv6StaticRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 26, 3, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swIPv6StaticRouteStatus.setStatus('current')
swIPv6StaticRouteBkupState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 26, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("primary", 1), ("backup", 2), ("none", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swIPv6StaticRouteBkupState.setStatus('current')
swIPv6NeighborCacheTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 26, 4, 1), )
if mibBuilder.loadTexts: swIPv6NeighborCacheTable.setStatus('current')
swIPv6NeighborCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 26, 4, 1, 1), ).setIndexNames((0, "IPV6-STATIC-ROUTE-MIB", "swIPv6NeighborCacheIPv6Address"), (0, "IPV6-STATIC-ROUTE-MIB", "swIPv6NeighborCacheMacAddress"), (0, "IPV6-STATIC-ROUTE-MIB", "swIPv6NeighborCacheInterfaceName"))
if mibBuilder.loadTexts: swIPv6NeighborCacheEntry.setStatus('current')
swIPv6NeighborCacheIPv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 26, 4, 1, 1, 1), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIPv6NeighborCacheIPv6Address.setStatus('current')
swIPv6NeighborCacheMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 26, 4, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIPv6NeighborCacheMacAddress.setStatus('current')
swIPv6NeighborCacheInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 26, 4, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIPv6NeighborCacheInterfaceName.setStatus('current')
swIPv6NeighborCacheReachState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 26, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("incomplete", 1), ("reachable", 2), ("stale", 3), ("delay", 4), ("probe", 5), ("static", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIPv6NeighborCacheReachState.setStatus('current')
swIPv6NeighborCacheRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 26, 4, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swIPv6NeighborCacheRouteStatus.setStatus('current')
swIPv6NeighborCacheDeleteAction = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 26, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("all", 1), ("static", 2), ("dynamic", 3), ("other", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swIPv6NeighborCacheDeleteAction.setStatus('current')
mibBuilder.exportSymbols("IPV6-STATIC-ROUTE-MIB", Ipv6Address=Ipv6Address, swIPv6NeighborCacheIPv6Address=swIPv6NeighborCacheIPv6Address, swIPv6StaticRouteInterfaceName=swIPv6StaticRouteInterfaceName, swIPv6StaticRouteMIB=swIPv6StaticRouteMIB, swIPv6StaticRouteWeight=swIPv6StaticRouteWeight, swIPv6NeighborCacheEntry=swIPv6NeighborCacheEntry, swIPv6NeighborCacheTable=swIPv6NeighborCacheTable, swIPv6StaticProtocol=swIPv6StaticProtocol, PYSNMP_MODULE_ID=swIPv6StaticRouteMIB, swIPv6NeighborCacheInterfaceName=swIPv6NeighborCacheInterfaceName, swIPv6StaticRouteStatus=swIPv6StaticRouteStatus, swIPv6StaticRouteMgmt=swIPv6StaticRouteMgmt, swIPv6NeighborCacheDeleteAction=swIPv6NeighborCacheDeleteAction, swIPv6StaticRouteTable=swIPv6StaticRouteTable, swIPv6NeighborCacheRouteStatus=swIPv6NeighborCacheRouteStatus, swIPv6NeighborCacheMacAddress=swIPv6NeighborCacheMacAddress, swIPv6StaticRouteBkupState=swIPv6StaticRouteBkupState, swIPv6StaticRouteInfo=swIPv6StaticRouteInfo, swIPv6StaticRouteEntry=swIPv6StaticRouteEntry, swIPv6StaticRouteDest=swIPv6StaticRouteDest, swIPv6NeighborCacheReachState=swIPv6NeighborCacheReachState, swIPv6NeighborCacheMgmt=swIPv6NeighborCacheMgmt, swIPv6StaticRouteNextHop=swIPv6StaticRouteNextHop, swIPv6StaticRouteCtrl=swIPv6StaticRouteCtrl, swIPv6StaticRouteMetric=swIPv6StaticRouteMetric, swIPv6StaticRoutePrefixLen=swIPv6StaticRoutePrefixLen)
