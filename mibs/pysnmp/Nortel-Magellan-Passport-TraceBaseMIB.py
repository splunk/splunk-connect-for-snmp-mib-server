#
# PySNMP MIB module Nortel-Magellan-Passport-TraceBaseMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-TraceBaseMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:17:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
StorageType, Integer32, DisplayString, RowStatus, RowPointer, Unsigned32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "StorageType", "Integer32", "DisplayString", "RowStatus", "RowPointer", "Unsigned32")
AsciiStringIndex, NonReplicated = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "AsciiStringIndex", "NonReplicated")
components, passportMIBs = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "components", "passportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, MibIdentifier, Counter32, TimeTicks, Gauge32, Counter64, ObjectIdentity, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "MibIdentifier", "Counter32", "TimeTicks", "Gauge32", "Counter64", "ObjectIdentity", "IpAddress", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
traceBaseMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 60))
trace = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106))
traceRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 1), )
if mibBuilder.loadTexts: traceRowStatusTable.setStatus('mandatory')
traceRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"))
if mibBuilder.loadTexts: traceRowStatusEntry.setStatus('mandatory')
traceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceRowStatus.setStatus('mandatory')
traceComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceComponentName.setStatus('mandatory')
traceStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceStorageType.setStatus('mandatory')
traceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: traceIndex.setStatus('mandatory')
traceRcvr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2))
traceRcvrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 1), )
if mibBuilder.loadTexts: traceRcvrRowStatusTable.setStatus('mandatory')
traceRcvrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceRcvrIndex"))
if mibBuilder.loadTexts: traceRcvrRowStatusEntry.setStatus('mandatory')
traceRcvrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceRcvrRowStatus.setStatus('mandatory')
traceRcvrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrComponentName.setStatus('mandatory')
traceRcvrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrStorageType.setStatus('mandatory')
traceRcvrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 8)))
if mibBuilder.loadTexts: traceRcvrIndex.setStatus('mandatory')
traceSession = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3))
traceSessionRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 1), )
if mibBuilder.loadTexts: traceSessionRowStatusTable.setStatus('mandatory')
traceSessionRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceSessionIndex"))
if mibBuilder.loadTexts: traceSessionRowStatusEntry.setStatus('mandatory')
traceSessionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionRowStatus.setStatus('mandatory')
traceSessionComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionComponentName.setStatus('mandatory')
traceSessionStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionStorageType.setStatus('mandatory')
traceSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)))
if mibBuilder.loadTexts: traceSessionIndex.setStatus('mandatory')
traceSessionOperationalTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 100), )
if mibBuilder.loadTexts: traceSessionOperationalTable.setStatus('mandatory')
traceSessionOperationalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 100, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceSessionIndex"))
if mibBuilder.loadTexts: traceSessionOperationalEntry.setStatus('mandatory')
traceSessionServiceTraced = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 100, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionServiceTraced.setStatus('mandatory')
traceSessionReceiver = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 100, 1, 3), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionReceiver.setStatus('mandatory')
traceSessionSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 100, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initializing", 0), ("idle", 1), ("waitingForSession", 2), ("releasingSession", 3), ("waitingForProvisioningData", 4), ("callingReceiver", 5), ("clearingCallToReceiver", 6), ("abortingDueToCallFailure", 7), ("binding", 8), ("unbinding", 9), ("active", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionSessionState.setStatus('mandatory')
traceSessionCallState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 100, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initializing", 0), ("creatingVc", 1), ("calling", 2), ("clearing", 3), ("enteringDataTransfer", 4), ("terminatingVc", 5), ("dataTransfer", 6), ("reseting", 7), ("terminating", 8), ("terminated", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionCallState.setStatus('mandatory')
traceSessionQueueState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 100, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("full", 1), ("blocked", 2))).clone('normal')).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionQueueState.setStatus('mandatory')
traceSessionFramesQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 100, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFramesQueued.setStatus('mandatory')
traceSessionFramesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 100, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFramesSent.setStatus('mandatory')
traceSessionFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 100, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFramesDiscarded.setStatus('mandatory')
traceBaseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 60, 1))
traceBaseGroupBD = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 60, 1, 4))
traceBaseGroupBD00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 60, 1, 4, 1))
traceBaseGroupBD00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 60, 1, 4, 1, 2))
traceBaseCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 60, 3))
traceBaseCapabilitiesBD = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 60, 3, 4))
traceBaseCapabilitiesBD00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 60, 3, 4, 1))
traceBaseCapabilitiesBD00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 60, 3, 4, 1, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-TraceBaseMIB", traceRowStatus=traceRowStatus, traceBaseCapabilitiesBD=traceBaseCapabilitiesBD, traceStorageType=traceStorageType, traceBaseMIB=traceBaseMIB, traceSessionReceiver=traceSessionReceiver, traceRcvrIndex=traceRcvrIndex, traceRowStatusTable=traceRowStatusTable, traceRcvr=traceRcvr, traceComponentName=traceComponentName, traceRcvrRowStatusEntry=traceRcvrRowStatusEntry, traceSessionIndex=traceSessionIndex, trace=trace, traceRcvrRowStatusTable=traceRcvrRowStatusTable, traceSessionFramesSent=traceSessionFramesSent, traceBaseCapabilities=traceBaseCapabilities, traceSessionServiceTraced=traceSessionServiceTraced, traceBaseGroupBD=traceBaseGroupBD, traceBaseGroupBD00A=traceBaseGroupBD00A, traceBaseGroupBD00=traceBaseGroupBD00, traceSessionRowStatusEntry=traceSessionRowStatusEntry, traceRcvrComponentName=traceRcvrComponentName, traceSessionStorageType=traceSessionStorageType, traceSessionCallState=traceSessionCallState, traceBaseCapabilitiesBD00=traceBaseCapabilitiesBD00, traceSessionQueueState=traceSessionQueueState, traceSessionOperationalTable=traceSessionOperationalTable, traceBaseGroup=traceBaseGroup, traceRcvrRowStatus=traceRcvrRowStatus, traceSession=traceSession, traceSessionRowStatusTable=traceSessionRowStatusTable, traceSessionComponentName=traceSessionComponentName, traceSessionFramesQueued=traceSessionFramesQueued, traceSessionOperationalEntry=traceSessionOperationalEntry, traceRowStatusEntry=traceRowStatusEntry, traceIndex=traceIndex, traceBaseCapabilitiesBD00A=traceBaseCapabilitiesBD00A, traceSessionFramesDiscarded=traceSessionFramesDiscarded, traceSessionRowStatus=traceSessionRowStatus, traceRcvrStorageType=traceRcvrStorageType, traceSessionSessionState=traceSessionSessionState)
