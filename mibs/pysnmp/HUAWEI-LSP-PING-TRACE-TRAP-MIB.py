#
# PySNMP MIB module HUAWEI-LSP-PING-TRACE-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-LSP-PING-TRACE-TRAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:34:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
IpAddress, mgmt, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter32, Gauge32, Unsigned32, MibIdentifier, ObjectIdentity, Counter64, Bits, Integer32, iso, NotificationType, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "mgmt", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter32", "Gauge32", "Unsigned32", "MibIdentifier", "ObjectIdentity", "Counter64", "Bits", "Integer32", "iso", "NotificationType", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hwLsppttMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302))
hwLsppttMIB.setRevisions(('2014-11-17 19:14', '2011-08-07 16:00',))
if mibBuilder.loadTexts: hwLsppttMIB.setLastUpdated('201411171914Z')
if mibBuilder.loadTexts: hwLsppttMIB.setOrganization('Huawei Technologies Co.,Ltd.')
hwLspTrapObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 2))
hwLspTunnelID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 2, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLspTunnelID.setStatus('current')
hwLspSenderAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 2, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLspSenderAddress.setStatus('current')
hwLspEndPointAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 2, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLspEndPointAddress.setStatus('current')
hwLspTTL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 2, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLspTTL.setStatus('current')
hwLspHandle = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 2, 5), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLspHandle.setStatus('current')
hwLspIPv4VpnName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 2, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLspIPv4VpnName.setStatus('current')
hwLspIPv4VpnSrcAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 2, 7), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLspIPv4VpnSrcAddr.setStatus('current')
hwLspIPv4VpnDstAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 2, 8), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLspIPv4VpnDstAddr.setStatus('current')
hwLspNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 3))
hwLspPingProbe = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 3, 1)).setObjects(("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspTunnelID"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspSenderAddress"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspEndPointAddress"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspTTL"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspHandle"))
if mibBuilder.loadTexts: hwLspPingProbe.setStatus('current')
hwLspTraceProbe = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 3, 2)).setObjects(("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspTunnelID"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspSenderAddress"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspEndPointAddress"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspTTL"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspHandle"))
if mibBuilder.loadTexts: hwLspTraceProbe.setStatus('current')
hwLspPingIPv4VpnProbe = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 3, 3)).setObjects(("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspIPv4VpnName"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspIPv4VpnSrcAddr"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspIPv4VpnDstAddr"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspTTL"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspHandle"))
if mibBuilder.loadTexts: hwLspPingIPv4VpnProbe.setStatus('current')
hwLspConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 4))
hwLspGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 4, 1))
hwLspCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 4, 2))
hwLspCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 4, 2, 1)).setObjects(("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspNotificationsGroup"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLspCompliance = hwLspCompliance.setStatus('current')
hwLspNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 4, 1, 1)).setObjects(("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspPingProbe"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspTraceProbe"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspPingIPv4VpnProbe"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLspNotificationsGroup = hwLspNotificationsGroup.setStatus('current')
hwLspObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 302, 4, 1, 2)).setObjects(("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspTunnelID"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspTTL"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspHandle"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspSenderAddress"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspEndPointAddress"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspIPv4VpnName"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspIPv4VpnSrcAddr"), ("HUAWEI-LSP-PING-TRACE-TRAP-MIB", "hwLspIPv4VpnDstAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLspObjectGroup = hwLspObjectGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-LSP-PING-TRACE-TRAP-MIB", hwLspObjectGroup=hwLspObjectGroup, hwLspCompliance=hwLspCompliance, PYSNMP_MODULE_ID=hwLsppttMIB, hwLsppttMIB=hwLsppttMIB, hwLspConformance=hwLspConformance, hwLspPingIPv4VpnProbe=hwLspPingIPv4VpnProbe, hwLspEndPointAddress=hwLspEndPointAddress, hwLspNotifications=hwLspNotifications, hwLspTraceProbe=hwLspTraceProbe, hwLspGroup=hwLspGroup, hwLspIPv4VpnSrcAddr=hwLspIPv4VpnSrcAddr, hwLspIPv4VpnDstAddr=hwLspIPv4VpnDstAddr, hwLspNotificationsGroup=hwLspNotificationsGroup, hwLspHandle=hwLspHandle, hwLspIPv4VpnName=hwLspIPv4VpnName, hwLspTunnelID=hwLspTunnelID, hwLspTTL=hwLspTTL, hwLspPingProbe=hwLspPingProbe, hwLspSenderAddress=hwLspSenderAddress, hwLspCompliances=hwLspCompliances, hwLspTrapObject=hwLspTrapObject)
