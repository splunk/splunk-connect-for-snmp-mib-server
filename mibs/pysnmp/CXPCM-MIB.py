#
# PySNMP MIB module CXPCM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CXPCM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:17:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
cxPCM, SapIndex = mibBuilder.importSymbols("CXProduct-SMI", "cxPCM", "SapIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, iso, Unsigned32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ObjectIdentity, TimeTicks, MibIdentifier, NotificationType, ModuleIdentity, IpAddress, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "Unsigned32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ObjectIdentity", "TimeTicks", "MibIdentifier", "NotificationType", "ModuleIdentity", "IpAddress", "Counter32", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class ChannelIndex(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 31)

pcmSapTable = MibTable((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 63, 40), )
if mibBuilder.loadTexts: pcmSapTable.setStatus('mandatory')
pcmSapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 63, 40, 1), ).setIndexNames((0, "CXPCM-MIB", "pcmSapLinkNumber"), (0, "CXPCM-MIB", "pcmSapChannelNumber"))
if mibBuilder.loadTexts: pcmSapEntry.setStatus('mandatory')
pcmSapLinkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 63, 40, 1, 1), SapIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcmSapLinkNumber.setStatus('mandatory')
pcmSapChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 63, 40, 1, 2), ChannelIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcmSapChannelNumber.setStatus('mandatory')
pcmSapChannelState = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 63, 40, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("down", 1), ("up", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcmSapChannelState.setStatus('mandatory')
pcmSapRxPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 63, 40, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcmSapRxPacket.setStatus('mandatory')
pcmSapTxPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 63, 40, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcmSapTxPacket.setStatus('mandatory')
pcmSapTxDesync = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 63, 40, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcmSapTxDesync.setStatus('mandatory')
pcmSapTxNotReady = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 63, 40, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcmSapTxNotReady.setStatus('mandatory')
pcmSapRxBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 63, 40, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcmSapRxBusy.setStatus('mandatory')
pcmSapTxUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 63, 40, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcmSapTxUnderrun.setStatus('mandatory')
pcmDebugTable = MibTable((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 63, 60), )
if mibBuilder.loadTexts: pcmDebugTable.setStatus('mandatory')
pcmDebugEntry = MibTableRow((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 63, 60, 1), ).setIndexNames((0, "CXPCM-MIB", "pcmDebugLinkNumber"))
if mibBuilder.loadTexts: pcmDebugEntry.setStatus('mandatory')
pcmDebugLinkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 63, 60, 1, 1), SapIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcmDebugLinkNumber.setStatus('mandatory')
pcmDebugLoopInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 63, 60, 1, 80), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: pcmDebugLoopInfo.setStatus('mandatory')
mibBuilder.exportSymbols("CXPCM-MIB", pcmSapTxNotReady=pcmSapTxNotReady, pcmDebugEntry=pcmDebugEntry, pcmSapChannelState=pcmSapChannelState, pcmSapRxPacket=pcmSapRxPacket, ChannelIndex=ChannelIndex, pcmDebugLoopInfo=pcmDebugLoopInfo, pcmDebugTable=pcmDebugTable, pcmSapLinkNumber=pcmSapLinkNumber, pcmSapRxBusy=pcmSapRxBusy, pcmSapTxPacket=pcmSapTxPacket, pcmSapTxUnderrun=pcmSapTxUnderrun, pcmSapEntry=pcmSapEntry, pcmSapChannelNumber=pcmSapChannelNumber, pcmSapTxDesync=pcmSapTxDesync, pcmDebugLinkNumber=pcmDebugLinkNumber, pcmSapTable=pcmSapTable)
