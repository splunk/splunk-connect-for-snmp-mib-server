#
# PySNMP MIB module PROXIM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PROXIM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:33:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, enterprises, Integer32, Counter32, MibIdentifier, iso, Bits, Counter64, IpAddress, NotificationType, TimeTicks, Gauge32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "enterprises", "Integer32", "Counter32", "MibIdentifier", "iso", "Bits", "Counter64", "IpAddress", "NotificationType", "TimeTicks", "Gauge32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
TextualConvention, PhysAddress, DisplayString, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "PhysAddress", "DisplayString", "RowStatus", "MacAddress")
proxim = ModuleIdentity((1, 3, 6, 1, 4, 1, 841))
if mibBuilder.loadTexts: proxim.setLastUpdated('200808110000Z')
if mibBuilder.loadTexts: proxim.setOrganization('Proxim Corporation')
class DisplayString20(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 20)

class DisplayString32(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 32)

class DisplayString55(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 55)

class DisplayString80(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 80)

class InterfaceBitmask(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class ObjStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("notSupported", 0), ("enable", 1), ("disable", 2))

class ObjStatusActive(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("active", 1), ("inactive", 2), ("deleted", 3))

class Password(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(6, 32)

class V3Password(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(8, 32)

class VlanId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(-1, 4094)

class WEPKeyType(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 32)

wireless = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1))
objects = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1))
deviceConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1))
interface = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1))
wirelessIf = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1))
ethernetIf = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 2))
apSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2))
wirelessSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 1))
radius = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2))
macacl = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 3))
qos = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3))
wirelessQoS = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 3))
l2l3QoS = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 4))
worpQoS = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5))
network = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4))
netIp = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1))
netCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 2))
nat = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 3))
rip = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 4))
vlan = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 5))
filtering = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6))
protocolFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 3))
staticMACAddrFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 4))
advancedFiltering = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 5))
tcpudpPortFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 6))
worpIntraCellBlocking = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7))
securityGateway = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 8))
stormThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 10))
dhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7))
dhcpServer = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1))
dhcpRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 2))
sysConf = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 8))
igmp = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 10))
deviceMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 2))
sys = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1))
sysInvMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 2))
sysFeature = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3))
sysMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 4))
sysInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 5))
mgmtSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2))
http = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 3))
telnet = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 4))
tftp = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 5))
trapControl = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 6))
mgmtAccessControl = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 7))
ssh = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 8))
deviceMon = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3))
syslog = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 1))
eventlog = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 2))
sntp = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 3))
wirelessIfMon = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4))
wirelessIfStaStats = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1))
wirelessIfWORPStats = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2))
wirelessIfBlacklistInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 3))
wirelessIfWORPLinkTest = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4))
wirelessIfStats = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5))
radiusMon = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5))
radiusClientStats = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1))
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6))
interfaceTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 1))
securityTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 2))
operationalTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 3))
systemTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4))
sntpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 5))
imageTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 6))
siteSurvey = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7))
worpSiteSurvey = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1))
temperature = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 8))
sysMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 9))
igmpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10))
debugLog = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 11))
igmpEthernetSnoopingStats = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 1))
igmpWirelessSnoopingStats = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 2))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 2))
ap_800 = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 2, 1)).setLabel("ap-800")
ap_8000 = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 2, 2)).setLabel("ap-8000")
qb_8100 = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 2, 11)).setLabel("qb-8100")
mp_8100 = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 2, 21)).setLabel("mp-8100")
mp_8100_cpe = MibIdentifier((1, 3, 6, 1, 4, 1, 841, 2, 22)).setLabel("mp-8100-cpe")
wirelessIfPropertiesTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1), )
if mibBuilder.loadTexts: wirelessIfPropertiesTable.setStatus('current')
wirelessIfPropertiesTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "wirelessIfPropertiesTableIndex"))
if mibBuilder.loadTexts: wirelessIfPropertiesTableEntry.setStatus('current')
wirelessIfPropertiesTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfPropertiesTableIndex.setStatus('current')
wirelessIfPropertiesRadioStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfPropertiesRadioStatus.setStatus('current')
wirelessIfOperationalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfOperationalMode.setStatus('current')
wirelessIfSupportedOperationalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfSupportedOperationalMode.setStatus('current')
wirelessIfCurrentChannelBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfCurrentChannelBandwidth.setStatus('current')
wirelessIfSupportedChannelBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfSupportedChannelBandwidth.setStatus('current')
wirelessIfAutoChannelSelection = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfAutoChannelSelection.setStatus('current')
wirelessIfCurrentOperatingChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfCurrentOperatingChannel.setStatus('current')
wirelessIfSupportedChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfSupportedChannels.setStatus('current')
wirelessIfAutoRateSelection = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfAutoRateSelection.setStatus('current')
wirelessIfTransmittedRate = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfTransmittedRate.setStatus('current')
wirelessIfSupportedRate = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfSupportedRate.setStatus('current')
wirelessIfVAPRTSThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2346)).clone(2346)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfVAPRTSThreshold.setStatus('current')
wirelessIfVAPBeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfVAPBeaconInterval.setStatus('current')
wirelessIfTPC = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfTPC.setStatus('current')
wirelessIfCellSize = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("small", 1), ("medium", 2), ("large", 3))).clone('large')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfCellSize.setStatus('current')
wirelessIfDTIM = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfDTIM.setStatus('current')
wirelessIfAntennaGain = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfAntennaGain.setStatus('current')
wirelessIfCurrentActiveChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfCurrentActiveChannel.setStatus('current')
wirelessIfSatelliteDensity = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disable", 1), ("large", 2), ("medium", 3), ("small", 4), ("mini", 5), ("micro", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfSatelliteDensity.setStatus('current')
wirelessIfMPOperationalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("highThroughput", 1), ("legacy", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfMPOperationalMode.setStatus('current')
wirelessIfChannelWaitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfChannelWaitTime.setStatus('current')
wirelessIfActiveTPC = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfActiveTPC.setStatus('current')
wirelessIfDfsNumSatWithRadarForFreqSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfDfsNumSatWithRadarForFreqSwitch.setStatus('current')
wirelessIfDfsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfDfsStatus.setStatus('current')
wirelessIf11nPropertiesTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 2), )
if mibBuilder.loadTexts: wirelessIf11nPropertiesTable.setStatus('current')
wirelessIf11nPropertiesTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 2, 1), ).setIndexNames((0, "PROXIM-MIB", "wirelessIf11nPropertiesTableIndex"))
if mibBuilder.loadTexts: wirelessIf11nPropertiesTableEntry.setStatus('current')
wirelessIf11nPropertiesTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIf11nPropertiesTableIndex.setStatus('current')
wirelessIf11nPropertiesAMPDUStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIf11nPropertiesAMPDUStatus.setStatus('current')
wirelessIf11nPropertiesAMPDUMaxNumFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIf11nPropertiesAMPDUMaxNumFrames.setStatus('current')
wirelessIf11nPropertiesAMPDUMaxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535)).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIf11nPropertiesAMPDUMaxFrameSize.setStatus('current')
wirelessIf11nPropertiesAMSDUStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIf11nPropertiesAMSDUStatus.setStatus('current')
wirelessIf11nPropertiesAMSDUMaxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4096, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIf11nPropertiesAMSDUMaxFrameSize.setStatus('current')
wirelessIf11nPropertiesFrequencyExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("upperExtensionChannel", 1), ("lowerExtensionChannel", 2))).clone('upperExtensionChannel')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIf11nPropertiesFrequencyExtension.setStatus('current')
wirelessIf11nPropertiesGuardInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("shortGI-400nSec", 1), ("fullGI-800nSec", 2))).clone('fullGI-800nSec')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIf11nPropertiesGuardInterval.setStatus('current')
wirelessIf11nPropertiesTxAntennas = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4), ("five", 5), ("six", 6), ("seven", 7))).clone('seven')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIf11nPropertiesTxAntennas.setStatus('current')
wirelessIf11nPropertiesRxAntennas = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4), ("five", 5), ("six", 6), ("seven", 7))).clone('seven')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIf11nPropertiesRxAntennas.setStatus('current')
wirelessIf11nPropertiesNumOfSpatialStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("single", 1), ("dual", 2), ("auto", 3))).clone('single')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIf11nPropertiesNumOfSpatialStreams.setStatus('current')
wirelessIf11nPropertiesSupportedTxAntennas = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIf11nPropertiesSupportedTxAntennas.setStatus('current')
wirelessIf11nPropertiesSupportedRxAntennas = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIf11nPropertiesSupportedRxAntennas.setStatus('current')
wirelessIfVAPTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3), )
if mibBuilder.loadTexts: wirelessIfVAPTable.setStatus('current')
wirelessIfVAPTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3, 1), ).setIndexNames((0, "PROXIM-MIB", "wirelessIfVAPTableIndex"), (0, "PROXIM-MIB", "wirelessIfVAPTableSecIndex"))
if mibBuilder.loadTexts: wirelessIfVAPTableEntry.setStatus('current')
wirelessIfVAPTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfVAPTableIndex.setStatus('current')
wirelessIfVAPTableSecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfVAPTableSecIndex.setStatus('current')
wirelessIfVAPType = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ap", 1))).clone('ap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfVAPType.setStatus('current')
wirelessIfVAPSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfVAPSSID.setStatus('current')
wirelessIfVAPBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfVAPBSSID.setStatus('current')
wirelessIfVAPBroadcastSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfVAPBroadcastSSID.setStatus('current')
wirelessIfVAPFragmentationThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(256, 2346)).clone(2346)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfVAPFragmentationThreshold.setStatus('current')
wirelessIfVAPSecurityProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfVAPSecurityProfileName.setStatus('current')
wirelessIfVAPRadiusProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfVAPRadiusProfileName.setStatus('current')
wirelessIfVAPVLANID = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3, 1, 10), VlanId().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfVAPVLANID.setStatus('current')
wirelessIfVAPVLANPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfVAPVLANPriority.setStatus('current')
wirelessIfVAPQoSProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfVAPQoSProfileName.setStatus('current')
wirelessIfVAPMACACLStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfVAPMACACLStatus.setStatus('current')
wirelessIfVAPRadiusMACACLStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfVAPRadiusMACACLStatus.setStatus('current')
wirelessIfVAPRadiusAccStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfVAPRadiusAccStatus.setStatus('current')
wirelessIfVAPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfVAPStatus.setStatus('current')
wirelessIfWORPTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4), )
if mibBuilder.loadTexts: wirelessIfWORPTable.setStatus('current')
wirelessIfWORPTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1), ).setIndexNames((0, "PROXIM-MIB", "wirelessIfWORPTableIndex"))
if mibBuilder.loadTexts: wirelessIfWORPTableEntry.setStatus('current')
wirelessIfWORPTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPTableIndex.setStatus('current')
wirelessIfWORPMode = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPMode.setStatus('current')
wirelessIfWORPBaseStationName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPBaseStationName.setStatus('current')
wirelessIfWORPNetworkName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPNetworkName.setStatus('current')
wirelessIfWORPMaxSatellites = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPMaxSatellites.setStatus('current')
wirelessIfWORPMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(350, 3808)).clone(3808)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPMTU.setStatus('current')
wirelessIfWORPSuperPacketing = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPSuperPacketing.setStatus('current')
wirelessIfWORPSleepMode = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPSleepMode.setStatus('current')
wirelessIfWORPMultiFrameBursting = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPMultiFrameBursting.setStatus('current')
wirelessIfWORPRegistrationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPRegistrationTimeout.setStatus('current')
wirelessIfWORPRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPRetries.setStatus('current')
wirelessIfWORPTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 13), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPTxRate.setStatus('current')
wirelessIfWORPSupportedTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPSupportedTxRate.setStatus('current')
wirelessIfWORPInputBandwidthLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 307200)).clone(3072000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPInputBandwidthLimit.setStatus('current')
wirelessIfWORPOutputBandwidthLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 307200)).clone(307200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPOutputBandwidthLimit.setStatus('current')
wirelessIfWORPBandwidthLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("policing", 1), ("shaping", 2))).clone('policing')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPBandwidthLimitType.setStatus('current')
wirelessIfWORPSecurityProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4), ("five", 5), ("six", 6), ("seven", 7), ("eight", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPSecurityProfileIndex.setStatus('current')
wirelessIfWORPRadiusProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4), ("five", 5), ("six", 6), ("seven", 7), ("eight", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPRadiusProfileIndex.setStatus('current')
wirelessIfWORPMACACLStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPMACACLStatus.setStatus('current')
wirelessIfWORPRadiusMACACLStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPRadiusMACACLStatus.setStatus('current')
wirelessIfWORPRadiusAccStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))))
if mibBuilder.loadTexts: wirelessIfWORPRadiusAccStatus.setStatus('current')
wirelessIfWORPIntfMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 23), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPIntfMacAddress.setStatus('current')
wirelessIfWORPAutoMultiFrameBursting = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 4, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPAutoMultiFrameBursting.setStatus('current')
wirelessIfDDRSTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 5), )
if mibBuilder.loadTexts: wirelessIfDDRSTable.setStatus('current')
wirelessIfDDRSTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 5, 1), ).setIndexNames((0, "PROXIM-MIB", "wirelessIfDDRSTableIndex"))
if mibBuilder.loadTexts: wirelessIfDDRSTableEntry.setStatus('current')
wirelessIfDDRSTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfDDRSTableIndex.setStatus('current')
wirelessIfDDRSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfDDRSStatus.setStatus('current')
wirelessIfDDRSDefDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 5, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfDDRSDefDataRate.setStatus('current')
wirelessIfDDRSMaxDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 5, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfDDRSMaxDataRate.setStatus('current')
wirelessIfDDRSIncrAvgSNRThrld = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 5, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfDDRSIncrAvgSNRThrld.setStatus('current')
wirelessIfDDRSIncrReqSNRThrld = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 5, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfDDRSIncrReqSNRThrld.setStatus('current')
wirelessIfDDRSDecrReqSNRThrld = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 5, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfDDRSDecrReqSNRThrld.setStatus('current')
wirelessIfDDRSIncrReTxPercentThrld = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 5, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfDDRSIncrReTxPercentThrld.setStatus('current')
wirelessIfDDRSDecrReTxPercentThrld = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 5, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfDDRSDecrReTxPercentThrld.setStatus('current')
wirelessIfDDRSAggressiveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 5, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfDDRSAggressiveIndex.setStatus('current')
wirelessIfDDRSChainBalThrld = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 5, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfDDRSChainBalThrld.setStatus('current')
wirelessIfDDRSRateBackOffInt = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 5, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfDDRSRateBackOffInt.setStatus('current')
wirelessIfDDRSRateBlackListInt = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 5, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfDDRSRateBlackListInt.setStatus('current')
wirelessIfDDRSMinReqSNRTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 6), )
if mibBuilder.loadTexts: wirelessIfDDRSMinReqSNRTable.setStatus('current')
wirelessIfDDRSMinReqSNRTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 6, 1), ).setIndexNames((0, "PROXIM-MIB", "wirelessIfDDRSMinReqSNRTableIndex"), (0, "PROXIM-MIB", "wirelessIfDDRSMinReqSNRTableSecIndex"))
if mibBuilder.loadTexts: wirelessIfDDRSMinReqSNRTableEntry.setStatus('current')
wirelessIfDDRSMinReqSNRTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfDDRSMinReqSNRTableIndex.setStatus('current')
wirelessIfDDRSMinReqSNRTableSecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 6, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfDDRSMinReqSNRTableSecIndex.setStatus('current')
wirelessIfDDRSPhyModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 6, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfDDRSPhyModulation.setStatus('current')
wirelessIfDDRSDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 6, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfDDRSDataRate.setStatus('current')
wirelessIfDDRSMinReqSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 1, 6, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfDDRSMinReqSNR.setStatus('current')
ethernetIfPropertiesTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 2, 1), )
if mibBuilder.loadTexts: ethernetIfPropertiesTable.setStatus('current')
ethernetIfPropertiesTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 2, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "ethernetIfPropertiesTableIndex"))
if mibBuilder.loadTexts: ethernetIfPropertiesTableEntry.setStatus('current')
ethernetIfPropertiesTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetIfPropertiesTableIndex.setStatus('current')
ethernetIfMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 2, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetIfMACAddress.setStatus('current')
ethernetIfSupportedSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("oneGbps", 2), ("tenMbps", 3), ("hundredMbit", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetIfSupportedSpeed.setStatus('current')
ethernetIfSupportedTxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("halfDuplex", 1), ("fullDuplex", 2), ("auto", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetIfSupportedTxMode.setStatus('current')
ethernetIfTxModeAndSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("auto", 1), ("tenMbps-halfDuplex", 2), ("tenMbps-fullDuplex", 3), ("hundredMbps-halfDuplex", 4), ("hundredMbps-fullDuplex", 5), ("oneGbps-fullDuplex", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethernetIfTxModeAndSpeed.setStatus('current')
ethernetIfSupportedModes = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetIfSupportedModes.setStatus('current')
ethernetIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethernetIfAdminStatus.setStatus('current')
ethernetIfAutoShutDown = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethernetIfAutoShutDown.setStatus('current')
wirelessSecurityCfgTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 1, 1), )
if mibBuilder.loadTexts: wirelessSecurityCfgTable.setStatus('current')
wirelessSecurityCfgTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 1, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "wirelessSecurityCfgTableIndex"))
if mibBuilder.loadTexts: wirelessSecurityCfgTableEntry.setStatus('current')
wirelessSecurityCfgTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessSecurityCfgTableIndex.setStatus('current')
wirelessSecurityCfgprofileName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('DEFAULT SECURITY')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSecurityCfgprofileName.setStatus('current')
wirelessSecurityCfgAuthenticationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("wep", 2), ("psk", 3), ("dot1x", 4), ("worp", 5))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wirelessSecurityCfgAuthenticationMode.setStatus('current')
wirelessSecurityCfgKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSecurityCfgKeyIndex.setStatus('current')
wirelessSecurityCfgKey1 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 1, 1, 1, 5), WEPKeyType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSecurityCfgKey1.setStatus('current')
wirelessSecurityCfgdot1xWepKeyLength = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wep64", 1), ("wep128", 2))).clone('wep64')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSecurityCfgdot1xWepKeyLength.setStatus('current')
wirelessSecurityCfgEncryptionType = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 0), ("wep", 1), ("wpa-tkip", 2), ("wpa2-aes", 3), ("wpa-wpa2aes-tkip", 4), ("wpa2-aes-ccm", 5), ("tkip", 6), ("aes-ccm", 7))).clone('wep')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSecurityCfgEncryptionType.setStatus('current')
wirelessSecurityCfgPSK = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('123456789')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSecurityCfgPSK.setStatus('current')
wirelessSecurityCfgRekeyingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(900, 65535)).clone(900)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSecurityCfgRekeyingInterval.setStatus('current')
wirelessSecurityCfgEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 1, 1, 1, 10), RowStatus().clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSecurityCfgEntryStatus.setStatus('current')
wirelessSecurityCfgNetworkSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 1, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 32)).clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSecurityCfgNetworkSecret.setStatus('current')
wirelessSecurityCfgKey2 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 1, 1, 1, 12), WEPKeyType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSecurityCfgKey2.setStatus('current')
wirelessSecurityCfgKey3 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 1, 1, 1, 13), WEPKeyType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSecurityCfgKey3.setStatus('current')
wirelessSecurityCfgKey4 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 1, 1, 1, 14), WEPKeyType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSecurityCfgKey4.setStatus('current')
radiusSrvProfileTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2, 1), )
if mibBuilder.loadTexts: radiusSrvProfileTable.setStatus('current')
radiusSrvProfileTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "radiusSrvProfileTableIndex"), (0, "PROXIM-MIB", "radiusSrvProfileTableSecIndex"))
if mibBuilder.loadTexts: radiusSrvProfileTableEntry.setStatus('current')
radiusSrvProfileTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusSrvProfileTableIndex.setStatus('current')
radiusSrvProfileTableSecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusSrvProfileTableSecIndex.setStatus('current')
radiusSrvProfileType = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("primaryAuthticationServer", 1), ("secondaryAuthenticationServer", 2), ("primaryAccountingServer", 3), ("secondaryAccountingServer", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusSrvProfileType.setStatus('current')
radiusSrvIPADDR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2, 1, 1, 4), IpAddress().clone(hexValue="a9fe8085")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusSrvIPADDR.setStatus('current')
radiusSrvServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2, 1, 1, 5), Unsigned32().clone(1812)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusSrvServerPort.setStatus('current')
radiusSrvProfileServerSharedSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusSrvProfileServerSharedSecret.setStatus('current')
radiusSrvProfileTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2, 1, 1, 7), RowStatus().clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusSrvProfileTableEntryStatus.setStatus('current')
radiusSupProfileTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2, 2), )
if mibBuilder.loadTexts: radiusSupProfileTable.setStatus('current')
radiusSupProfileTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2, 2, 1), ).setIndexNames((0, "PROXIM-MIB", "radiusSupProfileTableIndex"))
if mibBuilder.loadTexts: radiusSupProfileTableEntry.setStatus('current')
radiusSupProfileTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusSupProfileTableIndex.setStatus('current')
radiusSupProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusSupProfileName.setStatus('current')
radiusSupProfileMaxReTransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusSupProfileMaxReTransmissions.setStatus('current')
radiusSupProfileMsgResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 12)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusSupProfileMsgResponseTime.setStatus('current')
radiusSupProfileReAuthenticationPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(900, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusSupProfileReAuthenticationPeriod.setStatus('current')
radiusSupProfileTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 2, 2, 1, 6), RowStatus().clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusSupProfileTableEntryStatus.setStatus('current')
macaclProfileTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 3, 1), )
if mibBuilder.loadTexts: macaclProfileTable.setStatus('current')
macaclProfileTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 3, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "macaclProfileTableIndex"))
if mibBuilder.loadTexts: macaclProfileTableEntry.setStatus('current')
macaclProfileTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macaclProfileTableIndex.setStatus('current')
macaclProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: macaclProfileName.setStatus('current')
macaclOperationType = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2))).clone('deny')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: macaclOperationType.setStatus('current')
macaclTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 3, 1, 1, 4), RowStatus().clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: macaclTableEntryStatus.setStatus('current')
macaclAddrTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 3, 2), )
if mibBuilder.loadTexts: macaclAddrTable.setStatus('current')
macaclAddrTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 3, 2, 1), ).setIndexNames((0, "PROXIM-MIB", "macaclAddrTableIndex"), (0, "PROXIM-MIB", "macaclAddrTableSecIndex"))
if mibBuilder.loadTexts: macaclAddrTableEntry.setStatus('current')
macaclAddrTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 3, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macaclAddrTableIndex.setStatus('current')
macaclAddrTableSecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 3, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macaclAddrTableSecIndex.setStatus('current')
macaclAddrTableMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 3, 2, 1, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: macaclAddrTableMACAddress.setStatus('current')
macaclAddrComment = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 3, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: macaclAddrComment.setStatus('current')
macaclAddrTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 2, 3, 2, 1, 5), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: macaclAddrTableEntryStatus.setStatus('current')
qosProfileTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 1), )
if mibBuilder.loadTexts: qosProfileTable.setStatus('current')
qosProfileTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "qosProfileTableIndex"))
if mibBuilder.loadTexts: qosProfileTableEntry.setStatus('current')
qosProfileTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosProfileTableIndex.setStatus('current')
qosProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosProfileName.setStatus('current')
qosProfileTablePolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosProfileTablePolicyName.setStatus('current')
qosProfileEDCAProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosProfileEDCAProfileName.setStatus('current')
qosProfileTableQoSNACKStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosProfileTableQoSNACKStatus.setStatus('current')
qoSPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 2), )
if mibBuilder.loadTexts: qoSPolicyTable.setStatus('current')
qoSPolicyTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 2, 1), ).setIndexNames((0, "PROXIM-MIB", "qoSPolicyTableIndex"), (0, "PROXIM-MIB", "qoSPolicyTableSecIndex"))
if mibBuilder.loadTexts: qoSPolicyTableEntry.setStatus('current')
qoSPolicyTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoSPolicyTableIndex.setStatus('current')
qoSPolicyTableSecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoSPolicyTableSecIndex.setStatus('current')
qoSPolicyTablePolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoSPolicyTablePolicyName.setStatus('current')
qoSPolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inboundLayer2", 1), ("inboundLayer3", 2), ("outboundLayer2", 3), ("outboundLayer3", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoSPolicyType.setStatus('current')
qoSPolicyPriorityMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoSPolicyPriorityMapping.setStatus('current')
qoSPolicyMarkingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("notSupported", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoSPolicyMarkingStatus.setStatus('current')
qoSPolicyTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qoSPolicyTableEntryStatus.setStatus('current')
wirelessQoSEDCATable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 3, 1), )
if mibBuilder.loadTexts: wirelessQoSEDCATable.setStatus('current')
wirelessQoSEDCATableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 3, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "wirelessQoSEDCATableIndex"), (0, "PROXIM-MIB", "wirelessQoSEDCATableSecIndex"))
if mibBuilder.loadTexts: wirelessQoSEDCATableEntry.setStatus('current')
wirelessQoSEDCATableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessQoSEDCATableIndex.setStatus('current')
wirelessQoSEDCATableSecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 3, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessQoSEDCATableSecIndex.setStatus('current')
wirelessQoSEDCATableProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessQoSEDCATableProfileName.setStatus('current')
wirelessQoSEDCATableCWmin = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 3, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessQoSEDCATableCWmin.setStatus('current')
wirelessQoSEDCATableCWmax = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 3, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessQoSEDCATableCWmax.setStatus('current')
wirelessQoSEDCATableAIFSN = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 3, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessQoSEDCATableAIFSN.setStatus('current')
wirelessQoSEDCATableTXOP = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 3, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessQoSEDCATableTXOP.setStatus('current')
wirelessQoSEDCATableACM = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessQoSEDCATableACM.setStatus('current')
wirelessQoSEDCATableAPCWmin = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 3, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessQoSEDCATableAPCWmin.setStatus('current')
wirelessQoSEDCATableAPCWmax = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 3, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessQoSEDCATableAPCWmax.setStatus('current')
wirelessQoSEDCATableAPAIFSN = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 3, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessQoSEDCATableAPAIFSN.setStatus('current')
wirelessQoSEDCATableAPTXOP = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 3, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessQoSEDCATableAPTXOP.setStatus('current')
wirelessQoSEDCATableAPACM = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessQoSEDCATableAPACM.setStatus('current')
l2l3QoSDot1DToDot1pMappingTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 4, 1), )
if mibBuilder.loadTexts: l2l3QoSDot1DToDot1pMappingTable.setStatus('current')
l2l3QoSDot1DToDot1pMappingTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 4, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "l2l3QoSDot1DToDot1pMappingTableIndex"), (0, "PROXIM-MIB", "l2l3QoSDot1dPriority"))
if mibBuilder.loadTexts: l2l3QoSDot1DToDot1pMappingTableEntry.setStatus('current')
l2l3QoSDot1DToDot1pMappingTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2l3QoSDot1DToDot1pMappingTableIndex.setStatus('current')
l2l3QoSDot1dPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 4, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2l3QoSDot1dPriority.setStatus('current')
l2l3QoSDot1pPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 4, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2l3QoSDot1pPriority.setStatus('current')
l2l3QoSDot1DToIPDSCPMappingTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 4, 2), )
if mibBuilder.loadTexts: l2l3QoSDot1DToIPDSCPMappingTable.setStatus('current')
l2l3QoSDot1DToIPDSCPMappingTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 4, 2, 1), ).setIndexNames((0, "PROXIM-MIB", "l2l3QoSDot1DToIPDSCPMappingTableIndex"), (0, "PROXIM-MIB", "l2l3QoSDot1dPriorityIPDSCP"))
if mibBuilder.loadTexts: l2l3QoSDot1DToIPDSCPMappingTableEntry.setStatus('current')
l2l3QoSDot1DToIPDSCPMappingTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 4, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2l3QoSDot1DToIPDSCPMappingTableIndex.setStatus('current')
l2l3QoSDot1dPriorityIPDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 4, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2l3QoSDot1dPriorityIPDSCP.setStatus('current')
l2l3QoSDSCPPriorityLowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 4, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2l3QoSDSCPPriorityLowerLimit.setStatus('current')
l2l3QoSDSCPPriorityUpperLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 4, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2l3QoSDSCPPriorityUpperLimit.setStatus('current')
worpQoSPIRMacTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 1), )
if mibBuilder.loadTexts: worpQoSPIRMacTable.setStatus('current')
worpQoSPIRMacTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "worpQoSPIRMacTableIndex"))
if mibBuilder.loadTexts: worpQoSPIRMacTableEntry.setStatus('current')
worpQoSPIRMacTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpQoSPIRMacTableIndex.setStatus('current')
worpQoSPIRMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 1, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRMacAddr.setStatus('current')
worpQoSPIRMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 1, 1, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRMacMask.setStatus('current')
worpQoSPIRMacComment = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 1, 1, 4), DisplayString().clone('default-mac')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRMacComment.setStatus('current')
worpQoSPIRMacTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 1, 1, 5), RowStatus().clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRMacTableEntryStatus.setStatus('current')
worpQoSPIRIPTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 2), )
if mibBuilder.loadTexts: worpQoSPIRIPTable.setStatus('current')
worpQoSPIRIPTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 2, 1), ).setIndexNames((0, "PROXIM-MIB", "worpQoSPIRIPTableIndex"))
if mibBuilder.loadTexts: worpQoSPIRIPTableEntry.setStatus('current')
worpQoSPIRIPTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpQoSPIRIPTableIndex.setStatus('current')
worpQoSPIRIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRIPAddr.setStatus('current')
worpQoSPIRIPSubMask = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 2, 1, 3), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRIPSubMask.setStatus('current')
worpQoSPIRIPComment = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 2, 1, 4), DisplayString().clone('default-ip')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRIPComment.setStatus('current')
worpQoSPIRIPTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 2, 1, 5), RowStatus().clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRIPTableEntryStatus.setStatus('current')
worpQoSPIRPortTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 3), )
if mibBuilder.loadTexts: worpQoSPIRPortTable.setStatus('current')
worpQoSPIRPortTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 3, 1), ).setIndexNames((0, "PROXIM-MIB", "worpQoSPIRPortTableIndex"))
if mibBuilder.loadTexts: worpQoSPIRPortTableEntry.setStatus('current')
worpQoSPIRPortTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpQoSPIRPortTableIndex.setStatus('current')
worpQoSPIRStartPort = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRStartPort.setStatus('current')
worpQoSPIREndPort = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIREndPort.setStatus('current')
worpQoSPIRPortComment = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 3, 1, 4), DisplayString().clone('default-port')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRPortComment.setStatus('current')
worpQoSPIRPortTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 3, 1, 5), RowStatus().clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRPortTableEntryStatus.setStatus('current')
worpQoSPIRMapTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 4), )
if mibBuilder.loadTexts: worpQoSPIRMapTable.setStatus('current')
worpQoSPIRMapTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 4, 1), ).setIndexNames((0, "PROXIM-MIB", "worpQoSPIRMapTableIndex"))
if mibBuilder.loadTexts: worpQoSPIRMapTableEntry.setStatus('current')
worpQoSPIRMapTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpQoSPIRMapTableIndex.setStatus('current')
worpQoSPIRMapRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpQoSPIRMapRuleName.setStatus('current')
worpQoSPIRMapSrcMacIndexList = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 4, 1, 3), DisplayString().clone('0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRMapSrcMacIndexList.setStatus('current')
worpQoSPIRMapDstMacIndexList = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 4, 1, 4), DisplayString().clone('0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRMapDstMacIndexList.setStatus('current')
worpQoSPIRMapSrcIpAddrIndexList = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 4, 1, 5), DisplayString().clone('0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRMapSrcIpAddrIndexList.setStatus('current')
worpQoSPIRMapDstIpAddrIndexList = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 4, 1, 6), DisplayString().clone('0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRMapDstIpAddrIndexList.setStatus('current')
worpQoSPIRMapSrcPortIndexList = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 4, 1, 7), DisplayString().clone('0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRMapSrcPortIndexList.setStatus('current')
worpQoSPIRMapDstPortIndexList = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 4, 1, 8), DisplayString().clone('0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRMapDstPortIndexList.setStatus('current')
worpQoSPIRTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5), )
if mibBuilder.loadTexts: worpQoSPIRTable.setStatus('current')
worpQoSPIRTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5, 1), ).setIndexNames((0, "PROXIM-MIB", "worpQoSPIRTableIndex"))
if mibBuilder.loadTexts: worpQoSPIRTableEntry.setStatus('current')
worpQoSPIRTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpQoSPIRTableIndex.setStatus('current')
worpQoSPIRRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5, 1, 2), DisplayString().clone('default-pir')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRRuleName.setStatus('current')
worpQoSPIRRuleBitMask = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRRuleBitMask.setStatus('current')
worpQoSPIRIPToSLow = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRIPToSLow.setStatus('current')
worpQoSPIRIPToSHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRIPToSHigh.setStatus('current')
worpQoSPIRIPToSMask = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRIPToSMask.setStatus('current')
worpQoSPIRIPProtocolIds = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5, 1, 7), DisplayString().clone('0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRIPProtocolIds.setStatus('current')
worpQoSPIREtherPriorityLow = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIREtherPriorityLow.setStatus('current')
worpQoSPIREtherPriorityHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIREtherPriorityHigh.setStatus('current')
worpQoSPIRVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5, 1, 10), VlanId().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRVlanId.setStatus('current')
worpQoSPIREtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dix-snap", 1), ("dsap", 2))).clone('dix-snap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIREtherType.setStatus('current')
worpQoSPIREtherValue = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIREtherValue.setStatus('current')
worpQoSPIRPPPoEEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRPPPoEEncapsulation.setStatus('current')
worpQoSPIRPPPoEProtocolId = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRPPPoEProtocolId.setStatus('current')
worpQoSPIRMapTableIndexVal = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpQoSPIRMapTableIndexVal.setStatus('current')
worpQoSPIRTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 5, 1, 16), RowStatus().clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSPIRTableEntryStatus.setStatus('current')
worpQoSSFClassTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 6), )
if mibBuilder.loadTexts: worpQoSSFClassTable.setStatus('current')
worpQoSSFClassTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 6, 1), ).setIndexNames((0, "PROXIM-MIB", "worpQoSSFClassTableIndex"))
if mibBuilder.loadTexts: worpQoSSFClassTableEntry.setStatus('current')
worpQoSSFClassTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpQoSSFClassTableIndex.setStatus('current')
worpQoSSFClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 6, 1, 2), DisplayString().clone('default-sfc')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSSFClassName.setStatus('current')
worpQoSSFClassSchedularType = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rtpS", 1), ("be", 2))).clone('be')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSSFClassSchedularType.setStatus('current')
worpQoSSFClassDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uplink", 1), ("downlink", 2))).clone('downlink')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSSFClassDirection.setStatus('current')
worpQoSSFClassStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("in-active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpQoSSFClassStatus.setStatus('current')
worpQoSSFClassMIR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 6, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(8, 307200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSSFClassMIR.setStatus('current')
worpQoSSFClassCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 6, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 307200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSSFClassCIR.setStatus('current')
worpQoSSFClassMaxLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 6, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 100)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSSFClassMaxLatency.setStatus('current')
worpQoSSFClassTolerableJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 6, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSSFClassTolerableJitter.setStatus('current')
worpQoSSFClassTrafficPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 6, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSSFClassTrafficPriority.setStatus('current')
worpQoSSFClassNumOfMesgInBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 6, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSSFClassNumOfMesgInBurst.setStatus('current')
worpQoSSFClassTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 6, 1, 12), RowStatus().clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSSFClassTableEntryStatus.setStatus('current')
worpQoSClassTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 7), )
if mibBuilder.loadTexts: worpQoSClassTable.setStatus('current')
worpQoSClassTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 7, 1), ).setIndexNames((0, "PROXIM-MIB", "worpQoSClassTableIndex"), (0, "PROXIM-MIB", "worpQoSSFClassTableIndex"), (0, "PROXIM-MIB", "worpQoSPIRTableIndex"))
if mibBuilder.loadTexts: worpQoSClassTableEntry.setStatus('current')
worpQoSClassTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpQoSClassTableIndex.setStatus('current')
worpQoSClassSFCTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpQoSClassSFCTableIndex.setStatus('current')
worpQoSClassPIRTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 7, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpQoSClassPIRTableIndex.setStatus('current')
worpQoSClassSFCValue = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 7, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSClassSFCValue.setStatus('current')
worpQoSClassPIRValue = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 7, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSClassPIRValue.setStatus('current')
worpQoSClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 7, 1, 6), DisplayString().clone('default-class')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSClassName.setStatus('current')
worpQoSClassPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 7, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSClassPriority.setStatus('current')
worpQoSClassTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 7, 1, 8), RowStatus().clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSClassTableEntryStatus.setStatus('current')
worpQoSSUTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 8), )
if mibBuilder.loadTexts: worpQoSSUTable.setStatus('current')
worpQoSSUTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 8, 1), ).setIndexNames((0, "PROXIM-MIB", "worpQoSSUTableIndex"))
if mibBuilder.loadTexts: worpQoSSUTableEntry.setStatus('current')
worpQoSSUTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 250))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpQoSSUTableIndex.setStatus('current')
worpQoSSUMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 8, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSSUMACAddress.setStatus('current')
worpQoSSUQoSClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 8, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSSUQoSClassIndex.setStatus('current')
worpQoSSUComment = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 8, 1, 4), DisplayString().clone('default-su')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSSUComment.setStatus('current')
worpQoSSUTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 8, 1, 5), RowStatus().clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSSUTableEntryStatus.setStatus('current')
worpQoSDefaultClass = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSDefaultClass.setStatus('current')
worpQoSL2BroadcastClass = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 3, 5, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpQoSL2BroadcastClass.setStatus('current')
netIpCfgTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 1), )
if mibBuilder.loadTexts: netIpCfgTable.setStatus('current')
netIpCfgTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "netIpCfgTableIndex"))
if mibBuilder.loadTexts: netIpCfgTableEntry.setStatus('current')
netIpCfgTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netIpCfgTableIndex.setStatus('current')
netIpCfgIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 1, 1, 2), IpAddress().clone(hexValue="a9fe8084")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netIpCfgIPAddress.setStatus('current')
netIpCfgSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 1, 1, 3), IpAddress().clone(hexValue="ffff0000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netIpCfgSubnetMask.setStatus('current')
netIpCfgDefaultRouterIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netIpCfgDefaultRouterIPAddress.setStatus('deprecated')
netIpCfgAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2))).clone('static')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netIpCfgAddressType.setStatus('current')
netIpWirelessCfgTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 2), )
if mibBuilder.loadTexts: netIpWirelessCfgTable.setStatus('current')
netIpWirelessCfgTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 2, 1), ).setIndexNames((0, "PROXIM-MIB", "netIpWirelessCfgTableIndex"))
if mibBuilder.loadTexts: netIpWirelessCfgTableEntry.setStatus('current')
netIpWirelessCfgTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netIpWirelessCfgTableIndex.setStatus('current')
netIpWirelessCfgIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netIpWirelessCfgIPAddress.setStatus('current')
netIpWirelessCfgSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netIpWirelessCfgSubnetMask.setStatus('current')
netIpStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 3), )
if mibBuilder.loadTexts: netIpStaticRouteTable.setStatus('current')
netIpStaticRouteTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 3, 1), ).setIndexNames((0, "PROXIM-MIB", "netIpStaticRouteTableIndex"))
if mibBuilder.loadTexts: netIpStaticRouteTableEntry.setStatus('current')
netIpStaticRouteTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netIpStaticRouteTableIndex.setStatus('current')
netIpStaticRouteDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netIpStaticRouteDestAddr.setStatus('current')
netIpStaticRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 3, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netIpStaticRouteMask.setStatus('current')
netIpStaticRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netIpStaticRouteNextHop.setStatus('current')
netIpStaticRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netIpStaticRouteMetric.setStatus('current')
netIpStaticRouteTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 1, 3, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netIpStaticRouteTableEntryStatus.setStatus('current')
netCfgClearIntfStats = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("ethernetIntf1", 2), ("ethernetIntf2", 3), ("bridgeStats", 4), ("arpTable", 5), ("wirelessIntf1", 6), ("wirelessIntf2", 7), ("worpIntf1", 8), ("worpIntf2", 9), ("learnTable", 10))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netCfgClearIntfStats.setStatus('current')
netCfgAllIntfDefaultRouterAddr = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netCfgAllIntfDefaultRouterAddr.setStatus('current')
netCfgSupportedInterfaces = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netCfgSupportedInterfaces.setStatus('current')
netCfgStaticRouteStatus = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netCfgStaticRouteStatus.setStatus('current')
wirelessInActivityTimer = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 2, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInActivityTimer.setStatus('deprecated')
ethernetInActivityTimer = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 2, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethernetInActivityTimer.setStatus('current')
netCfgPrimaryDNSIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 2, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netCfgPrimaryDNSIpAddress.setStatus('current')
netCfgSecondaryDNSIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 2, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netCfgSecondaryDNSIpAddress.setStatus('current')
wirelessInActivityTimerInSecs = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 2, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInActivityTimerInSecs.setStatus('current')
natStatus = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: natStatus.setStatus('current')
natPortBindingStatus = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: natPortBindingStatus.setStatus('current')
natStaticPortBindTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 3, 3), )
if mibBuilder.loadTexts: natStaticPortBindTable.setStatus('current')
natStaticPortBindTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 3, 3, 1), ).setIndexNames((0, "PROXIM-MIB", "natStaticPortBindTableIndex"))
if mibBuilder.loadTexts: natStaticPortBindTableEntry.setStatus('current')
natStaticPortBindTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 3, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: natStaticPortBindTableIndex.setStatus('current')
natStaticPortBindLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 3, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: natStaticPortBindLocalAddr.setStatus('current')
natStaticPortBindPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("both", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: natStaticPortBindPortType.setStatus('current')
natStaticPortBindStartPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 3, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: natStaticPortBindStartPortNum.setStatus('current')
natStaticPortBindEndPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 3, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: natStaticPortBindEndPortNum.setStatus('current')
natStaticPortBindTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 3, 3, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: natStaticPortBindTableEntryStatus.setStatus('current')
ripConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ripConfigStatus.setStatus('current')
ripConfigTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 4, 2), )
if mibBuilder.loadTexts: ripConfigTable.setStatus('current')
ripConfigTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 4, 2, 1), ).setIndexNames((0, "PROXIM-MIB", "ripConfigTableIndex"))
if mibBuilder.loadTexts: ripConfigTableEntry.setStatus('current')
ripConfigTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 4, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripConfigTableIndex.setStatus('current')
ripInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripInterfaceName.setStatus('current')
ripInterfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ripInterfaceStatus.setStatus('current')
ripInterfaceAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("simple", 1), ("md5", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ripInterfaceAuthType.setStatus('current')
ripInterfaceAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 4, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ripInterfaceAuthKey.setStatus('current')
ripInterfaceVersionNum = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("v1", 1), ("v2", 2), ("both", 3))).clone('v2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ripInterfaceVersionNum.setStatus('current')
ripReceiveOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 4, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ripReceiveOnly.setStatus('current')
vlanStatus = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanStatus.setStatus('current')
mgmtVLANIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 5, 2), VlanId().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtVLANIdentifier.setStatus('current')
mgmtVLANPriority = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 5, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtVLANPriority.setStatus('current')
vlanEthCfgTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 5, 4), )
if mibBuilder.loadTexts: vlanEthCfgTable.setStatus('current')
vlanEthCfgTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 5, 4, 1), ).setIndexNames((0, "PROXIM-MIB", "vlanEthCfgTableIndex"))
if mibBuilder.loadTexts: vlanEthCfgTableEntry.setStatus('current')
vlanEthCfgTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 5, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanEthCfgTableIndex.setStatus('current')
vlanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 5, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("transparent", 1), ("access", 2), ("trunk", 3))).clone('transparent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanMode.setStatus('current')
accessVLANId = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 5, 4, 1, 3), VlanId().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accessVLANId.setStatus('current')
accessVLANPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 5, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accessVLANPriority.setStatus('current')
untaggedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 5, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: untaggedFrames.setStatus('current')
vlanEthTrunkTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 5, 5), )
if mibBuilder.loadTexts: vlanEthTrunkTable.setStatus('current')
vlanEthTrunkTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 5, 5, 1), ).setIndexNames((0, "PROXIM-MIB", "vlanEthTrunkTableIndex"), (0, "PROXIM-MIB", "vlanEthTrunkTableSecIndex"))
if mibBuilder.loadTexts: vlanEthTrunkTableEntry.setStatus('current')
vlanEthTrunkTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 5, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanEthTrunkTableIndex.setStatus('current')
vlanEthTrunkTableSecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 5, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanEthTrunkTableSecIndex.setStatus('current')
ethVLANTrunkId = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 5, 5, 1, 3), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethVLANTrunkId.setStatus('current')
vlanEthTrunkTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 5, 5, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanEthTrunkTableEntryStatus.setStatus('current')
filteringCtrl = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: filteringCtrl.setStatus('current')
intraBSSFiltering = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: intraBSSFiltering.setStatus('current')
etherProtocolFilteringCtrl = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ethernet", 1), ("wireless", 2), ("allInterfaces", 3), ("disable", 4))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherProtocolFilteringCtrl.setStatus('current')
etherProtocolFilteringType = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("passthru", 1), ("block", 2))).clone('passthru')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherProtocolFilteringType.setStatus('current')
etherProtocolFilterTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 3, 3), )
if mibBuilder.loadTexts: etherProtocolFilterTable.setStatus('current')
etherProtocolFilterTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 3, 3, 1), ).setIndexNames((0, "PROXIM-MIB", "etherProtocolFilterTableIndex"))
if mibBuilder.loadTexts: etherProtocolFilterTableEntry.setStatus('current')
etherProtocolFilterTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 3, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherProtocolFilterTableIndex.setStatus('current')
etherProtocolFilterProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 3, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherProtocolFilterProtocolName.setStatus('current')
etherProtocolFilterProtocolNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 3, 3, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherProtocolFilterProtocolNumber.setStatus('current')
etherprotocolFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("block", 1), ("passthru", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherprotocolFilterStatus.setStatus('current')
etherProtocolFilterTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 3, 3, 1, 5), RowStatus().clone('notInService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherProtocolFilterTableStatus.setStatus('current')
staticMACAddrFilterTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 4, 1), )
if mibBuilder.loadTexts: staticMACAddrFilterTable.setStatus('current')
staticMACAddrFilterTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 4, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "staticMACAddrFilterTableIndex"))
if mibBuilder.loadTexts: staticMACAddrFilterTableEntry.setStatus('current')
staticMACAddrFilterTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staticMACAddrFilterTableIndex.setStatus('current')
staticMACAddrFilterWiredMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 4, 1, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staticMACAddrFilterWiredMACAddress.setStatus('current')
staticMACAddrFilterWiredMACMask = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 4, 1, 1, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staticMACAddrFilterWiredMACMask.setStatus('current')
staticMACAddrFilterWirelessMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 4, 1, 1, 4), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staticMACAddrFilterWirelessMACAddress.setStatus('current')
staticMACAddrFilterWirelessMACMask = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 4, 1, 1, 5), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staticMACAddrFilterWirelessMACMask.setStatus('current')
staticMACAddrFilterComment = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 4, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staticMACAddrFilterComment.setStatus('current')
staticMACAddrFilterTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 4, 1, 1, 7), RowStatus().clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: staticMACAddrFilterTableEntryStatus.setStatus('current')
advancedFilterTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 5, 1), )
if mibBuilder.loadTexts: advancedFilterTable.setStatus('current')
advancedFilterTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 5, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "advancedFilterTableIndex"))
if mibBuilder.loadTexts: advancedFilterTableEntry.setStatus('current')
advancedFilterTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 5, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: advancedFilterTableIndex.setStatus('current')
advancedFilterProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: advancedFilterProtocolName.setStatus('current')
advancedFilterDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ethernet2wireless", 1), ("wireless2ethernet", 2), ("both", 3))).clone('both')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advancedFilterDirection.setStatus('current')
advancedFilterTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 5, 1, 1, 4), RowStatus().clone('notInService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advancedFilterTableEntryStatus.setStatus('current')
tcpudpPortFilterCtrl = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcpudpPortFilterCtrl.setStatus('current')
tcpudpPortFilterTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 6, 2), )
if mibBuilder.loadTexts: tcpudpPortFilterTable.setStatus('current')
tcpudpPortFilterTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 6, 2, 1), ).setIndexNames((0, "PROXIM-MIB", "tcpudpPortFilterTableIndex"))
if mibBuilder.loadTexts: tcpudpPortFilterTableEntry.setStatus('current')
tcpudpPortFilterTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 6, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpudpPortFilterTableIndex.setStatus('current')
tcpudpPortFilterProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 6, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcpudpPortFilterProtocolName.setStatus('current')
tcpudpPortFilterPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 6, 2, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcpudpPortFilterPortNumber.setStatus('current')
tcpudpPortFilterPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("both", 3))).clone('both')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcpudpPortFilterPortType.setStatus('current')
tcpudpPortFilterInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("onlyEthernet", 1), ("onlyWireless", 2), ("allInterfaces", 3))).clone('allInterfaces')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcpudpPortFilterInterface.setStatus('current')
tcpudpPortFilterTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 6, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tcpudpPortFilterTableEntryStatus.setStatus('current')
worpIntraCellBlockingStatus = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingStatus.setStatus('current')
worpIntraCellBlockingMACTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2), )
if mibBuilder.loadTexts: worpIntraCellBlockingMACTable.setStatus('current')
worpIntraCellBlockingMACTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1), ).setIndexNames((0, "PROXIM-MIB", "worpIntraCellBlockingMACTableIndex"))
if mibBuilder.loadTexts: worpIntraCellBlockingMACTableEntry.setStatus('current')
worpIntraCellBlockingMACTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 250))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpIntraCellBlockingMACTableIndex.setStatus('current')
worpIntraCellBlockingMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingMACAddress.setStatus('current')
worpIntraCellBlockingGroupID1 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupID1.setStatus('current')
worpIntraCellBlockingGroupID2 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupID2.setStatus('current')
worpIntraCellBlockingGroupID3 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupID3.setStatus('current')
worpIntraCellBlockingGroupID4 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupID4.setStatus('current')
worpIntraCellBlockingGroupID5 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupID5.setStatus('current')
worpIntraCellBlockingGroupID6 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupID6.setStatus('current')
worpIntraCellBlockingGroupID7 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupID7.setStatus('current')
worpIntraCellBlockingGroupID8 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupID8.setStatus('current')
worpIntraCellBlockingGroupID9 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupID9.setStatus('current')
worpIntraCellBlockingGroupID10 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupID10.setStatus('current')
worpIntraCellBlockingGroupID11 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupID11.setStatus('current')
worpIntraCellBlockingGroupID12 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupID12.setStatus('current')
worpIntraCellBlockingGroupID13 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupID13.setStatus('current')
worpIntraCellBlockingGroupID14 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupID14.setStatus('current')
worpIntraCellBlockingGroupID15 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupID15.setStatus('current')
worpIntraCellBlockingGroupID16 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupID16.setStatus('current')
worpIntraCellBlockingMACTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 2, 1, 19), RowStatus().clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingMACTableEntryStatus.setStatus('current')
worpIntraCellBlockingGroupTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 3), )
if mibBuilder.loadTexts: worpIntraCellBlockingGroupTable.setStatus('current')
worpIntraCellBlockingGroupTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 3, 1), ).setIndexNames((0, "PROXIM-MIB", "worpIntraCellBlockingGroupTableIndex"))
if mibBuilder.loadTexts: worpIntraCellBlockingGroupTableEntry.setStatus('current')
worpIntraCellBlockingGroupTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupTableIndex.setStatus('current')
worpIntraCellBlockingGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupName.setStatus('current')
worpIntraCellBlockingGroupTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 7, 3, 1, 3), RowStatus().clone('notInService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpIntraCellBlockingGroupTableEntryStatus.setStatus('current')
securityGatewayStatus = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: securityGatewayStatus.setStatus('current')
securityGatewayMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 8, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: securityGatewayMacAddress.setStatus('current')
stpFrameForwardStatus = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpFrameForwardStatus.setStatus('current')
stormThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 10, 1), )
if mibBuilder.loadTexts: stormThresholdTable.setStatus('current')
stormThresholdTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 10, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "stormThresholdTableIndex"))
if mibBuilder.loadTexts: stormThresholdTableEntry.setStatus('current')
stormThresholdTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 10, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stormThresholdTableIndex.setStatus('current')
stormFilterInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ethernet", 1), ("wireless", 2))).clone('ethernet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: stormFilterInterface.setStatus('current')
stormMulticastThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stormMulticastThreshold.setStatus('current')
stormBroadcastThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 6, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stormBroadcastThreshold.setStatus('current')
dhcpServerStatus = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("dhcpServer", 2), ("dhcpRelayAgent", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerStatus.setStatus('current')
dhcpMaxLeaseTime = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 2), TimeTicks().subtype(subtypeSpec=ValueRangeConstraint(360000, 17280000)).clone(8640000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpMaxLeaseTime.setStatus('current')
dhcpServerIfTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 3), )
if mibBuilder.loadTexts: dhcpServerIfTable.setStatus('current')
dhcpServerIfTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 3, 1), ).setIndexNames((0, "PROXIM-MIB", "dhcpServerIfTableIndex"))
if mibBuilder.loadTexts: dhcpServerIfTableEntry.setStatus('current')
dhcpServerIfTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpServerIfTableIndex.setStatus('current')
dhcpServerInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bridge", 1), ("ethernet1", 2), ("ethernet2", 3), ("wireless1", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpServerInterfaceType.setStatus('current')
dhcpServerNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 3, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerNetMask.setStatus('current')
dhcpServerDefaultGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerDefaultGateway.setStatus('current')
dhcpServerPrimaryDNS = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 3, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerPrimaryDNS.setStatus('current')
dhcpServerSecondaryDNS = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 3, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerSecondaryDNS.setStatus('current')
dhcpServerDefaultLeaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 3, 1, 7), TimeTicks().subtype(subtypeSpec=ValueRangeConstraint(360000, 17280000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerDefaultLeaseTime.setStatus('current')
dhcpServerIfTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 3, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerIfTableComment.setStatus('current')
dhcpServerIfTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 3, 1, 9), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerIfTableEntryStatus.setStatus('current')
dhcpServerIpPoolTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 4), )
if mibBuilder.loadTexts: dhcpServerIpPoolTable.setStatus('current')
dhcpServerIpPoolTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 4, 1), ).setIndexNames((0, "PROXIM-MIB", "dhcpServerIpPoolTableIndex"))
if mibBuilder.loadTexts: dhcpServerIpPoolTableEntry.setStatus('current')
dhcpServerIpPoolTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpServerIpPoolTableIndex.setStatus('current')
dhcpServerIpPoolInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bridge", 1), ("ethernet1", 2), ("ethernet2", 3), ("wireless1", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerIpPoolInterface.setStatus('current')
dhcpServerIpPoolStartIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 4, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerIpPoolStartIpAddress.setStatus('current')
dhcpServerIpPoolEndIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 4, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerIpPoolEndIpAddress.setStatus('current')
dhcpServerIpPoolTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 1, 4, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerIpPoolTableEntryStatus.setStatus('current')
dhcpRelayServerTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 2, 1), )
if mibBuilder.loadTexts: dhcpRelayServerTable.setStatus('current')
dhcpRelayServerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 2, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "dhcpRelayServerTableIndex"))
if mibBuilder.loadTexts: dhcpRelayServerTableEntry.setStatus('current')
dhcpRelayServerTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelayServerTableIndex.setStatus('current')
dhcpRelayServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 2, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayServerIpAddress.setStatus('current')
dhcpRelayServerTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 7, 2, 1, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayServerTableEntryStatus.setStatus('current')
sysTypeTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 8, 1), )
if mibBuilder.loadTexts: sysTypeTable.setStatus('current')
sysTypeTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 8, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "sysTypeRadioIfIndex"))
if mibBuilder.loadTexts: sysTypeTableEntry.setStatus('current')
sysTypeRadioIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 8, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysTypeRadioIfIndex.setStatus('current')
sysTypeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 8, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTypeMode.setStatus('current')
sysTypeActiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 8, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysTypeActiveMode.setStatus('current')
sysTypeSupportedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 8, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysTypeSupportedMode.setStatus('current')
sysTypeSupportedFreqDomains = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 8, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysTypeSupportedFreqDomains.setStatus('current')
sysTypeFreqDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 8, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("unitedStatesAll", 1), ("unitedStatesAdhoc", 2), ("unitedStates2p4", 3), ("worldAll", 4), ("world4p9GHz", 5), ("world2p4GHz", 6), ("world2p3GHz", 7), ("world2p5GHz", 8), ("canada5GHz", 9), ("europe5p8GHz", 10), ("europe5p4GHz", 11), ("europe2p4GHz", 12), ("russia5GHz", 13), ("taiwan5GHz", 14), ("unitedStates5GHz", 15), ("canada5p8GHz", 16), ("russiaFC", 17), ("japan2p4", 18), ("japan4p9", 19), ("uk5p8GHz", 20), ("world5p9GHz", 21), ("unitedStates5p3And5p8GHz", 22), ("india5p8GHz", 23), ("brazil5p4GHz", 24), ("brazil5p8GHz", 25), ("australia5p4GHz", 26), ("australia5p8GHz", 27)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTypeFreqDomain.setStatus('current')
sysTypeActiveFreqDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 8, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("unitedStatesAll", 1), ("unitedStatesAdhoc", 2), ("unitedStates2p4", 3), ("worldAll", 4), ("world4p9GHz", 5), ("world2p4GHz", 6), ("world2p3GHz", 7), ("world2p5GHz", 8), ("canada5GHz", 9), ("europe5p8GHz", 10), ("europe5p4GHz", 11), ("europe2p4GHz", 12), ("russia5GHz", 13), ("taiwan5GHz", 14), ("unitedStates5GHz", 15), ("canada5p8GHz", 16), ("russiaFC", 17), ("japan2p4", 18), ("japan4p9", 19), ("uk5p8GHz", 20), ("world5p9GHz", 21), ("unitedStates5p3And5p8GHz", 22), ("india5p8GHz", 23), ("brazil5p4GHz", 24), ("brazil5p8GHz", 25), ("australia5p4GHz", 26), ("australia5p8GHz", 27)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysTypeActiveFreqDomain.setStatus('current')
sysNetworkMode = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bridge", 1), ("route", 2))).clone('bridge')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysNetworkMode.setStatus('current')
sysActiveNetworkMode = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bridge", 1), ("route", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysActiveNetworkMode.setStatus('current')
sysConfCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 8, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysConfCountryCode.setStatus('current')
igmpSnoopingGlobalStatus = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpSnoopingGlobalStatus.setStatus('current')
igmpMembershipAgingTimer = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 10, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpMembershipAgingTimer.setStatus('current')
igmpRouterPortAgingTimer = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 10, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpRouterPortAgingTimer.setStatus('current')
igmpForcedFlood = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 1, 10, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpForcedFlood.setStatus('current')
sysCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysCountryCode.setStatus('deprecated')
sysInvMgmtComponentTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 2, 1), )
if mibBuilder.loadTexts: sysInvMgmtComponentTable.setStatus('current')
sysInvMgmtComponentTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 2, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "sysInvMgmtCompTableIndex"))
if mibBuilder.loadTexts: sysInvMgmtComponentTableEntry.setStatus('current')
sysInvMgmtCompTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysInvMgmtCompTableIndex.setStatus('current')
sysInvMgmtCompSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysInvMgmtCompSerialNumber.setStatus('current')
sysInvMgmtCompName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysInvMgmtCompName.setStatus('current')
sysInvMgmtCompId = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysInvMgmtCompId.setStatus('current')
sysInvMgmtCompVariant = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysInvMgmtCompVariant.setStatus('current')
sysInvMgmtCompReleaseVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysInvMgmtCompReleaseVersion.setStatus('current')
sysInvMgmtCompMajorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysInvMgmtCompMajorVersion.setStatus('current')
sysInvMgmtCompMinorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysInvMgmtCompMinorVersion.setStatus('current')
sysInvMgmtSecurityID = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysInvMgmtSecurityID.setStatus('current')
sysInvMgmtDaughterCardAvailability = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysInvMgmtDaughterCardAvailability.setStatus('current')
sysFeatureCtrlID = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFeatureCtrlID.setStatus('current')
sysFeatureNumRadios = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFeatureNumRadios.setStatus('current')
sysFeatureFreqBand = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFeatureFreqBand.setStatus('current')
sysFeatureOutBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFeatureOutBandwidth.setStatus('current')
sysFeatureInBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFeatureInBandwidth.setStatus('current')
sysFeatureOpMode = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFeatureOpMode.setStatus('current')
sysLicFeatureTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 7), )
if mibBuilder.loadTexts: sysLicFeatureTable.setStatus('current')
sysLicFeatureTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 7, 1), ).setIndexNames((0, "PROXIM-MIB", "sysLicFeatureTableIndex"))
if mibBuilder.loadTexts: sysLicFeatureTableEntry.setStatus('current')
sysLicFeatureTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 7, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLicFeatureTableIndex.setStatus('current')
sysLicFeatureType = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 7, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLicFeatureType.setStatus('current')
sysLicFeatureValue = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 7, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLicFeatureValue.setStatus('current')
sysFeatureCumulativeBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFeatureCumulativeBandwidth.setStatus('current')
sysFeatureNumEtherIf = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFeatureNumEtherIf.setStatus('current')
sysFeatureBitmap = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFeatureBitmap.setStatus('current')
sysFeatureNumOfSatellitesAllowed = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFeatureNumOfSatellitesAllowed.setStatus('current')
sysFeatureProductFamily = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tsunamiMP", 1), ("orinocoAP", 2), ("tsunamiQuickBridge", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFeatureProductFamily.setStatus('current')
sysFeatureProductClass = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("indoor", 0), ("outdoor", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFeatureProductClass.setStatus('current')
sysLicRadioInfoTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 14), )
if mibBuilder.loadTexts: sysLicRadioInfoTable.setStatus('current')
sysLicRadioInfoTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 14, 1), ).setIndexNames((0, "PROXIM-MIB", "sysLicRadioInfoTableIndex"))
if mibBuilder.loadTexts: sysLicRadioInfoTableEntry.setStatus('current')
sysLicRadioInfoTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 14, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLicRadioInfoTableIndex.setStatus('current')
sysLicRadioCompID = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 14, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLicRadioCompID.setStatus('current')
sysLicRadiovariantID = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 14, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLicRadiovariantID.setStatus('current')
sysLicRadioAntennaType = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("invalid", 0), ("connectorized", 1), ("integrated", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLicRadioAntennaType.setStatus('current')
sysLicRadioAntennaMimoType = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 3, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("invalid", 0), ("oneCrossOneAntenna", 1), ("twoCrossTwoAntenna", 2), ("threeCrossThreeAntenna", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLicRadioAntennaMimoType.setStatus('current')
sysMgmtCfgChangeCnt = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysMgmtCfgChangeCnt.setStatus('current')
sysMgmtCfgCommit = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 4, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysMgmtCfgCommit.setStatus('current')
sysMgmtCfgRestore = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysMgmtCfgRestore.setStatus('current')
sysMgmtCfgErrorMsg = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 4, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysMgmtCfgErrorMsg.setStatus('current')
sysMgmtReboot = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysMgmtReboot.setStatus('current')
sysMgmtFactoryReset = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysMgmtFactoryReset.setStatus('current')
sysMgmtLoadTextConfig = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysMgmtLoadTextConfig.setStatus('current')
sysContactEmail = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 32)).clone('user@domain.com')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysContactEmail.setStatus('current')
sysContactPhoneNumber = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 5, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 32)).clone('1234567890')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysContactPhoneNumber.setStatus('current')
sysLocationName = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 5, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLocationName.setStatus('current')
sysGPSLongitude = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 5, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysGPSLongitude.setStatus('current')
sysGPSLatitude = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 5, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysGPSLatitude.setStatus('current')
sysGPSAltitude = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 5, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysGPSAltitude.setStatus('current')
productDescr = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 5, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productDescr.setStatus('current')
systemName = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 1, 5, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemName.setStatus('current')
mgmtSnmpReadPassword = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 1), Password()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtSnmpReadPassword.setStatus('current')
mgmtSnmpReadWritePassword = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 2), Password()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtSnmpReadWritePassword.setStatus('current')
mgmtSnmpAccessTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 3), )
if mibBuilder.loadTexts: mgmtSnmpAccessTable.setStatus('current')
mgmtSnmpAccessTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 3, 1), ).setIndexNames((0, "PROXIM-MIB", "mgmtSnmpAccessTableIndex"))
if mibBuilder.loadTexts: mgmtSnmpAccessTableEntry.setStatus('current')
mgmtSnmpAccessTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20)))
if mibBuilder.loadTexts: mgmtSnmpAccessTableIndex.setStatus('current')
mgmtSnmpTrapHostTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 4), )
if mibBuilder.loadTexts: mgmtSnmpTrapHostTable.setStatus('current')
mgmtSnmpTrapHostTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 4, 1), ).setIndexNames((0, "PROXIM-MIB", "mgmtSnmpTrapHostTableIndex"))
if mibBuilder.loadTexts: mgmtSnmpTrapHostTableEntry.setStatus('current')
mgmtSnmpTrapHostTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmtSnmpTrapHostTableIndex.setStatus('current')
mgmtSnmpTrapHostTableIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtSnmpTrapHostTableIPAddress.setStatus('current')
mgmtSnmpTrapHostTablePassword = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 4, 1, 3), Password()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtSnmpTrapHostTablePassword.setStatus('current')
mgmtSnmpTrapHostTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtSnmpTrapHostTableComment.setStatus('current')
mgmtSnmpTrapHostTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 4, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtSnmpTrapHostTableEntryStatus.setStatus('current')
mgmtSnmpVersion = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("snmpv1-v2c", 1), ("snmpv3", 2))).clone('snmpv1-v2c')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtSnmpVersion.setStatus('current')
mgmtSnmpV3SecurityLevel = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("noAuthNoPriv", 2), ("authNoPriv", 3), ("authPriv", 4))).clone('authPriv')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtSnmpV3SecurityLevel.setStatus('current')
mgmtSnmpV3AuthProtocol = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("md5", 2), ("sha", 3))).clone('md5')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtSnmpV3AuthProtocol.setStatus('current')
mgmtSnmpV3AuthPassword = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 8), V3Password()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtSnmpV3AuthPassword.setStatus('current')
mgmtSnmpV3PrivProtocol = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("des", 2), ("aes-128", 3))).clone('des')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtSnmpV3PrivProtocol.setStatus('current')
mgmtSnmpV3PrivPassword = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 2, 10), V3Password()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtSnmpV3PrivPassword.setStatus('current')
httpPassword = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 3, 1), Password().clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpPassword.setStatus('current')
httpPort = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 3, 2), Unsigned32().clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpPort.setStatus('current')
telnetPassword = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 4, 1), Password()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: telnetPassword.setStatus('current')
telnetPort = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 4, 2), Unsigned32().clone(23)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: telnetPort.setStatus('current')
telnetSessions = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 4, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: telnetSessions.setStatus('current')
tftpSrvIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 5, 1), IpAddress().clone(hexValue="0a00000a")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tftpSrvIpAddress.setStatus('current')
tftpFileName = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 5, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tftpFileName.setStatus('current')
tftpFileType = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("config", 1), ("image", 2), ("eventlog", 3), ("templog", 4), ("textConfigFile", 5), ("debuglog", 6))).clone('image')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tftpFileType.setStatus('current')
tftpOpType = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("upload", 1), ("download", 2), ("downloadandReboot", 3), ("none", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tftpOpType.setStatus('current')
tftpOpStatus = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("idle", 1), ("downloadInProgress", 2), ("downloadSuccess", 3), ("downloadFailure", 4), ("signatureCheckInProgress", 5), ("signatureCheckFailed", 6), ("writeOnFlashInProgress", 7), ("writeOnFlashFailed", 8), ("uploadInProgress", 9), ("uploadSuccess", 10), ("uploadFailure", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tftpOpStatus.setStatus('current')
genericTrap = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 6, 1), DisplayString())
if mibBuilder.loadTexts: genericTrap.setStatus('current')
globalTrapStatus = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))))
if mibBuilder.loadTexts: globalTrapStatus.setStatus('current')
allIntAccessControl = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: allIntAccessControl.setStatus('current')
httpAccessControl = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpAccessControl.setStatus('current')
httpsAccessControl = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpsAccessControl.setStatus('current')
snmpAccessControl = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAccessControl.setStatus('current')
telnetAccessControl = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 7, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: telnetAccessControl.setStatus('current')
sshAccessControl = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 7, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sshAccessControl.setStatus('current')
mgmtAccessTableStatus = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 7, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtAccessTableStatus.setStatus('current')
mgmtAccessTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 7, 8), )
if mibBuilder.loadTexts: mgmtAccessTable.setStatus('current')
mgmtAccessTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 7, 8, 1), ).setIndexNames((0, "PROXIM-MIB", "mgmtAccessTableIndex"))
if mibBuilder.loadTexts: mgmtAccessTableEntry.setStatus('current')
mgmtAccessTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 7, 8, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmtAccessTableIndex.setStatus('current')
mgmtAccessTableIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 7, 8, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtAccessTableIpAddress.setStatus('current')
mgmtAccessTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 7, 8, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtAccessTableEntryStatus.setStatus('current')
sshPort = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 8, 1), Unsigned32().clone(22)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sshPort.setStatus('current')
sshSessions = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 2, 8, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sshSessions.setStatus('current')
syslogStatus = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogStatus.setStatus('current')
syslogPriority = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("emergency", 1), ("alert", 2), ("critical", 3), ("error", 4), ("warning", 5), ("notice", 6), ("info", 7), ("debug", 8))).clone('warning')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogPriority.setStatus('current')
syslogReset = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogReset.setStatus('current')
syslogHostTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 1, 4), )
if mibBuilder.loadTexts: syslogHostTable.setStatus('current')
syslogHostTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 1, 4, 1), ).setIndexNames((0, "PROXIM-MIB", "syslogHostTableIndex"))
if mibBuilder.loadTexts: syslogHostTableEntry.setStatus('current')
syslogHostTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 1, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syslogHostTableIndex.setStatus('current')
syslogHostIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 1, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogHostIpAddress.setStatus('current')
syslogHostPort = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 1, 4, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogHostPort.setStatus('current')
syslogHostComment = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 1, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogHostComment.setStatus('current')
syslogHostTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 1, 4, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogHostTableEntryStatus.setStatus('current')
eventLogPriority = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("emergency", 1), ("alert", 2), ("critical", 3), ("error", 4), ("warning", 5), ("notice", 6), ("info", 7), ("debug", 8))).clone('warning')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eventLogPriority.setStatus('current')
eventLogReset = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eventLogReset.setStatus('current')
debugLogBitMask = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 11, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: debugLogBitMask.setStatus('current')
debugLogReset = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: debugLogReset.setStatus('current')
debugLogSize = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 11, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: debugLogSize.setStatus('current')
sntpStatus = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpStatus.setStatus('current')
sntpPrimaryServerName = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('time.nist.gov')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpPrimaryServerName.setStatus('current')
sntpSecondaryServerName = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpSecondaryServerName.setStatus('current')
sntpTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41))).clone(namedValues=NamedValues(("dateline", 1), ("samoa", 2), ("hawaii", 3), ("alaska", 4), ("pacific-us", 5), ("mountain-us", 6), ("arizona", 7), ("central-us", 8), ("mexico-city", 9), ("eastern-us", 10), ("indiana", 11), ("atlantic-canada", 12), ("santiago", 13), ("ewfoundland", 14), ("brasilia", 15), ("buenos-aires", 16), ("mid-atlantic", 17), ("azores", 18), ("london", 19), ("western-europe", 20), ("eastern-europe", 21), ("cairo", 22), ("russia-iraq", 23), ("iran", 24), ("arabian", 25), ("afghanistan", 26), ("pakistan", 27), ("india", 28), ("bangladesh", 29), ("burma", 30), ("bangkok", 31), ("australia-wt", 32), ("hong-kong", 33), ("beijing", 34), ("japan-korea", 35), ("australia-ct", 36), ("australia-et", 37), ("central-pacific", 38), ("new-zealand", 39), ("tonga", 40), ("western-samoa", 41)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpTimeZone.setStatus('current')
sntpDayLightSavingTime = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("plus-two", 1), ("plus-one", 2), ("unchanged", 3), ("minus-one", 4), ("minus-two", 5))).clone('unchanged')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpDayLightSavingTime.setStatus('current')
sntpShowCurrentTime = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 3, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sntpShowCurrentTime.setStatus('current')
wirelessIfStaStatsTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1), )
if mibBuilder.loadTexts: wirelessIfStaStatsTable.setStatus('current')
wirelessIfStaStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "wirelessIfStaStatsTableIndex"), (0, "PROXIM-MIB", "wirelessIfStaStatsTableSecIndex"))
if mibBuilder.loadTexts: wirelessIfStaStatsTableEntry.setStatus('current')
wirelessIfStaStatsTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTableIndex.setStatus('current')
wirelessIfStaStatsTableSecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTableSecIndex.setStatus('current')
wirelessIfStaStatsIfNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsIfNumber.setStatus('current')
wirelessIfStaStatsVAPNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsVAPNumber.setStatus('current')
wirelessIfStaStatsMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsMACAddress.setStatus('current')
wirelessIfStaStatsRxMgmtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxMgmtFrames.setStatus('current')
wirelessIfStaStatsRxControlFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxControlFrames.setStatus('current')
wirelessIfStaStatsRxUnicastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxUnicastFrames.setStatus('current')
wirelessIfStaStatsRxMulticastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxMulticastFrames.setStatus('current')
wirelessIfStaStatsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxBytes.setStatus('current')
wirelessIfStaStatsRxBeacons = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxBeacons.setStatus('current')
wirelessIfStaStatsRxProbeResp = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxProbeResp.setStatus('current')
wirelessIfStaStatsRxDupFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxDupFrames.setStatus('current')
wirelessIfStaStatsRxNoPrivacy = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxNoPrivacy.setStatus('current')
wirelessIfStaStatsRxWepFail = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxWepFail.setStatus('current')
wirelessIfStaStatsRxDeMicFail = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxDeMicFail.setStatus('current')
wirelessIfStaStatsRxDecapFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxDecapFailed.setStatus('current')
wirelessIfStaStatsRxDefragFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxDefragFailed.setStatus('current')
wirelessIfStaStatsRxDisassociationFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxDisassociationFrames.setStatus('current')
wirelessIfStaStatsRxDeauthenticationFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxDeauthenticationFrames.setStatus('current')
wirelessIfStaStatsRxDecryptFailedOnCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxDecryptFailedOnCRC.setStatus('current')
wirelessIfStaStatsRxUnauthPort = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxUnauthPort.setStatus('current')
wirelessIfStaStatsRxUnencrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRxUnencrypted.setStatus('current')
wirelessIfStaStatsTxDataFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxDataFrames.setStatus('current')
wirelessIfStaStatsTxMgmtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxMgmtFrames.setStatus('current')
wirelessIfStaStatsTxUnicastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxUnicastFrames.setStatus('current')
wirelessIfStaStatsTxMulticastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxMulticastFrames.setStatus('current')
wirelessIfStaStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxBytes.setStatus('current')
wirelessIfStaStatsTxProbeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxProbeReq.setStatus('current')
wirelessIfStaStatsTxEospLost = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxEospLost.setStatus('current')
wirelessIfStaStatsTxPSDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxPSDiscard.setStatus('current')
wirelessIfStaStatsTxAssociationFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxAssociationFrames.setStatus('current')
wirelessIfStaStatsTxAssociationFailedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxAssociationFailedFrames.setStatus('current')
wirelessIfStaStatsTxAuthenticationFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxAuthenticationFrames.setStatus('current')
wirelessIfStaStatsTxAuthenticationFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxAuthenticationFailed.setStatus('current')
wirelessIfStaStatsTxDeAuthFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxDeAuthFrames.setStatus('current')
wirelessIfStaStatsTxDeAuthCode = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxDeAuthCode.setStatus('current')
wirelessIfStaStatsTxDisassociation = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxDisassociation.setStatus('current')
wirelessIfStaStatsTxDisassociationCode = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 39), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxDisassociationCode.setStatus('current')
wirelessIfStaStatsFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 40), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsFrequency.setStatus('current')
wirelessIfStaStatsState = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 41), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsState.setStatus('current')
wirelessIfStaStatsRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 42), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsRSSI.setStatus('current')
wirelessIfStaStatsTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 43), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxRate.setStatus('current')
wirelessIfStaStatsAuthenAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 44), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsAuthenAlgorithm.setStatus('current')
wirelessIfStaStatsAssociationID = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 45), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsAssociationID.setStatus('current')
wirelessIfStaStatsVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 46), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsVlanTag.setStatus('current')
wirelessIfStaStatsAssocationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 47), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsAssocationTime.setStatus('current')
wirelessIfStaStatsTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 48), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsTxPower.setStatus('current')
wirelessIfStaStatsInactivityTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 49), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsInactivityTimer.setStatus('current')
wirelessIfStaStatsStationOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 50), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsStationOperatingMode.setStatus('current')
wirelessIfStaStatsHTCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 1, 1, 51), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStaStatsHTCapability.setStatus('current')
wirelessIfWORPStaStatsTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2), )
if mibBuilder.loadTexts: wirelessIfWORPStaStatsTable.setStatus('current')
wirelessIfWORPStaStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1), ).setIndexNames((0, "PROXIM-MIB", "wirelessIfWORPStaStatsTableIndex"))
if mibBuilder.loadTexts: wirelessIfWORPStaStatsTableEntry.setStatus('current')
wirelessIfWORPStaStatsTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsTableIndex.setStatus('current')
wirelessIfWORPStaStatsMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsMacAddress.setStatus('current')
wirelessIfWORPStaStatsSatelliteName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsSatelliteName.setStatus('current')
wirelessIfWORPStaStatsAverageLocalSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsAverageLocalSignal.setStatus('current')
wirelessIfWORPStaStatsAverageLocalNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsAverageLocalNoise.setStatus('current')
wirelessIfWORPStaStatsAverageRemoteSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsAverageRemoteSignal.setStatus('current')
wirelessIfWORPStaStatsAverageRemoteNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsAverageRemoteNoise.setStatus('current')
wirelessIfWORPStaStatsRequestForService = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsRequestForService.setStatus('current')
wirelessIfWORPStaStatsPollData = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsPollData.setStatus('current')
wirelessIfWORPStaStatsPollNoData = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsPollNoData.setStatus('current')
wirelessIfWORPStaStatsReplyData = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsReplyData.setStatus('current')
wirelessIfWORPStaStatsReplyNoData = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsReplyNoData.setStatus('current')
wirelessIfWORPStaStatsSendSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsSendSuccess.setStatus('current')
wirelessIfWORPStaStatsSendRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsSendRetries.setStatus('current')
wirelessIfWORPStaStatsSendFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsSendFailures.setStatus('current')
wirelessIfWORPStaStatsReceiveSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsReceiveSuccess.setStatus('current')
wirelessIfWORPStaStatsReceiveRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsReceiveRetries.setStatus('current')
wirelessIfWORPStaStatsReceiveFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsReceiveFailures.setStatus('current')
wirelessIfWORPStaStatsPollNoReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsPollNoReplies.setStatus('current')
wirelessIfWORPStaStatsLocalTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsLocalTxRate.setStatus('current')
wirelessIfWORPStaStatsRemoteTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsRemoteTxRate.setStatus('current')
wirelessIfWORPStaBridgePort = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaBridgePort.setStatus('current')
wirelessIfWORPStaStatsAverageLocalSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsAverageLocalSNR.setStatus('current')
wirelessIfWORPStaStatsAverageRemoteSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsAverageRemoteSNR.setStatus('current')
wirelessIfWORPStaStatsLocalMimoCtrlSig1 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsLocalMimoCtrlSig1.setStatus('current')
wirelessIfWORPStaStatsLocalMimoCtrlSig2 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsLocalMimoCtrlSig2.setStatus('current')
wirelessIfWORPStaStatsLocalMimoCtrlSig3 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsLocalMimoCtrlSig3.setStatus('current')
wirelessIfWORPStaStatsLocalMimoNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsLocalMimoNoise.setStatus('current')
wirelessIfWORPStaStatsLocalMimoCtrlSNR1 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsLocalMimoCtrlSNR1.setStatus('current')
wirelessIfWORPStaStatsLocalMimoCtrlSNR2 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsLocalMimoCtrlSNR2.setStatus('current')
wirelessIfWORPStaStatsLocalMimoCtrlSNR3 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsLocalMimoCtrlSNR3.setStatus('current')
wirelessIfWORPStaStatsRemoteMimoCtrlSig1 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsRemoteMimoCtrlSig1.setStatus('current')
wirelessIfWORPStaStatsRemoteMimoCtrlSig2 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsRemoteMimoCtrlSig2.setStatus('current')
wirelessIfWORPStaStatsRemoteMimoCtrlSig3 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsRemoteMimoCtrlSig3.setStatus('current')
wirelessIfWORPStaStatsRemoteMimoNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsRemoteMimoNoise.setStatus('current')
wirelessIfWORPStaStatsRemoteMimoCtrlSNR1 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsRemoteMimoCtrlSNR1.setStatus('current')
wirelessIfWORPStaStatsRemoteMimoCtrlSNR2 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsRemoteMimoCtrlSNR2.setStatus('current')
wirelessIfWORPStaStatsRemoteMimoCtrlSNR3 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsRemoteMimoCtrlSNR3.setStatus('current')
wirelessIfWORPStaStatsLocalChainBalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("balanced", 2), ("notBalanced", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsLocalChainBalStatus.setStatus('current')
wirelessIfWORPStaStatsRemoteChainBalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 2, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("balanced", 2), ("notBalanced", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStaStatsRemoteChainBalStatus.setStatus('current')
wirelessIfMonNumOfStaConnected = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfMonNumOfStaConnected.setStatus('current')
wirelessIfWORPStatsTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1), )
if mibBuilder.loadTexts: wirelessIfWORPStatsTable.setStatus('current')
wirelessIfWORPStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "wirelessIfWORPStatsTableIndex"))
if mibBuilder.loadTexts: wirelessIfWORPStatsTableEntry.setStatus('current')
wirelessIfWORPStatsTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsTableIndex.setStatus('current')
wirelessIfWORPStatsAverageLocalSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsAverageLocalSignal.setStatus('current')
wirelessIfWORPStatsAverageLocalNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsAverageLocalNoise.setStatus('current')
wirelessIfWORPStatsAverageRemoteSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsAverageRemoteSignal.setStatus('current')
wirelessIfWORPStatsAverageRemoteNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsAverageRemoteNoise.setStatus('current')
wirelessIfWORPStatsRemotePartners = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsRemotePartners.setStatus('current')
wirelessIfWORPStatsBaseStationAnnounces = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsBaseStationAnnounces.setStatus('current')
wirelessIfWORPStatsRequestForService = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsRequestForService.setStatus('current')
wirelessIfWORPStatsRegistrationRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsRegistrationRequests.setStatus('current')
wirelessIfWORPStatsRegistrationRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsRegistrationRejects.setStatus('current')
wirelessIfWORPStatsAuthenticationRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsAuthenticationRequests.setStatus('current')
wirelessIfWORPStatsAuthenticationConfirms = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsAuthenticationConfirms.setStatus('current')
wirelessIfWORPStatsRegistrationAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsRegistrationAttempts.setStatus('current')
wirelessIfWORPStatsRegistrationIncompletes = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsRegistrationIncompletes.setStatus('current')
wirelessIfWORPStatsRegistrationTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsRegistrationTimeouts.setStatus('current')
wirelessIfWORPStatsRegistrationLastReason = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("noMoreAllowed", 2), ("incorrectParameter", 3), ("roaming", 4), ("timeout", 5), ("lowQuality", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsRegistrationLastReason.setStatus('current')
wirelessIfWORPStatsPollData = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsPollData.setStatus('current')
wirelessIfWORPStatsPollNoData = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsPollNoData.setStatus('current')
wirelessIfWORPStatsReplyData = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsReplyData.setStatus('current')
wirelessIfWORPStatsReplyMoreData = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsReplyMoreData.setStatus('current')
wirelessIfWORPStatsReplyNoData = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsReplyNoData.setStatus('current')
wirelessIfWORPStatsPollNoReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsPollNoReplies.setStatus('current')
wirelessIfWORPStatsSendSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsSendSuccess.setStatus('current')
wirelessIfWORPStatsSendRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsSendRetries.setStatus('current')
wirelessIfWORPStatsSendFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsSendFailures.setStatus('current')
wirelessIfWORPStatsReceiveSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsReceiveSuccess.setStatus('current')
wirelessIfWORPStatsReceiveRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsReceiveRetries.setStatus('current')
wirelessIfWORPStatsReceiveFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsReceiveFailures.setStatus('current')
wirelessIfWORPStatsProvisionedUplinkCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsProvisionedUplinkCIR.setStatus('current')
wirelessIfWORPStatsProvisionedDownlinkCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsProvisionedDownlinkCIR.setStatus('current')
wirelessIfWORPStatsProvisionedUplinkMIR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsProvisionedUplinkMIR.setStatus('current')
wirelessIfWORPStatsProvisionedDownlinkMIR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsProvisionedDownlinkMIR.setStatus('current')
wirelessIfWORPStatsActiveUplinkCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsActiveUplinkCIR.setStatus('current')
wirelessIfWORPStatsActiveDownlinkCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsActiveDownlinkCIR.setStatus('current')
wirelessIfWORPStatsActiveUplinkMIR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsActiveUplinkMIR.setStatus('current')
wirelessIfWORPStatsActiveDownlinkMIR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsActiveDownlinkMIR.setStatus('current')
wirelessIfWORPStatsCurrentUplinkBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsCurrentUplinkBandwidth.setStatus('current')
wirelessIfWORPStatsCurrentDownlinkBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 2, 1, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPStatsCurrentDownlinkBandwidth.setStatus('current')
wirelessIfBlacklistInfoTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 3, 1), )
if mibBuilder.loadTexts: wirelessIfBlacklistInfoTable.setStatus('current')
wirelessIfBlacklistInfoTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 3, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "wirelessIfBlacklistInfoTableIndex"), (0, "PROXIM-MIB", "wirelessIfBlacklistInfoTableSecIndex"))
if mibBuilder.loadTexts: wirelessIfBlacklistInfoTableEntry.setStatus('current')
wirelessIfBlacklistInfoTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfBlacklistInfoTableIndex.setStatus('current')
wirelessIfBlacklistInfoTableSecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfBlacklistInfoTableSecIndex.setStatus('current')
wirelessIfBlacklistedChannelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfBlacklistedChannelNum.setStatus('current')
wirelessIfBlacklistReason = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 3, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfBlacklistReason.setStatus('current')
wirelessIfBlacklistTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 3, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfBlacklistTimeElapsed.setStatus('current')
wirelessIfWORPLinkTestConfTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 1), )
if mibBuilder.loadTexts: wirelessIfWORPLinkTestConfTable.setStatus('current')
wirelessIfWORPLinkTestConfTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "wirelessIfWORPLinkTestConfTableIndex"))
if mibBuilder.loadTexts: wirelessIfWORPLinkTestConfTableEntry.setStatus('current')
wirelessIfWORPLinkTestConfTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestConfTableIndex.setStatus('current')
wirelessIfWORPLinkTestExploreStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("stop", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestExploreStatus.setStatus('current')
wirelessIfWORPLinkTestProgressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 1), ("inProgress", 2), ("stopped", 3), ("timeOut", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestProgressStatus.setStatus('current')
wirelessIfWORPLinkTestIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 1, 1, 4), Unsigned32().clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestIdleTimeout.setStatus('current')
wirelessIfWORPLinkTestStatsTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5), )
if mibBuilder.loadTexts: wirelessIfWORPLinkTestStatsTable.setStatus('current')
wirelessIfWORPLinkTestStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1), ).setIndexNames((0, "PROXIM-MIB", "wirelessIfWORPLinkTestStatsTableIndex"), (0, "PROXIM-MIB", "wirelessIfWORPLinkTestStatsTableSecIndex"))
if mibBuilder.loadTexts: wirelessIfWORPLinkTestStatsTableEntry.setStatus('current')
wirelessIfWORPLinkTestStatsTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestStatsTableIndex.setStatus('current')
wirelessIfWORPLinkTestStatsTableSecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestStatsTableSecIndex.setStatus('current')
wirelessIfWORPLinkTestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestStatus.setStatus('current')
wirelessIfWORPLinkTestStationName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestStationName.setStatus('current')
wirelessIfWORPLinkTestMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestMACAddress.setStatus('current')
wirelessIfWORPLinkTestWORPLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestWORPLinkStatus.setStatus('current')
wirelessIfWORPLinkTestLocalCurSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestLocalCurSignal.setStatus('current')
wirelessIfWORPLinkTestLocalCurNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestLocalCurNoise.setStatus('current')
wirelessIfWORPLinkTestLocalCurSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestLocalCurSNR.setStatus('current')
wirelessIfWORPLinkTestLocalMinSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestLocalMinSignal.setStatus('current')
wirelessIfWORPLinkTestLocalMinNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestLocalMinNoise.setStatus('current')
wirelessIfWORPLinkTestLocalMinSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestLocalMinSNR.setStatus('current')
wirelessIfWORPLinkTestLocalMaxSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestLocalMaxSignal.setStatus('current')
wirelessIfWORPLinkTestLocalMaxNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestLocalMaxNoise.setStatus('current')
wirelessIfWORPLinkTestLocalMaxSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestLocalMaxSNR.setStatus('current')
wirelessIfWORPLinkTestRemoteCurSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestRemoteCurSignal.setStatus('current')
wirelessIfWORPLinkTestRemoteCurNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestRemoteCurNoise.setStatus('current')
wirelessIfWORPLinkTestRemoteCurSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestRemoteCurSNR.setStatus('current')
wirelessIfWORPLinkTestRemoteMinSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestRemoteMinSignal.setStatus('current')
wirelessIfWORPLinkTestRemoteMinNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestRemoteMinNoise.setStatus('current')
wirelessIfWORPLinkTestRemoteMinSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestRemoteMinSNR.setStatus('current')
wirelessIfWORPLinkTestRemoteMaxSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestRemoteMaxSignal.setStatus('current')
wirelessIfWORPLinkTestRemoteMaxNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestRemoteMaxNoise.setStatus('current')
wirelessIfWORPLinkTestRemoteMaxSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 4, 5, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfWORPLinkTestRemoteMaxSNR.setStatus('current')
wirelessIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1), )
if mibBuilder.loadTexts: wirelessIfStatsTable.setStatus('current')
wirelessIfStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "wirelessIfStatsTableIndex"))
if mibBuilder.loadTexts: wirelessIfStatsTableEntry.setStatus('current')
wirelessIfStatsTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStatsTableIndex.setStatus('current')
wirelessIfStatsTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStatsTxPkts.setStatus('current')
wirelessIfStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStatsTxBytes.setStatus('current')
wirelessIfStatsRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStatsRxPkts.setStatus('current')
wirelessIfStatsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStatsRxBytes.setStatus('current')
wirelessIfStatsRxDecryptErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStatsRxDecryptErrors.setStatus('current')
wirelessIfStatsRxCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStatsRxCRCErrors.setStatus('current')
wirelessIfStatsChain0CtlRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStatsChain0CtlRSSI.setStatus('current')
wirelessIfStatsChain1CtlRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStatsChain1CtlRSSI.setStatus('current')
wirelessIfStatsChain2CtlRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStatsChain2CtlRSSI.setStatus('current')
wirelessIfStatsChain0ExtRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStatsChain0ExtRSSI.setStatus('current')
wirelessIfStatsChain1ExtRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStatsChain1ExtRSSI.setStatus('current')
wirelessIfStatsChain2ExtRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStatsChain2ExtRSSI.setStatus('current')
wirelessIfStatsCombinedRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStatsCombinedRSSI.setStatus('current')
wirelessIfStatsPhyErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStatsPhyErrors.setStatus('current')
wirelessIfStatsRadioReTunes = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 4, 5, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessIfStatsRadioReTunes.setStatus('current')
radiusClientAuthStatsTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 1), )
if mibBuilder.loadTexts: radiusClientAuthStatsTable.setStatus('current')
radiusClientAuthStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "radiusClientAuthStatsTableIndex"), (0, "PROXIM-MIB", "radiusClientAuthStatsTableSecIndex"))
if mibBuilder.loadTexts: radiusClientAuthStatsTableEntry.setStatus('current')
radiusClientAuthStatsTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAuthStatsTableIndex.setStatus('current')
radiusClientAuthStatsTableSecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAuthStatsTableSecIndex.setStatus('current')
radiusClientAuthStatsRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAuthStatsRoundTripTime.setStatus('current')
radiusClientAuthStatsRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAuthStatsRequests.setStatus('current')
radiusClientAuthStatsRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAuthStatsRetransmissions.setStatus('current')
radiusClientAuthStatsAccessAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAuthStatsAccessAccepts.setStatus('current')
radiusClientAuthStatsAccessRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAuthStatsAccessRejects.setStatus('current')
radiusClientAuthStatsAccessChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAuthStatsAccessChallenges.setStatus('current')
radiusClientAuthStatsResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAuthStatsResponses.setStatus('current')
radiusClientAuthStatsMalformedResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAuthStatsMalformedResponses.setStatus('current')
radiusClientAuthStatsBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAuthStatsBadAuthenticators.setStatus('current')
radiusClientAuthStatsTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAuthStatsTimeouts.setStatus('current')
radiusClientAuthStatsUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAuthStatsUnknownTypes.setStatus('current')
radiusClientAuthStatsPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAuthStatsPacketsDropped.setStatus('current')
radiusClientAccStatsTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 2), )
if mibBuilder.loadTexts: radiusClientAccStatsTable.setStatus('current')
radiusClientAccStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 2, 1), ).setIndexNames((0, "PROXIM-MIB", "radiusClientAccStatsTableIndex"), (0, "PROXIM-MIB", "radiusClientAccStatsTableSecIndex"))
if mibBuilder.loadTexts: radiusClientAccStatsTableEntry.setStatus('current')
radiusClientAccStatsTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAccStatsTableIndex.setStatus('current')
radiusClientAccStatsTableSecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAccStatsTableSecIndex.setStatus('current')
radiusClientAccStatsRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 2, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAccStatsRoundTripTime.setStatus('current')
radiusClientAccStatsRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAccStatsRequests.setStatus('current')
radiusClientAccStatsRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAccStatsRetransmissions.setStatus('current')
radiusClientAccStatsResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAccStatsResponses.setStatus('current')
radiusClientAccStatsMalformedResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAccStatsMalformedResponses.setStatus('current')
radiusClientAccStatsTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAccStatsTimeouts.setStatus('current')
radiusClientAccStatsUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAccStatsUnknownTypes.setStatus('current')
radiusClientAccStatsPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 5, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusClientAccStatsPacketsDropped.setStatus('current')
wirelessInterfaceCardInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 1, 1)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: wirelessInterfaceCardInitFailure.setStatus('current')
wirelessInterfaceCardRadarInterferenceDetected = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 1, 2)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: wirelessInterfaceCardRadarInterferenceDetected.setStatus('current')
wirelessInterfaceInvalidRegDomain = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 1, 3)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: wirelessInterfaceInvalidRegDomain.setStatus('current')
wirelessInterfaceWorldModeCCNotSet = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 1, 4)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: wirelessInterfaceWorldModeCCNotSet.setStatus('current')
wirelessInterfaceChannelChanged = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 1, 5)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: wirelessInterfaceChannelChanged.setStatus('current')
radiusSrvNotResponding = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 2, 1)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: radiusSrvNotResponding.setStatus('current')
masterAgentExited = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 3, 1)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: masterAgentExited.setStatus('current')
imageDownloadFailed = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 3, 2)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: imageDownloadFailed.setStatus('current')
signatureCheckFailed = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 3, 3)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: signatureCheckFailed.setStatus('current')
configurationAppliedSuccessfully = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 3, 4)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: configurationAppliedSuccessfully.setStatus('current')
invalidConfigFile = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 1)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: invalidConfigFile.setStatus('current')
cpuUsageThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 2)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: cpuUsageThresholdExceeded.setStatus('current')
flashMemoryThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 3)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: flashMemoryThresholdExceeded.setStatus('current')
ramMemoryThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 4)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: ramMemoryThresholdExceeded.setStatus('current')
invalidLicenseFile = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 5)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: invalidLicenseFile.setStatus('current')
pxmModulesInitSuccess = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 6)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: pxmModulesInitSuccess.setStatus('current')
sysMgmtModulesInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 7)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: sysMgmtModulesInitFailure.setStatus('current')
vlanModuleInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 8)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: vlanModuleInitFailure.setStatus('current')
filteringModuleInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 9)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: filteringModuleInitFailure.setStatus('current')
sysutilsModuleInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 10)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: sysutilsModuleInitFailure.setStatus('current')
tftpModuleInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 11)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: tftpModuleInitFailure.setStatus('current')
sntpModuleInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 12)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: sntpModuleInitFailure.setStatus('current')
syslogModuleInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 13)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: syslogModuleInitFailure.setStatus('current')
wlanModuleInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 14)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: wlanModuleInitFailure.setStatus('current')
flashModuleInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 15)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: flashModuleInitFailure.setStatus('current')
snmpModuleInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 16)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: snmpModuleInitFailure.setStatus('current')
systemTempReachedLimits = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 17)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: systemTempReachedLimits.setStatus('current')
dhcpRelayModuleInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 18)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: dhcpRelayModuleInitFailure.setStatus('current')
dhcpServerModuleInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 19)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: dhcpServerModuleInitFailure.setStatus('current')
staticNATModuleInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 20)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: staticNATModuleInitFailure.setStatus('current')
licenseModuleInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 21)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: licenseModuleInitFailure.setStatus('current')
systemFeatureModuleInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 22)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: systemFeatureModuleInitFailure.setStatus('current')
mgmtAccessModuleInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 23)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: mgmtAccessModuleInitFailure.setStatus('current')
routingModuleInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 4, 24)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: routingModuleInitFailure.setStatus('current')
sntpFailure = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 5, 1)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: sntpFailure.setStatus('current')
invalidImage = NotificationType((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 6, 6, 1)).setObjects(("PROXIM-MIB", "genericTrap"))
if mibBuilder.loadTexts: invalidImage.setStatus('current')
worpSiteSurveyOperationTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 1), )
if mibBuilder.loadTexts: worpSiteSurveyOperationTable.setStatus('current')
worpSiteSurveyOperationTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "worpSiteSurveyOperationTableIndex"))
if mibBuilder.loadTexts: worpSiteSurveyOperationTableEntry.setStatus('current')
worpSiteSurveyOperationTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyOperationTableIndex.setStatus('current')
worpSiteSurveyOperationIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyOperationIfName.setStatus('current')
worpSiteSurveyOperationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: worpSiteSurveyOperationStatus.setStatus('current')
worpSiteSurveyTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2), )
if mibBuilder.loadTexts: worpSiteSurveyTable.setStatus('current')
worpSiteSurveyTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1), ).setIndexNames((0, "PROXIM-MIB", "worpSiteSurveyTableIndex"), (0, "PROXIM-MIB", "worpSiteSurveyTableSecIndex"))
if mibBuilder.loadTexts: worpSiteSurveyTableEntry.setStatus('current')
worpSiteSurveyTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyTableIndex.setStatus('current')
worpSiteSurveyTableSecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyTableSecIndex.setStatus('current')
worpSiteSurveyBaseMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyBaseMACAddress.setStatus('current')
worpSiteSurveyBaseName = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyBaseName.setStatus('current')
worpSiteSurveyMaxSatellitesAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyMaxSatellitesAllowed.setStatus('current')
worpSiteSurveyNumSatellitesRegistered = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyNumSatellitesRegistered.setStatus('current')
worpSiteSurveySatelliteRegisteredStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("registered", 1), ("not-Registered", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveySatelliteRegisteredStatus.setStatus('current')
worpSiteSurveyLocalTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyLocalTxRate.setStatus('current')
worpSiteSurveyRemoteTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyRemoteTxRate.setStatus('current')
worpSiteSurveyLocalSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyLocalSignalLevel.setStatus('current')
worpSiteSurveyLocalNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyLocalNoiseLevel.setStatus('current')
worpSiteSurveyLocalSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyLocalSNR.setStatus('current')
worpSiteSurveyRemoteSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyRemoteSignalLevel.setStatus('current')
worpSiteSurveyRemoteNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyRemoteNoiseLevel.setStatus('current')
worpSiteSurveyRemoteSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyRemoteSNR.setStatus('current')
worpSiteSurveyChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyChannel.setStatus('current')
worpSiteSurveyChannelBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyChannelBandwidth.setStatus('current')
worpSiteSurveyChannelRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyChannelRxRate.setStatus('current')
worpSiteSurveyBaseBridgePort = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyBaseBridgePort.setStatus('current')
worpSiteSurveyLocalMimoCtrlSig1 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyLocalMimoCtrlSig1.setStatus('current')
worpSiteSurveyLocalMimoCtrlSig2 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyLocalMimoCtrlSig2.setStatus('current')
worpSiteSurveyLocalMimoCtrlSig3 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyLocalMimoCtrlSig3.setStatus('current')
worpSiteSurveyLocalMimoNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyLocalMimoNoise.setStatus('current')
worpSiteSurveyLocalMimoCtrlSNR1 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyLocalMimoCtrlSNR1.setStatus('current')
worpSiteSurveyLocalMimoCtrlSNR2 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyLocalMimoCtrlSNR2.setStatus('current')
worpSiteSurveyLocalMimoCtrlSNR3 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyLocalMimoCtrlSNR3.setStatus('current')
worpSiteSurveyRemoteMimoCtrlSig1 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyRemoteMimoCtrlSig1.setStatus('current')
worpSiteSurveyRemoteMimoCtrlSig2 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyRemoteMimoCtrlSig2.setStatus('current')
worpSiteSurveyRemoteMimoCtrlSig3 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyRemoteMimoCtrlSig3.setStatus('current')
worpSiteSurveyRemoteMimoNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyRemoteMimoNoise.setStatus('current')
worpSiteSurveyRemoteMimoCtrlSNR1 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyRemoteMimoCtrlSNR1.setStatus('current')
worpSiteSurveyRemoteMimoCtrlSNR2 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyRemoteMimoCtrlSNR2.setStatus('current')
worpSiteSurveyRemoteMimoCtrlSNR3 = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyRemoteMimoCtrlSNR3.setStatus('current')
worpSiteSurveyLocalChainBalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("balanced", 2), ("notBalanced", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyLocalChainBalStatus.setStatus('current')
worpSiteSurveyRemoteChainBalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 7, 1, 2, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("balanced", 2), ("notBalanced", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: worpSiteSurveyRemoteChainBalStatus.setStatus('current')
currentUnitTemp = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentUnitTemp.setStatus('current')
highTempThreshold = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 60)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: highTempThreshold.setStatus('current')
lowTempThreshold = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 60)).clone(-40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lowTempThreshold.setStatus('current')
tempLoggingInterval = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempLoggingInterval.setStatus('current')
tempLogReset = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempLogReset.setStatus('current')
sysMonitorCPUUsage = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 9, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysMonitorCPUUsage.setStatus('current')
sysMonitorRAMUsage = MibScalar((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 9, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysMonitorRAMUsage.setStatus('current')
igmpEth1MCastTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 1, 1), )
if mibBuilder.loadTexts: igmpEth1MCastTable.setStatus('current')
igmpEth1MCastTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 1, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "igmpEth1MCastTableIndex"))
if mibBuilder.loadTexts: igmpEth1MCastTableEntry.setStatus('current')
igmpEth1MCastTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpEth1MCastTableIndex.setStatus('current')
igmpEth1MCastGrpIp = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 1, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpEth1MCastGrpIp.setStatus('current')
igmpEth1MCastGrpMACAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 1, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpEth1MCastGrpMACAddr.setStatus('current')
igmpEth1MCastGrpAgingTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpEth1MCastGrpAgingTimeElapsed.setStatus('current')
igmpEth2MCastTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 1, 2), )
if mibBuilder.loadTexts: igmpEth2MCastTable.setStatus('current')
igmpEth2MCastTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 1, 2, 1), ).setIndexNames((0, "PROXIM-MIB", "igmpEth2MCastTableIndex"))
if mibBuilder.loadTexts: igmpEth2MCastTableEntry.setStatus('current')
igmpEth2MCastTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpEth2MCastTableIndex.setStatus('current')
igmpEth2MCastGrpIp = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 1, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpEth2MCastGrpIp.setStatus('current')
igmpEth2MCastGrpMACAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 1, 2, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpEth2MCastGrpMACAddr.setStatus('current')
igmpEth2MCastGrpAgingTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 1, 2, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpEth2MCastGrpAgingTimeElapsed.setStatus('current')
igmpWireless1MCastTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 2, 1), )
if mibBuilder.loadTexts: igmpWireless1MCastTable.setStatus('current')
igmpWireless1MCastTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 2, 1, 1), ).setIndexNames((0, "PROXIM-MIB", "igmpWireless1MCastTableIndex"))
if mibBuilder.loadTexts: igmpWireless1MCastTableEntry.setStatus('current')
igmpWireless1MCastTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpWireless1MCastTableIndex.setStatus('current')
igmpWireless1MCastGrpIp = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 2, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpWireless1MCastGrpIp.setStatus('current')
igmpWireless1MCastGrpMACAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 2, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpWireless1MCastGrpMACAddr.setStatus('current')
igmpWireless1MCastGrpAgingTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpWireless1MCastGrpAgingTimeElapsed.setStatus('current')
igmpRouterPortListTable = MibTable((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 3), )
if mibBuilder.loadTexts: igmpRouterPortListTable.setStatus('current')
igmpRouterPortListTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 3, 1), ).setIndexNames((0, "PROXIM-MIB", "igmpRouterPortListTableIndex"))
if mibBuilder.loadTexts: igmpRouterPortListTableEntry.setStatus('current')
igmpRouterPortListTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpRouterPortListTableIndex.setStatus('current')
igmpRouterPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpRouterPortNumber.setStatus('current')
igmpRouterAgingTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 841, 1, 1, 3, 10, 3, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpRouterAgingTimeElapsed.setStatus('current')
mibBuilder.exportSymbols("PROXIM-MIB", wirelessQoSEDCATableSecIndex=wirelessQoSEDCATableSecIndex, wirelessIfStaStatsTxAuthenticationFrames=wirelessIfStaStatsTxAuthenticationFrames, proxim=proxim, sysInvMgmt=sysInvMgmt, macaclProfileTableEntry=macaclProfileTableEntry, netIpWirelessCfgSubnetMask=netIpWirelessCfgSubnetMask, worpQoSSFClassSchedularType=worpQoSSFClassSchedularType, wirelessIfStaStatsHTCapability=wirelessIfStaStatsHTCapability, wirelessIfVAPQoSProfileName=wirelessIfVAPQoSProfileName, igmpRouterPortNumber=igmpRouterPortNumber, deviceConfig=deviceConfig, mgmtSnmpTrapHostTableIndex=mgmtSnmpTrapHostTableIndex, wirelessIfBlacklistInfoTable=wirelessIfBlacklistInfoTable, igmpEth2MCastGrpIp=igmpEth2MCastGrpIp, wirelessIfDfsStatus=wirelessIfDfsStatus, dhcpServerIfTableEntryStatus=dhcpServerIfTableEntryStatus, sysLicFeatureTableEntry=sysLicFeatureTableEntry, wirelessIfWORPStaStatsReceiveSuccess=wirelessIfWORPStaStatsReceiveSuccess, wirelessIf11nPropertiesAMPDUMaxFrameSize=wirelessIf11nPropertiesAMPDUMaxFrameSize, operationalTraps=operationalTraps, cpuUsageThresholdExceeded=cpuUsageThresholdExceeded, currentUnitTemp=currentUnitTemp, wirelessIfWORPLinkTestStatus=wirelessIfWORPLinkTestStatus, wirelessIfDDRSRateBackOffInt=wirelessIfDDRSRateBackOffInt, wirelessIfDDRSDefDataRate=wirelessIfDDRSDefDataRate, sysLicRadioAntennaMimoType=sysLicRadioAntennaMimoType, wirelessQoSEDCATableAIFSN=wirelessQoSEDCATableAIFSN, vlanEthTrunkTableEntryStatus=vlanEthTrunkTableEntryStatus, sysInvMgmtCompVariant=sysInvMgmtCompVariant, igmpRouterPortListTableIndex=igmpRouterPortListTableIndex, worpSiteSurveySatelliteRegisteredStatus=worpSiteSurveySatelliteRegisteredStatus, worpQoSPIRPortTableIndex=worpQoSPIRPortTableIndex, wirelessIfDDRSMinReqSNRTableEntry=wirelessIfDDRSMinReqSNRTableEntry, radiusClientStats=radiusClientStats, worpIntraCellBlockingGroupTableEntry=worpIntraCellBlockingGroupTableEntry, sntp=sntp, mgmtAccessControl=mgmtAccessControl, radius=radius, sysInvMgmtCompMinorVersion=sysInvMgmtCompMinorVersion, wirelessIfDDRSDecrReqSNRThrld=wirelessIfDDRSDecrReqSNRThrld, tcpudpPortFilterTableEntryStatus=tcpudpPortFilterTableEntryStatus, sysLicRadioInfoTableIndex=sysLicRadioInfoTableIndex, wirelessIfStaStatsTxAssociationFailedFrames=wirelessIfStaStatsTxAssociationFailedFrames, wirelessSecurity=wirelessSecurity, filteringModuleInitFailure=filteringModuleInitFailure, ethernetIfPropertiesTable=ethernetIfPropertiesTable, InterfaceBitmask=InterfaceBitmask, accessVLANId=accessVLANId, vlan=vlan, worpSiteSurveyLocalTxRate=worpSiteSurveyLocalTxRate, worpQoSPIRIPTableIndex=worpQoSPIRIPTableIndex, mgmtAccessTableEntryStatus=mgmtAccessTableEntryStatus, sysFeatureFreqBand=sysFeatureFreqBand, wirelessIfWORPLinkTestConfTableIndex=wirelessIfWORPLinkTestConfTableIndex, radiusSupProfileReAuthenticationPeriod=radiusSupProfileReAuthenticationPeriod, worpSiteSurveyBaseMACAddress=worpSiteSurveyBaseMACAddress, wirelessIf11nPropertiesTableIndex=wirelessIf11nPropertiesTableIndex, wirelessIfWORPLinkTestWORPLinkStatus=wirelessIfWORPLinkTestWORPLinkStatus, dhcpServerModuleInitFailure=dhcpServerModuleInitFailure, systemName=systemName, ripInterfaceName=ripInterfaceName, sysActiveNetworkMode=sysActiveNetworkMode, httpsAccessControl=httpsAccessControl, wirelessIfWORPStatsReplyNoData=wirelessIfWORPStatsReplyNoData, sysutilsModuleInitFailure=sysutilsModuleInitFailure, worpQoSPIRVlanId=worpQoSPIRVlanId, wirelessIf11nPropertiesFrequencyExtension=wirelessIf11nPropertiesFrequencyExtension, wirelessIfWORPStatsRegistrationIncompletes=wirelessIfWORPStatsRegistrationIncompletes, radiusClientAuthStatsRetransmissions=radiusClientAuthStatsRetransmissions, wirelessIfVAPBroadcastSSID=wirelessIfVAPBroadcastSSID, wirelessIfWORPStaStatsMacAddress=wirelessIfWORPStaStatsMacAddress, wirelessIf11nPropertiesGuardInterval=wirelessIf11nPropertiesGuardInterval, mgmtSnmpV3AuthPassword=mgmtSnmpV3AuthPassword, radiusSrvProfileTableEntry=radiusSrvProfileTableEntry, wirelessIfVAPRTSThreshold=wirelessIfVAPRTSThreshold, mgmtAccessTable=mgmtAccessTable, sntpStatus=sntpStatus, httpAccessControl=httpAccessControl, wirelessIfWORPStaBridgePort=wirelessIfWORPStaBridgePort, worpSiteSurveyNumSatellitesRegistered=worpSiteSurveyNumSatellitesRegistered, igmpRouterPortListTableEntry=igmpRouterPortListTableEntry, wirelessIfWORPLinkTestStatsTableIndex=wirelessIfWORPLinkTestStatsTableIndex, syslogHostTable=syslogHostTable, wirelessIf11nPropertiesSupportedTxAntennas=wirelessIf11nPropertiesSupportedTxAntennas, wirelessIfStaStatsVlanTag=wirelessIfStaStatsVlanTag, wirelessQoS=wirelessQoS, etherProtocolFilteringCtrl=etherProtocolFilteringCtrl, tcpudpPortFilterPortNumber=tcpudpPortFilterPortNumber, wirelessIfWORPLinkTestLocalMaxSignal=wirelessIfWORPLinkTestLocalMaxSignal, l2l3QoSDot1DToIPDSCPMappingTable=l2l3QoSDot1DToIPDSCPMappingTable, sysGPSLatitude=sysGPSLatitude, wirelessIfStaStatsRxUnicastFrames=wirelessIfStaStatsRxUnicastFrames, worpQoSSFClassMaxLatency=worpQoSSFClassMaxLatency, DisplayString20=DisplayString20, wirelessIfWORPLinkTestLocalMaxNoise=wirelessIfWORPLinkTestLocalMaxNoise, radiusClientAccStatsRequests=radiusClientAccStatsRequests, radiusClientAuthStatsMalformedResponses=radiusClientAuthStatsMalformedResponses, wirelessIfWORPStaStatsLocalTxRate=wirelessIfWORPStaStatsLocalTxRate, wirelessIfStaStatsRSSI=wirelessIfStaStatsRSSI, wirelessIfBlacklistInfoTableEntry=wirelessIfBlacklistInfoTableEntry, sysInvMgmtCompMajorVersion=sysInvMgmtCompMajorVersion, wirelessIfWORPStatsSendRetries=wirelessIfWORPStatsSendRetries, radiusSrvProfileTableSecIndex=radiusSrvProfileTableSecIndex, radiusMon=radiusMon, wirelessIfWORPStaStatsRemoteMimoCtrlSig2=wirelessIfWORPStaStatsRemoteMimoCtrlSig2, dhcpRelayServerTableIndex=dhcpRelayServerTableIndex, wirelessIfWORPStatsPollNoData=wirelessIfWORPStatsPollNoData, mgmtSnmpVersion=mgmtSnmpVersion, wirelessIfWORPStaStatsRemoteMimoNoise=wirelessIfWORPStaStatsRemoteMimoNoise, wirelessIfDDRSMaxDataRate=wirelessIfDDRSMaxDataRate, etherProtocolFilterProtocolNumber=etherProtocolFilterProtocolNumber, syslogHostPort=syslogHostPort, natStaticPortBindPortType=natStaticPortBindPortType, worpIntraCellBlockingGroupID7=worpIntraCellBlockingGroupID7, igmpWireless1MCastTableIndex=igmpWireless1MCastTableIndex, etherProtocolFilterTableIndex=etherProtocolFilterTableIndex, netIpWirelessCfgTableIndex=netIpWirelessCfgTableIndex, ethernetIfMACAddress=ethernetIfMACAddress, wirelessIfStaStatsTxEospLost=wirelessIfStaStatsTxEospLost, dhcpServerIfTableIndex=dhcpServerIfTableIndex, wirelessIfStaStatsRxDeauthenticationFrames=wirelessIfStaStatsRxDeauthenticationFrames, wirelessIfDDRSAggressiveIndex=wirelessIfDDRSAggressiveIndex, macaclAddrTableEntryStatus=macaclAddrTableEntryStatus, radiusSrvProfileTableIndex=radiusSrvProfileTableIndex, radiusClientAccStatsTimeouts=radiusClientAccStatsTimeouts, wirelessIfWORPSuperPacketing=wirelessIfWORPSuperPacketing, wirelessIfWORPStaStatsLocalMimoCtrlSNR3=wirelessIfWORPStaStatsLocalMimoCtrlSNR3, securityGatewayStatus=securityGatewayStatus, dhcpServer=dhcpServer, sysFeatureNumRadios=sysFeatureNumRadios, macaclAddrTableMACAddress=macaclAddrTableMACAddress, netCfgPrimaryDNSIpAddress=netCfgPrimaryDNSIpAddress, wirelessInterfaceWorldModeCCNotSet=wirelessInterfaceWorldModeCCNotSet, wirelessIfWORPStaStatsRemoteChainBalStatus=wirelessIfWORPStaStatsRemoteChainBalStatus, qosProfileTable=qosProfileTable, worpIntraCellBlockingMACTableEntry=worpIntraCellBlockingMACTableEntry, dhcpServerSecondaryDNS=dhcpServerSecondaryDNS, radiusClientAccStatsTable=radiusClientAccStatsTable, etherProtocolFilteringType=etherProtocolFilteringType, macaclAddrComment=macaclAddrComment, tftpOpStatus=tftpOpStatus, wirelessInterfaceChannelChanged=wirelessInterfaceChannelChanged, sysMgmtCfgErrorMsg=sysMgmtCfgErrorMsg, worpQoS=worpQoS, wirelessIfStaStatsRxDisassociationFrames=wirelessIfStaStatsRxDisassociationFrames, dhcpRelay=dhcpRelay, wirelessQoSEDCATableCWmax=wirelessQoSEDCATableCWmax, sysFeatureBitmap=sysFeatureBitmap, wirelessIfVAPVLANPriority=wirelessIfVAPVLANPriority, snmpModuleInitFailure=snmpModuleInitFailure, netIpWirelessCfgTable=netIpWirelessCfgTable, l2l3QoSDSCPPriorityUpperLimit=l2l3QoSDSCPPriorityUpperLimit, worpIntraCellBlockingGroupID3=worpIntraCellBlockingGroupID3, wirelessIfDDRSMinReqSNRTableIndex=wirelessIfDDRSMinReqSNRTableIndex, worpQoSSUTable=worpQoSSUTable, wirelessIfWORPStaStatsSatelliteName=wirelessIfWORPStaStatsSatelliteName, wirelessIfWORPStaStatsRemoteMimoCtrlSig3=wirelessIfWORPStaStatsRemoteMimoCtrlSig3, ethernetInActivityTimer=ethernetInActivityTimer, radiusClientAuthStatsTimeouts=radiusClientAuthStatsTimeouts, igmpWireless1MCastGrpAgingTimeElapsed=igmpWireless1MCastGrpAgingTimeElapsed, deviceMon=deviceMon, mgmtVLANIdentifier=mgmtVLANIdentifier, wirelessIfStaStatsTxDeAuthCode=wirelessIfStaStatsTxDeAuthCode, wirelessIfDTIM=wirelessIfDTIM, tcpudpPortFilterCtrl=tcpudpPortFilterCtrl, staticMACAddrFilterTableEntryStatus=staticMACAddrFilterTableEntryStatus, worpIntraCellBlockingMACTableEntryStatus=worpIntraCellBlockingMACTableEntryStatus, wirelessIfStaStatsTxDeAuthFrames=wirelessIfStaStatsTxDeAuthFrames, securityGateway=securityGateway, wirelessIfWORPStatsProvisionedUplinkCIR=wirelessIfWORPStatsProvisionedUplinkCIR, wirelessIfWORPMode=wirelessIfWORPMode, wirelessIfStatsTxPkts=wirelessIfStatsTxPkts, wirelessIfOperationalMode=wirelessIfOperationalMode, wirelessIf11nPropertiesTableEntry=wirelessIf11nPropertiesTableEntry, vlanEthCfgTableEntry=vlanEthCfgTableEntry, wirelessIfBlacklistInfo=wirelessIfBlacklistInfo, sysInvMgmtCompId=sysInvMgmtCompId, sysFeatureNumEtherIf=sysFeatureNumEtherIf, wirelessIfWORPOutputBandwidthLimit=wirelessIfWORPOutputBandwidthLimit, wirelessIfStaStatsRxProbeResp=wirelessIfStaStatsRxProbeResp, wirelessIfWORPStaStatsSendSuccess=wirelessIfWORPStaStatsSendSuccess, qoSPolicyTableEntry=qoSPolicyTableEntry, sysTypeActiveFreqDomain=sysTypeActiveFreqDomain, igmpEth1MCastTable=igmpEth1MCastTable, tftp=tftp, mgmtSnmpTrapHostTable=mgmtSnmpTrapHostTable, qb_8100=qb_8100, wirelessIfWORPLinkTestExploreStatus=wirelessIfWORPLinkTestExploreStatus, worpQoSSUQoSClassIndex=worpQoSSUQoSClassIndex, wirelessIfWORPLinkTestLocalCurSNR=wirelessIfWORPLinkTestLocalCurSNR, worpQoSSFClassDirection=worpQoSSFClassDirection, worpQoSClassName=worpQoSClassName, wirelessIfWORPStatsActiveUplinkCIR=wirelessIfWORPStatsActiveUplinkCIR, worpQoSPIRMacMask=worpQoSPIRMacMask, worpQoSSFClassTable=worpQoSSFClassTable, wirelessIfDDRSMinReqSNRTable=wirelessIfDDRSMinReqSNRTable, worpQoSSFClassStatus=worpQoSSFClassStatus, worpQoSPIRPortTableEntry=worpQoSPIRPortTableEntry, l2l3QoSDSCPPriorityLowerLimit=l2l3QoSDSCPPriorityLowerLimit, worpIntraCellBlockingGroupID9=worpIntraCellBlockingGroupID9, l2l3QoSDot1DToIPDSCPMappingTableEntry=l2l3QoSDot1DToIPDSCPMappingTableEntry, worpQoSPIRMacTableIndex=worpQoSPIRMacTableIndex, wirelessSecurityCfgRekeyingInterval=wirelessSecurityCfgRekeyingInterval, syslogHostTableEntryStatus=syslogHostTableEntryStatus, wirelessIfStatsChain0ExtRSSI=wirelessIfStatsChain0ExtRSSI, dhcpServerIpPoolTableIndex=dhcpServerIpPoolTableIndex, macaclTableEntryStatus=macaclTableEntryStatus, wirelessIfVAPFragmentationThreshold=wirelessIfVAPFragmentationThreshold, natStaticPortBindEndPortNum=natStaticPortBindEndPortNum, systemTraps=systemTraps, tcpudpPortFilterTableIndex=tcpudpPortFilterTableIndex, worpQoSSUComment=worpQoSSUComment, netIpStaticRouteMetric=netIpStaticRouteMetric, tcpudpPortFilter=tcpudpPortFilter, worpSiteSurveyRemoteMimoCtrlSNR1=worpSiteSurveyRemoteMimoCtrlSNR1, sysTypeRadioIfIndex=sysTypeRadioIfIndex, wirelessQoSEDCATableAPAIFSN=wirelessQoSEDCATableAPAIFSN, netIpStaticRouteTable=netIpStaticRouteTable, worpQoSPIRMapSrcPortIndexList=worpQoSPIRMapSrcPortIndexList, worpQoSPIREtherPriorityLow=worpQoSPIREtherPriorityLow, radiusClientAccStatsTableIndex=radiusClientAccStatsTableIndex, wirelessInterfaceCardInitFailure=wirelessInterfaceCardInitFailure, wirelessIfDDRSDecrReTxPercentThrld=wirelessIfDDRSDecrReTxPercentThrld, wirelessIf11nPropertiesAMSDUMaxFrameSize=wirelessIf11nPropertiesAMSDUMaxFrameSize, stormBroadcastThreshold=stormBroadcastThreshold, worpQoSPIREtherType=worpQoSPIREtherType, ripConfigTableEntry=ripConfigTableEntry, worpQoSL2BroadcastClass=worpQoSL2BroadcastClass, wirelessIfDDRSTable=wirelessIfDDRSTable, ap_8000=ap_8000, wirelessIfStaStatsRxNoPrivacy=wirelessIfStaStatsRxNoPrivacy, netIpCfgTableEntry=netIpCfgTableEntry, wlanModuleInitFailure=wlanModuleInitFailure, l2l3QoSDot1dPriorityIPDSCP=l2l3QoSDot1dPriorityIPDSCP, l2l3QoSDot1DToDot1pMappingTable=l2l3QoSDot1DToDot1pMappingTable, worpQoSPIRPortTable=worpQoSPIRPortTable, wirelessIfPropertiesTableEntry=wirelessIfPropertiesTableEntry, filtering=filtering, vlanEthTrunkTable=vlanEthTrunkTable, wirelessIfVAPTableSecIndex=wirelessIfVAPTableSecIndex, wirelessIfWORPStaStatsReplyNoData=wirelessIfWORPStaStatsReplyNoData, wirelessIfWORPStaStatsLocalMimoCtrlSNR1=wirelessIfWORPStaStatsLocalMimoCtrlSNR1, wirelessIf11nPropertiesRxAntennas=wirelessIf11nPropertiesRxAntennas, sysMgmtFactoryReset=sysMgmtFactoryReset, wirelessIfStatsChain2ExtRSSI=wirelessIfStatsChain2ExtRSSI, dhcpServerPrimaryDNS=dhcpServerPrimaryDNS, wirelessIfWORPStatsRegistrationAttempts=wirelessIfWORPStatsRegistrationAttempts, wirelessIfWORPStaStatsReplyData=wirelessIfWORPStaStatsReplyData, wirelessIfStaStatsRxMgmtFrames=wirelessIfStaStatsRxMgmtFrames, siteSurvey=siteSurvey, macaclAddrTableIndex=macaclAddrTableIndex, worpQoSPIRMapSrcMacIndexList=worpQoSPIRMapSrcMacIndexList, sysFeatureOutBandwidth=sysFeatureOutBandwidth, worpIntraCellBlockingGroupID4=worpIntraCellBlockingGroupID4)
mibBuilder.exportSymbols("PROXIM-MIB", worpSiteSurveyRemoteChainBalStatus=worpSiteSurveyRemoteChainBalStatus, systemFeatureModuleInitFailure=systemFeatureModuleInitFailure, igmpEth1MCastGrpAgingTimeElapsed=igmpEth1MCastGrpAgingTimeElapsed, temperature=temperature, netIpCfgTable=netIpCfgTable, staticMACAddrFilterWirelessMACAddress=staticMACAddrFilterWirelessMACAddress, etherProtocolFilterTableEntry=etherProtocolFilterTableEntry, worpIntraCellBlockingGroupID12=worpIntraCellBlockingGroupID12, worpIntraCellBlockingGroupTableIndex=worpIntraCellBlockingGroupTableIndex, wirelessSecurityCfgTableEntry=wirelessSecurityCfgTableEntry, wirelessIfStaStatsRxDecryptFailedOnCRC=wirelessIfStaStatsRxDecryptFailedOnCRC, ObjStatusActive=ObjStatusActive, wirelessIfStaStatsTxUnicastFrames=wirelessIfStaStatsTxUnicastFrames, wirelessIfWORPStatsSendFailures=wirelessIfWORPStatsSendFailures, natPortBindingStatus=natPortBindingStatus, worpQoSSFClassNumOfMesgInBurst=worpQoSSFClassNumOfMesgInBurst, mgmtSnmpAccessTable=mgmtSnmpAccessTable, worpQoSPIRIPTableEntryStatus=worpQoSPIRIPTableEntryStatus, apSecurity=apSecurity, wirelessIfWORPLinkTest=wirelessIfWORPLinkTest, stpFrameForwardStatus=stpFrameForwardStatus, wirelessIfWORPStatsProvisionedDownlinkMIR=wirelessIfWORPStatsProvisionedDownlinkMIR, wirelessIfStaStatsTxDataFrames=wirelessIfStaStatsTxDataFrames, radiusClientAuthStatsPacketsDropped=radiusClientAuthStatsPacketsDropped, netIpCfgSubnetMask=netIpCfgSubnetMask, tftpFileName=tftpFileName, mgmtAccessTableIndex=mgmtAccessTableIndex, mgmtSnmpTrapHostTableIPAddress=mgmtSnmpTrapHostTableIPAddress, wirelessIfWORPStatsPollData=wirelessIfWORPStatsPollData, ripInterfaceAuthType=ripInterfaceAuthType, ripReceiveOnly=ripReceiveOnly, staticMACAddrFilterWiredMACMask=staticMACAddrFilterWiredMACMask, worpSiteSurveyRemoteMimoNoise=worpSiteSurveyRemoteMimoNoise, sysFeatureProductClass=sysFeatureProductClass, wirelessQoSEDCATable=wirelessQoSEDCATable, wirelessIfWORPStatsActiveUplinkMIR=wirelessIfWORPStatsActiveUplinkMIR, highTempThreshold=highTempThreshold, wirelessIfStatsTableIndex=wirelessIfStatsTableIndex, wirelessSecurityCfgNetworkSecret=wirelessSecurityCfgNetworkSecret, dhcpServerIpPoolEndIpAddress=dhcpServerIpPoolEndIpAddress, sysLicFeatureValue=sysLicFeatureValue, snmpAccessControl=snmpAccessControl, igmpWireless1MCastGrpIp=igmpWireless1MCastGrpIp, wirelessIfWORPMTU=wirelessIfWORPMTU, sysLicRadioInfoTableEntry=sysLicRadioInfoTableEntry, worpSiteSurveyRemoteSNR=worpSiteSurveyRemoteSNR, netIpStaticRouteMask=netIpStaticRouteMask, worpSiteSurveyChannelRxRate=worpSiteSurveyChannelRxRate, wirelessIf11nPropertiesAMSDUStatus=wirelessIf11nPropertiesAMSDUStatus, wirelessIfDDRSIncrReTxPercentThrld=wirelessIfDDRSIncrReTxPercentThrld, mgmtSnmpTrapHostTablePassword=mgmtSnmpTrapHostTablePassword, routingModuleInitFailure=routingModuleInitFailure, wirelessIfWORPInputBandwidthLimit=wirelessIfWORPInputBandwidthLimit, sntpFailure=sntpFailure, wirelessIfWORPMaxSatellites=wirelessIfWORPMaxSatellites, wirelessIfWORPStaStatsLocalMimoCtrlSig1=wirelessIfWORPStaStatsLocalMimoCtrlSig1, netCfg=netCfg, stormThresholdTableEntry=stormThresholdTableEntry, worpQoSPIRMapRuleName=worpQoSPIRMapRuleName, wirelessIfWORPStaStatsAverageRemoteSNR=wirelessIfWORPStaStatsAverageRemoteSNR, wirelessIfDDRSRateBlackListInt=wirelessIfDDRSRateBlackListInt, qosProfileTableIndex=qosProfileTableIndex, wirelessIfWORPStatsAuthenticationConfirms=wirelessIfWORPStatsAuthenticationConfirms, staticNATModuleInitFailure=staticNATModuleInitFailure, mgmtAccessTableIpAddress=mgmtAccessTableIpAddress, stormThreshold=stormThreshold, radiusClientAccStatsTableSecIndex=radiusClientAccStatsTableSecIndex, netIpStaticRouteDestAddr=netIpStaticRouteDestAddr, worpIntraCellBlockingGroupID8=worpIntraCellBlockingGroupID8, worpSiteSurveyRemoteTxRate=worpSiteSurveyRemoteTxRate, igmpWireless1MCastTable=igmpWireless1MCastTable, sysMgmtCfgCommit=sysMgmtCfgCommit, dhcpMaxLeaseTime=dhcpMaxLeaseTime, wirelessIfWORPLinkTestProgressStatus=wirelessIfWORPLinkTestProgressStatus, worpSiteSurveyLocalNoiseLevel=worpSiteSurveyLocalNoiseLevel, signatureCheckFailed=signatureCheckFailed, wirelessIfDDRSTableEntry=wirelessIfDDRSTableEntry, lowTempThreshold=lowTempThreshold, wirelessIfWORPLinkTestStatsTableSecIndex=wirelessIfWORPLinkTestStatsTableSecIndex, ethVLANTrunkId=ethVLANTrunkId, wirelessIfWORPStatsRegistrationLastReason=wirelessIfWORPStatsRegistrationLastReason, DisplayString55=DisplayString55, wirelessIfWORPStaStatsAverageLocalSignal=wirelessIfWORPStaStatsAverageLocalSignal, wirelessIfWORPIntfMacAddress=wirelessIfWORPIntfMacAddress, natStaticPortBindTableEntry=natStaticPortBindTableEntry, tempLoggingInterval=tempLoggingInterval, sysConfCountryCode=sysConfCountryCode, worpSiteSurveyLocalSignalLevel=worpSiteSurveyLocalSignalLevel, radiusSupProfileTableEntryStatus=radiusSupProfileTableEntryStatus, wirelessIfStaStatsAuthenAlgorithm=wirelessIfStaStatsAuthenAlgorithm, advancedFilterDirection=advancedFilterDirection, qosProfileName=qosProfileName, worpQoSSFClassTrafficPriority=worpQoSSFClassTrafficPriority, worpIntraCellBlockingGroupID5=worpIntraCellBlockingGroupID5, wirelessIfWORPLinkTestRemoteCurNoise=wirelessIfWORPLinkTestRemoteCurNoise, radiusClientAuthStatsResponses=radiusClientAuthStatsResponses, wirelessIfAntennaGain=wirelessIfAntennaGain, wirelessIfWORPStaStatsReceiveRetries=wirelessIfWORPStaStatsReceiveRetries, wirelessIfWORPStatsTable=wirelessIfWORPStatsTable, staticMACAddrFilterWirelessMACMask=staticMACAddrFilterWirelessMACMask, ethernetIfSupportedSpeed=ethernetIfSupportedSpeed, worpQoSClassTableIndex=worpQoSClassTableIndex, wirelessIfStaStatsTxRate=wirelessIfStaStatsTxRate, worpSiteSurveyRemoteMimoCtrlSig3=worpSiteSurveyRemoteMimoCtrlSig3, wirelessIfStaStatsTable=wirelessIfStaStatsTable, netIp=netIp, tcpudpPortFilterPortType=tcpudpPortFilterPortType, mgmtSnmpTrapHostTableEntry=mgmtSnmpTrapHostTableEntry, sysFeatureOpMode=sysFeatureOpMode, wirelessIfStaStatsAssociationID=wirelessIfStaStatsAssociationID, wirelessIfVAPTableEntry=wirelessIfVAPTableEntry, radiusClientAuthStatsAccessRejects=radiusClientAuthStatsAccessRejects, staticMACAddrFilterTableEntry=staticMACAddrFilterTableEntry, worpSiteSurveyLocalMimoNoise=worpSiteSurveyLocalMimoNoise, tcpudpPortFilterTable=tcpudpPortFilterTable, imageDownloadFailed=imageDownloadFailed, wirelessIfWORPLinkTestLocalMinSignal=wirelessIfWORPLinkTestLocalMinSignal, sshAccessControl=sshAccessControl, untaggedFrames=untaggedFrames, worpQoSClassTableEntryStatus=worpQoSClassTableEntryStatus, dhcpServerIpPoolTableEntryStatus=dhcpServerIpPoolTableEntryStatus, netCfgSupportedInterfaces=netCfgSupportedInterfaces, wirelessIfWORPLinkTestLocalMinNoise=wirelessIfWORPLinkTestLocalMinNoise, igmpEth2MCastGrpMACAddr=igmpEth2MCastGrpMACAddr, wirelessIfStatsRxCRCErrors=wirelessIfStatsRxCRCErrors, radiusClientAuthStatsTableEntry=radiusClientAuthStatsTableEntry, wirelessInterfaceCardRadarInterferenceDetected=wirelessInterfaceCardRadarInterferenceDetected, wirelessIfStatsPhyErrors=wirelessIfStatsPhyErrors, radiusSrvProfileType=radiusSrvProfileType, wirelessIfWORPStatsTableEntry=wirelessIfWORPStatsTableEntry, wirelessQoSEDCATableAPCWmin=wirelessQoSEDCATableAPCWmin, worpIntraCellBlockingGroupID2=worpIntraCellBlockingGroupID2, netIpCfgIPAddress=netIpCfgIPAddress, wirelessQoSEDCATableProfileName=wirelessQoSEDCATableProfileName, worpSiteSurveyLocalMimoCtrlSNR3=worpSiteSurveyLocalMimoCtrlSNR3, wirelessIfCurrentActiveChannel=wirelessIfCurrentActiveChannel, natStaticPortBindTable=natStaticPortBindTable, wirelessIfStatsTableEntry=wirelessIfStatsTableEntry, sysFeatureInBandwidth=sysFeatureInBandwidth, radiusSrvServerPort=radiusSrvServerPort, wirelessSecurityCfgKey2=wirelessSecurityCfgKey2, qoSPolicyTableIndex=qoSPolicyTableIndex, accessVLANPriority=accessVLANPriority, tempLogReset=tempLogReset, ethernetIfPropertiesTableIndex=ethernetIfPropertiesTableIndex, radiusSrvProfileTable=radiusSrvProfileTable, wirelessIfStaStatsTxMulticastFrames=wirelessIfStaStatsTxMulticastFrames, genericTrap=genericTrap, wirelessIfStatsRxBytes=wirelessIfStatsRxBytes, radiusClientAuthStatsTableSecIndex=radiusClientAuthStatsTableSecIndex, wirelessIfChannelWaitTime=wirelessIfChannelWaitTime, wirelessIfPropertiesRadioStatus=wirelessIfPropertiesRadioStatus, worpQoSSFClassTolerableJitter=worpQoSSFClassTolerableJitter, worpSiteSurveyLocalSNR=worpSiteSurveyLocalSNR, wirelessIfWORPTableIndex=wirelessIfWORPTableIndex, l2l3QoS=l2l3QoS, ripInterfaceVersionNum=ripInterfaceVersionNum, wirelessSecurityCfgKey3=wirelessSecurityCfgKey3, wirelessIfWORPStatsRegistrationRejects=wirelessIfWORPStatsRegistrationRejects, natStaticPortBindTableIndex=natStaticPortBindTableIndex, wirelessIfWORPStatsReceiveSuccess=wirelessIfWORPStatsReceiveSuccess, wirelessInterfaceInvalidRegDomain=wirelessInterfaceInvalidRegDomain, vlanEthTrunkTableSecIndex=vlanEthTrunkTableSecIndex, radiusSrvNotResponding=radiusSrvNotResponding, worpIntraCellBlockingGroupID15=worpIntraCellBlockingGroupID15, l2l3QoSDot1DToDot1pMappingTableEntry=l2l3QoSDot1DToDot1pMappingTableEntry, tcpudpPortFilterProtocolName=tcpudpPortFilterProtocolName, sysInvMgmtDaughterCardAvailability=sysInvMgmtDaughterCardAvailability, wirelessIfWORPLinkTestRemoteMinSignal=wirelessIfWORPLinkTestRemoteMinSignal, igmpMembershipAgingTimer=igmpMembershipAgingTimer, dhcpServerIfTableEntry=dhcpServerIfTableEntry, wirelessIfStatsRxPkts=wirelessIfStatsRxPkts, radiusClientAuthStatsRoundTripTime=radiusClientAuthStatsRoundTripTime, mgmtAccessTableStatus=mgmtAccessTableStatus, sntpShowCurrentTime=sntpShowCurrentTime, protocolFilter=protocolFilter, invalidLicenseFile=invalidLicenseFile, PYSNMP_MODULE_ID=proxim, worpQoSPIRMapTableEntry=worpQoSPIRMapTableEntry, worpIntraCellBlockingMACAddress=worpIntraCellBlockingMACAddress, nat=nat, wirelessIfWORPStats=wirelessIfWORPStats, dhcpServerIpPoolTable=dhcpServerIpPoolTable, dhcpServerIpPoolTableEntry=dhcpServerIpPoolTableEntry, netIpStaticRouteTableIndex=netIpStaticRouteTableIndex, wirelessIfWORPStaStatsAverageLocalNoise=wirelessIfWORPStaStatsAverageLocalNoise, netCfgAllIntfDefaultRouterAddr=netCfgAllIntfDefaultRouterAddr, syslogStatus=syslogStatus, dhcpServerIfTable=dhcpServerIfTable, DisplayString80=DisplayString80, wirelessIfStatsTxBytes=wirelessIfStatsTxBytes, l2l3QoSDot1dPriority=l2l3QoSDot1dPriority, vlanEthTrunkTableIndex=vlanEthTrunkTableIndex, wirelessIfWORPLinkTestLocalMinSNR=wirelessIfWORPLinkTestLocalMinSNR, worpQoSSUTableEntryStatus=worpQoSSUTableEntryStatus, qos=qos, sysLicRadiovariantID=sysLicRadiovariantID, macaclAddrTable=macaclAddrTable, qoSPolicyTable=qoSPolicyTable, igmpEthernetSnoopingStats=igmpEthernetSnoopingStats, staticMACAddrFilterWiredMACAddress=staticMACAddrFilterWiredMACAddress, worpQoSPIRRuleName=worpQoSPIRRuleName, igmpSnoopingGlobalStatus=igmpSnoopingGlobalStatus, radiusClientAccStatsPacketsDropped=radiusClientAccStatsPacketsDropped, igmpEth1MCastGrpMACAddr=igmpEth1MCastGrpMACAddr, macaclAddrTableEntry=macaclAddrTableEntry, worpQoSPIRIPTable=worpQoSPIRIPTable, dhcpServerDefaultLeaseTime=dhcpServerDefaultLeaseTime, sshSessions=sshSessions, igmpEth1MCastTableIndex=igmpEth1MCastTableIndex, wirelessIfVAPRadiusMACACLStatus=wirelessIfVAPRadiusMACACLStatus, wirelessIfBlacklistInfoTableIndex=wirelessIfBlacklistInfoTableIndex, wirelessSecurityCfgEncryptionType=wirelessSecurityCfgEncryptionType, sysInvMgmtCompTableIndex=sysInvMgmtCompTableIndex, DisplayString32=DisplayString32, wirelessIfCurrentChannelBandwidth=wirelessIfCurrentChannelBandwidth, wirelessSecurityCfgTable=wirelessSecurityCfgTable, wirelessIfWORPLinkTestLocalCurNoise=wirelessIfWORPLinkTestLocalCurNoise, wirelessIfWORPTable=wirelessIfWORPTable, wirelessSecurityCfgKey1=wirelessSecurityCfgKey1, sysTypeFreqDomain=sysTypeFreqDomain, wirelessIfStaStatsStationOperatingMode=wirelessIfStaStatsStationOperatingMode, wirelessIfSupportedChannelBandwidth=wirelessIfSupportedChannelBandwidth, igmpRouterPortAgingTimer=igmpRouterPortAgingTimer, licenseModuleInitFailure=licenseModuleInitFailure, worpSiteSurveyLocalMimoCtrlSig1=worpSiteSurveyLocalMimoCtrlSig1, wirelessIfWORPStaStatsTableIndex=wirelessIfWORPStaStatsTableIndex, worpQoSPIREndPort=worpQoSPIREndPort, worpSiteSurveyTable=worpSiteSurveyTable, mgmtSnmpReadPassword=mgmtSnmpReadPassword, wireless=wireless, mgmtSnmpReadWritePassword=mgmtSnmpReadWritePassword, flashModuleInitFailure=flashModuleInitFailure, worpSiteSurveyLocalMimoCtrlSig2=worpSiteSurveyLocalMimoCtrlSig2, worpQoSClassTableEntry=worpQoSClassTableEntry, worpSiteSurveyRemoteMimoCtrlSNR3=worpSiteSurveyRemoteMimoCtrlSNR3, productDescr=productDescr, syslog=syslog, worpQoSPIRMapDstIpAddrIndexList=worpQoSPIRMapDstIpAddrIndexList, VlanId=VlanId, mgmtSnmpV3SecurityLevel=mgmtSnmpV3SecurityLevel, sysTypeTableEntry=sysTypeTableEntry, sntpModuleInitFailure=sntpModuleInitFailure, worpSiteSurveyRemoteMimoCtrlSig1=worpSiteSurveyRemoteMimoCtrlSig1, mgmtSnmpTrapHostTableComment=mgmtSnmpTrapHostTableComment, wirelessIfCellSize=wirelessIfCellSize, worpQoSClassTable=worpQoSClassTable, wirelessIfStaStatsRxDupFrames=wirelessIfStaStatsRxDupFrames, sysNetworkMode=sysNetworkMode, wirelessIfWORPStatsAverageRemoteSignal=wirelessIfWORPStatsAverageRemoteSignal, worpSiteSurveyOperationIfName=worpSiteSurveyOperationIfName, worpQoSPIRPortTableEntryStatus=worpQoSPIRPortTableEntryStatus, wirelessIfWORPLinkTestStationName=wirelessIfWORPLinkTestStationName, sysTypeTable=sysTypeTable)
mibBuilder.exportSymbols("PROXIM-MIB", wirelessIf11nPropertiesTxAntennas=wirelessIf11nPropertiesTxAntennas, qoSPolicyPriorityMapping=qoSPolicyPriorityMapping, wirelessIfMonNumOfStaConnected=wirelessIfMonNumOfStaConnected, radiusClientAuthStatsTable=radiusClientAuthStatsTable, worpSiteSurveyLocalChainBalStatus=worpSiteSurveyLocalChainBalStatus, wirelessIfWORPStaStatsPollNoData=wirelessIfWORPStaStatsPollNoData, wirelessIfWORPLinkTestStatsTableEntry=wirelessIfWORPLinkTestStatsTableEntry, wirelessIfWORPAutoMultiFrameBursting=wirelessIfWORPAutoMultiFrameBursting, sysTypeMode=sysTypeMode, wirelessIfWORPLinkTestMACAddress=wirelessIfWORPLinkTestMACAddress, worpQoSSUTableEntry=worpQoSSUTableEntry, igmpRouterPortListTable=igmpRouterPortListTable, wirelessIfWORPSecurityProfileIndex=wirelessIfWORPSecurityProfileIndex, mgmtSnmpAccessTableEntry=mgmtSnmpAccessTableEntry, qoSPolicyTableSecIndex=qoSPolicyTableSecIndex, wirelessIfWORPStaStatsAverageRemoteNoise=wirelessIfWORPStaStatsAverageRemoteNoise, deviceMgmt=deviceMgmt, sysContactEmail=sysContactEmail, mp_8100_cpe=mp_8100_cpe, wirelessIfWORPStaStatsRemoteMimoCtrlSNR2=wirelessIfWORPStaStatsRemoteMimoCtrlSNR2, wirelessIfWORPStatsSendSuccess=wirelessIfWORPStatsSendSuccess, wirelessIfWORPLinkTestConfTable=wirelessIfWORPLinkTestConfTable, wirelessIfWORPLinkTestRemoteMaxNoise=wirelessIfWORPLinkTestRemoteMaxNoise, dhcp=dhcp, wirelessIfPropertiesTableIndex=wirelessIfPropertiesTableIndex, worpQoSSFClassCIR=worpQoSSFClassCIR, mgmtSnmpV3PrivProtocol=mgmtSnmpV3PrivProtocol, wirelessIfVAPSSID=wirelessIfVAPSSID, allIntAccessControl=allIntAccessControl, netIpStaticRouteTableEntryStatus=netIpStaticRouteTableEntryStatus, advancedFilterTableIndex=advancedFilterTableIndex, wirelessIfSupportedChannels=wirelessIfSupportedChannels, sysMonitorRAMUsage=sysMonitorRAMUsage, wirelessIfVAPStatus=wirelessIfVAPStatus, wirelessIfStaStatsFrequency=wirelessIfStaStatsFrequency, worpSiteSurveyRemoteMimoCtrlSNR2=worpSiteSurveyRemoteMimoCtrlSNR2, worpQoSPIRIPToSMask=worpQoSPIRIPToSMask, wirelessIfStaStatsRxUnauthPort=wirelessIfStaStatsRxUnauthPort, wirelessIfWORPStaStatsAverageRemoteSignal=wirelessIfWORPStaStatsAverageRemoteSignal, sysGPSLongitude=sysGPSLongitude, worpQoSSFClassMIR=worpQoSSFClassMIR, wirelessIf11nPropertiesSupportedRxAntennas=wirelessIf11nPropertiesSupportedRxAntennas, wirelessQoSEDCATableAPTXOP=wirelessQoSEDCATableAPTXOP, worpQoSPIRTableIndex=worpQoSPIRTableIndex, netIpCfgDefaultRouterIPAddress=netIpCfgDefaultRouterIPAddress, filteringCtrl=filteringCtrl, worpIntraCellBlockingGroupTable=worpIntraCellBlockingGroupTable, wirelessIfWORPStaStatsRequestForService=wirelessIfWORPStaStatsRequestForService, wirelessIfWORPStaStatsPollNoReplies=wirelessIfWORPStaStatsPollNoReplies, worpQoSPIREtherValue=worpQoSPIREtherValue, wirelessIfStatsChain1CtlRSSI=wirelessIfStatsChain1CtlRSSI, wirelessQoSEDCATableCWmin=wirelessQoSEDCATableCWmin, sshPort=sshPort, wirelessIfWORPStatsTableIndex=wirelessIfWORPStatsTableIndex, radiusClientAuthStatsAccessAccepts=radiusClientAuthStatsAccessAccepts, mgmtAccessModuleInitFailure=mgmtAccessModuleInitFailure, worpSiteSurveyOperationTableEntry=worpSiteSurveyOperationTableEntry, wirelessIfStaStatsRxBytes=wirelessIfStaStatsRxBytes, worpQoSPIRIPToSLow=worpQoSPIRIPToSLow, http=http, debugLogReset=debugLogReset, netIpWirelessCfgTableEntry=netIpWirelessCfgTableEntry, syslogPriority=syslogPriority, worpSiteSurveyLocalMimoCtrlSig3=worpSiteSurveyLocalMimoCtrlSig3, wirelessIfStaStatsIfNumber=wirelessIfStaStatsIfNumber, wirelessIfVAPSecurityProfileName=wirelessIfVAPSecurityProfileName, wirelessSecurityCfgdot1xWepKeyLength=wirelessSecurityCfgdot1xWepKeyLength, worpQoSPIRMacTableEntry=worpQoSPIRMacTableEntry, sysGPSAltitude=sysGPSAltitude, natStaticPortBindLocalAddr=natStaticPortBindLocalAddr, syslogReset=syslogReset, wirelessIfBlacklistInfoTableSecIndex=wirelessIfBlacklistInfoTableSecIndex, netIpStaticRouteTableEntry=netIpStaticRouteTableEntry, wirelessIfDDRSMinReqSNR=wirelessIfDDRSMinReqSNR, radiusClientAuthStatsTableIndex=radiusClientAuthStatsTableIndex, etherProtocolFilterProtocolName=etherProtocolFilterProtocolName, radiusClientAccStatsMalformedResponses=radiusClientAccStatsMalformedResponses, worpQoSPIRIPTableEntry=worpQoSPIRIPTableEntry, wirelessIfWORPStatsReceiveRetries=wirelessIfWORPStatsReceiveRetries, objects=objects, wirelessIfWORPLinkTestRemoteMinSNR=wirelessIfWORPLinkTestRemoteMinSNR, ethernetIfAdminStatus=ethernetIfAdminStatus, wirelessIfWORPStatsAverageLocalSignal=wirelessIfWORPStatsAverageLocalSignal, igmpEth1MCastGrpIp=igmpEth1MCastGrpIp, wirelessIfWORPStatsProvisionedUplinkMIR=wirelessIfWORPStatsProvisionedUplinkMIR, qoSPolicyMarkingStatus=qoSPolicyMarkingStatus, worpIntraCellBlockingGroupID13=worpIntraCellBlockingGroupID13, wirelessIfVAPType=wirelessIfVAPType, radiusSrvIPADDR=radiusSrvIPADDR, wirelessIfStaStatsAssocationTime=wirelessIfStaStatsAssocationTime, qosProfileEDCAProfileName=qosProfileEDCAProfileName, wirelessIfVAPRadiusProfileName=wirelessIfVAPRadiusProfileName, wirelessIfStats=wirelessIfStats, wirelessIfWORPStatsRegistrationTimeouts=wirelessIfWORPStatsRegistrationTimeouts, wirelessIfWORPRadiusProfileIndex=wirelessIfWORPRadiusProfileIndex, sysLicFeatureType=sysLicFeatureType, wirelessIfActiveTPC=wirelessIfActiveTPC, radiusClientAuthStatsAccessChallenges=radiusClientAuthStatsAccessChallenges, sysFeatureNumOfSatellitesAllowed=sysFeatureNumOfSatellitesAllowed, network=network, ethernetIfAutoShutDown=ethernetIfAutoShutDown, wirelessIfStaStatsRxBeacons=wirelessIfStaStatsRxBeacons, wirelessIfWORPStaStatsRemoteMimoCtrlSNR1=wirelessIfWORPStaStatsRemoteMimoCtrlSNR1, radiusSupProfileMaxReTransmissions=radiusSupProfileMaxReTransmissions, wirelessIfStaStatsRxWepFail=wirelessIfStaStatsRxWepFail, wirelessIfWORPMACACLStatus=wirelessIfWORPMACACLStatus, wirelessIfWORPStatsPollNoReplies=wirelessIfWORPStatsPollNoReplies, worpSiteSurveyLocalMimoCtrlSNR1=worpSiteSurveyLocalMimoCtrlSNR1, qosProfileTablePolicyName=qosProfileTablePolicyName, worpQoSPIRTable=worpQoSPIRTable, sysFeatureCumulativeBandwidth=sysFeatureCumulativeBandwidth, wirelessIfStaStatsInactivityTimer=wirelessIfStaStatsInactivityTimer, wirelessIfWORPStatsProvisionedDownlinkCIR=wirelessIfWORPStatsProvisionedDownlinkCIR, ethernetIfPropertiesTableEntry=ethernetIfPropertiesTableEntry, worpQoSPIRIPComment=worpQoSPIRIPComment, worpQoSPIRPortComment=worpQoSPIRPortComment, worpQoSClassPIRTableIndex=worpQoSClassPIRTableIndex, worpIntraCellBlockingGroupID10=worpIntraCellBlockingGroupID10, stormMulticastThreshold=stormMulticastThreshold, igmpEth1MCastTableEntry=igmpEth1MCastTableEntry, wirelessIfDDRSIncrReqSNRThrld=wirelessIfDDRSIncrReqSNRThrld, radiusClientAccStatsUnknownTypes=radiusClientAccStatsUnknownTypes, httpPort=httpPort, wirelessIfWORPBaseStationName=wirelessIfWORPBaseStationName, wirelessIfWORPBandwidthLimitType=wirelessIfWORPBandwidthLimitType, vlanEthTrunkTableEntry=vlanEthTrunkTableEntry, worpSiteSurveyOperationTable=worpSiteSurveyOperationTable, ripConfigTableIndex=ripConfigTableIndex, netCfgStaticRouteStatus=netCfgStaticRouteStatus, vlanModuleInitFailure=vlanModuleInitFailure, wirelessIfWORPRadiusAccStatus=wirelessIfWORPRadiusAccStatus, dhcpRelayServerTable=dhcpRelayServerTable, igmpWireless1MCastGrpMACAddr=igmpWireless1MCastGrpMACAddr, wirelessIfWORPMultiFrameBursting=wirelessIfWORPMultiFrameBursting, netCfgClearIntfStats=netCfgClearIntfStats, sntpTimeZone=sntpTimeZone, dhcpServerNetMask=dhcpServerNetMask, ethernetIfSupportedTxMode=ethernetIfSupportedTxMode, radiusClientAccStatsRoundTripTime=radiusClientAccStatsRoundTripTime, wirelessIfMPOperationalMode=wirelessIfMPOperationalMode, sntpPrimaryServerName=sntpPrimaryServerName, ap_800=ap_800, l2l3QoSDot1DToIPDSCPMappingTableIndex=l2l3QoSDot1DToIPDSCPMappingTableIndex, netIpWirelessCfgIPAddress=netIpWirelessCfgIPAddress, wirelessIfWORPNetworkName=wirelessIfWORPNetworkName, dhcpRelayServerTableEntry=dhcpRelayServerTableEntry, wirelessIfStaStatsRxMulticastFrames=wirelessIfStaStatsRxMulticastFrames, wirelessIfStaStatsTxAssociationFrames=wirelessIfStaStatsTxAssociationFrames, wirelessSecurityCfgEntryStatus=wirelessSecurityCfgEntryStatus, radiusSupProfileName=radiusSupProfileName, sntpDayLightSavingTime=sntpDayLightSavingTime, worpQoSPIRIPAddr=worpQoSPIRIPAddr, vlanStatus=vlanStatus, wirelessIfBlacklistedChannelNum=wirelessIfBlacklistedChannelNum, worpQoSSFClassTableEntryStatus=worpQoSSFClassTableEntryStatus, igmpEth2MCastTable=igmpEth2MCastTable, wirelessIfStatsCombinedRSSI=wirelessIfStatsCombinedRSSI, wirelessIfWORPStatsReceiveFailures=wirelessIfWORPStatsReceiveFailures, wirelessIfWORPStaStatsSendFailures=wirelessIfWORPStaStatsSendFailures, wirelessIfWORPSupportedTxRate=wirelessIfWORPSupportedTxRate, sntpSecondaryServerName=sntpSecondaryServerName, worpQoSPIRMacAddr=worpQoSPIRMacAddr, wirelessIfStaStatsTxPSDiscard=wirelessIfStaStatsTxPSDiscard, dhcpRelayModuleInitFailure=dhcpRelayModuleInitFailure, wirelessIfDDRSChainBalThrld=wirelessIfDDRSChainBalThrld, worpQoSPIRPPPoEProtocolId=worpQoSPIRPPPoEProtocolId, sysLicFeatureTableIndex=sysLicFeatureTableIndex, wirelessIfSupportedOperationalMode=wirelessIfSupportedOperationalMode, worpIntraCellBlockingGroupID14=worpIntraCellBlockingGroupID14, worpSiteSurveyOperationStatus=worpSiteSurveyOperationStatus, wirelessIfStaStats=wirelessIfStaStats, wirelessIfMon=wirelessIfMon, staticMACAddrFilter=staticMACAddrFilter, wirelessIfStaStatsRxDecapFailed=wirelessIfStaStatsRxDecapFailed, worpQoSPIRRuleBitMask=worpQoSPIRRuleBitMask, worpQoSPIRMacTableEntryStatus=worpQoSPIRMacTableEntryStatus, masterAgentExited=masterAgentExited, tftpFileType=tftpFileType, wirelessIfWORPStaStatsTable=wirelessIfWORPStaStatsTable, worpQoSSFClassTableIndex=worpQoSSFClassTableIndex, wirelessIfWORPStatsRegistrationRequests=wirelessIfWORPStatsRegistrationRequests, telnetPassword=telnetPassword, syslogHostTableIndex=syslogHostTableIndex, wirelessIfStaStatsTableIndex=wirelessIfStaStatsTableIndex, radiusSupProfileTable=radiusSupProfileTable, sysFeatureCtrlID=sysFeatureCtrlID, wirelessQoSEDCATableAPACM=wirelessQoSEDCATableAPACM, wirelessIfWORPTxRate=wirelessIfWORPTxRate, wirelessIfWORPLinkTestConfTableEntry=wirelessIfWORPLinkTestConfTableEntry, configurationAppliedSuccessfully=configurationAppliedSuccessfully, worpIntraCellBlockingGroupName=worpIntraCellBlockingGroupName, wirelessInActivityTimer=wirelessInActivityTimer, qoSPolicyType=qoSPolicyType, igmp=igmp, V3Password=V3Password, advancedFilterTableEntryStatus=advancedFilterTableEntryStatus, invalidImage=invalidImage, l2l3QoSDot1DToDot1pMappingTableIndex=l2l3QoSDot1DToDot1pMappingTableIndex, wirelessSecurityCfgKey4=wirelessSecurityCfgKey4, wirelessIfStaStatsTxMgmtFrames=wirelessIfStaStatsTxMgmtFrames, radiusClientAccStatsTableEntry=radiusClientAccStatsTableEntry, netIpCfgAddressType=netIpCfgAddressType, mgmtVLANPriority=mgmtVLANPriority, wirelessIfWORPRegistrationTimeout=wirelessIfWORPRegistrationTimeout, worpQoSPIRMapTableIndexVal=worpQoSPIRMapTableIndexVal, igmpEth2MCastTableEntry=igmpEth2MCastTableEntry, ethernetIfSupportedModes=ethernetIfSupportedModes, sysTypeSupportedMode=sysTypeSupportedMode, wirelessIfWORPLinkTestRemoteCurSignal=wirelessIfWORPLinkTestRemoteCurSignal, worpSiteSurveyTableIndex=worpSiteSurveyTableIndex, wirelessIf11nPropertiesAMPDUMaxNumFrames=wirelessIf11nPropertiesAMPDUMaxNumFrames, wirelessIfVAPTable=wirelessIfVAPTable, tcpudpPortFilterTableEntry=tcpudpPortFilterTableEntry, flashMemoryThresholdExceeded=flashMemoryThresholdExceeded, macaclOperationType=macaclOperationType, wirelessIfVAPRadiusAccStatus=wirelessIfVAPRadiusAccStatus, sysTypeActiveMode=sysTypeActiveMode, ripInterfaceStatus=ripInterfaceStatus, etherprotocolFilterStatus=etherprotocolFilterStatus, securityTraps=securityTraps, wirelessIfTPC=wirelessIfTPC, wirelessIfDDRSMinReqSNRTableSecIndex=wirelessIfDDRSMinReqSNRTableSecIndex, wirelessIfWORPLinkTestIdleTimeout=wirelessIfWORPLinkTestIdleTimeout, worpIntraCellBlockingGroupID11=worpIntraCellBlockingGroupID11, wirelessIfWORPStatsCurrentDownlinkBandwidth=wirelessIfWORPStatsCurrentDownlinkBandwidth, wirelessIfDfsNumSatWithRadarForFreqSwitch=wirelessIfDfsNumSatWithRadarForFreqSwitch, wirelessIfWORPStatsActiveDownlinkMIR=wirelessIfWORPStatsActiveDownlinkMIR, wirelessIfTransmittedRate=wirelessIfTransmittedRate, tftpModuleInitFailure=tftpModuleInitFailure, wirelessIfStaStatsTableEntry=wirelessIfStaStatsTableEntry, natStatus=natStatus, radiusClientAccStatsResponses=radiusClientAccStatsResponses, netIpCfgTableIndex=netIpCfgTableIndex, mgmtSnmpAccessTableIndex=mgmtSnmpAccessTableIndex, interface=interface, radiusClientAccStatsRetransmissions=radiusClientAccStatsRetransmissions, worpSiteSurveyRemoteSignalLevel=worpSiteSurveyRemoteSignalLevel, worpIntraCellBlocking=worpIntraCellBlocking, dhcpRelayServerIpAddress=dhcpRelayServerIpAddress, stormFilterInterface=stormFilterInterface, trapControl=trapControl, igmpWirelessSnoopingStats=igmpWirelessSnoopingStats, worpQoSPIRMapTableIndex=worpQoSPIRMapTableIndex, wirelessQoSEDCATableTXOP=wirelessQoSEDCATableTXOP, sysMonitorCPUUsage=sysMonitorCPUUsage, wirelessIfVAPBeaconInterval=wirelessIfVAPBeaconInterval, netIpStaticRouteNextHop=netIpStaticRouteNextHop, wirelessIfDDRSIncrAvgSNRThrld=wirelessIfDDRSIncrAvgSNRThrld, wirelessIfVAPMACACLStatus=wirelessIfVAPMACACLStatus, wirelessIfWORPStatsRequestForService=wirelessIfWORPStatsRequestForService, qosProfileTableQoSNACKStatus=qosProfileTableQoSNACKStatus, dhcpServerIpPoolStartIpAddress=dhcpServerIpPoolStartIpAddress, wirelessIf=wirelessIf, products=products)
mibBuilder.exportSymbols("PROXIM-MIB", radiusClientAuthStatsUnknownTypes=radiusClientAuthStatsUnknownTypes, wirelessIfWORPStaStatsRemoteTxRate=wirelessIfWORPStaStatsRemoteTxRate, sntpTraps=sntpTraps, wirelessIfWORPLinkTestRemoteCurSNR=wirelessIfWORPLinkTestRemoteCurSNR, sysTypeSupportedFreqDomains=sysTypeSupportedFreqDomains, imageTraps=imageTraps, wirelessIfWORPLinkTestLocalCurSignal=wirelessIfWORPLinkTestLocalCurSignal, worpQoSClassPIRValue=worpQoSClassPIRValue, worpIntraCellBlockingMACTableIndex=worpIntraCellBlockingMACTableIndex, ethernetIf=ethernetIf, wirelessIfStaStatsRxUnencrypted=wirelessIfStaStatsRxUnencrypted, sysMgmtModulesInitFailure=sysMgmtModulesInitFailure, wirelessInActivityTimerInSecs=wirelessInActivityTimerInSecs, macaclProfileTable=macaclProfileTable, worpQoSSUTableIndex=worpQoSSUTableIndex, wirelessIf11nPropertiesAMPDUStatus=wirelessIf11nPropertiesAMPDUStatus, wirelessIfWORPStaStatsLocalMimoCtrlSig2=wirelessIfWORPStaStatsLocalMimoCtrlSig2, wirelessIfStaStatsTxBytes=wirelessIfStaStatsTxBytes, wirelessIfAutoRateSelection=wirelessIfAutoRateSelection, wirelessIfStaStatsTxPower=wirelessIfStaStatsTxPower, worpQoSPIRIPSubMask=worpQoSPIRIPSubMask, worpQoSPIRMacComment=worpQoSPIRMacComment, wirelessIfWORPStaStatsLocalMimoCtrlSig3=wirelessIfWORPStaStatsLocalMimoCtrlSig3, wirelessIfStaStatsMACAddress=wirelessIfStaStatsMACAddress, mp_8100=mp_8100, vlanEthCfgTable=vlanEthCfgTable, sysInvMgmtComponentTableEntry=sysInvMgmtComponentTableEntry, wirelessIfVAPBSSID=wirelessIfVAPBSSID, wirelessIfWORPSleepMode=wirelessIfWORPSleepMode, dhcpRelayServerTableEntryStatus=dhcpRelayServerTableEntryStatus, worpQoSPIRMapSrcIpAddrIndexList=worpQoSPIRMapSrcIpAddrIndexList, wirelessSecurityCfgTableIndex=wirelessSecurityCfgTableIndex, wirelessSecurityCfgKeyIndex=wirelessSecurityCfgKeyIndex, qosProfileTableEntry=qosProfileTableEntry, advancedFilterTable=advancedFilterTable, wirelessIfWORPRetries=wirelessIfWORPRetries, sysLicRadioInfoTable=sysLicRadioInfoTable, wirelessIfVAPTableIndex=wirelessIfVAPTableIndex, debugLogBitMask=debugLogBitMask, wirelessIfWORPStaStatsTableEntry=wirelessIfWORPStaStatsTableEntry, wirelessIfWORPLinkTestRemoteMinNoise=wirelessIfWORPLinkTestRemoteMinNoise, WEPKeyType=WEPKeyType, wirelessIf11nPropertiesNumOfSpatialStreams=wirelessIf11nPropertiesNumOfSpatialStreams, sysContactPhoneNumber=sysContactPhoneNumber, debugLogSize=debugLogSize, worpSiteSurveyLocalMimoCtrlSNR2=worpSiteSurveyLocalMimoCtrlSNR2, wirelessIfWORPStatsAuthenticationRequests=wirelessIfWORPStatsAuthenticationRequests, wirelessIfWORPStaStatsRemoteMimoCtrlSig1=wirelessIfWORPStaStatsRemoteMimoCtrlSig1, staticMACAddrFilterComment=staticMACAddrFilterComment, wirelessIfWORPStatsActiveDownlinkCIR=wirelessIfWORPStatsActiveDownlinkCIR, dhcpServerDefaultGateway=dhcpServerDefaultGateway, wirelessIfSatelliteDensity=wirelessIfSatelliteDensity, wirelessIfDDRSDataRate=wirelessIfDDRSDataRate, worpIntraCellBlockingStatus=worpIntraCellBlockingStatus, wirelessIfStatsChain1ExtRSSI=wirelessIfStatsChain1ExtRSSI, radiusSupProfileMsgResponseTime=radiusSupProfileMsgResponseTime, l2l3QoSDot1pPriority=l2l3QoSDot1pPriority, mgmtSnmpV3AuthProtocol=mgmtSnmpV3AuthProtocol, wirelessIfDDRSStatus=wirelessIfDDRSStatus, vlanEthCfgTableIndex=vlanEthCfgTableIndex, igmpEth2MCastTableIndex=igmpEth2MCastTableIndex, tftpOpType=tftpOpType, securityGatewayMacAddress=securityGatewayMacAddress, ramMemoryThresholdExceeded=ramMemoryThresholdExceeded, sysInvMgmtCompReleaseVersion=sysInvMgmtCompReleaseVersion, wirelessIfStatsTable=wirelessIfStatsTable, wirelessIfStaStatsRxDeMicFail=wirelessIfStaStatsRxDeMicFail, advancedFiltering=advancedFiltering, wirelessIfWORPStaStatsLocalMimoNoise=wirelessIfWORPStaStatsLocalMimoNoise, igmpStats=igmpStats, telnetSessions=telnetSessions, igmpRouterAgingTimeElapsed=igmpRouterAgingTimeElapsed, wirelessIfWORPStatsBaseStationAnnounces=wirelessIfWORPStatsBaseStationAnnounces, wirelessIfWORPStatsAverageRemoteNoise=wirelessIfWORPStatsAverageRemoteNoise, wirelessIfCurrentOperatingChannel=wirelessIfCurrentOperatingChannel, wirelessSecurityCfgAuthenticationMode=wirelessSecurityCfgAuthenticationMode, wirelessQoSEDCATableEntry=wirelessQoSEDCATableEntry, wirelessIfStatsRadioReTunes=wirelessIfStatsRadioReTunes, worpQoSPIRMacTable=worpQoSPIRMacTable, radiusClientAuthStatsBadAuthenticators=radiusClientAuthStatsBadAuthenticators, wirelessIfWORPLinkTestRemoteMaxSignal=wirelessIfWORPLinkTestRemoteMaxSignal, wirelessIfWORPStaStatsReceiveFailures=wirelessIfWORPStaStatsReceiveFailures, sysInvMgmtCompSerialNumber=sysInvMgmtCompSerialNumber, ripConfigStatus=ripConfigStatus, sysMgmtCfgRestore=sysMgmtCfgRestore, wirelessIfWORPLinkTestLocalMaxSNR=wirelessIfWORPLinkTestLocalMaxSNR, worpSiteSurveyOperationTableIndex=worpSiteSurveyOperationTableIndex, sysLocationName=sysLocationName, wirelessQoSEDCATableACM=wirelessQoSEDCATableACM, radiusSrvProfileServerSharedSecret=radiusSrvProfileServerSharedSecret, stormThresholdTableIndex=stormThresholdTableIndex, worpQoSPIRIPProtocolIds=worpQoSPIRIPProtocolIds, mgmtSnmpTrapHostTableEntryStatus=mgmtSnmpTrapHostTableEntryStatus, worpSiteSurveyRemoteMimoCtrlSig2=worpSiteSurveyRemoteMimoCtrlSig2, mgmtSnmpV3PrivPassword=mgmtSnmpV3PrivPassword, ethernetIfTxModeAndSpeed=ethernetIfTxModeAndSpeed, wirelessIfVAPVLANID=wirelessIfVAPVLANID, wirelessIfWORPTableEntry=wirelessIfWORPTableEntry, macaclProfileTableIndex=macaclProfileTableIndex, worpQoSDefaultClass=worpQoSDefaultClass, wirelessIfWORPStatsCurrentUplinkBandwidth=wirelessIfWORPStatsCurrentUplinkBandwidth, sysMonitor=sysMonitor, worpQoSClassSFCTableIndex=worpQoSClassSFCTableIndex, worpQoSSFClassTableEntry=worpQoSSFClassTableEntry, telnetPort=telnetPort, dhcpServerIpPoolInterface=dhcpServerIpPoolInterface, wirelessQoSEDCATableIndex=wirelessQoSEDCATableIndex, worpSiteSurvey=worpSiteSurvey, wirelessIfAutoChannelSelection=wirelessIfAutoChannelSelection, eventLogPriority=eventLogPriority, igmpEth2MCastGrpAgingTimeElapsed=igmpEth2MCastGrpAgingTimeElapsed, Password=Password, wirelessIfBlacklistTimeElapsed=wirelessIfBlacklistTimeElapsed, sysInvMgmtSecurityID=sysInvMgmtSecurityID, natStaticPortBindTableEntryStatus=natStaticPortBindTableEntryStatus, wirelessIfWORPLinkTestStatsTable=wirelessIfWORPLinkTestStatsTable, systemTempReachedLimits=systemTempReachedLimits, wirelessIfStaStatsRxDefragFailed=wirelessIfStaStatsRxDefragFailed, macaclProfileName=macaclProfileName, netCfgSecondaryDNSIpAddress=netCfgSecondaryDNSIpAddress, wirelessIfStaStatsState=wirelessIfStaStatsState, wirelessIfStaStatsVAPNumber=wirelessIfStaStatsVAPNumber, wirelessIfSupportedRate=wirelessIfSupportedRate, wirelessQoSEDCATableAPCWmax=wirelessQoSEDCATableAPCWmax, worpQoSSUMACAddress=worpQoSSUMACAddress, macacl=macacl, telnet=telnet, wirelessSecurityCfgPSK=wirelessSecurityCfgPSK, pxmModulesInitSuccess=pxmModulesInitSuccess, wirelessIf11nPropertiesTable=wirelessIf11nPropertiesTable, worpQoSPIRMapDstPortIndexList=worpQoSPIRMapDstPortIndexList, sysLicRadioCompID=sysLicRadioCompID, wirelessIfWORPStaStatsAverageLocalSNR=wirelessIfWORPStaStatsAverageLocalSNR, etherProtocolFilterTable=etherProtocolFilterTable, tftpSrvIpAddress=tftpSrvIpAddress, dhcpServerStatus=dhcpServerStatus, radiusSupProfileTableIndex=radiusSupProfileTableIndex, mgmtAccessTableEntry=mgmtAccessTableEntry, sysConf=sysConf, radiusSupProfileTableEntry=radiusSupProfileTableEntry, httpPassword=httpPassword, wirelessIfStaStatsTableSecIndex=wirelessIfStaStatsTableSecIndex, syslogHostComment=syslogHostComment, interfaceTraps=interfaceTraps, advancedFilterProtocolName=advancedFilterProtocolName, worpIntraCellBlockingGroupID16=worpIntraCellBlockingGroupID16, invalidConfigFile=invalidConfigFile, debugLog=debugLog, worpQoSClassSFCValue=worpQoSClassSFCValue, telnetAccessControl=telnetAccessControl, wirelessIfStaStatsTxDisassociationCode=wirelessIfStaStatsTxDisassociationCode, wirelessIfWORPStaStatsSendRetries=wirelessIfWORPStaStatsSendRetries, globalTrapStatus=globalTrapStatus, sys=sys, wirelessIfWORPRadiusMACACLStatus=wirelessIfWORPRadiusMACACLStatus, worpSiteSurveyBaseName=worpSiteSurveyBaseName, wirelessIfStatsChain0CtlRSSI=wirelessIfStatsChain0CtlRSSI, worpIntraCellBlockingGroupTableEntryStatus=worpIntraCellBlockingGroupTableEntryStatus, worpSiteSurveyChannelBandwidth=worpSiteSurveyChannelBandwidth, worpQoSPIRMapDstMacIndexList=worpQoSPIRMapDstMacIndexList, ripConfigTable=ripConfigTable, mgmtSnmp=mgmtSnmp, wirelessIfWORPStatsAverageLocalNoise=wirelessIfWORPStatsAverageLocalNoise, wirelessIfWORPLinkTestRemoteMaxSNR=wirelessIfWORPLinkTestRemoteMaxSNR, sysInfo=sysInfo, worpQoSClassPriority=worpQoSClassPriority, stormThresholdTable=stormThresholdTable, wirelessIfWORPStaStatsRemoteMimoCtrlSNR3=wirelessIfWORPStaStatsRemoteMimoCtrlSNR3, syslogModuleInitFailure=syslogModuleInitFailure, worpSiteSurveyMaxSatellitesAllowed=worpSiteSurveyMaxSatellitesAllowed, syslogHostIpAddress=syslogHostIpAddress, worpSiteSurveyTableSecIndex=worpSiteSurveyTableSecIndex, wirelessIfStatsChain2CtlRSSI=wirelessIfStatsChain2CtlRSSI, worpSiteSurveyBaseBridgePort=worpSiteSurveyBaseBridgePort, ssh=ssh, rip=rip, sysLicFeatureTable=sysLicFeatureTable, worpSiteSurveyTableEntry=worpSiteSurveyTableEntry, wirelessIfDDRSTableIndex=wirelessIfDDRSTableIndex, sysInvMgmtCompName=sysInvMgmtCompName, dhcpServerIfTableComment=dhcpServerIfTableComment, sysFeatureProductFamily=sysFeatureProductFamily, sysCountryCode=sysCountryCode, sysMgmt=sysMgmt, worpSiteSurveyRemoteNoiseLevel=worpSiteSurveyRemoteNoiseLevel, sysLicRadioAntennaType=sysLicRadioAntennaType, dhcpServerInterfaceType=dhcpServerInterfaceType, macaclAddrTableSecIndex=macaclAddrTableSecIndex, sysInvMgmtComponentTable=sysInvMgmtComponentTable, sysMgmtReboot=sysMgmtReboot, igmpForcedFlood=igmpForcedFlood, intraBSSFiltering=intraBSSFiltering, ripInterfaceAuthKey=ripInterfaceAuthKey, etherProtocolFilterTableStatus=etherProtocolFilterTableStatus, sysMgmtLoadTextConfig=sysMgmtLoadTextConfig, eventLogReset=eventLogReset, radiusSrvProfileTableEntryStatus=radiusSrvProfileTableEntryStatus, wirelessIfBlacklistReason=wirelessIfBlacklistReason, eventlog=eventlog, natStaticPortBindStartPortNum=natStaticPortBindStartPortNum, wirelessIfDDRSPhyModulation=wirelessIfDDRSPhyModulation, staticMACAddrFilterTableIndex=staticMACAddrFilterTableIndex, worpIntraCellBlockingMACTable=worpIntraCellBlockingMACTable, worpIntraCellBlockingGroupID1=worpIntraCellBlockingGroupID1, wirelessIfStaStatsTxAuthenticationFailed=wirelessIfStaStatsTxAuthenticationFailed, traps=traps, worpQoSPIRMapTable=worpQoSPIRMapTable, worpQoSPIRPPPoEEncapsulation=worpQoSPIRPPPoEEncapsulation, sysMgmtCfgChangeCnt=sysMgmtCfgChangeCnt, wirelessIfStaStatsRxControlFrames=wirelessIfStaStatsRxControlFrames, igmpWireless1MCastTableEntry=igmpWireless1MCastTableEntry, wirelessIfWORPStaStatsPollData=wirelessIfWORPStaStatsPollData, worpSiteSurveyChannel=worpSiteSurveyChannel, qoSPolicyTablePolicyName=qoSPolicyTablePolicyName, qoSPolicyTableEntryStatus=qoSPolicyTableEntryStatus, worpQoSPIRIPToSHigh=worpQoSPIRIPToSHigh, wirelessIfPropertiesTable=wirelessIfPropertiesTable, staticMACAddrFilterTable=staticMACAddrFilterTable, wirelessIfWORPStatsReplyData=wirelessIfWORPStatsReplyData, vlanMode=vlanMode, wirelessIfStaStatsTxDisassociation=wirelessIfStaStatsTxDisassociation, wirelessIfWORPStatsReplyMoreData=wirelessIfWORPStatsReplyMoreData, ObjStatus=ObjStatus, radiusClientAuthStatsRequests=radiusClientAuthStatsRequests, advancedFilterTableEntry=advancedFilterTableEntry, worpQoSPIRStartPort=worpQoSPIRStartPort, wirelessIfStaStatsTxProbeReq=wirelessIfStaStatsTxProbeReq, worpIntraCellBlockingGroupID6=worpIntraCellBlockingGroupID6, worpQoSSFClassName=worpQoSSFClassName, syslogHostTableEntry=syslogHostTableEntry, worpQoSPIRTableEntryStatus=worpQoSPIRTableEntryStatus, wirelessIfWORPStaStatsLocalChainBalStatus=wirelessIfWORPStaStatsLocalChainBalStatus, worpQoSPIREtherPriorityHigh=worpQoSPIREtherPriorityHigh, sysFeature=sysFeature, worpQoSPIRTableEntry=worpQoSPIRTableEntry, wirelessIfWORPStaStatsLocalMimoCtrlSNR2=wirelessIfWORPStaStatsLocalMimoCtrlSNR2, wirelessIfStatsRxDecryptErrors=wirelessIfStatsRxDecryptErrors, wirelessIfWORPStatsRemotePartners=wirelessIfWORPStatsRemotePartners, wirelessSecurityCfgprofileName=wirelessSecurityCfgprofileName, tcpudpPortFilterInterface=tcpudpPortFilterInterface)
