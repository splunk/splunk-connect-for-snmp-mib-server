#
# PySNMP MIB module ALCATEL-IND1-UDP-RELAY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-UDP-RELAY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:04:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
routingIND1UdpRelay, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "routingIND1UdpRelay")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
iso, TimeTicks, Counter32, Bits, Unsigned32, Counter64, MibIdentifier, Integer32, Gauge32, NotificationType, ObjectIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "Counter32", "Bits", "Unsigned32", "Counter64", "MibIdentifier", "Integer32", "Gauge32", "NotificationType", "ObjectIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
TextualConvention, RowStatus, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "MacAddress")
alcatelIND1UDPRelayMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1))
alcatelIND1UDPRelayMIB.setRevisions(('2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1UDPRelayMIB.setLastUpdated('200704030000Z')
if mibBuilder.loadTexts: alcatelIND1UDPRelayMIB.setOrganization('Alcatel -Architects Of An Internet World ')
alcatelIND1UDPRelayNotificationObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 0))
if mibBuilder.loadTexts: alcatelIND1UDPRelayNotificationObjects.setStatus('current')
alcatelIND1UDPRelayMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1))
if mibBuilder.loadTexts: alcatelIND1UDPRelayMIBObjects.setStatus('current')
alcatelIND1UDPRelayMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 2))
if mibBuilder.loadTexts: alcatelIND1UDPRelayMIBConformance.setStatus('current')
alcatelIND1UDPRelayMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1UDPRelayMIBGroups.setStatus('current')
alcatelIND1UDPRelayMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1UDPRelayMIBCompliances.setStatus('current')
class IphelpereOption82ASCIIFieldType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("none", 0), ("macAddress", 1), ("systemName", 2), ("userString", 3), ("interfaceAlias", 4), ("vlan", 5), ("interface", 6))

iphelperMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1))
genericUdpServiceMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 2))
alaDhcpClientTrapsObj = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 3))
iphelperTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 1), )
if mibBuilder.loadTexts: iphelperTable.setStatus('current')
iphelperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-UDP-RELAY-MIB", "iphelperVlan"), (0, "ALCATEL-IND1-UDP-RELAY-MIB", "iphelperNextHopIpAddress"))
if mibBuilder.loadTexts: iphelperEntry.setStatus('current')
iphelperVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: iphelperVlan.setStatus('current')
iphelperNextHopIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: iphelperNextHopIpAddress.setStatus('current')
iphelperResetSrvStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iphelperResetSrvStats.setStatus('current')
iphelperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iphelperRowStatus.setStatus('current')
iphelperStatTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 2), )
if mibBuilder.loadTexts: iphelperStatTable.setStatus('current')
iphelperStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-UDP-RELAY-MIB", "iphelperStatsVlan"), (0, "ALCATEL-IND1-UDP-RELAY-MIB", "iphelperStatsNextHopIpAddr"))
if mibBuilder.loadTexts: iphelperStatEntry.setStatus('current')
iphelperStatsVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: iphelperStatsVlan.setStatus('current')
iphelperStatsNextHopIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 2, 1, 2), IpAddress())
if mibBuilder.loadTexts: iphelperStatsNextHopIpAddr.setStatus('current')
iphelperTxToNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iphelperTxToNextHop.setStatus('current')
iphelperInvalidAgentInfoOptFrmSrver = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iphelperInvalidAgentInfoOptFrmSrver.setStatus('current')
iphelperRxFromClient = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iphelperRxFromClient.setStatus('current')
iphelperMaxHopsViolation = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iphelperMaxHopsViolation.setStatus('current')
iphelperForwDelayViolation = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iphelperForwDelayViolation.setStatus('current')
iphelperAgentInfoViolation = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iphelperAgentInfoViolation.setStatus('current')
iphelperInvalidGatewayIP = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iphelperInvalidGatewayIP.setStatus('current')
iphelperForwDelay = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperForwDelay.setStatus('current')
iphelperMaxHops = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperMaxHops.setStatus('current')
iphelperForwardOption = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standard", 1), ("perVlan", 2))).clone('standard')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperForwardOption.setStatus('current')
iphelperResetAllStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noOperation", 0), ("resetAllStats", 1), ("resetAllGlbStats", 2), ("resetAllSrvStats", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperResetAllStats.setStatus('current')
iphelperBootupOption = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperBootupOption.setStatus('current')
iphelperBootupPacketOption = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bootp", 1), ("dhcp", 2))).clone('dhcp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperBootupPacketOption.setStatus('current')
iphelperAgentInformation = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperAgentInformation.setStatus('current')
iphelperAgentInformationPolicy = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("drop", 1), ("keep", 2), ("replace", 3))).clone('drop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperAgentInformationPolicy.setStatus('current')
iphelperPXESupport = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperPXESupport.setStatus('current')
iphelperDhcpOption82FormatType = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("macAddress", 1), ("systemName", 2), ("userString", 3), ("interfaceAlias", 4), ("autoInterfaceAlias", 5), ("ascii", 6))).clone('macAddress')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperDhcpOption82FormatType.setStatus('current')
iphelperDhcpOption82StringValue = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 18), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperDhcpOption82StringValue.setStatus('current')
iphelperDhcpOption82FormatASCIIField1 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 19), IphelpereOption82ASCIIFieldType().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperDhcpOption82FormatASCIIField1.setStatus('current')
iphelperDhcpOption82FormatASCIIField1StringValue = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 20), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperDhcpOption82FormatASCIIField1StringValue.setStatus('current')
iphelperDhcpOption82FormatASCIIField2 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 21), IphelpereOption82ASCIIFieldType().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperDhcpOption82FormatASCIIField2.setStatus('current')
iphelperDhcpOption82FormatASCIIField2StringValue = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 22), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperDhcpOption82FormatASCIIField2StringValue.setStatus('current')
iphelperDhcpOption82FormatASCIIField3 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 23), IphelpereOption82ASCIIFieldType().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperDhcpOption82FormatASCIIField3.setStatus('current')
iphelperDhcpOption82FormatASCIIField3StringValue = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 24), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperDhcpOption82FormatASCIIField3StringValue.setStatus('current')
iphelperDhcpOption82FormatASCIIField4 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 25), IphelpereOption82ASCIIFieldType().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperDhcpOption82FormatASCIIField4.setStatus('current')
iphelperDhcpOption82FormatASCIIField4StringValue = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 26), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperDhcpOption82FormatASCIIField4StringValue.setStatus('current')
iphelperDhcpOption82FormatASCIIField5 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 27), IphelpereOption82ASCIIFieldType().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperDhcpOption82FormatASCIIField5.setStatus('current')
iphelperDhcpOption82FormatASCIIField5StringValue = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 28), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperDhcpOption82FormatASCIIField5StringValue.setStatus('current')
iphelperDhcpOption82FormatASCIIDelimiter = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 29), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperDhcpOption82FormatASCIIDelimiter.setStatus('current')
iphelperResetAllOpt82ErrStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noOperation", 0), ("resetAllStats", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperResetAllOpt82ErrStats.setStatus('current')
iphelperOption82ErrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 31), )
if mibBuilder.loadTexts: iphelperOption82ErrStatsTable.setStatus('current')
iphelperOption82ErrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 31, 1), ).setIndexNames((0, "ALCATEL-IND1-UDP-RELAY-MIB", "iphelperOpt82ifIndex"), (0, "ALCATEL-IND1-UDP-RELAY-MIB", "iphelperOpt82vlan"))
if mibBuilder.loadTexts: iphelperOption82ErrStatsEntry.setStatus('current')
iphelperOpt82ifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 31, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: iphelperOpt82ifIndex.setStatus('current')
iphelperOpt82vlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 31, 1, 2), Unsigned32())
if mibBuilder.loadTexts: iphelperOpt82vlan.setStatus('current')
iphelperOpt82agentInfoViolationCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 31, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iphelperOpt82agentInfoViolationCnt.setStatus('current')
iphelperOpt82invalidGatewayIPAddrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 31, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iphelperOpt82invalidGatewayIPAddrCnt.setStatus('current')
iphelperOpt82resetErrStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 1, 31, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noOperation", 0), ("resetErrStats", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iphelperOpt82resetErrStats.setStatus('current')
genericUdpServiceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 2, 1), )
if mibBuilder.loadTexts: genericUdpServiceTable.setStatus('current')
genericUdpServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 2, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-UDP-RELAY-MIB", "genericUdpServiceUdpPort"))
if mibBuilder.loadTexts: genericUdpServiceEntry.setStatus('current')
genericUdpServiceUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: genericUdpServiceUdpPort.setStatus('current')
genericUdpServiceDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 2, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: genericUdpServiceDescription.setStatus('current')
genericUdpServiceStatRxFromClient = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genericUdpServiceStatRxFromClient.setStatus('current')
genericUdpServiceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: genericUdpServiceRowStatus.setStatus('current')
genericUdpServiceDstTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 2, 2), )
if mibBuilder.loadTexts: genericUdpServiceDstTable.setStatus('current')
genericUdpServiceDstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 2, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-UDP-RELAY-MIB", "genericUdpServicePort"), (0, "ALCATEL-IND1-UDP-RELAY-MIB", "genericUdpServiceDstVlan"))
if mibBuilder.loadTexts: genericUdpServiceDstEntry.setStatus('current')
genericUdpServicePort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: genericUdpServicePort.setStatus('current')
genericUdpServiceDstVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: genericUdpServiceDstVlan.setStatus('current')
genericUdpServiceStatTxToVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genericUdpServiceStatTxToVlan.setStatus('current')
genericUdpServiceDstTblRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 2, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: genericUdpServiceDstTblRowStatus.setStatus('current')
genericUdpServiceStatReset = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noOperation", 0), ("resetAllStats", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genericUdpServiceStatReset.setStatus('current')
alaDhcpClientAddressAddTrap = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 0, 1)).setObjects(("ALCATEL-IND1-UDP-RELAY-MIB", "alaDhcpClientAddress"))
if mibBuilder.loadTexts: alaDhcpClientAddressAddTrap.setStatus('current')
alaDhcpClientAddressExpiryTrap = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 0, 2)).setObjects(("ALCATEL-IND1-UDP-RELAY-MIB", "alaDhcpClientAddress"))
if mibBuilder.loadTexts: alaDhcpClientAddressExpiryTrap.setStatus('current')
alaDhcpClientAddressModifyTrap = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 0, 3)).setObjects(("ALCATEL-IND1-UDP-RELAY-MIB", "alaDhcpClientAddress"), ("ALCATEL-IND1-UDP-RELAY-MIB", "alaDhcpClientNewAddress"))
if mibBuilder.loadTexts: alaDhcpClientAddressModifyTrap.setStatus('current')
alaDhcpClientAddress = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 3, 1), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDhcpClientAddress.setStatus('current')
alaDhcpClientNewAddress = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 1, 3, 2), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDhcpClientNewAddress.setStatus('current')
alcatelIND1UDPRelayMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperGroup"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperStatGroup"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperMiscGroup"), ("ALCATEL-IND1-UDP-RELAY-MIB", "genericUdpServiceGroup"), ("ALCATEL-IND1-UDP-RELAY-MIB", "genericUdpServiceDstGroup"), ("ALCATEL-IND1-UDP-RELAY-MIB", "genericUdpServiceMiscGroup"), ("ALCATEL-IND1-UDP-RELAY-MIB", "alaDhcpClientTrapsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1UDPRelayMIBCompliance = alcatelIND1UDPRelayMIBCompliance.setStatus('current')
iphelperGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperResetSrvStats"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    iphelperGroup = iphelperGroup.setStatus('current')
iphelperStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperTxToNextHop"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperInvalidAgentInfoOptFrmSrver"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    iphelperStatGroup = iphelperStatGroup.setStatus('current')
iphelperMiscGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperRxFromClient"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperMaxHopsViolation"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperForwDelayViolation"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperAgentInfoViolation"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperInvalidGatewayIP"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperForwDelay"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperMaxHops"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperForwardOption"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperResetAllStats"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperBootupOption"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperBootupPacketOption"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperAgentInformation"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperAgentInformationPolicy"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperPXESupport"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperDhcpOption82FormatType"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperDhcpOption82StringValue"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperDhcpOption82FormatASCIIField1"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperDhcpOption82FormatASCIIField1StringValue"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperDhcpOption82FormatASCIIField2"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperDhcpOption82FormatASCIIField2StringValue"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperDhcpOption82FormatASCIIField3"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperDhcpOption82FormatASCIIField3StringValue"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperDhcpOption82FormatASCIIField4"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperDhcpOption82FormatASCIIField4StringValue"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperDhcpOption82FormatASCIIField5"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperDhcpOption82FormatASCIIField5StringValue"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperDhcpOption82FormatASCIIDelimiter"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperResetAllOpt82ErrStats"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    iphelperMiscGroup = iphelperMiscGroup.setStatus('current')
genericUdpServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-UDP-RELAY-MIB", "genericUdpServiceDescription"), ("ALCATEL-IND1-UDP-RELAY-MIB", "genericUdpServiceStatRxFromClient"), ("ALCATEL-IND1-UDP-RELAY-MIB", "genericUdpServiceRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    genericUdpServiceGroup = genericUdpServiceGroup.setStatus('current')
genericUdpServiceDstGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-UDP-RELAY-MIB", "genericUdpServiceStatTxToVlan"), ("ALCATEL-IND1-UDP-RELAY-MIB", "genericUdpServiceDstTblRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    genericUdpServiceDstGroup = genericUdpServiceDstGroup.setStatus('current')
genericUdpServiceMiscGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-UDP-RELAY-MIB", "genericUdpServiceStatReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    genericUdpServiceMiscGroup = genericUdpServiceMiscGroup.setStatus('current')
alaDhcpClientTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 2, 1, 7)).setObjects(("ALCATEL-IND1-UDP-RELAY-MIB", "alaDhcpClientAddressAddTrap"), ("ALCATEL-IND1-UDP-RELAY-MIB", "alaDhcpClientAddressExpiryTrap"), ("ALCATEL-IND1-UDP-RELAY-MIB", "alaDhcpClientAddressModifyTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDhcpClientTrapsGroup = alaDhcpClientTrapsGroup.setStatus('current')
alaDhcpClientTrapsObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 2, 1, 8)).setObjects(("ALCATEL-IND1-UDP-RELAY-MIB", "alaDhcpClientAddress"), ("ALCATEL-IND1-UDP-RELAY-MIB", "alaDhcpClientNewAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDhcpClientTrapsObjectGroup = alaDhcpClientTrapsObjectGroup.setStatus('current')
iphelperOpt82ErrorStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 9, 1, 2, 1, 9)).setObjects(("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperOpt82agentInfoViolationCnt"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperOpt82invalidGatewayIPAddrCnt"), ("ALCATEL-IND1-UDP-RELAY-MIB", "iphelperOpt82resetErrStats"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    iphelperOpt82ErrorStatGroup = iphelperOpt82ErrorStatGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-UDP-RELAY-MIB", iphelperPXESupport=iphelperPXESupport, iphelperDhcpOption82FormatASCIIField3=iphelperDhcpOption82FormatASCIIField3, genericUdpServiceDstEntry=genericUdpServiceDstEntry, iphelperBootupPacketOption=iphelperBootupPacketOption, iphelperTable=iphelperTable, alaDhcpClientNewAddress=alaDhcpClientNewAddress, iphelperDhcpOption82FormatASCIIField4StringValue=iphelperDhcpOption82FormatASCIIField4StringValue, iphelperDhcpOption82FormatASCIIField1StringValue=iphelperDhcpOption82FormatASCIIField1StringValue, iphelperEntry=iphelperEntry, genericUdpServiceDescription=genericUdpServiceDescription, iphelperOpt82ifIndex=iphelperOpt82ifIndex, iphelperAgentInfoViolation=iphelperAgentInfoViolation, iphelperDhcpOption82FormatASCIIField1=iphelperDhcpOption82FormatASCIIField1, iphelperDhcpOption82FormatASCIIField4=iphelperDhcpOption82FormatASCIIField4, iphelperStatTable=iphelperStatTable, iphelperOpt82vlan=iphelperOpt82vlan, alaDhcpClientTrapsGroup=alaDhcpClientTrapsGroup, alaDhcpClientAddressExpiryTrap=alaDhcpClientAddressExpiryTrap, iphelperDhcpOption82FormatASCIIField2=iphelperDhcpOption82FormatASCIIField2, alaDhcpClientTrapsObjectGroup=alaDhcpClientTrapsObjectGroup, genericUdpServiceMIB=genericUdpServiceMIB, alaDhcpClientAddressModifyTrap=alaDhcpClientAddressModifyTrap, iphelperStatsVlan=iphelperStatsVlan, iphelperRxFromClient=iphelperRxFromClient, iphelperDhcpOption82FormatASCIIField5StringValue=iphelperDhcpOption82FormatASCIIField5StringValue, iphelperResetSrvStats=iphelperResetSrvStats, iphelperAgentInformation=iphelperAgentInformation, iphelperForwDelayViolation=iphelperForwDelayViolation, genericUdpServiceTable=genericUdpServiceTable, iphelperRowStatus=iphelperRowStatus, genericUdpServicePort=genericUdpServicePort, iphelperOpt82agentInfoViolationCnt=iphelperOpt82agentInfoViolationCnt, iphelperInvalidAgentInfoOptFrmSrver=iphelperInvalidAgentInfoOptFrmSrver, genericUdpServiceStatRxFromClient=genericUdpServiceStatRxFromClient, iphelperStatEntry=iphelperStatEntry, alcatelIND1UDPRelayMIBCompliance=alcatelIND1UDPRelayMIBCompliance, iphelperOption82ErrStatsEntry=iphelperOption82ErrStatsEntry, genericUdpServiceRowStatus=genericUdpServiceRowStatus, iphelperDhcpOption82FormatASCIIDelimiter=iphelperDhcpOption82FormatASCIIDelimiter, alcatelIND1UDPRelayMIBGroups=alcatelIND1UDPRelayMIBGroups, iphelperOpt82resetErrStats=iphelperOpt82resetErrStats, genericUdpServiceStatReset=genericUdpServiceStatReset, iphelperForwDelay=iphelperForwDelay, iphelperForwardOption=iphelperForwardOption, iphelperMiscGroup=iphelperMiscGroup, genericUdpServiceDstGroup=genericUdpServiceDstGroup, iphelperDhcpOption82FormatASCIIField2StringValue=iphelperDhcpOption82FormatASCIIField2StringValue, iphelperStatsNextHopIpAddr=iphelperStatsNextHopIpAddr, genericUdpServiceDstTable=genericUdpServiceDstTable, genericUdpServiceDstTblRowStatus=genericUdpServiceDstTblRowStatus, iphelperDhcpOption82FormatASCIIField3StringValue=iphelperDhcpOption82FormatASCIIField3StringValue, iphelperOpt82invalidGatewayIPAddrCnt=iphelperOpt82invalidGatewayIPAddrCnt, IphelpereOption82ASCIIFieldType=IphelpereOption82ASCIIFieldType, iphelperMaxHopsViolation=iphelperMaxHopsViolation, alcatelIND1UDPRelayMIBConformance=alcatelIND1UDPRelayMIBConformance, iphelperMaxHops=iphelperMaxHops, iphelperNextHopIpAddress=iphelperNextHopIpAddress, iphelperMIB=iphelperMIB, alaDhcpClientTrapsObj=alaDhcpClientTrapsObj, alaDhcpClientAddressAddTrap=alaDhcpClientAddressAddTrap, iphelperDhcpOption82FormatType=iphelperDhcpOption82FormatType, genericUdpServiceEntry=genericUdpServiceEntry, iphelperAgentInformationPolicy=iphelperAgentInformationPolicy, iphelperStatGroup=iphelperStatGroup, iphelperBootupOption=iphelperBootupOption, iphelperGroup=iphelperGroup, iphelperOption82ErrStatsTable=iphelperOption82ErrStatsTable, iphelperOpt82ErrorStatGroup=iphelperOpt82ErrorStatGroup, iphelperVlan=iphelperVlan, genericUdpServiceMiscGroup=genericUdpServiceMiscGroup, PYSNMP_MODULE_ID=alcatelIND1UDPRelayMIB, iphelperInvalidGatewayIP=iphelperInvalidGatewayIP, genericUdpServiceGroup=genericUdpServiceGroup, iphelperResetAllStats=iphelperResetAllStats, alcatelIND1UDPRelayMIB=alcatelIND1UDPRelayMIB, alcatelIND1UDPRelayNotificationObjects=alcatelIND1UDPRelayNotificationObjects, iphelperDhcpOption82FormatASCIIField5=iphelperDhcpOption82FormatASCIIField5, alcatelIND1UDPRelayMIBObjects=alcatelIND1UDPRelayMIBObjects, genericUdpServiceUdpPort=genericUdpServiceUdpPort, alaDhcpClientAddress=alaDhcpClientAddress, genericUdpServiceDstVlan=genericUdpServiceDstVlan, alcatelIND1UDPRelayMIBCompliances=alcatelIND1UDPRelayMIBCompliances, iphelperTxToNextHop=iphelperTxToNextHop, iphelperResetAllOpt82ErrStats=iphelperResetAllOpt82ErrStats, genericUdpServiceStatTxToVlan=genericUdpServiceStatTxToVlan, iphelperDhcpOption82StringValue=iphelperDhcpOption82StringValue)
