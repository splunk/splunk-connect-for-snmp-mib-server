#
# PySNMP MIB module DFL260-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DFL260-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:26:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ModuleIdentity, Integer32, Gauge32, TimeTicks, NotificationType, Bits, IpAddress, enterprises, MibIdentifier, Unsigned32, iso, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "Gauge32", "TimeTicks", "NotificationType", "Bits", "IpAddress", "enterprises", "MibIdentifier", "Unsigned32", "iso", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
dfl260_MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 1, 2)).setLabel("dfl260-MIB")
dfl260_MIB.setRevisions(('2010-09-02 11:39', '2010-03-30 09:00', '2009-11-10 09:16', '2008-11-18 16:05', '2008-10-14 12:27', '2007-10-31 00:00',))
if mibBuilder.loadTexts: dfl260_MIB.setLastUpdated('201009021139Z')
if mibBuilder.loadTexts: dfl260_MIB.setOrganization('D-Link Corporation')
dlink = MibIdentifier((1, 3, 6, 1, 4, 1, 171))
netdefendMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20))
utmFirewall = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2))
dfl260 = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1))
dfl260OS = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1))
dfl260OSStats = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2))
dfl260reg = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2))
dfl260MibModules = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 1))
dfl260MibConfs = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 2))
dfl260MibObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3))
dfl260System = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1))
dfl260SysCpuLoad = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysCpuLoad.setStatus('current')
dfl260SysForwardedBits = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysForwardedBits.setStatus('current')
dfl260SysForwardedPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysForwardedPackets.setStatus('current')
dfl260SysBuffUse = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysBuffUse.setStatus('current')
dfl260SysConns = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysConns.setStatus('current')
dfl260SysPerStateCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 6))
dfl260SysPscTcpSyn = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysPscTcpSyn.setStatus('current')
dfl260SysPscTcpOpen = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 6, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysPscTcpOpen.setStatus('current')
dfl260SysPscTcpFin = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 6, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysPscTcpFin.setStatus('current')
dfl260SysPscUdp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 6, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysPscUdp.setStatus('current')
dfl260SysPscIcmp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 6, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysPscIcmp.setStatus('current')
dfl260SysPscOther = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 6, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysPscOther.setStatus('current')
dfl260IfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7), )
if mibBuilder.loadTexts: dfl260IfStatsTable.setStatus('current')
dfl260IfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260IfStatsIndex"))
if mibBuilder.loadTexts: dfl260IfStatsEntry.setStatus('current')
dfl260IfStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260IfStatsIndex.setStatus('current')
dfl260IfName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfName.setStatus('current')
dfl260IfFragsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfFragsIn.setStatus('current')
dfl260IfFragReassOk = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfFragReassOk.setStatus('current')
dfl260IfFragReassFail = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfFragReassFail.setStatus('current')
dfl260IfPktsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfPktsInCnt.setStatus('current')
dfl260IfPktsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfPktsOutCnt.setStatus('current')
dfl260IfBitsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfBitsInCnt.setStatus('current')
dfl260IfBitsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfBitsOutCnt.setStatus('current')
dfl260IfPktsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfPktsTotCnt.setStatus('current')
dfl260IfBitsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfBitsTotCnt.setStatus('current')
dfl260IfHCPktsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfHCPktsInCnt.setStatus('current')
dfl260IfHCPktsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfHCPktsOutCnt.setStatus('current')
dfl260IfHCBitsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfHCBitsInCnt.setStatus('current')
dfl260IfHCBitsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfHCBitsOutCnt.setStatus('current')
dfl260IfHCPktsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfHCPktsTotCnt.setStatus('current')
dfl260IfHCBitsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 7, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfHCBitsTotCnt.setStatus('current')
dfl260IfRxRingTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 8), )
if mibBuilder.loadTexts: dfl260IfRxRingTable.setStatus('current')
dfl260IfRxRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 8, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260IfRxRingIndex"))
if mibBuilder.loadTexts: dfl260IfRxRingEntry.setStatus('current')
dfl260IfRxRingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260IfRxRingIndex.setStatus('current')
dfl260IfRxRingFifoErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 8, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfRxRingFifoErrors.setStatus('current')
dfl260IfRxDespools = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 8, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfRxDespools.setStatus('current')
dfl260IfRxAvgUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 8, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfRxAvgUse.setStatus('current')
dfl260IfRxRingSaturation = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 8, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfRxRingSaturation.setStatus('current')
dfl260RxRingFlooded = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 8, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260RxRingFlooded.setStatus('current')
dfl260IfTxRingTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 9), )
if mibBuilder.loadTexts: dfl260IfTxRingTable.setStatus('current')
dfl260IfTxRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 9, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260IfTxRingIndex"))
if mibBuilder.loadTexts: dfl260IfTxRingEntry.setStatus('current')
dfl260IfTxRingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260IfTxRingIndex.setStatus('current')
dfl260IfTxDespools = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 9, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfTxDespools.setStatus('current')
dfl260IfTxAvgUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 9, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfTxAvgUse.setStatus('current')
dfl260IfTxRingSaturation = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 9, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfTxRingSaturation.setStatus('current')
dfl260RxTingFlooded = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 9, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260RxTingFlooded.setStatus('current')
dfl260IfVlanStatsTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 10), )
if mibBuilder.loadTexts: dfl260IfVlanStatsTable.setStatus('current')
dfl260IfVlanStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 10, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260IfVlanIndex"))
if mibBuilder.loadTexts: dfl260IfVlanStatsEntry.setStatus('current')
dfl260IfVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260IfVlanIndex.setStatus('current')
dfl260IfVlanUntaggedInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfVlanUntaggedInPkts.setStatus('current')
dfl260IfVlanUntaggedOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfVlanUntaggedOutPkts.setStatus('current')
dfl260IfVlanUntaggedTotPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfVlanUntaggedTotPkts.setStatus('current')
dfl260IfVlanUntaggedInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfVlanUntaggedInOctets.setStatus('current')
dfl260IfVlanUntaggedOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfVlanUntaggedOutOctets.setStatus('current')
dfl260IfVlanUntaggedTotOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IfVlanUntaggedTotOctets.setStatus('current')
dfl260HWSensorTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 11), )
if mibBuilder.loadTexts: dfl260HWSensorTable.setStatus('current')
dfl260HWSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 11, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260HWSensorIndex"))
if mibBuilder.loadTexts: dfl260HWSensorEntry.setStatus('current')
dfl260HWSensorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260HWSensorIndex.setStatus('current')
dfl260HWSensorName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260HWSensorName.setStatus('current')
dfl260HWSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 11, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260HWSensorValue.setStatus('current')
dfl260HWSensorUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 11, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260HWSensorUnit.setStatus('current')
dfl260SysMemUsage = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysMemUsage.setStatus('current')
dfl260SysTCPUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 13))
dfl260SysTCPRecvSmall = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 13, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysTCPRecvSmall.setStatus('current')
dfl260SysTCPRecvLarge = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 13, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysTCPRecvLarge.setStatus('current')
dfl260SysTCPSendSmall = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 13, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysTCPSendSmall.setStatus('current')
dfl260SysTCPSendLarge = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 13, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysTCPSendLarge.setStatus('current')
dfl260SysTimerUsage = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysTimerUsage.setStatus('current')
dfl260SysConnOPS = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysConnOPS.setStatus('current')
dfl260SysConnCPS = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysConnCPS.setStatus('current')
dfl260SysHCForwardedBits = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SysHCForwardedBits.setStatus('current')
dfl260VPN = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2))
dfl260IPsec = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1))
dfl260IPsecGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1))
dfl260IPsecPhaseOneActive = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecPhaseOneActive.setStatus('current')
dfl260IPsecPhaseOneAggrModeDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecPhaseOneAggrModeDone.setStatus('current')
dfl260IPsecQuickModeActive = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecQuickModeActive.setStatus('current')
dfl260IPsecPhaseOneDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecPhaseOneDone.setStatus('current')
dfl260IPsecPhaseOneFailed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecPhaseOneFailed.setStatus('current')
dfl260IPsecPhaseOneRekeyed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecPhaseOneRekeyed.setStatus('current')
dfl260IPsecQuickModeDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecQuickModeDone.setStatus('current')
dfl260IPsecQuickModeFailed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecQuickModeFailed.setStatus('current')
dfl260IPsecInfoDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecInfoDone.setStatus('current')
dfl260IPsecInfoFailed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecInfoFailed.setStatus('current')
dfl260IPsecInOctetsComp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecInOctetsComp.setStatus('current')
dfl260IPsecInOctetsUncomp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecInOctetsUncomp.setStatus('current')
dfl260IPsecOutOctetsComp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecOutOctetsComp.setStatus('current')
dfl260IPsecOutOctetsUncomp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecOutOctetsUncomp.setStatus('current')
dfl260IPsecForwardedOctetsComp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecForwardedOctetsComp.setStatus('current')
dfl260IPsecForwardedOctetsUcomp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecForwardedOctetsUcomp.setStatus('current')
dfl260IPsecInPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecInPackets.setStatus('current')
dfl260IPsecOutPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecOutPackets.setStatus('current')
dfl260IPsecForwardedPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecForwardedPackets.setStatus('current')
dfl260IPsecActiveTransforms = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecActiveTransforms.setStatus('current')
dfl260IPsecTotalTransforms = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecTotalTransforms.setStatus('current')
dfl260IPsecOutOfTransforms = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecOutOfTransforms.setStatus('current')
dfl260IPsecTotalRekeys = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPsecTotalRekeys.setStatus('current')
dfl260Rules = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 3))
dfl260RuleUseTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 3, 2), )
if mibBuilder.loadTexts: dfl260RuleUseTable.setStatus('current')
dfl260RuleUseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 3, 2, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260RuleIndex"))
if mibBuilder.loadTexts: dfl260RuleUseEntry.setStatus('current')
dfl260RuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260RuleIndex.setStatus('current')
dfl260RuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 3, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260RuleName.setStatus('current')
dfl260RuleUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260RuleUse.setStatus('current')
dfl260IPPools = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 4))
dfl260IPPoolsNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPPoolsNumber.setStatus('current')
dfl260IPPoolTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 4, 2), )
if mibBuilder.loadTexts: dfl260IPPoolTable.setStatus('current')
dfl260IPPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 4, 2, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260IPPoolIndex"))
if mibBuilder.loadTexts: dfl260IPPoolEntry.setStatus('current')
dfl260IPPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260IPPoolIndex.setStatus('current')
dfl260IPPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPPoolName.setStatus('current')
dfl260IPPoolPrepare = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 4, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPPoolPrepare.setStatus('current')
dfl260IPPoolFree = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 4, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPPoolFree.setStatus('current')
dfl260IPPoolMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 4, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPPoolMisses.setStatus('current')
dfl260IPPoolClientFails = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 4, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPPoolClientFails.setStatus('current')
dfl260IPPoolUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 4, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260IPPoolUsed.setStatus('current')
dfl260DHCPServer = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 5))
dfl260DHCPTotalRejected = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 5, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260DHCPTotalRejected.setStatus('current')
dfl260DHCPRuleTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 5, 2), )
if mibBuilder.loadTexts: dfl260DHCPRuleTable.setStatus('current')
dfl260DHCPRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 5, 2, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260DHCPRuleIndex"))
if mibBuilder.loadTexts: dfl260DHCPRuleEntry.setStatus('current')
dfl260DHCPRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260DHCPRuleIndex.setStatus('current')
dfl260DHCPRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 5, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260DHCPRuleName.setStatus('current')
dfl260DHCPRuleUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 5, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260DHCPRuleUsage.setStatus('current')
dfl260DHCPRuleUsagePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 5, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260DHCPRuleUsagePercent.setStatus('current')
dfl260DHCPActiveClients = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 5, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260DHCPActiveClients.setStatus('current')
dfl260DHCPActiveClientsPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 5, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260DHCPActiveClientsPercent.setStatus('current')
dfl260DHCPRejectedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 5, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260DHCPRejectedRequests.setStatus('current')
dfl260DHCPTotalLeases = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 5, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260DHCPTotalLeases.setStatus('current')
dfl260UserAuth = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 6))
dfl260UserAuthHTTPUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260UserAuthHTTPUsers.setStatus('current')
dfl260UserAuthXAUTHUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 6, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260UserAuthXAUTHUsers.setStatus('current')
dfl260UserAuthHTTPSUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 6, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260UserAuthHTTPSUsers.setStatus('current')
dfl260UserAuthPPPUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 6, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260UserAuthPPPUsers.setStatus('current')
dfl260UserAuthEAPUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 6, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260UserAuthEAPUsers.setStatus('current')
dfl260UserAuthRuleUseTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 6, 6), )
if mibBuilder.loadTexts: dfl260UserAuthRuleUseTable.setStatus('current')
dfl260UserAuthRuleUseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 6, 6, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260UserAuthRuleIndex"))
if mibBuilder.loadTexts: dfl260UserAuthRuleUseEntry.setStatus('current')
dfl260UserAuthRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 6, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260UserAuthRuleIndex.setStatus('current')
dfl260UserAuthRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 6, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260UserAuthRuleName.setStatus('current')
dfl260UserAuthRuleUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 6, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260UserAuthRuleUse.setStatus('current')
dfl260LinkMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 7))
dfl260LinkMonGrp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260LinkMonGrp.setStatus('current')
dfl260LinkMonGrpTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 7, 2), )
if mibBuilder.loadTexts: dfl260LinkMonGrpTable.setStatus('current')
dfl260LinkMonGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 7, 2, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260LinkMonGrpIndex"))
if mibBuilder.loadTexts: dfl260LinkMonGrpEntry.setStatus('current')
dfl260LinkMonGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260LinkMonGrpIndex.setStatus('current')
dfl260LinkMonGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 7, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260LinkMonGrpName.setStatus('current')
dfl260LinkMonGrpHostsUp = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 7, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260LinkMonGrpHostsUp.setStatus('current')
dfl260LinkMonHostTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 7, 3), )
if mibBuilder.loadTexts: dfl260LinkMonHostTable.setStatus('current')
dfl260LinkMonHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 7, 3, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260LinkMonGrpIndex"), (0, "DFL260-MIB", "dfl260LinkMonHostIndex"))
if mibBuilder.loadTexts: dfl260LinkMonHostEntry.setStatus('current')
dfl260LinkMonHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260LinkMonHostIndex.setStatus('current')
dfl260LinkMonHostId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 7, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260LinkMonHostId.setStatus('current')
dfl260LinkMonHostShortTermLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 7, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260LinkMonHostShortTermLoss.setStatus('current')
dfl260LinkMonHostPacketsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 7, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260LinkMonHostPacketsLost.setStatus('current')
dfl260Pipes = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8))
dfl260PipeUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipeUsers.setStatus('current')
dfl260PipeTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 2), )
if mibBuilder.loadTexts: dfl260PipeTable.setStatus('current')
dfl260PipeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 2, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260PipeIndex"))
if mibBuilder.loadTexts: dfl260PipeEntry.setStatus('current')
dfl260PipeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260PipeIndex.setStatus('current')
dfl260PipeName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipeName.setStatus('current')
dfl260PipeMinPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipeMinPrec.setStatus('current')
dfl260PipeMaxPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipeMaxPrec.setStatus('current')
dfl260PipeDefPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipeDefPrec.setStatus('current')
dfl260PipeNumPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipeNumPrec.setStatus('current')
dfl260PipeNumUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipeNumUsers.setStatus('current')
dfl260PipeCurrentBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipeCurrentBps.setStatus('current')
dfl260PipeCurrentPps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipeCurrentPps.setStatus('current')
dfl260PipeDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipeDelayedPackets.setStatus('current')
dfl260PipeDropedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipeDropedPackets.setStatus('current')
dfl260PipePrecTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 3), )
if mibBuilder.loadTexts: dfl260PipePrecTable.setStatus('current')
dfl260PipePrecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 3, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260PipeIndex"), (0, "DFL260-MIB", "dfl260PipePrecIndex"))
if mibBuilder.loadTexts: dfl260PipePrecEntry.setStatus('current')
dfl260PipePrecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260PipePrecIndex.setStatus('current')
dfl260PipePrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipePrec.setStatus('current')
dfl260PipePrecBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipePrecBps.setStatus('current')
dfl260PipePrecTotalPps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipePrecTotalPps.setStatus('current')
dfl260PipePrecReservedBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipePrecReservedBps.setStatus('current')
dfl260PipePrecDynLimBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipePrecDynLimBps.setStatus('current')
dfl260PipePrecDynUsrLimBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipePrecDynUsrLimBps.setStatus('current')
dfl260PipePrecDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipePrecDelayedPackets.setStatus('current')
dfl260PipePrecDropedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 8, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260PipePrecDropedPackets.setStatus('current')
dfl260ALG = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9))
dfl260AlgSessions = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260AlgSessions.setStatus('current')
dfl260AlgConnections = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260AlgConnections.setStatus('current')
dfl260AlgTCPStreams = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260AlgTCPStreams.setStatus('current')
dfl260HttpAlg = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 4))
dfl260HttpAlgTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 4, 1), )
if mibBuilder.loadTexts: dfl260HttpAlgTable.setStatus('current')
dfl260HttpAlgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 4, 1, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260HttpAlgIndex"))
if mibBuilder.loadTexts: dfl260HttpAlgEntry.setStatus('current')
dfl260HttpAlgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260HttpAlgIndex.setStatus('current')
dfl260HttpAlgName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260HttpAlgName.setStatus('current')
dfl260HttpAlgTotalRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 4, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260HttpAlgTotalRequested.setStatus('current')
dfl260HttpAlgTotalAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 4, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260HttpAlgTotalAllowed.setStatus('current')
dfl260HttpAlgTotalBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 4, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260HttpAlgTotalBlocked.setStatus('current')
dfl260HttpAlgCntFltTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 4, 2), )
if mibBuilder.loadTexts: dfl260HttpAlgCntFltTable.setStatus('current')
dfl260HttpAlgCntFltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 4, 2, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260HttpAlgIndex"), (0, "DFL260-MIB", "dfl260HttpAlgCntFltIndex"))
if mibBuilder.loadTexts: dfl260HttpAlgCntFltEntry.setStatus('current')
dfl260HttpAlgCntFltIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260HttpAlgCntFltIndex.setStatus('current')
dfl260HttpAlgCntFltName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260HttpAlgCntFltName.setStatus('current')
dfl260HttpAlgCntFltRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 4, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260HttpAlgCntFltRequests.setStatus('current')
dfl260HttpAlgCntFltAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 4, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260HttpAlgCntFltAllowed.setStatus('current')
dfl260HttpAlgCntFltBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 4, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260HttpAlgCntFltBlocked.setStatus('current')
dfl260SmtpAlg = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 5))
dfl260SmtpAlgTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 5, 1), )
if mibBuilder.loadTexts: dfl260SmtpAlgTable.setStatus('current')
dfl260SmtpAlgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 5, 1, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260SmtpAlgIndex"))
if mibBuilder.loadTexts: dfl260SmtpAlgEntry.setStatus('current')
dfl260SmtpAlgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260SmtpAlgIndex.setStatus('current')
dfl260SmtpAlgName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SmtpAlgName.setStatus('current')
dfl260SmtpAlgTotCheckedSes = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 5, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SmtpAlgTotCheckedSes.setStatus('current')
dfl260SmtpAlgTotSpamSes = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 5, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SmtpAlgTotSpamSes.setStatus('current')
dfl260SmtpAlgTotDroppedSes = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 5, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SmtpAlgTotDroppedSes.setStatus('current')
dfl260SmtpAlgDnsBlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 5, 2), )
if mibBuilder.loadTexts: dfl260SmtpAlgDnsBlTable.setStatus('current')
dfl260SmtpAlgDnsBlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 5, 2, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260SmtpAlgIndex"), (0, "DFL260-MIB", "dfl260SmtpAlgDnsBlIndex"))
if mibBuilder.loadTexts: dfl260SmtpAlgDnsBlEntry.setStatus('current')
dfl260SmtpAlgDnsBlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260SmtpAlgDnsBlIndex.setStatus('current')
dfl260SmtpAlgDnsBlName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 5, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SmtpAlgDnsBlName.setStatus('current')
dfl260SmtpAlgDnsBlChecked = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 5, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SmtpAlgDnsBlChecked.setStatus('current')
dfl260SmtpAlgDnsBlMatched = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 5, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SmtpAlgDnsBlMatched.setStatus('current')
dfl260SmtpAlgDnsBlFailChecks = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 9, 5, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260SmtpAlgDnsBlFailChecks.setStatus('current')
dfl260DHCPRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 11))
dfl260DHCPRelayCurClients = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 11, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260DHCPRelayCurClients.setStatus('current')
dfl260DHCPRelayCurTrans = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 11, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260DHCPRelayCurTrans.setStatus('current')
dfl260DHCPRelayRejected = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 11, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260DHCPRelayRejected.setStatus('current')
dfl260DHCPRelayRuleTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 11, 4), )
if mibBuilder.loadTexts: dfl260DHCPRelayRuleTable.setStatus('current')
dfl260DHCPRelayRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 11, 4, 1), ).setIndexNames((0, "DFL260-MIB", "dfl260DHCPRelayRuleIndex"))
if mibBuilder.loadTexts: dfl260DHCPRelayRuleEntry.setStatus('current')
dfl260DHCPRelayRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 11, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260DHCPRelayRuleIndex.setStatus('current')
dfl260DHCPRelayRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 11, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260DHCPRelayRuleName.setStatus('current')
dfl260DHCPRelayRuleHits = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 11, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260DHCPRelayRuleHits.setStatus('current')
dfl260DHCPRelayRuleCurClients = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 11, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260DHCPRelayRuleCurClients.setStatus('current')
dfl260DHCPRelayRuleRejCliPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 11, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260DHCPRelayRuleRejCliPkts.setStatus('current')
dfl260DHCPRelayRuleRejSrvPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 11, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260DHCPRelayRuleRejSrvPkts.setStatus('current')
dfl260HA = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 12))
dfl260HASyncSendQueueLength = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 12, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260HASyncSendQueueLength.setStatus('current')
dfl260HASyncSendQueueUsagePkt = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 12, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260HASyncSendQueueUsagePkt.setStatus('current')
dfl260HASyncSendQueueUsageOct = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 12, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260HASyncSendQueueUsageOct.setStatus('current')
dfl260HASyncSentPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 12, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260HASyncSentPackets.setStatus('current')
dfl260HASyncSendResentPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 1, 2, 12, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260HASyncSendResentPackets.setStatus('current')
dfl260StatsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 2, 1))
dfl260StatsRegGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3, 1))
dfl260SystemObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3, 1, 1)).setObjects(("DFL260-MIB", "dfl260SysCpuLoad"), ("DFL260-MIB", "dfl260SysForwardedBits"), ("DFL260-MIB", "dfl260SysForwardedPackets"), ("DFL260-MIB", "dfl260SysBuffUse"), ("DFL260-MIB", "dfl260SysConns"), ("DFL260-MIB", "dfl260HWSensorName"), ("DFL260-MIB", "dfl260HWSensorValue"), ("DFL260-MIB", "dfl260HWSensorUnit"), ("DFL260-MIB", "dfl260SysMemUsage"), ("DFL260-MIB", "dfl260SysTimerUsage"), ("DFL260-MIB", "dfl260SysConnOPS"), ("DFL260-MIB", "dfl260SysConnCPS"), ("DFL260-MIB", "dfl260SysHCForwardedBits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260SystemObjectGroup = dfl260SystemObjectGroup.setStatus('current')
dfl260IPsecObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3, 1, 2)).setObjects(("DFL260-MIB", "dfl260IPsecPhaseOneActive"), ("DFL260-MIB", "dfl260IPsecPhaseOneAggrModeDone"), ("DFL260-MIB", "dfl260IPsecQuickModeActive"), ("DFL260-MIB", "dfl260IPsecPhaseOneDone"), ("DFL260-MIB", "dfl260IPsecPhaseOneFailed"), ("DFL260-MIB", "dfl260IPsecPhaseOneRekeyed"), ("DFL260-MIB", "dfl260IPsecQuickModeDone"), ("DFL260-MIB", "dfl260IPsecQuickModeFailed"), ("DFL260-MIB", "dfl260IPsecInfoDone"), ("DFL260-MIB", "dfl260IPsecInfoFailed"), ("DFL260-MIB", "dfl260IPsecInOctetsComp"), ("DFL260-MIB", "dfl260IPsecInOctetsUncomp"), ("DFL260-MIB", "dfl260IPsecOutOctetsComp"), ("DFL260-MIB", "dfl260IPsecOutOctetsUncomp"), ("DFL260-MIB", "dfl260IPsecForwardedOctetsComp"), ("DFL260-MIB", "dfl260IPsecForwardedOctetsUcomp"), ("DFL260-MIB", "dfl260IPsecInPackets"), ("DFL260-MIB", "dfl260IPsecOutPackets"), ("DFL260-MIB", "dfl260IPsecForwardedPackets"), ("DFL260-MIB", "dfl260IPsecActiveTransforms"), ("DFL260-MIB", "dfl260IPsecTotalTransforms"), ("DFL260-MIB", "dfl260IPsecOutOfTransforms"), ("DFL260-MIB", "dfl260IPsecTotalRekeys"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260IPsecObjectGroup = dfl260IPsecObjectGroup.setStatus('current')
dfl260StateCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3, 1, 3)).setObjects(("DFL260-MIB", "dfl260SysPscTcpSyn"), ("DFL260-MIB", "dfl260SysPscTcpOpen"), ("DFL260-MIB", "dfl260SysPscTcpFin"), ("DFL260-MIB", "dfl260SysPscUdp"), ("DFL260-MIB", "dfl260SysPscIcmp"), ("DFL260-MIB", "dfl260SysPscOther"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260StateCountersGroup = dfl260StateCountersGroup.setStatus('current')
dfl260IPPoolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3, 1, 4)).setObjects(("DFL260-MIB", "dfl260IPPoolsNumber"), ("DFL260-MIB", "dfl260IPPoolName"), ("DFL260-MIB", "dfl260IPPoolPrepare"), ("DFL260-MIB", "dfl260IPPoolFree"), ("DFL260-MIB", "dfl260IPPoolMisses"), ("DFL260-MIB", "dfl260IPPoolClientFails"), ("DFL260-MIB", "dfl260IPPoolUsed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260IPPoolGroup = dfl260IPPoolGroup.setStatus('current')
dfl260DHCPServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3, 1, 5)).setObjects(("DFL260-MIB", "dfl260DHCPTotalRejected"), ("DFL260-MIB", "dfl260DHCPRuleName"), ("DFL260-MIB", "dfl260DHCPRuleUsage"), ("DFL260-MIB", "dfl260DHCPRuleUsagePercent"), ("DFL260-MIB", "dfl260DHCPActiveClients"), ("DFL260-MIB", "dfl260DHCPActiveClientsPercent"), ("DFL260-MIB", "dfl260DHCPRejectedRequests"), ("DFL260-MIB", "dfl260DHCPTotalLeases"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260DHCPServerGroup = dfl260DHCPServerGroup.setStatus('current')
dfl260RuleUseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3, 1, 6)).setObjects(("DFL260-MIB", "dfl260RuleName"), ("DFL260-MIB", "dfl260RuleUse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260RuleUseGroup = dfl260RuleUseGroup.setStatus('current')
dfl260UserAuthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3, 1, 7)).setObjects(("DFL260-MIB", "dfl260UserAuthHTTPUsers"), ("DFL260-MIB", "dfl260UserAuthXAUTHUsers"), ("DFL260-MIB", "dfl260UserAuthHTTPSUsers"), ("DFL260-MIB", "dfl260UserAuthPPPUsers"), ("DFL260-MIB", "dfl260UserAuthEAPUsers"), ("DFL260-MIB", "dfl260UserAuthRuleName"), ("DFL260-MIB", "dfl260UserAuthRuleUse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260UserAuthGroup = dfl260UserAuthGroup.setStatus('current')
dfl260IfStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3, 1, 8)).setObjects(("DFL260-MIB", "dfl260IfName"), ("DFL260-MIB", "dfl260IfFragsIn"), ("DFL260-MIB", "dfl260IfFragReassOk"), ("DFL260-MIB", "dfl260IfFragReassFail"), ("DFL260-MIB", "dfl260IfPktsInCnt"), ("DFL260-MIB", "dfl260IfPktsOutCnt"), ("DFL260-MIB", "dfl260IfBitsInCnt"), ("DFL260-MIB", "dfl260IfBitsOutCnt"), ("DFL260-MIB", "dfl260IfPktsTotCnt"), ("DFL260-MIB", "dfl260IfBitsTotCnt"), ("DFL260-MIB", "dfl260IfHCPktsInCnt"), ("DFL260-MIB", "dfl260IfHCPktsOutCnt"), ("DFL260-MIB", "dfl260IfHCBitsInCnt"), ("DFL260-MIB", "dfl260IfHCBitsOutCnt"), ("DFL260-MIB", "dfl260IfHCPktsTotCnt"), ("DFL260-MIB", "dfl260IfHCBitsTotCnt"), ("DFL260-MIB", "dfl260IfRxRingFifoErrors"), ("DFL260-MIB", "dfl260IfRxDespools"), ("DFL260-MIB", "dfl260IfRxAvgUse"), ("DFL260-MIB", "dfl260IfRxRingSaturation"), ("DFL260-MIB", "dfl260RxRingFlooded"), ("DFL260-MIB", "dfl260IfTxDespools"), ("DFL260-MIB", "dfl260IfTxAvgUse"), ("DFL260-MIB", "dfl260IfTxRingSaturation"), ("DFL260-MIB", "dfl260RxTingFlooded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260IfStatsGroup = dfl260IfStatsGroup.setStatus('current')
dfl260LinkMonitorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3, 1, 9)).setObjects(("DFL260-MIB", "dfl260LinkMonGrp"), ("DFL260-MIB", "dfl260LinkMonGrpName"), ("DFL260-MIB", "dfl260LinkMonGrpHostsUp"), ("DFL260-MIB", "dfl260LinkMonHostId"), ("DFL260-MIB", "dfl260LinkMonHostShortTermLoss"), ("DFL260-MIB", "dfl260LinkMonHostPacketsLost"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260LinkMonitorGroup = dfl260LinkMonitorGroup.setStatus('current')
dfl260PipesObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3, 1, 10)).setObjects(("DFL260-MIB", "dfl260PipeUsers"), ("DFL260-MIB", "dfl260PipeName"), ("DFL260-MIB", "dfl260PipeMinPrec"), ("DFL260-MIB", "dfl260PipeMaxPrec"), ("DFL260-MIB", "dfl260PipeDefPrec"), ("DFL260-MIB", "dfl260PipeNumPrec"), ("DFL260-MIB", "dfl260PipeNumUsers"), ("DFL260-MIB", "dfl260PipeCurrentBps"), ("DFL260-MIB", "dfl260PipeCurrentPps"), ("DFL260-MIB", "dfl260PipeDelayedPackets"), ("DFL260-MIB", "dfl260PipeDropedPackets"), ("DFL260-MIB", "dfl260PipePrec"), ("DFL260-MIB", "dfl260PipePrecBps"), ("DFL260-MIB", "dfl260PipePrecTotalPps"), ("DFL260-MIB", "dfl260PipePrecReservedBps"), ("DFL260-MIB", "dfl260PipePrecDynLimBps"), ("DFL260-MIB", "dfl260PipePrecDynUsrLimBps"), ("DFL260-MIB", "dfl260PipePrecDelayedPackets"), ("DFL260-MIB", "dfl260PipePrecDropedPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260PipesObjectGroup = dfl260PipesObjectGroup.setStatus('current')
dfl260DHCPRelayObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3, 1, 12)).setObjects(("DFL260-MIB", "dfl260DHCPRelayCurClients"), ("DFL260-MIB", "dfl260DHCPRelayCurTrans"), ("DFL260-MIB", "dfl260DHCPRelayRejected"), ("DFL260-MIB", "dfl260DHCPRelayRuleName"), ("DFL260-MIB", "dfl260DHCPRelayRuleHits"), ("DFL260-MIB", "dfl260DHCPRelayRuleCurClients"), ("DFL260-MIB", "dfl260DHCPRelayRuleRejCliPkts"), ("DFL260-MIB", "dfl260DHCPRelayRuleRejSrvPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260DHCPRelayObjectGroup = dfl260DHCPRelayObjectGroup.setStatus('current')
dfl260AlgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3, 1, 13)).setObjects(("DFL260-MIB", "dfl260AlgSessions"), ("DFL260-MIB", "dfl260AlgConnections"), ("DFL260-MIB", "dfl260AlgTCPStreams"), ("DFL260-MIB", "dfl260HttpAlgName"), ("DFL260-MIB", "dfl260HttpAlgTotalRequested"), ("DFL260-MIB", "dfl260HttpAlgTotalAllowed"), ("DFL260-MIB", "dfl260HttpAlgTotalBlocked"), ("DFL260-MIB", "dfl260HttpAlgCntFltName"), ("DFL260-MIB", "dfl260HttpAlgCntFltRequests"), ("DFL260-MIB", "dfl260HttpAlgCntFltAllowed"), ("DFL260-MIB", "dfl260HttpAlgCntFltBlocked"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260AlgGroup = dfl260AlgGroup.setStatus('current')
dfl260HAGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3, 1, 14)).setObjects(("DFL260-MIB", "dfl260HASyncSendQueueLength"), ("DFL260-MIB", "dfl260HASyncSendQueueUsagePkt"), ("DFL260-MIB", "dfl260HASyncSendQueueUsageOct"), ("DFL260-MIB", "dfl260HASyncSentPackets"), ("DFL260-MIB", "dfl260HASyncSendResentPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260HAGroup = dfl260HAGroup.setStatus('current')
dfl260IfVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3, 1, 15)).setObjects(("DFL260-MIB", "dfl260IfVlanUntaggedInPkts"), ("DFL260-MIB", "dfl260IfVlanUntaggedOutPkts"), ("DFL260-MIB", "dfl260IfVlanUntaggedTotPkts"), ("DFL260-MIB", "dfl260IfVlanUntaggedInOctets"), ("DFL260-MIB", "dfl260IfVlanUntaggedOutOctets"), ("DFL260-MIB", "dfl260IfVlanUntaggedTotOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260IfVlanGroup = dfl260IfVlanGroup.setStatus('current')
dfl260SmtpAlgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3, 1, 16)).setObjects(("DFL260-MIB", "dfl260SmtpAlgName"), ("DFL260-MIB", "dfl260SmtpAlgTotCheckedSes"), ("DFL260-MIB", "dfl260SmtpAlgTotSpamSes"), ("DFL260-MIB", "dfl260SmtpAlgTotDroppedSes"), ("DFL260-MIB", "dfl260SmtpAlgDnsBlName"), ("DFL260-MIB", "dfl260SmtpAlgDnsBlChecked"), ("DFL260-MIB", "dfl260SmtpAlgDnsBlMatched"), ("DFL260-MIB", "dfl260SmtpAlgDnsBlFailChecks"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260SmtpAlgGroup = dfl260SmtpAlgGroup.setStatus('current')
dfl260SysTCPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 3, 1, 17)).setObjects(("DFL260-MIB", "dfl260SysTCPRecvSmall"), ("DFL260-MIB", "dfl260SysTCPRecvLarge"), ("DFL260-MIB", "dfl260SysTCPSendSmall"), ("DFL260-MIB", "dfl260SysTCPSendLarge"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260SysTCPGroup = dfl260SysTCPGroup.setStatus('current')
dfl260StatsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 171, 20, 2, 1, 2, 2, 1, 1)).setObjects(("DFL260-MIB", "dfl260SystemObjectGroup"), ("DFL260-MIB", "dfl260IPsecObjectGroup"), ("DFL260-MIB", "dfl260StateCountersGroup"), ("DFL260-MIB", "dfl260IPPoolGroup"), ("DFL260-MIB", "dfl260DHCPServerGroup"), ("DFL260-MIB", "dfl260RuleUseGroup"), ("DFL260-MIB", "dfl260UserAuthGroup"), ("DFL260-MIB", "dfl260IfStatsGroup"), ("DFL260-MIB", "dfl260LinkMonitorGroup"), ("DFL260-MIB", "dfl260PipesObjectGroup"), ("DFL260-MIB", "dfl260DHCPRelayObjectGroup"), ("DFL260-MIB", "dfl260AlgGroup"), ("DFL260-MIB", "dfl260HAGroup"), ("DFL260-MIB", "dfl260IfVlanGroup"), ("DFL260-MIB", "dfl260SmtpAlgGroup"), ("DFL260-MIB", "dfl260SysTCPGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260StatsCompliance = dfl260StatsCompliance.setStatus('current')
mibBuilder.exportSymbols("DFL260-MIB", dfl260LinkMonitor=dfl260LinkMonitor, dfl260HWSensorEntry=dfl260HWSensorEntry, dfl260DHCPRelayRuleRejCliPkts=dfl260DHCPRelayRuleRejCliPkts, dfl260LinkMonHostId=dfl260LinkMonHostId, dfl260SysForwardedPackets=dfl260SysForwardedPackets, dfl260HWSensorValue=dfl260HWSensorValue, dfl260HASyncSendQueueUsagePkt=dfl260HASyncSendQueueUsagePkt, dfl260RuleUseEntry=dfl260RuleUseEntry, dfl260IfFragReassOk=dfl260IfFragReassOk, dfl260UserAuthGroup=dfl260UserAuthGroup, dfl260SysBuffUse=dfl260SysBuffUse, dfl260LinkMonGrpIndex=dfl260LinkMonGrpIndex, dfl260HttpAlgCntFltBlocked=dfl260HttpAlgCntFltBlocked, dfl260IfHCPktsOutCnt=dfl260IfHCPktsOutCnt, netdefendMgmt=netdefendMgmt, dfl260SysTCPUsage=dfl260SysTCPUsage, dfl260IfStatsIndex=dfl260IfStatsIndex, dfl260PipePrecTotalPps=dfl260PipePrecTotalPps, dfl260LinkMonHostTable=dfl260LinkMonHostTable, dfl260IPPoolFree=dfl260IPPoolFree, dfl260RxRingFlooded=dfl260RxRingFlooded, dfl260PipePrecDynLimBps=dfl260PipePrecDynLimBps, dfl260RxTingFlooded=dfl260RxTingFlooded, dfl260IfVlanStatsTable=dfl260IfVlanStatsTable, dfl260HWSensorTable=dfl260HWSensorTable, dfl260IPsecQuickModeFailed=dfl260IPsecQuickModeFailed, dfl260UserAuthPPPUsers=dfl260UserAuthPPPUsers, dfl260DHCPRejectedRequests=dfl260DHCPRejectedRequests, dfl260DHCPRuleUsage=dfl260DHCPRuleUsage, dfl260IfRxAvgUse=dfl260IfRxAvgUse, dfl260IPsecOutOfTransforms=dfl260IPsecOutOfTransforms, dfl260IfTxAvgUse=dfl260IfTxAvgUse, dfl260IPsecQuickModeActive=dfl260IPsecQuickModeActive, dfl260IfBitsInCnt=dfl260IfBitsInCnt, dfl260IPsecOutPackets=dfl260IPsecOutPackets, dfl260IfBitsOutCnt=dfl260IfBitsOutCnt, dfl260IPsecForwardedOctetsUcomp=dfl260IPsecForwardedOctetsUcomp, dfl260SmtpAlgTotDroppedSes=dfl260SmtpAlgTotDroppedSes, dfl260PipePrecBps=dfl260PipePrecBps, dfl260IPsecInfoDone=dfl260IPsecInfoDone, dfl260SysConns=dfl260SysConns, dfl260UserAuthXAUTHUsers=dfl260UserAuthXAUTHUsers, dfl260HttpAlgCntFltRequests=dfl260HttpAlgCntFltRequests, dfl260SysPscIcmp=dfl260SysPscIcmp, dfl260HWSensorIndex=dfl260HWSensorIndex, dfl260IPsecOutOctetsComp=dfl260IPsecOutOctetsComp, dfl260IfVlanUntaggedTotOctets=dfl260IfVlanUntaggedTotOctets, dfl260IfStatsGroup=dfl260IfStatsGroup, dfl260AlgTCPStreams=dfl260AlgTCPStreams, dfl260IPsecInfoFailed=dfl260IPsecInfoFailed, dfl260Rules=dfl260Rules, dfl260IfVlanUntaggedOutOctets=dfl260IfVlanUntaggedOutOctets, dfl260IPPoolsNumber=dfl260IPPoolsNumber, dfl260MibObjectGroups=dfl260MibObjectGroups, dfl260DHCPRelayObjectGroup=dfl260DHCPRelayObjectGroup, dfl260RuleUseGroup=dfl260RuleUseGroup, dfl260IfBitsTotCnt=dfl260IfBitsTotCnt, dfl260IfRxRingEntry=dfl260IfRxRingEntry, dfl260HWSensorName=dfl260HWSensorName, dfl260IPsecForwardedOctetsComp=dfl260IPsecForwardedOctetsComp, dfl260IfTxRingTable=dfl260IfTxRingTable, dfl260SystemObjectGroup=dfl260SystemObjectGroup, dfl260IfRxDespools=dfl260IfRxDespools, dfl260SysPscTcpSyn=dfl260SysPscTcpSyn, dfl260SmtpAlgDnsBlName=dfl260SmtpAlgDnsBlName, dfl260IfHCPktsInCnt=dfl260IfHCPktsInCnt, dfl260UserAuthRuleUse=dfl260UserAuthRuleUse, dfl260HASyncSendQueueUsageOct=dfl260HASyncSendQueueUsageOct, dfl260PipePrecDropedPackets=dfl260PipePrecDropedPackets, dfl260SmtpAlgDnsBlEntry=dfl260SmtpAlgDnsBlEntry, dfl260IfPktsInCnt=dfl260IfPktsInCnt, dfl260HttpAlgCntFltIndex=dfl260HttpAlgCntFltIndex, dfl260DHCPRelayRuleIndex=dfl260DHCPRelayRuleIndex, dfl260IPPools=dfl260IPPools, dfl260LinkMonGrpTable=dfl260LinkMonGrpTable, dfl260IfVlanGroup=dfl260IfVlanGroup, dfl260IfRxRingFifoErrors=dfl260IfRxRingFifoErrors, dfl260SysMemUsage=dfl260SysMemUsage, dfl260MibConfs=dfl260MibConfs, dfl260IPPoolName=dfl260IPPoolName, dfl260IfTxDespools=dfl260IfTxDespools, dfl260LinkMonHostEntry=dfl260LinkMonHostEntry, dfl260IPPoolGroup=dfl260IPPoolGroup, dfl260LinkMonGrp=dfl260LinkMonGrp, dfl260IfFragsIn=dfl260IfFragsIn, dfl260ALG=dfl260ALG, dfl260SmtpAlgIndex=dfl260SmtpAlgIndex, dfl260SmtpAlgGroup=dfl260SmtpAlgGroup, dfl260SysForwardedBits=dfl260SysForwardedBits, dfl260PipeDelayedPackets=dfl260PipeDelayedPackets, dfl260IPPoolTable=dfl260IPPoolTable, dfl260IPPoolMisses=dfl260IPPoolMisses, dfl260SysPscOther=dfl260SysPscOther, dfl260IfRxRingIndex=dfl260IfRxRingIndex, dfl260SmtpAlgTotCheckedSes=dfl260SmtpAlgTotCheckedSes, dfl260RuleUse=dfl260RuleUse, dfl260SmtpAlgTotSpamSes=dfl260SmtpAlgTotSpamSes, dfl260DHCPRelayCurTrans=dfl260DHCPRelayCurTrans, dfl260PipePrecIndex=dfl260PipePrecIndex, dfl260IPsecTotalRekeys=dfl260IPsecTotalRekeys, dfl260PipeDefPrec=dfl260PipeDefPrec, dfl260IPsecPhaseOneAggrModeDone=dfl260IPsecPhaseOneAggrModeDone, dfl260PipeTable=dfl260PipeTable, dfl260PipeMinPrec=dfl260PipeMinPrec, dfl260OS=dfl260OS, dfl260IfFragReassFail=dfl260IfFragReassFail, dfl260IfVlanUntaggedInPkts=dfl260IfVlanUntaggedInPkts, dfl260SysHCForwardedBits=dfl260SysHCForwardedBits, dfl260PipePrecDynUsrLimBps=dfl260PipePrecDynUsrLimBps, dfl260HA=dfl260HA, utmFirewall=utmFirewall, dfl260DHCPRelay=dfl260DHCPRelay, dfl260IfStatsEntry=dfl260IfStatsEntry, dfl260HASyncSendResentPackets=dfl260HASyncSendResentPackets, dfl260IfVlanUntaggedOutPkts=dfl260IfVlanUntaggedOutPkts, dfl260SmtpAlgEntry=dfl260SmtpAlgEntry, dfl260DHCPRuleEntry=dfl260DHCPRuleEntry, dfl260UserAuthRuleName=dfl260UserAuthRuleName, dfl260IPsecInOctetsComp=dfl260IPsecInOctetsComp, dfl260IPsecOutOctetsUncomp=dfl260IPsecOutOctetsUncomp, dfl260DHCPServer=dfl260DHCPServer, dfl260PipeCurrentBps=dfl260PipeCurrentBps, dfl260DHCPRelayRuleEntry=dfl260DHCPRelayRuleEntry, dfl260SmtpAlg=dfl260SmtpAlg, dfl260AlgSessions=dfl260AlgSessions, dfl260DHCPRuleIndex=dfl260DHCPRuleIndex, dfl260DHCPRelayRuleTable=dfl260DHCPRelayRuleTable, dfl260SysConnCPS=dfl260SysConnCPS, dfl260DHCPRelayRuleHits=dfl260DHCPRelayRuleHits, dfl260RuleUseTable=dfl260RuleUseTable, dfl260SysTCPRecvSmall=dfl260SysTCPRecvSmall, dfl260PipesObjectGroup=dfl260PipesObjectGroup, dfl260SysTCPGroup=dfl260SysTCPGroup, dfl260MibModules=dfl260MibModules, dfl260PipeUsers=dfl260PipeUsers, dfl260LinkMonGrpHostsUp=dfl260LinkMonGrpHostsUp, dfl260IPPoolUsed=dfl260IPPoolUsed, dfl260AlgConnections=dfl260AlgConnections, dfl260IPsecPhaseOneActive=dfl260IPsecPhaseOneActive, dfl260DHCPRelayRuleRejSrvPkts=dfl260DHCPRelayRuleRejSrvPkts, dfl260StatsConformance=dfl260StatsConformance, dfl260SysTCPSendSmall=dfl260SysTCPSendSmall, dfl260IPsecInOctetsUncomp=dfl260IPsecInOctetsUncomp, dfl260SmtpAlgName=dfl260SmtpAlgName, dfl260IfHCBitsInCnt=dfl260IfHCBitsInCnt, dfl260SysPerStateCounters=dfl260SysPerStateCounters, dfl260IPPoolIndex=dfl260IPPoolIndex, dfl260DHCPTotalLeases=dfl260DHCPTotalLeases, dfl260PipeNumUsers=dfl260PipeNumUsers, dfl260PipePrecEntry=dfl260PipePrecEntry, dfl260UserAuthHTTPSUsers=dfl260UserAuthHTTPSUsers, dfl260Pipes=dfl260Pipes, dfl260SysPscTcpOpen=dfl260SysPscTcpOpen, dfl260IPsecPhaseOneRekeyed=dfl260IPsecPhaseOneRekeyed, dfl260UserAuthRuleUseEntry=dfl260UserAuthRuleUseEntry, dfl260IfRxRingSaturation=dfl260IfRxRingSaturation, dfl260IfVlanIndex=dfl260IfVlanIndex, dfl260UserAuthHTTPUsers=dfl260UserAuthHTTPUsers, dfl260LinkMonitorGroup=dfl260LinkMonitorGroup, dfl260HttpAlgIndex=dfl260HttpAlgIndex, dfl260PipeName=dfl260PipeName, dfl260SmtpAlgDnsBlChecked=dfl260SmtpAlgDnsBlChecked, dfl260LinkMonGrpEntry=dfl260LinkMonGrpEntry, dfl260UserAuth=dfl260UserAuth, dfl260IfName=dfl260IfName, dfl260IPPoolEntry=dfl260IPPoolEntry, dfl260HASyncSentPackets=dfl260HASyncSentPackets, dfl260RuleIndex=dfl260RuleIndex, dfl260PipeMaxPrec=dfl260PipeMaxPrec, dfl260LinkMonGrpName=dfl260LinkMonGrpName, dfl260PipePrecTable=dfl260PipePrecTable, dfl260SysTCPSendLarge=dfl260SysTCPSendLarge, dfl260VPN=dfl260VPN, dfl260SysPscUdp=dfl260SysPscUdp, dfl260IPsec=dfl260IPsec, dfl260DHCPRuleTable=dfl260DHCPRuleTable, dfl260IPPoolPrepare=dfl260IPPoolPrepare, dfl260HASyncSendQueueLength=dfl260HASyncSendQueueLength, dfl260System=dfl260System, dfl260IfTxRingIndex=dfl260IfTxRingIndex, dfl260IfHCBitsTotCnt=dfl260IfHCBitsTotCnt, dfl260IPsecGlobal=dfl260IPsecGlobal, dfl260LinkMonHostShortTermLoss=dfl260LinkMonHostShortTermLoss, dlink=dlink, dfl260DHCPRelayCurClients=dfl260DHCPRelayCurClients, dfl260SmtpAlgDnsBlTable=dfl260SmtpAlgDnsBlTable, dfl260SysConnOPS=dfl260SysConnOPS, dfl260DHCPServerGroup=dfl260DHCPServerGroup, dfl260DHCPActiveClients=dfl260DHCPActiveClients, dfl260IfTxRingEntry=dfl260IfTxRingEntry, dfl260LinkMonHostIndex=dfl260LinkMonHostIndex, dfl260SysTCPRecvLarge=dfl260SysTCPRecvLarge, dfl260HttpAlgName=dfl260HttpAlgName, dfl260IfRxRingTable=dfl260IfRxRingTable, dfl260HttpAlgCntFltName=dfl260HttpAlgCntFltName, dfl260PipeEntry=dfl260PipeEntry, dfl260PipePrec=dfl260PipePrec, dfl260DHCPRelayRuleCurClients=dfl260DHCPRelayRuleCurClients, dfl260DHCPActiveClientsPercent=dfl260DHCPActiveClientsPercent, dfl260SysCpuLoad=dfl260SysCpuLoad, dfl260IPPoolClientFails=dfl260IPPoolClientFails, dfl260HttpAlgCntFltEntry=dfl260HttpAlgCntFltEntry, dfl260StateCountersGroup=dfl260StateCountersGroup, dfl260HWSensorUnit=dfl260HWSensorUnit, dfl260IfPktsTotCnt=dfl260IfPktsTotCnt, dfl260UserAuthRuleIndex=dfl260UserAuthRuleIndex, dfl260HttpAlgCntFltAllowed=dfl260HttpAlgCntFltAllowed, dfl260IPsecInPackets=dfl260IPsecInPackets, dfl260OSStats=dfl260OSStats, dfl260IfHCPktsTotCnt=dfl260IfHCPktsTotCnt, PYSNMP_MODULE_ID=dfl260_MIB, dfl260IPsecQuickModeDone=dfl260IPsecQuickModeDone, dfl260LinkMonHostPacketsLost=dfl260LinkMonHostPacketsLost, dfl260_MIB=dfl260_MIB, dfl260HttpAlgTotalBlocked=dfl260HttpAlgTotalBlocked, dfl260DHCPTotalRejected=dfl260DHCPTotalRejected, dfl260IfVlanUntaggedInOctets=dfl260IfVlanUntaggedInOctets, dfl260=dfl260, dfl260IfVlanUntaggedTotPkts=dfl260IfVlanUntaggedTotPkts, dfl260PipePrecDelayedPackets=dfl260PipePrecDelayedPackets, dfl260IfVlanStatsEntry=dfl260IfVlanStatsEntry, dfl260SysTimerUsage=dfl260SysTimerUsage, dfl260HttpAlgTotalRequested=dfl260HttpAlgTotalRequested, dfl260HttpAlgTable=dfl260HttpAlgTable, dfl260SmtpAlgDnsBlIndex=dfl260SmtpAlgDnsBlIndex, dfl260RuleName=dfl260RuleName, dfl260IPsecActiveTransforms=dfl260IPsecActiveTransforms, dfl260PipeNumPrec=dfl260PipeNumPrec, dfl260HttpAlgTotalAllowed=dfl260HttpAlgTotalAllowed, dfl260HttpAlgCntFltTable=dfl260HttpAlgCntFltTable, dfl260reg=dfl260reg, dfl260IfTxRingSaturation=dfl260IfTxRingSaturation, dfl260PipeCurrentPps=dfl260PipeCurrentPps, dfl260SmtpAlgTable=dfl260SmtpAlgTable, dfl260PipeIndex=dfl260PipeIndex, dfl260PipeDropedPackets=dfl260PipeDropedPackets, dfl260PipePrecReservedBps=dfl260PipePrecReservedBps, dfl260SmtpAlgDnsBlFailChecks=dfl260SmtpAlgDnsBlFailChecks, dfl260StatsRegGroups=dfl260StatsRegGroups, dfl260SysPscTcpFin=dfl260SysPscTcpFin, dfl260IPsecTotalTransforms=dfl260IPsecTotalTransforms, dfl260UserAuthEAPUsers=dfl260UserAuthEAPUsers, dfl260HttpAlgEntry=dfl260HttpAlgEntry, dfl260SmtpAlgDnsBlMatched=dfl260SmtpAlgDnsBlMatched, dfl260StatsCompliance=dfl260StatsCompliance, dfl260UserAuthRuleUseTable=dfl260UserAuthRuleUseTable, dfl260IfStatsTable=dfl260IfStatsTable, dfl260IfHCBitsOutCnt=dfl260IfHCBitsOutCnt, dfl260DHCPRuleUsagePercent=dfl260DHCPRuleUsagePercent, dfl260IfPktsOutCnt=dfl260IfPktsOutCnt, dfl260HttpAlg=dfl260HttpAlg, dfl260AlgGroup=dfl260AlgGroup, dfl260IPsecPhaseOneFailed=dfl260IPsecPhaseOneFailed, dfl260DHCPRuleName=dfl260DHCPRuleName)
mibBuilder.exportSymbols("DFL260-MIB", dfl260DHCPRelayRejected=dfl260DHCPRelayRejected, dfl260IPsecPhaseOneDone=dfl260IPsecPhaseOneDone, dfl260IPsecForwardedPackets=dfl260IPsecForwardedPackets, dfl260IPsecObjectGroup=dfl260IPsecObjectGroup, dfl260DHCPRelayRuleName=dfl260DHCPRelayRuleName, dfl260HAGroup=dfl260HAGroup)
