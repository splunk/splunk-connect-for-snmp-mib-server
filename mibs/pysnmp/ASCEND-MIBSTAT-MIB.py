#
# PySNMP MIB module ASCEND-MIBSTAT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBSTAT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:12:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, TimeTicks, Integer32, Bits, Counter64, ObjectIdentity, Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter32, IpAddress, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "Integer32", "Bits", "Counter64", "ObjectIdentity", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter32", "IpAddress", "ModuleIdentity", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

mibsdslLineStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 180))
mibatmIfStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 185))
mibds3AtmLineStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 182))
mibbRINetworkInterfaceState = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 28))
mibdmtAlDslLineStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 181))
mibe3AtmLineStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 184))
miboc3AtmLineStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 183))
mibsdslLineStatusTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 180, 1), )
if mibBuilder.loadTexts: mibsdslLineStatusTable.setStatus('mandatory')
mibsdslLineStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1), ).setIndexNames((0, "ASCEND-MIBSTAT-MIB", "sdslLineStatus-Shelf-o"), (0, "ASCEND-MIBSTAT-MIB", "sdslLineStatus-Slot-o"), (0, "ASCEND-MIBSTAT-MIB", "sdslLineStatus-Item-o"))
if mibBuilder.loadTexts: mibsdslLineStatusEntry.setStatus('mandatory')
sdslLineStatus_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 1), Integer32()).setLabel("sdslLineStatus-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_Shelf_o.setStatus('mandatory')
sdslLineStatus_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 2), Integer32()).setLabel("sdslLineStatus-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_Slot_o.setStatus('mandatory')
sdslLineStatus_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 3), Integer32()).setLabel("sdslLineStatus-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_Item_o.setStatus('mandatory')
sdslLineStatus_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("sdslLineStatus-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalAddress_Shelf.setStatus('mandatory')
sdslLineStatus_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("sdslLineStatus-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalAddress_Slot.setStatus('mandatory')
sdslLineStatus_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 6), Integer32()).setLabel("sdslLineStatus-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalAddress_ItemNumber.setStatus('mandatory')
sdslLineStatus_LineState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("doesNotExist", 1), ("disabled", 2), ("active", 3)))).setLabel("sdslLineStatus-LineState").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslLineStatus_LineState.setStatus('mandatory')
sdslLineStatus_SparePhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("sdslLineStatus-SparePhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslLineStatus_SparePhysicalAddress_Shelf.setStatus('mandatory')
sdslLineStatus_SparePhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("sdslLineStatus-SparePhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslLineStatus_SparePhysicalAddress_Slot.setStatus('mandatory')
sdslLineStatus_SparePhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 10), Integer32()).setLabel("sdslLineStatus-SparePhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslLineStatus_SparePhysicalAddress_ItemNumber.setStatus('mandatory')
sdslLineStatus_SparingState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("sparingNone", 1), ("primaryActive", 2), ("primaryInactive", 3), ("secondaryActive", 4), ("secondaryInactive", 5)))).setLabel("sdslLineStatus-SparingState").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_SparingState.setStatus('mandatory')
sdslLineStatus_SparingChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("manual", 2), ("automatic", 3), ("test", 4)))).setLabel("sdslLineStatus-SparingChangeReason").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_SparingChangeReason.setStatus('mandatory')
sdslLineStatus_SparingChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 13), Integer32()).setLabel("sdslLineStatus-SparingChangeTime").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_SparingChangeTime.setStatus('mandatory')
sdslLineStatus_SparingChangeCounter = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 14), Integer32()).setLabel("sdslLineStatus-SparingChangeCounter").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_SparingChangeCounter.setStatus('mandatory')
sdslLineStatus_VpiVciRange = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("vpi01Vci321023", 6), ("vpi03Vci32511", 1), ("vpi07Vci32255", 2), ("vpi015Vci32127", 3), ("vpi031Vci3263", 4), ("notApplicable", 5)))).setLabel("sdslLineStatus-VpiVciRange").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_VpiVciRange.setStatus('mandatory')
sdslLineStatus_VpSwitchingVpi = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 16), Integer32()).setLabel("sdslLineStatus-VpSwitchingVpi").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_VpSwitchingVpi.setStatus('mandatory')
sdslLineStatus_ErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 17), Integer32()).setLabel("sdslLineStatus-ErrorCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslLineStatus_ErrorCount.setStatus('mandatory')
sdslLineStatus_PhysicalStatus_IfGroupIndex = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 18), Integer32()).setLabel("sdslLineStatus-PhysicalStatus-IfGroupIndex").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatus_IfGroupIndex.setStatus('mandatory')
sdslLineStatus_PhysicalStatus_UnitType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("coe", 1), ("cpe", 2)))).setLabel("sdslLineStatus-PhysicalStatus-UnitType").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatus_UnitType.setStatus('mandatory')
sdslLineStatus_PhysicalStatus_DevLineState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 16, 17, 20, 21))).clone(namedValues=NamedValues(("config", 1), ("deactivate", 2), ("inactive", 3), ("activating", 4), ("activeRx", 5), ("portUp", 6), ("portupPendingDeactivate", 7), ("deactivateLost", 8), ("hardwareTest", 9), ("outOfService", 10), ("tipRingDetect", 11), ("foreverBert", 12), ("tipWait1", 13), ("tipHunt", 14), ("tipWait2", 15), ("alteraTipHunt", 19), ("cellDelination", 16), ("deactivateWait", 17), ("preact", 20), ("preactWait", 21)))).setLabel("sdslLineStatus-PhysicalStatus-DevLineState").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatus_DevLineState.setStatus('mandatory')
sdslLineStatus_PhysicalStatus_UpStreamRate = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 21), Integer32()).setLabel("sdslLineStatus-PhysicalStatus-UpStreamRate").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatus_UpStreamRate.setStatus('mandatory')
sdslLineStatus_PhysicalStatus_DownStreamRate = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 22), Integer32()).setLabel("sdslLineStatus-PhysicalStatus-DownStreamRate").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatus_DownStreamRate.setStatus('mandatory')
sdslLineStatus_PhysicalStatus_MajorFirmwareVer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 23), Integer32()).setLabel("sdslLineStatus-PhysicalStatus-MajorFirmwareVer").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatus_MajorFirmwareVer.setStatus('mandatory')
sdslLineStatus_PhysicalStatus_MinorFirmwareVer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 24), Integer32()).setLabel("sdslLineStatus-PhysicalStatus-MinorFirmwareVer").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatus_MinorFirmwareVer.setStatus('mandatory')
sdslLineStatus_PhysicalStatus_HardwareVer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 25), Integer32()).setLabel("sdslLineStatus-PhysicalStatus-HardwareVer").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatus_HardwareVer.setStatus('mandatory')
sdslLineStatus_PhysicalStatistic_LineUpTimer_Days = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 26), Integer32()).setLabel("sdslLineStatus-PhysicalStatistic-LineUpTimer-Days").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatistic_LineUpTimer_Days.setStatus('mandatory')
sdslLineStatus_PhysicalStatistic_LineUpTimer_Hours = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 27), Integer32()).setLabel("sdslLineStatus-PhysicalStatistic-LineUpTimer-Hours").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatistic_LineUpTimer_Hours.setStatus('mandatory')
sdslLineStatus_PhysicalStatistic_LineUpTimer_Minutes = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 28), Integer32()).setLabel("sdslLineStatus-PhysicalStatistic-LineUpTimer-Minutes").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatistic_LineUpTimer_Minutes.setStatus('mandatory')
sdslLineStatus_PhysicalStatistic_RxSignalPresent = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 2))).clone(namedValues=NamedValues(("yes", 3), ("no", 2)))).setLabel("sdslLineStatus-PhysicalStatistic-RxSignalPresent").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatistic_RxSignalPresent.setStatus('mandatory')
sdslLineStatus_PhysicalStatistic_LineQuality = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 30), Integer32()).setLabel("sdslLineStatus-PhysicalStatistic-LineQuality").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatistic_LineQuality.setStatus('mandatory')
sdslLineStatus_PhysicalStatistic_UpDwnCntr = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 31), Integer32()).setLabel("sdslLineStatus-PhysicalStatistic-UpDwnCntr").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatistic_UpDwnCntr.setStatus('mandatory')
sdslLineStatus_PhysicalStatistic_SelfTest = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("passed", 1), ("selfTestFailed", 2), ("localLoopBackFailed", 3)))).setLabel("sdslLineStatus-PhysicalStatistic-SelfTest").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatistic_SelfTest.setStatus('mandatory')
sdslLineStatus_PhysicalStatistic_FarEndDbAttenuation = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 33), Integer32()).setLabel("sdslLineStatus-PhysicalStatistic-FarEndDbAttenuation").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatistic_FarEndDbAttenuation.setStatus('mandatory')
sdslLineStatus_PhysicalStatistic_FirmwareStartupStage = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65))).clone(namedValues=NamedValues(("idle", 1), ("activateSystem", 2), ("dcCancellation", 3), ("initStartup", 4), ("adaptEcStage1", 5), ("adaptEcStage2", 6), ("adaptEcStage3", 7), ("adaptEcAfterAagc1", 8), ("adaptEcAfterAagc2", 9), ("adaptEcAfterAagc3", 10), ("adaptEcAfterAagc4", 11), ("adaptEc1", 12), ("adaptEc2", 13), ("adaptEc3", 14), ("waitForSignal", 15), ("adaptAagc1", 16), ("adaptAagc2", 17), ("adaptAagc3", 18), ("waitForRemotePhaseLock", 19), ("remotePhaseLock", 20), ("startOpenEye", 21), ("openEye1", 22), ("openEye2", 23), ("openEye3", 24), ("openEye4", 25), ("openEye5", 26), ("openEye6", 27), ("openEye7", 28), ("openEyeAtOptimalPhase1", 29), ("openEyeAtOptimalPhase2", 30), ("openEyeAtOptimalPhase3", 31), ("openEyeAtOptimalPhase4", 32), ("openEyeAtOptimalPhase5", 33), ("openEyeAtOptimalPhase6", 34), ("openEyeAtOptimalPhase7", 35), ("openEyeAtOptimalPhase8", 36), ("openEyeAtOptimalPhase9", 37), ("openEyeAtOptimalPhase10", 38), ("openEyeAtOptimalPhase11", 39), ("openEyeAtOptimalPhase12", 40), ("openEyeAtOptimalPhase13", 41), ("phaseAdaptEc1", 42), ("phaseAdaptEc2", 43), ("phaseAdaptEc3", 44), ("phaseAdaptEc4", 45), ("acquireFreq1", 46), ("acquireFreq2", 47), ("acquireFreq3", 48), ("acquireFreq4", 49), ("acquireFreq5", 50), ("phaseLocked", 51), ("optimalPhase", 52), ("tx2Level", 53), ("adaptDagcAfterAagc", 54), ("adaptEq1", 55), ("adaptEq2", 56), ("adaptEq3", 57), ("waitFor1Min", 58), ("transmit4Level", 59), ("waitFor4Level", 60), ("adaptModules1", 61), ("adaptModules2", 62), ("setNormalConditions", 63), ("normalOperation", 64), ("deactivateMode", 65)))).setLabel("sdslLineStatus-PhysicalStatistic-FirmwareStartupStage").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatistic_FirmwareStartupStage.setStatus('mandatory')
sdslLineStatus_PhysicalStatistic_HdlcRxCrcErrorCnt = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 35), Integer32()).setLabel("sdslLineStatus-PhysicalStatistic-HdlcRxCrcErrorCnt").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineStatus_PhysicalStatistic_HdlcRxCrcErrorCnt.setStatus('mandatory')
sdslLineStatus_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 180, 1, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("sdslLineStatus-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslLineStatus_Action_o.setStatus('mandatory')
mibatmIfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 185, 1), )
if mibBuilder.loadTexts: mibatmIfStatusTable.setStatus('mandatory')
mibatmIfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 185, 1, 1), ).setIndexNames((0, "ASCEND-MIBSTAT-MIB", "atmIfStatus-Shelf-o"), (0, "ASCEND-MIBSTAT-MIB", "atmIfStatus-Slot-o"), (0, "ASCEND-MIBSTAT-MIB", "atmIfStatus-Item-o"), (0, "ASCEND-MIBSTAT-MIB", "atmIfStatus-LogicalItem-o"))
if mibBuilder.loadTexts: mibatmIfStatusEntry.setStatus('mandatory')
atmIfStatus_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 185, 1, 1, 1), Integer32()).setLabel("atmIfStatus-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfStatus_Shelf_o.setStatus('mandatory')
atmIfStatus_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 185, 1, 1, 2), Integer32()).setLabel("atmIfStatus-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfStatus_Slot_o.setStatus('mandatory')
atmIfStatus_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 185, 1, 1, 3), Integer32()).setLabel("atmIfStatus-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfStatus_Item_o.setStatus('mandatory')
atmIfStatus_LogicalItem_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 185, 1, 1, 4), Integer32()).setLabel("atmIfStatus-LogicalItem-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfStatus_LogicalItem_o.setStatus('mandatory')
atmIfStatus_Address_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 185, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("atmIfStatus-Address-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfStatus_Address_PhysicalAddress_Shelf.setStatus('mandatory')
atmIfStatus_Address_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 185, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("atmIfStatus-Address-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfStatus_Address_PhysicalAddress_Slot.setStatus('mandatory')
atmIfStatus_Address_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 185, 1, 1, 7), Integer32()).setLabel("atmIfStatus-Address-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfStatus_Address_PhysicalAddress_ItemNumber.setStatus('mandatory')
atmIfStatus_Address_LogicalItem = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 185, 1, 1, 8), Integer32()).setLabel("atmIfStatus-Address-LogicalItem").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfStatus_Address_LogicalItem.setStatus('mandatory')
atmIfStatus_IfNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 185, 1, 1, 9), Integer32()).setLabel("atmIfStatus-IfNumber").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfStatus_IfNumber.setStatus('mandatory')
atmIfStatus_NailedGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 185, 1, 1, 10), Integer32()).setLabel("atmIfStatus-NailedGroup").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfStatus_NailedGroup.setStatus('mandatory')
atmIfStatus_PortState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 185, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notConfigured", 1), ("up", 2), ("down", 3)))).setLabel("atmIfStatus-PortState").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfStatus_PortState.setStatus('mandatory')
atmIfStatus_SignallingState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 185, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notConfigured", 1), ("up", 2), ("down", 3)))).setLabel("atmIfStatus-SignallingState").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfStatus_SignallingState.setStatus('mandatory')
atmIfStatus_PnniLinkState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 185, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notConfigured", 1), ("up", 2), ("down", 3)))).setLabel("atmIfStatus-PnniLinkState").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfStatus_PnniLinkState.setStatus('mandatory')
atmIfStatus_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 185, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("atmIfStatus-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfStatus_Action_o.setStatus('mandatory')
mibds3AtmLineStatusTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 182, 1), )
if mibBuilder.loadTexts: mibds3AtmLineStatusTable.setStatus('mandatory')
mibds3AtmLineStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1), ).setIndexNames((0, "ASCEND-MIBSTAT-MIB", "ds3AtmLineStatus-Shelf-o"), (0, "ASCEND-MIBSTAT-MIB", "ds3AtmLineStatus-Slot-o"), (0, "ASCEND-MIBSTAT-MIB", "ds3AtmLineStatus-Item-o"))
if mibBuilder.loadTexts: mibds3AtmLineStatusEntry.setStatus('mandatory')
ds3AtmLineStatus_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 1), Integer32()).setLabel("ds3AtmLineStatus-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_Shelf_o.setStatus('mandatory')
ds3AtmLineStatus_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 2), Integer32()).setLabel("ds3AtmLineStatus-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_Slot_o.setStatus('mandatory')
ds3AtmLineStatus_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 3), Integer32()).setLabel("ds3AtmLineStatus-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_Item_o.setStatus('mandatory')
ds3AtmLineStatus_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("ds3AtmLineStatus-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3AtmLineStatus_PhysicalAddress_Shelf.setStatus('mandatory')
ds3AtmLineStatus_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("ds3AtmLineStatus-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3AtmLineStatus_PhysicalAddress_Slot.setStatus('mandatory')
ds3AtmLineStatus_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 6), Integer32()).setLabel("ds3AtmLineStatus-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3AtmLineStatus_PhysicalAddress_ItemNumber.setStatus('mandatory')
ds3AtmLineStatus_LineState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("doesNotExist", 1), ("disabled", 2), ("lossOfSignal", 3), ("lossOfFrame", 4), ("yellowReceive", 5), ("aisReceive", 6), ("active", 7)))).setLabel("ds3AtmLineStatus-LineState").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_LineState.setStatus('mandatory')
ds3AtmLineStatus_SparePhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("ds3AtmLineStatus-SparePhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3AtmLineStatus_SparePhysicalAddress_Shelf.setStatus('mandatory')
ds3AtmLineStatus_SparePhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("ds3AtmLineStatus-SparePhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3AtmLineStatus_SparePhysicalAddress_Slot.setStatus('mandatory')
ds3AtmLineStatus_SparePhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 10), Integer32()).setLabel("ds3AtmLineStatus-SparePhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3AtmLineStatus_SparePhysicalAddress_ItemNumber.setStatus('mandatory')
ds3AtmLineStatus_SparingState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("sparingNone", 1), ("primaryActive", 2), ("primaryInactive", 3), ("secondaryActive", 4), ("secondaryInactive", 5)))).setLabel("ds3AtmLineStatus-SparingState").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_SparingState.setStatus('mandatory')
ds3AtmLineStatus_SparingChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("manual", 2), ("automatic", 3), ("test", 4)))).setLabel("ds3AtmLineStatus-SparingChangeReason").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_SparingChangeReason.setStatus('mandatory')
ds3AtmLineStatus_SparingChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 13), Integer32()).setLabel("ds3AtmLineStatus-SparingChangeTime").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_SparingChangeTime.setStatus('mandatory')
ds3AtmLineStatus_SparingChangeCounter = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 14), Integer32()).setLabel("ds3AtmLineStatus-SparingChangeCounter").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_SparingChangeCounter.setStatus('mandatory')
ds3AtmLineStatus_VpiVciRange = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n-01-3232767", 1), ("n-03-3216383", 2), ("n-07-328191", 3), ("n-015-324095", 4), ("n-031-322047", 5), ("n-063-321023", 6), ("n-0127-32511", 7), ("n-0255-32255", 8), ("vpi0255Vci32255", 9), ("vpi0255Vci32511", 10), ("vpi0255Vci321023", 11), ("vpi0255Vci322047", 12), ("vpi0255Vci324095", 13), ("vpi0255Vci328191", 14), ("vpi0255Vci3216383", 15)))).setLabel("ds3AtmLineStatus-VpiVciRange").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_VpiVciRange.setStatus('mandatory')
ds3AtmLineStatus_VcSwitchingVpi = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 16), DisplayString()).setLabel("ds3AtmLineStatus-VcSwitchingVpi").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_VcSwitchingVpi.setStatus('mandatory')
ds3AtmLineStatus_FBitErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 17), Integer32()).setLabel("ds3AtmLineStatus-FBitErrorCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_FBitErrorCount.setStatus('mandatory')
ds3AtmLineStatus_PBitErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 18), Integer32()).setLabel("ds3AtmLineStatus-PBitErrorCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_PBitErrorCount.setStatus('mandatory')
ds3AtmLineStatus_CpBitErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 19), Integer32()).setLabel("ds3AtmLineStatus-CpBitErrorCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_CpBitErrorCount.setStatus('mandatory')
ds3AtmLineStatus_FebErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 20), Integer32()).setLabel("ds3AtmLineStatus-FebErrorCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_FebErrorCount.setStatus('mandatory')
ds3AtmLineStatus_BpvErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 21), Integer32()).setLabel("ds3AtmLineStatus-BpvErrorCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_BpvErrorCount.setStatus('mandatory')
ds3AtmLineStatus_LossOfSignal = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("ds3AtmLineStatus-LossOfSignal").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_LossOfSignal.setStatus('mandatory')
ds3AtmLineStatus_LossOfFrame = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("ds3AtmLineStatus-LossOfFrame").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_LossOfFrame.setStatus('mandatory')
ds3AtmLineStatus_YellowReceive = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("ds3AtmLineStatus-YellowReceive").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_YellowReceive.setStatus('mandatory')
ds3AtmLineStatus_AisReceive = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("ds3AtmLineStatus-AisReceive").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3AtmLineStatus_AisReceive.setStatus('mandatory')
ds3AtmLineStatus_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 182, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("ds3AtmLineStatus-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3AtmLineStatus_Action_o.setStatus('mandatory')
mibbRINetworkInterfaceStateTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 28, 1), )
if mibBuilder.loadTexts: mibbRINetworkInterfaceStateTable.setStatus('mandatory')
mibbRINetworkInterfaceStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1), ).setIndexNames((0, "ASCEND-MIBSTAT-MIB", "bRINetworkInterfaceState-Shelf-o"), (0, "ASCEND-MIBSTAT-MIB", "bRINetworkInterfaceState-Slot-o"), (0, "ASCEND-MIBSTAT-MIB", "bRINetworkInterfaceState-Item-o"))
if mibBuilder.loadTexts: mibbRINetworkInterfaceStateEntry.setStatus('mandatory')
bRINetworkInterfaceState_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 1), Integer32()).setLabel("bRINetworkInterfaceState-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_Shelf_o.setStatus('mandatory')
bRINetworkInterfaceState_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 2), Integer32()).setLabel("bRINetworkInterfaceState-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_Slot_o.setStatus('mandatory')
bRINetworkInterfaceState_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 3), Integer32()).setLabel("bRINetworkInterfaceState-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_Item_o.setStatus('mandatory')
bRINetworkInterfaceState_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("bRINetworkInterfaceState-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bRINetworkInterfaceState_PhysicalAddress_Shelf.setStatus('mandatory')
bRINetworkInterfaceState_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("bRINetworkInterfaceState-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bRINetworkInterfaceState_PhysicalAddress_Slot.setStatus('mandatory')
bRINetworkInterfaceState_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 6), Integer32()).setLabel("bRINetworkInterfaceState-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bRINetworkInterfaceState_PhysicalAddress_ItemNumber.setStatus('mandatory')
bRINetworkInterfaceState_LineState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("doesNotExist", 1), ("disabled", 2), ("noPhysical", 3), ("noLogical", 4), ("noMgmt", 5), ("pointToPoint", 6), ("multipoint1", 7), ("multipoint2", 8)))).setLabel("bRINetworkInterfaceState-LineState").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bRINetworkInterfaceState_LineState.setStatus('mandatory')
bRINetworkInterfaceState_SparePhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("bRINetworkInterfaceState-SparePhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bRINetworkInterfaceState_SparePhysicalAddress_Shelf.setStatus('mandatory')
bRINetworkInterfaceState_SparePhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("bRINetworkInterfaceState-SparePhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bRINetworkInterfaceState_SparePhysicalAddress_Slot.setStatus('mandatory')
bRINetworkInterfaceState_SparePhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 11), Integer32()).setLabel("bRINetworkInterfaceState-SparePhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bRINetworkInterfaceState_SparePhysicalAddress_ItemNumber.setStatus('mandatory')
bRINetworkInterfaceState_SparingState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("sparingNone", 1), ("primaryActive", 2), ("primaryInactive", 3), ("secondaryActive", 4), ("secondaryInactive", 5)))).setLabel("bRINetworkInterfaceState-SparingState").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_SparingState.setStatus('mandatory')
bRINetworkInterfaceState_SparingChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("manual", 2), ("automatic", 3), ("test", 4)))).setLabel("bRINetworkInterfaceState-SparingChangeReason").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_SparingChangeReason.setStatus('mandatory')
bRINetworkInterfaceState_SparingChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 14), Integer32()).setLabel("bRINetworkInterfaceState-SparingChangeTime").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_SparingChangeTime.setStatus('mandatory')
bRINetworkInterfaceState_SparingChangeCounter = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 15), Integer32()).setLabel("bRINetworkInterfaceState-SparingChangeCounter").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_SparingChangeCounter.setStatus('mandatory')
bRINetworkInterfaceState_PhysicalStatus_IfGroupIndex = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 16), Integer32()).setLabel("bRINetworkInterfaceState-PhysicalStatus-IfGroupIndex").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_PhysicalStatus_IfGroupIndex.setStatus('mandatory')
bRINetworkInterfaceState_PhysicalStatistic_LineUpTimer_Days = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 17), Integer32()).setLabel("bRINetworkInterfaceState-PhysicalStatistic-LineUpTimer-Days").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_PhysicalStatistic_LineUpTimer_Days.setStatus('mandatory')
bRINetworkInterfaceState_PhysicalStatistic_LineUpTimer_Hours = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 18), Integer32()).setLabel("bRINetworkInterfaceState-PhysicalStatistic-LineUpTimer-Hours").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_PhysicalStatistic_LineUpTimer_Hours.setStatus('mandatory')
bRINetworkInterfaceState_PhysicalStatistic_LineUpTimer_Minutes = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 19), Integer32()).setLabel("bRINetworkInterfaceState-PhysicalStatistic-LineUpTimer-Minutes").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_PhysicalStatistic_LineUpTimer_Minutes.setStatus('mandatory')
bRINetworkInterfaceState_PhysicalStatistic_UpDwnCntr = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 20), Integer32()).setLabel("bRINetworkInterfaceState-PhysicalStatistic-UpDwnCntr").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_PhysicalStatistic_UpDwnCntr.setStatus('mandatory')
bRINetworkInterfaceState_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("bRINetworkInterfaceState-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bRINetworkInterfaceState_Action_o.setStatus('mandatory')
mibbRINetworkInterfaceState_PhysicalStatistic_ErrorCountTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 28, 4), ).setLabel("mibbRINetworkInterfaceState-PhysicalStatistic-ErrorCountTable")
if mibBuilder.loadTexts: mibbRINetworkInterfaceState_PhysicalStatistic_ErrorCountTable.setStatus('mandatory')
mibbRINetworkInterfaceState_PhysicalStatistic_ErrorCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 28, 4, 1), ).setLabel("mibbRINetworkInterfaceState-PhysicalStatistic-ErrorCountEntry").setIndexNames((0, "ASCEND-MIBSTAT-MIB", "bRINetworkInterfaceState-PhysicalStatistic-ErrorCount-Shelf-o"), (0, "ASCEND-MIBSTAT-MIB", "bRINetworkInterfaceState-PhysicalStatistic-ErrorCount-Slot-o"), (0, "ASCEND-MIBSTAT-MIB", "bRINetworkInterfaceState-PhysicalStatistic-ErrorCount-Item-o"), (0, "ASCEND-MIBSTAT-MIB", "bRINetworkInterfaceState-PhysicalStatistic-ErrorCount-Index-o"))
if mibBuilder.loadTexts: mibbRINetworkInterfaceState_PhysicalStatistic_ErrorCountEntry.setStatus('mandatory')
bRINetworkInterfaceState_PhysicalStatistic_ErrorCount_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 4, 1, 1), Integer32()).setLabel("bRINetworkInterfaceState-PhysicalStatistic-ErrorCount-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_PhysicalStatistic_ErrorCount_Shelf_o.setStatus('mandatory')
bRINetworkInterfaceState_PhysicalStatistic_ErrorCount_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 4, 1, 2), Integer32()).setLabel("bRINetworkInterfaceState-PhysicalStatistic-ErrorCount-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_PhysicalStatistic_ErrorCount_Slot_o.setStatus('mandatory')
bRINetworkInterfaceState_PhysicalStatistic_ErrorCount_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 4, 1, 3), Integer32()).setLabel("bRINetworkInterfaceState-PhysicalStatistic-ErrorCount-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_PhysicalStatistic_ErrorCount_Item_o.setStatus('mandatory')
bRINetworkInterfaceState_PhysicalStatistic_ErrorCount_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 4, 1, 4), Integer32()).setLabel("bRINetworkInterfaceState-PhysicalStatistic-ErrorCount-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_PhysicalStatistic_ErrorCount_Index_o.setStatus('mandatory')
bRINetworkInterfaceState_PhysicalStatistic_ErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 4, 1, 5), Integer32()).setLabel("bRINetworkInterfaceState-PhysicalStatistic-ErrorCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bRINetworkInterfaceState_PhysicalStatistic_ErrorCount.setStatus('mandatory')
mibbRINetworkInterfaceState_ErrorCountTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 28, 2), ).setLabel("mibbRINetworkInterfaceState-ErrorCountTable")
if mibBuilder.loadTexts: mibbRINetworkInterfaceState_ErrorCountTable.setStatus('mandatory')
mibbRINetworkInterfaceState_ErrorCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 28, 2, 1), ).setLabel("mibbRINetworkInterfaceState-ErrorCountEntry").setIndexNames((0, "ASCEND-MIBSTAT-MIB", "bRINetworkInterfaceState-ErrorCount-Shelf-o"), (0, "ASCEND-MIBSTAT-MIB", "bRINetworkInterfaceState-ErrorCount-Slot-o"), (0, "ASCEND-MIBSTAT-MIB", "bRINetworkInterfaceState-ErrorCount-Item-o"), (0, "ASCEND-MIBSTAT-MIB", "bRINetworkInterfaceState-ErrorCount-Index-o"))
if mibBuilder.loadTexts: mibbRINetworkInterfaceState_ErrorCountEntry.setStatus('mandatory')
bRINetworkInterfaceState_ErrorCount_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 2, 1, 1), Integer32()).setLabel("bRINetworkInterfaceState-ErrorCount-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_ErrorCount_Shelf_o.setStatus('mandatory')
bRINetworkInterfaceState_ErrorCount_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 2, 1, 2), Integer32()).setLabel("bRINetworkInterfaceState-ErrorCount-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_ErrorCount_Slot_o.setStatus('mandatory')
bRINetworkInterfaceState_ErrorCount_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 2, 1, 3), Integer32()).setLabel("bRINetworkInterfaceState-ErrorCount-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_ErrorCount_Item_o.setStatus('mandatory')
bRINetworkInterfaceState_ErrorCount_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 2, 1, 4), Integer32()).setLabel("bRINetworkInterfaceState-ErrorCount-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_ErrorCount_Index_o.setStatus('mandatory')
bRINetworkInterfaceState_ErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 2, 1, 5), Integer32()).setLabel("bRINetworkInterfaceState-ErrorCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bRINetworkInterfaceState_ErrorCount.setStatus('mandatory')
mibbRINetworkInterfaceState_ChannelStateTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 28, 3), ).setLabel("mibbRINetworkInterfaceState-ChannelStateTable")
if mibBuilder.loadTexts: mibbRINetworkInterfaceState_ChannelStateTable.setStatus('mandatory')
mibbRINetworkInterfaceState_ChannelStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 28, 3, 1), ).setLabel("mibbRINetworkInterfaceState-ChannelStateEntry").setIndexNames((0, "ASCEND-MIBSTAT-MIB", "bRINetworkInterfaceState-ChannelState-Shelf-o"), (0, "ASCEND-MIBSTAT-MIB", "bRINetworkInterfaceState-ChannelState-Slot-o"), (0, "ASCEND-MIBSTAT-MIB", "bRINetworkInterfaceState-ChannelState-Item-o"), (0, "ASCEND-MIBSTAT-MIB", "bRINetworkInterfaceState-ChannelState-Index-o"))
if mibBuilder.loadTexts: mibbRINetworkInterfaceState_ChannelStateEntry.setStatus('mandatory')
bRINetworkInterfaceState_ChannelState_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 3, 1, 1), Integer32()).setLabel("bRINetworkInterfaceState-ChannelState-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_ChannelState_Shelf_o.setStatus('mandatory')
bRINetworkInterfaceState_ChannelState_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 3, 1, 2), Integer32()).setLabel("bRINetworkInterfaceState-ChannelState-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_ChannelState_Slot_o.setStatus('mandatory')
bRINetworkInterfaceState_ChannelState_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 3, 1, 3), Integer32()).setLabel("bRINetworkInterfaceState-ChannelState-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_ChannelState_Item_o.setStatus('mandatory')
bRINetworkInterfaceState_ChannelState_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 3, 1, 4), Integer32()).setLabel("bRINetworkInterfaceState-ChannelState-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bRINetworkInterfaceState_ChannelState_Index_o.setStatus('mandatory')
bRINetworkInterfaceState_ChannelState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 28, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("unavailable", 1), ("unused", 2), ("outOfService", 3), ("nailedUp", 4), ("held", 5), ("offHook", 6), ("idle", 7), ("clearPending", 8), ("dialing", 9), ("ringing", 10), ("connected", 11), ("signaling", 12), ("cutThrough", 13), ("currentD", 14), ("backupD", 15), ("maintainence", 16), ("spcUp", 17), ("disabled", 18)))).setLabel("bRINetworkInterfaceState-ChannelState").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bRINetworkInterfaceState_ChannelState.setStatus('mandatory')
mibdmtAlDslLineStatusTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 181, 1), )
if mibBuilder.loadTexts: mibdmtAlDslLineStatusTable.setStatus('mandatory')
mibdmtAlDslLineStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1), ).setIndexNames((0, "ASCEND-MIBSTAT-MIB", "dmtAlDslLineStatus-Shelf-o"), (0, "ASCEND-MIBSTAT-MIB", "dmtAlDslLineStatus-Slot-o"), (0, "ASCEND-MIBSTAT-MIB", "dmtAlDslLineStatus-Item-o"))
if mibBuilder.loadTexts: mibdmtAlDslLineStatusEntry.setStatus('mandatory')
dmtAlDslLineStatus_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 1), Integer32()).setLabel("dmtAlDslLineStatus-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_Shelf_o.setStatus('mandatory')
dmtAlDslLineStatus_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 2), Integer32()).setLabel("dmtAlDslLineStatus-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_Slot_o.setStatus('mandatory')
dmtAlDslLineStatus_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 3), Integer32()).setLabel("dmtAlDslLineStatus-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_Item_o.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("dmtAlDslLineStatus-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalAddress_Shelf.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("dmtAlDslLineStatus-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalAddress_Slot.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 6), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalAddress_ItemNumber.setStatus('mandatory')
dmtAlDslLineStatus_LineState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("doesNotExist", 1), ("disabled", 2), ("active", 3)))).setLabel("dmtAlDslLineStatus-LineState").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_LineState.setStatus('mandatory')
dmtAlDslLineStatus_SparePhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("dmtAlDslLineStatus-SparePhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dmtAlDslLineStatus_SparePhysicalAddress_Shelf.setStatus('mandatory')
dmtAlDslLineStatus_SparePhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("dmtAlDslLineStatus-SparePhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dmtAlDslLineStatus_SparePhysicalAddress_Slot.setStatus('mandatory')
dmtAlDslLineStatus_SparePhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 10), Integer32()).setLabel("dmtAlDslLineStatus-SparePhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dmtAlDslLineStatus_SparePhysicalAddress_ItemNumber.setStatus('mandatory')
dmtAlDslLineStatus_SparingState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("sparingNone", 1), ("primaryActive", 2), ("primaryInactive", 3), ("secondaryActive", 4), ("secondaryInactive", 5)))).setLabel("dmtAlDslLineStatus-SparingState").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_SparingState.setStatus('mandatory')
dmtAlDslLineStatus_SparingChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("manual", 2), ("automatic", 3), ("test", 4)))).setLabel("dmtAlDslLineStatus-SparingChangeReason").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_SparingChangeReason.setStatus('mandatory')
dmtAlDslLineStatus_SparingChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 13), Integer32()).setLabel("dmtAlDslLineStatus-SparingChangeTime").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_SparingChangeTime.setStatus('mandatory')
dmtAlDslLineStatus_SparingChangeCounter = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 14), Integer32()).setLabel("dmtAlDslLineStatus-SparingChangeCounter").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_SparingChangeCounter.setStatus('mandatory')
dmtAlDslLineStatus_VpiVciRange = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("vpi01Vci321023", 6), ("vpi03Vci32511", 1), ("vpi07Vci32255", 2), ("vpi015Vci32127", 3), ("vpi031Vci3263", 4), ("notApplicable", 5)))).setLabel("dmtAlDslLineStatus-VpiVciRange").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_VpiVciRange.setStatus('mandatory')
dmtAlDslLineStatus_VpSwitchingVpi = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 16), Integer32()).setLabel("dmtAlDslLineStatus-VpSwitchingVpi").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_VpSwitchingVpi.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_IfGroupIndex = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 17), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatus-IfGroupIndex").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_IfGroupIndex.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_UnitType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("coe", 1), ("cpe", 2)))).setLabel("dmtAlDslLineStatus-PhysicalStatus-UnitType").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_UnitType.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_DevLineState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 9, 17, 33, 256, 106, 122, 138, 154, 86))).clone(namedValues=NamedValues(("down", 1), ("activation", 9), ("training", 17), ("portUp", 33), ("failed", 256), ("loopback", 106), ("test", 122), ("download", 138), ("fastRetrain", 154), ("dummy", 86)))).setLabel("dmtAlDslLineStatus-PhysicalStatus-DevLineState").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_DevLineState.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_UpStreamRateFast = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 20), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatus-UpStreamRateFast").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_UpStreamRateFast.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_DownStreamRateFast = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 21), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatus-DownStreamRateFast").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_DownStreamRateFast.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_UpStreamRateInterleaved = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 22), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatus-UpStreamRateInterleaved").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_UpStreamRateInterleaved.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_DownStreamRateInterleaved = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 23), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatus-DownStreamRateInterleaved").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_DownStreamRateInterleaved.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_UpStreamLatency = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("fast", 2), ("interleave", 3), ("both", 4)))).setLabel("dmtAlDslLineStatus-PhysicalStatus-UpStreamLatency").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_UpStreamLatency.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_DownStreamLatency = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("fast", 2), ("interleave", 3), ("both", 4)))).setLabel("dmtAlDslLineStatus-PhysicalStatus-DownStreamLatency").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_DownStreamLatency.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_FirmwareVer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 26), DisplayString()).setLabel("dmtAlDslLineStatus-PhysicalStatus-FirmwareVer").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_FirmwareVer.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_AnsiAdslVer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 27), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatus-AnsiAdslVer").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_AnsiAdslVer.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_InitialAdslVer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 28), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatus-InitialAdslVer").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_InitialAdslVer.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_HardwareVer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 29), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatus-HardwareVer").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_HardwareVer.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_ModemHwState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 129, 130, 131, 132))).clone(namedValues=NamedValues(("down", 1), ("initOk", 129), ("badSdram", 130), ("badCache", 131), ("badCacheSdram", 132)))).setLabel("dmtAlDslLineStatus-PhysicalStatus-ModemHwState").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_ModemHwState.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_AccumBitErr = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 31), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatus-AccumBitErr").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_AccumBitErr.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_NumSecValid = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 32), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatus-NumSecValid").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_NumSecValid.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_NumSecInvalid = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 33), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatus-NumSecInvalid").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_NumSecInvalid.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatus_OperationalMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 9, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266))).clone(namedValues=NamedValues(("ansiDmt", 2), ("gDmt", 3), ("gLite", 9), ("unknown", 256), ("ansiAlcatel141", 257), ("ansiAdi", 258), ("ansiAlcatelPost141", 259), ("uawg", 260), ("annexB", 261), ("annexCGliteFbm", 262), ("annexCGdmtFbm", 263), ("annexCGliteDbm", 264), ("annexCGdmtDbm", 265), ("annexBEtsi", 266)))).setLabel("dmtAlDslLineStatus-PhysicalStatus-OperationalMode").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatus_OperationalMode.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_LineUpTimer_Days = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 35), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-LineUpTimer-Days").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_LineUpTimer_Days.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_LineUpTimer_Hours = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 36), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-LineUpTimer-Hours").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_LineUpTimer_Hours.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_LineUpTimer_Minutes = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 37), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-LineUpTimer-Minutes").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_LineUpTimer_Minutes.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_RxSignalPresent = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 2))).clone(namedValues=NamedValues(("yes", 3), ("no", 2)))).setLabel("dmtAlDslLineStatus-PhysicalStatistic-RxSignalPresent").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_RxSignalPresent.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_UpDwnCntr = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 39), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-UpDwnCntr").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_UpDwnCntr.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_SelfTest = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notDone", 1), ("failed", 2), ("passed", 3)))).setLabel("dmtAlDslLineStatus-PhysicalStatistic-SelfTest").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_SelfTest.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_NoiseMarginDown = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 41), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-NoiseMarginDown").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_NoiseMarginDown.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_AttenuationDown = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 42), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-AttenuationDown").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_AttenuationDown.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_OutputPowerDown = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 43), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-OutputPowerDown").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_OutputPowerDown.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_NoiseMarginUp = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 44), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-NoiseMarginUp").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_NoiseMarginUp.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_AttenuationUp = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 45), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-AttenuationUp").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_AttenuationUp.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_OutputPowerUp = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 46), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-OutputPowerUp").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_OutputPowerUp.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_NearEndFec = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 47), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-NearEndFec").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_NearEndFec.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_NearEndCrc = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 48), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-NearEndCrc").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_NearEndCrc.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_NearEndHec = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 49), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-NearEndHec").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_NearEndHec.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_FarEndFec = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 50), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-FarEndFec").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_FarEndFec.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_FarEndCrc = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 51), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-FarEndCrc").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_FarEndCrc.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_FarEndHec = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 52), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-FarEndHec").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_FarEndHec.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_ReceivedRsBlocks = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 53), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-ReceivedRsBlocks").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_ReceivedRsBlocks.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_TransmittedRsBlocks = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 54), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-TransmittedRsBlocks").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_TransmittedRsBlocks.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_IncomingCells = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 55), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-IncomingCells").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_IncomingCells.setStatus('mandatory')
dmtAlDslLineStatus_PhysicalStatistic_OutgoingCells = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 56), Integer32()).setLabel("dmtAlDslLineStatus-PhysicalStatistic-OutgoingCells").setMaxAccess("readonly")
if mibBuilder.loadTexts: dmtAlDslLineStatus_PhysicalStatistic_OutgoingCells.setStatus('mandatory')
dmtAlDslLineStatus_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 181, 1, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("dmtAlDslLineStatus-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dmtAlDslLineStatus_Action_o.setStatus('mandatory')
mibe3AtmLineStatusTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 184, 1), )
if mibBuilder.loadTexts: mibe3AtmLineStatusTable.setStatus('mandatory')
mibe3AtmLineStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1), ).setIndexNames((0, "ASCEND-MIBSTAT-MIB", "e3AtmLineStatus-Shelf-o"), (0, "ASCEND-MIBSTAT-MIB", "e3AtmLineStatus-Slot-o"), (0, "ASCEND-MIBSTAT-MIB", "e3AtmLineStatus-Item-o"))
if mibBuilder.loadTexts: mibe3AtmLineStatusEntry.setStatus('mandatory')
e3AtmLineStatus_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 1), Integer32()).setLabel("e3AtmLineStatus-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmLineStatus_Shelf_o.setStatus('mandatory')
e3AtmLineStatus_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 2), Integer32()).setLabel("e3AtmLineStatus-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmLineStatus_Slot_o.setStatus('mandatory')
e3AtmLineStatus_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 3), Integer32()).setLabel("e3AtmLineStatus-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmLineStatus_Item_o.setStatus('mandatory')
e3AtmLineStatus_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("e3AtmLineStatus-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmLineStatus_PhysicalAddress_Shelf.setStatus('mandatory')
e3AtmLineStatus_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("e3AtmLineStatus-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmLineStatus_PhysicalAddress_Slot.setStatus('mandatory')
e3AtmLineStatus_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 6), Integer32()).setLabel("e3AtmLineStatus-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmLineStatus_PhysicalAddress_ItemNumber.setStatus('mandatory')
e3AtmLineStatus_LineState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("doesNotExist", 1), ("disabled", 2), ("lossOfSignal", 3), ("lossOfFrame", 4), ("yellowReceive", 5), ("aisReceive", 6), ("active", 7)))).setLabel("e3AtmLineStatus-LineState").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmLineStatus_LineState.setStatus('mandatory')
e3AtmLineStatus_SparePhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("e3AtmLineStatus-SparePhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmLineStatus_SparePhysicalAddress_Shelf.setStatus('mandatory')
e3AtmLineStatus_SparePhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("e3AtmLineStatus-SparePhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmLineStatus_SparePhysicalAddress_Slot.setStatus('mandatory')
e3AtmLineStatus_SparePhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 10), Integer32()).setLabel("e3AtmLineStatus-SparePhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmLineStatus_SparePhysicalAddress_ItemNumber.setStatus('mandatory')
e3AtmLineStatus_SparingState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("sparingNone", 1), ("primaryActive", 2), ("primaryInactive", 3), ("secondaryActive", 4), ("secondaryInactive", 5)))).setLabel("e3AtmLineStatus-SparingState").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmLineStatus_SparingState.setStatus('mandatory')
e3AtmLineStatus_SparingChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("manual", 2), ("automatic", 3), ("test", 4)))).setLabel("e3AtmLineStatus-SparingChangeReason").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmLineStatus_SparingChangeReason.setStatus('mandatory')
e3AtmLineStatus_SparingChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 13), Integer32()).setLabel("e3AtmLineStatus-SparingChangeTime").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmLineStatus_SparingChangeTime.setStatus('mandatory')
e3AtmLineStatus_SparingChangeCounter = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 14), Integer32()).setLabel("e3AtmLineStatus-SparingChangeCounter").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmLineStatus_SparingChangeCounter.setStatus('mandatory')
e3AtmLineStatus_VpiVciRange = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n-01-3232767", 1), ("n-03-3216383", 2), ("n-07-328191", 3), ("n-015-324095", 4), ("n-031-322047", 5), ("n-063-321023", 6), ("n-0127-32511", 7), ("n-0255-32255", 8), ("vpi0255Vci32255", 9), ("vpi0255Vci32511", 10), ("vpi0255Vci321023", 11), ("vpi0255Vci322047", 12), ("vpi0255Vci324095", 13), ("vpi0255Vci328191", 14), ("vpi0255Vci3216383", 15)))).setLabel("e3AtmLineStatus-VpiVciRange").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmLineStatus_VpiVciRange.setStatus('mandatory')
e3AtmLineStatus_VcSwitchingVpi = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 16), DisplayString()).setLabel("e3AtmLineStatus-VcSwitchingVpi").setMaxAccess("readonly")
if mibBuilder.loadTexts: e3AtmLineStatus_VcSwitchingVpi.setStatus('mandatory')
e3AtmLineStatus_FBitErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 17), Integer32()).setLabel("e3AtmLineStatus-FBitErrorCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmLineStatus_FBitErrorCount.setStatus('mandatory')
e3AtmLineStatus_PBitErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 18), Integer32()).setLabel("e3AtmLineStatus-PBitErrorCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmLineStatus_PBitErrorCount.setStatus('mandatory')
e3AtmLineStatus_CpBitErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 19), Integer32()).setLabel("e3AtmLineStatus-CpBitErrorCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmLineStatus_CpBitErrorCount.setStatus('mandatory')
e3AtmLineStatus_FebErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 20), Integer32()).setLabel("e3AtmLineStatus-FebErrorCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmLineStatus_FebErrorCount.setStatus('mandatory')
e3AtmLineStatus_BpvErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 21), Integer32()).setLabel("e3AtmLineStatus-BpvErrorCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmLineStatus_BpvErrorCount.setStatus('mandatory')
e3AtmLineStatus_LossOfSignal = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("e3AtmLineStatus-LossOfSignal").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmLineStatus_LossOfSignal.setStatus('mandatory')
e3AtmLineStatus_LossOfFrame = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("e3AtmLineStatus-LossOfFrame").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmLineStatus_LossOfFrame.setStatus('mandatory')
e3AtmLineStatus_YellowReceive = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("e3AtmLineStatus-YellowReceive").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmLineStatus_YellowReceive.setStatus('mandatory')
e3AtmLineStatus_AisReceive = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("e3AtmLineStatus-AisReceive").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmLineStatus_AisReceive.setStatus('mandatory')
e3AtmLineStatus_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 184, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("e3AtmLineStatus-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3AtmLineStatus_Action_o.setStatus('mandatory')
miboc3AtmLineStatusTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 183, 1), )
if mibBuilder.loadTexts: miboc3AtmLineStatusTable.setStatus('mandatory')
miboc3AtmLineStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1), ).setIndexNames((0, "ASCEND-MIBSTAT-MIB", "oc3AtmLineStatus-Shelf-o"), (0, "ASCEND-MIBSTAT-MIB", "oc3AtmLineStatus-Slot-o"), (0, "ASCEND-MIBSTAT-MIB", "oc3AtmLineStatus-Item-o"))
if mibBuilder.loadTexts: miboc3AtmLineStatusEntry.setStatus('mandatory')
oc3AtmLineStatus_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 1), Integer32()).setLabel("oc3AtmLineStatus-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_Shelf_o.setStatus('mandatory')
oc3AtmLineStatus_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 2), Integer32()).setLabel("oc3AtmLineStatus-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_Slot_o.setStatus('mandatory')
oc3AtmLineStatus_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 3), Integer32()).setLabel("oc3AtmLineStatus-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_Item_o.setStatus('mandatory')
oc3AtmLineStatus_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("oc3AtmLineStatus-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: oc3AtmLineStatus_PhysicalAddress_Shelf.setStatus('mandatory')
oc3AtmLineStatus_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("oc3AtmLineStatus-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: oc3AtmLineStatus_PhysicalAddress_Slot.setStatus('mandatory')
oc3AtmLineStatus_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 6), Integer32()).setLabel("oc3AtmLineStatus-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: oc3AtmLineStatus_PhysicalAddress_ItemNumber.setStatus('mandatory')
oc3AtmLineStatus_LineState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("doesNotExist", 1), ("disabled", 2), ("lossOfSignal", 3), ("lossOfFrame", 4), ("yellowReceive", 5), ("aisReceive", 6), ("active", 7)))).setLabel("oc3AtmLineStatus-LineState").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_LineState.setStatus('mandatory')
oc3AtmLineStatus_SparePhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("oc3AtmLineStatus-SparePhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: oc3AtmLineStatus_SparePhysicalAddress_Shelf.setStatus('mandatory')
oc3AtmLineStatus_SparePhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("oc3AtmLineStatus-SparePhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: oc3AtmLineStatus_SparePhysicalAddress_Slot.setStatus('mandatory')
oc3AtmLineStatus_SparePhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 10), Integer32()).setLabel("oc3AtmLineStatus-SparePhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: oc3AtmLineStatus_SparePhysicalAddress_ItemNumber.setStatus('mandatory')
oc3AtmLineStatus_SparingState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("sparingNone", 1), ("primaryActive", 2), ("primaryInactive", 3), ("secondaryActive", 4), ("secondaryInactive", 5)))).setLabel("oc3AtmLineStatus-SparingState").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_SparingState.setStatus('mandatory')
oc3AtmLineStatus_SparingChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("manual", 2), ("automatic", 3), ("test", 4)))).setLabel("oc3AtmLineStatus-SparingChangeReason").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_SparingChangeReason.setStatus('mandatory')
oc3AtmLineStatus_SparingChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 13), Integer32()).setLabel("oc3AtmLineStatus-SparingChangeTime").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_SparingChangeTime.setStatus('mandatory')
oc3AtmLineStatus_SparingChangeCounter = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 14), Integer32()).setLabel("oc3AtmLineStatus-SparingChangeCounter").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_SparingChangeCounter.setStatus('mandatory')
oc3AtmLineStatus_VpiVciRange = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n-01-3232767", 1), ("n-03-3216383", 2), ("n-07-328191", 3), ("n-015-324095", 4), ("n-031-322047", 5), ("n-063-321023", 6), ("n-0127-32511", 7), ("n-0255-32255", 8), ("vpi0255Vci32255", 9), ("vpi0255Vci32511", 10), ("vpi0255Vci321023", 11), ("vpi0255Vci322047", 12), ("vpi0255Vci324095", 13), ("vpi0255Vci328191", 14), ("vpi0255Vci3216383", 15)))).setLabel("oc3AtmLineStatus-VpiVciRange").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_VpiVciRange.setStatus('mandatory')
oc3AtmLineStatus_VcSwitchingVpi = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 16), DisplayString()).setLabel("oc3AtmLineStatus-VcSwitchingVpi").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_VcSwitchingVpi.setStatus('mandatory')
oc3AtmLineStatus_ApsConfigName = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 17), DisplayString()).setLabel("oc3AtmLineStatus-ApsConfigName").setMaxAccess("readwrite")
if mibBuilder.loadTexts: oc3AtmLineStatus_ApsConfigName.setStatus('mandatory')
oc3AtmLineStatus_ApsChannelStatus = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("onProtection", 2), ("onWorking", 3), ("lockedOutWorking", 4)))).setLabel("oc3AtmLineStatus-ApsChannelStatus").setMaxAccess("readwrite")
if mibBuilder.loadTexts: oc3AtmLineStatus_ApsChannelStatus.setStatus('mandatory')
oc3AtmLineStatus_ApsChannelSdCondition = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("oc3AtmLineStatus-ApsChannelSdCondition").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_ApsChannelSdCondition.setStatus('mandatory')
oc3AtmLineStatus_ApsChannelSfCondition = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("oc3AtmLineStatus-ApsChannelSfCondition").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_ApsChannelSfCondition.setStatus('mandatory')
oc3AtmLineStatus_ApsChannelLowDirection = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("lowNone", 1), ("lowRecv", 2), ("lowSend", 3), ("lowBoth", 4)))).setLabel("oc3AtmLineStatus-ApsChannelLowDirection").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_ApsChannelLowDirection.setStatus('mandatory')
oc3AtmLineStatus_ApsChannelRecvSdCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 22), Integer32()).setLabel("oc3AtmLineStatus-ApsChannelRecvSdCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: oc3AtmLineStatus_ApsChannelRecvSdCount.setStatus('mandatory')
oc3AtmLineStatus_ApsChannelRecvSfCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 23), Integer32()).setLabel("oc3AtmLineStatus-ApsChannelRecvSfCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: oc3AtmLineStatus_ApsChannelRecvSfCount.setStatus('mandatory')
oc3AtmLineStatus_ApsChannelRecvAisCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 24), Integer32()).setLabel("oc3AtmLineStatus-ApsChannelRecvAisCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: oc3AtmLineStatus_ApsChannelRecvAisCount.setStatus('mandatory')
oc3AtmLineStatus_ApsChannelRecvRdiCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 25), Integer32()).setLabel("oc3AtmLineStatus-ApsChannelRecvRdiCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: oc3AtmLineStatus_ApsChannelRecvRdiCount.setStatus('mandatory')
oc3AtmLineStatus_LossOfSignal = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("oc3AtmLineStatus-LossOfSignal").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_LossOfSignal.setStatus('mandatory')
oc3AtmLineStatus_LossOfFrame = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("oc3AtmLineStatus-LossOfFrame").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_LossOfFrame.setStatus('mandatory')
oc3AtmLineStatus_OutOfFrame = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("oc3AtmLineStatus-OutOfFrame").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_OutOfFrame.setStatus('mandatory')
oc3AtmLineStatus_SectionState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("sonetDisabled", 1), ("sonetSectionActiveNoDefect", 2), ("sonetSectionLossOfSignal", 3), ("sonetSectionLossOfFrame", 4)))).setLabel("oc3AtmLineStatus-SectionState").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_SectionState.setStatus('mandatory')
oc3AtmLineStatus_PathState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("sonetDisabled", 1), ("sonetPathActiveNoDefect", 2), ("sonetPathLossOfPointer", 3), ("sonetPathAlarmIndicationSignal", 4), ("sonetPathRdi", 5), ("sonetPathUnquipped", 6), ("sonetPathSignalLabelMismatch", 7)))).setLabel("oc3AtmLineStatus-PathState").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PathState.setStatus('mandatory')
oc3AtmLineStatus_AisReceive = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("oc3AtmLineStatus-AisReceive").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_AisReceive.setStatus('mandatory')
oc3AtmLineStatus_YellowReceive = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("oc3AtmLineStatus-YellowReceive").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_YellowReceive.setStatus('mandatory')
oc3AtmLineStatus_OutOfCellDelineation = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("oc3AtmLineStatus-OutOfCellDelineation").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_OutOfCellDelineation.setStatus('mandatory')
oc3AtmLineStatus_LossOfCellDelineation = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("oc3AtmLineStatus-LossOfCellDelineation").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_LossOfCellDelineation.setStatus('mandatory')
oc3AtmLineStatus_ApsReceive = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("oc3AtmLineStatus-ApsReceive").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_ApsReceive.setStatus('mandatory')
oc3AtmLineStatus_RsopBipErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 36), Integer32()).setLabel("oc3AtmLineStatus-RsopBipErrorCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_RsopBipErrorCount.setStatus('mandatory')
oc3AtmLineStatus_RlopBipErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 37), Integer32()).setLabel("oc3AtmLineStatus-RlopBipErrorCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_RlopBipErrorCount.setStatus('mandatory')
oc3AtmLineStatus_RlopFebeErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 38), Integer32()).setLabel("oc3AtmLineStatus-RlopFebeErrorCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_RlopFebeErrorCount.setStatus('mandatory')
oc3AtmLineStatus_RpopBipErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 39), Integer32()).setLabel("oc3AtmLineStatus-RpopBipErrorCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_RpopBipErrorCount.setStatus('mandatory')
oc3AtmLineStatus_RpopFebeErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 40), Integer32()).setLabel("oc3AtmLineStatus-RpopFebeErrorCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_RpopFebeErrorCount.setStatus('mandatory')
oc3AtmLineStatus_RacpChcsErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 41), Integer32()).setLabel("oc3AtmLineStatus-RacpChcsErrorCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_RacpChcsErrorCount.setStatus('mandatory')
oc3AtmLineStatus_RacpUchcsErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 42), Integer32()).setLabel("oc3AtmLineStatus-RacpUchcsErrorCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_RacpUchcsErrorCount.setStatus('mandatory')
oc3AtmLineStatus_RacpRxCellCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 43), Integer32()).setLabel("oc3AtmLineStatus-RacpRxCellCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_RacpRxCellCount.setStatus('mandatory')
oc3AtmLineStatus_TacpTxCellCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 44), Integer32()).setLabel("oc3AtmLineStatus-TacpTxCellCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_TacpTxCellCount.setStatus('mandatory')
oc3AtmLineStatus_FrequencyJustificationCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 45), Integer32()).setLabel("oc3AtmLineStatus-FrequencyJustificationCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_FrequencyJustificationCount.setStatus('mandatory')
oc3AtmLineStatus_oHECCellDropCounter = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 46), Integer32()).setLabel("oc3AtmLineStatus-oHECCellDropCounter").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_oHECCellDropCounter.setStatus('mandatory')
oc3AtmLineStatus_oFIFOOverflowCounter = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 47), Integer32()).setLabel("oc3AtmLineStatus-oFIFOOverflowCounter").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_oFIFOOverflowCounter.setStatus('mandatory')
oc3AtmLineStatus_IdleCellCounter = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 48), Integer32()).setLabel("oc3AtmLineStatus-IdleCellCounter").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IdleCellCounter.setStatus('mandatory')
oc3AtmLineStatus_ValidCellCounter = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 49), Integer32()).setLabel("oc3AtmLineStatus-ValidCellCounter").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_ValidCellCounter.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetSectionErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 50), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetSectionErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetSectionErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetSectionSeverelyErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 51), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetSectionSeverelyErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetSectionSeverelyErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetSectionSeverelyErroredFramingSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 52), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetSectionSeverelyErroredFramingSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetSectionSeverelyErroredFramingSeconds.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetSectionCodingViolations = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 53), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetSectionCodingViolations").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetSectionCodingViolations.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetLineErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 54), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetLineErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetLineErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetLineSeverelyErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 55), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetLineSeverelyErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetLineSeverelyErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetLineCodingViolations = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 56), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetLineCodingViolations").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetLineCodingViolations.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetLineUnavailableSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 57), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetLineUnavailableSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetLineUnavailableSeconds.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndLineErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 58), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetFarEndLineErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndLineErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndLineSeverelyErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 59), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetFarEndLineSeverelyErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndLineSeverelyErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndLineCodingViolations = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 60), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetFarEndLineCodingViolations").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndLineCodingViolations.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndLineUnavailableSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 61), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetFarEndLineUnavailableSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndLineUnavailableSeconds.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetPathErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 62), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetPathErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetPathErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetPathSeverelyErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 63), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetPathSeverelyErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetPathSeverelyErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetPathCodingViolations = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 64), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetPathCodingViolations").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetPathCodingViolations.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetPathUnavailableSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 65), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetPathUnavailableSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetPathUnavailableSeconds.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndPathErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 66), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetFarEndPathErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndPathErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndPathSeverelyErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 67), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetFarEndPathSeverelyErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndPathSeverelyErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndPathCodingViolations = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 68), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetFarEndPathCodingViolations").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndPathCodingViolations.setStatus('mandatory')
oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndPathUnavailableSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 69), Integer32()).setLabel("oc3AtmLineStatus-PerformanceMonitoring-SonetFarEndPathUnavailableSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndPathUnavailableSeconds.setStatus('mandatory')
oc3AtmLineStatus_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 1, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("oc3AtmLineStatus-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: oc3AtmLineStatus_Action_o.setStatus('mandatory')
miboc3AtmLineStatus_IntervalPerformanceMonitoringTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 183, 2), ).setLabel("miboc3AtmLineStatus-IntervalPerformanceMonitoringTable")
if mibBuilder.loadTexts: miboc3AtmLineStatus_IntervalPerformanceMonitoringTable.setStatus('mandatory')
miboc3AtmLineStatus_IntervalPerformanceMonitoringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1), ).setLabel("miboc3AtmLineStatus-IntervalPerformanceMonitoringEntry").setIndexNames((0, "ASCEND-MIBSTAT-MIB", "oc3AtmLineStatus-IntervalPerformanceMonitoring-Shelf-o"), (0, "ASCEND-MIBSTAT-MIB", "oc3AtmLineStatus-IntervalPerformanceMonitoring-Slot-o"), (0, "ASCEND-MIBSTAT-MIB", "oc3AtmLineStatus-IntervalPerformanceMonitoring-Item-o"), (0, "ASCEND-MIBSTAT-MIB", "oc3AtmLineStatus-IntervalPerformanceMonitoring-Index-o"))
if mibBuilder.loadTexts: miboc3AtmLineStatus_IntervalPerformanceMonitoringEntry.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 1), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_Shelf_o.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 2), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_Slot_o.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 3), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_Item_o.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 4), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_Index_o.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetSectionErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 5), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetSectionErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetSectionErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetSectionSeverelyErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 6), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetSectionSeverelyErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetSectionSeverelyErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetSectionSeverelyErroredFramingSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 7), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetSectionSeverelyErroredFramingSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetSectionSeverelyErroredFramingSeconds.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetSectionCodingViolations = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 8), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetSectionCodingViolations").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetSectionCodingViolations.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetLineErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 9), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetLineErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetLineErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetLineSeverelyErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 10), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetLineSeverelyErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetLineSeverelyErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetLineCodingViolations = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 11), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetLineCodingViolations").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetLineCodingViolations.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetLineUnavailableSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 12), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetLineUnavailableSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetLineUnavailableSeconds.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndLineErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 13), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetFarEndLineErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndLineErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndLineSeverelyErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 14), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetFarEndLineSeverelyErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndLineSeverelyErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndLineCodingViolations = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 15), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetFarEndLineCodingViolations").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndLineCodingViolations.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndLineUnavailableSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 16), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetFarEndLineUnavailableSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndLineUnavailableSeconds.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetPathErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 17), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetPathErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetPathErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetPathSeverelyErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 18), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetPathSeverelyErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetPathSeverelyErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetPathCodingViolations = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 19), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetPathCodingViolations").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetPathCodingViolations.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetPathUnavailableSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 20), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetPathUnavailableSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetPathUnavailableSeconds.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndPathErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 21), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetFarEndPathErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndPathErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndPathSeverelyErroredSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 22), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetFarEndPathSeverelyErroredSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndPathSeverelyErroredSeconds.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndPathCodingViolations = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 23), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetFarEndPathCodingViolations").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndPathCodingViolations.setStatus('mandatory')
oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndPathUnavailableSeconds = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 183, 2, 1, 24), Integer32()).setLabel("oc3AtmLineStatus-IntervalPerformanceMonitoring-SonetFarEndPathUnavailableSeconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndPathUnavailableSeconds.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-MIBSTAT-MIB", bRINetworkInterfaceState_PhysicalStatistic_UpDwnCntr=bRINetworkInterfaceState_PhysicalStatistic_UpDwnCntr, e3AtmLineStatus_CpBitErrorCount=e3AtmLineStatus_CpBitErrorCount, oc3AtmLineStatus_SparePhysicalAddress_Shelf=oc3AtmLineStatus_SparePhysicalAddress_Shelf, bRINetworkInterfaceState_ChannelState=bRINetworkInterfaceState_ChannelState, dmtAlDslLineStatus_PhysicalStatus_DownStreamRateInterleaved=dmtAlDslLineStatus_PhysicalStatus_DownStreamRateInterleaved, dmtAlDslLineStatus_PhysicalStatistic_FarEndCrc=dmtAlDslLineStatus_PhysicalStatistic_FarEndCrc, oc3AtmLineStatus_SparingChangeCounter=oc3AtmLineStatus_SparingChangeCounter, oc3AtmLineStatus_PerformanceMonitoring_SonetPathUnavailableSeconds=oc3AtmLineStatus_PerformanceMonitoring_SonetPathUnavailableSeconds, sdslLineStatus_Shelf_o=sdslLineStatus_Shelf_o, dmtAlDslLineStatus_PhysicalAddress_Slot=dmtAlDslLineStatus_PhysicalAddress_Slot, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetLineSeverelyErroredSeconds=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetLineSeverelyErroredSeconds, dmtAlDslLineStatus_PhysicalStatistic_NearEndHec=dmtAlDslLineStatus_PhysicalStatistic_NearEndHec, oc3AtmLineStatus_IntervalPerformanceMonitoring_Shelf_o=oc3AtmLineStatus_IntervalPerformanceMonitoring_Shelf_o, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetSectionErroredSeconds=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetSectionErroredSeconds, e3AtmLineStatus_PhysicalAddress_ItemNumber=e3AtmLineStatus_PhysicalAddress_ItemNumber, e3AtmLineStatus_VcSwitchingVpi=e3AtmLineStatus_VcSwitchingVpi, oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndPathErroredSeconds=oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndPathErroredSeconds, sdslLineStatus_PhysicalStatistic_LineQuality=sdslLineStatus_PhysicalStatistic_LineQuality, dmtAlDslLineStatus_SparingState=dmtAlDslLineStatus_SparingState, oc3AtmLineStatus_RlopBipErrorCount=oc3AtmLineStatus_RlopBipErrorCount, sdslLineStatus_PhysicalStatus_MinorFirmwareVer=sdslLineStatus_PhysicalStatus_MinorFirmwareVer, mibbRINetworkInterfaceStateEntry=mibbRINetworkInterfaceStateEntry, mibbRINetworkInterfaceState_ChannelStateTable=mibbRINetworkInterfaceState_ChannelStateTable, oc3AtmLineStatus_Slot_o=oc3AtmLineStatus_Slot_o, oc3AtmLineStatus_ApsChannelRecvRdiCount=oc3AtmLineStatus_ApsChannelRecvRdiCount, ds3AtmLineStatus_PhysicalAddress_Shelf=ds3AtmLineStatus_PhysicalAddress_Shelf, sdslLineStatus_PhysicalStatistic_HdlcRxCrcErrorCnt=sdslLineStatus_PhysicalStatistic_HdlcRxCrcErrorCnt, oc3AtmLineStatus_IntervalPerformanceMonitoring_Item_o=oc3AtmLineStatus_IntervalPerformanceMonitoring_Item_o, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetPathUnavailableSeconds=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetPathUnavailableSeconds, ds3AtmLineStatus_SparePhysicalAddress_ItemNumber=ds3AtmLineStatus_SparePhysicalAddress_ItemNumber, oc3AtmLineStatus_SparePhysicalAddress_ItemNumber=oc3AtmLineStatus_SparePhysicalAddress_ItemNumber, miboc3AtmLineStatus_IntervalPerformanceMonitoringEntry=miboc3AtmLineStatus_IntervalPerformanceMonitoringEntry, oc3AtmLineStatus_oHECCellDropCounter=oc3AtmLineStatus_oHECCellDropCounter, bRINetworkInterfaceState_ErrorCount_Slot_o=bRINetworkInterfaceState_ErrorCount_Slot_o, dmtAlDslLineStatus_PhysicalStatus_UnitType=dmtAlDslLineStatus_PhysicalStatus_UnitType, oc3AtmLineStatus_IdleCellCounter=oc3AtmLineStatus_IdleCellCounter, sdslLineStatus_PhysicalStatistic_UpDwnCntr=sdslLineStatus_PhysicalStatistic_UpDwnCntr, dmtAlDslLineStatus_SparingChangeCounter=dmtAlDslLineStatus_SparingChangeCounter, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetLineErroredSeconds=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetLineErroredSeconds, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetLineUnavailableSeconds=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetLineUnavailableSeconds, oc3AtmLineStatus_OutOfCellDelineation=oc3AtmLineStatus_OutOfCellDelineation, sdslLineStatus_PhysicalStatistic_FirmwareStartupStage=sdslLineStatus_PhysicalStatistic_FirmwareStartupStage, bRINetworkInterfaceState_PhysicalStatistic_ErrorCount_Slot_o=bRINetworkInterfaceState_PhysicalStatistic_ErrorCount_Slot_o, oc3AtmLineStatus_VpiVciRange=oc3AtmLineStatus_VpiVciRange, bRINetworkInterfaceState_SparePhysicalAddress_ItemNumber=bRINetworkInterfaceState_SparePhysicalAddress_ItemNumber, e3AtmLineStatus_FBitErrorCount=e3AtmLineStatus_FBitErrorCount, dmtAlDslLineStatus_PhysicalStatistic_SelfTest=dmtAlDslLineStatus_PhysicalStatistic_SelfTest, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndLineUnavailableSeconds=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndLineUnavailableSeconds, oc3AtmLineStatus_PerformanceMonitoring_SonetSectionSeverelyErroredFramingSeconds=oc3AtmLineStatus_PerformanceMonitoring_SonetSectionSeverelyErroredFramingSeconds, mibbRINetworkInterfaceState_PhysicalStatistic_ErrorCountEntry=mibbRINetworkInterfaceState_PhysicalStatistic_ErrorCountEntry, dmtAlDslLineStatus_PhysicalStatistic_IncomingCells=dmtAlDslLineStatus_PhysicalStatistic_IncomingCells, e3AtmLineStatus_SparePhysicalAddress_ItemNumber=e3AtmLineStatus_SparePhysicalAddress_ItemNumber, bRINetworkInterfaceState_Item_o=bRINetworkInterfaceState_Item_o, dmtAlDslLineStatus_PhysicalStatistic_OutgoingCells=dmtAlDslLineStatus_PhysicalStatistic_OutgoingCells, dmtAlDslLineStatus_PhysicalStatus_UpStreamRateFast=dmtAlDslLineStatus_PhysicalStatus_UpStreamRateFast, atmIfStatus_IfNumber=atmIfStatus_IfNumber, oc3AtmLineStatus_ApsChannelRecvSdCount=oc3AtmLineStatus_ApsChannelRecvSdCount, ds3AtmLineStatus_SparePhysicalAddress_Slot=ds3AtmLineStatus_SparePhysicalAddress_Slot, e3AtmLineStatus_PBitErrorCount=e3AtmLineStatus_PBitErrorCount, ds3AtmLineStatus_PhysicalAddress_ItemNumber=ds3AtmLineStatus_PhysicalAddress_ItemNumber, oc3AtmLineStatus_ValidCellCounter=oc3AtmLineStatus_ValidCellCounter, bRINetworkInterfaceState_ChannelState_Index_o=bRINetworkInterfaceState_ChannelState_Index_o, e3AtmLineStatus_LineState=e3AtmLineStatus_LineState, sdslLineStatus_VpiVciRange=sdslLineStatus_VpiVciRange, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndPathErroredSeconds=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndPathErroredSeconds, mibdmtAlDslLineStatus=mibdmtAlDslLineStatus, miboc3AtmLineStatus_IntervalPerformanceMonitoringTable=miboc3AtmLineStatus_IntervalPerformanceMonitoringTable, sdslLineStatus_PhysicalStatistic_RxSignalPresent=sdslLineStatus_PhysicalStatistic_RxSignalPresent, oc3AtmLineStatus_PhysicalAddress_ItemNumber=oc3AtmLineStatus_PhysicalAddress_ItemNumber, atmIfStatus_NailedGroup=atmIfStatus_NailedGroup, sdslLineStatus_SparePhysicalAddress_Shelf=sdslLineStatus_SparePhysicalAddress_Shelf, e3AtmLineStatus_VpiVciRange=e3AtmLineStatus_VpiVciRange, sdslLineStatus_PhysicalStatus_HardwareVer=sdslLineStatus_PhysicalStatus_HardwareVer, ds3AtmLineStatus_CpBitErrorCount=ds3AtmLineStatus_CpBitErrorCount, e3AtmLineStatus_Shelf_o=e3AtmLineStatus_Shelf_o, sdslLineStatus_PhysicalStatistic_FarEndDbAttenuation=sdslLineStatus_PhysicalStatistic_FarEndDbAttenuation, dmtAlDslLineStatus_PhysicalStatistic_NoiseMarginDown=dmtAlDslLineStatus_PhysicalStatistic_NoiseMarginDown, ds3AtmLineStatus_VcSwitchingVpi=ds3AtmLineStatus_VcSwitchingVpi, oc3AtmLineStatus_RacpUchcsErrorCount=oc3AtmLineStatus_RacpUchcsErrorCount, sdslLineStatus_PhysicalAddress_Shelf=sdslLineStatus_PhysicalAddress_Shelf, oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndLineCodingViolations=oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndLineCodingViolations, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetPathCodingViolations=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetPathCodingViolations, oc3AtmLineStatus_oFIFOOverflowCounter=oc3AtmLineStatus_oFIFOOverflowCounter, dmtAlDslLineStatus_PhysicalStatus_DevLineState=dmtAlDslLineStatus_PhysicalStatus_DevLineState, sdslLineStatus_PhysicalStatus_DownStreamRate=sdslLineStatus_PhysicalStatus_DownStreamRate, dmtAlDslLineStatus_PhysicalStatus_HardwareVer=dmtAlDslLineStatus_PhysicalStatus_HardwareVer, bRINetworkInterfaceState_ErrorCount_Index_o=bRINetworkInterfaceState_ErrorCount_Index_o, mibsdslLineStatusTable=mibsdslLineStatusTable, bRINetworkInterfaceState_ChannelState_Shelf_o=bRINetworkInterfaceState_ChannelState_Shelf_o, dmtAlDslLineStatus_PhysicalStatus_FirmwareVer=dmtAlDslLineStatus_PhysicalStatus_FirmwareVer, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetSectionCodingViolations=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetSectionCodingViolations, oc3AtmLineStatus_ApsChannelSdCondition=oc3AtmLineStatus_ApsChannelSdCondition, oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndLineErroredSeconds=oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndLineErroredSeconds, oc3AtmLineStatus_PerformanceMonitoring_SonetSectionCodingViolations=oc3AtmLineStatus_PerformanceMonitoring_SonetSectionCodingViolations, atmIfStatus_Address_PhysicalAddress_Shelf=atmIfStatus_Address_PhysicalAddress_Shelf, atmIfStatus_LogicalItem_o=atmIfStatus_LogicalItem_o, mibe3AtmLineStatus=mibe3AtmLineStatus, ds3AtmLineStatus_Action_o=ds3AtmLineStatus_Action_o, oc3AtmLineStatus_Shelf_o=oc3AtmLineStatus_Shelf_o, oc3AtmLineStatus_RacpRxCellCount=oc3AtmLineStatus_RacpRxCellCount, ds3AtmLineStatus_LineState=ds3AtmLineStatus_LineState, oc3AtmLineStatus_PhysicalAddress_Slot=oc3AtmLineStatus_PhysicalAddress_Slot, oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndLineSeverelyErroredSeconds=oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndLineSeverelyErroredSeconds, dmtAlDslLineStatus_PhysicalAddress_Shelf=dmtAlDslLineStatus_PhysicalAddress_Shelf, oc3AtmLineStatus_SparingChangeReason=oc3AtmLineStatus_SparingChangeReason, oc3AtmLineStatus_ApsChannelSfCondition=oc3AtmLineStatus_ApsChannelSfCondition, sdslLineStatus_PhysicalStatistic_LineUpTimer_Hours=sdslLineStatus_PhysicalStatistic_LineUpTimer_Hours, mibdmtAlDslLineStatusTable=mibdmtAlDslLineStatusTable, sdslLineStatus_PhysicalStatistic_SelfTest=sdslLineStatus_PhysicalStatistic_SelfTest, mibdmtAlDslLineStatusEntry=mibdmtAlDslLineStatusEntry, oc3AtmLineStatus_PerformanceMonitoring_SonetPathErroredSeconds=oc3AtmLineStatus_PerformanceMonitoring_SonetPathErroredSeconds, sdslLineStatus_PhysicalStatus_IfGroupIndex=sdslLineStatus_PhysicalStatus_IfGroupIndex, sdslLineStatus_VpSwitchingVpi=sdslLineStatus_VpSwitchingVpi, dmtAlDslLineStatus_Slot_o=dmtAlDslLineStatus_Slot_o, sdslLineStatus_PhysicalStatistic_LineUpTimer_Days=sdslLineStatus_PhysicalStatistic_LineUpTimer_Days, oc3AtmLineStatus_ApsChannelLowDirection=oc3AtmLineStatus_ApsChannelLowDirection, oc3AtmLineStatus_PerformanceMonitoring_SonetLineUnavailableSeconds=oc3AtmLineStatus_PerformanceMonitoring_SonetLineUnavailableSeconds, oc3AtmLineStatus_SectionState=oc3AtmLineStatus_SectionState, oc3AtmLineStatus_TacpTxCellCount=oc3AtmLineStatus_TacpTxCellCount, e3AtmLineStatus_BpvErrorCount=e3AtmLineStatus_BpvErrorCount, sdslLineStatus_SparePhysicalAddress_ItemNumber=sdslLineStatus_SparePhysicalAddress_ItemNumber, bRINetworkInterfaceState_SparingChangeCounter=bRINetworkInterfaceState_SparingChangeCounter, bRINetworkInterfaceState_SparingState=bRINetworkInterfaceState_SparingState, dmtAlDslLineStatus_VpSwitchingVpi=dmtAlDslLineStatus_VpSwitchingVpi, atmIfStatus_Address_PhysicalAddress_ItemNumber=atmIfStatus_Address_PhysicalAddress_ItemNumber, dmtAlDslLineStatus_SparePhysicalAddress_Slot=dmtAlDslLineStatus_SparePhysicalAddress_Slot, dmtAlDslLineStatus_PhysicalStatus_DownStreamLatency=dmtAlDslLineStatus_PhysicalStatus_DownStreamLatency, e3AtmLineStatus_PhysicalAddress_Slot=e3AtmLineStatus_PhysicalAddress_Slot, mibsdslLineStatusEntry=mibsdslLineStatusEntry, dmtAlDslLineStatus_PhysicalStatus_NumSecValid=dmtAlDslLineStatus_PhysicalStatus_NumSecValid, atmIfStatus_Shelf_o=atmIfStatus_Shelf_o, e3AtmLineStatus_SparingChangeCounter=e3AtmLineStatus_SparingChangeCounter, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetPathErroredSeconds=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetPathErroredSeconds, sdslLineStatus_PhysicalAddress_ItemNumber=sdslLineStatus_PhysicalAddress_ItemNumber, sdslLineStatus_PhysicalStatistic_LineUpTimer_Minutes=sdslLineStatus_PhysicalStatistic_LineUpTimer_Minutes, atmIfStatus_PnniLinkState=atmIfStatus_PnniLinkState, bRINetworkInterfaceState_Shelf_o=bRINetworkInterfaceState_Shelf_o, oc3AtmLineStatus_PerformanceMonitoring_SonetPathSeverelyErroredSeconds=oc3AtmLineStatus_PerformanceMonitoring_SonetPathSeverelyErroredSeconds, oc3AtmLineStatus_LossOfFrame=oc3AtmLineStatus_LossOfFrame, dmtAlDslLineStatus_PhysicalStatistic_LineUpTimer_Days=dmtAlDslLineStatus_PhysicalStatistic_LineUpTimer_Days, mibbRINetworkInterfaceState=mibbRINetworkInterfaceState, dmtAlDslLineStatus_PhysicalStatus_NumSecInvalid=dmtAlDslLineStatus_PhysicalStatus_NumSecInvalid, dmtAlDslLineStatus_SparePhysicalAddress_Shelf=dmtAlDslLineStatus_SparePhysicalAddress_Shelf, oc3AtmLineStatus_Action_o=oc3AtmLineStatus_Action_o, e3AtmLineStatus_LossOfSignal=e3AtmLineStatus_LossOfSignal, dmtAlDslLineStatus_PhysicalStatistic_RxSignalPresent=dmtAlDslLineStatus_PhysicalStatistic_RxSignalPresent, oc3AtmLineStatus_PhysicalAddress_Shelf=oc3AtmLineStatus_PhysicalAddress_Shelf, dmtAlDslLineStatus_PhysicalStatus_ModemHwState=dmtAlDslLineStatus_PhysicalStatus_ModemHwState, bRINetworkInterfaceState_ErrorCount=bRINetworkInterfaceState_ErrorCount, dmtAlDslLineStatus_PhysicalStatus_AnsiAdslVer=dmtAlDslLineStatus_PhysicalStatus_AnsiAdslVer, sdslLineStatus_Slot_o=sdslLineStatus_Slot_o, dmtAlDslLineStatus_SparingChangeTime=dmtAlDslLineStatus_SparingChangeTime, oc3AtmLineStatus_SparingState=oc3AtmLineStatus_SparingState, e3AtmLineStatus_LossOfFrame=e3AtmLineStatus_LossOfFrame, oc3AtmLineStatus_IntervalPerformanceMonitoring_Index_o=oc3AtmLineStatus_IntervalPerformanceMonitoring_Index_o, dmtAlDslLineStatus_Item_o=dmtAlDslLineStatus_Item_o, DisplayString=DisplayString, e3AtmLineStatus_YellowReceive=e3AtmLineStatus_YellowReceive, sdslLineStatus_SparePhysicalAddress_Slot=sdslLineStatus_SparePhysicalAddress_Slot, sdslLineStatus_PhysicalStatus_DevLineState=sdslLineStatus_PhysicalStatus_DevLineState, e3AtmLineStatus_SparingState=e3AtmLineStatus_SparingState, oc3AtmLineStatus_PathState=oc3AtmLineStatus_PathState, sdslLineStatus_Action_o=sdslLineStatus_Action_o, dmtAlDslLineStatus_LineState=dmtAlDslLineStatus_LineState, bRINetworkInterfaceState_PhysicalStatistic_LineUpTimer_Days=bRINetworkInterfaceState_PhysicalStatistic_LineUpTimer_Days, oc3AtmLineStatus_Item_o=oc3AtmLineStatus_Item_o, ds3AtmLineStatus_LossOfSignal=ds3AtmLineStatus_LossOfSignal, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndPathUnavailableSeconds=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndPathUnavailableSeconds, mibatmIfStatusEntry=mibatmIfStatusEntry, oc3AtmLineStatus_ApsReceive=oc3AtmLineStatus_ApsReceive, sdslLineStatus_PhysicalAddress_Slot=sdslLineStatus_PhysicalAddress_Slot, oc3AtmLineStatus_FrequencyJustificationCount=oc3AtmLineStatus_FrequencyJustificationCount, mibds3AtmLineStatusEntry=mibds3AtmLineStatusEntry, e3AtmLineStatus_SparePhysicalAddress_Shelf=e3AtmLineStatus_SparePhysicalAddress_Shelf, atmIfStatus_PortState=atmIfStatus_PortState, e3AtmLineStatus_SparingChangeReason=e3AtmLineStatus_SparingChangeReason, sdslLineStatus_SparingChangeTime=sdslLineStatus_SparingChangeTime, bRINetworkInterfaceState_Action_o=bRINetworkInterfaceState_Action_o, dmtAlDslLineStatus_Action_o=dmtAlDslLineStatus_Action_o, bRINetworkInterfaceState_PhysicalAddress_Shelf=bRINetworkInterfaceState_PhysicalAddress_Shelf, dmtAlDslLineStatus_PhysicalStatistic_LineUpTimer_Minutes=dmtAlDslLineStatus_PhysicalStatistic_LineUpTimer_Minutes, ds3AtmLineStatus_LossOfFrame=ds3AtmLineStatus_LossOfFrame, mibbRINetworkInterfaceState_PhysicalStatistic_ErrorCountTable=mibbRINetworkInterfaceState_PhysicalStatistic_ErrorCountTable, oc3AtmLineStatus_AisReceive=oc3AtmLineStatus_AisReceive, dmtAlDslLineStatus_PhysicalStatistic_AttenuationUp=dmtAlDslLineStatus_PhysicalStatistic_AttenuationUp, bRINetworkInterfaceState_PhysicalStatistic_ErrorCount=bRINetworkInterfaceState_PhysicalStatistic_ErrorCount, atmIfStatus_Item_o=atmIfStatus_Item_o, oc3AtmLineStatus_LossOfSignal=oc3AtmLineStatus_LossOfSignal, oc3AtmLineStatus_PerformanceMonitoring_SonetSectionSeverelyErroredSeconds=oc3AtmLineStatus_PerformanceMonitoring_SonetSectionSeverelyErroredSeconds, bRINetworkInterfaceState_ErrorCount_Shelf_o=bRINetworkInterfaceState_ErrorCount_Shelf_o, mibatmIfStatusTable=mibatmIfStatusTable, dmtAlDslLineStatus_PhysicalStatistic_LineUpTimer_Hours=dmtAlDslLineStatus_PhysicalStatistic_LineUpTimer_Hours, ds3AtmLineStatus_SparingChangeTime=ds3AtmLineStatus_SparingChangeTime, dmtAlDslLineStatus_PhysicalStatus_UpStreamRateInterleaved=dmtAlDslLineStatus_PhysicalStatus_UpStreamRateInterleaved, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndPathCodingViolations=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndPathCodingViolations, bRINetworkInterfaceState_PhysicalAddress_Slot=bRINetworkInterfaceState_PhysicalAddress_Slot, bRINetworkInterfaceState_PhysicalStatus_IfGroupIndex=bRINetworkInterfaceState_PhysicalStatus_IfGroupIndex, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetSectionSeverelyErroredSeconds=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetSectionSeverelyErroredSeconds, oc3AtmLineStatus_RacpChcsErrorCount=oc3AtmLineStatus_RacpChcsErrorCount, oc3AtmLineStatus_OutOfFrame=oc3AtmLineStatus_OutOfFrame, dmtAlDslLineStatus_PhysicalStatistic_OutputPowerDown=dmtAlDslLineStatus_PhysicalStatistic_OutputPowerDown, oc3AtmLineStatus_PerformanceMonitoring_SonetLineCodingViolations=oc3AtmLineStatus_PerformanceMonitoring_SonetLineCodingViolations, oc3AtmLineStatus_IntervalPerformanceMonitoring_Slot_o=oc3AtmLineStatus_IntervalPerformanceMonitoring_Slot_o, atmIfStatus_SignallingState=atmIfStatus_SignallingState, atmIfStatus_Action_o=atmIfStatus_Action_o, mibe3AtmLineStatusEntry=mibe3AtmLineStatusEntry, oc3AtmLineStatus_RsopBipErrorCount=oc3AtmLineStatus_RsopBipErrorCount, e3AtmLineStatus_FebErrorCount=e3AtmLineStatus_FebErrorCount, dmtAlDslLineStatus_PhysicalStatistic_UpDwnCntr=dmtAlDslLineStatus_PhysicalStatistic_UpDwnCntr, dmtAlDslLineStatus_PhysicalStatistic_ReceivedRsBlocks=dmtAlDslLineStatus_PhysicalStatistic_ReceivedRsBlocks, sdslLineStatus_LineState=sdslLineStatus_LineState, dmtAlDslLineStatus_SparePhysicalAddress_ItemNumber=dmtAlDslLineStatus_SparePhysicalAddress_ItemNumber, bRINetworkInterfaceState_ErrorCount_Item_o=bRINetworkInterfaceState_ErrorCount_Item_o, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetLineCodingViolations=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetLineCodingViolations, mibbRINetworkInterfaceState_ErrorCountEntry=mibbRINetworkInterfaceState_ErrorCountEntry, mibbRINetworkInterfaceState_ChannelStateEntry=mibbRINetworkInterfaceState_ChannelStateEntry, dmtAlDslLineStatus_PhysicalStatus_OperationalMode=dmtAlDslLineStatus_PhysicalStatus_OperationalMode, dmtAlDslLineStatus_PhysicalStatistic_NoiseMarginUp=dmtAlDslLineStatus_PhysicalStatistic_NoiseMarginUp, dmtAlDslLineStatus_Shelf_o=dmtAlDslLineStatus_Shelf_o, bRINetworkInterfaceState_ChannelState_Slot_o=bRINetworkInterfaceState_ChannelState_Slot_o, oc3AtmLineStatus_LineState=oc3AtmLineStatus_LineState, bRINetworkInterfaceState_PhysicalStatistic_ErrorCount_Shelf_o=bRINetworkInterfaceState_PhysicalStatistic_ErrorCount_Shelf_o, ds3AtmLineStatus_SparePhysicalAddress_Shelf=ds3AtmLineStatus_SparePhysicalAddress_Shelf, e3AtmLineStatus_PhysicalAddress_Shelf=e3AtmLineStatus_PhysicalAddress_Shelf, atmIfStatus_Address_LogicalItem=atmIfStatus_Address_LogicalItem, sdslLineStatus_SparingChangeReason=sdslLineStatus_SparingChangeReason, mibbRINetworkInterfaceStateTable=mibbRINetworkInterfaceStateTable, oc3AtmLineStatus_ApsChannelRecvAisCount=oc3AtmLineStatus_ApsChannelRecvAisCount, sdslLineStatus_PhysicalStatus_UpStreamRate=sdslLineStatus_PhysicalStatus_UpStreamRate, dmtAlDslLineStatus_PhysicalStatus_DownStreamRateFast=dmtAlDslLineStatus_PhysicalStatus_DownStreamRateFast, sdslLineStatus_PhysicalStatus_UnitType=sdslLineStatus_PhysicalStatus_UnitType, mibds3AtmLineStatusTable=mibds3AtmLineStatusTable, miboc3AtmLineStatusEntry=miboc3AtmLineStatusEntry, bRINetworkInterfaceState_LineState=bRINetworkInterfaceState_LineState, oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndPathCodingViolations=oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndPathCodingViolations, dmtAlDslLineStatus_PhysicalStatus_AccumBitErr=dmtAlDslLineStatus_PhysicalStatus_AccumBitErr, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndLineSeverelyErroredSeconds=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndLineSeverelyErroredSeconds, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndLineCodingViolations=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndLineCodingViolations, ds3AtmLineStatus_VpiVciRange=ds3AtmLineStatus_VpiVciRange, oc3AtmLineStatus_ApsChannelStatus=oc3AtmLineStatus_ApsChannelStatus, mibe3AtmLineStatusTable=mibe3AtmLineStatusTable, oc3AtmLineStatus_RpopFebeErrorCount=oc3AtmLineStatus_RpopFebeErrorCount, oc3AtmLineStatus_SparePhysicalAddress_Slot=oc3AtmLineStatus_SparePhysicalAddress_Slot, dmtAlDslLineStatus_PhysicalStatistic_FarEndHec=dmtAlDslLineStatus_PhysicalStatistic_FarEndHec, mibds3AtmLineStatus=mibds3AtmLineStatus, e3AtmLineStatus_SparingChangeTime=e3AtmLineStatus_SparingChangeTime, ds3AtmLineStatus_SparingChangeReason=ds3AtmLineStatus_SparingChangeReason, dmtAlDslLineStatus_PhysicalStatus_UpStreamLatency=dmtAlDslLineStatus_PhysicalStatus_UpStreamLatency, oc3AtmLineStatus_LossOfCellDelineation=oc3AtmLineStatus_LossOfCellDelineation, sdslLineStatus_PhysicalStatus_MajorFirmwareVer=sdslLineStatus_PhysicalStatus_MajorFirmwareVer, oc3AtmLineStatus_PerformanceMonitoring_SonetLineSeverelyErroredSeconds=oc3AtmLineStatus_PerformanceMonitoring_SonetLineSeverelyErroredSeconds, oc3AtmLineStatus_RlopFebeErrorCount=oc3AtmLineStatus_RlopFebeErrorCount, bRINetworkInterfaceState_PhysicalStatistic_LineUpTimer_Hours=bRINetworkInterfaceState_PhysicalStatistic_LineUpTimer_Hours, oc3AtmLineStatus_VcSwitchingVpi=oc3AtmLineStatus_VcSwitchingVpi)
mibBuilder.exportSymbols("ASCEND-MIBSTAT-MIB", bRINetworkInterfaceState_Slot_o=bRINetworkInterfaceState_Slot_o, ds3AtmLineStatus_PBitErrorCount=ds3AtmLineStatus_PBitErrorCount, ds3AtmLineStatus_Slot_o=ds3AtmLineStatus_Slot_o, mibatmIfStatus=mibatmIfStatus, dmtAlDslLineStatus_PhysicalStatistic_FarEndFec=dmtAlDslLineStatus_PhysicalStatistic_FarEndFec, dmtAlDslLineStatus_PhysicalStatistic_NearEndCrc=dmtAlDslLineStatus_PhysicalStatistic_NearEndCrc, oc3AtmLineStatus_SparingChangeTime=oc3AtmLineStatus_SparingChangeTime, oc3AtmLineStatus_PerformanceMonitoring_SonetSectionErroredSeconds=oc3AtmLineStatus_PerformanceMonitoring_SonetSectionErroredSeconds, sdslLineStatus_Item_o=sdslLineStatus_Item_o, sdslLineStatus_ErrorCount=sdslLineStatus_ErrorCount, atmIfStatus_Slot_o=atmIfStatus_Slot_o, e3AtmLineStatus_Item_o=e3AtmLineStatus_Item_o, e3AtmLineStatus_AisReceive=e3AtmLineStatus_AisReceive, miboc3AtmLineStatusTable=miboc3AtmLineStatusTable, ds3AtmLineStatus_FebErrorCount=ds3AtmLineStatus_FebErrorCount, bRINetworkInterfaceState_SparingChangeTime=bRINetworkInterfaceState_SparingChangeTime, dmtAlDslLineStatus_PhysicalStatistic_OutputPowerUp=dmtAlDslLineStatus_PhysicalStatistic_OutputPowerUp, mibbRINetworkInterfaceState_ErrorCountTable=mibbRINetworkInterfaceState_ErrorCountTable, bRINetworkInterfaceState_PhysicalStatistic_ErrorCount_Index_o=bRINetworkInterfaceState_PhysicalStatistic_ErrorCount_Index_o, bRINetworkInterfaceState_SparingChangeReason=bRINetworkInterfaceState_SparingChangeReason, ds3AtmLineStatus_BpvErrorCount=ds3AtmLineStatus_BpvErrorCount, dmtAlDslLineStatus_PhysicalStatistic_TransmittedRsBlocks=dmtAlDslLineStatus_PhysicalStatistic_TransmittedRsBlocks, dmtAlDslLineStatus_PhysicalStatistic_AttenuationDown=dmtAlDslLineStatus_PhysicalStatistic_AttenuationDown, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndPathSeverelyErroredSeconds=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndPathSeverelyErroredSeconds, atmIfStatus_Address_PhysicalAddress_Slot=atmIfStatus_Address_PhysicalAddress_Slot, ds3AtmLineStatus_FBitErrorCount=ds3AtmLineStatus_FBitErrorCount, ds3AtmLineStatus_PhysicalAddress_Slot=ds3AtmLineStatus_PhysicalAddress_Slot, oc3AtmLineStatus_YellowReceive=oc3AtmLineStatus_YellowReceive, e3AtmLineStatus_Action_o=e3AtmLineStatus_Action_o, bRINetworkInterfaceState_SparePhysicalAddress_Slot=bRINetworkInterfaceState_SparePhysicalAddress_Slot, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetPathSeverelyErroredSeconds=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetPathSeverelyErroredSeconds, mibsdslLineStatus=mibsdslLineStatus, ds3AtmLineStatus_AisReceive=ds3AtmLineStatus_AisReceive, bRINetworkInterfaceState_ChannelState_Item_o=bRINetworkInterfaceState_ChannelState_Item_o, bRINetworkInterfaceState_PhysicalStatistic_LineUpTimer_Minutes=bRINetworkInterfaceState_PhysicalStatistic_LineUpTimer_Minutes, e3AtmLineStatus_Slot_o=e3AtmLineStatus_Slot_o, ds3AtmLineStatus_Item_o=ds3AtmLineStatus_Item_o, oc3AtmLineStatus_PerformanceMonitoring_SonetLineErroredSeconds=oc3AtmLineStatus_PerformanceMonitoring_SonetLineErroredSeconds, dmtAlDslLineStatus_PhysicalStatus_IfGroupIndex=dmtAlDslLineStatus_PhysicalStatus_IfGroupIndex, oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndPathSeverelyErroredSeconds=oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndPathSeverelyErroredSeconds, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndLineErroredSeconds=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetFarEndLineErroredSeconds, oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndPathUnavailableSeconds=oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndPathUnavailableSeconds, dmtAlDslLineStatus_PhysicalStatistic_NearEndFec=dmtAlDslLineStatus_PhysicalStatistic_NearEndFec, ds3AtmLineStatus_YellowReceive=ds3AtmLineStatus_YellowReceive, dmtAlDslLineStatus_PhysicalStatus_InitialAdslVer=dmtAlDslLineStatus_PhysicalStatus_InitialAdslVer, miboc3AtmLineStatus=miboc3AtmLineStatus, oc3AtmLineStatus_PerformanceMonitoring_SonetPathCodingViolations=oc3AtmLineStatus_PerformanceMonitoring_SonetPathCodingViolations, sdslLineStatus_SparingChangeCounter=sdslLineStatus_SparingChangeCounter, oc3AtmLineStatus_ApsConfigName=oc3AtmLineStatus_ApsConfigName, oc3AtmLineStatus_ApsChannelRecvSfCount=oc3AtmLineStatus_ApsChannelRecvSfCount, e3AtmLineStatus_SparePhysicalAddress_Slot=e3AtmLineStatus_SparePhysicalAddress_Slot, bRINetworkInterfaceState_PhysicalStatistic_ErrorCount_Item_o=bRINetworkInterfaceState_PhysicalStatistic_ErrorCount_Item_o, dmtAlDslLineStatus_PhysicalAddress_ItemNumber=dmtAlDslLineStatus_PhysicalAddress_ItemNumber, oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndLineUnavailableSeconds=oc3AtmLineStatus_PerformanceMonitoring_SonetFarEndLineUnavailableSeconds, dmtAlDslLineStatus_SparingChangeReason=dmtAlDslLineStatus_SparingChangeReason, sdslLineStatus_SparingState=sdslLineStatus_SparingState, dmtAlDslLineStatus_VpiVciRange=dmtAlDslLineStatus_VpiVciRange, oc3AtmLineStatus_RpopBipErrorCount=oc3AtmLineStatus_RpopBipErrorCount, ds3AtmLineStatus_SparingState=ds3AtmLineStatus_SparingState, ds3AtmLineStatus_Shelf_o=ds3AtmLineStatus_Shelf_o, oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetSectionSeverelyErroredFramingSeconds=oc3AtmLineStatus_IntervalPerformanceMonitoring_SonetSectionSeverelyErroredFramingSeconds, bRINetworkInterfaceState_PhysicalAddress_ItemNumber=bRINetworkInterfaceState_PhysicalAddress_ItemNumber, bRINetworkInterfaceState_SparePhysicalAddress_Shelf=bRINetworkInterfaceState_SparePhysicalAddress_Shelf, ds3AtmLineStatus_SparingChangeCounter=ds3AtmLineStatus_SparingChangeCounter)
