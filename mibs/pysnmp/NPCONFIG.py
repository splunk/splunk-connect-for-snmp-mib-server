#
# PySNMP MIB module NPCONFIG (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NPCONFIG
# Produced by pysmi-0.3.4 at Mon Apr 29 20:14:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ObjectIdentity, Counter64, Counter32, IpAddress, iso, mib_2, enterprises, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Integer32, NotificationType, MibIdentifier, ModuleIdentity, Bits, TimeTicks, snmpModules = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "Counter32", "IpAddress", "iso", "mib-2", "enterprises", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Integer32", "NotificationType", "MibIdentifier", "ModuleIdentity", "Bits", "TimeTicks", "snmpModules")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
zhoneWtn, = mibBuilder.importSymbols("Zhone", "zhoneWtn")
npconfig = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13))
npconfig.setRevisions(('2007-12-20 00:00', '2006-10-17 00:00',))
if mibBuilder.loadTexts: npconfig.setLastUpdated('200712200000Z')
if mibBuilder.loadTexts: npconfig.setOrganization('Zhone Technologies MIB Working Group Other information about group editing the MIB')
npconfigNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 0))
npconfigRowAction = MibScalar((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigRowAction.setStatus('current')
npconfigHistorySize = MibScalar((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigHistorySize.setStatus('current')
npconfigCurrHistorySize = MibScalar((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigCurrHistorySize.setStatus('current')
npconfigUseRunningAsSaved = MibScalar((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigUseRunningAsSaved.setStatus('current')
npconfigRestoreType = MibScalar((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("scp", 1), ("sftp", 2), ("tftp", 3), ("http", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigRestoreType.setStatus('current')
npconfigBackupType = MibScalar((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("scp", 1), ("sftp", 2), ("tftp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigBackupType.setStatus('current')
npconfigState = MibScalar((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("init", 1), ("resetToDefaults", 2), ("restoreRemote", 3), ("restoreBackup", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigState.setStatus('current')
npconfigBackupTableTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 8), )
if mibBuilder.loadTexts: npconfigBackupTableTable.setStatus('current')
npconfigBackupTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 8, 1), ).setIndexNames((0, "NPCONFIG", "npconfigBackupNo"))
if mibBuilder.loadTexts: npconfigBackupTableEntry.setStatus('current')
npconfigBackupNo = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigBackupNo.setStatus('current')
npconfigBackupName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 8, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigBackupName.setStatus('current')
npconfigBackupDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 8, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigBackupDescription.setStatus('current')
npconfigBackupUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 8, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigBackupUrl.setStatus('current')
npconfigBackupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 8, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigBackupStatus.setStatus('current')
npconfigBackupDate = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 8, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigBackupDate.setStatus('current')
npconfigTftpServer = MibScalar((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigTftpServer.setStatus('current')
npconfigServerIP = MibScalar((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigServerIP.setStatus('current')
npconfigRemoteFile = MibScalar((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigRemoteFile.setStatus('current')
npconfigLocalFile = MibScalar((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigLocalFile.setStatus('current')
npconfiguser = MibScalar((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfiguser.setStatus('current')
npconfigpassword = MibScalar((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: npconfigpassword.setStatus('current')
npconfigConfigChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 5504, 2, 5, 13, 0, 1))
if mibBuilder.loadTexts: npconfigConfigChangeEvent.setStatus('current')
mibBuilder.exportSymbols("NPCONFIG", npconfigServerIP=npconfigServerIP, npconfigBackupDate=npconfigBackupDate, npconfigBackupTableTable=npconfigBackupTableTable, npconfigBackupUrl=npconfigBackupUrl, npconfigTftpServer=npconfigTftpServer, PYSNMP_MODULE_ID=npconfig, npconfigBackupType=npconfigBackupType, npconfigRowAction=npconfigRowAction, npconfigLocalFile=npconfigLocalFile, npconfigBackupStatus=npconfigBackupStatus, npconfigCurrHistorySize=npconfigCurrHistorySize, npconfigState=npconfigState, npconfigpassword=npconfigpassword, npconfig=npconfig, npconfigBackupTableEntry=npconfigBackupTableEntry, npconfigHistorySize=npconfigHistorySize, npconfigConfigChangeEvent=npconfigConfigChangeEvent, npconfigBackupName=npconfigBackupName, npconfigRemoteFile=npconfigRemoteFile, npconfiguser=npconfiguser, npconfigRestoreType=npconfigRestoreType, npconfigBackupDescription=npconfigBackupDescription, npconfigNotifications=npconfigNotifications, npconfigUseRunningAsSaved=npconfigUseRunningAsSaved, npconfigBackupNo=npconfigBackupNo)
