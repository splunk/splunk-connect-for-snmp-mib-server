#
# PySNMP MIB module ALCATEL-IND1-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-QOS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:03:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
softentIND1QoS, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1QoS")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
Ipv6Address, = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Counter32, ModuleIdentity, TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, Counter64, Gauge32, Integer32, iso, NotificationType, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter32", "ModuleIdentity", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "Counter64", "Gauge32", "Integer32", "iso", "NotificationType", "MibIdentifier")
TextualConvention, DisplayString, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress", "RowStatus")
alaQoSMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1))
if mibBuilder.loadTexts: alaQoSMIB.setLastUpdated('200704030000Z')
if mibBuilder.loadTexts: alaQoSMIB.setOrganization('Alcatel IND')
alaQoSMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1))
if mibBuilder.loadTexts: alaQoSMIBObjects.setStatus('current')
alaQoSRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1), )
if mibBuilder.loadTexts: alaQoSRuleTable.setStatus('current')
alaQoSRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSRuleName"))
if mibBuilder.loadTexts: alaQoSRuleEntry.setStatus('current')
alaQoSRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSRuleName.setStatus('current')
alaQoSRuleEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleEnabled.setStatus('current')
alaQoSRuleSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleSource.setStatus('current')
alaQoSRulePrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRulePrecedence.setStatus('current')
alaQoSRuleCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleCondition.setStatus('current')
alaQoSRuleAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleAction.setStatus('current')
alaQoSRuleReflexive = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleReflexive.setStatus('current')
alaQoSRuleSave = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleSave.setStatus('current')
alaQoSRuleLog = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleLog.setStatus('current')
alaQoSRuleMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleMatches.setStatus('current')
alaQoSRuleEnforced = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleEnforced.setStatus('current')
alaQoSRuleActive = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleActive.setStatus('current')
alaQoSRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleRowStatus.setStatus('current')
alaQoSRuleValidityPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleValidityPeriod.setStatus('current')
alaQoSRuleValidityPeriodStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleValidityPeriodStatus.setStatus('current')
alaQoSRuleLogInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(30)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleLogInterval.setStatus('current')
alaQoSRuleCountType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("packets", 1), ("bytes", 2))).clone('packets')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleCountType.setStatus('current')
alaQoSRulePacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRulePacketCount.setStatus('current')
alaQoSRuleByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleByteCount.setStatus('current')
alaQoSRuleExcessPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleExcessPacketCount.setStatus('current')
alaQoSRuleExcessByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleExcessByteCount.setStatus('current')
alaQoSRuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleType.setStatus('current')
alaQoSRuleTrapEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleTrapEvents.setStatus('current')
alaQoSRuleDefaultList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleDefaultList.setStatus('current')
alaQoSRuleGreenCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleGreenCount.setStatus('current')
alaQoSRuleYellowCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleYellowCount.setStatus('current')
alaQoSRuleRedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleRedCount.setStatus('current')
alaQoSRuleNonGreenCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleNonGreenCount.setStatus('current')
alaQoSRuleNonRedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleNonRedCount.setStatus('current')
alaQoSAppliedRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2), )
if mibBuilder.loadTexts: alaQoSAppliedRuleTable.setStatus('current')
alaQoSAppliedRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleName"))
if mibBuilder.loadTexts: alaQoSAppliedRuleEntry.setStatus('current')
alaQoSAppliedRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedRuleName.setStatus('current')
alaQoSAppliedRuleEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleEnabled.setStatus('current')
alaQoSAppliedRuleSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleSource.setStatus('current')
alaQoSAppliedRulePrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRulePrecedence.setStatus('current')
alaQoSAppliedRuleCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleCondition.setStatus('current')
alaQoSAppliedRuleAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleAction.setStatus('current')
alaQoSAppliedRuleReflexive = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleReflexive.setStatus('current')
alaQoSAppliedRuleSave = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleSave.setStatus('current')
alaQoSAppliedRuleLog = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleLog.setStatus('current')
alaQoSAppliedRuleMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleMatches.setStatus('current')
alaQoSAppliedRuleEnforced = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleEnforced.setStatus('current')
alaQoSAppliedRuleActive = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleActive.setStatus('current')
alaQoSAppliedRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 13), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleRowStatus.setStatus('current')
alaQoSAppliedRuleValidityPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleValidityPeriod.setStatus('current')
alaQoSAppliedRuleValidityPeriodStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleValidityPeriodStatus.setStatus('current')
alaQoSAppliedRuleLogInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleLogInterval.setStatus('current')
alaQoSAppliedRuleCountType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("packets", 1), ("bytes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleCountType.setStatus('current')
alaQoSAppliedRulePacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRulePacketCount.setStatus('current')
alaQoSAppliedRuleByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleByteCount.setStatus('current')
alaQoSAppliedRuleExcessPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleExcessPacketCount.setStatus('current')
alaQoSAppliedRuleExcessByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleExcessByteCount.setStatus('current')
alaQoSAppliedRuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleType.setStatus('current')
alaQoSAppliedRuleTrapEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedRuleTrapEvents.setStatus('current')
alaQoSAppliedRuleDefaultList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedRuleDefaultList.setStatus('current')
alaQoSAppliedRuleGreenCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleGreenCount.setStatus('current')
alaQoSAppliedRuleYellowCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleYellowCount.setStatus('current')
alaQoSAppliedRuleRedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleRedCount.setStatus('current')
alaQoSAppliedRuleNonGreenCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleNonGreenCount.setStatus('current')
alaQoSAppliedRuleNonRedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleNonRedCount.setStatus('current')
alaQoSConditionTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3), )
if mibBuilder.loadTexts: alaQoSConditionTable.setStatus('current')
alaQoSConditionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSConditionName"))
if mibBuilder.loadTexts: alaQoSConditionEntry.setStatus('current')
alaQoSConditionName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSConditionName.setStatus('current')
alaQoSConditionSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSource.setStatus('current')
alaQoSConditionSourceSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceSlot.setStatus('current')
alaQoSConditionSourceSlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceSlotStatus.setStatus('current')
alaQoSConditionSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourcePort.setStatus('current')
alaQoSConditionSourcePortGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourcePortGroup.setStatus('current')
alaQoSConditionSourcePortGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourcePortGroupStatus.setStatus('current')
alaQoSConditionDestinationSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationSlot.setStatus('current')
alaQoSConditionDestinationSlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationSlotStatus.setStatus('current')
alaQoSConditionDestinationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationPort.setStatus('current')
alaQoSConditionDestinationPortGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationPortGroup.setStatus('current')
alaQoSConditionDestinationPortGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationPortGroupStatus.setStatus('current')
alaQoSConditionSourceInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ethernet", 1), ("wan", 2), ("ethernet10", 3), ("ethernet100", 4), ("ethernet1G", 5), ("ethernet10G", 6), ("aggregate", 7))).clone('ethernet')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceInterfaceType.setStatus('current')
alaQoSConditionSourceInterfaceTypeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceInterfaceTypeStatus.setStatus('current')
alaQoSConditionDestinationInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ethernet", 1), ("wan", 2), ("ethernet10", 3), ("ethernet100", 4), ("ethernet1G", 5), ("ethernet10G", 6), ("aggregate", 7))).clone('ethernet')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationInterfaceType.setStatus('current')
alaQoSConditionDestinationInterfaceTypeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationInterfaceTypeStatus.setStatus('current')
alaQoSConditionSourceMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 17), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceMacAddr.setStatus('current')
alaQoSConditionSourceMacAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceMacAddrStatus.setStatus('current')
alaQoSConditionSourceMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 19), MacAddress().clone(hexValue="ffffffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceMacMask.setStatus('current')
alaQoSConditionSourceMacGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceMacGroup.setStatus('current')
alaQoSConditionSourceMacGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceMacGroupStatus.setStatus('current')
alaQoSConditionDestinationMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 22), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationMacAddr.setStatus('current')
alaQoSConditionDestinationMacAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationMacAddrStatus.setStatus('current')
alaQoSConditionDestinationMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 24), MacAddress().clone(hexValue="ffffffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationMacMask.setStatus('current')
alaQoSConditionDestinationMacGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationMacGroup.setStatus('current')
alaQoSConditionDestinationMacGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationMacGroupStatus.setStatus('current')
alaQoSConditionSourceVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceVlan.setStatus('current')
alaQoSConditionSourceVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceVlanStatus.setStatus('current')
alaQoSConditionDestinationVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationVlan.setStatus('current')
alaQoSConditionDestinationVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationVlanStatus.setStatus('current')
alaQoSCondition8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSCondition8021p.setStatus('current')
alaQoSCondition8021pStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSCondition8021pStatus.setStatus('current')
alaQoSConditionSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 33), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpAddr.setStatus('current')
alaQoSConditionSourceIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpAddrStatus.setStatus('current')
alaQoSConditionSourceIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 35), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpMask.setStatus('current')
alaQoSConditionSourceNetworkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceNetworkGroup.setStatus('current')
alaQoSConditionSourceNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceNetworkGroupStatus.setStatus('current')
alaQoSConditionDestinationIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 38), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpAddr.setStatus('current')
alaQoSConditionDestinationIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpAddrStatus.setStatus('current')
alaQoSConditionDestinationIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 40), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpMask.setStatus('current')
alaQoSConditionDestinationNetworkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationNetworkGroup.setStatus('current')
alaQoSConditionDestinationNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationNetworkGroupStatus.setStatus('current')
alaQoSConditionMulticastIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 43), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionMulticastIpAddr.setStatus('current')
alaQoSConditionMulticastIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionMulticastIpAddrStatus.setStatus('current')
alaQoSConditionMulticastIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 45), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionMulticastIpMask.setStatus('current')
alaQoSConditionMulticastNetworkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionMulticastNetworkGroup.setStatus('current')
alaQoSConditionMulticastNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionMulticastNetworkGroupStatus.setStatus('current')
alaQoSConditionTos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTos.setStatus('current')
alaQoSConditionTosStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTosStatus.setStatus('current')
alaQoSConditionTosMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(7)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTosMask.setStatus('current')
alaQoSConditionDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDscp.setStatus('current')
alaQoSConditionDscpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDscpStatus.setStatus('current')
alaQoSConditionDscpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 53), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)).clone(63)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDscpMask.setStatus('current')
alaQoSConditionIpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIpProtocol.setStatus('current')
alaQoSConditionIpProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIpProtocolStatus.setStatus('current')
alaQoSConditionSourceIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpPort.setStatus('current')
alaQoSConditionSourceIpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpPortStatus.setStatus('current')
alaQoSConditionDestinationIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpPort.setStatus('current')
alaQoSConditionDestinationIpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpPortStatus.setStatus('current')
alaQoSConditionService = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 60), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionService.setStatus('current')
alaQoSConditionServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionServiceStatus.setStatus('current')
alaQoSConditionServiceGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 62), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionServiceGroup.setStatus('current')
alaQoSConditionServiceGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionServiceGroupStatus.setStatus('current')
alaQoSConditionIcmpType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIcmpType.setStatus('current')
alaQoSConditionIcmpTypeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIcmpTypeStatus.setStatus('current')
alaQoSConditionIcmpCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 66), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIcmpCode.setStatus('current')
alaQoSConditionIcmpCodeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIcmpCodeStatus.setStatus('current')
alaQoSConditionDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 68), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDlci.setStatus('current')
alaQoSConditionDlciStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDlciStatus.setStatus('current')
alaQoSConditionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 70), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionRowStatus.setStatus('current')
alaQoSConditionSourcePortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 71), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourcePortEnd.setStatus('current')
alaQoSConditionDestinationPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 72), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationPortEnd.setStatus('current')
alaQoSConditionSourceIpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 73), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpPortEnd.setStatus('current')
alaQoSConditionDestinationIpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 74), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpPortEnd.setStatus('current')
alaQoSConditionSourceTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 75), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceTcpPort.setStatus('current')
alaQoSConditionSourceTcpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 76), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceTcpPortStatus.setStatus('current')
alaQoSConditionSourceTcpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 77), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceTcpPortEnd.setStatus('current')
alaQoSConditionDestinationTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 78), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationTcpPort.setStatus('current')
alaQoSConditionDestinationTcpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 79), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationTcpPortStatus.setStatus('current')
alaQoSConditionDestinationTcpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 80), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationTcpPortEnd.setStatus('current')
alaQoSConditionSourceUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 81), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceUdpPort.setStatus('current')
alaQoSConditionSourceUdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 82), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceUdpPortStatus.setStatus('current')
alaQoSConditionSourceUdpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 83), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceUdpPortEnd.setStatus('current')
alaQoSConditionDestinationUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 84), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationUdpPort.setStatus('current')
alaQoSConditionDestinationUdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 85), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationUdpPortStatus.setStatus('current')
alaQoSConditionDestinationUdpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 86), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationUdpPortEnd.setStatus('current')
alaQoSConditionEthertype = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 87), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionEthertype.setStatus('current')
alaQoSConditionEthertypeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 88), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionEthertypeStatus.setStatus('current')
alaQoSConditionTcpFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 89), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("all", 1), ("any", 2))).clone('all')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTcpFlags.setStatus('current')
alaQoSConditionTcpFlagsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 90), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTcpFlagsStatus.setStatus('current')
alaQoSConditionTcpFlagsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 91), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTcpFlagsVal.setStatus('current')
alaQoSConditionTcpFlagsValStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 92), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTcpFlagsValStatus.setStatus('current')
alaQoSConditionTcpFlagsMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 93), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTcpFlagsMask.setStatus('current')
alaQoSConditionTcpFlagsMaskStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 94), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTcpFlagsMaskStatus.setStatus('current')
alaQoSConditionTcpEstablished = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 95), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTcpEstablished.setStatus('current')
alaQoSConditionSourceIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 96), Ipv6Address().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpv6Addr.setStatus('current')
alaQoSConditionSourceIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 97), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpv6AddrStatus.setStatus('current')
alaQoSConditionSourceIpv6Mask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 98), Ipv6Address().clone(hexValue="ffffffffffffffffffffffffffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpv6Mask.setStatus('current')
alaQoSConditionDestinationIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 99), Ipv6Address().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpv6Addr.setStatus('current')
alaQoSConditionDestinationIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 100), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpv6AddrStatus.setStatus('current')
alaQoSConditionDestinationIpv6Mask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 101), Ipv6Address().clone(hexValue="ffffffffffffffffffffffffffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpv6Mask.setStatus('current')
alaQoSConditionIpv6Traffic = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 102), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIpv6Traffic.setStatus('current')
alaQoSConditionIpv6NH = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 103), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIpv6NH.setStatus('current')
alaQoSConditionIpv6NHStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 104), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIpv6NHStatus.setStatus('current')
alaQoSConditionIpv6FlowLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 105), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048575))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIpv6FlowLabel.setStatus('current')
alaQoSConditionIpv6FlowLabelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 106), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIpv6FlowLabelStatus.setStatus('current')
alaQoSConditionMcastIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 107), Ipv6Address().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionMcastIpv6Addr.setStatus('current')
alaQoSConditionMcastIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 108), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionMcastIpv6AddrStatus.setStatus('current')
alaQoSConditionMcastIpv6Mask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 109), Ipv6Address().clone(hexValue="ffffffffffffffffffffffffffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionMcastIpv6Mask.setStatus('current')
alaQoSConditionDscpEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 110), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDscpEnd.setStatus('current')
alaQoSConditionInnerSourceVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 111), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionInnerSourceVlan.setStatus('current')
alaQoSConditionInnerSourceVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 112), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionInnerSourceVlanStatus.setStatus('current')
alaQoSConditionInner8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 113), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionInner8021p.setStatus('current')
alaQoSConditionInner8021pStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 114), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionInner8021pStatus.setStatus('current')
alaQoSConditionVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 115), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVrfName.setStatus('current')
alaQoSConditionVrfNameStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 116), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVrfNameStatus.setStatus('current')
alaQoSCondition8021pEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 117), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSCondition8021pEnd.setStatus('current')
alaQoSConditionInner8021pEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 118), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionInner8021pEnd.setStatus('current')
alaQoSConditionSourceVlanGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 119), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceVlanGroup.setStatus('current')
alaQoSConditionSourceVlanGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 120), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceVlanGroupStatus.setStatus('current')
alaQoSConditionInnerSourceVlanGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 121), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionInnerSourceVlanGroup.setStatus('current')
alaQoSConditionInnerSourceVlanGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 122), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionInnerSourceVlanGroupStatus.setStatus('current')
alaQoSAppliedConditionTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4), )
if mibBuilder.loadTexts: alaQoSAppliedConditionTable.setStatus('current')
alaQoSAppliedConditionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionName"))
if mibBuilder.loadTexts: alaQoSAppliedConditionEntry.setStatus('current')
alaQoSAppliedConditionName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedConditionName.setStatus('current')
alaQoSAppliedConditionSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSource.setStatus('current')
alaQoSAppliedConditionSourceSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceSlot.setStatus('current')
alaQoSAppliedConditionSourceSlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceSlotStatus.setStatus('current')
alaQoSAppliedConditionSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourcePort.setStatus('current')
alaQoSAppliedConditionSourcePortGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourcePortGroup.setStatus('current')
alaQoSAppliedConditionSourcePortGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourcePortGroupStatus.setStatus('current')
alaQoSAppliedConditionDestinationSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationSlot.setStatus('current')
alaQoSAppliedConditionDestinationSlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationSlotStatus.setStatus('current')
alaQoSAppliedConditionDestinationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationPort.setStatus('current')
alaQoSAppliedConditionDestinationPortGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationPortGroup.setStatus('current')
alaQoSAppliedConditionDestinationPortGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationPortGroupStatus.setStatus('current')
alaQoSAppliedConditionSourceInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ethernet", 1), ("wan", 2), ("ethernet10", 3), ("ethernet100", 4), ("ethernet1G", 5), ("ethernet10G", 6), ("aggregate", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceInterfaceType.setStatus('current')
alaQoSAppliedConditionSourceInterfaceTypeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceInterfaceTypeStatus.setStatus('current')
alaQoSAppliedConditionDestinationInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ethernet", 1), ("wan", 2), ("ethernet10", 3), ("ethernet100", 4), ("ethernet1G", 5), ("ethernet10G", 6), ("aggregate", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationInterfaceType.setStatus('current')
alaQoSAppliedConditionDestinationInterfaceTypeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationInterfaceTypeStatus.setStatus('current')
alaQoSAppliedConditionSourceMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 17), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceMacAddr.setStatus('current')
alaQoSAppliedConditionSourceMacAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceMacAddrStatus.setStatus('current')
alaQoSAppliedConditionSourceMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 19), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceMacMask.setStatus('current')
alaQoSAppliedConditionSourceMacGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceMacGroup.setStatus('current')
alaQoSAppliedConditionSourceMacGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceMacGroupStatus.setStatus('current')
alaQoSAppliedConditionDestinationMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 22), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationMacAddr.setStatus('current')
alaQoSAppliedConditionDestinationMacAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationMacAddrStatus.setStatus('current')
alaQoSAppliedConditionDestinationMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 24), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationMacMask.setStatus('current')
alaQoSAppliedConditionDestinationMacGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationMacGroup.setStatus('current')
alaQoSAppliedConditionDestinationMacGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationMacGroupStatus.setStatus('current')
alaQoSAppliedConditionSourceVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceVlan.setStatus('current')
alaQoSAppliedConditionSourceVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceVlanStatus.setStatus('current')
alaQoSAppliedConditionDestinationVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationVlan.setStatus('current')
alaQoSAppliedConditionDestinationVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationVlanStatus.setStatus('current')
alaQoSAppliedCondition8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedCondition8021p.setStatus('current')
alaQoSAppliedCondition8021pStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedCondition8021pStatus.setStatus('current')
alaQoSAppliedConditionSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 33), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpAddr.setStatus('current')
alaQoSAppliedConditionSourceIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpAddrStatus.setStatus('current')
alaQoSAppliedConditionSourceIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 35), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpMask.setStatus('current')
alaQoSAppliedConditionSourceNetworkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceNetworkGroup.setStatus('current')
alaQoSAppliedConditionSourceNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceNetworkGroupStatus.setStatus('current')
alaQoSAppliedConditionDestinationIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 38), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpAddr.setStatus('current')
alaQoSAppliedConditionDestinationIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpAddrStatus.setStatus('current')
alaQoSAppliedConditionDestinationIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 40), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpMask.setStatus('current')
alaQoSAppliedConditionDestinationNetworkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationNetworkGroup.setStatus('current')
alaQoSAppliedConditionDestinationNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationNetworkGroupStatus.setStatus('current')
alaQoSAppliedConditionMulticastIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 43), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionMulticastIpAddr.setStatus('current')
alaQoSAppliedConditionMulticastIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionMulticastIpAddrStatus.setStatus('current')
alaQoSAppliedConditionMulticastIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 45), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionMulticastIpMask.setStatus('current')
alaQoSAppliedConditionMulticastNetworkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionMulticastNetworkGroup.setStatus('current')
alaQoSAppliedConditionMulticastNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionMulticastNetworkGroupStatus.setStatus('current')
alaQoSAppliedConditionTos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTos.setStatus('current')
alaQoSAppliedConditionTosStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTosStatus.setStatus('current')
alaQoSAppliedConditionTosMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTosMask.setStatus('current')
alaQoSAppliedConditionDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDscp.setStatus('current')
alaQoSAppliedConditionDscpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDscpStatus.setStatus('current')
alaQoSAppliedConditionDscpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 53), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDscpMask.setStatus('current')
alaQoSAppliedConditionIpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIpProtocol.setStatus('current')
alaQoSAppliedConditionIpProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIpProtocolStatus.setStatus('current')
alaQoSAppliedConditionSourceIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpPort.setStatus('current')
alaQoSAppliedConditionSourceIpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpPortStatus.setStatus('current')
alaQoSAppliedConditionDestinationIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpPort.setStatus('current')
alaQoSAppliedConditionDestinationIpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpPortStatus.setStatus('current')
alaQoSAppliedConditionService = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 60), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionService.setStatus('current')
alaQoSAppliedConditionServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionServiceStatus.setStatus('current')
alaQoSAppliedConditionServiceGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 62), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionServiceGroup.setStatus('current')
alaQoSAppliedConditionServiceGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionServiceGroupStatus.setStatus('current')
alaQoSAppliedConditionIcmpType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIcmpType.setStatus('current')
alaQoSAppliedConditionIcmpTypeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIcmpTypeStatus.setStatus('current')
alaQoSAppliedConditionIcmpCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 66), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIcmpCode.setStatus('current')
alaQoSAppliedConditionIcmpCodeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIcmpCodeStatus.setStatus('current')
alaQoSAppliedConditionDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 68), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDlci.setStatus('current')
alaQoSAppliedConditionDlciStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDlciStatus.setStatus('current')
alaQoSAppliedConditionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 70), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionRowStatus.setStatus('current')
alaQoSAppliedConditionSourcePortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 71), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourcePortEnd.setStatus('current')
alaQoSAppliedConditionDestinationPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 72), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationPortEnd.setStatus('current')
alaQoSAppliedConditionSourceIpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 73), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpPortEnd.setStatus('current')
alaQoSAppliedConditionDestinationIpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 74), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpPortEnd.setStatus('current')
alaQoSAppliedConditionSourceTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 75), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceTcpPort.setStatus('current')
alaQoSAppliedConditionSourceTcpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 76), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceTcpPortStatus.setStatus('current')
alaQoSAppliedConditionSourceTcpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 77), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceTcpPortEnd.setStatus('current')
alaQoSAppliedConditionDestinationTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 78), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationTcpPort.setStatus('current')
alaQoSAppliedConditionDestinationTcpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 79), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationTcpPortStatus.setStatus('current')
alaQoSAppliedConditionDestinationTcpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 80), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationTcpPortEnd.setStatus('current')
alaQoSAppliedConditionSourceUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 81), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceUdpPort.setStatus('current')
alaQoSAppliedConditionSourceUdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 82), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceUdpPortStatus.setStatus('current')
alaQoSAppliedConditionSourceUdpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 83), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceUdpPortEnd.setStatus('current')
alaQoSAppliedConditionDestinationUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 84), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationUdpPort.setStatus('current')
alaQoSAppliedConditionDestinationUdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 85), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationUdpPortStatus.setStatus('current')
alaQoSAppliedConditionDestinationUdpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 86), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationUdpPortEnd.setStatus('current')
alaQoSAppliedConditionEthertype = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 87), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionEthertype.setStatus('current')
alaQoSAppliedConditionEthertypeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 88), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionEthertypeStatus.setStatus('current')
alaQoSAppliedConditionTcpFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 89), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("all", 1), ("any", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTcpFlags.setStatus('current')
alaQoSAppliedConditionTcpFlagsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 90), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTcpFlagsStatus.setStatus('current')
alaQoSAppliedConditionTcpFlagsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 91), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTcpFlagsVal.setStatus('current')
alaQoSAppliedConditionTcpFlagsValStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 92), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTcpFlagsValStatus.setStatus('current')
alaQoSAppliedConditionTcpFlagsMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 93), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTcpFlagsMask.setStatus('current')
alaQoSAppliedConditionTcpFlagsMaskStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 94), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTcpFlagsMaskStatus.setStatus('current')
alaQoSAppliedConditionTcpEstablished = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 95), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTcpEstablished.setStatus('current')
alaQoSAppliedConditionSourceIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 96), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpv6Addr.setStatus('current')
alaQoSAppliedConditionSourceIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 97), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpv6AddrStatus.setStatus('current')
alaQoSAppliedConditionSourceIpv6Mask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 98), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpv6Mask.setStatus('current')
alaQoSAppliedConditionDestinationIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 99), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpv6Addr.setStatus('current')
alaQoSAppliedConditionDestinationIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 100), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpv6AddrStatus.setStatus('current')
alaQoSAppliedConditionDestinationIpv6Mask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 101), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpv6Mask.setStatus('current')
alaQoSAppliedConditionIpv6Traffic = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 102), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIpv6Traffic.setStatus('current')
alaQoSAppliedConditionIpv6NH = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 103), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIpv6NH.setStatus('current')
alaQoSAppliedConditionIpv6NHStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 104), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIpv6NHStatus.setStatus('current')
alaQoSAppliedConditionIpv6FlowLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 105), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048575))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIpv6FlowLabel.setStatus('current')
alaQoSAppliedConditionIpv6FlowLabelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 106), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIpv6FlowLabelStatus.setStatus('current')
alaQoSAppliedConditionMcastIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 107), Ipv6Address().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionMcastIpv6Addr.setStatus('current')
alaQoSAppliedConditionMcastIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 108), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionMcastIpv6AddrStatus.setStatus('current')
alaQoSAppliedConditionMcastIpv6Mask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 109), Ipv6Address().clone(hexValue="ffffffffffffffffffffffffffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionMcastIpv6Mask.setStatus('current')
alaQoSAppliedConditionDscpEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 110), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDscpEnd.setStatus('current')
alaQoSAppliedConditionInnerSourceVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 111), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionInnerSourceVlan.setStatus('current')
alaQoSAppliedConditionInnerSourceVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 112), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionInnerSourceVlanStatus.setStatus('current')
alaQoSAppliedConditionInner8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 113), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionInner8021p.setStatus('current')
alaQoSAppliedConditionInner8021pStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 114), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionInner8021pStatus.setStatus('current')
alaQoSAppliedConditionVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 115), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVrfName.setStatus('current')
alaQoSAppliedConditionVrfNameStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 116), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVrfNameStatus.setStatus('current')
alaQoSAppliedCondition8021pEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 117), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedCondition8021pEnd.setStatus('current')
alaQoSAppliedConditionInner8021pEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 118), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionInner8021pEnd.setStatus('current')
alaQoSAppliedConditionSourceVlanGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 119), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceVlanGroup.setStatus('current')
alaQoSAppliedConditionSourceVlanGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 120), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceVlanGroupStatus.setStatus('current')
alaQoSAppliedConditionInnerSourceVlanGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 121), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionInnerSourceVlanGroup.setStatus('current')
alaQoSAppliedConditionInnerSourceVlanGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 122), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionInnerSourceVlanGroupStatus.setStatus('current')
alaQoSServiceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5), )
if mibBuilder.loadTexts: alaQoSServiceTable.setStatus('current')
alaQoSServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSServiceName"))
if mibBuilder.loadTexts: alaQoSServiceEntry.setStatus('current')
alaQoSServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSServiceName.setStatus('current')
alaQoSServiceSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSource.setStatus('current')
alaQoSServiceProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceProtocol.setStatus('current')
alaQoSServiceSourceIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceIpPort.setStatus('current')
alaQoSServiceSourceIpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceIpPortStatus.setStatus('current')
alaQoSServiceDestinationIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationIpPort.setStatus('current')
alaQoSServiceDestinationIpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationIpPortStatus.setStatus('current')
alaQoSServiceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceRowStatus.setStatus('current')
alaQoSServiceSourceIpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceIpPortEnd.setStatus('current')
alaQoSServiceDestinationIpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationIpPortEnd.setStatus('current')
alaQoSServiceSourceTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceTcpPort.setStatus('current')
alaQoSServiceSourceTcpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceTcpPortStatus.setStatus('current')
alaQoSServiceSourceTcpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceTcpPortEnd.setStatus('current')
alaQoSServiceDestinationTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationTcpPort.setStatus('current')
alaQoSServiceDestinationTcpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationTcpPortStatus.setStatus('current')
alaQoSServiceDestinationTcpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationTcpPortEnd.setStatus('current')
alaQoSServiceSourceUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceUdpPort.setStatus('current')
alaQoSServiceSourceUdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceUdpPortStatus.setStatus('current')
alaQoSServiceSourceUdpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceUdpPortEnd.setStatus('current')
alaQoSServiceDestinationUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationUdpPort.setStatus('current')
alaQoSServiceDestinationUdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationUdpPortStatus.setStatus('current')
alaQoSServiceDestinationUdpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationUdpPortEnd.setStatus('current')
alaQoSAppliedServiceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6), )
if mibBuilder.loadTexts: alaQoSAppliedServiceTable.setStatus('current')
alaQoSAppliedServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceName"))
if mibBuilder.loadTexts: alaQoSAppliedServiceEntry.setStatus('current')
alaQoSAppliedServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedServiceName.setStatus('current')
alaQoSAppliedServiceSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSource.setStatus('current')
alaQoSAppliedServiceProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceProtocol.setStatus('current')
alaQoSAppliedServiceSourceIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceIpPort.setStatus('current')
alaQoSAppliedServiceSourceIpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceIpPortStatus.setStatus('current')
alaQoSAppliedServiceDestinationIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationIpPort.setStatus('current')
alaQoSAppliedServiceDestinationIpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationIpPortStatus.setStatus('current')
alaQoSAppliedServiceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 8), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceRowStatus.setStatus('current')
alaQoSAppliedServiceSourceIpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceIpPortEnd.setStatus('current')
alaQoSAppliedServiceDestinationIpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationIpPortEnd.setStatus('current')
alaQoSAppliedServiceSourceTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceTcpPort.setStatus('current')
alaQoSAppliedServiceSourceTcpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceTcpPortStatus.setStatus('current')
alaQoSAppliedServiceSourceTcpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceTcpPortEnd.setStatus('current')
alaQoSAppliedServiceDestinationTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationTcpPort.setStatus('current')
alaQoSAppliedServiceDestinationTcpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationTcpPortStatus.setStatus('current')
alaQoSAppliedServiceDestinationTcpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationTcpPortEnd.setStatus('current')
alaQoSAppliedServiceSourceUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceUdpPort.setStatus('current')
alaQoSAppliedServiceSourceUdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceUdpPortStatus.setStatus('current')
alaQoSAppliedServiceSourceUdpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceUdpPortEnd.setStatus('current')
alaQoSAppliedServiceDestinationUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationUdpPort.setStatus('current')
alaQoSAppliedServiceDestinationUdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationUdpPortStatus.setStatus('current')
alaQoSAppliedServiceDestinationUdpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationUdpPortEnd.setStatus('current')
alaQoSServiceGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 7), )
if mibBuilder.loadTexts: alaQoSServiceGroupsTable.setStatus('current')
alaQoSServiceGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSServiceGroupsName"))
if mibBuilder.loadTexts: alaQoSServiceGroupsEntry.setStatus('current')
alaQoSServiceGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSServiceGroupsName.setStatus('current')
alaQoSServiceGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceGroupsSource.setStatus('current')
alaQoSServiceGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceGroupsStatus.setStatus('current')
alaQoSAppliedServiceGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 8), )
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupsTable.setStatus('current')
alaQoSAppliedServiceGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 8, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceGroupsName"))
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupsEntry.setStatus('current')
alaQoSAppliedServiceGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupsName.setStatus('current')
alaQoSAppliedServiceGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupsSource.setStatus('current')
alaQoSAppliedServiceGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 8, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupsStatus.setStatus('current')
alaQoSServiceGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 9), )
if mibBuilder.loadTexts: alaQoSServiceGroupTable.setStatus('current')
alaQoSServiceGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 9, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSServiceGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSServiceGroupServiceName"))
if mibBuilder.loadTexts: alaQoSServiceGroupEntry.setStatus('current')
alaQoSServiceGroupServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSServiceGroupServiceName.setStatus('current')
alaQoSServiceGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 9, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceGroupStatus.setStatus('current')
alaQoSAppliedServiceGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 10), )
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupTable.setStatus('current')
alaQoSAppliedServiceGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 10, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceGroupServiceName"))
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupEntry.setStatus('current')
alaQoSAppliedServiceGroupServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupServiceName.setStatus('current')
alaQoSAppliedServiceGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 10, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupStatus.setStatus('current')
alaQoSNetworkGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 11), )
if mibBuilder.loadTexts: alaQoSNetworkGroupsTable.setStatus('current')
alaQoSNetworkGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 11, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSNetworkGroupsName"))
if mibBuilder.loadTexts: alaQoSNetworkGroupsEntry.setStatus('current')
alaQoSNetworkGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSNetworkGroupsName.setStatus('current')
alaQoSNetworkGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSNetworkGroupsSource.setStatus('current')
alaQoSNetworkGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 11, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSNetworkGroupsStatus.setStatus('current')
alaQoSAppliedNetworkGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 12), )
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupsTable.setStatus('current')
alaQoSAppliedNetworkGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 12, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedNetworkGroupsName"))
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupsEntry.setStatus('current')
alaQoSAppliedNetworkGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupsName.setStatus('current')
alaQoSAppliedNetworkGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupsSource.setStatus('current')
alaQoSAppliedNetworkGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 12, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupsStatus.setStatus('current')
alaQoSNetworkGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 13), )
if mibBuilder.loadTexts: alaQoSNetworkGroupTable.setStatus('current')
alaQoSNetworkGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 13, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSNetworkGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSNetworkGroupIpAddr"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSNetworkGroupIpMask"))
if mibBuilder.loadTexts: alaQoSNetworkGroupEntry.setStatus('current')
alaQoSNetworkGroupIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 13, 1, 1), IpAddress())
if mibBuilder.loadTexts: alaQoSNetworkGroupIpAddr.setStatus('current')
alaQoSNetworkGroupIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 13, 1, 2), IpAddress())
if mibBuilder.loadTexts: alaQoSNetworkGroupIpMask.setStatus('current')
alaQoSNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 13, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSNetworkGroupStatus.setStatus('current')
alaQoSAppliedNetworkGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 14), )
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupTable.setStatus('current')
alaQoSAppliedNetworkGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 14, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedNetworkGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedNetworkGroupIpAddr"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedNetworkGroupIpMask"))
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupEntry.setStatus('current')
alaQoSAppliedNetworkGroupIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 14, 1, 1), IpAddress())
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupIpAddr.setStatus('current')
alaQoSAppliedNetworkGroupIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 14, 1, 2), IpAddress())
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupIpMask.setStatus('current')
alaQoSAppliedNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 14, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupStatus.setStatus('current')
alaQoSMACGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 15), )
if mibBuilder.loadTexts: alaQoSMACGroupsTable.setStatus('current')
alaQoSMACGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 15, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSMACGroupsName"))
if mibBuilder.loadTexts: alaQoSMACGroupsEntry.setStatus('current')
alaQoSMACGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 15, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSMACGroupsName.setStatus('current')
alaQoSMACGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSMACGroupsSource.setStatus('current')
alaQoSMACGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 15, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSMACGroupsStatus.setStatus('current')
alaQoSAppliedMACGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 16), )
if mibBuilder.loadTexts: alaQoSAppliedMACGroupsTable.setStatus('current')
alaQoSAppliedMACGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 16, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMACGroupsName"))
if mibBuilder.loadTexts: alaQoSAppliedMACGroupsEntry.setStatus('current')
alaQoSAppliedMACGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 16, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedMACGroupsName.setStatus('current')
alaQoSAppliedMACGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedMACGroupsSource.setStatus('current')
alaQoSAppliedMACGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 16, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedMACGroupsStatus.setStatus('current')
alaQoSMACGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 17), )
if mibBuilder.loadTexts: alaQoSMACGroupTable.setStatus('current')
alaQoSMACGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 17, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSMACGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSMACGroupMacAddr"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSMACGroupMacMask"))
if mibBuilder.loadTexts: alaQoSMACGroupEntry.setStatus('current')
alaQoSMACGroupMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 17, 1, 1), MacAddress())
if mibBuilder.loadTexts: alaQoSMACGroupMacAddr.setStatus('current')
alaQoSMACGroupMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 17, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaQoSMACGroupMacMask.setStatus('current')
alaQoSMACGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 17, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSMACGroupStatus.setStatus('current')
alaQoSAppliedMACGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 18), )
if mibBuilder.loadTexts: alaQoSAppliedMACGroupTable.setStatus('current')
alaQoSAppliedMACGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 18, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMACGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMACGroupMacAddr"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMACGroupMacMask"))
if mibBuilder.loadTexts: alaQoSAppliedMACGroupEntry.setStatus('current')
alaQoSAppliedMACGroupMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 18, 1, 1), MacAddress())
if mibBuilder.loadTexts: alaQoSAppliedMACGroupMacAddr.setStatus('current')
alaQoSAppliedMACGroupMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 18, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaQoSAppliedMACGroupMacMask.setStatus('current')
alaQoSAppliedMACGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 18, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedMACGroupStatus.setStatus('current')
alaQoSPortGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 19), )
if mibBuilder.loadTexts: alaQoSPortGroupsTable.setStatus('current')
alaQoSPortGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 19, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortGroupsName"))
if mibBuilder.loadTexts: alaQoSPortGroupsEntry.setStatus('current')
alaQoSPortGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 19, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSPortGroupsName.setStatus('current')
alaQoSPortGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 19, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortGroupsSource.setStatus('current')
alaQoSPortGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 19, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortGroupsStatus.setStatus('current')
alaQoSAppliedPortGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 20), )
if mibBuilder.loadTexts: alaQoSAppliedPortGroupsTable.setStatus('current')
alaQoSAppliedPortGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 20, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedPortGroupsName"))
if mibBuilder.loadTexts: alaQoSAppliedPortGroupsEntry.setStatus('current')
alaQoSAppliedPortGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedPortGroupsName.setStatus('current')
alaQoSAppliedPortGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedPortGroupsSource.setStatus('current')
alaQoSAppliedPortGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 20, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedPortGroupsStatus.setStatus('current')
alaQoSPortGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 21), )
if mibBuilder.loadTexts: alaQoSPortGroupTable.setStatus('current')
alaQoSPortGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 21, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortGroupSlot"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortGroupPort"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortGroupPortEnd"))
if mibBuilder.loadTexts: alaQoSPortGroupEntry.setStatus('current')
alaQoSPortGroupSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: alaQoSPortGroupSlot.setStatus('current')
alaQoSPortGroupPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 21, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: alaQoSPortGroupPort.setStatus('current')
alaQoSPortGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 21, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortGroupStatus.setStatus('current')
alaQoSPortGroupPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 21, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 52)))
if mibBuilder.loadTexts: alaQoSPortGroupPortEnd.setStatus('current')
alaQoSAppliedPortGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 22), )
if mibBuilder.loadTexts: alaQoSAppliedPortGroupTable.setStatus('current')
alaQoSAppliedPortGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 22, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedPortGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedPortGroupSlot"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedPortGroupPort"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedPortGroupPortEnd"))
if mibBuilder.loadTexts: alaQoSAppliedPortGroupEntry.setStatus('current')
alaQoSAppliedPortGroupSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: alaQoSAppliedPortGroupSlot.setStatus('current')
alaQoSAppliedPortGroupPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 22, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: alaQoSAppliedPortGroupPort.setStatus('current')
alaQoSAppliedPortGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 22, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedPortGroupStatus.setStatus('current')
alaQoSAppliedPortGroupPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 22, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 52)))
if mibBuilder.loadTexts: alaQoSAppliedPortGroupPortEnd.setStatus('current')
alaQoSMapGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 23), )
if mibBuilder.loadTexts: alaQoSMapGroupsTable.setStatus('current')
alaQoSMapGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 23, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSMapGroupsName"))
if mibBuilder.loadTexts: alaQoSMapGroupsEntry.setStatus('current')
alaQoSMapGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 23, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSMapGroupsName.setStatus('current')
alaQoSMapGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 23, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSMapGroupsSource.setStatus('current')
alaQoSMapGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 23, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSMapGroupsStatus.setStatus('current')
alaQoSAppliedMapGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 24), )
if mibBuilder.loadTexts: alaQoSAppliedMapGroupsTable.setStatus('current')
alaQoSAppliedMapGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 24, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMapGroupsName"))
if mibBuilder.loadTexts: alaQoSAppliedMapGroupsEntry.setStatus('current')
alaQoSAppliedMapGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 24, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedMapGroupsName.setStatus('current')
alaQoSAppliedMapGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 24, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedMapGroupsSource.setStatus('current')
alaQoSAppliedMapGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 24, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedMapGroupsStatus.setStatus('current')
alaQoSMapGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 25), )
if mibBuilder.loadTexts: alaQoSMapGroupTable.setStatus('current')
alaQoSMapGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 25, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSMapGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSMapGroupKey"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSMapGroupKeyEnd"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSMapGroupValue"))
if mibBuilder.loadTexts: alaQoSMapGroupEntry.setStatus('current')
alaQoSMapGroupKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: alaQoSMapGroupKey.setStatus('current')
alaQoSMapGroupKeyEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 25, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: alaQoSMapGroupKeyEnd.setStatus('current')
alaQoSMapGroupValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 25, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: alaQoSMapGroupValue.setStatus('current')
alaQoSMapGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 25, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSMapGroupStatus.setStatus('current')
alaQoSAppliedMapGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 26), )
if mibBuilder.loadTexts: alaQoSAppliedMapGroupTable.setStatus('current')
alaQoSAppliedMapGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 26, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMapGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMapGroupKey"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMapGroupKeyEnd"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMapGroupValue"))
if mibBuilder.loadTexts: alaQoSAppliedMapGroupEntry.setStatus('current')
alaQoSAppliedMapGroupKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: alaQoSAppliedMapGroupKey.setStatus('current')
alaQoSAppliedMapGroupKeyEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 26, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: alaQoSAppliedMapGroupKeyEnd.setStatus('current')
alaQoSAppliedMapGroupValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 26, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: alaQoSAppliedMapGroupValue.setStatus('current')
alaQoSAppliedMapGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 26, 1, 4), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedMapGroupStatus.setStatus('current')
alaQoSActionTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27), )
if mibBuilder.loadTexts: alaQoSActionTable.setStatus('current')
alaQoSActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSActionName"))
if mibBuilder.loadTexts: alaQoSActionEntry.setStatus('current')
alaQoSActionName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSActionName.setStatus('current')
alaQoSActionSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionSource.setStatus('current')
alaQoSActionDisposition = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("drop", 2), ("deny", 3))).clone('accept')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionDisposition.setStatus('current')
alaQoSActionDropAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tail", 1), ("wred", 2))).clone('tail')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionDropAlgorithm.setStatus('current')
alaQoSActionWredMaximumThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionWredMaximumThreshold.setStatus('current')
alaQoSActionWredMaximumThresholdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionWredMaximumThresholdStatus.setStatus('current')
alaQoSActionWredMinimumThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionWredMinimumThreshold.setStatus('current')
alaQoSActionWredMinimumThresholdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionWredMinimumThresholdStatus.setStatus('current')
alaQoSActionWredMaximumProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionWredMaximumProbability.setStatus('current')
alaQoSActionWredMaximumProbabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionWredMaximumProbabilityStatus.setStatus('current')
alaQoSActionMinimumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMinimumBandwidth.setStatus('current')
alaQoSActionMinimumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMinimumBandwidthStatus.setStatus('current')
alaQoSActionMaximumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMaximumBandwidth.setStatus('current')
alaQoSActionMaximumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMaximumBandwidthStatus.setStatus('current')
alaQoSActionPeakBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPeakBandwidth.setStatus('current')
alaQoSActionPeakBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPeakBandwidthStatus.setStatus('current')
alaQoSActionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPriority.setStatus('current')
alaQoSActionPriorityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPriorityStatus.setStatus('current')
alaQoSActionShared = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionShared.setStatus('current')
alaQoSActionJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 20), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionJitter.setStatus('current')
alaQoSActionJitterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionJitterStatus.setStatus('current')
alaQoSActionLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 22), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionLatency.setStatus('current')
alaQoSActionLatencyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionLatencyStatus.setStatus('current')
alaQoSActionMaximumDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 24), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMaximumDepth.setStatus('current')
alaQoSActionMaximumDepthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMaximumDepthStatus.setStatus('current')
alaQoSActionMaximumBuffers = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMaximumBuffers.setStatus('current')
alaQoSActionMaximumBuffersStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMaximumBuffersStatus.setStatus('current')
alaQoSAction8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAction8021p.setStatus('current')
alaQoSAction8021pStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAction8021pStatus.setStatus('current')
alaQoSActionTos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionTos.setStatus('current')
alaQoSActionTosStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionTosStatus.setStatus('current')
alaQoSActionDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionDscp.setStatus('current')
alaQoSActionDscpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionDscpStatus.setStatus('current')
alaQoSActionMapFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("b8021p", 1), ("tos", 2), ("dscp", 3))).clone('b8021p')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMapFrom.setStatus('current')
alaQoSActionMapTo = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("b8021p", 1), ("tos", 2), ("dscp", 3))).clone('b8021p')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMapTo.setStatus('current')
alaQoSActionMapGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMapGroup.setStatus('current')
alaQoSActionMapGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMapGroupStatus.setStatus('current')
alaQoSActionSourceRewriteIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 38), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionSourceRewriteIpAddr.setStatus('current')
alaQoSActionSourceRewriteIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionSourceRewriteIpAddrStatus.setStatus('current')
alaQoSActionSourceRewriteIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 40), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionSourceRewriteIpMask.setStatus('current')
alaQoSActionSourceRewriteNetworkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionSourceRewriteNetworkGroup.setStatus('current')
alaQoSActionSourceRewriteNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionSourceRewriteNetworkGroupStatus.setStatus('current')
alaQoSActionDestinationRewriteIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 43), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionDestinationRewriteIpAddr.setStatus('current')
alaQoSActionDestinationRewriteIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionDestinationRewriteIpAddrStatus.setStatus('current')
alaQoSActionDestinationRewriteIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 45), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionDestinationRewriteIpMask.setStatus('current')
alaQoSActionDestinationRewriteNetworkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionDestinationRewriteNetworkGroup.setStatus('current')
alaQoSActionDestinationRewriteNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionDestinationRewriteNetworkGroupStatus.setStatus('current')
alaQoSActionLoadBalanceGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 48), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionLoadBalanceGroup.setStatus('current')
alaQoSActionLoadBalanceGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionLoadBalanceGroupStatus.setStatus('current')
alaQoSActionPermanentGatewayIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 50), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPermanentGatewayIpAddr.setStatus('current')
alaQoSActionPermanentGatewayIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPermanentGatewayIpAddrStatus.setStatus('current')
alaQoSActionAlternateGatewayIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 52), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionAlternateGatewayIpAddr.setStatus('current')
alaQoSActionAlternateGatewayIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionAlternateGatewayIpAddrStatus.setStatus('current')
alaQoSActionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 54), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRowStatus.setStatus('current')
alaQoSActionMinimumDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 55), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMinimumDepth.setStatus('current')
alaQoSActionMinimumDepthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMinimumDepthStatus.setStatus('current')
alaQoSActionVPNAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("protect", 1), ("bypass", 2), ("drop", 3))).clone('bypass')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionVPNAccess.setStatus('current')
alaQoSActionNocache = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionNocache.setStatus('current')
alaQoSActionPortdisable = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPortdisable.setStatus('current')
alaQoSActionRedirectSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRedirectSlot.setStatus('current')
alaQoSActionRedirectSlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRedirectSlotStatus.setStatus('current')
alaQoSActionRedirectPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRedirectPort.setStatus('current')
alaQoSActionRedirectAgg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRedirectAgg.setStatus('current')
alaQoSActionRedirectAggStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRedirectAggStatus.setStatus('current')
alaQoSActionMirrorSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 65), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMirrorSlot.setStatus('current')
alaQoSActionMirrorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 66), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMirrorPort.setStatus('current')
alaQoSActionMirrorMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ingress", 1), ("egress", 2), ("both", 3))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMirrorMode.setStatus('current')
alaQoSActionMirrorModeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMirrorModeStatus.setStatus('current')
alaQoSActionCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 69), Integer32()).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionCIR.setStatus('current')
alaQoSActionCIRStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionCIRStatus.setStatus('current')
alaQoSActionCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 71), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147450880))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionCBS.setStatus('current')
alaQoSActionCBSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 72), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionCBSStatus.setStatus('current')
alaQoSActionPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 73), Integer32()).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPIR.setStatus('current')
alaQoSActionPIRStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPIRStatus.setStatus('current')
alaQoSActionPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 75), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147450880))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPBS.setStatus('current')
alaQoSActionPBSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 76), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPBSStatus.setStatus('current')
alaQoSActionCounterColor = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 77), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("rednonred", 1), ("greennongreen", 2), ("greenred", 3), ("greenyellow", 4), ("redyellow", 5))).clone('redyellow')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionCounterColor.setStatus('current')
alaQoSAppliedActionTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28), )
if mibBuilder.loadTexts: alaQoSAppliedActionTable.setStatus('current')
alaQoSAppliedActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionName"))
if mibBuilder.loadTexts: alaQoSAppliedActionEntry.setStatus('current')
alaQoSAppliedActionName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedActionName.setStatus('current')
alaQoSAppliedActionSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionSource.setStatus('current')
alaQoSAppliedActionDisposition = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("drop", 2), ("deny", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionDisposition.setStatus('current')
alaQoSAppliedActionDropAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tail", 1), ("wred", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionDropAlgorithm.setStatus('current')
alaQoSAppliedActionWredMaximumThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionWredMaximumThreshold.setStatus('current')
alaQoSAppliedActionWredMaximumThresholdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionWredMaximumThresholdStatus.setStatus('current')
alaQoSAppliedActionWredMinimumThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionWredMinimumThreshold.setStatus('current')
alaQoSAppliedActionWredMinimumThresholdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionWredMinimumThresholdStatus.setStatus('current')
alaQoSAppliedActionWredMaximumProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionWredMaximumProbability.setStatus('current')
alaQoSAppliedActionWredMaximumProbabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionWredMaximumProbabilityStatus.setStatus('current')
alaQoSAppliedActionMinimumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMinimumBandwidth.setStatus('current')
alaQoSAppliedActionMinimumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMinimumBandwidthStatus.setStatus('current')
alaQoSAppliedActionMaximumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMaximumBandwidth.setStatus('current')
alaQoSAppliedActionMaximumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMaximumBandwidthStatus.setStatus('current')
alaQoSAppliedActionPeakBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionPeakBandwidth.setStatus('current')
alaQoSAppliedActionPeakBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionPeakBandwidthStatus.setStatus('current')
alaQoSAppliedActionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionPriority.setStatus('current')
alaQoSAppliedActionPriorityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionPriorityStatus.setStatus('current')
alaQoSAppliedActionShared = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionShared.setStatus('current')
alaQoSAppliedActionJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionJitter.setStatus('current')
alaQoSAppliedActionJitterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionJitterStatus.setStatus('current')
alaQoSAppliedActionLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionLatency.setStatus('current')
alaQoSAppliedActionLatencyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionLatencyStatus.setStatus('current')
alaQoSAppliedActionMaximumDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMaximumDepth.setStatus('current')
alaQoSAppliedActionMaximumDepthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMaximumDepthStatus.setStatus('current')
alaQoSAppliedActionMaximumBuffers = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMaximumBuffers.setStatus('current')
alaQoSAppliedActionMaximumBuffersStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMaximumBuffersStatus.setStatus('current')
alaQoSAppliedAction8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedAction8021p.setStatus('current')
alaQoSAppliedAction8021pStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedAction8021pStatus.setStatus('current')
alaQoSAppliedActionTos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionTos.setStatus('current')
alaQoSAppliedActionTosStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionTosStatus.setStatus('current')
alaQoSAppliedActionDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionDscp.setStatus('current')
alaQoSAppliedActionDscpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionDscpStatus.setStatus('current')
alaQoSAppliedActionMapFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("b8021p", 1), ("tos", 2), ("dscp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMapFrom.setStatus('current')
alaQoSAppliedActionMapTo = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("b8021p", 1), ("tos", 2), ("dscp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMapTo.setStatus('current')
alaQoSAppliedActionMapGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMapGroup.setStatus('current')
alaQoSAppliedActionMapGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMapGroupStatus.setStatus('current')
alaQoSAppliedActionSourceRewriteIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 38), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionSourceRewriteIpAddr.setStatus('current')
alaQoSAppliedActionSourceRewriteIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionSourceRewriteIpAddrStatus.setStatus('current')
alaQoSAppliedActionSourceRewriteIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 40), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionSourceRewriteIpMask.setStatus('current')
alaQoSAppliedActionSourceRewriteNetworkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionSourceRewriteNetworkGroup.setStatus('current')
alaQoSAppliedActionSourceRewriteNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionSourceRewriteNetworkGroupStatus.setStatus('current')
alaQoSAppliedActionDestinationRewriteIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 43), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionDestinationRewriteIpAddr.setStatus('current')
alaQoSAppliedActionDestinationRewriteIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionDestinationRewriteIpAddrStatus.setStatus('current')
alaQoSAppliedActionDestinationRewriteIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 45), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionDestinationRewriteIpMask.setStatus('current')
alaQoSAppliedActionDestinationRewriteNetworkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionDestinationRewriteNetworkGroup.setStatus('current')
alaQoSAppliedActionDestinationRewriteNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionDestinationRewriteNetworkGroupStatus.setStatus('current')
alaQoSAppliedActionLoadBalanceGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 48), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionLoadBalanceGroup.setStatus('current')
alaQoSAppliedActionLoadBalanceGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionLoadBalanceGroupStatus.setStatus('current')
alaQoSAppliedActionPermanentGatewayIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 50), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionPermanentGatewayIpAddr.setStatus('current')
alaQoSAppliedActionPermanentGatewayIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionPermanentGatewayIpAddrStatus.setStatus('current')
alaQoSAppliedActionAlternateGatewayIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 52), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionAlternateGatewayIpAddr.setStatus('current')
alaQoSAppliedActionAlternateGatewayIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionAlternateGatewayIpAddrStatus.setStatus('current')
alaQoSAppliedActionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 54), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionRowStatus.setStatus('current')
alaQoSAppliedActionMinimumDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMinimumDepth.setStatus('current')
alaQoSAppliedActionMinimumDepthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMinimumDepthStatus.setStatus('current')
alaQoSAppliedActionVPNAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("protect", 1), ("bypass", 2), ("drop", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionVPNAccess.setStatus('current')
alaQoSAppliedActionNocache = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionNocache.setStatus('current')
alaQoSAppliedActionPortdisable = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionPortdisable.setStatus('current')
alaQoSAppliedActionRedirectSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionRedirectSlot.setStatus('current')
alaQoSAppliedActionRedirectSlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionRedirectSlotStatus.setStatus('current')
alaQoSAppliedActionRedirectPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionRedirectPort.setStatus('current')
alaQoSAppliedActionRedirectAgg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionRedirectAgg.setStatus('current')
alaQoSAppliedActionRedirectAggStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionRedirectAggStatus.setStatus('current')
alaQoSAppliedActionMirrorSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 65), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMirrorSlot.setStatus('current')
alaQoSAppliedActionMirrorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 66), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMirrorPort.setStatus('current')
alaQoSAppliedActionMirrorMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ingress", 1), ("egress", 2), ("both", 3))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMirrorMode.setStatus('current')
alaQoSAppliedActionMirrorModeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMirrorModeStatus.setStatus('current')
alaQoSAppliedActionCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 69), Integer32()).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionCIR.setStatus('current')
alaQoSAppliedActionCIRStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionCIRStatus.setStatus('current')
alaQoSAppliedActionCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 71), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147450880))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionCBS.setStatus('current')
alaQoSAppliedActionCBSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 72), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionCBSStatus.setStatus('current')
alaQoSAppliedActionPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 73), Integer32()).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionPIR.setStatus('current')
alaQoSAppliedActionPIRStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionPIRStatus.setStatus('current')
alaQoSAppliedActionPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 75), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147450880))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionPBS.setStatus('current')
alaQoSAppliedActionPBSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 76), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionPBSStatus.setStatus('current')
alaQoSAppliedActionCounterColor = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 77), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("rednonred", 1), ("greennongreen", 2), ("greenred", 3), ("greenyellow", 4), ("redyellow", 5))).clone('redyellow')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionCounterColor.setStatus('current')
alaQoSPortTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29), )
if mibBuilder.loadTexts: alaQoSPortTable.setStatus('current')
alaQoSPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortSlot"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortPort"))
if mibBuilder.loadTexts: alaQoSPortEntry.setStatus('current')
alaQoSPortSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)))
if mibBuilder.loadTexts: alaQoSPortSlot.setStatus('current')
alaQoSPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 52)))
if mibBuilder.loadTexts: alaQoSPortPort.setStatus('current')
alaQoSPortEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortEnabled.setStatus('current')
alaQoSPortAppliedEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortAppliedEnabled.setStatus('current')
alaQoSPortInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ethernet", 1), ("wan", 2), ("ethernet10", 3), ("ethernet100", 4), ("ethernet1G", 5), ("ethernet10G", 6), ("aggregate", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortInterfaceType.setStatus('current')
alaQoSPortTrusted = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortTrusted.setStatus('current')
alaQoSPortDefault8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortDefault8021p.setStatus('current')
alaQoSPortDefaultDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortDefaultDSCP.setStatus('current')
alaQoSPortMaximumReservedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumReservedBandwidth.setStatus('current')
alaQoSPortMaximumReservedBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumReservedBandwidthStatus.setStatus('current')
alaQoSPortAppliedMaximumReservedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortAppliedMaximumReservedBandwidth.setStatus('current')
alaQoSPortAppliedMaximumReservedBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortAppliedMaximumReservedBandwidthStatus.setStatus('current')
alaQoSPortMaximumSignalledBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumSignalledBandwidth.setStatus('current')
alaQoSPortMaximumSignalledBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumSignalledBandwidthStatus.setStatus('current')
alaQoSPortAppliedMaximumSignalledBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortAppliedMaximumSignalledBandwidth.setStatus('current')
alaQoSPortAppliedMaximumSignalledBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortAppliedMaximumSignalledBandwidthStatus.setStatus('current')
alaQoSPortDefaultQueues = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 8)).clone(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortDefaultQueues.setStatus('current')
alaQoSPortAppliedDefaultQueues = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortAppliedDefaultQueues.setStatus('current')
alaQoSPortMaximumDefaultBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 19), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumDefaultBandwidth.setStatus('current')
alaQoSPortMaximumDefaultBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumDefaultBandwidthStatus.setStatus('current')
alaQoSPortAppliedMaximumDefaultBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortAppliedMaximumDefaultBandwidth.setStatus('current')
alaQoSPortAppliedMaximumDefaultBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortAppliedMaximumDefaultBandwidthStatus.setStatus('current')
alaQoSPortMaximumDefaultDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 23), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumDefaultDepth.setStatus('current')
alaQoSPortMaximumDefaultDepthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumDefaultDepthStatus.setStatus('current')
alaQoSPortAppliedMaximumDefaultDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortAppliedMaximumDefaultDepth.setStatus('current')
alaQoSPortAppliedMaximumDefaultDepthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortAppliedMaximumDefaultDepthStatus.setStatus('current')
alaQoSPortMaximumDefaultBuffers = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 27), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumDefaultBuffers.setStatus('current')
alaQoSPortMaximumDefaultBuffersStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumDefaultBuffersStatus.setStatus('current')
alaQoSPortAppliedMaximumDefaultBuffers = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortAppliedMaximumDefaultBuffers.setStatus('current')
alaQoSPortAppliedMaximumDefaultBuffersStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortAppliedMaximumDefaultBuffersStatus.setStatus('current')
alaQoSPortReset = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortReset.setStatus('current')
alaQoSPortPhysicalBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortPhysicalBandwidth.setStatus('current')
alaQoSPortReservedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortReservedBandwidth.setStatus('current')
alaQoSPortSignalledBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortSignalledBandwidth.setStatus('current')
alaQoSPortCurrentBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortCurrentBandwidth.setStatus('current')
alaQoSPortDefaultQidLow = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortDefaultQidLow.setStatus('current')
alaQoSPortDefaultQidMedium = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortDefaultQidMedium.setStatus('current')
alaQoSPortDefaultQidHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortDefaultQidHigh.setStatus('current')
alaQoSPortDefaultQidUrgent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortDefaultQidUrgent.setStatus('current')
alaQoSPortFloodQid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFloodQid.setStatus('current')
alaQoSPortQueues = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortQueues.setStatus('current')
alaQoSPortQueuesCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortQueuesCreated.setStatus('current')
alaQoSPortQueuesFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortQueuesFailed.setStatus('current')
alaQoSPortQueuesPreempted = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortQueuesPreempted.setStatus('current')
alaQoSPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 45), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortRowStatus.setStatus('current')
alaQoSPortFirPrio0EnqBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio0EnqBytes.setStatus('current')
alaQoSPortFirPrio0DeqBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio0DeqBytes.setStatus('current')
alaQoSPortFirPrio0EnqPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio0EnqPkts.setStatus('current')
alaQoSPortFirPrio0DeqPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio0DeqPkts.setStatus('current')
alaQoSPortFirPrio0QidDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio0QidDiscardPkts.setStatus('current')
alaQoSPortFirPrio0WredDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio0WredDiscardPkts.setStatus('current')
alaQoSPortFirPrio0OverflowDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio0OverflowDiscardPkts.setStatus('current')
alaQoSPortFirPrio1EnqBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio1EnqBytes.setStatus('current')
alaQoSPortFirPrio1DeqBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio1DeqBytes.setStatus('current')
alaQoSPortFirPrio1EnqPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio1EnqPkts.setStatus('current')
alaQoSPortFirPrio1DeqPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio1DeqPkts.setStatus('current')
alaQoSPortFirPrio1QidDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio1QidDiscardPkts.setStatus('current')
alaQoSPortFirPrio1WredDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio1WredDiscardPkts.setStatus('current')
alaQoSPortFirPrio1OverflowDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio1OverflowDiscardPkts.setStatus('current')
alaQoSPortFirPrio2EnqBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio2EnqBytes.setStatus('current')
alaQoSPortFirPrio2DeqBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio2DeqBytes.setStatus('current')
alaQoSPortFirPrio2EnqPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio2EnqPkts.setStatus('current')
alaQoSPortFirPrio2DeqPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio2DeqPkts.setStatus('current')
alaQoSPortFirPrio2QidDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 64), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio2QidDiscardPkts.setStatus('current')
alaQoSPortFirPrio2WredDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 65), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio2WredDiscardPkts.setStatus('current')
alaQoSPortFirPrio2OverflowDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 66), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio2OverflowDiscardPkts.setStatus('current')
alaQoSPortFirPrio3EnqBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 67), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio3EnqBytes.setStatus('current')
alaQoSPortFirPrio3DeqBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 68), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio3DeqBytes.setStatus('current')
alaQoSPortFirPrio3EnqPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 69), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio3EnqPkts.setStatus('current')
alaQoSPortFirPrio3DeqPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 70), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio3DeqPkts.setStatus('current')
alaQoSPortFirPrio3QidDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 71), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio3QidDiscardPkts.setStatus('current')
alaQoSPortFirPrio3WredDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 72), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio3WredDiscardPkts.setStatus('current')
alaQoSPortFirPrio3OverflowDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 73), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFirPrio3OverflowDiscardPkts.setStatus('current')
alaQoSPortDefaultClassification = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("b8021p", 1), ("tos", 2), ("dscp", 3))).clone('tos')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortDefaultClassification.setStatus('current')
alaQoSPortLowPriorityWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 75), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortLowPriorityWeight.setStatus('current')
alaQoSPortMediumPriorityWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 76), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMediumPriorityWeight.setStatus('current')
alaQoSPortHighPriorityWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 77), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortHighPriorityWeight.setStatus('current')
alaQoSPortUrgentPriorityWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 78), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortUrgentPriorityWeight.setStatus('current')
alaQoSPortMaximumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 79), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumBandwidth.setStatus('current')
alaQoSPortMaximumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 80), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumBandwidthStatus.setStatus('current')
alaQoSPortEnqueuingThresholdP0Lower = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 81), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortEnqueuingThresholdP0Lower.setStatus('current')
alaQoSPortEnqueuingThresholdP0Upper = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 82), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(30)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortEnqueuingThresholdP0Upper.setStatus('current')
alaQoSPortEnqueuingThresholdP1Lower = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 83), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortEnqueuingThresholdP1Lower.setStatus('current')
alaQoSPortEnqueuingThresholdP1Upper = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 84), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(35)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortEnqueuingThresholdP1Upper.setStatus('current')
alaQoSPortEnqueuingThresholdP2Lower = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 85), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortEnqueuingThresholdP2Lower.setStatus('current')
alaQoSPortEnqueuingThresholdP2Upper = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 86), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(40)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortEnqueuingThresholdP2Upper.setStatus('current')
alaQoSPortEnqueuingThresholdP3Lower = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 87), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(260)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortEnqueuingThresholdP3Lower.setStatus('current')
alaQoSPortEnqueuingThresholdP3Upper = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 88), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(575)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortEnqueuingThresholdP3Upper.setStatus('current')
alaQoSPortEnqueuingThresholdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 89), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortEnqueuingThresholdStatus.setStatus('current')
alaQoSPortHighDensity = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 90), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortHighDensity.setStatus('current')
alaQoSPortServicingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 91), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("default", 0), ("strictpriority", 1), ("prioritywrr", 2), ("wrr", 3), ("drr", 4))).clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortServicingMode.setStatus('current')
alaQoSPortFreeFFPRules = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 92), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFreeFFPRules.setStatus('current')
alaQoSPortUsedFFPRules = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 93), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortUsedFFPRules.setStatus('current')
alaQoSPortFreeFFPMasks = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 94), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortFreeFFPMasks.setStatus('current')
alaQoSPortUsedFFPMasks = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 95), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortUsedFFPMasks.setStatus('current')
alaQoSPortSpoofedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 96), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortSpoofedCount.setStatus('current')
alaQoSPortNonSpoofedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 97), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortNonSpoofedCount.setStatus('current')
alaQoSPortQ4PriorityWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 98), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortQ4PriorityWeight.setStatus('current')
alaQoSPortQ5PriorityWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 99), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortQ5PriorityWeight.setStatus('current')
alaQoSPortQ6PriorityWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 100), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortQ6PriorityWeight.setStatus('current')
alaQoSPortQ7PriorityWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 101), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortQ7PriorityWeight.setStatus('current')
alaQoSPortCOS0MaximumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 102), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS0MaximumBandwidth.setStatus('current')
alaQoSPortCOS0MaximumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 103), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS0MaximumBandwidthStatus.setStatus('current')
alaQoSPortCOS1MaximumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 104), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS1MaximumBandwidth.setStatus('current')
alaQoSPortCOS1MaximumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 105), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS1MaximumBandwidthStatus.setStatus('current')
alaQoSPortCOS2MaximumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 106), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS2MaximumBandwidth.setStatus('current')
alaQoSPortCOS2MaximumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 107), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS2MaximumBandwidthStatus.setStatus('current')
alaQoSPortCOS3MaximumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 108), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS3MaximumBandwidth.setStatus('current')
alaQoSPortCOS3MaximumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 109), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS3MaximumBandwidthStatus.setStatus('current')
alaQoSPortCOS4MaximumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 110), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS4MaximumBandwidth.setStatus('current')
alaQoSPortCOS4MaximumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 111), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS4MaximumBandwidthStatus.setStatus('current')
alaQoSPortCOS5MaximumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 112), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS5MaximumBandwidth.setStatus('current')
alaQoSPortCOS5MaximumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 113), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS5MaximumBandwidthStatus.setStatus('current')
alaQoSPortCOS6MaximumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 114), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS6MaximumBandwidth.setStatus('current')
alaQoSPortCOS6MaximumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 115), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS6MaximumBandwidthStatus.setStatus('current')
alaQoSPortCOS7MaximumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 116), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS7MaximumBandwidth.setStatus('current')
alaQoSPortCOS7MaximumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 117), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS7MaximumBandwidthStatus.setStatus('current')
alaQoSPortCOS0MinimumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 118), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS0MinimumBandwidth.setStatus('current')
alaQoSPortCOS0MinimumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 119), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS0MinimumBandwidthStatus.setStatus('current')
alaQoSPortCOS1MinimumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 120), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS1MinimumBandwidth.setStatus('current')
alaQoSPortCOS1MinimumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 121), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS1MinimumBandwidthStatus.setStatus('current')
alaQoSPortCOS2MinimumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 122), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS2MinimumBandwidth.setStatus('current')
alaQoSPortCOS2MinimumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 123), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS2MinimumBandwidthStatus.setStatus('current')
alaQoSPortCOS3MinimumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 124), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS3MinimumBandwidth.setStatus('current')
alaQoSPortCOS3MinimumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 125), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS3MinimumBandwidthStatus.setStatus('current')
alaQoSPortCOS4MinimumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 126), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS4MinimumBandwidth.setStatus('current')
alaQoSPortCOS4MinimumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 127), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS4MinimumBandwidthStatus.setStatus('current')
alaQoSPortCOS5MinimumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 128), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS5MinimumBandwidth.setStatus('current')
alaQoSPortCOS5MinimumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 129), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS5MinimumBandwidthStatus.setStatus('current')
alaQoSPortCOS6MinimumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 130), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS6MinimumBandwidth.setStatus('current')
alaQoSPortCOS6MinimumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 131), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS6MinimumBandwidthStatus.setStatus('current')
alaQoSPortCOS7MinimumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 132), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS7MinimumBandwidth.setStatus('current')
alaQoSPortCOS7MinimumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 133), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortCOS7MinimumBandwidthStatus.setStatus('current')
alaQoSPortMaximumIngBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 134), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumIngBandwidth.setStatus('current')
alaQoSPortMaximumIngBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 135), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumIngBandwidthStatus.setStatus('current')
alaQoSPortDEIMarking = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 136), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortDEIMarking.setStatus('current')
alaQoSPortMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 137), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMonitor.setStatus('current')
alaQoSPortDEIMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 138), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortDEIMapping.setStatus('current')
alaQoSConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30))
alaQoSConfigEnabled = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigEnabled.setStatus('current')
alaQoSConfigDefaultQueues = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigDefaultQueues.setStatus('current')
alaQoSConfigAppliedDefaultQueues = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSConfigAppliedDefaultQueues.setStatus('current')
alaQoSConfigTrustPorts = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigTrustPorts.setStatus('current')
alaQoSConfigFlowTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigFlowTimeout.setStatus('current')
alaQoSConfigAppliedFlowTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 3600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSConfigAppliedFlowTimeout.setStatus('current')
alaQoSConfigFragmentTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigFragmentTimeout.setStatus('current')
alaQoSConfigAppliedFragmentTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSConfigAppliedFragmentTimeout.setStatus('current')
alaQoSConfigReflexiveTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigReflexiveTimeout.setStatus('current')
alaQoSConfigAppliedReflfexiveTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSConfigAppliedReflfexiveTimeout.setStatus('current')
alaQoSConfigNatTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 200000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigNatTimeout.setStatus('current')
alaQoSConfigAppliedNatTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 200000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSConfigAppliedNatTimeout.setStatus('current')
alaQoSConfigClassifyl3Bridged = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigClassifyl3Bridged.setStatus('current')
alaQoSConfigAppliedClassifyl3Bridged = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSConfigAppliedClassifyl3Bridged.setStatus('current')
alaQoSConfigClassifyFragments = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigClassifyFragments.setStatus('current')
alaQoSConfigAppliedClassifyFragments = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSConfigAppliedClassifyFragments.setStatus('current')
alaQoSConfigDefaultBridgedDisposition = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("drop", 2), ("deny", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigDefaultBridgedDisposition.setStatus('current')
alaQoSConfigAppliedDefaultBridgedDisposition = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("drop", 2), ("deny", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSConfigAppliedDefaultBridgedDisposition.setStatus('current')
alaQoSConfigDefaultRoutedDisposition = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("drop", 2), ("deny", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigDefaultRoutedDisposition.setStatus('current')
alaQoSConfigAppliedDefaultRoutedDisposition = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("drop", 2), ("deny", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSConfigAppliedDefaultRoutedDisposition.setStatus('current')
alaQoSConfigDefaultMulticastDisposition = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("drop", 2), ("deny", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigDefaultMulticastDisposition.setStatus('current')
alaQoSConfigAppliedDefaultMulticastDisposition = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("drop", 2), ("deny", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSConfigAppliedDefaultMulticastDisposition.setStatus('current')
alaQoSConfigStatsInterval = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigStatsInterval.setStatus('current')
alaQoSConfigLogLines = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigLogLines.setStatus('current')
alaQoSConfigLogLevel = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigLogLevel.setStatus('current')
alaQoSConfigLogConsole = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigLogConsole.setStatus('current')
alaQoSConfigForwardLog = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigForwardLog.setStatus('current')
alaQoSConfigClearLog = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigClearLog.setStatus('current')
alaQoSConfigApply = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigApply.setStatus('current')
alaQoSConfigRevert = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigRevert.setStatus('current')
alaQoSConfigReset = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigReset.setStatus('current')
alaQoSConfigStatsReset = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigStatsReset.setStatus('current')
alaQoSConfigFlush = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigFlush.setStatus('current')
alaQoSConfigDebug = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigDebug.setStatus('current')
alaQoSConfigServicingMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("strictpriority", 1), ("prioritywrr", 2), ("wrr", 3), ("drr", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConfigServicingMode.setStatus('current')
alaQoSConfigLowPriorityWeight = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConfigLowPriorityWeight.setStatus('current')
alaQoSConfigMediumPriorityWeight = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConfigMediumPriorityWeight.setStatus('current')
alaQoSConfigHighPriorityWeight = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConfigHighPriorityWeight.setStatus('current')
alaQoSConfigUrgentPriorityWeight = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConfigUrgentPriorityWeight.setStatus('current')
alaQoSConfigQ4PriorityWeight = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConfigQ4PriorityWeight.setStatus('current')
alaQoSConfigQ5PriorityWeight = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConfigQ5PriorityWeight.setStatus('current')
alaQoSConfigQ6PriorityWeight = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConfigQ6PriorityWeight.setStatus('current')
alaQoSConfigQ7PriorityWeight = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConfigQ7PriorityWeight.setStatus('current')
alaQoSConfigUserportFilter = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 44), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConfigUserportFilter.setStatus('current')
alaQoSConfigAppliedUserportFilter = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSConfigAppliedUserportFilter.setStatus('current')
alaQoSConfigUserportShutdown = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 46), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConfigUserportShutdown.setStatus('current')
alaQoSConfigAppliedUserportShutdown = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSConfigAppliedUserportShutdown.setStatus('current')
alaQoSConfigAutoNMS = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigAutoNMS.setStatus('current')
alaQoSConfigAutoPhones = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("pri0", 0), ("pri1", 1), ("pri2", 2), ("pri3", 3), ("pri4", 4), ("pri5", 5), ("pri6", 6), ("pri7", 7), ("trusted", 8), ("disable", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigAutoPhones.setStatus('current')
alaQoSConfigQMPage = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigQMPage.setStatus('current')
alaQoSConfigQMMACGroup = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 51), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigQMMACGroup.setStatus('current')
alaQoSConfigQMPath = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 52), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigQMPath.setStatus('current')
alaQoSConfigDEIMapping = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConfigDEIMapping.setStatus('current')
alaQoSConfigDEIMarking = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConfigDEIMarking.setStatus('current')
alaQoSConfigStatsResetEgress = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigStatsResetEgress.setStatus('current')
alaQoSQueueTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32), )
if mibBuilder.loadTexts: alaQoSQueueTable.setStatus('current')
alaQoSQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSQueueId"))
if mibBuilder.loadTexts: alaQoSQueueEntry.setStatus('current')
alaQoSQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 1), Integer32())
if mibBuilder.loadTexts: alaQoSQueueId.setStatus('current')
alaQoSQueueSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueueSlot.setStatus('current')
alaQoSQueuePort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueuePort.setStatus('current')
alaQoSQueuePortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueuePortId.setStatus('current')
alaQoSQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("mammoth", 1), ("priority", 2), ("spwrr", 3), ("wrr", 4), ("drr", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueueType.setStatus('current')
alaQoSQueuePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueuePriority.setStatus('current')
alaQoSQueueMinimumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueueMinimumBandwidth.setStatus('current')
alaQoSQueueMaximumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueueMaximumBandwidth.setStatus('current')
alaQoSQueueAverageBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueueAverageBandwidth.setStatus('current')
alaQoSQueueMinimumDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueueMinimumDepth.setStatus('current')
alaQoSQueueMaximumDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueueMaximumDepth.setStatus('current')
alaQoSQueueMaximumBuffers = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueueMaximumBuffers.setStatus('current')
alaQoSQueue8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueue8021p.setStatus('current')
alaQoSQueuePacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueuePacketsSent.setStatus('current')
alaQoSQueuePacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueuePacketsDropped.setStatus('current')
alaQoSQueueMaxLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueueMaxLength.setStatus('current')
alaQoSQueueAverageLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueueAverageLength.setStatus('current')
alaQoSQueueCurrentLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueueCurrentLength.setStatus('current')
alaQoSQueueAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSQueueAction.setStatus('current')
alaQoSStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31))
alaQoSStatsL2Events = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsL2Events.setStatus('current')
alaQoSStatsL2Matches = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsL2Matches.setStatus('current')
alaQoSStatsL2Drops = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsL2Drops.setStatus('current')
alaQoSStatsL3IngressEvents = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsL3IngressEvents.setStatus('current')
alaQoSStatsL3IngressMatches = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsL3IngressMatches.setStatus('current')
alaQoSStatsL3IngressDrops = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsL3IngressDrops.setStatus('current')
alaQoSStatsL3EgressEvents = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsL3EgressEvents.setStatus('current')
alaQoSStatsL3EgressMatches = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsL3EgressMatches.setStatus('current')
alaQoSStatsL3EgressDrops = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsL3EgressDrops.setStatus('current')
alaQoSStatsMulticastEvents = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsMulticastEvents.setStatus('current')
alaQoSStatsMulticastMatches = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsMulticastMatches.setStatus('current')
alaQoSStatsMulticastDrops = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsMulticastDrops.setStatus('current')
alaQoSStatsFragments = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsFragments.setStatus('current')
alaQoSStatsBadFragments = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsBadFragments.setStatus('current')
alaQoSStatsUnknownFragments = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsUnknownFragments.setStatus('current')
alaQoSStatsReflexiveFlows = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsReflexiveFlows.setStatus('current')
alaQoSStatsReflexiveCorrections = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsReflexiveCorrections.setStatus('current')
alaQoSStatsLoadBalanceFlows = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsLoadBalanceFlows.setStatus('current')
alaQoSStatsClassifierMaxNodes = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsClassifierMaxNodes.setStatus('current')
alaQoSStatsClassifierMaxDepth = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsClassifierMaxDepth.setStatus('current')
alaQoSStatsFlowLookups = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsFlowLookups.setStatus('current')
alaQoSStatsFlowHits = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsFlowHits.setStatus('current')
alaQoSStatsSentNIMessages = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsSentNIMessages.setStatus('current')
alaQoSStatsReceivedNIMessages = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsReceivedNIMessages.setStatus('current')
alaQoSStatsFailedNIMessages = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsFailedNIMessages.setStatus('current')
alaQoSStatsSpoofedEvents = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsSpoofedEvents.setStatus('current')
alaQoSStatsNonSpoofedEvents = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsNonSpoofedEvents.setStatus('current')
alaQoSStatsDropServicesEvents = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsDropServicesEvents.setStatus('current')
alaQoSSlotTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33), )
if mibBuilder.loadTexts: alaQoSSlotTable.setStatus('current')
alaQoSSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSSlotSlot"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSSlotSlice"))
if mibBuilder.loadTexts: alaQoSSlotEntry.setStatus('current')
alaQoSSlotSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: alaQoSSlotSlot.setStatus('current')
alaQoSSlotSlice = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)))
if mibBuilder.loadTexts: alaQoSSlotSlice.setStatus('current')
alaQoSSlotType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("mammoth", 1), ("kodiak", 2), ("mailbox", 3), ("coronado", 4), ("ixe2424", 5), ("kite", 6), ("fuji", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotType.setStatus('current')
alaQoSSlotMaxBuffers = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotMaxBuffers.setStatus('current')
alaQoSSlotFreeBuffers1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotFreeBuffers1.setStatus('current')
alaQoSSlotFreeBuffers2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotFreeBuffers2.setStatus('current')
alaQoSSlotThreshold1Low = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotThreshold1Low.setStatus('current')
alaQoSSlotThreshold1Medium = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotThreshold1Medium.setStatus('current')
alaQoSSlotThreshold1High = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotThreshold1High.setStatus('current')
alaQoSSlotThreshold1Urgent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotThreshold1Urgent.setStatus('current')
alaQoSSlotThreshold2Low = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotThreshold2Low.setStatus('current')
alaQoSSlotThreshold2Medium = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotThreshold2Medium.setStatus('current')
alaQoSSlotThreshold2High = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotThreshold2High.setStatus('current')
alaQoSSlotThreshold2Urgent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotThreshold2Urgent.setStatus('current')
alaQoSSlotBuffersDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotBuffersDenied.setStatus('current')
alaQoSSlotBuffersDeniedAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotBuffersDeniedAverage.setStatus('current')
alaQoSSlotBuffersDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotBuffersDropped.setStatus('current')
alaQoSSlotBuffersDroppedAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotBuffersDroppedAverage.setStatus('current')
alaQoSSlotWredThresholdP0Lower = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotWredThresholdP0Lower.setStatus('current')
alaQoSSlotWredThresholdP0Upper = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotWredThresholdP0Upper.setStatus('current')
alaQoSSlotWredThresholdP1Lower = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotWredThresholdP1Lower.setStatus('current')
alaQoSSlotWredThresholdP1Upper = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotWredThresholdP1Upper.setStatus('current')
alaQoSSlotWredThresholdP2Lower = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotWredThresholdP2Lower.setStatus('current')
alaQoSSlotWredThresholdP2Upper = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotWredThresholdP2Upper.setStatus('current')
alaQoSSlotWredThresholdP3Lower = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotWredThresholdP3Lower.setStatus('current')
alaQoSSlotWredThresholdP3Upper = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotWredThresholdP3Upper.setStatus('current')
alaQoSSlotWredAverageCounterWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotWredAverageCounterWeight.setStatus('current')
alaQoSSlotWredThresholdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotWredThresholdStatus.setStatus('current')
alaQoSSlotCbqThresholdMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("prioritywrr", 1), ("wrr", 2), ("strictpriority", 3))).clone('prioritywrr')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotCbqThresholdMode.setStatus('current')
alaQoSSlotCbqThresholdP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotCbqThresholdP1.setStatus('current')
alaQoSSlotCbqThresholdP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotCbqThresholdP2.setStatus('current')
alaQoSSlotCbqThresholdP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotCbqThresholdP3.setStatus('current')
alaQoSSlotHighDensity = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotHighDensity.setStatus('current')
alaQoSClassify = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34))
alaQoSClassifyClassify = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("l2", 1), ("l3", 2), ("multicast", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifyClassify.setStatus('current')
alaQoSClassifyApplied = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifyApplied.setStatus('current')
alaQoSClassifySourceSlot = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifySourceSlot.setStatus('current')
alaQoSClassifySourcePort = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 52))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifySourcePort.setStatus('current')
alaQoSClassifySourceInterfaceType = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("any", 0), ("ethernet", 1), ("wan", 2), ("ethernet10", 3), ("ethernet100", 4), ("ethernet1G", 5), ("ethernet10G", 6), ("aggregate", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifySourceInterfaceType.setStatus('current')
alaQoSClassifyDestinationSlot = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifyDestinationSlot.setStatus('current')
alaQoSClassifyDestinationPort = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 52))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifyDestinationPort.setStatus('current')
alaQoSClassifyDestinationInterfaceType = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("any", 0), ("ethernet", 1), ("wan", 2), ("ethernet10", 3), ("ethernet100", 4), ("ethernet1G", 5), ("ethernet10G", 6), ("aggregate", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifyDestinationInterfaceType.setStatus('current')
alaQoSClassifySourceMac = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 9), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifySourceMac.setStatus('current')
alaQoSClassifyDestinationMac = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 10), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifyDestinationMac.setStatus('current')
alaQoSClassifySourceVlan = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifySourceVlan.setStatus('current')
alaQoSClassifyDestinationVlan = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifyDestinationVlan.setStatus('current')
alaQoSClassify8021p = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassify8021p.setStatus('current')
alaQoSClassifySourceIp = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifySourceIp.setStatus('current')
alaQoSClassifyDestinationIp = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 15), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifyDestinationIp.setStatus('current')
alaQoSClassifyMulticastIp = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 16), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifyMulticastIp.setStatus('current')
alaQoSClassifyTos = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifyTos.setStatus('current')
alaQoSClassifyDscp = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifyDscp.setStatus('current')
alaQoSClassifyIpProtocol = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifyIpProtocol.setStatus('current')
alaQoSClassifySourceIpPort = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifySourceIpPort.setStatus('current')
alaQoSClassifyDestinationIpPort = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifyDestinationIpPort.setStatus('current')
alaQoSClassifyExecute = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSClassifyExecute.setStatus('current')
alaQoSClassifyL2SourceResultRule = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSClassifyL2SourceResultRule.setStatus('current')
alaQoSClassifyL2SourceResultDisposition = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("drop", 2), ("deny", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSClassifyL2SourceResultDisposition.setStatus('current')
alaQoSClassifyL2DestinationResultRule = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSClassifyL2DestinationResultRule.setStatus('current')
alaQoSClassifyL2DestinationResultDisposition = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("drop", 2), ("deny", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSClassifyL2DestinationResultDisposition.setStatus('current')
alaQoSClassifyL3ResultRule = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSClassifyL3ResultRule.setStatus('current')
alaQoSClassifyL3ResultDisposition = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("drop", 2), ("deny", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSClassifyL3ResultDisposition.setStatus('current')
alaQoSClassifyIGMPResultRule = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSClassifyIGMPResultRule.setStatus('current')
alaQoSClassifyIGMPResultDisposition = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("drop", 2), ("deny", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSClassifyIGMPResultDisposition.setStatus('current')
alaQoSClassifyMulticastResultRule = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSClassifyMulticastResultRule.setStatus('current')
alaQoSClassifyMulticastResultDisposition = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("drop", 2), ("deny", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSClassifyMulticastResultDisposition.setStatus('current')
alaQoSSlotProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 35), )
if mibBuilder.loadTexts: alaQoSSlotProtocolTable.setStatus('current')
alaQoSSlotProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 35, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSSlotSlot"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSSlotSlice"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSSlotProtocolId"))
if mibBuilder.loadTexts: alaQoSSlotProtocolEntry.setStatus('current')
alaQoSSlotProtocolId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 35, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("user1", 1), ("user2", 2), ("user3", 3), ("user4", 4), ("unknown", 5))))
if mibBuilder.loadTexts: alaQoSSlotProtocolId.setStatus('current')
alaQoSSlotProtocolEthertype = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 35, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotProtocolEthertype.setStatus('current')
alaQoSSlotProtocolDsap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 35, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotProtocolDsap.setStatus('current')
alaQoSSlotProtocolSsap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 35, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotProtocolSsap.setStatus('current')
alaQoSSlotProtocol8023Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 35, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotProtocol8023Enabled.setStatus('current')
alaQoSSlotProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 35, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("priority", 1), ("fallback", 2))).clone('fallback')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotProtocolType.setStatus('current')
alaQoSSlotProtocolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 35, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotProtocolRowStatus.setStatus('current')
alaQoSPortProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36), )
if mibBuilder.loadTexts: alaQoSPortProtocolTable.setStatus('current')
alaQoSPortProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortSlot"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortPort"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortProtocolId"))
if mibBuilder.loadTexts: alaQoSPortProtocolEntry.setStatus('current')
alaQoSPortProtocolId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("bpdu", 1), ("lcpsnap", 2), ("lcpeth", 3), ("ipv4", 4), ("arp", 5), ("rarp", 6), ("ipv6", 7), ("ipx", 8), ("apple", 9), ("sna", 10), ("decnet", 11), ("user1", 12), ("user2", 13), ("user3", 14), ("user4", 15))))
if mibBuilder.loadTexts: alaQoSPortProtocolId.setStatus('current')
alaQoSPortProtocolClassification = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("b8021p", 1), ("tos", 2), ("dscp", 3))).clone('b8021p')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortProtocolClassification.setStatus('current')
alaQoSPortProtocolPriorityP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortProtocolPriorityP0.setStatus('current')
alaQoSPortProtocolPriorityP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortProtocolPriorityP1.setStatus('current')
alaQoSPortProtocolPriorityP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortProtocolPriorityP2.setStatus('current')
alaQoSPortProtocolPriorityP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortProtocolPriorityP3.setStatus('current')
alaQoSPortProtocolPriorityP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortProtocolPriorityP4.setStatus('current')
alaQoSPortProtocolPriorityP5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortProtocolPriorityP5.setStatus('current')
alaQoSPortProtocolPriorityP6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortProtocolPriorityP6.setStatus('current')
alaQoSPortProtocolPriorityP7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortProtocolPriorityP7.setStatus('current')
alaQoSPortProtocolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortProtocolRowStatus.setStatus('current')
alaQoSSlotDscpTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 37), )
if mibBuilder.loadTexts: alaQoSSlotDscpTable.setStatus('current')
alaQoSSlotDscpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 37, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSSlotSlot"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSSlotSlice"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSSlotDscpIndex"))
if mibBuilder.loadTexts: alaQoSSlotDscpEntry.setStatus('current')
alaQoSSlotDscpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 37, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: alaQoSSlotDscpIndex.setStatus('current')
alaQoSSlotDscpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 37, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSSlotDscpPriority.setStatus('current')
alaQoSSlotPcamTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 38), )
if mibBuilder.loadTexts: alaQoSSlotPcamTable.setStatus('current')
alaQoSSlotPcamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 38, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSSlotSlot"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSSlotSlice"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSSlotPcamId"))
if mibBuilder.loadTexts: alaQoSSlotPcamEntry.setStatus('current')
alaQoSSlotPcamId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 38, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24)))
if mibBuilder.loadTexts: alaQoSSlotPcamId.setStatus('current')
alaQoSSlotPcamEthertype = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 38, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotPcamEthertype.setStatus('current')
alaQoSSlotPcamDsap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 38, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotPcamDsap.setStatus('current')
alaQoSSlotPcamSsap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 38, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotPcamSsap.setStatus('current')
alaQoSSlotPcam8023Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 38, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotPcam8023Enabled.setStatus('current')
alaQoSSlotPcamProtocolNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 38, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotPcamProtocolNumber.setStatus('current')
alaQoSSlotPcamEnableEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 38, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotPcamEnableEntry.setStatus('current')
alaQoSSlotPcamEnable8023 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 38, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotPcamEnable8023.setStatus('current')
alaQoSSlotPcamEnableDsap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 38, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotPcamEnableDsap.setStatus('current')
alaQoSSlotPcamEnableSsap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 38, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotPcamEnableSsap.setStatus('current')
alaQoSSlotPcamEnableEthertype = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 38, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSSlotPcamEnableEthertype.setStatus('current')
alaQoSPortPdiTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 39), )
if mibBuilder.loadTexts: alaQoSPortPdiTable.setStatus('current')
alaQoSPortPdiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 39, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortSlot"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortPort"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortPdiId"))
if mibBuilder.loadTexts: alaQoSPortPdiEntry.setStatus('current')
alaQoSPortPdiId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 39, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)))
if mibBuilder.loadTexts: alaQoSPortPdiId.setStatus('current')
alaQoSPortPdiPriorityType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 39, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortPdiPriorityType.setStatus('current')
alaQoSPortPdiPriorityP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 39, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortPdiPriorityP0.setStatus('current')
alaQoSPortPdiPriorityP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 39, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortPdiPriorityP1.setStatus('current')
alaQoSPortPdiPriorityP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 39, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortPdiPriorityP2.setStatus('current')
alaQoSPortPdiPriorityP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 39, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortPdiPriorityP3.setStatus('current')
alaQoSPortPdiPriorityP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 39, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortPdiPriorityP4.setStatus('current')
alaQoSPortPdiPriorityP5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 39, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortPdiPriorityP5.setStatus('current')
alaQoSPortPdiPriorityP6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 39, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortPdiPriorityP6.setStatus('current')
alaQoSPortPdiPriorityP7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 39, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortPdiPriorityP7.setStatus('current')
alaQoSValidityPeriodTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40), )
if mibBuilder.loadTexts: alaQoSValidityPeriodTable.setStatus('current')
alaQoSValidityPeriodEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSValidityPeriodName"))
if mibBuilder.loadTexts: alaQoSValidityPeriodEntry.setStatus('current')
alaQoSValidityPeriodName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSValidityPeriodName.setStatus('current')
alaQoSValidityPeriodSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodSource.setStatus('current')
alaQoSValidityPeriodDays = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodDays.setStatus('current')
alaQoSValidityPeriodDaysStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodDaysStatus.setStatus('current')
alaQoSValidityPeriodMonths = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodMonths.setStatus('current')
alaQoSValidityPeriodMonthsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodMonthsStatus.setStatus('current')
alaQoSValidityPeriodHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodHour.setStatus('current')
alaQoSValidityPeriodHourStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodHourStatus.setStatus('current')
alaQoSValidityPeriodEndHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodEndHour.setStatus('current')
alaQoSValidityPeriodInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodInterval.setStatus('current')
alaQoSValidityPeriodIntervalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodIntervalStatus.setStatus('current')
alaQoSValidityPeriodEndInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodEndInterval.setStatus('current')
alaQoSValidityPeriodRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodRowStatus.setStatus('current')
alaQoSAppliedValidityPeriodTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41), )
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodTable.setStatus('current')
alaQoSAppliedValidityPeriodEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedValidityPeriodName"))
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodEntry.setStatus('current')
alaQoSAppliedValidityPeriodName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodName.setStatus('current')
alaQoSAppliedValidityPeriodSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodSource.setStatus('current')
alaQoSAppliedValidityPeriodDays = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodDays.setStatus('current')
alaQoSAppliedValidityPeriodDaysStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodDaysStatus.setStatus('current')
alaQoSAppliedValidityPeriodMonths = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodMonths.setStatus('current')
alaQoSAppliedValidityPeriodMonthsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodMonthsStatus.setStatus('current')
alaQoSAppliedValidityPeriodHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodHour.setStatus('current')
alaQoSAppliedValidityPeriodHourStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodHourStatus.setStatus('current')
alaQoSAppliedValidityPeriodEndHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodEndHour.setStatus('current')
alaQoSAppliedValidityPeriodInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodInterval.setStatus('current')
alaQoSAppliedValidityPeriodIntervalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodIntervalStatus.setStatus('current')
alaQoSAppliedValidityPeriodEndInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodEndInterval.setStatus('current')
alaQoSAppliedValidityPeriodRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1, 13), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodRowStatus.setStatus('current')
alaQoSImportTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 42), )
if mibBuilder.loadTexts: alaQoSImportTable.setStatus('current')
alaQoSImportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 42, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSImportIndex"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSImportText"))
if mibBuilder.loadTexts: alaQoSImportEntry.setStatus('current')
alaQoSImportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 42, 1, 1), Integer32())
if mibBuilder.loadTexts: alaQoSImportIndex.setStatus('current')
alaQoSImportText = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 42, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63)))
if mibBuilder.loadTexts: alaQoSImportText.setStatus('current')
alaQoSImportPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 42, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSImportPrecedence.setStatus('current')
alaQoSImportPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 42, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSImportPrefix.setStatus('current')
alaQoSImportSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 42, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 52))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSImportSlot.setStatus('current')
alaQoSImportPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 42, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSImportPort.setStatus('current')
alaQoSImportPortend = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 42, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSImportPortend.setStatus('current')
alaQoSImportPortgroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 42, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSImportPortgroup.setStatus('current')
alaQoSImportRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 42, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSImportRowStatus.setStatus('current')
alaQoSAppliedImportTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 43), )
if mibBuilder.loadTexts: alaQoSAppliedImportTable.setStatus('current')
alaQoSAppliedImportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 43, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedImportIndex"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedImportText"))
if mibBuilder.loadTexts: alaQoSAppliedImportEntry.setStatus('current')
alaQoSAppliedImportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 43, 1, 1), Integer32())
if mibBuilder.loadTexts: alaQoSAppliedImportIndex.setStatus('current')
alaQoSAppliedImportText = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 43, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63)))
if mibBuilder.loadTexts: alaQoSAppliedImportText.setStatus('current')
alaQoSAppliedImportPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 43, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedImportPrecedence.setStatus('current')
alaQoSAppliedImportPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 43, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedImportPrefix.setStatus('current')
alaQoSAppliedImportSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 43, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 52))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedImportSlot.setStatus('current')
alaQoSAppliedImportPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 43, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedImportPort.setStatus('current')
alaQoSAppliedImportPortend = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 43, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedImportPortend.setStatus('current')
alaQoSAppliedImportPortgroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 43, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedImportPortgroup.setStatus('current')
alaQoSAppliedImportRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 43, 1, 9), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedImportRowStatus.setStatus('current')
alaQoSRuleGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 44), )
if mibBuilder.loadTexts: alaQoSRuleGroupsTable.setStatus('current')
alaQoSRuleGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 44, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupsName"))
if mibBuilder.loadTexts: alaQoSRuleGroupsEntry.setStatus('current')
alaQoSRuleGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 44, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSRuleGroupsName.setStatus('current')
alaQoSRuleGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 44, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleGroupsSource.setStatus('current')
alaQoSRuleGroupsType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 44, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("default", 1), ("unp", 2), ("vrf", 3), ("ingress", 4), ("egress", 5), ("slb", 6))).clone('unp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleGroupsType.setStatus('current')
alaQoSRuleGroupsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 44, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleGroupsEnabled.setStatus('current')
alaQoSRuleGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 44, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleGroupsStatus.setStatus('current')
alaQoSAppliedRuleGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 45), )
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupsTable.setStatus('current')
alaQoSAppliedRuleGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 45, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupsName"))
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupsEntry.setStatus('current')
alaQoSAppliedRuleGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 45, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupsName.setStatus('current')
alaQoSAppliedRuleGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 45, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupsSource.setStatus('current')
alaQoSAppliedRuleGroupsType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 45, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("defualt", 1), ("unp", 2), ("vrf", 3), ("ingress", 4), ("egress", 5), ("slb", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupsType.setStatus('current')
alaQoSAppliedRuleGroupsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 45, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupsEnabled.setStatus('current')
alaQoSAppliedRuleGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 45, 1, 5), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupsStatus.setStatus('current')
alaQoSRuleGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 46), )
if mibBuilder.loadTexts: alaQoSRuleGroupTable.setStatus('current')
alaQoSRuleGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 46, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupRuleName"))
if mibBuilder.loadTexts: alaQoSRuleGroupEntry.setStatus('current')
alaQoSRuleGroupRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 46, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSRuleGroupRuleName.setStatus('current')
alaQoSRuleGroupMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 46, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleGroupMatches.setStatus('current')
alaQoSRuleGroupCountType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 46, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("packets", 1), ("bytes", 2))).clone('packets')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleGroupCountType.setStatus('current')
alaQoSRuleGroupPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 46, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleGroupPacketCount.setStatus('current')
alaQoSRuleGroupByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 46, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleGroupByteCount.setStatus('current')
alaQoSRuleGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 46, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleGroupStatus.setStatus('current')
alaQoSAppliedRuleGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 47), )
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupTable.setStatus('current')
alaQoSAppliedRuleGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 47, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupRuleName"))
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupEntry.setStatus('current')
alaQoSAppliedRuleGroupRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 47, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupRuleName.setStatus('current')
alaQoSAppliedRuleGroupMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 47, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupMatches.setStatus('current')
alaQoSAppliedRuleGroupCountType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 47, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("packets", 1), ("bytes", 2))).clone('packets')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupCountType.setStatus('current')
alaQoSAppliedRuleGroupPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 47, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupPacketCount.setStatus('current')
alaQoSAppliedRuleGroupByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 47, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupByteCount.setStatus('current')
alaQoSAppliedRuleGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 47, 1, 6), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupStatus.setStatus('current')
alaQoSVlanGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 48), )
if mibBuilder.loadTexts: alaQoSVlanGroupsTable.setStatus('current')
alaQoSVlanGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 48, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSVlanGroupsName"))
if mibBuilder.loadTexts: alaQoSVlanGroupsEntry.setStatus('current')
alaQoSVlanGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 48, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSVlanGroupsName.setStatus('current')
alaQoSVlanGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 48, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSVlanGroupsSource.setStatus('current')
alaQoSVlanGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 48, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSVlanGroupsStatus.setStatus('current')
alaQoSAppliedVlanGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 49), )
if mibBuilder.loadTexts: alaQoSAppliedVlanGroupsTable.setStatus('current')
alaQoSAppliedVlanGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 49, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedVlanGroupsName"))
if mibBuilder.loadTexts: alaQoSAppliedVlanGroupsEntry.setStatus('current')
alaQoSAppliedVlanGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 49, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedVlanGroupsName.setStatus('current')
alaQoSAppliedVlanGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 49, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedVlanGroupsSource.setStatus('current')
alaQoSAppliedVlanGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 49, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedVlanGroupsStatus.setStatus('current')
alaQoSVlanGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 50), )
if mibBuilder.loadTexts: alaQoSVlanGroupTable.setStatus('current')
alaQoSVlanGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 50, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSVlanGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSVlanGroupVlan"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSVlanGroupVlanEnd"))
if mibBuilder.loadTexts: alaQoSVlanGroupEntry.setStatus('current')
alaQoSVlanGroupVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 50, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: alaQoSVlanGroupVlan.setStatus('current')
alaQoSVlanGroupVlanEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 50, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: alaQoSVlanGroupVlanEnd.setStatus('current')
alaQoSVlanGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 50, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSVlanGroupStatus.setStatus('current')
alaQoSAppliedVlanGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 51), )
if mibBuilder.loadTexts: alaQoSAppliedVlanGroupTable.setStatus('current')
alaQoSAppliedVlanGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 51, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedVlanGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedVlanGroupVlan"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedVlanGroupVlanEnd"))
if mibBuilder.loadTexts: alaQoSAppliedVlanGroupEntry.setStatus('current')
alaQoSAppliedVlanGroupVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 51, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)))
if mibBuilder.loadTexts: alaQoSAppliedVlanGroupVlan.setStatus('current')
alaQoSAppliedVlanGroupVlanEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 51, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)))
if mibBuilder.loadTexts: alaQoSAppliedVlanGroupVlanEnd.setStatus('current')
alaQoSAppliedVlanGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 51, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedVlanGroupStatus.setStatus('current')
alaQoSHwLoopbackProfileTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 52), )
if mibBuilder.loadTexts: alaQoSHwLoopbackProfileTable.setStatus('current')
alaQoSHwLoopbackProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 52, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSHwLoopbackProfileName"))
if mibBuilder.loadTexts: alaQoSHwLoopbackProfileEntry.setStatus('current')
alaQoSHwLoopbackProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 52, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: alaQoSHwLoopbackProfileName.setStatus('current')
alaQoSHwLoopbackSourceMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 52, 1, 2), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSHwLoopbackSourceMac.setStatus('current')
alaQoSHwLoopbackDestinationMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 52, 1, 3), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSHwLoopbackDestinationMac.setStatus('current')
alaQoSHwLoopbackVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 52, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSHwLoopbackVlan.setStatus('current')
alaQoSHwLoopbackPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 52, 1, 5), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSHwLoopbackPort.setStatus('current')
alaQoSHwLoopbackType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 52, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inward", 1), ("outward", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSHwLoopbackType.setStatus('current')
alaQoSHwLoopbackProfileStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 52, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("config", 0), ("start", 1), ("stop", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSHwLoopbackProfileStatus.setStatus('current')
alaQoSHwLoopbackProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 52, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSHwLoopbackProfileRowStatus.setStatus('current')
alaQoSMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2))
if mibBuilder.loadTexts: alaQoSMIBConformance.setStatus('current')
alaQoSMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1))
if mibBuilder.loadTexts: alaQoSMIBGroups.setStatus('current')
alaQoSMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 2))
if mibBuilder.loadTexts: alaQoSMIBCompliances.setStatus('current')
alaQoSMIBRuleObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSRuleEnabled"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRulePrecedence"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleCondition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleAction"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleReflexive"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleSave"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleLog"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleMatches"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleEnforced"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleActive"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleValidityPeriod"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleValidityPeriodStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleLogInterval"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleCountType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRulePacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleByteCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleExcessPacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleExcessByteCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleTrapEvents"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleDefaultList"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGreenCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleYellowCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleRedCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleNonGreenCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleNonRedCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBRuleObjects = alaQoSMIBRuleObjects.setStatus('current')
alaQoSMIBAppliedRuleObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleEnabled"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRulePrecedence"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleCondition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleAction"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleReflexive"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleSave"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleLog"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleMatches"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleEnforced"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleActive"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleValidityPeriod"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleValidityPeriodStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleLogInterval"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleCountType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRulePacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleByteCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleExcessPacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleExcessByteCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleTrapEvents"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleDefaultList"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGreenCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleYellowCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleRedCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleNonGreenCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleNonRedCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedRuleObjects = alaQoSMIBAppliedRuleObjects.setStatus('current')
alaQoSMIBConditionObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceSlotStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourcePort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourcePortGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourcePortGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationSlotStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationPortGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationPortGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceInterfaceType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceInterfaceTypeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationInterfaceType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationInterfaceTypeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceMacAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceMacAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceMacMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceMacGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceMacGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationMacAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationMacAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationMacMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationMacGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationMacGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceVlan"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceVlanStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationVlan"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationVlanStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSCondition8021p"), ("ALCATEL-IND1-QOS-MIB", "alaQoSCondition8021pStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceNetworkGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceNetworkGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationNetworkGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationNetworkGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionMulticastIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionMulticastIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionMulticastIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionMulticastNetworkGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionMulticastNetworkGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTos"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTosStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTosMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDscp"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDscpStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDscpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIpProtocol"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIpProtocolStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionService"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionServiceStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionServiceGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionServiceGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIcmpType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIcmpTypeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIcmpCode"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIcmpCodeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDlci"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDlciStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourcePortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceTcpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceTcpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceTcpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationTcpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationTcpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationTcpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceUdpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceUdpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceUdpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationUdpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationUdpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationUdpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionEthertype"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionEthertypeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTcpFlags"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTcpFlagsStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTcpFlagsVal"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTcpFlagsValStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTcpFlagsMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTcpFlagsMaskStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTcpEstablished"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpv6Addr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpv6AddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpv6Mask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpv6Addr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpv6AddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpv6Mask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIpv6Traffic"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIpv6NH"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIpv6NHStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIpv6FlowLabel"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIpv6FlowLabelStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionMcastIpv6Addr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionMcastIpv6AddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionMcastIpv6Mask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDscpEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionInnerSourceVlan"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionInnerSourceVlanStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionInner8021p"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionInner8021pStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVrfName"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVrfNameStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSCondition8021pEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionInner8021pEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceVlanGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceVlanGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionInnerSourceVlanGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionInnerSourceVlanGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBConditionObjects = alaQoSMIBConditionObjects.setStatus('current')
alaQoSMIBAppliedConditionObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceSlotStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourcePort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourcePortGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourcePortGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationSlotStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationPortGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationPortGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceInterfaceType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceInterfaceTypeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationInterfaceType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationInterfaceTypeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceMacAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceMacAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceMacMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceMacGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceMacGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationMacAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationMacAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationMacMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationMacGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationMacGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceVlan"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceVlanStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationVlan"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationVlanStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedCondition8021p"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedCondition8021pStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceNetworkGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceNetworkGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationNetworkGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationNetworkGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionMulticastIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionMulticastIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionMulticastIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionMulticastNetworkGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionMulticastNetworkGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTos"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTosStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTosMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDscp"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDscpStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDscpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIpProtocol"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIpProtocolStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionService"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionServiceStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionServiceGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionServiceGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIcmpType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIcmpTypeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIcmpCode"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIcmpCodeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDlci"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDlciStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourcePortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceTcpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceTcpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceTcpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationTcpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationTcpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationTcpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceUdpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceUdpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceUdpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationUdpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationUdpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationUdpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionEthertype"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionEthertypeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTcpFlags"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTcpFlagsStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTcpFlagsVal"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTcpFlagsValStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTcpFlagsMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTcpFlagsMaskStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTcpEstablished"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpv6Addr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpv6AddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpv6Mask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpv6Addr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpv6AddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpv6Mask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIpv6Traffic"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIpv6NH"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIpv6NHStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIpv6FlowLabel"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIpv6FlowLabelStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionMcastIpv6Addr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionMcastIpv6AddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionMcastIpv6Mask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDscpEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionInnerSourceVlan"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionInnerSourceVlanStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionInner8021p"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionInner8021pStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVrfName"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVrfNameStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedCondition8021pEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionInner8021pEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceVlanGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceVlanGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionInnerSourceVlanGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionInnerSourceVlanGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedConditionObjects = alaQoSMIBAppliedConditionObjects.setStatus('current')
alaQoSMIBServiceObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceProtocol"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceIpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceIpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationIpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationIpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceIpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationIpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceTcpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceTcpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceTcpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationTcpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationTcpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationTcpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceUdpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceUdpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceUdpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationUdpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationUdpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationUdpPortEnd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBServiceObjects = alaQoSMIBServiceObjects.setStatus('current')
alaQoSMIBAppliedServiceObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceProtocol"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceIpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceIpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationIpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationIpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceIpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationIpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceTcpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceTcpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceTcpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationTcpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationTcpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationTcpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceUdpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceUdpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceUdpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationUdpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationUdpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationUdpPortEnd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedServiceObjects = alaQoSMIBAppliedServiceObjects.setStatus('current')
alaQoSMIBServiceGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 7)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSServiceGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBServiceGroupsObjects = alaQoSMIBServiceGroupsObjects.setStatus('current')
alaQoSMIBAppliedServiceGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 8)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedServiceGroupsObjects = alaQoSMIBAppliedServiceGroupsObjects.setStatus('current')
alaQoSMIBServiceGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 9)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSServiceGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBServiceGroupObjects = alaQoSMIBServiceGroupObjects.setStatus('current')
alaQoSMIBAppliedServiceGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 10)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedServiceGroupObjects = alaQoSMIBAppliedServiceGroupObjects.setStatus('current')
alaQoSMIBNetworkGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 11)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSNetworkGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSNetworkGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBNetworkGroupsObjects = alaQoSMIBNetworkGroupsObjects.setStatus('current')
alaQoSMIBAppliedNetworkGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 12)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedNetworkGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedNetworkGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedNetworkGroupsObjects = alaQoSMIBAppliedNetworkGroupsObjects.setStatus('current')
alaQoSMIBNetworkGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 13)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSNetworkGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBNetworkGroupObjects = alaQoSMIBNetworkGroupObjects.setStatus('current')
alaQoSMIBAppliedNetworkGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 14)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedNetworkGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedNetworkGroupObjects = alaQoSMIBAppliedNetworkGroupObjects.setStatus('current')
alaQoSMIBMACGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 15)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSMACGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMACGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBMACGroupsObjects = alaQoSMIBMACGroupsObjects.setStatus('current')
alaQoSMIBAppliedMACGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 16)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMACGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMACGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedMACGroupsObjects = alaQoSMIBAppliedMACGroupsObjects.setStatus('current')
alaQoSMIBMACGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 17)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSMACGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBMACGroupObjects = alaQoSMIBMACGroupObjects.setStatus('current')
alaQoSMIBAppliedMACGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 18)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMACGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedMACGroupObjects = alaQoSMIBAppliedMACGroupObjects.setStatus('current')
alaQoSMIBPortGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 19)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSPortGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBPortGroupsObjects = alaQoSMIBPortGroupsObjects.setStatus('current')
alaQoSMIBAppliedPortGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 20)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedPortGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedPortGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedPortGroupsObjects = alaQoSMIBAppliedPortGroupsObjects.setStatus('current')
alaQoSMIBPortGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 21)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSPortGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBPortGroupObjects = alaQoSMIBPortGroupObjects.setStatus('current')
alaQoSMIBAppliedPortGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 22)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedPortGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedPortGroupObjects = alaQoSMIBAppliedPortGroupObjects.setStatus('current')
alaQoSMIBMapGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 23)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSMapGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMapGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBMapGroupsObjects = alaQoSMIBMapGroupsObjects.setStatus('current')
alaQoSMIBAppliedMapGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 24)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMapGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMapGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedMapGroupsObjects = alaQoSMIBAppliedMapGroupsObjects.setStatus('current')
alaQoSMIBMapGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 25)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSMapGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBMapGroupObjects = alaQoSMIBMapGroupObjects.setStatus('current')
alaQoSMIBAppliedMapGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 26)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMapGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedMapGroupObjects = alaQoSMIBAppliedMapGroupObjects.setStatus('current')
alaQoSMIBActionObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 27)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSActionSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionDisposition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionDropAlgorithm"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionWredMaximumThreshold"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionWredMaximumThresholdStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionWredMinimumThreshold"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionWredMinimumThresholdStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionWredMaximumProbability"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionWredMaximumProbabilityStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMinimumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMinimumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMaximumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMaximumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPeakBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPeakBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPriority"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPriorityStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionShared"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionJitter"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionJitterStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionLatency"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionLatencyStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMaximumDepth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMaximumDepthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMaximumBuffers"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMaximumBuffersStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAction8021p"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAction8021pStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionTos"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionTosStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionDscp"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionDscpStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMapFrom"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMapTo"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMapGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMapGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionSourceRewriteIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionSourceRewriteIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionSourceRewriteIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionSourceRewriteNetworkGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionSourceRewriteNetworkGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionDestinationRewriteIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionDestinationRewriteIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionDestinationRewriteIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionDestinationRewriteNetworkGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionDestinationRewriteNetworkGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionLoadBalanceGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionLoadBalanceGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPermanentGatewayIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPermanentGatewayIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionAlternateGatewayIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionAlternateGatewayIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMinimumDepth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMinimumDepthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionVPNAccess"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionNocache"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPortdisable"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRedirectSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRedirectSlotStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRedirectPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRedirectAgg"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRedirectAggStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMirrorSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMirrorPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMirrorMode"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMirrorModeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionCIR"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionCIRStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionCBS"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionCBSStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPIR"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPIRStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPBS"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPBSStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionCounterColor"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBActionObjects = alaQoSMIBActionObjects.setStatus('current')
alaQoSMIBAppliedActionObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 28)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionDisposition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionDropAlgorithm"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionWredMaximumThreshold"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionWredMaximumThresholdStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionWredMinimumThreshold"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionWredMinimumThresholdStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionWredMaximumProbability"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionWredMaximumProbabilityStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMinimumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMinimumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMaximumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMaximumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPeakBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPeakBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPriority"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPriorityStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionShared"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionJitter"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionJitterStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionLatency"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionLatencyStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMaximumDepth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMaximumDepthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMaximumBuffers"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMaximumBuffersStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedAction8021p"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedAction8021pStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionTos"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionTosStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionDscp"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionDscpStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMapFrom"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMapTo"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMapGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMapGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionSourceRewriteIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionSourceRewriteIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionSourceRewriteIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionSourceRewriteNetworkGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionSourceRewriteNetworkGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionDestinationRewriteIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionDestinationRewriteIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionDestinationRewriteIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionDestinationRewriteNetworkGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionDestinationRewriteNetworkGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionLoadBalanceGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionLoadBalanceGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPermanentGatewayIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPermanentGatewayIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionAlternateGatewayIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionAlternateGatewayIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMinimumDepth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMinimumDepthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionVPNAccess"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionNocache"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPortdisable"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionRedirectSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionRedirectSlotStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionRedirectPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionRedirectAgg"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionRedirectAggStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMirrorSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMirrorPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMirrorMode"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMirrorModeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionCIR"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionCIRStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionCBS"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionCBSStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPIR"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPIRStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPBS"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPBSStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionCounterColor"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedActionObjects = alaQoSMIBAppliedActionObjects.setStatus('current')
alaQoSMIBPortObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 29)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSPortEnabled"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortAppliedEnabled"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortInterfaceType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortTrusted"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortDefault8021p"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortDefaultDSCP"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumReservedBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumReservedBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortAppliedMaximumReservedBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortAppliedMaximumReservedBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumSignalledBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumSignalledBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortAppliedMaximumSignalledBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortAppliedMaximumSignalledBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortDefaultQueues"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortAppliedDefaultQueues"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumDefaultBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumDefaultBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortAppliedMaximumDefaultBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortAppliedMaximumDefaultBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumDefaultDepth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumDefaultDepthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortAppliedMaximumDefaultDepth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortAppliedMaximumDefaultDepthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumDefaultBuffers"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumDefaultBuffersStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortAppliedMaximumDefaultBuffers"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortAppliedMaximumDefaultBuffersStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortReset"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortPhysicalBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortReservedBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortSignalledBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCurrentBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortDefaultQidLow"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortDefaultQidMedium"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortDefaultQidHigh"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortDefaultQidUrgent"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFloodQid"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortQueues"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortQueuesCreated"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortQueuesFailed"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortQueuesPreempted"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio0EnqBytes"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio0DeqBytes"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio0EnqPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio0DeqPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio0QidDiscardPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio0WredDiscardPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio0OverflowDiscardPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio1EnqBytes"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio1DeqBytes"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio1EnqPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio1DeqPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio1QidDiscardPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio1WredDiscardPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio1OverflowDiscardPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio2EnqBytes"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio2DeqBytes"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio2EnqPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio2DeqPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio2QidDiscardPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio2WredDiscardPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio2OverflowDiscardPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio3EnqBytes"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio3DeqBytes"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio3EnqPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio3DeqPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio3QidDiscardPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio3WredDiscardPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFirPrio3OverflowDiscardPkts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortDefaultClassification"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortLowPriorityWeight"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMediumPriorityWeight"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortHighPriorityWeight"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortUrgentPriorityWeight"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortEnqueuingThresholdP0Lower"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortEnqueuingThresholdP0Upper"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortEnqueuingThresholdP1Lower"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortEnqueuingThresholdP1Upper"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortEnqueuingThresholdP2Lower"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortEnqueuingThresholdP2Upper"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortEnqueuingThresholdP3Lower"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortEnqueuingThresholdP3Upper"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortEnqueuingThresholdStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortServicingMode"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortHighDensity"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFreeFFPRules"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortUsedFFPRules"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortFreeFFPMasks"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortUsedFFPMasks"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortSpoofedCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortNonSpoofedCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortQ4PriorityWeight"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortQ5PriorityWeight"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortQ6PriorityWeight"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortQ7PriorityWeight"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS0MaximumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS0MaximumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS1MaximumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS1MaximumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS2MaximumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS2MaximumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS3MaximumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS3MaximumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS4MaximumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS4MaximumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS5MaximumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS5MaximumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS6MaximumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS6MaximumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS7MaximumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS7MaximumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS0MinimumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS0MinimumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS1MinimumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS1MinimumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS2MinimumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS2MinimumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS3MinimumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS3MinimumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS4MinimumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS4MinimumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS5MinimumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS5MinimumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS6MinimumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS6MinimumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS7MinimumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortCOS7MinimumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumIngBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumIngBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortDEIMarking"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMonitor"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortDEIMapping"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBPortObjects = alaQoSMIBPortObjects.setStatus('current')
alaQoSMIBConfigObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 30)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSConfigEnabled"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigDefaultQueues"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigAppliedDefaultQueues"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigTrustPorts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigFlowTimeout"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigAppliedFlowTimeout"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigFragmentTimeout"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigAppliedFragmentTimeout"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigReflexiveTimeout"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigAppliedReflfexiveTimeout"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigNatTimeout"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigAppliedNatTimeout"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigClassifyl3Bridged"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigAppliedClassifyl3Bridged"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigClassifyFragments"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigAppliedClassifyFragments"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigDefaultBridgedDisposition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigAppliedDefaultBridgedDisposition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigDefaultRoutedDisposition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigAppliedDefaultRoutedDisposition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigDefaultMulticastDisposition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigAppliedDefaultMulticastDisposition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigStatsInterval"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigLogLines"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigLogLevel"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigLogConsole"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigForwardLog"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigClearLog"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigApply"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigRevert"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigReset"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigStatsReset"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigFlush"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigDebug"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigServicingMode"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigLowPriorityWeight"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigMediumPriorityWeight"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigHighPriorityWeight"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigUrgentPriorityWeight"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigQ4PriorityWeight"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigQ5PriorityWeight"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigQ6PriorityWeight"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigQ7PriorityWeight"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigUserportFilter"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigAppliedUserportFilter"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigUserportShutdown"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigAppliedUserportShutdown"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigAutoNMS"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigAutoPhones"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigQMPage"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigQMMACGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigQMPath"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigDEIMapping"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigDEIMarking"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigStatsResetEgress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBConfigObjects = alaQoSMIBConfigObjects.setStatus('current')
alaQoSMIBStatsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 31)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSStatsL2Events"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsL2Matches"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsL2Drops"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsL3IngressEvents"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsL3IngressMatches"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsL3IngressDrops"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsL3EgressEvents"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsL3EgressMatches"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsL3EgressDrops"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsMulticastEvents"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsMulticastMatches"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsMulticastDrops"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsFragments"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsBadFragments"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsUnknownFragments"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsReflexiveFlows"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsReflexiveCorrections"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsLoadBalanceFlows"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsClassifierMaxNodes"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsClassifierMaxDepth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsFlowLookups"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsFlowHits"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsSentNIMessages"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsReceivedNIMessages"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsFailedNIMessages"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsSpoofedEvents"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsNonSpoofedEvents"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsDropServicesEvents"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBStatsObjects = alaQoSMIBStatsObjects.setStatus('current')
alaQoSMIBQueueObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 32)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSQueueSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSQueuePort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSQueuePortId"), ("ALCATEL-IND1-QOS-MIB", "alaQoSQueueType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSQueuePriority"), ("ALCATEL-IND1-QOS-MIB", "alaQoSQueueMinimumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSQueueMaximumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSQueueAverageBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSQueueMinimumDepth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSQueueMaximumDepth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSQueueMaximumBuffers"), ("ALCATEL-IND1-QOS-MIB", "alaQoSQueue8021p"), ("ALCATEL-IND1-QOS-MIB", "alaQoSQueuePacketsSent"), ("ALCATEL-IND1-QOS-MIB", "alaQoSQueuePacketsDropped"), ("ALCATEL-IND1-QOS-MIB", "alaQoSQueueMaxLength"), ("ALCATEL-IND1-QOS-MIB", "alaQoSQueueAverageLength"), ("ALCATEL-IND1-QOS-MIB", "alaQoSQueueCurrentLength"), ("ALCATEL-IND1-QOS-MIB", "alaQoSQueueAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBQueueObjects = alaQoSMIBQueueObjects.setStatus('current')
alaQoSMIBSlotObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 33)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSSlotType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotMaxBuffers"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotFreeBuffers1"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotFreeBuffers2"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotThreshold1Low"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotThreshold1Medium"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotThreshold1High"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotThreshold1Urgent"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotThreshold2Low"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotThreshold2Medium"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotThreshold2High"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotThreshold2Urgent"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotBuffersDenied"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotBuffersDeniedAverage"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotBuffersDropped"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotBuffersDroppedAverage"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotWredThresholdP0Lower"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotWredThresholdP0Upper"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotWredThresholdP1Lower"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotWredThresholdP1Upper"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotWredThresholdP2Lower"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotWredThresholdP2Upper"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotWredThresholdP3Lower"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotWredThresholdP3Upper"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotWredAverageCounterWeight"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotWredThresholdStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotCbqThresholdMode"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotCbqThresholdP1"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotCbqThresholdP2"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotCbqThresholdP3"), ("ALCATEL-IND1-QOS-MIB", "alaQoSSlotHighDensity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBSlotObjects = alaQoSMIBSlotObjects.setStatus('current')
alaQoSMIBClassifyObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 34)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSClassifyExecute"), ("ALCATEL-IND1-QOS-MIB", "alaQoSClassifyL2SourceResultRule"), ("ALCATEL-IND1-QOS-MIB", "alaQoSClassifyL2SourceResultDisposition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSClassifyL2DestinationResultRule"), ("ALCATEL-IND1-QOS-MIB", "alaQoSClassifyL2DestinationResultDisposition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSClassifyL3ResultRule"), ("ALCATEL-IND1-QOS-MIB", "alaQoSClassifyL3ResultDisposition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSClassifyIGMPResultRule"), ("ALCATEL-IND1-QOS-MIB", "alaQoSClassifyIGMPResultDisposition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSClassifyMulticastResultRule"), ("ALCATEL-IND1-QOS-MIB", "alaQoSClassifyMulticastResultDisposition"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBClassifyObjects = alaQoSMIBClassifyObjects.setStatus('current')
alaQoSMIBRuleGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 35)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupsType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupsEnabled"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBRuleGroupsObjects = alaQoSMIBRuleGroupsObjects.setStatus('current')
alaQoSMIBAppliedRuleGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 36)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupsType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupsEnabled"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedRuleGroupsObjects = alaQoSMIBAppliedRuleGroupsObjects.setStatus('current')
alaQoSMIBRuleGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 37)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupMatches"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupCountType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupPacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupByteCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBRuleGroupObjects = alaQoSMIBRuleGroupObjects.setStatus('current')
alaQoSMIBAppliedRuleGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 38)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupMatches"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupCountType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupPacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupByteCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedRuleGroupObjects = alaQoSMIBAppliedRuleGroupObjects.setStatus('current')
alaQoSVlanGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 39)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSVlanGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSVlanGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSVlanGroupsObjects = alaQoSVlanGroupsObjects.setStatus('current')
alaQoSAppliedVlanGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 40)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedVlanGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedVlanGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSAppliedVlanGroupsObjects = alaQoSAppliedVlanGroupsObjects.setStatus('current')
alaQoSVlanGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 41)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSVlanGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSVlanGroupObjects = alaQoSVlanGroupObjects.setStatus('current')
alaQoSAppliedVlanGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 42)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedVlanGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSAppliedVlanGroupObjects = alaQoSAppliedVlanGroupObjects.setStatus('current')
alaQoSMIBHwLoopBackProfileObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 43)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSHwLoopbackSourceMac"), ("ALCATEL-IND1-QOS-MIB", "alaQoSHwLoopbackDestinationMac"), ("ALCATEL-IND1-QOS-MIB", "alaQoSHwLoopbackVlan"), ("ALCATEL-IND1-QOS-MIB", "alaQoSHwLoopbackPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSHwLoopbackType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSHwLoopbackProfileStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSHwLoopbackProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBHwLoopBackProfileObjects = alaQoSMIBHwLoopBackProfileObjects.setStatus('current')
alaQoSMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSMIBRuleObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedRuleObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBConditionObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedConditionObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBServiceObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedServiceObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBServiceGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedServiceGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBServiceGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedServiceGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBNetworkGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedNetworkGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBNetworkGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedNetworkGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBMACGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedMACGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBMACGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedMACGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBPortGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedPortGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBPortGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedPortGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBMapGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedMapGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBMapGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedMapGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBActionObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedActionObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBPortObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBConfigObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBStatsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBQueueObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBSlotObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBClassifyObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBRuleGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedRuleGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBRuleGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedRuleGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSVlanGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedVlanGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSVlanGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedVlanGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBHwLoopBackProfileObjects"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBCompliance = alaQoSMIBCompliance.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-QOS-MIB", alaQoSSlotDscpIndex=alaQoSSlotDscpIndex, alaQoSPortDefault8021p=alaQoSPortDefault8021p, alaQoSActionPermanentGatewayIpAddr=alaQoSActionPermanentGatewayIpAddr, alaQoSAppliedActionSourceRewriteIpMask=alaQoSAppliedActionSourceRewriteIpMask, alaQoSSlotBuffersDenied=alaQoSSlotBuffersDenied, alaQoSConditionSourceMacAddrStatus=alaQoSConditionSourceMacAddrStatus, alaQoSAppliedConditionSourceInterfaceTypeStatus=alaQoSAppliedConditionSourceInterfaceTypeStatus, alaQoSAppliedConditionMulticastNetworkGroup=alaQoSAppliedConditionMulticastNetworkGroup, alaQoSActionShared=alaQoSActionShared, alaQoSAppliedConditionVrfName=alaQoSAppliedConditionVrfName, alaQoSAppliedActionDisposition=alaQoSAppliedActionDisposition, alaQoSServiceGroupsTable=alaQoSServiceGroupsTable, alaQoSConditionSourceIpv6Addr=alaQoSConditionSourceIpv6Addr, alaQoSPortEnqueuingThresholdP0Upper=alaQoSPortEnqueuingThresholdP0Upper, alaQoSRuleGroupsEnabled=alaQoSRuleGroupsEnabled, alaQoSQueueMaximumBuffers=alaQoSQueueMaximumBuffers, alaQoSConditionDestinationTcpPort=alaQoSConditionDestinationTcpPort, alaQoSMIBObjects=alaQoSMIBObjects, alaQoSAppliedRuleNonGreenCount=alaQoSAppliedRuleNonGreenCount, alaQoSAppliedConditionDestinationUdpPortStatus=alaQoSAppliedConditionDestinationUdpPortStatus, alaQoSActionRedirectAggStatus=alaQoSActionRedirectAggStatus, alaQoSConfigQ5PriorityWeight=alaQoSConfigQ5PriorityWeight, alaQoSConditionSourceInterfaceTypeStatus=alaQoSConditionSourceInterfaceTypeStatus, alaQoSActionCBS=alaQoSActionCBS, alaQoSRuleGroupRuleName=alaQoSRuleGroupRuleName, alaQoSRuleTable=alaQoSRuleTable, alaQoSAppliedServiceSourceTcpPortStatus=alaQoSAppliedServiceSourceTcpPortStatus, alaQoSCondition8021pStatus=alaQoSCondition8021pStatus, alaQoSRuleValidityPeriod=alaQoSRuleValidityPeriod, alaQoSAppliedRuleGroupsTable=alaQoSAppliedRuleGroupsTable, alaQoSConditionTosMask=alaQoSConditionTosMask, alaQoSAppliedConditionSourceIpv6Mask=alaQoSAppliedConditionSourceIpv6Mask, alaQoSActionMaximumDepthStatus=alaQoSActionMaximumDepthStatus, alaQoSActionNocache=alaQoSActionNocache, alaQoSPortFirPrio3OverflowDiscardPkts=alaQoSPortFirPrio3OverflowDiscardPkts, alaQoSServiceGroupsEntry=alaQoSServiceGroupsEntry, alaQoSMIBNetworkGroupsObjects=alaQoSMIBNetworkGroupsObjects, alaQoSPortAppliedMaximumSignalledBandwidth=alaQoSPortAppliedMaximumSignalledBandwidth, alaQoSImportPort=alaQoSImportPort, alaQoSAppliedActionSource=alaQoSAppliedActionSource, alaQoSStatsUnknownFragments=alaQoSStatsUnknownFragments, alaQoSAppliedRuleDefaultList=alaQoSAppliedRuleDefaultList, alaQoSAppliedConditionSourceMacGroupStatus=alaQoSAppliedConditionSourceMacGroupStatus, alaQoSConditionDestinationSlotStatus=alaQoSConditionDestinationSlotStatus, alaQoSAppliedMACGroupMacMask=alaQoSAppliedMACGroupMacMask, alaQoSAppliedConditionInnerSourceVlanStatus=alaQoSAppliedConditionInnerSourceVlanStatus, alaQoSConfigStatsReset=alaQoSConfigStatsReset, alaQoSSlotProtocolEntry=alaQoSSlotProtocolEntry, alaQoSValidityPeriodMonths=alaQoSValidityPeriodMonths, alaQoSAppliedConditionRowStatus=alaQoSAppliedConditionRowStatus, alaQoSPortFirPrio3DeqPkts=alaQoSPortFirPrio3DeqPkts, alaQoSPortFirPrio2DeqBytes=alaQoSPortFirPrio2DeqBytes, alaQoSAppliedRulePrecedence=alaQoSAppliedRulePrecedence, alaQoSMIBHwLoopBackProfileObjects=alaQoSMIBHwLoopBackProfileObjects, alaQoSConditionTcpFlagsMask=alaQoSConditionTcpFlagsMask, alaQoSAppliedServiceRowStatus=alaQoSAppliedServiceRowStatus, alaQoSAppliedActionRedirectPort=alaQoSAppliedActionRedirectPort, alaQoSSlotDscpTable=alaQoSSlotDscpTable, alaQoSMIBQueueObjects=alaQoSMIBQueueObjects, alaQoSActionMaximumBandwidth=alaQoSActionMaximumBandwidth, alaQoSQueueSlot=alaQoSQueueSlot, alaQoSConfigDefaultBridgedDisposition=alaQoSConfigDefaultBridgedDisposition, alaQoSClassifyDestinationMac=alaQoSClassifyDestinationMac, alaQoSActionJitter=alaQoSActionJitter, alaQoSAppliedServiceSource=alaQoSAppliedServiceSource, alaQoSConfigAppliedClassifyl3Bridged=alaQoSConfigAppliedClassifyl3Bridged, alaQoSQueueCurrentLength=alaQoSQueueCurrentLength, alaQoSAppliedConditionTcpFlagsMask=alaQoSAppliedConditionTcpFlagsMask, alaQoSAppliedServiceGroupsName=alaQoSAppliedServiceGroupsName, alaQoSAppliedConditionInner8021p=alaQoSAppliedConditionInner8021p, alaQoSPortCOS6MinimumBandwidthStatus=alaQoSPortCOS6MinimumBandwidthStatus, alaQoSAppliedRuleEntry=alaQoSAppliedRuleEntry, alaQoSAppliedActionMirrorModeStatus=alaQoSAppliedActionMirrorModeStatus, alaQoSAppliedNetworkGroupsSource=alaQoSAppliedNetworkGroupsSource, alaQoSAppliedActionRedirectAgg=alaQoSAppliedActionRedirectAgg, alaQoSAppliedVlanGroupsStatus=alaQoSAppliedVlanGroupsStatus, alaQoSConditionTcpFlagsMaskStatus=alaQoSConditionTcpFlagsMaskStatus, alaQoSRuleGroupCountType=alaQoSRuleGroupCountType, alaQoSHwLoopbackDestinationMac=alaQoSHwLoopbackDestinationMac, alaQoSAppliedImportEntry=alaQoSAppliedImportEntry, alaQoSAppliedConditionIpProtocolStatus=alaQoSAppliedConditionIpProtocolStatus, alaQoSClassifyApplied=alaQoSClassifyApplied, alaQoSMapGroupsSource=alaQoSMapGroupsSource, alaQoSNetworkGroupsStatus=alaQoSNetworkGroupsStatus, alaQoSActionMinimumDepth=alaQoSActionMinimumDepth, alaQoSStatsSpoofedEvents=alaQoSStatsSpoofedEvents, alaQoSAppliedRuleByteCount=alaQoSAppliedRuleByteCount, alaQoSAppliedConditionMcastIpv6Addr=alaQoSAppliedConditionMcastIpv6Addr, alaQoSRuleValidityPeriodStatus=alaQoSRuleValidityPeriodStatus, alaQoSAppliedConditionMcastIpv6Mask=alaQoSAppliedConditionMcastIpv6Mask, alaQoSActionMirrorModeStatus=alaQoSActionMirrorModeStatus, alaQoSMIBAppliedMapGroupsObjects=alaQoSMIBAppliedMapGroupsObjects, alaQoSPortHighDensity=alaQoSPortHighDensity, alaQoSAppliedMapGroupsTable=alaQoSAppliedMapGroupsTable, alaQoSAppliedVlanGroupsEntry=alaQoSAppliedVlanGroupsEntry, alaQoSAppliedConditionSourcePortGroupStatus=alaQoSAppliedConditionSourcePortGroupStatus, alaQoSAppliedConditionDestinationSlot=alaQoSAppliedConditionDestinationSlot, alaQoSAppliedConditionSourceMacAddr=alaQoSAppliedConditionSourceMacAddr, alaQoSAppliedActionPriority=alaQoSAppliedActionPriority, alaQoSActionMapFrom=alaQoSActionMapFrom, alaQoSAppliedRuleName=alaQoSAppliedRuleName, alaQoSAppliedActionCounterColor=alaQoSAppliedActionCounterColor, alaQoSPortMaximumIngBandwidth=alaQoSPortMaximumIngBandwidth, alaQoSAppliedConditionSourcePortEnd=alaQoSAppliedConditionSourcePortEnd, alaQoSPortEnqueuingThresholdP0Lower=alaQoSPortEnqueuingThresholdP0Lower, alaQoSActionPBSStatus=alaQoSActionPBSStatus, alaQoSActionTos=alaQoSActionTos, alaQoSAppliedConditionSourceMacAddrStatus=alaQoSAppliedConditionSourceMacAddrStatus, alaQoSAppliedRuleValidityPeriodStatus=alaQoSAppliedRuleValidityPeriodStatus, alaQoSAppliedServiceSourceIpPort=alaQoSAppliedServiceSourceIpPort, alaQoSStatsReflexiveFlows=alaQoSStatsReflexiveFlows, alaQoSActionPIRStatus=alaQoSActionPIRStatus, alaQoSAppliedConditionInnerSourceVlanGroup=alaQoSAppliedConditionInnerSourceVlanGroup, alaQoSConditionTcpEstablished=alaQoSConditionTcpEstablished, alaQoSPortPhysicalBandwidth=alaQoSPortPhysicalBandwidth, alaQoSVlanGroupEntry=alaQoSVlanGroupEntry, alaQoSConfigDebug=alaQoSConfigDebug, alaQoSMIBServiceGroupObjects=alaQoSMIBServiceGroupObjects, alaQoSAppliedMACGroupTable=alaQoSAppliedMACGroupTable, alaQoSPortMonitor=alaQoSPortMonitor, alaQoSClassifyDestinationSlot=alaQoSClassifyDestinationSlot, alaQoSMIBAppliedPortGroupObjects=alaQoSMIBAppliedPortGroupObjects, alaQoSAppliedValidityPeriodDaysStatus=alaQoSAppliedValidityPeriodDaysStatus, alaQoSAppliedConditionTcpFlagsValStatus=alaQoSAppliedConditionTcpFlagsValStatus, alaQoSSlotPcamId=alaQoSSlotPcamId, alaQoSConditionInnerSourceVlan=alaQoSConditionInnerSourceVlan, alaQoSAppliedMapGroupsEntry=alaQoSAppliedMapGroupsEntry, alaQoSAppliedConditionIcmpCodeStatus=alaQoSAppliedConditionIcmpCodeStatus, alaQoSMIBSlotObjects=alaQoSMIBSlotObjects, alaQoSConditionIpProtocolStatus=alaQoSConditionIpProtocolStatus, alaQoSRuleByteCount=alaQoSRuleByteCount, alaQoSPortFreeFFPRules=alaQoSPortFreeFFPRules, alaQoSClassifyL3ResultDisposition=alaQoSClassifyL3ResultDisposition, alaQoSPortCOS5MinimumBandwidthStatus=alaQoSPortCOS5MinimumBandwidthStatus, alaQoSMapGroupsStatus=alaQoSMapGroupsStatus, alaQoSAppliedPortGroupPort=alaQoSAppliedPortGroupPort, alaQoSPortQ6PriorityWeight=alaQoSPortQ6PriorityWeight, alaQoSAppliedConditionSourceIpv6Addr=alaQoSAppliedConditionSourceIpv6Addr, alaQoSAppliedConditionDestinationTcpPortStatus=alaQoSAppliedConditionDestinationTcpPortStatus, alaQoSAppliedRuleEnforced=alaQoSAppliedRuleEnforced, alaQoSSlotWredThresholdP0Upper=alaQoSSlotWredThresholdP0Upper, alaQoSRuleEnabled=alaQoSRuleEnabled, alaQoSAppliedMapGroupValue=alaQoSAppliedMapGroupValue, alaQoSMACGroupsName=alaQoSMACGroupsName, alaQoSConfigClassifyFragments=alaQoSConfigClassifyFragments, alaQoSStatsFlowLookups=alaQoSStatsFlowLookups, alaQoSClassifySourceInterfaceType=alaQoSClassifySourceInterfaceType, alaQoSClassifyExecute=alaQoSClassifyExecute, alaQoSConditionIpv6NHStatus=alaQoSConditionIpv6NHStatus, alaQoSMACGroupMacMask=alaQoSMACGroupMacMask, alaQoSActionPeakBandwidthStatus=alaQoSActionPeakBandwidthStatus, alaQoSPortCOS4MaximumBandwidth=alaQoSPortCOS4MaximumBandwidth, alaQoSMIBActionObjects=alaQoSMIBActionObjects, alaQoSConditionSourceIpv6AddrStatus=alaQoSConditionSourceIpv6AddrStatus, alaQoSAppliedConditionInner8021pStatus=alaQoSAppliedConditionInner8021pStatus, alaQoSAppliedActionMapGroup=alaQoSAppliedActionMapGroup, alaQoSMIBAppliedNetworkGroupObjects=alaQoSMIBAppliedNetworkGroupObjects, alaQoSConditionDestinationPortEnd=alaQoSConditionDestinationPortEnd, alaQoSConditionDestinationNetworkGroupStatus=alaQoSConditionDestinationNetworkGroupStatus, alaQoSClassifyL2DestinationResultRule=alaQoSClassifyL2DestinationResultRule, alaQoSMIBAppliedRuleObjects=alaQoSMIBAppliedRuleObjects, alaQoSMIBAppliedServiceObjects=alaQoSMIBAppliedServiceObjects, alaQoSConditionIcmpType=alaQoSConditionIcmpType, alaQoSConditionIcmpCodeStatus=alaQoSConditionIcmpCodeStatus, alaQoSPortDefaultQidUrgent=alaQoSPortDefaultQidUrgent, alaQoSAppliedConditionDestinationIpv6Addr=alaQoSAppliedConditionDestinationIpv6Addr, alaQoSClassifyIpProtocol=alaQoSClassifyIpProtocol, alaQoSConditionMulticastNetworkGroupStatus=alaQoSConditionMulticastNetworkGroupStatus, alaQoSSlotProtocolTable=alaQoSSlotProtocolTable, alaQoSConditionSourceIpPortEnd=alaQoSConditionSourceIpPortEnd, alaQoSServiceDestinationIpPortStatus=alaQoSServiceDestinationIpPortStatus, alaQoSActionCounterColor=alaQoSActionCounterColor, alaQoSConditionInner8021p=alaQoSConditionInner8021p, alaQoSMIBMACGroupsObjects=alaQoSMIBMACGroupsObjects, alaQoSNetworkGroupIpAddr=alaQoSNetworkGroupIpAddr, alaQoSSlotBuffersDroppedAverage=alaQoSSlotBuffersDroppedAverage, alaQoSConditionInner8021pEnd=alaQoSConditionInner8021pEnd, alaQoSAppliedRuleLogInterval=alaQoSAppliedRuleLogInterval, alaQoSPortCOS2MaximumBandwidth=alaQoSPortCOS2MaximumBandwidth, alaQoSConditionInnerSourceVlanGroup=alaQoSConditionInnerSourceVlanGroup, alaQoSAppliedActionEntry=alaQoSAppliedActionEntry, alaQoSActionPeakBandwidth=alaQoSActionPeakBandwidth, alaQoSPortCOS5MinimumBandwidth=alaQoSPortCOS5MinimumBandwidth, alaQoSValidityPeriodInterval=alaQoSValidityPeriodInterval, alaQoSSlotMaxBuffers=alaQoSSlotMaxBuffers, alaQoSNetworkGroupStatus=alaQoSNetworkGroupStatus, alaQoSPortCOS1MaximumBandwidth=alaQoSPortCOS1MaximumBandwidth, alaQoSAppliedPortGroupEntry=alaQoSAppliedPortGroupEntry, alaQoSAppliedRuleGroupCountType=alaQoSAppliedRuleGroupCountType, alaQoSServiceSourceUdpPortEnd=alaQoSServiceSourceUdpPortEnd, alaQoSPortMaximumDefaultBuffersStatus=alaQoSPortMaximumDefaultBuffersStatus, alaQoSConfigAppliedClassifyFragments=alaQoSConfigAppliedClassifyFragments, alaQoSAppliedConditionSourceIpAddrStatus=alaQoSAppliedConditionSourceIpAddrStatus, alaQoSMapGroupsTable=alaQoSMapGroupsTable, alaQoSConditionSourceUdpPortStatus=alaQoSConditionSourceUdpPortStatus, alaQoSSlotWredThresholdP0Lower=alaQoSSlotWredThresholdP0Lower, alaQoSAppliedServiceSourceIpPortStatus=alaQoSAppliedServiceSourceIpPortStatus, alaQoSActionSourceRewriteIpMask=alaQoSActionSourceRewriteIpMask, alaQoSAppliedImportSlot=alaQoSAppliedImportSlot, alaQoSAppliedServiceDestinationTcpPortEnd=alaQoSAppliedServiceDestinationTcpPortEnd, alaQoSRuleRowStatus=alaQoSRuleRowStatus, alaQoSStatsReflexiveCorrections=alaQoSStatsReflexiveCorrections, alaQoSPortProtocolClassification=alaQoSPortProtocolClassification, alaQoSAppliedRuleGroupEntry=alaQoSAppliedRuleGroupEntry, alaQoSAppliedConditionTosStatus=alaQoSAppliedConditionTosStatus, alaQoSConditionSource=alaQoSConditionSource, alaQoSAppliedConditionEntry=alaQoSAppliedConditionEntry, alaQoSPortAppliedMaximumDefaultBandwidthStatus=alaQoSPortAppliedMaximumDefaultBandwidthStatus, alaQoSRuleGroupEntry=alaQoSRuleGroupEntry, alaQoSConditionEntry=alaQoSConditionEntry, alaQoSAppliedVlanGroupsName=alaQoSAppliedVlanGroupsName, alaQoSAppliedConditionTos=alaQoSAppliedConditionTos, alaQoSAppliedAction8021p=alaQoSAppliedAction8021p, alaQoSPortGroupsName=alaQoSPortGroupsName, alaQoSAppliedConditionSourceUdpPortEnd=alaQoSAppliedConditionSourceUdpPortEnd, alaQoSClassifyL2DestinationResultDisposition=alaQoSClassifyL2DestinationResultDisposition, alaQoSConditionDlci=alaQoSConditionDlci, alaQoSAppliedValidityPeriodEndHour=alaQoSAppliedValidityPeriodEndHour, alaQoSAppliedActionCIR=alaQoSAppliedActionCIR, alaQoSServiceGroupsStatus=alaQoSServiceGroupsStatus, alaQoSNetworkGroupTable=alaQoSNetworkGroupTable, alaQoSPortProtocolPriorityP0=alaQoSPortProtocolPriorityP0, alaQoSSlotProtocolRowStatus=alaQoSSlotProtocolRowStatus, alaQoSRuleNonGreenCount=alaQoSRuleNonGreenCount, alaQoSPortMaximumSignalledBandwidth=alaQoSPortMaximumSignalledBandwidth, alaQoSMIBStatsObjects=alaQoSMIBStatsObjects, alaQoSValidityPeriodEntry=alaQoSValidityPeriodEntry, alaQoSAppliedServiceName=alaQoSAppliedServiceName, alaQoSAppliedConditionSourceIpPortStatus=alaQoSAppliedConditionSourceIpPortStatus, alaQoSConditionSourceSlot=alaQoSConditionSourceSlot, alaQoSStatsL3EgressDrops=alaQoSStatsL3EgressDrops, alaQoSSlotWredThresholdStatus=alaQoSSlotWredThresholdStatus, alaQoSPortCOS7MaximumBandwidthStatus=alaQoSPortCOS7MaximumBandwidthStatus, alaQoSVlanGroupsStatus=alaQoSVlanGroupsStatus, alaQoSRuleName=alaQoSRuleName, alaQoSConditionDestinationVlan=alaQoSConditionDestinationVlan, alaQoSAppliedServiceProtocol=alaQoSAppliedServiceProtocol, alaQoSVlanGroupsTable=alaQoSVlanGroupsTable, alaQoSConditionDestinationPortGroupStatus=alaQoSConditionDestinationPortGroupStatus, alaQoSValidityPeriodIntervalStatus=alaQoSValidityPeriodIntervalStatus, alaQoSRuleEntry=alaQoSRuleEntry, alaQoSAppliedValidityPeriodEndInterval=alaQoSAppliedValidityPeriodEndInterval, alaQoSConditionDestinationMacGroup=alaQoSConditionDestinationMacGroup, alaQoSActionJitterStatus=alaQoSActionJitterStatus, alaQoSSlotThreshold1Medium=alaQoSSlotThreshold1Medium, alaQoSAppliedValidityPeriodInterval=alaQoSAppliedValidityPeriodInterval, alaQoSAppliedConditionTcpFlagsVal=alaQoSAppliedConditionTcpFlagsVal, alaQoSConfigAppliedDefaultBridgedDisposition=alaQoSConfigAppliedDefaultBridgedDisposition, alaQoSAppliedVlanGroupVlan=alaQoSAppliedVlanGroupVlan, alaQoSAppliedRuleGroupPacketCount=alaQoSAppliedRuleGroupPacketCount, alaQoSVlanGroupsSource=alaQoSVlanGroupsSource, alaQoSAppliedRuleAction=alaQoSAppliedRuleAction, alaQoSSlotProtocol8023Enabled=alaQoSSlotProtocol8023Enabled, alaQoSPortServicingMode=alaQoSPortServicingMode)
mibBuilder.exportSymbols("ALCATEL-IND1-QOS-MIB", alaQoSActionWredMinimumThresholdStatus=alaQoSActionWredMinimumThresholdStatus, alaQoSAppliedRuleGroupsSource=alaQoSAppliedRuleGroupsSource, alaQoSAppliedConditionSourceIpMask=alaQoSAppliedConditionSourceIpMask, alaQoSVlanGroupStatus=alaQoSVlanGroupStatus, alaQoSConditionDestinationUdpPortStatus=alaQoSConditionDestinationUdpPortStatus, alaQoSAppliedValidityPeriodIntervalStatus=alaQoSAppliedValidityPeriodIntervalStatus, alaQoSAppliedVlanGroupObjects=alaQoSAppliedVlanGroupObjects, alaQoSValidityPeriodDaysStatus=alaQoSValidityPeriodDaysStatus, alaQoSAppliedConditionSourceSlot=alaQoSAppliedConditionSourceSlot, alaQoSConditionIpv6Traffic=alaQoSConditionIpv6Traffic, alaQoSAppliedConditionServiceStatus=alaQoSAppliedConditionServiceStatus, alaQoSAppliedConditionDestinationMacGroupStatus=alaQoSAppliedConditionDestinationMacGroupStatus, alaQoSAppliedActionName=alaQoSAppliedActionName, alaQoSActionAlternateGatewayIpAddr=alaQoSActionAlternateGatewayIpAddr, alaQoSAppliedActionPriorityStatus=alaQoSAppliedActionPriorityStatus, alaQoSStatsFlowHits=alaQoSStatsFlowHits, alaQoSAppliedPortGroupsName=alaQoSAppliedPortGroupsName, alaQoSAppliedMapGroupStatus=alaQoSAppliedMapGroupStatus, alaQoSAppliedActionNocache=alaQoSAppliedActionNocache, alaQoSMapGroupsName=alaQoSMapGroupsName, alaQoSActionWredMinimumThreshold=alaQoSActionWredMinimumThreshold, alaQoSQueuePacketsSent=alaQoSQueuePacketsSent, alaQoSMIBAppliedRuleGroupsObjects=alaQoSMIBAppliedRuleGroupsObjects, alaQoSPortCOS3MinimumBandwidth=alaQoSPortCOS3MinimumBandwidth, alaQoSAppliedRuleSource=alaQoSAppliedRuleSource, alaQoSPortFirPrio3EnqBytes=alaQoSPortFirPrio3EnqBytes, alaQoSPortUsedFFPRules=alaQoSPortUsedFFPRules, alaQoSPortAppliedMaximumReservedBandwidth=alaQoSPortAppliedMaximumReservedBandwidth, alaQoSPortQ7PriorityWeight=alaQoSPortQ7PriorityWeight, alaQoSAppliedConditionSourceIpv6AddrStatus=alaQoSAppliedConditionSourceIpv6AddrStatus, alaQoSAppliedConditionDestinationIpv6Mask=alaQoSAppliedConditionDestinationIpv6Mask, alaQoSConfigAppliedDefaultRoutedDisposition=alaQoSConfigAppliedDefaultRoutedDisposition, alaQoSConfigLogLevel=alaQoSConfigLogLevel, alaQoSVlanGroupsObjects=alaQoSVlanGroupsObjects, alaQoSAppliedConditionDestinationTcpPortEnd=alaQoSAppliedConditionDestinationTcpPortEnd, alaQoSPortGroupPort=alaQoSPortGroupPort, alaQoSRuleReflexive=alaQoSRuleReflexive, alaQoSAppliedConditionSourceIpAddr=alaQoSAppliedConditionSourceIpAddr, alaQoSRuleDefaultList=alaQoSRuleDefaultList, alaQoSAppliedActionPIR=alaQoSAppliedActionPIR, alaQoSActionCBSStatus=alaQoSActionCBSStatus, PYSNMP_MODULE_ID=alaQoSMIB, alaQoSAppliedActionMaximumBuffersStatus=alaQoSAppliedActionMaximumBuffersStatus, alaQoSAppliedServiceSourceIpPortEnd=alaQoSAppliedServiceSourceIpPortEnd, alaQoSPortEnqueuingThresholdP2Lower=alaQoSPortEnqueuingThresholdP2Lower, alaQoSAppliedConditionSourceIpPortEnd=alaQoSAppliedConditionSourceIpPortEnd, alaQoSConfigTrustPorts=alaQoSConfigTrustPorts, alaQoSConditionDestinationVlanStatus=alaQoSConditionDestinationVlanStatus, alaQoSAppliedConditionDscpStatus=alaQoSAppliedConditionDscpStatus, alaQoSAppliedActionLatency=alaQoSAppliedActionLatency, alaQoSPortMaximumDefaultDepthStatus=alaQoSPortMaximumDefaultDepthStatus, alaQoSAppliedMACGroupsTable=alaQoSAppliedMACGroupsTable, alaQoSAppliedImportPort=alaQoSAppliedImportPort, alaQoSAppliedAction8021pStatus=alaQoSAppliedAction8021pStatus, alaQoSPortPdiPriorityP0=alaQoSPortPdiPriorityP0, alaQoSSlotFreeBuffers2=alaQoSSlotFreeBuffers2, alaQoSRuleGroupByteCount=alaQoSRuleGroupByteCount, alaQoSConfigUserportShutdown=alaQoSConfigUserportShutdown, alaQoSConditionMulticastNetworkGroup=alaQoSConditionMulticastNetworkGroup, alaQoSAppliedConditionTcpFlags=alaQoSAppliedConditionTcpFlags, alaQoSConditionSourceTcpPortEnd=alaQoSConditionSourceTcpPortEnd, alaQoSServiceRowStatus=alaQoSServiceRowStatus, alaQoSConditionVrfName=alaQoSConditionVrfName, alaQoSPortDEIMapping=alaQoSPortDEIMapping, alaQoSAppliedImportRowStatus=alaQoSAppliedImportRowStatus, alaQoSSlotWredThresholdP3Lower=alaQoSSlotWredThresholdP3Lower, alaQoSConditionServiceGroupStatus=alaQoSConditionServiceGroupStatus, alaQoSAppliedActionMinimumBandwidth=alaQoSAppliedActionMinimumBandwidth, alaQoSQueueMinimumDepth=alaQoSQueueMinimumDepth, alaQoSAppliedValidityPeriodSource=alaQoSAppliedValidityPeriodSource, alaQoSAppliedActionMinimumDepthStatus=alaQoSAppliedActionMinimumDepthStatus, alaQoSActionPriorityStatus=alaQoSActionPriorityStatus, alaQoSConfigFragmentTimeout=alaQoSConfigFragmentTimeout, alaQoSStatsLoadBalanceFlows=alaQoSStatsLoadBalanceFlows, alaQoSAppliedServiceDestinationUdpPortStatus=alaQoSAppliedServiceDestinationUdpPortStatus, alaQoSVlanGroupsName=alaQoSVlanGroupsName, alaQoSConfigClearLog=alaQoSConfigClearLog, alaQoSPortProtocolId=alaQoSPortProtocolId, alaQoSPortMaximumReservedBandwidthStatus=alaQoSPortMaximumReservedBandwidthStatus, alaQoSConfigStatsInterval=alaQoSConfigStatsInterval, alaQoSSlotPcamEnableEthertype=alaQoSSlotPcamEnableEthertype, alaQoSPortPdiPriorityType=alaQoSPortPdiPriorityType, alaQoSConditionTcpFlags=alaQoSConditionTcpFlags, alaQoSConditionDestinationMacMask=alaQoSConditionDestinationMacMask, alaQoSAppliedMapGroupKey=alaQoSAppliedMapGroupKey, alaQoSActionCIRStatus=alaQoSActionCIRStatus, alaQoSQueueType=alaQoSQueueType, alaQoSClassifyIGMPResultRule=alaQoSClassifyIGMPResultRule, alaQoSAppliedConditionIpv6NHStatus=alaQoSAppliedConditionIpv6NHStatus, alaQoSActionMapGroup=alaQoSActionMapGroup, alaQoSClassifyL3ResultRule=alaQoSClassifyL3ResultRule, alaQoSAppliedConditionSourcePortGroup=alaQoSAppliedConditionSourcePortGroup, alaQoSRuleGroupsType=alaQoSRuleGroupsType, alaQoSConfigDEIMapping=alaQoSConfigDEIMapping, alaQoSMIBMapGroupsObjects=alaQoSMIBMapGroupsObjects, alaQoSConditionIpProtocol=alaQoSConditionIpProtocol, alaQoSPortFirPrio3EnqPkts=alaQoSPortFirPrio3EnqPkts, alaQoSStatsL2Events=alaQoSStatsL2Events, alaQoSAppliedVlanGroupVlanEnd=alaQoSAppliedVlanGroupVlanEnd, alaQoSAppliedActionMaximumBandwidthStatus=alaQoSAppliedActionMaximumBandwidthStatus, alaQoSConfigServicingMode=alaQoSConfigServicingMode, alaQoSClassifyDestinationIp=alaQoSClassifyDestinationIp, alaQoSPortUrgentPriorityWeight=alaQoSPortUrgentPriorityWeight, alaQoSMIBPortGroupsObjects=alaQoSMIBPortGroupsObjects, alaQoSPortHighPriorityWeight=alaQoSPortHighPriorityWeight, alaQoSAppliedConditionIcmpType=alaQoSAppliedConditionIcmpType, alaQoSPortPdiTable=alaQoSPortPdiTable, alaQoSAppliedActionMaximumDepthStatus=alaQoSAppliedActionMaximumDepthStatus, alaQoSActionDestinationRewriteNetworkGroupStatus=alaQoSActionDestinationRewriteNetworkGroupStatus, alaQoSActionMapGroupStatus=alaQoSActionMapGroupStatus, alaQoSAppliedActionPeakBandwidth=alaQoSAppliedActionPeakBandwidth, alaQoSPortReset=alaQoSPortReset, alaQoSPortEntry=alaQoSPortEntry, alaQoSPortRowStatus=alaQoSPortRowStatus, alaQoSConfigAppliedDefaultQueues=alaQoSConfigAppliedDefaultQueues, alaQoSConditionSourceIpAddr=alaQoSConditionSourceIpAddr, alaQoSConditionDscp=alaQoSConditionDscp, alaQoSValidityPeriodEndHour=alaQoSValidityPeriodEndHour, alaQoSServiceName=alaQoSServiceName, alaQoSAppliedConditionDestinationPortEnd=alaQoSAppliedConditionDestinationPortEnd, alaQoSAppliedImportPortgroup=alaQoSAppliedImportPortgroup, alaQoSServiceDestinationTcpPort=alaQoSServiceDestinationTcpPort, alaQoSAppliedActionPBSStatus=alaQoSAppliedActionPBSStatus, alaQoSConfigAppliedFragmentTimeout=alaQoSConfigAppliedFragmentTimeout, alaQoSPortCOS3MinimumBandwidthStatus=alaQoSPortCOS3MinimumBandwidthStatus, alaQoSConfigReflexiveTimeout=alaQoSConfigReflexiveTimeout, alaQoSAppliedNetworkGroupsName=alaQoSAppliedNetworkGroupsName, alaQoSPortAppliedMaximumDefaultBuffers=alaQoSPortAppliedMaximumDefaultBuffers, alaQoSConditionDestinationNetworkGroup=alaQoSConditionDestinationNetworkGroup, alaQoSClassifyMulticastIp=alaQoSClassifyMulticastIp, alaQoSPortEnqueuingThresholdP1Upper=alaQoSPortEnqueuingThresholdP1Upper, alaQoSValidityPeriodHour=alaQoSValidityPeriodHour, alaQoSAppliedServiceDestinationIpPortEnd=alaQoSAppliedServiceDestinationIpPortEnd, alaQoSStatsReceivedNIMessages=alaQoSStatsReceivedNIMessages, alaQoSSlotThreshold2Medium=alaQoSSlotThreshold2Medium, alaQoSAppliedRuleReflexive=alaQoSAppliedRuleReflexive, alaQoSMIBConfigObjects=alaQoSMIBConfigObjects, alaQoSPortAppliedMaximumReservedBandwidthStatus=alaQoSPortAppliedMaximumReservedBandwidthStatus, alaQoSPortNonSpoofedCount=alaQoSPortNonSpoofedCount, alaQoSRuleLog=alaQoSRuleLog, alaQoSAppliedConditionIpv6FlowLabel=alaQoSAppliedConditionIpv6FlowLabel, alaQoSNetworkGroupsSource=alaQoSNetworkGroupsSource, alaQoSClassify=alaQoSClassify, alaQoSStatsL3EgressEvents=alaQoSStatsL3EgressEvents, alaQoSActionDestinationRewriteIpMask=alaQoSActionDestinationRewriteIpMask, alaQoSAppliedActionDestinationRewriteIpMask=alaQoSAppliedActionDestinationRewriteIpMask, alaQoSSlotProtocolSsap=alaQoSSlotProtocolSsap, alaQoSMACGroupStatus=alaQoSMACGroupStatus, alaQoSPortFirPrio1EnqBytes=alaQoSPortFirPrio1EnqBytes, alaQoSConditionSourceIpPortStatus=alaQoSConditionSourceIpPortStatus, alaQoSConditionTcpFlagsValStatus=alaQoSConditionTcpFlagsValStatus, alaQoSAppliedConditionDestinationIpMask=alaQoSAppliedConditionDestinationIpMask, alaQoSServiceSourceTcpPortEnd=alaQoSServiceSourceTcpPortEnd, alaQoSPortGroupStatus=alaQoSPortGroupStatus, alaQoSAppliedRuleValidityPeriod=alaQoSAppliedRuleValidityPeriod, alaQoSAppliedActionMinimumBandwidthStatus=alaQoSAppliedActionMinimumBandwidthStatus, alaQoSSlotWredThresholdP2Upper=alaQoSSlotWredThresholdP2Upper, alaQoSPortFirPrio0EnqBytes=alaQoSPortFirPrio0EnqBytes, alaQoSActionDestinationRewriteIpAddr=alaQoSActionDestinationRewriteIpAddr, alaQoSConfigAppliedDefaultMulticastDisposition=alaQoSConfigAppliedDefaultMulticastDisposition, alaQoSValidityPeriodRowStatus=alaQoSValidityPeriodRowStatus, alaQoSAppliedConditionDestinationInterfaceType=alaQoSAppliedConditionDestinationInterfaceType, alaQoSAppliedConditionSourceNetworkGroupStatus=alaQoSAppliedConditionSourceNetworkGroupStatus, alaQoSPortAppliedMaximumDefaultDepth=alaQoSPortAppliedMaximumDefaultDepth, alaQoSActionDropAlgorithm=alaQoSActionDropAlgorithm, alaQoSAppliedActionRowStatus=alaQoSAppliedActionRowStatus, alaQoSSlotThreshold2Low=alaQoSSlotThreshold2Low, alaQoSRuleYellowCount=alaQoSRuleYellowCount, alaQoSAppliedConditionDestinationMacAddrStatus=alaQoSAppliedConditionDestinationMacAddrStatus, alaQoSActionMirrorMode=alaQoSActionMirrorMode, alaQoSActionPermanentGatewayIpAddrStatus=alaQoSActionPermanentGatewayIpAddrStatus, alaQoSStatsClassifierMaxNodes=alaQoSStatsClassifierMaxNodes, alaQoSHwLoopbackSourceMac=alaQoSHwLoopbackSourceMac, alaQoSHwLoopbackType=alaQoSHwLoopbackType, alaQoSAppliedNetworkGroupsEntry=alaQoSAppliedNetworkGroupsEntry, alaQoSAppliedConditionDestinationTcpPort=alaQoSAppliedConditionDestinationTcpPort, alaQoSActionMaximumDepth=alaQoSActionMaximumDepth, alaQoSActionMaximumBandwidthStatus=alaQoSActionMaximumBandwidthStatus, alaQoSAppliedActionDscp=alaQoSAppliedActionDscp, alaQoSSlotCbqThresholdMode=alaQoSSlotCbqThresholdMode, alaQoSClassifyDestinationPort=alaQoSClassifyDestinationPort, alaQoSConditionInnerSourceVlanGroupStatus=alaQoSConditionInnerSourceVlanGroupStatus, alaQoSAppliedActionRedirectSlotStatus=alaQoSAppliedActionRedirectSlotStatus, alaQoSConditionSourceVlanGroup=alaQoSConditionSourceVlanGroup, alaQoSAppliedConditionSourceTcpPortEnd=alaQoSAppliedConditionSourceTcpPortEnd, alaQoSPortSpoofedCount=alaQoSPortSpoofedCount, alaQoSAppliedActionPortdisable=alaQoSAppliedActionPortdisable, alaQoSAppliedConditionSourceTcpPort=alaQoSAppliedConditionSourceTcpPort, alaQoSAppliedServiceGroupTable=alaQoSAppliedServiceGroupTable, alaQoSAppliedValidityPeriodRowStatus=alaQoSAppliedValidityPeriodRowStatus, alaQoSAppliedConditionInner8021pEnd=alaQoSAppliedConditionInner8021pEnd, alaQoSAppliedRuleGroupByteCount=alaQoSAppliedRuleGroupByteCount, alaQoSPortCOS3MaximumBandwidth=alaQoSPortCOS3MaximumBandwidth, alaQoSAppliedActionMirrorPort=alaQoSAppliedActionMirrorPort, alaQoSConfigQ7PriorityWeight=alaQoSConfigQ7PriorityWeight, alaQoSAppliedImportIndex=alaQoSAppliedImportIndex, alaQoSSlotProtocolEthertype=alaQoSSlotProtocolEthertype, alaQoSPortProtocolPriorityP6=alaQoSPortProtocolPriorityP6, alaQoSStatsMulticastDrops=alaQoSStatsMulticastDrops, alaQoSHwLoopbackVlan=alaQoSHwLoopbackVlan, alaQoSConditionDestinationMacGroupStatus=alaQoSConditionDestinationMacGroupStatus, alaQoSMIBPortGroupObjects=alaQoSMIBPortGroupObjects, alaQoSAppliedConditionDestinationMacMask=alaQoSAppliedConditionDestinationMacMask, alaQoSActionSourceRewriteIpAddrStatus=alaQoSActionSourceRewriteIpAddrStatus, alaQoSQueuePacketsDropped=alaQoSQueuePacketsDropped, alaQoSPortFirPrio0OverflowDiscardPkts=alaQoSPortFirPrio0OverflowDiscardPkts, alaQoSClassifySourceVlan=alaQoSClassifySourceVlan, alaQoSClassifySourceIpPort=alaQoSClassifySourceIpPort, alaQoSClassifySourceIp=alaQoSClassifySourceIp, alaQoSRuleCondition=alaQoSRuleCondition, alaQoSPortQueuesFailed=alaQoSPortQueuesFailed, alaQoSQueueAverageBandwidth=alaQoSQueueAverageBandwidth, alaQoSImportPortgroup=alaQoSImportPortgroup, alaQoSPortMaximumSignalledBandwidthStatus=alaQoSPortMaximumSignalledBandwidthStatus, alaQoSStatsL3IngressDrops=alaQoSStatsL3IngressDrops, alaQoSAppliedServiceEntry=alaQoSAppliedServiceEntry, alaQoSConfigStatsResetEgress=alaQoSConfigStatsResetEgress, alaQoSAppliedRuleEnabled=alaQoSAppliedRuleEnabled, alaQoSAppliedConditionIpv6Traffic=alaQoSAppliedConditionIpv6Traffic, alaQoSServiceTable=alaQoSServiceTable, alaQoSPortMaximumDefaultBandwidthStatus=alaQoSPortMaximumDefaultBandwidthStatus, alaQoSVlanGroupsEntry=alaQoSVlanGroupsEntry, alaQoSAppliedCondition8021pStatus=alaQoSAppliedCondition8021pStatus, alaQoSActionDestinationRewriteNetworkGroup=alaQoSActionDestinationRewriteNetworkGroup, alaQoSAppliedActionMapFrom=alaQoSAppliedActionMapFrom, alaQoSPortFirPrio0EnqPkts=alaQoSPortFirPrio0EnqPkts, alaQoSRuleGroupsSource=alaQoSRuleGroupsSource, alaQoSQueueId=alaQoSQueueId, alaQoSNetworkGroupsEntry=alaQoSNetworkGroupsEntry, alaQoSAppliedMACGroupStatus=alaQoSAppliedMACGroupStatus, alaQoSConditionDestinationIpAddrStatus=alaQoSConditionDestinationIpAddrStatus, alaQoSCondition8021pEnd=alaQoSCondition8021pEnd, alaQoSConditionSourcePortGroup=alaQoSConditionSourcePortGroup, alaQoSPortCOS5MaximumBandwidth=alaQoSPortCOS5MaximumBandwidth, alaQoSAppliedConditionDestinationMacGroup=alaQoSAppliedConditionDestinationMacGroup, alaQoSConfigLowPriorityWeight=alaQoSConfigLowPriorityWeight, alaQoSSlotTable=alaQoSSlotTable, alaQoSConfigDefaultQueues=alaQoSConfigDefaultQueues, alaQoSAppliedConditionTcpEstablished=alaQoSAppliedConditionTcpEstablished, alaQoSAppliedActionLoadBalanceGroupStatus=alaQoSAppliedActionLoadBalanceGroupStatus, alaQoSStatsL3IngressEvents=alaQoSStatsL3IngressEvents, alaQoSValidityPeriodEndInterval=alaQoSValidityPeriodEndInterval, alaQoSPortMediumPriorityWeight=alaQoSPortMediumPriorityWeight, alaQoSAppliedActionDestinationRewriteNetworkGroup=alaQoSAppliedActionDestinationRewriteNetworkGroup, alaQoSPortCOS7MinimumBandwidth=alaQoSPortCOS7MinimumBandwidth, alaQoSConditionService=alaQoSConditionService, alaQoSAppliedPortGroupsSource=alaQoSAppliedPortGroupsSource, alaQoSAppliedConditionDestinationIpAddr=alaQoSAppliedConditionDestinationIpAddr, alaQoSAppliedConditionVrfNameStatus=alaQoSAppliedConditionVrfNameStatus, alaQoSConditionDscpStatus=alaQoSConditionDscpStatus, alaQoSAppliedValidityPeriodHour=alaQoSAppliedValidityPeriodHour, alaQoSSlotFreeBuffers1=alaQoSSlotFreeBuffers1, alaQoSAppliedConditionDestinationInterfaceTypeStatus=alaQoSAppliedConditionDestinationInterfaceTypeStatus, alaQoSAppliedActionWredMinimumThresholdStatus=alaQoSAppliedActionWredMinimumThresholdStatus)
mibBuilder.exportSymbols("ALCATEL-IND1-QOS-MIB", alaQoSPortGroupTable=alaQoSPortGroupTable, alaQoSImportPrefix=alaQoSImportPrefix, alaQoSMIBAppliedMACGroupsObjects=alaQoSMIBAppliedMACGroupsObjects, alaQoSSlotPcamTable=alaQoSSlotPcamTable, alaQoSAppliedRuleExcessByteCount=alaQoSAppliedRuleExcessByteCount, alaQoSActionWredMaximumProbability=alaQoSActionWredMaximumProbability, alaQoSAppliedRuleGroupRuleName=alaQoSAppliedRuleGroupRuleName, alaQoSAppliedServiceGroupsStatus=alaQoSAppliedServiceGroupsStatus, alaQoSActionEntry=alaQoSActionEntry, alaQoSActionMirrorSlot=alaQoSActionMirrorSlot, alaQoSAppliedVlanGroupsTable=alaQoSAppliedVlanGroupsTable, alaQoSConditionIpv6FlowLabel=alaQoSConditionIpv6FlowLabel, alaQoSPortQueuesCreated=alaQoSPortQueuesCreated, alaQoSMIBAppliedActionObjects=alaQoSMIBAppliedActionObjects, alaQoSPortCOS2MinimumBandwidth=alaQoSPortCOS2MinimumBandwidth, alaQoSMIBAppliedMapGroupObjects=alaQoSMIBAppliedMapGroupObjects, alaQoSConditionServiceStatus=alaQoSConditionServiceStatus, alaQoSConditionIcmpCode=alaQoSConditionIcmpCode, alaQoSAppliedRuleGroupStatus=alaQoSAppliedRuleGroupStatus, alaQoSServiceGroupEntry=alaQoSServiceGroupEntry, alaQoSPortFirPrio3WredDiscardPkts=alaQoSPortFirPrio3WredDiscardPkts, alaQoSStatsSentNIMessages=alaQoSStatsSentNIMessages, alaQoSMIBServiceObjects=alaQoSMIBServiceObjects, alaQoSActionLoadBalanceGroup=alaQoSActionLoadBalanceGroup, alaQoSRuleMatches=alaQoSRuleMatches, alaQoSAppliedRuleCountType=alaQoSAppliedRuleCountType, alaQoSAppliedNetworkGroupIpAddr=alaQoSAppliedNetworkGroupIpAddr, alaQoSPortLowPriorityWeight=alaQoSPortLowPriorityWeight, alaQoSPortAppliedDefaultQueues=alaQoSPortAppliedDefaultQueues, alaQoSConditionEthertypeStatus=alaQoSConditionEthertypeStatus, alaQoSActionDisposition=alaQoSActionDisposition, alaQoSAppliedActionLoadBalanceGroup=alaQoSAppliedActionLoadBalanceGroup, alaQoSPortCOS0MinimumBandwidthStatus=alaQoSPortCOS0MinimumBandwidthStatus, alaQoSConfigLogConsole=alaQoSConfigLogConsole, alaQoSConfigApply=alaQoSConfigApply, alaQoSPortPdiPriorityP1=alaQoSPortPdiPriorityP1, alaQoSAppliedImportText=alaQoSAppliedImportText, alaQoSRuleGroupsEntry=alaQoSRuleGroupsEntry, alaQoSPortPdiPriorityP3=alaQoSPortPdiPriorityP3, alaQoSAppliedConditionSourceUdpPort=alaQoSAppliedConditionSourceUdpPort, alaQoSPortMaximumDefaultBandwidth=alaQoSPortMaximumDefaultBandwidth, alaQoSVlanGroupVlanEnd=alaQoSVlanGroupVlanEnd, alaQoSActionVPNAccess=alaQoSActionVPNAccess, alaQoSAppliedActionDscpStatus=alaQoSAppliedActionDscpStatus, alaQoSPortGroupPortEnd=alaQoSPortGroupPortEnd, alaQoSVlanGroupObjects=alaQoSVlanGroupObjects, alaQoSPortGroupsStatus=alaQoSPortGroupsStatus, alaQoSSlotBuffersDropped=alaQoSSlotBuffersDropped, alaQoSAppliedRuleRedCount=alaQoSAppliedRuleRedCount, alaQoSAppliedActionSourceRewriteIpAddr=alaQoSAppliedActionSourceRewriteIpAddr, alaQoSAppliedActionCBS=alaQoSAppliedActionCBS, alaQoSConfigMediumPriorityWeight=alaQoSConfigMediumPriorityWeight, alaQoSAppliedConditionIcmpTypeStatus=alaQoSAppliedConditionIcmpTypeStatus, alaQoSActionLatencyStatus=alaQoSActionLatencyStatus, alaQoSPortFreeFFPMasks=alaQoSPortFreeFFPMasks, alaQoSMACGroupsStatus=alaQoSMACGroupsStatus, alaQoSHwLoopbackProfileTable=alaQoSHwLoopbackProfileTable, alaQoSConditionSourceNetworkGroupStatus=alaQoSConditionSourceNetworkGroupStatus, alaQoSConditionSourceTcpPortStatus=alaQoSConditionSourceTcpPortStatus, alaQoSActionMirrorPort=alaQoSActionMirrorPort, alaQoSSlotPcamDsap=alaQoSSlotPcamDsap, alaQoSPortCOS0MaximumBandwidthStatus=alaQoSPortCOS0MaximumBandwidthStatus, alaQoSPortFirPrio0DeqBytes=alaQoSPortFirPrio0DeqBytes, alaQoSConditionSourceSlotStatus=alaQoSConditionSourceSlotStatus, alaQoSQueueMaximumBandwidth=alaQoSQueueMaximumBandwidth, alaQoSConditionIpv6FlowLabelStatus=alaQoSConditionIpv6FlowLabelStatus, alaQoSActionMaximumBuffersStatus=alaQoSActionMaximumBuffersStatus, alaQoSAction8021p=alaQoSAction8021p, alaQoSAppliedRuleGroupsEntry=alaQoSAppliedRuleGroupsEntry, alaQoSSlotThreshold1Low=alaQoSSlotThreshold1Low, alaQoSClassifySourcePort=alaQoSClassifySourcePort, alaQoSConditionEthertype=alaQoSConditionEthertype, alaQoSAppliedActionDestinationRewriteIpAddr=alaQoSAppliedActionDestinationRewriteIpAddr, alaQoSActionPBS=alaQoSActionPBS, alaQoSPortDefaultClassification=alaQoSPortDefaultClassification, alaQoSClassifyMulticastResultDisposition=alaQoSClassifyMulticastResultDisposition, alaQoSServiceSourceTcpPort=alaQoSServiceSourceTcpPort, alaQoSConditionSourcePort=alaQoSConditionSourcePort, alaQoSClassifyL2SourceResultDisposition=alaQoSClassifyL2SourceResultDisposition, alaQoSMIBRuleObjects=alaQoSMIBRuleObjects, alaQoSConditionDestinationIpv6Addr=alaQoSConditionDestinationIpv6Addr, alaQoSServiceDestinationUdpPortStatus=alaQoSServiceDestinationUdpPortStatus, alaQoSAppliedServiceSourceTcpPort=alaQoSAppliedServiceSourceTcpPort, alaQoSPortCOS0MaximumBandwidth=alaQoSPortCOS0MaximumBandwidth, alaQoSAppliedActionJitter=alaQoSAppliedActionJitter, alaQoSRuleGroupMatches=alaQoSRuleGroupMatches, alaQoSPortQ4PriorityWeight=alaQoSPortQ4PriorityWeight, alaQoSMIBGroups=alaQoSMIBGroups, alaQoSPortTrusted=alaQoSPortTrusted, alaQoSActionWredMaximumThresholdStatus=alaQoSActionWredMaximumThresholdStatus, alaQoSConditionMcastIpv6Addr=alaQoSConditionMcastIpv6Addr, alaQoSImportSlot=alaQoSImportSlot, alaQoSPortCOS4MinimumBandwidthStatus=alaQoSPortCOS4MinimumBandwidthStatus, alaQoSMapGroupKey=alaQoSMapGroupKey, alaQoSValidityPeriodHourStatus=alaQoSValidityPeriodHourStatus, alaQoSConditionSourceIpAddrStatus=alaQoSConditionSourceIpAddrStatus, alaQoSClassifyIGMPResultDisposition=alaQoSClassifyIGMPResultDisposition, alaQoSPortQ5PriorityWeight=alaQoSPortQ5PriorityWeight, alaQoSConfig=alaQoSConfig, alaQoSConditionTosStatus=alaQoSConditionTosStatus, alaQoSClassifyClassify=alaQoSClassifyClassify, alaQoSPortFirPrio0WredDiscardPkts=alaQoSPortFirPrio0WredDiscardPkts, alaQoSPortProtocolRowStatus=alaQoSPortProtocolRowStatus, alaQoSSlotWredAverageCounterWeight=alaQoSSlotWredAverageCounterWeight, alaQoSAppliedActionMaximumDepth=alaQoSAppliedActionMaximumDepth, alaQoSSlotProtocolType=alaQoSSlotProtocolType, alaQoSRuleType=alaQoSRuleType, alaQoSAppliedConditionEthertypeStatus=alaQoSAppliedConditionEthertypeStatus, alaQoSMapGroupEntry=alaQoSMapGroupEntry, alaQoSConditionTos=alaQoSConditionTos, alaQoSMapGroupTable=alaQoSMapGroupTable, alaQoSAppliedConditionSourceSlotStatus=alaQoSAppliedConditionSourceSlotStatus, alaQoSAppliedMACGroupsEntry=alaQoSAppliedMACGroupsEntry, alaQoSPortMaximumBandwidth=alaQoSPortMaximumBandwidth, alaQoSActionDestinationRewriteIpAddrStatus=alaQoSActionDestinationRewriteIpAddrStatus, alaQoSPortMaximumBandwidthStatus=alaQoSPortMaximumBandwidthStatus, alaQoSAppliedConditionMulticastIpAddr=alaQoSAppliedConditionMulticastIpAddr, alaQoSConditionSourceMacGroupStatus=alaQoSConditionSourceMacGroupStatus, alaQoSAppliedPortGroupSlot=alaQoSAppliedPortGroupSlot, alaQoSMIBAppliedMACGroupObjects=alaQoSMIBAppliedMACGroupObjects, alaQoSPortCOS6MaximumBandwidthStatus=alaQoSPortCOS6MaximumBandwidthStatus, alaQoSSlotPcamEthertype=alaQoSSlotPcamEthertype, alaQoSAppliedMACGroupsStatus=alaQoSAppliedMACGroupsStatus, alaQoSMapGroupStatus=alaQoSMapGroupStatus, alaQoSAppliedRuleGroupsType=alaQoSAppliedRuleGroupsType, alaQoSPortCOS2MinimumBandwidthStatus=alaQoSPortCOS2MinimumBandwidthStatus, alaQoSAppliedConditionDestinationPortGroup=alaQoSAppliedConditionDestinationPortGroup, alaQoSImportRowStatus=alaQoSImportRowStatus, alaQoSSlotDscpPriority=alaQoSSlotDscpPriority, alaQoSQueueMaximumDepth=alaQoSQueueMaximumDepth, alaQoSConditionIpv6NH=alaQoSConditionIpv6NH, alaQoSPortDefaultQidMedium=alaQoSPortDefaultQidMedium, alaQoSAppliedValidityPeriodHourStatus=alaQoSAppliedValidityPeriodHourStatus, alaQoSAppliedConditionIpv6NH=alaQoSAppliedConditionIpv6NH, alaQoSNetworkGroupsName=alaQoSNetworkGroupsName, alaQoSClassifySourceSlot=alaQoSClassifySourceSlot, alaQoSConditionSourceTcpPort=alaQoSConditionSourceTcpPort, alaQoSAppliedConditionSourceVlanGroup=alaQoSAppliedConditionSourceVlanGroup, alaQoSSlotDscpEntry=alaQoSSlotDscpEntry, alaQoSVlanGroupVlan=alaQoSVlanGroupVlan, alaQoSConditionDestinationIpv6AddrStatus=alaQoSConditionDestinationIpv6AddrStatus, alaQoSAppliedServiceDestinationUdpPortEnd=alaQoSAppliedServiceDestinationUdpPortEnd, alaQoSAppliedConditionTosMask=alaQoSAppliedConditionTosMask, alaQoSActionWredMaximumThreshold=alaQoSActionWredMaximumThreshold, alaQoSPortSlot=alaQoSPortSlot, alaQoSAppliedActionTos=alaQoSAppliedActionTos, alaQoSConditionDestinationTcpPortStatus=alaQoSConditionDestinationTcpPortStatus, alaQoSAppliedCondition8021p=alaQoSAppliedCondition8021p, alaQoSPortCOS6MinimumBandwidth=alaQoSPortCOS6MinimumBandwidth, alaQoSPortProtocolPriorityP5=alaQoSPortProtocolPriorityP5, alaQoSRuleSource=alaQoSRuleSource, alaQoSValidityPeriodMonthsStatus=alaQoSValidityPeriodMonthsStatus, alaQoSPortAppliedMaximumDefaultBandwidth=alaQoSPortAppliedMaximumDefaultBandwidth, alaQoSAppliedMACGroupsSource=alaQoSAppliedMACGroupsSource, alaQoSConditionDlciStatus=alaQoSConditionDlciStatus, alaQoSAppliedConditionSourcePort=alaQoSAppliedConditionSourcePort, alaQoSConditionMulticastIpAddr=alaQoSConditionMulticastIpAddr, alaQoSHwLoopbackProfileStatus=alaQoSHwLoopbackProfileStatus, alaQoSAppliedServiceTable=alaQoSAppliedServiceTable, alaQoSPortGroupsTable=alaQoSPortGroupsTable, alaQoSPortFirPrio0QidDiscardPkts=alaQoSPortFirPrio0QidDiscardPkts, alaQoSPortFirPrio2OverflowDiscardPkts=alaQoSPortFirPrio2OverflowDiscardPkts, alaQoSAppliedConditionEthertype=alaQoSAppliedConditionEthertype, alaQoSAppliedImportTable=alaQoSAppliedImportTable, alaQoSServiceGroupServiceName=alaQoSServiceGroupServiceName, alaQoSPortCOS2MaximumBandwidthStatus=alaQoSPortCOS2MaximumBandwidthStatus, alaQoSConditionDestinationUdpPort=alaQoSConditionDestinationUdpPort, alaQoSAppliedConditionDestinationIpPort=alaQoSAppliedConditionDestinationIpPort, alaQoSAppliedServiceDestinationUdpPort=alaQoSAppliedServiceDestinationUdpPort, alaQoSPortDefaultDSCP=alaQoSPortDefaultDSCP, alaQoSAppliedConditionTcpFlagsStatus=alaQoSAppliedConditionTcpFlagsStatus, alaQoSPortFirPrio1DeqBytes=alaQoSPortFirPrio1DeqBytes, alaQoSAppliedValidityPeriodDays=alaQoSAppliedValidityPeriodDays, alaQoSImportTable=alaQoSImportTable, alaQoSRuleGroupStatus=alaQoSRuleGroupStatus, alaQoSAppliedConditionDscp=alaQoSAppliedConditionDscp, alaQoSSlotPcamEnableDsap=alaQoSSlotPcamEnableDsap, alaQoSConfigLogLines=alaQoSConfigLogLines, alaQoSMapGroupValue=alaQoSMapGroupValue, alaQoSConfigQ4PriorityWeight=alaQoSConfigQ4PriorityWeight, alaQoSMIBAppliedServiceGroupObjects=alaQoSMIBAppliedServiceGroupObjects, alaQoSAppliedConditionDestinationIpPortStatus=alaQoSAppliedConditionDestinationIpPortStatus, alaQoSPortCOS7MinimumBandwidthStatus=alaQoSPortCOS7MinimumBandwidthStatus, alaQoSPortEnqueuingThresholdP1Lower=alaQoSPortEnqueuingThresholdP1Lower, alaQoSConfigHighPriorityWeight=alaQoSConfigHighPriorityWeight, alaQoSAppliedActionMapGroupStatus=alaQoSAppliedActionMapGroupStatus, alaQoSQueuePort=alaQoSQueuePort, alaQoSConditionDestinationPortGroup=alaQoSConditionDestinationPortGroup, alaQoSAppliedActionDropAlgorithm=alaQoSAppliedActionDropAlgorithm, alaQoSAppliedRuleSave=alaQoSAppliedRuleSave, alaQoSAppliedRuleRowStatus=alaQoSAppliedRuleRowStatus, alaQoSRuleGroupTable=alaQoSRuleGroupTable, alaQoSMIBPortObjects=alaQoSMIBPortObjects, alaQoSAppliedActionWredMinimumThreshold=alaQoSAppliedActionWredMinimumThreshold, alaQoSSlotWredThresholdP1Upper=alaQoSSlotWredThresholdP1Upper, alaQoSPortPdiEntry=alaQoSPortPdiEntry, alaQoSAppliedActionJitterStatus=alaQoSAppliedActionJitterStatus, alaQoSPortAppliedMaximumDefaultBuffersStatus=alaQoSPortAppliedMaximumDefaultBuffersStatus, alaQoSAppliedRuleGroupMatches=alaQoSAppliedRuleGroupMatches, alaQoSPortFirPrio2WredDiscardPkts=alaQoSPortFirPrio2WredDiscardPkts, alaQoSAppliedRuleYellowCount=alaQoSAppliedRuleYellowCount, alaQoSAppliedConditionTable=alaQoSAppliedConditionTable, alaQoSMACGroupTable=alaQoSMACGroupTable, alaQoSPortEnqueuingThresholdStatus=alaQoSPortEnqueuingThresholdStatus, alaQoSClassifyDestinationIpPort=alaQoSClassifyDestinationIpPort, alaQoSPortProtocolPriorityP1=alaQoSPortProtocolPriorityP1, alaQoSRuleTrapEvents=alaQoSRuleTrapEvents, alaQoSSlotPcamEnable8023=alaQoSSlotPcamEnable8023, alaQoSSlotProtocolDsap=alaQoSSlotProtocolDsap, alaQoSPortCOS4MinimumBandwidth=alaQoSPortCOS4MinimumBandwidth, alaQoSActionTable=alaQoSActionTable, alaQoSAppliedServiceSourceTcpPortEnd=alaQoSAppliedServiceSourceTcpPortEnd, alaQoSAppliedConditionSourceIpPort=alaQoSAppliedConditionSourceIpPort, alaQoSPortEnqueuingThresholdP3Upper=alaQoSPortEnqueuingThresholdP3Upper, alaQoSMIBCompliance=alaQoSMIBCompliance, alaQoSConditionSourceUdpPort=alaQoSConditionSourceUdpPort, alaQoSAppliedRuleCondition=alaQoSAppliedRuleCondition, alaQoSAppliedNetworkGroupStatus=alaQoSAppliedNetworkGroupStatus, alaQoSAppliedServiceDestinationTcpPortStatus=alaQoSAppliedServiceDestinationTcpPortStatus, alaQoSAppliedValidityPeriodName=alaQoSAppliedValidityPeriodName, alaQoSPortGroupsSource=alaQoSPortGroupsSource, alaQoSPortPdiPriorityP5=alaQoSPortPdiPriorityP5, alaQoSPortMaximumDefaultBuffers=alaQoSPortMaximumDefaultBuffers, alaQoSAppliedActionMirrorMode=alaQoSAppliedActionMirrorMode, alaQoSPortEnqueuingThresholdP3Lower=alaQoSPortEnqueuingThresholdP3Lower, alaQoSAppliedConditionDestinationNetworkGroup=alaQoSAppliedConditionDestinationNetworkGroup, alaQoSVlanGroupTable=alaQoSVlanGroupTable, alaQoSPortAppliedEnabled=alaQoSPortAppliedEnabled, alaQoSAppliedNetworkGroupTable=alaQoSAppliedNetworkGroupTable, alaQoSConfigUrgentPriorityWeight=alaQoSConfigUrgentPriorityWeight, alaQoSPortFirPrio1WredDiscardPkts=alaQoSPortFirPrio1WredDiscardPkts, alaQoSConditionDestinationInterfaceType=alaQoSConditionDestinationInterfaceType, alaQoSAction8021pStatus=alaQoSAction8021pStatus, alaQoSStatsFailedNIMessages=alaQoSStatsFailedNIMessages, alaQoSRuleLogInterval=alaQoSRuleLogInterval, alaQoSPortDefaultQueues=alaQoSPortDefaultQueues, alaQoSAppliedRuleMatches=alaQoSAppliedRuleMatches, alaQoSPortTable=alaQoSPortTable, alaQoSConfigAppliedUserportShutdown=alaQoSConfigAppliedUserportShutdown, alaQoSQueueEntry=alaQoSQueueEntry, alaQoSSlotPcamEnableSsap=alaQoSSlotPcamEnableSsap, alaQoSRuleGreenCount=alaQoSRuleGreenCount, alaQoSAppliedActionWredMaximumThreshold=alaQoSAppliedActionWredMaximumThreshold, alaQoSConfigQ6PriorityWeight=alaQoSConfigQ6PriorityWeight, alaQoSConfigQMPage=alaQoSConfigQMPage, alaQoSConfigEnabled=alaQoSConfigEnabled, alaQoSPortPdiPriorityP2=alaQoSPortPdiPriorityP2, alaQoSConditionSourceUdpPortEnd=alaQoSConditionSourceUdpPortEnd, alaQoSAppliedNetworkGroupEntry=alaQoSAppliedNetworkGroupEntry, alaQoSConfigAppliedReflfexiveTimeout=alaQoSConfigAppliedReflfexiveTimeout, alaQoSSlotThreshold2High=alaQoSSlotThreshold2High, alaQoSPortPdiId=alaQoSPortPdiId, alaQoSRuleGroupPacketCount=alaQoSRuleGroupPacketCount, alaQoSMACGroupsTable=alaQoSMACGroupsTable)
mibBuilder.exportSymbols("ALCATEL-IND1-QOS-MIB", alaQoSMIBClassifyObjects=alaQoSMIBClassifyObjects, alaQoSAppliedMapGroupEntry=alaQoSAppliedMapGroupEntry, alaQoSRuleActive=alaQoSRuleActive, alaQoSAppliedActionSourceRewriteIpAddrStatus=alaQoSAppliedActionSourceRewriteIpAddrStatus, alaQoSActionDscp=alaQoSActionDscp, alaQoSSlotProtocolId=alaQoSSlotProtocolId, alaQoSPortAppliedMaximumSignalledBandwidthStatus=alaQoSPortAppliedMaximumSignalledBandwidthStatus, alaQoSServiceDestinationUdpPortEnd=alaQoSServiceDestinationUdpPortEnd, alaQoSMIBRuleGroupsObjects=alaQoSMIBRuleGroupsObjects, alaQoSConditionVrfNameStatus=alaQoSConditionVrfNameStatus, alaQoSConditionDestinationIpAddr=alaQoSConditionDestinationIpAddr, alaQoSAppliedRuleActive=alaQoSAppliedRuleActive, alaQoSActionWredMaximumProbabilityStatus=alaQoSActionWredMaximumProbabilityStatus, alaQoSPortCOS6MaximumBandwidth=alaQoSPortCOS6MaximumBandwidth, alaQoSServiceDestinationIpPortEnd=alaQoSServiceDestinationIpPortEnd, alaQoSPortProtocolPriorityP4=alaQoSPortProtocolPriorityP4, alaQoSConfigQMMACGroup=alaQoSConfigQMMACGroup, alaQoSAppliedServiceSourceUdpPortStatus=alaQoSAppliedServiceSourceUdpPortStatus, alaQoSConditionSourceIpMask=alaQoSConditionSourceIpMask, alaQoSConfigDEIMarking=alaQoSConfigDEIMarking, alaQoSHwLoopbackProfileRowStatus=alaQoSHwLoopbackProfileRowStatus, alaQoSServiceSource=alaQoSServiceSource, alaQoSMIBRuleGroupObjects=alaQoSMIBRuleGroupObjects, alaQoSConfigFlowTimeout=alaQoSConfigFlowTimeout, alaQoSConfigAppliedFlowTimeout=alaQoSConfigAppliedFlowTimeout, alaQoSAppliedActionTosStatus=alaQoSAppliedActionTosStatus, alaQoSConfigAppliedNatTimeout=alaQoSConfigAppliedNatTimeout, alaQoSServiceGroupStatus=alaQoSServiceGroupStatus, alaQoSServiceGroupsName=alaQoSServiceGroupsName, alaQoSAppliedValidityPeriodMonths=alaQoSAppliedValidityPeriodMonths, alaQoSAppliedConditionSourceVlanGroupStatus=alaQoSAppliedConditionSourceVlanGroupStatus, alaQoSConfigRevert=alaQoSConfigRevert, alaQoSPortCurrentBandwidth=alaQoSPortCurrentBandwidth, alaQoSAppliedActionCBSStatus=alaQoSAppliedActionCBSStatus, alaQoSRuleGroupsStatus=alaQoSRuleGroupsStatus, alaQoSPortFirPrio1QidDiscardPkts=alaQoSPortFirPrio1QidDiscardPkts, alaQoSAppliedActionPermanentGatewayIpAddr=alaQoSAppliedActionPermanentGatewayIpAddr, alaQoSAppliedActionVPNAccess=alaQoSAppliedActionVPNAccess, alaQoSPortQueuesPreempted=alaQoSPortQueuesPreempted, alaQoSClassifyDscp=alaQoSClassifyDscp, alaQoSQueueTable=alaQoSQueueTable, alaQoSRulePrecedence=alaQoSRulePrecedence, alaQoSMIBMACGroupObjects=alaQoSMIBMACGroupObjects, alaQoSPortMaximumIngBandwidthStatus=alaQoSPortMaximumIngBandwidthStatus, alaQoSSlotPcamSsap=alaQoSSlotPcamSsap, alaQoSActionMaximumBuffers=alaQoSActionMaximumBuffers, alaQoSConditionTcpFlagsStatus=alaQoSConditionTcpFlagsStatus, alaQoSImportText=alaQoSImportText, alaQoSAppliedMapGroupTable=alaQoSAppliedMapGroupTable, alaQoSStatsMulticastEvents=alaQoSStatsMulticastEvents, alaQoSPortReservedBandwidth=alaQoSPortReservedBandwidth, alaQoSMIBConformance=alaQoSMIBConformance, alaQoSActionLatency=alaQoSActionLatency, alaQoSAppliedConditionIpv6FlowLabelStatus=alaQoSAppliedConditionIpv6FlowLabelStatus, alaQoSConditionDscpEnd=alaQoSConditionDscpEnd, alaQoSAppliedConditionDscpEnd=alaQoSAppliedConditionDscpEnd, alaQoSAppliedMACGroupsName=alaQoSAppliedMACGroupsName, alaQoSPortFirPrio2EnqPkts=alaQoSPortFirPrio2EnqPkts, alaQoSPortCOS4MaximumBandwidthStatus=alaQoSPortCOS4MaximumBandwidthStatus, alaQoSSlotPcamEntry=alaQoSSlotPcamEntry, alaQoSRuleRedCount=alaQoSRuleRedCount, alaQoSConditionSourceVlan=alaQoSConditionSourceVlan, alaQoSValidityPeriodTable=alaQoSValidityPeriodTable, alaQoSAppliedConditionSourceUdpPortStatus=alaQoSAppliedConditionSourceUdpPortStatus, alaQoSAppliedValidityPeriodTable=alaQoSAppliedValidityPeriodTable, alaQoSSlotSlice=alaQoSSlotSlice, alaQoSConditionMulticastIpMask=alaQoSConditionMulticastIpMask, alaQoSSlotCbqThresholdP1=alaQoSSlotCbqThresholdP1, alaQoSConditionDestinationTcpPortEnd=alaQoSConditionDestinationTcpPortEnd, alaQoSRuleGroupsTable=alaQoSRuleGroupsTable, alaQoSAppliedRuleGroupsName=alaQoSAppliedRuleGroupsName, alaQoSStatsMulticastMatches=alaQoSStatsMulticastMatches, alaQoSActionName=alaQoSActionName, alaQoSActionMinimumBandwidth=alaQoSActionMinimumBandwidth, alaQoSConditionInner8021pStatus=alaQoSConditionInner8021pStatus, alaQoSAppliedConditionTcpFlagsMaskStatus=alaQoSAppliedConditionTcpFlagsMaskStatus, alaQoSMIBAppliedConditionObjects=alaQoSMIBAppliedConditionObjects, alaQoSServiceDestinationTcpPortEnd=alaQoSServiceDestinationTcpPortEnd, alaQoSAppliedConditionInnerSourceVlanGroupStatus=alaQoSAppliedConditionInnerSourceVlanGroupStatus, alaQoSMACGroupsEntry=alaQoSMACGroupsEntry, alaQoSAppliedRuleNonRedCount=alaQoSAppliedRuleNonRedCount, alaQoSAppliedConditionDlciStatus=alaQoSAppliedConditionDlciStatus, alaQoSStatsClassifierMaxDepth=alaQoSStatsClassifierMaxDepth, alaQoSConditionSourceInterfaceType=alaQoSConditionSourceInterfaceType, alaQoSAppliedNetworkGroupsTable=alaQoSAppliedNetworkGroupsTable, alaQoSPortFirPrio0DeqPkts=alaQoSPortFirPrio0DeqPkts, alaQoSAppliedActionSourceRewriteNetworkGroupStatus=alaQoSAppliedActionSourceRewriteNetworkGroupStatus, alaQoSPortProtocolTable=alaQoSPortProtocolTable, alaQoSAppliedRuleExcessPacketCount=alaQoSAppliedRuleExcessPacketCount, alaQoSRuleEnforced=alaQoSRuleEnforced, alaQoSAppliedConditionSource=alaQoSAppliedConditionSource, alaQoSActionCIR=alaQoSActionCIR, alaQoSAppliedRuleGroupsEnabled=alaQoSAppliedRuleGroupsEnabled, alaQoSConditionDestinationInterfaceTypeStatus=alaQoSConditionDestinationInterfaceTypeStatus, alaQoSAppliedPortGroupTable=alaQoSAppliedPortGroupTable, alaQoSCondition8021p=alaQoSCondition8021p, alaQoSConfigDefaultRoutedDisposition=alaQoSConfigDefaultRoutedDisposition, alaQoSAppliedRuleLog=alaQoSAppliedRuleLog, alaQoSAppliedConditionDestinationMacAddr=alaQoSAppliedConditionDestinationMacAddr, alaQoSAppliedConditionDestinationUdpPort=alaQoSAppliedConditionDestinationUdpPort, alaQoSNetworkGroupsTable=alaQoSNetworkGroupsTable, alaQoSAppliedActionWredMaximumProbability=alaQoSAppliedActionWredMaximumProbability, alaQoSActionRedirectAgg=alaQoSActionRedirectAgg, alaQoSPortFirPrio2DeqPkts=alaQoSPortFirPrio2DeqPkts, alaQoSAppliedValidityPeriodMonthsStatus=alaQoSAppliedValidityPeriodMonthsStatus, alaQoSClassifySourceMac=alaQoSClassifySourceMac, alaQoSConditionSourceNetworkGroup=alaQoSConditionSourceNetworkGroup, alaQoSAppliedServiceGroupsSource=alaQoSAppliedServiceGroupsSource, alaQoSMACGroupEntry=alaQoSMACGroupEntry, alaQoSAppliedActionTable=alaQoSAppliedActionTable, alaQoSStatsBadFragments=alaQoSStatsBadFragments, alaQoSAppliedServiceSourceUdpPort=alaQoSAppliedServiceSourceUdpPort, alaQoSAppliedMapGroupsName=alaQoSAppliedMapGroupsName, alaQoSRuleCountType=alaQoSRuleCountType, alaQoSAppliedVlanGroupEntry=alaQoSAppliedVlanGroupEntry, alaQoSServiceSourceIpPortEnd=alaQoSServiceSourceIpPortEnd, alaQoSConfigReset=alaQoSConfigReset, alaQoSAppliedConditionDestinationNetworkGroupStatus=alaQoSAppliedConditionDestinationNetworkGroupStatus, alaQoSServiceDestinationIpPort=alaQoSServiceDestinationIpPort, alaQoSAppliedServiceGroupEntry=alaQoSAppliedServiceGroupEntry, alaQoSMIBMapGroupObjects=alaQoSMIBMapGroupObjects, alaQoSServiceSourceTcpPortStatus=alaQoSServiceSourceTcpPortStatus, alaQoSConditionDestinationSlot=alaQoSConditionDestinationSlot, alaQoSHwLoopbackPort=alaQoSHwLoopbackPort, alaQoSConditionName=alaQoSConditionName, alaQoSAppliedPortGroupStatus=alaQoSAppliedPortGroupStatus, alaQoSStatsL2Drops=alaQoSStatsL2Drops, alaQoSServiceSourceIpPortStatus=alaQoSServiceSourceIpPortStatus, alaQoSAppliedActionWredMaximumProbabilityStatus=alaQoSAppliedActionWredMaximumProbabilityStatus, alaQoSAppliedConditionMulticastIpAddrStatus=alaQoSAppliedConditionMulticastIpAddrStatus, alaQoSAppliedConditionDestinationSlotStatus=alaQoSAppliedConditionDestinationSlotStatus, alaQoSSlotHighDensity=alaQoSSlotHighDensity, alaQoSConditionDestinationMacAddr=alaQoSConditionDestinationMacAddr, alaQoSActionPriority=alaQoSActionPriority, alaQoSAppliedRuleGroupsStatus=alaQoSAppliedRuleGroupsStatus, alaQoSQueueMaxLength=alaQoSQueueMaxLength, alaQoSConditionDestinationIpPortEnd=alaQoSConditionDestinationIpPortEnd, alaQoSPortEnqueuingThresholdP2Upper=alaQoSPortEnqueuingThresholdP2Upper, alaQoSActionMapTo=alaQoSActionMapTo, alaQoSAppliedRuleGreenCount=alaQoSAppliedRuleGreenCount, alaQoSValidityPeriodName=alaQoSValidityPeriodName, alaQoSConditionMcastIpv6Mask=alaQoSConditionMcastIpv6Mask, alaQoSAppliedCondition8021pEnd=alaQoSAppliedCondition8021pEnd, alaQoSAppliedServiceDestinationTcpPort=alaQoSAppliedServiceDestinationTcpPort, alaQoSAppliedConditionSourceNetworkGroup=alaQoSAppliedConditionSourceNetworkGroup, alaQoSPortProtocolPriorityP2=alaQoSPortProtocolPriorityP2, alaQoSPortInterfaceType=alaQoSPortInterfaceType, alaQoSConfigAutoPhones=alaQoSConfigAutoPhones, alaQoSAppliedImportPrecedence=alaQoSAppliedImportPrecedence, alaQoSAppliedNetworkGroupsStatus=alaQoSAppliedNetworkGroupsStatus, alaQoSAppliedConditionDestinationIpv6AddrStatus=alaQoSAppliedConditionDestinationIpv6AddrStatus, alaQoSPortUsedFFPMasks=alaQoSPortUsedFFPMasks, alaQoSConditionDestinationIpPortStatus=alaQoSConditionDestinationIpPortStatus, alaQoSActionAlternateGatewayIpAddrStatus=alaQoSActionAlternateGatewayIpAddrStatus, alaQoSQueuePortId=alaQoSQueuePortId, alaQoSConditionMulticastIpAddrStatus=alaQoSConditionMulticastIpAddrStatus, alaQoSStatsL3EgressMatches=alaQoSStatsL3EgressMatches, alaQoSSlotEntry=alaQoSSlotEntry, alaQoSAppliedConditionInnerSourceVlan=alaQoSAppliedConditionInnerSourceVlan, alaQoSAppliedImportPortend=alaQoSAppliedImportPortend, alaQoSAppliedPortGroupsTable=alaQoSAppliedPortGroupsTable, alaQoSActionDscpStatus=alaQoSActionDscpStatus, alaQoSAppliedActionLatencyStatus=alaQoSAppliedActionLatencyStatus, alaQoSHwLoopbackProfileEntry=alaQoSHwLoopbackProfileEntry, alaQoSMIBCompliances=alaQoSMIBCompliances, alaQoSQueueAction=alaQoSQueueAction, alaQoSSlotWredThresholdP1Lower=alaQoSSlotWredThresholdP1Lower, alaQoSSlotType=alaQoSSlotType, alaQoSAppliedValidityPeriodEntry=alaQoSAppliedValidityPeriodEntry, alaQoSRuleSave=alaQoSRuleSave, alaQoSServiceGroupTable=alaQoSServiceGroupTable, alaQoSConditionDscpMask=alaQoSConditionDscpMask, alaQoSAppliedConditionDscpMask=alaQoSAppliedConditionDscpMask, alaQoSAppliedActionAlternateGatewayIpAddr=alaQoSAppliedActionAlternateGatewayIpAddr, alaQoSAppliedActionPermanentGatewayIpAddrStatus=alaQoSAppliedActionPermanentGatewayIpAddrStatus, alaQoSConditionSourceVlanGroupStatus=alaQoSConditionSourceVlanGroupStatus, alaQoSActionPIR=alaQoSActionPIR, alaQoSPortMaximumDefaultDepth=alaQoSPortMaximumDefaultDepth, alaQoSClassifyL2SourceResultRule=alaQoSClassifyL2SourceResultRule, alaQoSConditionDestinationMacAddrStatus=alaQoSConditionDestinationMacAddrStatus, alaQoSActionMinimumBandwidthStatus=alaQoSActionMinimumBandwidthStatus, alaQoSActionSourceRewriteNetworkGroupStatus=alaQoSActionSourceRewriteNetworkGroupStatus, alaQoSMIBAppliedNetworkGroupsObjects=alaQoSMIBAppliedNetworkGroupsObjects, alaQoSPortCOS1MinimumBandwidth=alaQoSPortCOS1MinimumBandwidth, alaQoSAppliedConditionSourceMacMask=alaQoSAppliedConditionSourceMacMask, alaQoSAppliedRuleGroupTable=alaQoSAppliedRuleGroupTable, alaQoSAppliedPortGroupsEntry=alaQoSAppliedPortGroupsEntry, alaQoSConfigAutoNMS=alaQoSConfigAutoNMS, alaQoSImportEntry=alaQoSImportEntry, alaQoSServiceSourceUdpPort=alaQoSServiceSourceUdpPort, alaQoSConfigForwardLog=alaQoSConfigForwardLog, alaQoSAppliedRuleTable=alaQoSAppliedRuleTable, alaQoSAppliedImportPrefix=alaQoSAppliedImportPrefix, alaQoSPortGroupsEntry=alaQoSPortGroupsEntry, alaQoSPortFirPrio3DeqBytes=alaQoSPortFirPrio3DeqBytes, alaQoSAppliedMapGroupKeyEnd=alaQoSAppliedMapGroupKeyEnd, alaQoSServiceGroupsSource=alaQoSServiceGroupsSource, alaQoSAppliedConditionMcastIpv6AddrStatus=alaQoSAppliedConditionMcastIpv6AddrStatus, alaQoSPortPdiPriorityP7=alaQoSPortPdiPriorityP7, alaQoSConditionRowStatus=alaQoSConditionRowStatus, alaQoSAppliedServiceGroupsTable=alaQoSAppliedServiceGroupsTable, alaQoSAppliedConditionServiceGroup=alaQoSAppliedConditionServiceGroup, alaQoSPortCOS5MaximumBandwidthStatus=alaQoSPortCOS5MaximumBandwidthStatus, alaQoSMIBAppliedPortGroupsObjects=alaQoSMIBAppliedPortGroupsObjects, alaQoSPortGroupSlot=alaQoSPortGroupSlot, alaQoSActionRedirectSlot=alaQoSActionRedirectSlot, alaQoSAppliedConditionSourceVlan=alaQoSAppliedConditionSourceVlan, alaQoSPortDEIMarking=alaQoSPortDEIMarking, alaQoSPortPort=alaQoSPortPort, alaQoSPortGroupEntry=alaQoSPortGroupEntry, alaQoSPortCOS7MaximumBandwidth=alaQoSPortCOS7MaximumBandwidth, alaQoSConditionDestinationPort=alaQoSConditionDestinationPort, alaQoSConfigUserportFilter=alaQoSConfigUserportFilter, alaQoSAppliedRulePacketCount=alaQoSAppliedRulePacketCount, alaQoSAppliedServiceDestinationIpPortStatus=alaQoSAppliedServiceDestinationIpPortStatus, alaQoSAppliedServiceSourceUdpPortEnd=alaQoSAppliedServiceSourceUdpPortEnd, alaQoSConditionDestinationUdpPortEnd=alaQoSConditionDestinationUdpPortEnd, alaQoSPortMaximumReservedBandwidth=alaQoSPortMaximumReservedBandwidth, alaQoSPortCOS0MinimumBandwidth=alaQoSPortCOS0MinimumBandwidth, alaQoSPortDefaultQidLow=alaQoSPortDefaultQidLow, alaQoSClassifyDestinationVlan=alaQoSClassifyDestinationVlan, alaQoSAppliedMACGroupEntry=alaQoSAppliedMACGroupEntry, alaQoSMIBAppliedServiceGroupsObjects=alaQoSMIBAppliedServiceGroupsObjects, alaQoSAppliedActionCIRStatus=alaQoSAppliedActionCIRStatus, alaQoSRuleNonRedCount=alaQoSRuleNonRedCount, alaQoSMIBServiceGroupsObjects=alaQoSMIBServiceGroupsObjects, alaQoSMapGroupsEntry=alaQoSMapGroupsEntry, alaQoSPortDefaultQidHigh=alaQoSPortDefaultQidHigh, alaQoSAppliedActionMaximumBuffers=alaQoSAppliedActionMaximumBuffers, alaQoSSlotSlot=alaQoSSlotSlot, alaQoSAppliedActionPBS=alaQoSAppliedActionPBS, alaQoSValidityPeriodSource=alaQoSValidityPeriodSource, alaQoSConditionServiceGroup=alaQoSConditionServiceGroup, alaQoSPortFirPrio1OverflowDiscardPkts=alaQoSPortFirPrio1OverflowDiscardPkts, alaQoSSlotWredThresholdP3Upper=alaQoSSlotWredThresholdP3Upper, alaQoSActionSource=alaQoSActionSource, alaQoSAppliedMACGroupMacAddr=alaQoSAppliedMACGroupMacAddr, alaQoSAppliedNetworkGroupIpMask=alaQoSAppliedNetworkGroupIpMask, alaQoSPortFloodQid=alaQoSPortFloodQid, alaQoSConfigNatTimeout=alaQoSConfigNatTimeout, alaQoSRuleGroupsName=alaQoSRuleGroupsName, alaQoSPortFirPrio1EnqPkts=alaQoSPortFirPrio1EnqPkts, alaQoSConditionMcastIpv6AddrStatus=alaQoSConditionMcastIpv6AddrStatus, alaQoSConditionInnerSourceVlanStatus=alaQoSConditionInnerSourceVlanStatus, alaQoSSlotPcam8023Enabled=alaQoSSlotPcam8023Enabled, alaQoSConditionSourceMacGroup=alaQoSConditionSourceMacGroup, alaQoSConditionSourceIpPort=alaQoSConditionSourceIpPort, alaQoSConditionSourceIpv6Mask=alaQoSConditionSourceIpv6Mask, alaQoSActionPortdisable=alaQoSActionPortdisable, alaQoSSlotWredThresholdP2Lower=alaQoSSlotWredThresholdP2Lower, alaQoSPortCOS1MaximumBandwidthStatus=alaQoSPortCOS1MaximumBandwidthStatus, alaQoSPortQueues=alaQoSPortQueues, alaQoSValidityPeriodDays=alaQoSValidityPeriodDays, alaQoSConditionDestinationIpPort=alaQoSConditionDestinationIpPort)
mibBuilder.exportSymbols("ALCATEL-IND1-QOS-MIB", alaQoSStatsNonSpoofedEvents=alaQoSStatsNonSpoofedEvents, alaQoSPortProtocolPriorityP3=alaQoSPortProtocolPriorityP3, alaQoSSlotPcamEnableEntry=alaQoSSlotPcamEnableEntry, alaQoSAppliedPortGroupPortEnd=alaQoSAppliedPortGroupPortEnd, alaQoSActionRedirectSlotStatus=alaQoSActionRedirectSlotStatus, alaQoSAppliedConditionSourceMacGroup=alaQoSAppliedConditionSourceMacGroup, alaQoSConfigAppliedUserportFilter=alaQoSConfigAppliedUserportFilter, alaQoSPortPdiPriorityP6=alaQoSPortPdiPriorityP6, alaQoSAppliedConditionSourceVlanStatus=alaQoSAppliedConditionSourceVlanStatus, alaQoSAppliedServiceGroupServiceName=alaQoSAppliedServiceGroupServiceName, alaQoSPortEnabled=alaQoSPortEnabled, alaQoSAppliedActionDestinationRewriteNetworkGroupStatus=alaQoSAppliedActionDestinationRewriteNetworkGroupStatus, alaQoSAppliedActionMirrorSlot=alaQoSAppliedActionMirrorSlot, alaQoSRuleExcessByteCount=alaQoSRuleExcessByteCount, alaQoSAppliedConditionMulticastIpMask=alaQoSAppliedConditionMulticastIpMask, alaQoSConditionDestinationIpMask=alaQoSConditionDestinationIpMask, alaQoSRuleExcessPacketCount=alaQoSRuleExcessPacketCount, alaQoSServiceDestinationTcpPortStatus=alaQoSServiceDestinationTcpPortStatus, alaQoSQueuePriority=alaQoSQueuePriority, alaQoSConditionSourceMacMask=alaQoSConditionSourceMacMask, alaQoSMACGroupMacAddr=alaQoSMACGroupMacAddr, alaQoSPortFirPrio1DeqPkts=alaQoSPortFirPrio1DeqPkts, alaQoSAppliedMapGroupsStatus=alaQoSAppliedMapGroupsStatus, alaQoSNetworkGroupEntry=alaQoSNetworkGroupEntry, alaQoSPortFirPrio3QidDiscardPkts=alaQoSPortFirPrio3QidDiscardPkts, alaQoSQueueAverageLength=alaQoSQueueAverageLength, alaQoSPortProtocolEntry=alaQoSPortProtocolEntry, alaQoSPortPdiPriorityP4=alaQoSPortPdiPriorityP4, alaQoSHwLoopbackProfileName=alaQoSHwLoopbackProfileName, alaQoSMIBConditionObjects=alaQoSMIBConditionObjects, alaQoSAppliedPortGroupsStatus=alaQoSAppliedPortGroupsStatus, alaQoSAppliedActionMaximumBandwidth=alaQoSAppliedActionMaximumBandwidth, alaQoSAppliedConditionService=alaQoSAppliedConditionService, alaQoSAppliedMapGroupsSource=alaQoSAppliedMapGroupsSource, alaQoSConfigClassifyl3Bridged=alaQoSConfigClassifyl3Bridged, alaQoSStatsDropServicesEvents=alaQoSStatsDropServicesEvents, alaQoSAppliedConditionDestinationVlan=alaQoSAppliedConditionDestinationVlan, alaQoSServiceEntry=alaQoSServiceEntry, alaQoSAppliedActionMinimumDepth=alaQoSAppliedActionMinimumDepth, alaQoSAppliedConditionMulticastNetworkGroupStatus=alaQoSAppliedConditionMulticastNetworkGroupStatus, alaQoSPortSignalledBandwidth=alaQoSPortSignalledBandwidth, alaQoSAppliedConditionDestinationVlanStatus=alaQoSAppliedConditionDestinationVlanStatus, alaQoSQueueMinimumBandwidth=alaQoSQueueMinimumBandwidth, alaQoSSlotThreshold1High=alaQoSSlotThreshold1High, alaQoSNetworkGroupIpMask=alaQoSNetworkGroupIpMask, alaQoSStats=alaQoSStats, alaQoSAppliedRuleTrapEvents=alaQoSAppliedRuleTrapEvents, alaQoSActionRedirectPort=alaQoSActionRedirectPort, alaQoSAppliedActionMapTo=alaQoSAppliedActionMapTo, alaQoSSlotCbqThresholdP3=alaQoSSlotCbqThresholdP3, alaQoSAppliedConditionDestinationPortGroupStatus=alaQoSAppliedConditionDestinationPortGroupStatus, alaQoSServiceSourceIpPort=alaQoSServiceSourceIpPort, alaQoSImportIndex=alaQoSImportIndex, alaQoSServiceSourceUdpPortStatus=alaQoSServiceSourceUdpPortStatus, alaQoSAppliedActionSourceRewriteNetworkGroup=alaQoSAppliedActionSourceRewriteNetworkGroup, alaQoSAppliedActionRedirectSlot=alaQoSAppliedActionRedirectSlot, alaQoSImportPrecedence=alaQoSImportPrecedence, alaQoSRuleAction=alaQoSRuleAction, alaQoSConditionTable=alaQoSConditionTable, alaQoSAppliedVlanGroupTable=alaQoSAppliedVlanGroupTable, alaQoSSlotPcamProtocolNumber=alaQoSSlotPcamProtocolNumber, alaQoSAppliedActionPIRStatus=alaQoSAppliedActionPIRStatus, alaQoSServiceDestinationUdpPort=alaQoSServiceDestinationUdpPort, alaQoSAppliedServiceGroupStatus=alaQoSAppliedServiceGroupStatus, alaQoSAppliedActionShared=alaQoSAppliedActionShared, alaQoSStatsL2Matches=alaQoSStatsL2Matches, alaQoSClassifyTos=alaQoSClassifyTos, alaQoSMIB=alaQoSMIB, alaQoSAppliedServiceDestinationIpPort=alaQoSAppliedServiceDestinationIpPort, alaQoSAppliedServiceGroupsEntry=alaQoSAppliedServiceGroupsEntry, alaQoSConditionSourceMacAddr=alaQoSConditionSourceMacAddr, alaQoSConditionSourceVlanStatus=alaQoSConditionSourceVlanStatus, alaQoSStatsFragments=alaQoSStatsFragments, alaQoSPortFirPrio2EnqBytes=alaQoSPortFirPrio2EnqBytes, alaQoSMIBNetworkGroupObjects=alaQoSMIBNetworkGroupObjects, alaQoSAppliedConditionDestinationPort=alaQoSAppliedConditionDestinationPort, alaQoSSlotThreshold2Urgent=alaQoSSlotThreshold2Urgent, alaQoSAppliedActionWredMaximumThresholdStatus=alaQoSAppliedActionWredMaximumThresholdStatus, alaQoSAppliedVlanGroupsObjects=alaQoSAppliedVlanGroupsObjects, alaQoSActionRowStatus=alaQoSActionRowStatus, alaQoSAppliedRuleType=alaQoSAppliedRuleType, alaQoSAppliedActionAlternateGatewayIpAddrStatus=alaQoSAppliedActionAlternateGatewayIpAddrStatus, alaQoSAppliedActionDestinationRewriteIpAddrStatus=alaQoSAppliedActionDestinationRewriteIpAddrStatus, alaQoSActionTosStatus=alaQoSActionTosStatus, alaQoSConfigQMPath=alaQoSConfigQMPath, alaQoSClassify8021p=alaQoSClassify8021p, alaQoSConditionSourcePortGroupStatus=alaQoSConditionSourcePortGroupStatus, alaQoSPortFirPrio2QidDiscardPkts=alaQoSPortFirPrio2QidDiscardPkts, alaQoSAppliedConditionDestinationIpPortEnd=alaQoSAppliedConditionDestinationIpPortEnd, alaQoSMIBAppliedRuleGroupObjects=alaQoSMIBAppliedRuleGroupObjects, alaQoSAppliedVlanGroupStatus=alaQoSAppliedVlanGroupStatus, alaQoSActionMinimumDepthStatus=alaQoSActionMinimumDepthStatus, alaQoSStatsL3IngressMatches=alaQoSStatsL3IngressMatches, alaQoSQueue8021p=alaQoSQueue8021p, alaQoSAppliedActionPeakBandwidthStatus=alaQoSAppliedActionPeakBandwidthStatus, alaQoSAppliedConditionIcmpCode=alaQoSAppliedConditionIcmpCode, alaQoSAppliedConditionSourceTcpPortStatus=alaQoSAppliedConditionSourceTcpPortStatus, alaQoSConfigFlush=alaQoSConfigFlush, alaQoSSlotThreshold1Urgent=alaQoSSlotThreshold1Urgent, alaQoSConditionSourcePortEnd=alaQoSConditionSourcePortEnd, alaQoSConditionDestinationIpv6Mask=alaQoSConditionDestinationIpv6Mask, alaQoSAppliedConditionSourceInterfaceType=alaQoSAppliedConditionSourceInterfaceType, alaQoSMapGroupKeyEnd=alaQoSMapGroupKeyEnd, alaQoSPortAppliedMaximumDefaultDepthStatus=alaQoSPortAppliedMaximumDefaultDepthStatus, alaQoSPortCOS1MinimumBandwidthStatus=alaQoSPortCOS1MinimumBandwidthStatus, alaQoSServiceProtocol=alaQoSServiceProtocol, alaQoSConditionIcmpTypeStatus=alaQoSConditionIcmpTypeStatus, alaQoSImportPortend=alaQoSImportPortend, alaQoSPortProtocolPriorityP7=alaQoSPortProtocolPriorityP7, alaQoSRulePacketCount=alaQoSRulePacketCount, alaQoSAppliedConditionDestinationUdpPortEnd=alaQoSAppliedConditionDestinationUdpPortEnd, alaQoSAppliedActionRedirectAggStatus=alaQoSAppliedActionRedirectAggStatus, alaQoSAppliedConditionIpProtocol=alaQoSAppliedConditionIpProtocol, alaQoSConditionTcpFlagsVal=alaQoSConditionTcpFlagsVal, alaQoSActionSourceRewriteIpAddr=alaQoSActionSourceRewriteIpAddr, alaQoSActionSourceRewriteNetworkGroup=alaQoSActionSourceRewriteNetworkGroup, alaQoSActionLoadBalanceGroupStatus=alaQoSActionLoadBalanceGroupStatus, alaQoSPortCOS3MaximumBandwidthStatus=alaQoSPortCOS3MaximumBandwidthStatus, alaQoSSlotBuffersDeniedAverage=alaQoSSlotBuffersDeniedAverage, alaQoSClassifyMulticastResultRule=alaQoSClassifyMulticastResultRule, alaQoSAppliedConditionName=alaQoSAppliedConditionName, alaQoSMACGroupsSource=alaQoSMACGroupsSource, alaQoSSlotCbqThresholdP2=alaQoSSlotCbqThresholdP2, alaQoSAppliedVlanGroupsSource=alaQoSAppliedVlanGroupsSource, alaQoSConfigDefaultMulticastDisposition=alaQoSConfigDefaultMulticastDisposition, alaQoSClassifyDestinationInterfaceType=alaQoSClassifyDestinationInterfaceType, alaQoSAppliedConditionDlci=alaQoSAppliedConditionDlci, alaQoSAppliedConditionDestinationIpAddrStatus=alaQoSAppliedConditionDestinationIpAddrStatus, alaQoSAppliedConditionServiceGroupStatus=alaQoSAppliedConditionServiceGroupStatus)
