#
# PySNMP MIB module WLSX-VOICE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WLSX-VOICE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:30:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
wlsxEnterpriseMibModules, = mibBuilder.importSymbols("ARUBA-MIB", "wlsxEnterpriseMibModules")
ArubaVoiceCdrDirection, ArubaVoipProtocol, ArubaVoiceCacBit, ArubaVlanValidRange, ArubaCallStates, ArubaVoipRegState, ArubaEnableValue = mibBuilder.importSymbols("ARUBA-TC", "ArubaVoiceCdrDirection", "ArubaVoipProtocol", "ArubaVoiceCacBit", "ArubaVlanValidRange", "ArubaCallStates", "ArubaVoipRegState", "ArubaEnableValue")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ObjectIdentity, Integer32, TimeTicks, MibIdentifier, Counter64, Unsigned32, TextualConvention, iso, NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, snmpModules, Counter32, Bits, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Integer32", "TimeTicks", "MibIdentifier", "Counter64", "Unsigned32", "TextualConvention", "iso", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "snmpModules", "Counter32", "Bits", "Gauge32", "IpAddress")
DateAndTime, TestAndIncr, TAddress, PhysAddress, TDomain, TruthValue, MacAddress, TextualConvention, TimeInterval, RowStatus, DisplayString, StorageType = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TestAndIncr", "TAddress", "PhysAddress", "TDomain", "TruthValue", "MacAddress", "TextualConvention", "TimeInterval", "RowStatus", "DisplayString", "StorageType")
wlanAPRadioNumber, wlanAPBSSID, wlanStaPhyAddress, wlanAPMacAddress = mibBuilder.importSymbols("WLSX-WLAN-MIB", "wlanAPRadioNumber", "wlanAPBSSID", "wlanStaPhyAddress", "wlanAPMacAddress")
wlsxVoiceMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12))
wlsxVoiceMIB.setRevisions(('1908-04-16 02:06',))
if mibBuilder.loadTexts: wlsxVoiceMIB.setLastUpdated('0804160206Z')
if mibBuilder.loadTexts: wlsxVoiceMIB.setOrganization('Aruba Wireless Networks')
wlsxVoiceStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1))
wlsxVoiceCdrInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1))
wlsxVoiceCallCtrsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2))
wlsxVoiceClientInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3))
wlsxVoiceAPBssidInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4))
wlsxVoiceClientLocationInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5))
wlsxVoiceCdrTotal = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxVoiceCdrTotal.setStatus('current')
wlsxVoiceCdrTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2), )
if mibBuilder.loadTexts: wlsxVoiceCdrTable.setStatus('current')
wlsxVoiceCdrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1), ).setIndexNames((0, "WLSX-VOICE-MIB", "voiceCdrId"))
if mibBuilder.loadTexts: wlsxVoiceCdrEntry.setStatus('current')
voiceCdrId = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: voiceCdrId.setStatus('current')
voiceCdrIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrIp.setStatus('current')
voiceCdrMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrMac.setStatus('current')
voiceCdrName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrName.setStatus('current')
voiceCdrDialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrDialNum.setStatus('current')
voiceCdrDir = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 6), ArubaVoiceCdrDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrDir.setStatus('current')
voiceCdrOrigTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrOrigTime.setStatus('current')
voiceCdrSetupTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrSetupTime.setStatus('current')
voiceCdrTeardownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrTeardownTime.setStatus('deprecated')
voiceCdrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 10), ArubaCallStates()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrStatus.setStatus('current')
voiceCdrReason = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrReason.setStatus('current')
voiceCdrDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrDuration.setStatus('current')
voiceCdrRValue = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrRValue.setStatus('current')
voiceCdrApSwitchDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrApSwitchDelay.setStatus('current')
voiceCdrCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrCodec.setStatus('current')
voiceCdrApName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrApName.setStatus('current')
voiceCdrApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 17), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrApMac.setStatus('current')
voiceCdrBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrBssid.setStatus('current')
voiceCdrEssid = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrEssid.setStatus('current')
voiceCdrHandovers = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrHandovers.setStatus('current')
voiceCdrMOS = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrMOS.setStatus('deprecated')
voiceCallCtrsTotal = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsTotal.setStatus('current')
voiceCallCtrsSuccess = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsSuccess.setStatus('current')
voiceCallCtrsFailed = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsFailed.setStatus('current')
voiceCallCtrsRejected = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsRejected.setStatus('current')
voiceCallCtrsAborted = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsAborted.setStatus('current')
voiceCallCtrsOrig = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsOrig.setStatus('current')
voiceCallCtrsRecvd = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsRecvd.setStatus('current')
voiceCallCtrsActive = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsActive.setStatus('current')
voiceCallCtrsNotFnd = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsNotFnd.setStatus('deprecated')
voiceCallCtrsBusy = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsBusy.setStatus('deprecated')
voiceCallCtrsSvc = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsSvc.setStatus('deprecated')
voiceCallCtrsReqTerm = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsReqTerm.setStatus('deprecated')
voiceCallCtrsDecline = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsDecline.setStatus('deprecated')
voiceCallCtrsUnauth = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsUnauth.setStatus('deprecated')
voiceCallCtrsMisc = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsMisc.setStatus('deprecated')
wlsxVoiceClientTotal = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxVoiceClientTotal.setStatus('current')
wlsxVoiceClientTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2), )
if mibBuilder.loadTexts: wlsxVoiceClientTable.setStatus('current')
wlsxVoiceClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1), ).setIndexNames((0, "WLSX-WLAN-MIB", "wlanStaPhyAddress"))
if mibBuilder.loadTexts: wlsxVoiceClientEntry.setStatus('current')
voiceClientIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceClientIp.setStatus('current')
voiceClientProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1, 2), ArubaVoipProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceClientProtocol.setStatus('current')
voiceClientRegState = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1, 3), ArubaVoipRegState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceClientRegState.setStatus('current')
voiceClientContactName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceClientContactName.setStatus('current')
voiceClientServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceClientServerName.setStatus('current')
voiceClientEssid = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceClientEssid.setStatus('current')
voiceClientVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1, 7), ArubaVlanValidRange()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceClientVlanId.setStatus('current')
voiceClientTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceClientTunnelId.setStatus('current')
wlsxVoiceAPBssidTotal = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxVoiceAPBssidTotal.setStatus('current')
wlsxVoiceAPBssidTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2), )
if mibBuilder.loadTexts: wlsxVoiceAPBssidTable.setStatus('current')
wlsxVoiceAPBssidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1), ).setIndexNames((0, "WLSX-WLAN-MIB", "wlanAPMacAddress"), (0, "WLSX-WLAN-MIB", "wlanAPRadioNumber"), (0, "WLSX-WLAN-MIB", "wlanAPBSSID"))
if mibBuilder.loadTexts: wlsxVoiceAPBssidEntry.setStatus('current')
voiceAPBssidName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidName.setStatus('current')
voiceAPBssidGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidGroup.setStatus('current')
voiceAPBssidIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidIp.setStatus('current')
voiceAPBssidTotCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidTotCalls.setStatus('current')
voiceAPBssidVoiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidVoiceType.setStatus('current')
voiceAPBssidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 6), Bits().clone(namedValues=NamedValues(("apRemoteAP", 0), ("apPPPOE", 1), ("apWiredApEnabled", 2), ("apEnet1Mode", 3), ("apActiveLoadBalancing", 4), ("apDisconnectExtraCalls", 5), ("apBatteryBoost", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidFlag.setStatus('current')
voiceAPBssidUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidUpTime.setStatus('current')
voiceAPBssid100Sent = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssid100Sent.setStatus('current')
voiceAPBssid503Sent = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssid503Sent.setStatus('current')
voiceAPBssidExtraCallDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidExtraCallDisc.setStatus('current')
voiceAPBssidKickedOff = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidKickedOff.setStatus('deprecated')
voiceAPBssidTspecDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidTspecDenied.setStatus('current')
voiceAPBssidCacFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 13), ArubaVoiceCacBit()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidCacFlag.setStatus('current')
voiceAPBssidTotVoiceClients = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidTotVoiceClients.setStatus('current')
voiceAPBssidCallsSCCP = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidCallsSCCP.setStatus('current')
voiceAPBssidCallsSIP = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidCallsSIP.setStatus('current')
voiceAPBssidCallsSVP = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidCallsSVP.setStatus('current')
voiceAPBssidCallsVocera = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidCallsVocera.setStatus('current')
voiceAPBssidCallsNoe = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidCallsNoe.setStatus('current')
voiceAPBssidEssid = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidEssid.setStatus('current')
wlsxVoiceClientLocationTotal = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxVoiceClientLocationTotal.setStatus('current')
wlsxVoiceClientLocationTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2), )
if mibBuilder.loadTexts: wlsxVoiceClientLocationTable.setStatus('current')
wlsxVoiceClientLocationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2, 1), ).setIndexNames((0, "WLSX-WLAN-MIB", "wlanStaPhyAddress"))
if mibBuilder.loadTexts: wlsxVoiceClientLocationEntry.setStatus('current')
vcLocationIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcLocationIp.setStatus('current')
vcLocationMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcLocationMac.setStatus('current')
vcLocationSwitchIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcLocationSwitchIp.setStatus('current')
vcLocationApName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcLocationApName.setStatus('current')
vcLocationApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcLocationApMac.setStatus('current')
vcLocationApMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcLocationApMode.setStatus('current')
vcLocationApLoc = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcLocationApLoc.setStatus('current')
mibBuilder.exportSymbols("WLSX-VOICE-MIB", voiceCdrTeardownTime=voiceCdrTeardownTime, voiceCallCtrsReqTerm=voiceCallCtrsReqTerm, voiceAPBssid100Sent=voiceAPBssid100Sent, voiceCdrApMac=voiceCdrApMac, PYSNMP_MODULE_ID=wlsxVoiceMIB, voiceCdrName=voiceCdrName, voiceCdrApSwitchDelay=voiceCdrApSwitchDelay, voiceAPBssidTotVoiceClients=voiceAPBssidTotVoiceClients, voiceCdrHandovers=voiceCdrHandovers, voiceAPBssidExtraCallDisc=voiceAPBssidExtraCallDisc, voiceCallCtrsRejected=voiceCallCtrsRejected, voiceClientIp=voiceClientIp, vcLocationApMode=vcLocationApMode, wlsxVoiceCdrInfoGroup=wlsxVoiceCdrInfoGroup, voiceCallCtrsActive=voiceCallCtrsActive, wlsxVoiceAPBssidInfoGroup=wlsxVoiceAPBssidInfoGroup, voiceAPBssidGroup=voiceAPBssidGroup, voiceCdrId=voiceCdrId, voiceCallCtrsTotal=voiceCallCtrsTotal, voiceAPBssidIp=voiceAPBssidIp, wlsxVoiceCdrEntry=wlsxVoiceCdrEntry, wlsxVoiceAPBssidTotal=wlsxVoiceAPBssidTotal, voiceAPBssidTotCalls=voiceAPBssidTotCalls, voiceCallCtrsBusy=voiceCallCtrsBusy, voiceCallCtrsFailed=voiceCallCtrsFailed, voiceClientTunnelId=voiceClientTunnelId, voiceCallCtrsRecvd=voiceCallCtrsRecvd, voiceAPBssidVoiceType=voiceAPBssidVoiceType, voiceCallCtrsMisc=voiceCallCtrsMisc, wlsxVoiceAPBssidTable=wlsxVoiceAPBssidTable, voiceAPBssidEssid=voiceAPBssidEssid, voiceAPBssidTspecDenied=voiceAPBssidTspecDenied, voiceCdrDialNum=voiceCdrDialNum, voiceCdrDir=voiceCdrDir, voiceAPBssidName=voiceAPBssidName, voiceCallCtrsDecline=voiceCallCtrsDecline, voiceCdrCodec=voiceCdrCodec, voiceCdrEssid=voiceCdrEssid, wlsxVoiceStatsGroup=wlsxVoiceStatsGroup, voiceAPBssidCacFlag=voiceAPBssidCacFlag, voiceAPBssidCallsNoe=voiceAPBssidCallsNoe, voiceCdrStatus=voiceCdrStatus, voiceAPBssidCallsSCCP=voiceAPBssidCallsSCCP, voiceCdrBssid=voiceCdrBssid, wlsxVoiceAPBssidEntry=wlsxVoiceAPBssidEntry, voiceCallCtrsSvc=voiceCallCtrsSvc, voiceAPBssidCallsVocera=voiceAPBssidCallsVocera, wlsxVoiceClientEntry=wlsxVoiceClientEntry, voiceClientProtocol=voiceClientProtocol, vcLocationMac=vcLocationMac, voiceClientContactName=voiceClientContactName, voiceCdrMac=voiceCdrMac, voiceCdrSetupTime=voiceCdrSetupTime, voiceCdrReason=voiceCdrReason, wlsxVoiceClientLocationTable=wlsxVoiceClientLocationTable, voiceCdrMOS=voiceCdrMOS, voiceCdrOrigTime=voiceCdrOrigTime, voiceAPBssid503Sent=voiceAPBssid503Sent, vcLocationSwitchIp=vcLocationSwitchIp, voiceAPBssidKickedOff=voiceAPBssidKickedOff, voiceCallCtrsSuccess=voiceCallCtrsSuccess, wlsxVoiceCdrTable=wlsxVoiceCdrTable, voiceCdrDuration=voiceCdrDuration, wlsxVoiceCallCtrsGroup=wlsxVoiceCallCtrsGroup, wlsxVoiceClientLocationEntry=wlsxVoiceClientLocationEntry, wlsxVoiceClientTable=wlsxVoiceClientTable, vcLocationIp=vcLocationIp, voiceClientServerName=voiceClientServerName, voiceClientRegState=voiceClientRegState, voiceCallCtrsUnauth=voiceCallCtrsUnauth, voiceClientVlanId=voiceClientVlanId, voiceCdrApName=voiceCdrApName, voiceCallCtrsAborted=voiceCallCtrsAborted, voiceCallCtrsNotFnd=voiceCallCtrsNotFnd, wlsxVoiceClientLocationTotal=wlsxVoiceClientLocationTotal, wlsxVoiceMIB=wlsxVoiceMIB, wlsxVoiceClientLocationInfoGroup=wlsxVoiceClientLocationInfoGroup, wlsxVoiceClientInfoGroup=wlsxVoiceClientInfoGroup, wlsxVoiceCdrTotal=wlsxVoiceCdrTotal, voiceAPBssidUpTime=voiceAPBssidUpTime, voiceCdrRValue=voiceCdrRValue, voiceAPBssidFlag=voiceAPBssidFlag, voiceCdrIp=voiceCdrIp, voiceClientEssid=voiceClientEssid, voiceAPBssidCallsSIP=voiceAPBssidCallsSIP, voiceAPBssidCallsSVP=voiceAPBssidCallsSVP, vcLocationApName=vcLocationApName, vcLocationApMac=vcLocationApMac, voiceCallCtrsOrig=voiceCallCtrsOrig, wlsxVoiceClientTotal=wlsxVoiceClientTotal, vcLocationApLoc=vcLocationApLoc)
