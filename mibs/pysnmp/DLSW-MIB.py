#
# PySNMP MIB module DLSW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DLSW-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:52:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
sdlcLSAddress, = mibBuilder.importSymbols("SNA-SDLC-MIB", "sdlcLSAddress")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
TimeTicks, IpAddress, NotificationType, MibIdentifier, Counter32, ModuleIdentity, ObjectIdentity, mib_2, Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso, Gauge32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "IpAddress", "NotificationType", "MibIdentifier", "Counter32", "ModuleIdentity", "ObjectIdentity", "mib-2", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso", "Gauge32", "Unsigned32")
RowStatus, TruthValue, DisplayString, TextualConvention, RowPointer = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "DisplayString", "TextualConvention", "RowPointer")
dlsw = ModuleIdentity((1, 3, 6, 1, 2, 1, 46))
if mibBuilder.loadTexts: dlsw.setLastUpdated('9606040900Z')
if mibBuilder.loadTexts: dlsw.setOrganization('AIW DLSw MIB RIGLET and IETF DLSw MIB Working Group')
dlswMIB = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 1))
dlswDomains = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 2))
class NBName(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 16)

class MacAddressNC(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1x:'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(6, 6), )
class TAddress(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class EndStationLocation(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("other", 1), ("internal", 2), ("remote", 3), ("local", 4))

class DlcType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("other", 1), ("na", 2), ("llc", 3), ("sdlc", 4), ("qllc", 5))

class LFSize(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(516, 635, 754, 873, 993, 1112, 1231, 1350, 1470, 1542, 1615, 1688, 1761, 1833, 1906, 1979, 2052, 2345, 2638, 2932, 3225, 3518, 3812, 4105, 4399, 4865, 5331, 5798, 6264, 6730, 7197, 7663, 8130, 8539, 8949, 9358, 9768, 10178, 10587, 10997, 11407, 12199, 12992, 13785, 14578, 15370, 16163, 16956, 17749, 20730, 23711, 26693, 29674, 32655, 38618, 41600, 44591, 47583, 50575, 53567, 56559, 59551, 65535))
    namedValues = NamedValues(("lfs516", 516), ("lfs635", 635), ("lfs754", 754), ("lfs873", 873), ("lfs993", 993), ("lfs1112", 1112), ("lfs1231", 1231), ("lfs1350", 1350), ("lfs1470", 1470), ("lfs1542", 1542), ("lfs1615", 1615), ("lfs1688", 1688), ("lfs1761", 1761), ("lfs1833", 1833), ("lfs1906", 1906), ("lfs1979", 1979), ("lfs2052", 2052), ("lfs2345", 2345), ("lfs2638", 2638), ("lfs2932", 2932), ("lfs3225", 3225), ("lfs3518", 3518), ("lfs3812", 3812), ("lfs4105", 4105), ("lfs4399", 4399), ("lfs4865", 4865), ("lfs5331", 5331), ("lfs5798", 5798), ("lfs6264", 6264), ("lfs6730", 6730), ("lfs7197", 7197), ("lfs7663", 7663), ("lfs8130", 8130), ("lfs8539", 8539), ("lfs8949", 8949), ("lfs9358", 9358), ("lfs9768", 9768), ("lfs10178", 10178), ("lfs10587", 10587), ("lfs10997", 10997), ("lfs11407", 11407), ("lfs12199", 12199), ("lfs12992", 12992), ("lfs13785", 13785), ("lfs14578", 14578), ("lfs15370", 15370), ("lfs16163", 16163), ("lfs16956", 16956), ("lfs17749", 17749), ("lfs20730", 20730), ("lfs23711", 23711), ("lfs26693", 26693), ("lfs29674", 29674), ("lfs32655", 32655), ("lfs38618", 38618), ("lfs41600", 41600), ("lfs44591", 44591), ("lfs47583", 47583), ("lfs50575", 50575), ("lfs53567", 53567), ("lfs56559", 56559), ("lfs59551", 59551), ("lfs65535", 65535))

null = MibIdentifier((0, 0))
dlswTCPDomain = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 2, 1))
class DlswTCPAddress(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1d.1d.1d.1d'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

dlswNode = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 1, 1))
dlswTConn = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 1, 2))
dlswInterface = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 1, 3))
dlswDirectory = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 1, 4))
dlswCircuit = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 1, 5))
dlswSdlc = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 1, 6))
dlswNodeVersion = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswNodeVersion.setStatus('current')
dlswNodeVendorID = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswNodeVendorID.setStatus('current')
dlswNodeVersionString = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswNodeVersionString.setStatus('current')
dlswNodeStdPacingSupport = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("adaptiveRcvWindow", 2), ("fixedRcvWindow", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswNodeStdPacingSupport.setStatus('current')
dlswNodeStatus = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlswNodeStatus.setStatus('current')
dlswNodeUpTime = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 1, 6), TimeTicks()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswNodeUpTime.setStatus('current')
dlswNodeVirtualSegmentLFSize = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 1, 7), LFSize().clone('lfs65535')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlswNodeVirtualSegmentLFSize.setStatus('current')
dlswNodeResourceNBExclusivity = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlswNodeResourceNBExclusivity.setStatus('current')
dlswNodeResourceMacExclusivity = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlswNodeResourceMacExclusivity.setStatus('current')
dlswTConnStat = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 1, 2, 1))
dlswTConnStatActiveConnections = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnStatActiveConnections.setStatus('current')
dlswTConnStatCloseIdles = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnStatCloseIdles.setStatus('current')
dlswTConnStatCloseBusys = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnStatCloseBusys.setStatus('current')
dlswTConnConfigTable = MibTable((1, 3, 6, 1, 2, 1, 46, 1, 2, 2), )
if mibBuilder.loadTexts: dlswTConnConfigTable.setStatus('current')
dlswTConnConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 46, 1, 2, 2, 1), ).setIndexNames((0, "DLSW-MIB", "dlswTConnConfigIndex"))
if mibBuilder.loadTexts: dlswTConnConfigEntry.setStatus('current')
dlswTConnConfigIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: dlswTConnConfigIndex.setStatus('current')
dlswTConnConfigTDomain = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 2, 1, 2), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswTConnConfigTDomain.setStatus('current')
dlswTConnConfigLocalTAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 2, 1, 3), TAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswTConnConfigLocalTAddr.setStatus('current')
dlswTConnConfigRemoteTAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 2, 1, 4), TAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswTConnConfigRemoteTAddr.setStatus('current')
dlswTConnConfigLastModifyTime = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 2, 1, 5), TimeTicks()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnConfigLastModifyTime.setStatus('current')
dlswTConnConfigEntryType = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("individual", 1), ("global", 2), ("group", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswTConnConfigEntryType.setStatus('current')
dlswTConnConfigGroupDefinition = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 2, 1, 7), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswTConnConfigGroupDefinition.setStatus('current')
dlswTConnConfigSetupType = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("activePersistent", 2), ("activeOnDemand", 3), ("passive", 4), ("excluded", 5))).clone('passive')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswTConnConfigSetupType.setStatus('current')
dlswTConnConfigSapList = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16).clone(hexValue="AA000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswTConnConfigSapList.setStatus('current')
dlswTConnConfigAdvertiseMacNB = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 2, 1, 10), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswTConnConfigAdvertiseMacNB.setStatus('current')
dlswTConnConfigInitCirRecvWndw = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1)).setUnits('SSP messages').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswTConnConfigInitCirRecvWndw.setStatus('current')
dlswTConnConfigOpens = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnConfigOpens.setStatus('current')
dlswTConnConfigRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 2, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswTConnConfigRowStatus.setStatus('current')
dlswTConnOperTable = MibTable((1, 3, 6, 1, 2, 1, 46, 1, 2, 3), )
if mibBuilder.loadTexts: dlswTConnOperTable.setStatus('current')
dlswTConnOperEntry = MibTableRow((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1), ).setIndexNames((0, "DLSW-MIB", "dlswTConnOperTDomain"), (0, "DLSW-MIB", "dlswTConnOperRemoteTAddr"))
if mibBuilder.loadTexts: dlswTConnOperEntry.setStatus('current')
dlswTConnOperTDomain = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 1), ObjectIdentifier())
if mibBuilder.loadTexts: dlswTConnOperTDomain.setStatus('current')
dlswTConnOperLocalTAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 2), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperLocalTAddr.setStatus('current')
dlswTConnOperRemoteTAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 3), TAddress())
if mibBuilder.loadTexts: dlswTConnOperRemoteTAddr.setStatus('current')
dlswTConnOperEntryTime = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 4), TimeTicks()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperEntryTime.setStatus('current')
dlswTConnOperConnectTime = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 5), TimeTicks()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperConnectTime.setStatus('current')
dlswTConnOperState = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("connecting", 1), ("initCapExchange", 2), ("connected", 3), ("quiescing", 4), ("disconnecting", 5), ("disconnected", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlswTConnOperState.setStatus('current')
dlswTConnOperConfigIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperConfigIndex.setStatus('current')
dlswTConnOperFlowCntlMode = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undetermined", 1), ("pacing", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperFlowCntlMode.setStatus('current')
dlswTConnOperPartnerVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 9), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperPartnerVersion.setStatus('current')
dlswTConnOperPartnerVendorID = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 10), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(3, 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperPartnerVendorID.setStatus('current')
dlswTConnOperPartnerVersionStr = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 253))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperPartnerVersionStr.setStatus('current')
dlswTConnOperPartnerInitPacingWndw = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperPartnerInitPacingWndw.setStatus('current')
dlswTConnOperPartnerSapList = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 13), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperPartnerSapList.setStatus('current')
dlswTConnOperPartnerNBExcl = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperPartnerNBExcl.setStatus('current')
dlswTConnOperPartnerMacExcl = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperPartnerMacExcl.setStatus('current')
dlswTConnOperPartnerNBInfo = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("partial", 2), ("complete", 3), ("notApplicable", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperPartnerNBInfo.setStatus('current')
dlswTConnOperPartnerMacInfo = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("partial", 2), ("complete", 3), ("notApplicable", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperPartnerMacInfo.setStatus('current')
dlswTConnOperDiscTime = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 18), TimeTicks()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperDiscTime.setStatus('current')
dlswTConnOperDiscReason = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("capExFailed", 2), ("transportLayerDisc", 3), ("operatorCommand", 4), ("lastCircuitDiscd", 5), ("protocolError", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperDiscReason.setStatus('current')
dlswTConnOperDiscActiveCir = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperDiscActiveCir.setStatus('current')
dlswTConnOperInDataPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 21), Counter32()).setUnits('SSP messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperInDataPkts.setStatus('current')
dlswTConnOperOutDataPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 22), Counter32()).setUnits('SSP messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperOutDataPkts.setStatus('current')
dlswTConnOperInDataOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 23), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperInDataOctets.setStatus('current')
dlswTConnOperOutDataOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 24), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperOutDataOctets.setStatus('current')
dlswTConnOperInCntlPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 25), Counter32()).setUnits('SSP messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperInCntlPkts.setStatus('current')
dlswTConnOperOutCntlPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 26), Counter32()).setUnits('SSP messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperOutCntlPkts.setStatus('current')
dlswTConnOperCURexSents = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperCURexSents.setStatus('current')
dlswTConnOperICRexRcvds = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperICRexRcvds.setStatus('current')
dlswTConnOperCURexRcvds = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperCURexRcvds.setStatus('current')
dlswTConnOperICRexSents = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperICRexSents.setStatus('current')
dlswTConnOperNQexSents = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperNQexSents.setStatus('current')
dlswTConnOperNRexRcvds = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperNRexRcvds.setStatus('current')
dlswTConnOperNQexRcvds = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperNQexRcvds.setStatus('current')
dlswTConnOperNRexSents = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperNRexSents.setStatus('current')
dlswTConnOperCirCreates = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperCirCreates.setStatus('current')
dlswTConnOperCircuits = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 3, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnOperCircuits.setStatus('current')
dlswTConnSpecific = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 1, 2, 4))
dlswTConnTcp = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 1, 2, 4, 1))
dlswTConnTcpConfigTable = MibTable((1, 3, 6, 1, 2, 1, 46, 1, 2, 4, 1, 1), )
if mibBuilder.loadTexts: dlswTConnTcpConfigTable.setStatus('current')
dlswTConnTcpConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 46, 1, 2, 4, 1, 1, 1), ).setIndexNames((0, "DLSW-MIB", "dlswTConnConfigIndex"))
if mibBuilder.loadTexts: dlswTConnTcpConfigEntry.setStatus('current')
dlswTConnTcpConfigKeepAliveInt = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 4, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1800))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswTConnTcpConfigKeepAliveInt.setStatus('current')
dlswTConnTcpConfigTcpConnections = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswTConnTcpConfigTcpConnections.setStatus('current')
dlswTConnTcpConfigMaxSegmentSize = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 4, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(4096)).setUnits('packets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswTConnTcpConfigMaxSegmentSize.setStatus('current')
dlswTConnTcpOperTable = MibTable((1, 3, 6, 1, 2, 1, 46, 1, 2, 4, 1, 2), )
if mibBuilder.loadTexts: dlswTConnTcpOperTable.setStatus('current')
dlswTConnTcpOperEntry = MibTableRow((1, 3, 6, 1, 2, 1, 46, 1, 2, 4, 1, 2, 1), ).setIndexNames((0, "DLSW-MIB", "dlswTConnOperTDomain"), (0, "DLSW-MIB", "dlswTConnOperRemoteTAddr"))
if mibBuilder.loadTexts: dlswTConnTcpOperEntry.setStatus('current')
dlswTConnTcpOperKeepAliveInt = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 4, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1800))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnTcpOperKeepAliveInt.setStatus('current')
dlswTConnTcpOperPrefTcpConnections = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 4, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnTcpOperPrefTcpConnections.setStatus('current')
dlswTConnTcpOperTcpConnections = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 2, 4, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswTConnTcpOperTcpConnections.setStatus('current')
dlswIfTable = MibTable((1, 3, 6, 1, 2, 1, 46, 1, 3, 1), )
if mibBuilder.loadTexts: dlswIfTable.setStatus('current')
dlswIfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 46, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dlswIfEntry.setStatus('current')
dlswIfRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 3, 1, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswIfRowStatus.setStatus('current')
dlswIfVirtualSegment = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 4095), ValueRangeConstraint(65535, 65535), )).clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswIfVirtualSegment.setStatus('current')
dlswIfSapList = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16).clone(hexValue="AA000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswIfSapList.setStatus('current')
dlswDirStat = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 1, 4, 1))
dlswDirMacEntries = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 4, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswDirMacEntries.setStatus('current')
dlswDirMacCacheHits = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswDirMacCacheHits.setStatus('current')
dlswDirMacCacheMisses = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswDirMacCacheMisses.setStatus('current')
dlswDirMacCacheNextIndex = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswDirMacCacheNextIndex.setStatus('current')
dlswDirNBEntries = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswDirNBEntries.setStatus('current')
dlswDirNBCacheHits = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswDirNBCacheHits.setStatus('current')
dlswDirNBCacheMisses = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswDirNBCacheMisses.setStatus('current')
dlswDirNBCacheNextIndex = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswDirNBCacheNextIndex.setStatus('current')
dlswDirCache = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 1, 4, 2))
dlswDirMacTable = MibTable((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 1), )
if mibBuilder.loadTexts: dlswDirMacTable.setStatus('current')
dlswDirMacEntry = MibTableRow((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 1, 1), ).setIndexNames((0, "DLSW-MIB", "dlswDirMacIndex"))
if mibBuilder.loadTexts: dlswDirMacEntry.setStatus('current')
dlswDirMacIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: dlswDirMacIndex.setStatus('current')
dlswDirMacMac = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 1, 1, 2), MacAddressNC()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswDirMacMac.setStatus('current')
dlswDirMacMask = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 1, 1, 3), MacAddressNC().clone(hexValue="FFFFFFFFFFFF")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswDirMacMask.setStatus('current')
dlswDirMacEntryType = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("userConfiguredPublic", 2), ("userConfiguredPrivate", 3), ("partnerCapExMsg", 4), ("dynamic", 5))).clone('userConfiguredPublic')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswDirMacEntryType.setStatus('current')
dlswDirMacLocationType = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("remote", 3))).clone('local')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswDirMacLocationType.setStatus('current')
dlswDirMacLocation = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 1, 1, 6), RowPointer().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswDirMacLocation.setStatus('current')
dlswDirMacStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("reachable", 2), ("notReachable", 3))).clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswDirMacStatus.setStatus('current')
dlswDirMacLFSize = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 1, 1, 8), LFSize().clone('lfs65535')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswDirMacLFSize.setStatus('current')
dlswDirMacRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswDirMacRowStatus.setStatus('current')
dlswDirNBTable = MibTable((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 2), )
if mibBuilder.loadTexts: dlswDirNBTable.setStatus('current')
dlswDirNBEntry = MibTableRow((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 2, 1), ).setIndexNames((0, "DLSW-MIB", "dlswDirNBIndex"))
if mibBuilder.loadTexts: dlswDirNBEntry.setStatus('current')
dlswDirNBIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: dlswDirNBIndex.setStatus('current')
dlswDirNBName = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 2, 1, 2), NBName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswDirNBName.setStatus('current')
dlswDirNBNameType = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("individual", 2), ("group", 3))).clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswDirNBNameType.setStatus('current')
dlswDirNBEntryType = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("userConfiguredPublic", 2), ("userConfiguredPrivate", 3), ("partnerCapExMsg", 4), ("dynamic", 5))).clone('userConfiguredPublic')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswDirNBEntryType.setStatus('current')
dlswDirNBLocationType = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("remote", 3))).clone('local')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswDirNBLocationType.setStatus('current')
dlswDirNBLocation = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 2, 1, 6), RowPointer().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswDirNBLocation.setStatus('current')
dlswDirNBStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("reachable", 2), ("notReachable", 3))).clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswDirNBStatus.setStatus('current')
dlswDirNBLFSize = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 2, 1, 8), LFSize().clone('lfs65535')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswDirNBLFSize.setStatus('current')
dlswDirNBRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 2, 2, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswDirNBRowStatus.setStatus('current')
dlswDirLocate = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 1, 4, 3))
dlswDirLocateMacTable = MibTable((1, 3, 6, 1, 2, 1, 46, 1, 4, 3, 1), )
if mibBuilder.loadTexts: dlswDirLocateMacTable.setStatus('current')
dlswDirLocateMacEntry = MibTableRow((1, 3, 6, 1, 2, 1, 46, 1, 4, 3, 1, 1), ).setIndexNames((0, "DLSW-MIB", "dlswDirLocateMacMac"), (0, "DLSW-MIB", "dlswDirLocateMacMatch"))
if mibBuilder.loadTexts: dlswDirLocateMacEntry.setStatus('current')
dlswDirLocateMacMac = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 3, 1, 1, 1), MacAddressNC())
if mibBuilder.loadTexts: dlswDirLocateMacMac.setStatus('current')
dlswDirLocateMacMatch = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: dlswDirLocateMacMatch.setStatus('current')
dlswDirLocateMacLocation = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 3, 1, 1, 3), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswDirLocateMacLocation.setStatus('current')
dlswDirLocateNBTable = MibTable((1, 3, 6, 1, 2, 1, 46, 1, 4, 3, 2), )
if mibBuilder.loadTexts: dlswDirLocateNBTable.setStatus('current')
dlswDirLocateNBEntry = MibTableRow((1, 3, 6, 1, 2, 1, 46, 1, 4, 3, 2, 1), ).setIndexNames((0, "DLSW-MIB", "dlswDirLocateNBName"), (0, "DLSW-MIB", "dlswDirLocateNBMatch"))
if mibBuilder.loadTexts: dlswDirLocateNBEntry.setStatus('current')
dlswDirLocateNBName = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 3, 2, 1, 1), NBName())
if mibBuilder.loadTexts: dlswDirLocateNBName.setStatus('current')
dlswDirLocateNBMatch = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: dlswDirLocateNBMatch.setStatus('current')
dlswDirLocateNBLocation = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 4, 3, 2, 1, 3), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswDirLocateNBLocation.setStatus('current')
dlswCircuitStat = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 1, 5, 1))
dlswCircuitStatActives = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 5, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitStatActives.setStatus('current')
dlswCircuitStatCreates = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitStatCreates.setStatus('current')
dlswCircuitTable = MibTable((1, 3, 6, 1, 2, 1, 46, 1, 5, 2), )
if mibBuilder.loadTexts: dlswCircuitTable.setStatus('current')
dlswCircuitEntry = MibTableRow((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1), ).setIndexNames((0, "DLSW-MIB", "dlswCircuitS1Mac"), (0, "DLSW-MIB", "dlswCircuitS1Sap"), (0, "DLSW-MIB", "dlswCircuitS2Mac"), (0, "DLSW-MIB", "dlswCircuitS2Sap"))
if mibBuilder.loadTexts: dlswCircuitEntry.setStatus('current')
dlswCircuitS1Mac = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 1), MacAddressNC())
if mibBuilder.loadTexts: dlswCircuitS1Mac.setStatus('current')
dlswCircuitS1Sap = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1))
if mibBuilder.loadTexts: dlswCircuitS1Sap.setStatus('current')
dlswCircuitS1IfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitS1IfIndex.setStatus('current')
dlswCircuitS1DlcType = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 4), DlcType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitS1DlcType.setStatus('current')
dlswCircuitS1RouteInfo = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitS1RouteInfo.setStatus('current')
dlswCircuitS1CircuitId = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 6), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitS1CircuitId.setStatus('current')
dlswCircuitS1Dlc = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 7), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitS1Dlc.setStatus('current')
dlswCircuitS2Mac = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 8), MacAddressNC())
if mibBuilder.loadTexts: dlswCircuitS2Mac.setStatus('current')
dlswCircuitS2Sap = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1))
if mibBuilder.loadTexts: dlswCircuitS2Sap.setStatus('current')
dlswCircuitS2Location = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 10), EndStationLocation()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitS2Location.setStatus('current')
dlswCircuitS2TDomain = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 11), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitS2TDomain.setStatus('current')
dlswCircuitS2TAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 12), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitS2TAddress.setStatus('current')
dlswCircuitS2CircuitId = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 13), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitS2CircuitId.setStatus('current')
dlswCircuitOrigin = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("s1", 1), ("s2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitOrigin.setStatus('current')
dlswCircuitEntryTime = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 15), TimeTicks()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitEntryTime.setStatus('current')
dlswCircuitStateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 16), TimeTicks()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitStateTime.setStatus('current')
dlswCircuitState = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("disconnected", 1), ("circuitStart", 2), ("resolvePending", 3), ("circuitPending", 4), ("circuitEstablished", 5), ("connectPending", 6), ("contactPending", 7), ("connected", 8), ("disconnectPending", 9), ("haltPending", 10), ("haltPendingNoack", 11), ("circuitRestart", 12), ("restartPending", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlswCircuitState.setStatus('current')
dlswCircuitPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unsupported", 1), ("low", 2), ("medium", 3), ("high", 4), ("highest", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitPriority.setStatus('current')
dlswCircuitFCSendGrantedUnits = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitFCSendGrantedUnits.setStatus('current')
dlswCircuitFCSendCurrentWndw = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitFCSendCurrentWndw.setStatus('current')
dlswCircuitFCRecvGrantedUnits = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitFCRecvGrantedUnits.setStatus('current')
dlswCircuitFCRecvCurrentWndw = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitFCRecvCurrentWndw.setStatus('current')
dlswCircuitFCLargestRecvGranted = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitFCLargestRecvGranted.setStatus('current')
dlswCircuitFCLargestSendGranted = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitFCLargestSendGranted.setStatus('current')
dlswCircuitFCHalveWndwSents = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitFCHalveWndwSents.setStatus('current')
dlswCircuitFCResetOpSents = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitFCResetOpSents.setStatus('current')
dlswCircuitFCHalveWndwRcvds = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitFCHalveWndwRcvds.setStatus('current')
dlswCircuitFCResetOpRcvds = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitFCResetOpRcvds.setStatus('current')
dlswCircuitDiscReasonLocal = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("endStationDiscRcvd", 1), ("endStationDlcError", 2), ("protocolError", 3), ("operatorCommand", 4), ("haltDlRcvd", 5), ("haltDlNoAckRcvd", 6), ("transportConnClosed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitDiscReasonLocal.setStatus('current')
dlswCircuitDiscReasonRemote = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("endStationDiscRcvd", 2), ("endStationDlcError", 3), ("protocolError", 4), ("operatorCommand", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitDiscReasonRemote.setStatus('current')
dlswCircuitDiscReasonRemoteData = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 5, 2, 1, 31), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswCircuitDiscReasonRemoteData.setStatus('current')
dlswSdlcLsEntries = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlswSdlcLsEntries.setStatus('current')
dlswSdlcLsTable = MibTable((1, 3, 6, 1, 2, 1, 46, 1, 6, 2), )
if mibBuilder.loadTexts: dlswSdlcLsTable.setStatus('current')
dlswSdlcLsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 46, 1, 6, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "SNA-SDLC-MIB", "sdlcLSAddress"))
if mibBuilder.loadTexts: dlswSdlcLsEntry.setStatus('current')
dlswSdlcLsLocalMac = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 6, 2, 1, 1), MacAddressNC()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswSdlcLsLocalMac.setStatus('current')
dlswSdlcLsLocalSap = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 6, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswSdlcLsLocalSap.setStatus('current')
dlswSdlcLsLocalIdBlock = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 6, 2, 1, 3), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(3, 3), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswSdlcLsLocalIdBlock.setStatus('current')
dlswSdlcLsLocalIdNum = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 6, 2, 1, 4), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(5, 5), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswSdlcLsLocalIdNum.setStatus('current')
dlswSdlcLsRemoteMac = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 6, 2, 1, 5), MacAddressNC().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswSdlcLsRemoteMac.setStatus('current')
dlswSdlcLsRemoteSap = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 6, 2, 1, 6), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 1), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswSdlcLsRemoteSap.setStatus('current')
dlswSdlcLsRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 46, 1, 6, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dlswSdlcLsRowStatus.setStatus('current')
dlswTrapControl = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 1, 1, 10))
dlswTrapCntlTConnPartnerReject = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 1, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("partial", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlswTrapCntlTConnPartnerReject.setStatus('current')
dlswTrapCntlTConnProtViolation = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 1, 10, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlswTrapCntlTConnProtViolation.setStatus('current')
dlswTrapCntlTConn = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 1, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("partial", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlswTrapCntlTConn.setStatus('current')
dlswTrapCntlCircuit = MibScalar((1, 3, 6, 1, 2, 1, 46, 1, 1, 10, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("partial", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlswTrapCntlCircuit.setStatus('current')
dlswTraps = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 1, 0))
dlswTrapTConnPartnerReject = NotificationType((1, 3, 6, 1, 2, 1, 46, 1, 0, 1)).setObjects(("DLSW-MIB", "dlswTConnOperTDomain"), ("DLSW-MIB", "dlswTConnOperRemoteTAddr"))
if mibBuilder.loadTexts: dlswTrapTConnPartnerReject.setStatus('current')
dlswTrapTConnProtViolation = NotificationType((1, 3, 6, 1, 2, 1, 46, 1, 0, 2)).setObjects(("DLSW-MIB", "dlswTConnOperTDomain"), ("DLSW-MIB", "dlswTConnOperRemoteTAddr"))
if mibBuilder.loadTexts: dlswTrapTConnProtViolation.setStatus('current')
dlswTrapTConnUp = NotificationType((1, 3, 6, 1, 2, 1, 46, 1, 0, 3)).setObjects(("DLSW-MIB", "dlswTConnOperTDomain"), ("DLSW-MIB", "dlswTConnOperRemoteTAddr"))
if mibBuilder.loadTexts: dlswTrapTConnUp.setStatus('current')
dlswTrapTConnDown = NotificationType((1, 3, 6, 1, 2, 1, 46, 1, 0, 4)).setObjects(("DLSW-MIB", "dlswTConnOperTDomain"), ("DLSW-MIB", "dlswTConnOperRemoteTAddr"))
if mibBuilder.loadTexts: dlswTrapTConnDown.setStatus('current')
dlswTrapCircuitUp = NotificationType((1, 3, 6, 1, 2, 1, 46, 1, 0, 5)).setObjects(("DLSW-MIB", "dlswCircuitS1Mac"), ("DLSW-MIB", "dlswCircuitS1Sap"), ("DLSW-MIB", "dlswCircuitS2Mac"), ("DLSW-MIB", "dlswCircuitS2Sap"))
if mibBuilder.loadTexts: dlswTrapCircuitUp.setStatus('current')
dlswTrapCircuitDown = NotificationType((1, 3, 6, 1, 2, 1, 46, 1, 0, 6)).setObjects(("DLSW-MIB", "dlswCircuitS1Mac"), ("DLSW-MIB", "dlswCircuitS1Sap"), ("DLSW-MIB", "dlswCircuitS2Mac"), ("DLSW-MIB", "dlswCircuitS2Sap"))
if mibBuilder.loadTexts: dlswTrapCircuitDown.setStatus('current')
dlswConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 3))
dlswCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 3, 1))
dlswGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 46, 3, 2))
dlswCoreCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 46, 3, 1, 1)).setObjects(("DLSW-MIB", "dlswNodeGroup"), ("DLSW-MIB", "dlswTConnStatGroup"), ("DLSW-MIB", "dlswTConnConfigGroup"), ("DLSW-MIB", "dlswTConnOperGroup"), ("DLSW-MIB", "dlswInterfaceGroup"), ("DLSW-MIB", "dlswCircuitGroup"), ("DLSW-MIB", "dlswCircuitStatGroup"), ("DLSW-MIB", "dlswNotificationGroup"), ("DLSW-MIB", "dlswNodeNBGroup"), ("DLSW-MIB", "dlswTConnNBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswCoreCompliance = dlswCoreCompliance.setStatus('current')
dlswTConnTcpCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 46, 3, 1, 2)).setObjects(("DLSW-MIB", "dlswTConnTcpConfigGroup"), ("DLSW-MIB", "dlswTConnTcpOperGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswTConnTcpCompliance = dlswTConnTcpCompliance.setStatus('current')
dlswDirCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 46, 3, 1, 3)).setObjects(("DLSW-MIB", "dlswDirGroup"), ("DLSW-MIB", "dlswDirNBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswDirCompliance = dlswDirCompliance.setStatus('current')
dlswDirLocateCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 46, 3, 1, 4)).setObjects(("DLSW-MIB", "dlswDirLocateGroup"), ("DLSW-MIB", "dlswDirLocateNBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswDirLocateCompliance = dlswDirLocateCompliance.setStatus('current')
dlswSdlcCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 46, 3, 1, 5)).setObjects(("DLSW-MIB", "dlswSdlcGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswSdlcCompliance = dlswSdlcCompliance.setStatus('current')
dlswNodeGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 46, 3, 2, 1)).setObjects(("DLSW-MIB", "dlswNodeVersion"), ("DLSW-MIB", "dlswNodeVendorID"), ("DLSW-MIB", "dlswNodeVersionString"), ("DLSW-MIB", "dlswNodeStdPacingSupport"), ("DLSW-MIB", "dlswNodeStatus"), ("DLSW-MIB", "dlswNodeUpTime"), ("DLSW-MIB", "dlswNodeVirtualSegmentLFSize"), ("DLSW-MIB", "dlswNodeResourceMacExclusivity"), ("DLSW-MIB", "dlswTrapCntlTConnPartnerReject"), ("DLSW-MIB", "dlswTrapCntlTConnProtViolation"), ("DLSW-MIB", "dlswTrapCntlTConn"), ("DLSW-MIB", "dlswTrapCntlCircuit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswNodeGroup = dlswNodeGroup.setStatus('current')
dlswNodeNBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 46, 3, 2, 2)).setObjects(("DLSW-MIB", "dlswNodeResourceNBExclusivity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswNodeNBGroup = dlswNodeNBGroup.setStatus('current')
dlswTConnStatGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 46, 3, 2, 3)).setObjects(("DLSW-MIB", "dlswTConnStatActiveConnections"), ("DLSW-MIB", "dlswTConnStatCloseIdles"), ("DLSW-MIB", "dlswTConnStatCloseBusys"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswTConnStatGroup = dlswTConnStatGroup.setStatus('current')
dlswTConnConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 46, 3, 2, 4)).setObjects(("DLSW-MIB", "dlswTConnConfigTDomain"), ("DLSW-MIB", "dlswTConnConfigLocalTAddr"), ("DLSW-MIB", "dlswTConnConfigRemoteTAddr"), ("DLSW-MIB", "dlswTConnConfigLastModifyTime"), ("DLSW-MIB", "dlswTConnConfigEntryType"), ("DLSW-MIB", "dlswTConnConfigGroupDefinition"), ("DLSW-MIB", "dlswTConnConfigSetupType"), ("DLSW-MIB", "dlswTConnConfigSapList"), ("DLSW-MIB", "dlswTConnConfigAdvertiseMacNB"), ("DLSW-MIB", "dlswTConnConfigInitCirRecvWndw"), ("DLSW-MIB", "dlswTConnConfigOpens"), ("DLSW-MIB", "dlswTConnConfigRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswTConnConfigGroup = dlswTConnConfigGroup.setStatus('current')
dlswTConnOperGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 46, 3, 2, 5)).setObjects(("DLSW-MIB", "dlswTConnOperLocalTAddr"), ("DLSW-MIB", "dlswTConnOperEntryTime"), ("DLSW-MIB", "dlswTConnOperConnectTime"), ("DLSW-MIB", "dlswTConnOperState"), ("DLSW-MIB", "dlswTConnOperConfigIndex"), ("DLSW-MIB", "dlswTConnOperFlowCntlMode"), ("DLSW-MIB", "dlswTConnOperPartnerVersion"), ("DLSW-MIB", "dlswTConnOperPartnerVendorID"), ("DLSW-MIB", "dlswTConnOperPartnerVersionStr"), ("DLSW-MIB", "dlswTConnOperPartnerInitPacingWndw"), ("DLSW-MIB", "dlswTConnOperPartnerSapList"), ("DLSW-MIB", "dlswTConnOperPartnerMacExcl"), ("DLSW-MIB", "dlswTConnOperPartnerMacInfo"), ("DLSW-MIB", "dlswTConnOperDiscTime"), ("DLSW-MIB", "dlswTConnOperDiscReason"), ("DLSW-MIB", "dlswTConnOperDiscActiveCir"), ("DLSW-MIB", "dlswTConnOperInDataPkts"), ("DLSW-MIB", "dlswTConnOperOutDataPkts"), ("DLSW-MIB", "dlswTConnOperInDataOctets"), ("DLSW-MIB", "dlswTConnOperOutDataOctets"), ("DLSW-MIB", "dlswTConnOperInCntlPkts"), ("DLSW-MIB", "dlswTConnOperOutCntlPkts"), ("DLSW-MIB", "dlswTConnOperCURexSents"), ("DLSW-MIB", "dlswTConnOperICRexRcvds"), ("DLSW-MIB", "dlswTConnOperCURexRcvds"), ("DLSW-MIB", "dlswTConnOperICRexSents"), ("DLSW-MIB", "dlswTConnOperCirCreates"), ("DLSW-MIB", "dlswTConnOperCircuits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswTConnOperGroup = dlswTConnOperGroup.setStatus('current')
dlswTConnNBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 46, 3, 2, 6)).setObjects(("DLSW-MIB", "dlswTConnOperPartnerNBExcl"), ("DLSW-MIB", "dlswTConnOperPartnerNBInfo"), ("DLSW-MIB", "dlswTConnOperNQexSents"), ("DLSW-MIB", "dlswTConnOperNRexRcvds"), ("DLSW-MIB", "dlswTConnOperNQexRcvds"), ("DLSW-MIB", "dlswTConnOperNRexSents"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswTConnNBGroup = dlswTConnNBGroup.setStatus('current')
dlswTConnTcpConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 46, 3, 2, 7)).setObjects(("DLSW-MIB", "dlswTConnTcpConfigKeepAliveInt"), ("DLSW-MIB", "dlswTConnTcpConfigTcpConnections"), ("DLSW-MIB", "dlswTConnTcpConfigMaxSegmentSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswTConnTcpConfigGroup = dlswTConnTcpConfigGroup.setStatus('current')
dlswTConnTcpOperGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 46, 3, 2, 8)).setObjects(("DLSW-MIB", "dlswTConnTcpOperKeepAliveInt"), ("DLSW-MIB", "dlswTConnTcpOperPrefTcpConnections"), ("DLSW-MIB", "dlswTConnTcpOperTcpConnections"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswTConnTcpOperGroup = dlswTConnTcpOperGroup.setStatus('current')
dlswInterfaceGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 46, 3, 2, 9)).setObjects(("DLSW-MIB", "dlswIfRowStatus"), ("DLSW-MIB", "dlswIfVirtualSegment"), ("DLSW-MIB", "dlswIfSapList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswInterfaceGroup = dlswInterfaceGroup.setStatus('current')
dlswDirGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 46, 3, 2, 10)).setObjects(("DLSW-MIB", "dlswDirMacEntries"), ("DLSW-MIB", "dlswDirMacCacheHits"), ("DLSW-MIB", "dlswDirMacCacheMisses"), ("DLSW-MIB", "dlswDirMacCacheNextIndex"), ("DLSW-MIB", "dlswDirMacMac"), ("DLSW-MIB", "dlswDirMacMask"), ("DLSW-MIB", "dlswDirMacEntryType"), ("DLSW-MIB", "dlswDirMacLocationType"), ("DLSW-MIB", "dlswDirMacLocation"), ("DLSW-MIB", "dlswDirMacStatus"), ("DLSW-MIB", "dlswDirMacLFSize"), ("DLSW-MIB", "dlswDirMacRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswDirGroup = dlswDirGroup.setStatus('current')
dlswDirNBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 46, 3, 2, 11)).setObjects(("DLSW-MIB", "dlswDirNBEntries"), ("DLSW-MIB", "dlswDirNBCacheHits"), ("DLSW-MIB", "dlswDirNBCacheMisses"), ("DLSW-MIB", "dlswDirNBCacheNextIndex"), ("DLSW-MIB", "dlswDirNBName"), ("DLSW-MIB", "dlswDirNBNameType"), ("DLSW-MIB", "dlswDirNBEntryType"), ("DLSW-MIB", "dlswDirNBLocationType"), ("DLSW-MIB", "dlswDirNBLocation"), ("DLSW-MIB", "dlswDirNBStatus"), ("DLSW-MIB", "dlswDirNBLFSize"), ("DLSW-MIB", "dlswDirNBRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswDirNBGroup = dlswDirNBGroup.setStatus('current')
dlswDirLocateGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 46, 3, 2, 12)).setObjects(("DLSW-MIB", "dlswDirLocateMacLocation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswDirLocateGroup = dlswDirLocateGroup.setStatus('current')
dlswDirLocateNBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 46, 3, 2, 13)).setObjects(("DLSW-MIB", "dlswDirLocateNBLocation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswDirLocateNBGroup = dlswDirLocateNBGroup.setStatus('current')
dlswCircuitStatGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 46, 3, 2, 14)).setObjects(("DLSW-MIB", "dlswCircuitStatActives"), ("DLSW-MIB", "dlswCircuitStatCreates"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswCircuitStatGroup = dlswCircuitStatGroup.setStatus('current')
dlswCircuitGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 46, 3, 2, 15)).setObjects(("DLSW-MIB", "dlswCircuitS1IfIndex"), ("DLSW-MIB", "dlswCircuitS1DlcType"), ("DLSW-MIB", "dlswCircuitS1RouteInfo"), ("DLSW-MIB", "dlswCircuitS1CircuitId"), ("DLSW-MIB", "dlswCircuitS1Dlc"), ("DLSW-MIB", "dlswCircuitS2Location"), ("DLSW-MIB", "dlswCircuitS2TDomain"), ("DLSW-MIB", "dlswCircuitS2TAddress"), ("DLSW-MIB", "dlswCircuitS2CircuitId"), ("DLSW-MIB", "dlswCircuitOrigin"), ("DLSW-MIB", "dlswCircuitEntryTime"), ("DLSW-MIB", "dlswCircuitStateTime"), ("DLSW-MIB", "dlswCircuitState"), ("DLSW-MIB", "dlswCircuitPriority"), ("DLSW-MIB", "dlswCircuitFCSendGrantedUnits"), ("DLSW-MIB", "dlswCircuitFCSendCurrentWndw"), ("DLSW-MIB", "dlswCircuitFCRecvGrantedUnits"), ("DLSW-MIB", "dlswCircuitFCRecvCurrentWndw"), ("DLSW-MIB", "dlswCircuitFCLargestRecvGranted"), ("DLSW-MIB", "dlswCircuitFCLargestSendGranted"), ("DLSW-MIB", "dlswCircuitFCHalveWndwSents"), ("DLSW-MIB", "dlswCircuitFCResetOpSents"), ("DLSW-MIB", "dlswCircuitFCHalveWndwRcvds"), ("DLSW-MIB", "dlswCircuitFCResetOpRcvds"), ("DLSW-MIB", "dlswCircuitDiscReasonLocal"), ("DLSW-MIB", "dlswCircuitDiscReasonRemote"), ("DLSW-MIB", "dlswCircuitDiscReasonRemoteData"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswCircuitGroup = dlswCircuitGroup.setStatus('current')
dlswSdlcGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 46, 3, 2, 16)).setObjects(("DLSW-MIB", "dlswSdlcLsEntries"), ("DLSW-MIB", "dlswSdlcLsLocalMac"), ("DLSW-MIB", "dlswSdlcLsLocalSap"), ("DLSW-MIB", "dlswSdlcLsLocalIdBlock"), ("DLSW-MIB", "dlswSdlcLsLocalIdNum"), ("DLSW-MIB", "dlswSdlcLsRemoteMac"), ("DLSW-MIB", "dlswSdlcLsRemoteSap"), ("DLSW-MIB", "dlswSdlcLsRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswSdlcGroup = dlswSdlcGroup.setStatus('current')
dlswNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 46, 3, 2, 17)).setObjects(("DLSW-MIB", "dlswTrapTConnPartnerReject"), ("DLSW-MIB", "dlswTrapTConnProtViolation"), ("DLSW-MIB", "dlswTrapTConnUp"), ("DLSW-MIB", "dlswTrapTConnDown"), ("DLSW-MIB", "dlswTrapCircuitUp"), ("DLSW-MIB", "dlswTrapCircuitDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlswNotificationGroup = dlswNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("DLSW-MIB", dlswTConnConfigOpens=dlswTConnConfigOpens, dlswTrapCircuitDown=dlswTrapCircuitDown, dlswDirStat=dlswDirStat, dlswCircuitS2TDomain=dlswCircuitS2TDomain, dlswTConnConfigIndex=dlswTConnConfigIndex, dlswCircuitS2Sap=dlswCircuitS2Sap, dlswTConnStatGroup=dlswTConnStatGroup, dlswCircuitFCRecvGrantedUnits=dlswCircuitFCRecvGrantedUnits, dlswDirLocateNBName=dlswDirLocateNBName, dlswTConnTcpOperGroup=dlswTConnTcpOperGroup, dlswDirLocateGroup=dlswDirLocateGroup, dlswTConnOperOutDataOctets=dlswTConnOperOutDataOctets, dlswDirNBCacheMisses=dlswDirNBCacheMisses, dlswTrapTConnDown=dlswTrapTConnDown, dlswTConnOperPartnerVersionStr=dlswTConnOperPartnerVersionStr, dlswTConnTcp=dlswTConnTcp, dlswTConnTcpOperPrefTcpConnections=dlswTConnTcpOperPrefTcpConnections, dlswCircuitFCRecvCurrentWndw=dlswCircuitFCRecvCurrentWndw, dlswCircuitStatCreates=dlswCircuitStatCreates, dlswTConnConfigSetupType=dlswTConnConfigSetupType, dlswTrapCntlTConnPartnerReject=dlswTrapCntlTConnPartnerReject, dlswTConnOperTDomain=dlswTConnOperTDomain, dlswDirNBEntries=dlswDirNBEntries, dlswIfVirtualSegment=dlswIfVirtualSegment, dlswDirNBCacheNextIndex=dlswDirNBCacheNextIndex, dlswDirLocateCompliance=dlswDirLocateCompliance, dlswDirNBLocationType=dlswDirNBLocationType, dlswTConnOperInDataPkts=dlswTConnOperInDataPkts, dlswCircuitPriority=dlswCircuitPriority, dlswCircuitStatGroup=dlswCircuitStatGroup, dlswCircuitS1Sap=dlswCircuitS1Sap, dlswCircuitState=dlswCircuitState, dlswTConnOperInDataOctets=dlswTConnOperInDataOctets, dlswTConnOperNRexSents=dlswTConnOperNRexSents, dlswCircuitFCLargestSendGranted=dlswCircuitFCLargestSendGranted, dlswCircuitGroup=dlswCircuitGroup, dlswSdlcLsTable=dlswSdlcLsTable, DlcType=DlcType, dlswTConnOperGroup=dlswTConnOperGroup, dlswTrapTConnPartnerReject=dlswTrapTConnPartnerReject, dlswTConnOperCURexRcvds=dlswTConnOperCURexRcvds, dlswDirMacMac=dlswDirMacMac, dlswDirLocateMacLocation=dlswDirLocateMacLocation, dlswDirNBStatus=dlswDirNBStatus, dlswTConnTcpConfigKeepAliveInt=dlswTConnTcpConfigKeepAliveInt, dlswDirNBNameType=dlswDirNBNameType, dlswTConnConfigEntryType=dlswTConnConfigEntryType, dlswTrapCntlTConn=dlswTrapCntlTConn, dlswMIB=dlswMIB, dlswTConnOperEntry=dlswTConnOperEntry, dlswCircuitS1Mac=dlswCircuitS1Mac, dlswDomains=dlswDomains, dlswDirMacStatus=dlswDirMacStatus, dlswTConnConfigTable=dlswTConnConfigTable, dlswSdlcLsRowStatus=dlswSdlcLsRowStatus, dlswNodeGroup=dlswNodeGroup, dlswTConnOperDiscReason=dlswTConnOperDiscReason, DlswTCPAddress=DlswTCPAddress, dlswCircuitS2CircuitId=dlswCircuitS2CircuitId, dlswTConnTcpOperTable=dlswTConnTcpOperTable, dlswCircuitEntryTime=dlswCircuitEntryTime, dlswCompliances=dlswCompliances, dlswCircuitStatActives=dlswCircuitStatActives, dlswTConnOperNRexRcvds=dlswTConnOperNRexRcvds, dlswTConnConfigRemoteTAddr=dlswTConnConfigRemoteTAddr, dlswDirNBEntry=dlswDirNBEntry, dlswCircuitTable=dlswCircuitTable, dlswCircuitS2TAddress=dlswCircuitS2TAddress, dlswTConnOperNQexRcvds=dlswTConnOperNQexRcvds, dlswTConnTcpConfigMaxSegmentSize=dlswTConnTcpConfigMaxSegmentSize, dlswTConnConfigLastModifyTime=dlswTConnConfigLastModifyTime, dlswDirLocateNBTable=dlswDirLocateNBTable, dlswTConnConfigTDomain=dlswTConnConfigTDomain, dlswTConnOperCircuits=dlswTConnOperCircuits, dlswTrapTConnProtViolation=dlswTrapTConnProtViolation, dlswDirMacCacheMisses=dlswDirMacCacheMisses, dlswDirNBName=dlswDirNBName, dlswTConnTcpConfigTable=dlswTConnTcpConfigTable, dlswSdlc=dlswSdlc, dlswSdlcLsEntries=dlswSdlcLsEntries, dlswDirLocateNBLocation=dlswDirLocateNBLocation, NBName=NBName, dlswTConnOperICRexRcvds=dlswTConnOperICRexRcvds, dlswTConnStatActiveConnections=dlswTConnStatActiveConnections, MacAddressNC=MacAddressNC, EndStationLocation=EndStationLocation, dlswDirNBLocation=dlswDirNBLocation, dlswCircuitS1DlcType=dlswCircuitS1DlcType, dlswNodeVersion=dlswNodeVersion, dlswTConnOperInCntlPkts=dlswTConnOperInCntlPkts, dlswDirMacRowStatus=dlswDirMacRowStatus, dlswNodeStdPacingSupport=dlswNodeStdPacingSupport, dlswNodeUpTime=dlswNodeUpTime, dlswCircuitS1Dlc=dlswCircuitS1Dlc, dlswTConnTcpOperTcpConnections=dlswTConnTcpOperTcpConnections, dlswTrapCircuitUp=dlswTrapCircuitUp, dlswTConnOperFlowCntlMode=dlswTConnOperFlowCntlMode, dlswTConnOperOutDataPkts=dlswTConnOperOutDataPkts, dlswTConnTcpConfigEntry=dlswTConnTcpConfigEntry, dlswTConnConfigGroupDefinition=dlswTConnConfigGroupDefinition, dlswNodeStatus=dlswNodeStatus, dlswTConnOperPartnerMacExcl=dlswTConnOperPartnerMacExcl, dlswDirNBLFSize=dlswDirNBLFSize, dlswTConnSpecific=dlswTConnSpecific, dlswTConnOperTable=dlswTConnOperTable, dlswDirLocateMacEntry=dlswDirLocateMacEntry, dlswGroups=dlswGroups, dlswDirMacEntries=dlswDirMacEntries, dlswTConnStatCloseIdles=dlswTConnStatCloseIdles, dlswIfRowStatus=dlswIfRowStatus, dlswTConnOperPartnerVersion=dlswTConnOperPartnerVersion, dlswTConnOperNQexSents=dlswTConnOperNQexSents, dlswDirMacCacheNextIndex=dlswDirMacCacheNextIndex, dlswDirMacLocationType=dlswDirMacLocationType, dlswDirNBEntryType=dlswDirNBEntryType, dlswCoreCompliance=dlswCoreCompliance, dlswTConnOperConnectTime=dlswTConnOperConnectTime, dlswTConnOperOutCntlPkts=dlswTConnOperOutCntlPkts, dlswTConnOperICRexSents=dlswTConnOperICRexSents, dlswDirMacCacheHits=dlswDirMacCacheHits, dlswIfTable=dlswIfTable, dlswSdlcCompliance=dlswSdlcCompliance, dlswTConnStatCloseBusys=dlswTConnStatCloseBusys, dlswNodeNBGroup=dlswNodeNBGroup, dlswNodeVirtualSegmentLFSize=dlswNodeVirtualSegmentLFSize, dlswDirNBIndex=dlswDirNBIndex, dlswDirectory=dlswDirectory, dlswSdlcLsRemoteMac=dlswSdlcLsRemoteMac, null=null, dlswDirNBTable=dlswDirNBTable, dlswTConnConfigInitCirRecvWndw=dlswTConnConfigInitCirRecvWndw, dlswTConnOperPartnerSapList=dlswTConnOperPartnerSapList, dlswTConnOperPartnerNBInfo=dlswTConnOperPartnerNBInfo, dlswDirLocateNBMatch=dlswDirLocateNBMatch, dlswCircuitFCHalveWndwRcvds=dlswCircuitFCHalveWndwRcvds, dlswDirMacLFSize=dlswDirMacLFSize, dlswSdlcLsLocalIdNum=dlswSdlcLsLocalIdNum, dlswCircuitEntry=dlswCircuitEntry, dlswCircuitDiscReasonRemote=dlswCircuitDiscReasonRemote, dlswCircuitFCLargestRecvGranted=dlswCircuitFCLargestRecvGranted, dlswTConnTcpCompliance=dlswTConnTcpCompliance, dlswDirNBCacheHits=dlswDirNBCacheHits, dlswNodeVendorID=dlswNodeVendorID, dlswCircuitDiscReasonRemoteData=dlswCircuitDiscReasonRemoteData, dlswSdlcLsLocalMac=dlswSdlcLsLocalMac, dlswConformance=dlswConformance, dlswTConnOperPartnerVendorID=dlswTConnOperPartnerVendorID, dlswCircuitFCSendCurrentWndw=dlswCircuitFCSendCurrentWndw, dlswSdlcLsLocalSap=dlswSdlcLsLocalSap, dlswDirNBGroup=dlswDirNBGroup, dlswTConnTcpOperEntry=dlswTConnTcpOperEntry, dlswTConnTcpOperKeepAliveInt=dlswTConnTcpOperKeepAliveInt, dlswDirLocateMacTable=dlswDirLocateMacTable, dlswNodeVersionString=dlswNodeVersionString, dlswNodeResourceMacExclusivity=dlswNodeResourceMacExclusivity, dlswCircuitDiscReasonLocal=dlswCircuitDiscReasonLocal, dlswSdlcGroup=dlswSdlcGroup, dlswCircuitFCResetOpRcvds=dlswCircuitFCResetOpRcvds, dlswTConnStat=dlswTConnStat, dlswTConnOperDiscTime=dlswTConnOperDiscTime, dlswDirMacEntry=dlswDirMacEntry, dlswTConnOperCirCreates=dlswTConnOperCirCreates, dlswCircuitS1CircuitId=dlswCircuitS1CircuitId, dlswSdlcLsLocalIdBlock=dlswSdlcLsLocalIdBlock, dlswTConnOperLocalTAddr=dlswTConnOperLocalTAddr, LFSize=LFSize, dlswTConnOperCURexSents=dlswTConnOperCURexSents, dlswTConnTcpConfigGroup=dlswTConnTcpConfigGroup, dlswTConnOperPartnerMacInfo=dlswTConnOperPartnerMacInfo, dlswIfSapList=dlswIfSapList, dlswCircuitStateTime=dlswCircuitStateTime, dlswNode=dlswNode, dlswTConnOperDiscActiveCir=dlswTConnOperDiscActiveCir, dlswDirCache=dlswDirCache, dlswCircuit=dlswCircuit, dlswCircuitS1IfIndex=dlswCircuitS1IfIndex, dlswDirLocateMacMatch=dlswDirLocateMacMatch, dlswDirNBRowStatus=dlswDirNBRowStatus, dlswDirLocate=dlswDirLocate, dlswInterfaceGroup=dlswInterfaceGroup, dlswCircuitS2Location=dlswCircuitS2Location, dlswTraps=dlswTraps, dlswTrapCntlCircuit=dlswTrapCntlCircuit, dlswTConnConfigEntry=dlswTConnConfigEntry, dlswTConnConfigRowStatus=dlswTConnConfigRowStatus, dlswDirMacIndex=dlswDirMacIndex, dlswDirCompliance=dlswDirCompliance, dlswCircuitS1RouteInfo=dlswCircuitS1RouteInfo, dlswIfEntry=dlswIfEntry, PYSNMP_MODULE_ID=dlsw, dlsw=dlsw, dlswTConnTcpConfigTcpConnections=dlswTConnTcpConfigTcpConnections, dlswDirMacLocation=dlswDirMacLocation, dlswInterface=dlswInterface, dlswTConnOperEntryTime=dlswTConnOperEntryTime, dlswTrapControl=dlswTrapControl, dlswTConnOperConfigIndex=dlswTConnOperConfigIndex, dlswDirMacMask=dlswDirMacMask, dlswTrapCntlTConnProtViolation=dlswTrapCntlTConnProtViolation, dlswNotificationGroup=dlswNotificationGroup, dlswTConnOperRemoteTAddr=dlswTConnOperRemoteTAddr, dlswDirMacEntryType=dlswDirMacEntryType, dlswTConnConfigSapList=dlswTConnConfigSapList, dlswTConnConfigGroup=dlswTConnConfigGroup, dlswCircuitFCSendGrantedUnits=dlswCircuitFCSendGrantedUnits, dlswCircuitOrigin=dlswCircuitOrigin, dlswNodeResourceNBExclusivity=dlswNodeResourceNBExclusivity, dlswDirLocateNBGroup=dlswDirLocateNBGroup, dlswTrapTConnUp=dlswTrapTConnUp, dlswTConnConfigAdvertiseMacNB=dlswTConnConfigAdvertiseMacNB, dlswDirMacTable=dlswDirMacTable, dlswDirLocateMacMac=dlswDirLocateMacMac, dlswDirGroup=dlswDirGroup, dlswCircuitFCResetOpSents=dlswCircuitFCResetOpSents, dlswTConn=dlswTConn, dlswTConnNBGroup=dlswTConnNBGroup, dlswTConnOperPartnerInitPacingWndw=dlswTConnOperPartnerInitPacingWndw, dlswTConnConfigLocalTAddr=dlswTConnConfigLocalTAddr, dlswTConnOperPartnerNBExcl=dlswTConnOperPartnerNBExcl, dlswCircuitStat=dlswCircuitStat, TAddress=TAddress, dlswSdlcLsEntry=dlswSdlcLsEntry, dlswSdlcLsRemoteSap=dlswSdlcLsRemoteSap, dlswTConnOperState=dlswTConnOperState, dlswDirLocateNBEntry=dlswDirLocateNBEntry, dlswCircuitS2Mac=dlswCircuitS2Mac, dlswCircuitFCHalveWndwSents=dlswCircuitFCHalveWndwSents, dlswTCPDomain=dlswTCPDomain)
