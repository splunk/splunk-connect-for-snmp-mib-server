#
# PySNMP MIB module Wellfleet-TELNET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-TELNET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:35:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Counter32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Gauge32, NotificationType, Bits, IpAddress, TimeTicks, ModuleIdentity, iso, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Gauge32", "NotificationType", "Bits", "IpAddress", "TimeTicks", "ModuleIdentity", "iso", "Unsigned32", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfTelnetGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfTelnetGroup")
wfTelnet = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1))
wfTelnetDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetDelete.setStatus('mandatory')
wfTelnetDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetDisable.setStatus('mandatory')
wfTelnetLinesPerScreen = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 3), Integer32().clone(24)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetLinesPerScreen.setStatus('mandatory')
wfTelnetMoreDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetMoreDisable.setStatus('mandatory')
wfTelnetPrompt = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetPrompt.setStatus('mandatory')
wfTelnetLoginTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetLoginTimeOut.setStatus('mandatory')
wfTelnetPasswordTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetPasswordTimeOut.setStatus('mandatory')
wfTelnetCommandTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetCommandTimeOut.setStatus('mandatory')
wfTelnetLoginRetries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetLoginRetries.setStatus('mandatory')
wfTelnetTotalLogins = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTelnetTotalLogins.setStatus('mandatory')
wfTelnetUserLoginErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTelnetUserLoginErrors.setStatus('mandatory')
wfTelnetManagerLoginErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTelnetManagerLoginErrors.setStatus('mandatory')
wfTelnetOtherLoginErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTelnetOtherLoginErrors.setStatus('mandatory')
wfTelnetActiveSessions = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTelnetActiveSessions.setStatus('mandatory')
wfTelnetDiagnosticReport = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetDiagnosticReport.setStatus('mandatory')
wfTelnetDiagnosticExercise = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetDiagnosticExercise.setStatus('mandatory')
wfTelnetDiagnosticNetworkData = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetDiagnosticNetworkData.setStatus('mandatory')
wfTelnetDiagnosticPtyData = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetDiagnosticPtyData.setStatus('mandatory')
wfTelnetDiagnosticOptions = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetDiagnosticOptions.setStatus('mandatory')
wfTelnetInitialSearchPath = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetInitialSearchPath.setStatus('obsolete')
wfTelnetManagerAutoScript = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetManagerAutoScript.setStatus('mandatory')
wfTelnetUserAutoScript = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetUserAutoScript.setStatus('mandatory')
wfTelnetUserAbortLogoutDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetUserAbortLogoutDisable.setStatus('mandatory')
wfTelnetHistoryDepth = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 40)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetHistoryDepth.setStatus('mandatory')
wfTelnetReverseEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetReverseEnable.setStatus('mandatory')
wfTelnetReversePort = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTelnetReversePort.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-TELNET-MIB", wfTelnetInitialSearchPath=wfTelnetInitialSearchPath, wfTelnetUserAbortLogoutDisable=wfTelnetUserAbortLogoutDisable, wfTelnetOtherLoginErrors=wfTelnetOtherLoginErrors, wfTelnetTotalLogins=wfTelnetTotalLogins, wfTelnetDisable=wfTelnetDisable, wfTelnetPasswordTimeOut=wfTelnetPasswordTimeOut, wfTelnetCommandTimeOut=wfTelnetCommandTimeOut, wfTelnetDelete=wfTelnetDelete, wfTelnetPrompt=wfTelnetPrompt, wfTelnetMoreDisable=wfTelnetMoreDisable, wfTelnetDiagnosticPtyData=wfTelnetDiagnosticPtyData, wfTelnet=wfTelnet, wfTelnetLinesPerScreen=wfTelnetLinesPerScreen, wfTelnetReversePort=wfTelnetReversePort, wfTelnetManagerLoginErrors=wfTelnetManagerLoginErrors, wfTelnetUserAutoScript=wfTelnetUserAutoScript, wfTelnetActiveSessions=wfTelnetActiveSessions, wfTelnetLoginTimeOut=wfTelnetLoginTimeOut, wfTelnetLoginRetries=wfTelnetLoginRetries, wfTelnetReverseEnable=wfTelnetReverseEnable, wfTelnetDiagnosticExercise=wfTelnetDiagnosticExercise, wfTelnetDiagnosticOptions=wfTelnetDiagnosticOptions, wfTelnetDiagnosticNetworkData=wfTelnetDiagnosticNetworkData, wfTelnetDiagnosticReport=wfTelnetDiagnosticReport, wfTelnetHistoryDepth=wfTelnetHistoryDepth, wfTelnetUserLoginErrors=wfTelnetUserLoginErrors, wfTelnetManagerAutoScript=wfTelnetManagerAutoScript)
