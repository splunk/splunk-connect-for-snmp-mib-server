#
# PySNMP MIB module NMS-EPON-ONU-BATCH-CONFIG (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NMS-EPON-ONU-BATCH-CONFIG
# Produced by pysmi-0.3.4 at Mon Apr 29 20:12:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
nmsEPONGroup, = mibBuilder.importSymbols("NMS-SMI", "nmsEPONGroup")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ObjectIdentity, IpAddress, Unsigned32, MibIdentifier, Bits, TimeTicks, NotificationType, Counter32, Integer32, Counter64, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ObjectIdentity", "IpAddress", "Unsigned32", "MibIdentifier", "Bits", "TimeTicks", "NotificationType", "Counter32", "Integer32", "Counter64", "ModuleIdentity", "Gauge32")
MacAddress, DisplayString, TextualConvention, PhysAddress, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "TextualConvention", "PhysAddress", "TruthValue", "RowStatus")
nmsEponOnuBatchConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11606, 10, 101, 22))
nmsEponOnuConfigIndex = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 101, 22, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsEponOnuConfigIndex.setStatus('mandatory')
nmsEponOnuConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 101, 22, 2), )
if mibBuilder.loadTexts: nmsEponOnuConfigTable.setStatus('mandatory')
nmsEponOnuConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 101, 22, 2, 1), ).setIndexNames((0, "NMS-EPON-ONU-BATCH-CONFIG", "onuConfigSequenceNo"))
if mibBuilder.loadTexts: nmsEponOnuConfigEntry.setStatus('mandatory')
onuConfigSequenceNo = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 22, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuConfigSequenceNo.setStatus('mandatory')
onuConfigCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 22, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuConfigCommand.setStatus('mandatory')
onuConfigurationAdd = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 101, 22, 3), OctetString()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: onuConfigurationAdd.setStatus('mandatory')
onuCfgApplyLLIDs = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 101, 22, 4), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuCfgApplyLLIDs.setStatus('mandatory')
onuCfgApplyAction = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 101, 22, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no_action", 0), ("apply", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: onuCfgApplyAction.setStatus('mandatory')
ounCfgApplyResult = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 101, 22, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("success", 0), ("processing", 1), ("other", 2), ("reserved", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ounCfgApplyResult.setStatus('mandatory')
mibBuilder.exportSymbols("NMS-EPON-ONU-BATCH-CONFIG", onuCfgApplyAction=onuCfgApplyAction, onuCfgApplyLLIDs=onuCfgApplyLLIDs, nmsEponOnuConfigTable=nmsEponOnuConfigTable, onuConfigurationAdd=onuConfigurationAdd, onuConfigSequenceNo=onuConfigSequenceNo, nmsEponOnuConfigEntry=nmsEponOnuConfigEntry, ounCfgApplyResult=ounCfgApplyResult, onuConfigCommand=onuConfigCommand, nmsEponOnuConfigIndex=nmsEponOnuConfigIndex, nmsEponOnuBatchConfig=nmsEponOnuBatchConfig)
