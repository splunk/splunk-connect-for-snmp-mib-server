#
# PySNMP MIB module HH3C-TRANSCEIVER-INFO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-TRANSCEIVER-INFO-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:17:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, IpAddress, Counter64, ObjectIdentity, Gauge32, ModuleIdentity, iso, Bits, TimeTicks, NotificationType, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "Counter64", "ObjectIdentity", "Gauge32", "ModuleIdentity", "iso", "Bits", "TimeTicks", "NotificationType", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
hh3cTransceiver = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 70))
hh3cTransceiver.setRevisions(('2014-08-11 10:50', '2013-06-06 00:00', '2012-06-06 00:00', '2009-12-29 00:00', '2006-06-08 00:00', '2006-01-10 00:00',))
if mibBuilder.loadTexts: hh3cTransceiver.setLastUpdated('201408111050Z')
if mibBuilder.loadTexts: hh3cTransceiver.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
hh3cTransceiverInfoAdm = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1))
hh3cTransceiverInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1), )
if mibBuilder.loadTexts: hh3cTransceiverInfoTable.setStatus('current')
hh3cTransceiverInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cTransceiverInfoEntry.setStatus('current')
hh3cTransceiverHardwareType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverHardwareType.setStatus('current')
hh3cTransceiverType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverType.setStatus('current')
hh3cTransceiverWaveLength = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverWaveLength.setStatus('current')
hh3cTransceiverVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverVendorName.setStatus('current')
hh3cTransceiverSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverSerialNumber.setStatus('current')
hh3cTransceiverFiberDiameterType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 65535))).clone(namedValues=NamedValues(("fiber9", 1), ("fiber50", 2), ("fiber625", 3), ("copper", 4), ("unknown", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverFiberDiameterType.setStatus('current')
hh3cTransceiverTransferDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverTransferDistance.setStatus('current')
hh3cTransceiverDiagnostic = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverDiagnostic.setStatus('current')
hh3cTransceiverCurTXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverCurTXPower.setStatus('current')
hh3cTransceiverMaxTXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverMaxTXPower.setStatus('current')
hh3cTransceiverMinTXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverMinTXPower.setStatus('current')
hh3cTransceiverCurRXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverCurRXPower.setStatus('current')
hh3cTransceiverMaxRXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverMaxRXPower.setStatus('current')
hh3cTransceiverMinRXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverMinRXPower.setStatus('current')
hh3cTransceiverTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverTemperature.setStatus('current')
hh3cTransceiverVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverVoltage.setStatus('current')
hh3cTransceiverBiasCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverBiasCurrent.setStatus('current')
hh3cTransceiverTempHiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverTempHiAlarm.setStatus('current')
hh3cTransceiverTempLoAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverTempLoAlarm.setStatus('current')
hh3cTransceiverTempHiWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverTempHiWarn.setStatus('current')
hh3cTransceiverTempLoWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverTempLoWarn.setStatus('current')
hh3cTransceiverVccHiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverVccHiAlarm.setStatus('current')
hh3cTransceiverVccLoAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverVccLoAlarm.setStatus('current')
hh3cTransceiverVccHiWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverVccHiWarn.setStatus('current')
hh3cTransceiverVccLoWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverVccLoWarn.setStatus('current')
hh3cTransceiverBiasHiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverBiasHiAlarm.setStatus('current')
hh3cTransceiverBiasLoAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverBiasLoAlarm.setStatus('current')
hh3cTransceiverBiasHiWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverBiasHiWarn.setStatus('current')
hh3cTransceiverBiasLoWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverBiasLoWarn.setStatus('current')
hh3cTransceiverPwrOutHiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverPwrOutHiAlarm.setStatus('current')
hh3cTransceiverPwrOutLoAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverPwrOutLoAlarm.setStatus('current')
hh3cTransceiverPwrOutHiWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverPwrOutHiWarn.setStatus('current')
hh3cTransceiverPwrOutLoWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverPwrOutLoWarn.setStatus('current')
hh3cTransceiverRcvPwrHiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverRcvPwrHiAlarm.setStatus('current')
hh3cTransceiverRcvPwrLoAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverRcvPwrLoAlarm.setStatus('current')
hh3cTransceiverRcvPwrHiWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverRcvPwrHiWarn.setStatus('current')
hh3cTransceiverRcvPwrLoWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverRcvPwrLoWarn.setStatus('current')
hh3cTransceiverErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 38), Bits().clone(namedValues=NamedValues(("xcvrIOError", 0), ("xcvrChecksum", 1), ("xcvrTypeAndPortConfigMismatch", 2), ("xcvrTypeNotSupported", 3), ("wisLocalFault", 4), ("rcvOpticalPowerFault", 5), ("pmapmdReceiverLocalFault", 6), ("pcsReceiveLocalFault", 7), ("phyXSReceiveLocalFault", 8), ("laserBiasCurrentFault", 9), ("laserTemperatureFault", 10), ("laserOutputPowerFault", 11), ("txFault", 12), ("pmapmdTransmitterLocalFault", 13), ("pcsTransmitLocalFault", 14), ("phyXSTransmitLocalFault", 15), ("rxLossOfSignal", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverErrors.setStatus('current')
hh3cTransceiverVendorOUI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 39), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverVendorOUI.setStatus('current')
hh3cTransceiverRevisionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 1, 1, 40), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverRevisionNumber.setStatus('current')
hh3cTransceiverChannelTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 2), )
if mibBuilder.loadTexts: hh3cTransceiverChannelTable.setStatus('current')
hh3cTransceiverChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-TRANSCEIVER-INFO-MIB", "hh3cTransceiverChannelIndex"))
if mibBuilder.loadTexts: hh3cTransceiverChannelEntry.setStatus('current')
hh3cTransceiverChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hh3cTransceiverChannelIndex.setStatus('current')
hh3cTransceiverChannelCurTXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverChannelCurTXPower.setStatus('current')
hh3cTransceiverChannelCurRXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverChannelCurRXPower.setStatus('current')
hh3cTransceiverChannelTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverChannelTemperature.setStatus('current')
hh3cTransceiverChannelBiasCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 70, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTransceiverChannelBiasCurrent.setStatus('current')
mibBuilder.exportSymbols("HH3C-TRANSCEIVER-INFO-MIB", hh3cTransceiverType=hh3cTransceiverType, hh3cTransceiverMaxTXPower=hh3cTransceiverMaxTXPower, hh3cTransceiverChannelCurTXPower=hh3cTransceiverChannelCurTXPower, hh3cTransceiverTempHiAlarm=hh3cTransceiverTempHiAlarm, hh3cTransceiverDiagnostic=hh3cTransceiverDiagnostic, PYSNMP_MODULE_ID=hh3cTransceiver, hh3cTransceiverTemperature=hh3cTransceiverTemperature, hh3cTransceiverVendorName=hh3cTransceiverVendorName, hh3cTransceiverCurTXPower=hh3cTransceiverCurTXPower, hh3cTransceiverInfoTable=hh3cTransceiverInfoTable, hh3cTransceiverVccLoWarn=hh3cTransceiverVccLoWarn, hh3cTransceiverPwrOutHiAlarm=hh3cTransceiverPwrOutHiAlarm, hh3cTransceiverTransferDistance=hh3cTransceiverTransferDistance, hh3cTransceiverVccLoAlarm=hh3cTransceiverVccLoAlarm, hh3cTransceiverInfoEntry=hh3cTransceiverInfoEntry, hh3cTransceiverVccHiWarn=hh3cTransceiverVccHiWarn, hh3cTransceiverCurRXPower=hh3cTransceiverCurRXPower, hh3cTransceiverBiasLoAlarm=hh3cTransceiverBiasLoAlarm, hh3cTransceiverPwrOutLoWarn=hh3cTransceiverPwrOutLoWarn, hh3cTransceiverRcvPwrHiAlarm=hh3cTransceiverRcvPwrHiAlarm, hh3cTransceiverErrors=hh3cTransceiverErrors, hh3cTransceiverTempHiWarn=hh3cTransceiverTempHiWarn, hh3cTransceiverChannelBiasCurrent=hh3cTransceiverChannelBiasCurrent, hh3cTransceiverChannelCurRXPower=hh3cTransceiverChannelCurRXPower, hh3cTransceiverChannelTable=hh3cTransceiverChannelTable, hh3cTransceiverTempLoWarn=hh3cTransceiverTempLoWarn, hh3cTransceiver=hh3cTransceiver, hh3cTransceiverBiasLoWarn=hh3cTransceiverBiasLoWarn, hh3cTransceiverFiberDiameterType=hh3cTransceiverFiberDiameterType, hh3cTransceiverInfoAdm=hh3cTransceiverInfoAdm, hh3cTransceiverVccHiAlarm=hh3cTransceiverVccHiAlarm, hh3cTransceiverBiasHiAlarm=hh3cTransceiverBiasHiAlarm, hh3cTransceiverRevisionNumber=hh3cTransceiverRevisionNumber, hh3cTransceiverChannelIndex=hh3cTransceiverChannelIndex, hh3cTransceiverRcvPwrHiWarn=hh3cTransceiverRcvPwrHiWarn, hh3cTransceiverRcvPwrLoAlarm=hh3cTransceiverRcvPwrLoAlarm, hh3cTransceiverPwrOutHiWarn=hh3cTransceiverPwrOutHiWarn, hh3cTransceiverPwrOutLoAlarm=hh3cTransceiverPwrOutLoAlarm, hh3cTransceiverHardwareType=hh3cTransceiverHardwareType, hh3cTransceiverSerialNumber=hh3cTransceiverSerialNumber, hh3cTransceiverMinRXPower=hh3cTransceiverMinRXPower, hh3cTransceiverMaxRXPower=hh3cTransceiverMaxRXPower, hh3cTransceiverWaveLength=hh3cTransceiverWaveLength, hh3cTransceiverBiasCurrent=hh3cTransceiverBiasCurrent, hh3cTransceiverBiasHiWarn=hh3cTransceiverBiasHiWarn, hh3cTransceiverChannelTemperature=hh3cTransceiverChannelTemperature, hh3cTransceiverMinTXPower=hh3cTransceiverMinTXPower, hh3cTransceiverTempLoAlarm=hh3cTransceiverTempLoAlarm, hh3cTransceiverVendorOUI=hh3cTransceiverVendorOUI, hh3cTransceiverRcvPwrLoWarn=hh3cTransceiverRcvPwrLoWarn, hh3cTransceiverChannelEntry=hh3cTransceiverChannelEntry, hh3cTransceiverVoltage=hh3cTransceiverVoltage)
