#
# PySNMP MIB module CISCO-DS3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DS3-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:38:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Gauge32, TimeTicks, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Integer32, ObjectIdentity, Bits, NotificationType, Unsigned32, ModuleIdentity, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "TimeTicks", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Integer32", "ObjectIdentity", "Bits", "NotificationType", "Unsigned32", "ModuleIdentity", "iso", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoDs3MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 132))
ciscoDs3MIB.setRevisions(('2002-05-21 00:00', '2001-08-31 00:00', '2000-10-10 00:00', '2000-02-28 00:00',))
if mibBuilder.loadTexts: ciscoDs3MIB.setLastUpdated('200205210000Z')
if mibBuilder.loadTexts: ciscoDs3MIB.setOrganization('Cisco Systems, Inc.')
ciscoDs3MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 132, 1))
cds3Config = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 1))
cds3Alarm = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2))
cds3Stats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3))
cds3AlarmConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1))
cds3ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 1, 1), )
if mibBuilder.loadTexts: cds3ConfigTable.setStatus('current')
cds3ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cds3ConfigEntry.setStatus('current')
cds3LineType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("ds3cbitadm", 1), ("ds3cbitplcp", 2), ("e3g832adm", 3), ("e3g751adm", 4), ("e3g751plcp", 5), ("ds3m23adm", 6), ("ds3m23plcp", 7), ("other", 8), ("dsx3M23", 9), ("dsx3SYNTRAN", 10), ("dsx3CbitParity", 11), ("dsx3ClearChannel", 12), ("e3Framed", 13), ("e3Plcp", 14), ("ds3cbitfrmronly", 15), ("ds3m23frmronly", 16), ("e3g832frmronly", 17), ("e3g751frmronly", 18)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3LineType.setStatus('current')
cds3LineAIScBitsCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("check", 1), ("ignore", 2), ("notApplicable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3LineAIScBitsCheck.setStatus('current')
cds3LineRcvFEACValidation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fEACCodes4Of5", 1), ("fEACCodes8Of10", 2), ("disable", 3))).clone('fEACCodes4Of5')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3LineRcvFEACValidation.setStatus('current')
cds3LineOOFCriteria = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("bits3Of8", 1), ("bits3Of16", 2), ("notApplicable", 3))).clone('bits3Of8')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3LineOOFCriteria.setStatus('current')
cds3TraceToTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3TraceToTransmit.setStatus('current')
cds3TraceToExpect = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3TraceToExpect.setStatus('current')
cds3TraceAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAlarm", 1), ("traceFailure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3TraceAlarm.setStatus('current')
cds3InternalEqualizer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("use", 1), ("byPass", 2))).clone('use')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3InternalEqualizer.setStatus('current')
cds3NearEndLineLoopbackStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3NearEndLineLoopbackStatus.setStatus('current')
cds3FarEndLineLoopbackStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3FarEndLineLoopbackStatus.setStatus('current')
cds3AlarmConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1), )
if mibBuilder.loadTexts: cds3AlarmConfigTable.setStatus('current')
cds3AlarmConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cds3AlarmConfigEntry.setStatus('current')
cds3NEAlarmUpCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3NEAlarmUpCount.setStatus('current')
cds3NEAlarmDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3NEAlarmDownCount.setStatus('current')
cds3NEAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(150)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3NEAlarmThreshold.setStatus('current')
cds3FEAlarmUpCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3FEAlarmUpCount.setStatus('current')
cds3FEAlarmDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3FEAlarmDownCount.setStatus('current')
cds3FEAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(150)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3FEAlarmThreshold.setStatus('current')
cds3StatisticalAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("minor", 1), ("major", 2), ("none", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3StatisticalAlarmSeverity.setStatus('current')
cds3LCV15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3LCV15MinThreshold.setStatus('current')
cds3LCV24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3LCV24HrThreshold.setStatus('current')
cds3LES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3LES15MinThreshold.setStatus('current')
cds3LES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3LES24HrThreshold.setStatus('current')
cds3PCV15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3PCV15MinThreshold.setStatus('current')
cds3PCV24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3PCV24HrThreshold.setStatus('current')
cds3PES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3PES15MinThreshold.setStatus('current')
cds3PES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3PES24HrThreshold.setStatus('current')
cds3PSES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3PSES15MinThreshold.setStatus('current')
cds3PSES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3PSES24HrThreshold.setStatus('current')
cds3SEFS15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3SEFS15MinThreshold.setStatus('current')
cds3SEFS24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3SEFS24HrThreshold.setStatus('current')
cds3UAS15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3UAS15MinThreshold.setStatus('current')
cds3UAS24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3UAS24HrThreshold.setStatus('current')
cds3CCV15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3CCV15MinThreshold.setStatus('current')
cds3CCV24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3CCV24HrThreshold.setStatus('current')
cds3CES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3CES15MinThreshold.setStatus('current')
cds3CES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3CES24HrThreshold.setStatus('current')
cds3CSES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3CSES15MinThreshold.setStatus('current')
cds3CSES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3CSES24HrThreshold.setStatus('current')
cds3LSES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3LSES15MinThreshold.setStatus('current')
cds3LSES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3LSES24HrThreshold.setStatus('current')
cds3LineStatisticalAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 1, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3LineStatisticalAlarmState.setStatus('current')
cds3StatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 1), )
if mibBuilder.loadTexts: cds3StatsTable.setStatus('current')
cds3StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cds3StatsEntry.setStatus('current')
cds3RcvLOSCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3RcvLOSCount.setStatus('current')
cds3RcvOOFCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3RcvOOFCount.setStatus('current')
cds3RAICount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3RAICount.setStatus('current')
cds3CCVCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3CCVCount.setStatus('current')
cds3FECount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3FECount.setStatus('current')
cds3EXZSCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3EXZSCount.setStatus('current')
cds3LCVCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3LCVCount.setStatus('current')
cds3PCVCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PCVCount.setStatus('current')
cds3CPECount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3CPECount.setStatus('current')
cds3FEBECount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3FEBECount.setStatus('current')
cds3RcvAISCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3RcvAISCount.setStatus('current')
cds3AlarmConfigPlcpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 2), )
if mibBuilder.loadTexts: cds3AlarmConfigPlcpTable.setStatus('current')
cds3AlarmConfigPlcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cds3AlarmConfigPlcpEntry.setStatus('current')
cds3PlcpStatisticalAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("minor", 1), ("major", 2), ("none", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3PlcpStatisticalAlarmSeverity.setStatus('current')
cds3PlcpBip8CV15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3PlcpBip8CV15MinThreshold.setStatus('current')
cds3PlcpBip8CV24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3PlcpBip8CV24HrThreshold.setStatus('current')
cds3PlcpBip8ES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3PlcpBip8ES15MinThreshold.setStatus('current')
cds3PlcpBip8ES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3PlcpBip8ES24HrThreshold.setStatus('current')
cds3PlcpBip8SES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3PlcpBip8SES15MinThreshold.setStatus('current')
cds3PlcpBip8SES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3PlcpBip8SES24HrThreshold.setStatus('current')
cds3PlcpSEFS15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3PlcpSEFS15MinThreshold.setStatus('current')
cds3PlcpSEFS24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3PlcpSEFS24HrThreshold.setStatus('current')
cds3PlcpUAS15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3PlcpUAS15MinThreshold.setStatus('current')
cds3PlcpUAS24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 1, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cds3PlcpUAS24HrThreshold.setStatus('current')
cds3AlarmPlcpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 2), )
if mibBuilder.loadTexts: cds3AlarmPlcpTable.setStatus('current')
cds3AlarmPlcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cds3AlarmPlcpEntry.setStatus('current')
cds3PlcpLineAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpLineAlarmState.setStatus('current')
cds3PlcpLineStatisticalAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpLineStatisticalAlarmState.setStatus('current')
cds3PlcpBip8CVCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpBip8CVCurrent.setStatus('current')
cds3PlcpBip8CV24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpBip8CV24HrBucket.setStatus('current')
cds3PlcpBip8ESCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpBip8ESCurrent.setStatus('current')
cds3PlcpBip8ES24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpBip8ES24HrBucket.setStatus('current')
cds3PlcpBip8SESCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpBip8SESCurrent.setStatus('current')
cds3PlcpBip8SES24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpBip8SES24HrBucket.setStatus('current')
cds3PlcpSEFSCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpSEFSCurrent.setStatus('current')
cds3PlcpSEFS24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpSEFS24HrBucket.setStatus('current')
cds3PlcpUASCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpUASCurrent.setStatus('current')
cds3PlcpUAS24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpUAS24HrBucket.setStatus('current')
cds3PlcpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 2), )
if mibBuilder.loadTexts: cds3PlcpStatsTable.setStatus('current')
cds3PlcpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cds3PlcpStatsEntry.setStatus('current')
cds3PlcpRcvBip8Count = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpRcvBip8Count.setStatus('current')
cds3PlcpRcvOOFCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpRcvOOFCount.setStatus('current')
cds3PlcpRcvRAICount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpRcvRAICount.setStatus('current')
cds3PlcpFECount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpFECount.setStatus('current')
cds3PlcpFESecCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpFESecCount.setStatus('current')
cds3PlcpSEFSecCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpSEFSecCount.setStatus('current')
cds3PlcpFEBECount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpFEBECount.setStatus('current')
cds3PlcpFEBESecCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpFEBESecCount.setStatus('current')
cds3PlcpSEFEBESecCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PlcpSEFEBESecCount.setStatus('current')
cds3IntervalTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 4), )
if mibBuilder.loadTexts: cds3IntervalTable.setStatus('current')
cds3IntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-DS3-MIB", "cds3IntervalNumber"))
if mibBuilder.loadTexts: cds3IntervalEntry.setStatus('current')
cds3IntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3IntervalNumber.setStatus('current')
cds3IntervalLSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3IntervalLSESs.setStatus('current')
cds3Current24HrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 5), )
if mibBuilder.loadTexts: cds3Current24HrTable.setStatus('current')
cds3Current24HrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cds3Current24HrEntry.setStatus('current')
cds3LCVCurrent24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3LCVCurrent24Hr.setStatus('current')
cds3LESCurrent24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3LESCurrent24Hr.setStatus('current')
cds3PCVCurrent24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PCVCurrent24Hr.setStatus('current')
cds3PESCurrent24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PESCurrent24Hr.setStatus('current')
cds3PSESCurrent24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PSESCurrent24Hr.setStatus('current')
cds3SEFSCurrent24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3SEFSCurrent24Hr.setStatus('current')
cds3UASCurrent24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3UASCurrent24Hr.setStatus('current')
cds3CCVCurrent24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3CCVCurrent24Hr.setStatus('current')
cds3CESCurrent24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3CESCurrent24Hr.setStatus('current')
cds3CSESCurrent24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3CSESCurrent24Hr.setStatus('current')
cds3LSESCurrent24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3LSESCurrent24Hr.setStatus('current')
cds3Previous24HrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 6), )
if mibBuilder.loadTexts: cds3Previous24HrTable.setStatus('current')
cds3Previous24HrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cds3Previous24HrEntry.setStatus('current')
cds3LCVPrevious24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3LCVPrevious24Hr.setStatus('current')
cds3LESPrevious24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3LESPrevious24Hr.setStatus('current')
cds3PCVPrevious24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PCVPrevious24Hr.setStatus('current')
cds3PESPrevious24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PESPrevious24Hr.setStatus('current')
cds3PSESPrevious24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3PSESPrevious24Hr.setStatus('current')
cds3SEFSPrevious24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3SEFSPrevious24Hr.setStatus('current')
cds3UASPrevious24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3UASPrevious24Hr.setStatus('current')
cds3CCVPrevious24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3CCVPrevious24Hr.setStatus('current')
cds3CESPrevious24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3CESPrevious24Hr.setStatus('current')
cds3CSESPrevious24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3CSESPrevious24Hr.setStatus('current')
cds3LSESPrevious24Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 132, 1, 3, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cds3LSESPrevious24Hr.setStatus('current')
ciscoDs3MIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 132, 8))
ciscoDs3MIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 132, 8, 1))
ciscoDs3MIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 132, 8, 2))
ciscoDs3MIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 132, 8, 1, 1)).setObjects(("CISCO-DS3-MIB", "ciscoDs3ConfMIBGroup"), ("CISCO-DS3-MIB", "cds3StatsMIBGroup"), ("CISCO-DS3-MIB", "ciscoDs3AlarmMIBGroup"), ("CISCO-DS3-MIB", "ciscoPlcpCounterMIBGroup"), ("CISCO-DS3-MIB", "ciscoDs3Previous24HrGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDs3MIBCompliance = ciscoDs3MIBCompliance.setStatus('current')
ciscoDs3ConfMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 132, 8, 2, 1)).setObjects(("CISCO-DS3-MIB", "cds3LineType"), ("CISCO-DS3-MIB", "cds3LineAIScBitsCheck"), ("CISCO-DS3-MIB", "cds3LineRcvFEACValidation"), ("CISCO-DS3-MIB", "cds3LineOOFCriteria"), ("CISCO-DS3-MIB", "cds3TraceToTransmit"), ("CISCO-DS3-MIB", "cds3TraceToExpect"), ("CISCO-DS3-MIB", "cds3TraceAlarm"), ("CISCO-DS3-MIB", "cds3InternalEqualizer"), ("CISCO-DS3-MIB", "cds3NearEndLineLoopbackStatus"), ("CISCO-DS3-MIB", "cds3FarEndLineLoopbackStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDs3ConfMIBGroup = ciscoDs3ConfMIBGroup.setStatus('current')
cds3StatsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 132, 8, 2, 2)).setObjects(("CISCO-DS3-MIB", "cds3RcvLOSCount"), ("CISCO-DS3-MIB", "cds3RcvOOFCount"), ("CISCO-DS3-MIB", "cds3RAICount"), ("CISCO-DS3-MIB", "cds3CCVCount"), ("CISCO-DS3-MIB", "cds3FECount"), ("CISCO-DS3-MIB", "cds3EXZSCount"), ("CISCO-DS3-MIB", "cds3LCVCount"), ("CISCO-DS3-MIB", "cds3PCVCount"), ("CISCO-DS3-MIB", "cds3CPECount"), ("CISCO-DS3-MIB", "cds3FEBECount"), ("CISCO-DS3-MIB", "cds3RcvAISCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cds3StatsMIBGroup = cds3StatsMIBGroup.setStatus('current')
ciscoDs3AlarmMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 132, 8, 2, 3)).setObjects(("CISCO-DS3-MIB", "cds3NEAlarmUpCount"), ("CISCO-DS3-MIB", "cds3NEAlarmDownCount"), ("CISCO-DS3-MIB", "cds3NEAlarmThreshold"), ("CISCO-DS3-MIB", "cds3FEAlarmUpCount"), ("CISCO-DS3-MIB", "cds3FEAlarmDownCount"), ("CISCO-DS3-MIB", "cds3FEAlarmThreshold"), ("CISCO-DS3-MIB", "cds3StatisticalAlarmSeverity"), ("CISCO-DS3-MIB", "cds3LCV15MinThreshold"), ("CISCO-DS3-MIB", "cds3LCV24HrThreshold"), ("CISCO-DS3-MIB", "cds3LES15MinThreshold"), ("CISCO-DS3-MIB", "cds3LES24HrThreshold"), ("CISCO-DS3-MIB", "cds3PCV15MinThreshold"), ("CISCO-DS3-MIB", "cds3PCV24HrThreshold"), ("CISCO-DS3-MIB", "cds3PES15MinThreshold"), ("CISCO-DS3-MIB", "cds3PES24HrThreshold"), ("CISCO-DS3-MIB", "cds3PSES15MinThreshold"), ("CISCO-DS3-MIB", "cds3PSES24HrThreshold"), ("CISCO-DS3-MIB", "cds3SEFS15MinThreshold"), ("CISCO-DS3-MIB", "cds3SEFS24HrThreshold"), ("CISCO-DS3-MIB", "cds3UAS15MinThreshold"), ("CISCO-DS3-MIB", "cds3UAS24HrThreshold"), ("CISCO-DS3-MIB", "cds3CCV15MinThreshold"), ("CISCO-DS3-MIB", "cds3CCV24HrThreshold"), ("CISCO-DS3-MIB", "cds3CES15MinThreshold"), ("CISCO-DS3-MIB", "cds3CES24HrThreshold"), ("CISCO-DS3-MIB", "cds3CSES15MinThreshold"), ("CISCO-DS3-MIB", "cds3CSES24HrThreshold"), ("CISCO-DS3-MIB", "cds3LSES15MinThreshold"), ("CISCO-DS3-MIB", "cds3LSES24HrThreshold"), ("CISCO-DS3-MIB", "cds3LineStatisticalAlarmState"), ("CISCO-DS3-MIB", "cds3IntervalNumber"), ("CISCO-DS3-MIB", "cds3IntervalLSESs"), ("CISCO-DS3-MIB", "cds3LCVCurrent24Hr"), ("CISCO-DS3-MIB", "cds3LESCurrent24Hr"), ("CISCO-DS3-MIB", "cds3PCVCurrent24Hr"), ("CISCO-DS3-MIB", "cds3PESCurrent24Hr"), ("CISCO-DS3-MIB", "cds3PSESCurrent24Hr"), ("CISCO-DS3-MIB", "cds3SEFSCurrent24Hr"), ("CISCO-DS3-MIB", "cds3UASCurrent24Hr"), ("CISCO-DS3-MIB", "cds3CCVCurrent24Hr"), ("CISCO-DS3-MIB", "cds3CESCurrent24Hr"), ("CISCO-DS3-MIB", "cds3CSESCurrent24Hr"), ("CISCO-DS3-MIB", "cds3LSESCurrent24Hr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDs3AlarmMIBGroup = ciscoDs3AlarmMIBGroup.setStatus('current')
ciscoPlcpCounterMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 132, 8, 2, 4)).setObjects(("CISCO-DS3-MIB", "cds3PlcpRcvBip8Count"), ("CISCO-DS3-MIB", "cds3PlcpRcvOOFCount"), ("CISCO-DS3-MIB", "cds3PlcpRcvRAICount"), ("CISCO-DS3-MIB", "cds3PlcpFECount"), ("CISCO-DS3-MIB", "cds3PlcpFESecCount"), ("CISCO-DS3-MIB", "cds3PlcpSEFSecCount"), ("CISCO-DS3-MIB", "cds3PlcpFEBECount"), ("CISCO-DS3-MIB", "cds3PlcpFEBESecCount"), ("CISCO-DS3-MIB", "cds3PlcpSEFEBESecCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPlcpCounterMIBGroup = ciscoPlcpCounterMIBGroup.setStatus('current')
ciscoPlcpAlarmMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 132, 8, 2, 5)).setObjects(("CISCO-DS3-MIB", "cds3PlcpStatisticalAlarmSeverity"), ("CISCO-DS3-MIB", "cds3PlcpBip8CV15MinThreshold"), ("CISCO-DS3-MIB", "cds3PlcpBip8CV24HrThreshold"), ("CISCO-DS3-MIB", "cds3PlcpBip8ES15MinThreshold"), ("CISCO-DS3-MIB", "cds3PlcpBip8ES24HrThreshold"), ("CISCO-DS3-MIB", "cds3PlcpBip8SES15MinThreshold"), ("CISCO-DS3-MIB", "cds3PlcpBip8SES24HrThreshold"), ("CISCO-DS3-MIB", "cds3PlcpSEFS15MinThreshold"), ("CISCO-DS3-MIB", "cds3PlcpSEFS24HrThreshold"), ("CISCO-DS3-MIB", "cds3PlcpUAS15MinThreshold"), ("CISCO-DS3-MIB", "cds3PlcpUAS24HrThreshold"), ("CISCO-DS3-MIB", "cds3PlcpLineAlarmState"), ("CISCO-DS3-MIB", "cds3PlcpLineStatisticalAlarmState"), ("CISCO-DS3-MIB", "cds3PlcpBip8CVCurrent"), ("CISCO-DS3-MIB", "cds3PlcpBip8CV24HrBucket"), ("CISCO-DS3-MIB", "cds3PlcpBip8ESCurrent"), ("CISCO-DS3-MIB", "cds3PlcpBip8ES24HrBucket"), ("CISCO-DS3-MIB", "cds3PlcpBip8SESCurrent"), ("CISCO-DS3-MIB", "cds3PlcpBip8SES24HrBucket"), ("CISCO-DS3-MIB", "cds3PlcpSEFSCurrent"), ("CISCO-DS3-MIB", "cds3PlcpSEFS24HrBucket"), ("CISCO-DS3-MIB", "cds3PlcpUASCurrent"), ("CISCO-DS3-MIB", "cds3PlcpUAS24HrBucket"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPlcpAlarmMIBGroup = ciscoPlcpAlarmMIBGroup.setStatus('current')
ciscoDs3Previous24HrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 132, 8, 2, 6)).setObjects(("CISCO-DS3-MIB", "cds3LCVPrevious24Hr"), ("CISCO-DS3-MIB", "cds3LESPrevious24Hr"), ("CISCO-DS3-MIB", "cds3PCVPrevious24Hr"), ("CISCO-DS3-MIB", "cds3PESPrevious24Hr"), ("CISCO-DS3-MIB", "cds3PSESPrevious24Hr"), ("CISCO-DS3-MIB", "cds3SEFSPrevious24Hr"), ("CISCO-DS3-MIB", "cds3UASPrevious24Hr"), ("CISCO-DS3-MIB", "cds3CCVPrevious24Hr"), ("CISCO-DS3-MIB", "cds3CESPrevious24Hr"), ("CISCO-DS3-MIB", "cds3CSESPrevious24Hr"), ("CISCO-DS3-MIB", "cds3LSESPrevious24Hr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDs3Previous24HrGroup = ciscoDs3Previous24HrGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-DS3-MIB", cds3FEAlarmUpCount=cds3FEAlarmUpCount, cds3PlcpUAS15MinThreshold=cds3PlcpUAS15MinThreshold, cds3RcvOOFCount=cds3RcvOOFCount, cds3PlcpBip8CV15MinThreshold=cds3PlcpBip8CV15MinThreshold, cds3PCV24HrThreshold=cds3PCV24HrThreshold, cds3PlcpUASCurrent=cds3PlcpUASCurrent, cds3FEBECount=cds3FEBECount, cds3RcvAISCount=cds3RcvAISCount, cds3PlcpBip8SES15MinThreshold=cds3PlcpBip8SES15MinThreshold, cds3PlcpFECount=cds3PlcpFECount, cds3Current24HrTable=cds3Current24HrTable, cds3RcvLOSCount=cds3RcvLOSCount, cds3AlarmConfigPlcpTable=cds3AlarmConfigPlcpTable, cds3PlcpBip8CVCurrent=cds3PlcpBip8CVCurrent, cds3LESCurrent24Hr=cds3LESCurrent24Hr, cds3PlcpBip8CV24HrBucket=cds3PlcpBip8CV24HrBucket, cds3SEFS15MinThreshold=cds3SEFS15MinThreshold, cds3SEFSPrevious24Hr=cds3SEFSPrevious24Hr, cds3LSES24HrThreshold=cds3LSES24HrThreshold, cds3PlcpBip8SESCurrent=cds3PlcpBip8SESCurrent, ciscoDs3AlarmMIBGroup=ciscoDs3AlarmMIBGroup, cds3CPECount=cds3CPECount, cds3SEFS24HrThreshold=cds3SEFS24HrThreshold, cds3PlcpUAS24HrBucket=cds3PlcpUAS24HrBucket, ciscoPlcpAlarmMIBGroup=ciscoPlcpAlarmMIBGroup, cds3LineOOFCriteria=cds3LineOOFCriteria, cds3AlarmPlcpEntry=cds3AlarmPlcpEntry, cds3AlarmConfigEntry=cds3AlarmConfigEntry, cds3LineType=cds3LineType, cds3CESCurrent24Hr=cds3CESCurrent24Hr, cds3PCV15MinThreshold=cds3PCV15MinThreshold, cds3RAICount=cds3RAICount, cds3FarEndLineLoopbackStatus=cds3FarEndLineLoopbackStatus, cds3LCVCount=cds3LCVCount, cds3PlcpBip8ES24HrThreshold=cds3PlcpBip8ES24HrThreshold, cds3UASPrevious24Hr=cds3UASPrevious24Hr, cds3LCVCurrent24Hr=cds3LCVCurrent24Hr, cds3PCVCurrent24Hr=cds3PCVCurrent24Hr, cds3AlarmConfig=cds3AlarmConfig, cds3CSESPrevious24Hr=cds3CSESPrevious24Hr, cds3CCVCount=cds3CCVCount, cds3TraceToExpect=cds3TraceToExpect, cds3LineAIScBitsCheck=cds3LineAIScBitsCheck, cds3IntervalNumber=cds3IntervalNumber, cds3PlcpFEBECount=cds3PlcpFEBECount, cds3CSES15MinThreshold=cds3CSES15MinThreshold, cds3PlcpRcvRAICount=cds3PlcpRcvRAICount, cds3PlcpSEFS15MinThreshold=cds3PlcpSEFS15MinThreshold, cds3LES15MinThreshold=cds3LES15MinThreshold, cds3PlcpSEFEBESecCount=cds3PlcpSEFEBESecCount, cds3FECount=cds3FECount, cds3PESCurrent24Hr=cds3PESCurrent24Hr, cds3Previous24HrTable=cds3Previous24HrTable, ciscoDs3Previous24HrGroup=ciscoDs3Previous24HrGroup, cds3Stats=cds3Stats, cds3AlarmPlcpTable=cds3AlarmPlcpTable, cds3CSESCurrent24Hr=cds3CSESCurrent24Hr, cds3LCVPrevious24Hr=cds3LCVPrevious24Hr, cds3LCV24HrThreshold=cds3LCV24HrThreshold, cds3PlcpLineStatisticalAlarmState=cds3PlcpLineStatisticalAlarmState, cds3PlcpRcvOOFCount=cds3PlcpRcvOOFCount, cds3EXZSCount=cds3EXZSCount, cds3TraceToTransmit=cds3TraceToTransmit, cds3PES15MinThreshold=cds3PES15MinThreshold, cds3NEAlarmThreshold=cds3NEAlarmThreshold, cds3PCVCount=cds3PCVCount, cds3PlcpSEFS24HrThreshold=cds3PlcpSEFS24HrThreshold, cds3Current24HrEntry=cds3Current24HrEntry, cds3Alarm=cds3Alarm, PYSNMP_MODULE_ID=ciscoDs3MIB, cds3PlcpStatsEntry=cds3PlcpStatsEntry, cds3InternalEqualizer=cds3InternalEqualizer, cds3LSES15MinThreshold=cds3LSES15MinThreshold, cds3PlcpStatisticalAlarmSeverity=cds3PlcpStatisticalAlarmSeverity, ciscoDs3MIBObjects=ciscoDs3MIBObjects, cds3StatsTable=cds3StatsTable, cds3StatsMIBGroup=cds3StatsMIBGroup, cds3CCV15MinThreshold=cds3CCV15MinThreshold, cds3PlcpBip8CV24HrThreshold=cds3PlcpBip8CV24HrThreshold, cds3PCVPrevious24Hr=cds3PCVPrevious24Hr, cds3PlcpBip8SES24HrBucket=cds3PlcpBip8SES24HrBucket, cds3PSESCurrent24Hr=cds3PSESCurrent24Hr, cds3FEAlarmThreshold=cds3FEAlarmThreshold, cds3LESPrevious24Hr=cds3LESPrevious24Hr, cds3FEAlarmDownCount=cds3FEAlarmDownCount, cds3PlcpLineAlarmState=cds3PlcpLineAlarmState, cds3Config=cds3Config, cds3CCVCurrent24Hr=cds3CCVCurrent24Hr, cds3LSESCurrent24Hr=cds3LSESCurrent24Hr, cds3IntervalEntry=cds3IntervalEntry, cds3SEFSCurrent24Hr=cds3SEFSCurrent24Hr, cds3PlcpFEBESecCount=cds3PlcpFEBESecCount, cds3PSESPrevious24Hr=cds3PSESPrevious24Hr, cds3PlcpSEFSCurrent=cds3PlcpSEFSCurrent, cds3UASCurrent24Hr=cds3UASCurrent24Hr, ciscoDs3MIBCompliance=ciscoDs3MIBCompliance, cds3StatsEntry=cds3StatsEntry, cds3NEAlarmDownCount=cds3NEAlarmDownCount, cds3StatisticalAlarmSeverity=cds3StatisticalAlarmSeverity, cds3CSES24HrThreshold=cds3CSES24HrThreshold, cds3PlcpBip8SES24HrThreshold=cds3PlcpBip8SES24HrThreshold, cds3CCVPrevious24Hr=cds3CCVPrevious24Hr, cds3PlcpUAS24HrThreshold=cds3PlcpUAS24HrThreshold, ciscoDs3MIBCompliances=ciscoDs3MIBCompliances, cds3TraceAlarm=cds3TraceAlarm, cds3CES15MinThreshold=cds3CES15MinThreshold, ciscoPlcpCounterMIBGroup=ciscoPlcpCounterMIBGroup, cds3LineRcvFEACValidation=cds3LineRcvFEACValidation, ciscoDs3ConfMIBGroup=ciscoDs3ConfMIBGroup, cds3Previous24HrEntry=cds3Previous24HrEntry, cds3NearEndLineLoopbackStatus=cds3NearEndLineLoopbackStatus, cds3PES24HrThreshold=cds3PES24HrThreshold, cds3IntervalTable=cds3IntervalTable, cds3LSESPrevious24Hr=cds3LSESPrevious24Hr, cds3PSES24HrThreshold=cds3PSES24HrThreshold, ciscoDs3MIBConformance=ciscoDs3MIBConformance, ciscoDs3MIB=ciscoDs3MIB, cds3PlcpRcvBip8Count=cds3PlcpRcvBip8Count, cds3PlcpSEFSecCount=cds3PlcpSEFSecCount, cds3CES24HrThreshold=cds3CES24HrThreshold, cds3NEAlarmUpCount=cds3NEAlarmUpCount, cds3PlcpBip8ESCurrent=cds3PlcpBip8ESCurrent, cds3CESPrevious24Hr=cds3CESPrevious24Hr, cds3LES24HrThreshold=cds3LES24HrThreshold, cds3PlcpFESecCount=cds3PlcpFESecCount, cds3PlcpSEFS24HrBucket=cds3PlcpSEFS24HrBucket, cds3AlarmConfigTable=cds3AlarmConfigTable, cds3PSES15MinThreshold=cds3PSES15MinThreshold, cds3PESPrevious24Hr=cds3PESPrevious24Hr, cds3UAS24HrThreshold=cds3UAS24HrThreshold, cds3AlarmConfigPlcpEntry=cds3AlarmConfigPlcpEntry, cds3PlcpBip8ES15MinThreshold=cds3PlcpBip8ES15MinThreshold, cds3ConfigEntry=cds3ConfigEntry, cds3PlcpBip8ES24HrBucket=cds3PlcpBip8ES24HrBucket, cds3LineStatisticalAlarmState=cds3LineStatisticalAlarmState, cds3CCV24HrThreshold=cds3CCV24HrThreshold, cds3IntervalLSESs=cds3IntervalLSESs, cds3ConfigTable=cds3ConfigTable, cds3PlcpStatsTable=cds3PlcpStatsTable, cds3UAS15MinThreshold=cds3UAS15MinThreshold, ciscoDs3MIBGroups=ciscoDs3MIBGroups, cds3LCV15MinThreshold=cds3LCV15MinThreshold)
