#
# PySNMP MIB module ALCATEL-IND1-IP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-IP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:02:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
softentIND1Ip, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1Ip")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ifIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndexOrZero")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ipCidrRouteEntry, = mibBuilder.importSymbols("IP-FORWARD-MIB", "ipCidrRouteEntry")
ipNetToMediaIfIndex, ipNetToMediaNetAddress, ipNetToMediaEntry = mibBuilder.importSymbols("IP-MIB", "ipNetToMediaIfIndex", "ipNetToMediaNetAddress", "ipNetToMediaEntry")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter32, IpAddress, ModuleIdentity, Gauge32, Bits, Unsigned32, iso, NotificationType, ObjectIdentity, MibIdentifier, TimeTicks, Counter64, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "ModuleIdentity", "Gauge32", "Bits", "Unsigned32", "iso", "NotificationType", "ObjectIdentity", "MibIdentifier", "TimeTicks", "Counter64", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, RowStatus, TextualConvention, PhysAddress, TimeStamp, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "PhysAddress", "TimeStamp", "MacAddress")
alcatelIND1IPMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1))
alcatelIND1IPMIB.setRevisions(('2012-03-23 00:00', '2011-03-07 00:00', '2011-01-25 00:00', '2010-05-13 00:00', '2009-05-19 00:00',))
if mibBuilder.loadTexts: alcatelIND1IPMIB.setLastUpdated('201210100000Z')
if mibBuilder.loadTexts: alcatelIND1IPMIB.setOrganization('Alcatel-Lucent')
alcatelIND1IPMIBNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 0))
if mibBuilder.loadTexts: alcatelIND1IPMIBNotifications.setStatus('current')
alcatelIND1IPMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1))
alaIpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 1))
alaIpClearArpCache = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1))).clone('clear')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpClearArpCache.setStatus('current')
alaIpDirectedBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpDirectedBroadcast.setStatus('current')
alaIpClearArpFilter = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1))).clone('clear')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpClearArpFilter.setStatus('current')
alaIpNetToMediaTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 2), )
if mibBuilder.loadTexts: alaIpNetToMediaTable.setStatus('current')
alaIpNetToMediaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 2, 1), ).setIndexNames((0, "IP-MIB", "ipNetToMediaIfIndex"), (0, "IP-MIB", "ipNetToMediaNetAddress"))
if mibBuilder.loadTexts: alaIpNetToMediaEntry.setStatus('current')
alaIpNetToMediaPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 2, 1, 1), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpNetToMediaPhysAddress.setStatus('current')
alaIpNetToMediaProxy = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpNetToMediaProxy.setStatus('current')
alaIpNetToMediaVrrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpNetToMediaVrrp.setStatus('current')
alaIpNetToMediaAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpNetToMediaAuth.setStatus('current')
alaIpNetToMediaName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 2, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpNetToMediaName.setStatus('current')
alaDoSConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3))
alaDoSTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 1), )
if mibBuilder.loadTexts: alaDoSTable.setStatus('current')
alaDoSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IP-MIB", "alaDoSType"))
if mibBuilder.loadTexts: alaDoSEntry.setStatus('current')
alaDoSType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("portscan", 0), ("tcpsyn", 1), ("pingofdeath", 2), ("smurf", 3), ("pepsi", 4), ("land", 5), ("teardropBonkBoink", 6), ("loopbacksrcip", 7), ("invalidip", 8), ("mcastmismatch", 9), ("ucastipmcastmac", 10), ("pingattack", 11), ("arpattack", 12), ("arppoison", 13)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDoSType.setStatus('current')
alaDoSDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDoSDetected.setStatus('current')
alaDoSIp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 1, 1, 3), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDoSIp.setStatus('current')
alaDoSMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 1, 1, 4), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDoSMac.setStatus('current')
alaDoSSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 1, 1, 5), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDoSSlot.setStatus('current')
alaDoSPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 1, 1, 6), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDoSPort.setStatus('current')
alaDoSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDoSStatus.setStatus('current')
alaDoSChassisId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 1, 1, 8), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDoSChassisId.setStatus('current')
alaDoSPortScanClosePortPenalty = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 2), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDoSPortScanClosePortPenalty.setStatus('current')
alaDoSPortScanTcpOpenPortPenalty = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDoSPortScanTcpOpenPortPenalty.setStatus('current')
alaDoSPortScanUdpOpenPortPenalty = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDoSPortScanUdpOpenPortPenalty.setStatus('current')
alaDoSPortScanTotalPenalty = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDoSPortScanTotalPenalty.setStatus('current')
alaDoSPortScanThreshold = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 6), Integer32().clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDoSPortScanThreshold.setStatus('current')
alaDoSPortScanDecay = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 7), Integer32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDoSPortScanDecay.setStatus('current')
alaDoSTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDoSTrapCntl.setStatus('current')
alaDoSARPRate = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDoSARPRate.setStatus('current')
alaDoSPingRate = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDoSPingRate.setStatus('current')
alaDoSArpPoisonTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 11), )
if mibBuilder.loadTexts: alaDoSArpPoisonTable.setStatus('current')
alaDoSArpPoisonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 11, 1), ).setIndexNames((0, "ALCATEL-IND1-IP-MIB", "alaDoSArpPoisonIpAddr"))
if mibBuilder.loadTexts: alaDoSArpPoisonEntry.setStatus('current')
alaDoSArpPoisonIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 11, 1, 1), IpAddress())
if mibBuilder.loadTexts: alaDoSArpPoisonIpAddr.setStatus('current')
alaDoSArpPoisonDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDoSArpPoisonDetected.setStatus('current')
alaDoSArpPoisonRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 3, 11, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDoSArpPoisonRowStatus.setStatus('current')
ipNetToMediaAugTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 4), )
if mibBuilder.loadTexts: ipNetToMediaAugTable.setStatus('current')
ipNetToMediaAugEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 4, 1), )
ipNetToMediaEntry.registerAugmentions(("ALCATEL-IND1-IP-MIB", "ipNetToMediaAugEntry"))
ipNetToMediaAugEntry.setIndexNames(*ipNetToMediaEntry.getIndexNames())
if mibBuilder.loadTexts: ipNetToMediaAugEntry.setStatus('current')
ipNetToMediaSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 4, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipNetToMediaSlot.setStatus('current')
ipNetToMediaPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipNetToMediaPort.setStatus('current')
ipNetToMediaName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 4, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipNetToMediaName.setStatus('current')
ipNetToMediaChassisId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipNetToMediaChassisId.setStatus('current')
alaDoSTrap = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 0, 1)).setObjects(("ALCATEL-IND1-IP-MIB", "alaDoSType"), ("ALCATEL-IND1-IP-MIB", "alaDoSDetected"), ("ALCATEL-IND1-IP-MIB", "alaDoSIp"), ("ALCATEL-IND1-IP-MIB", "alaDoSMac"), ("ALCATEL-IND1-IP-MIB", "alaDoSSlot"), ("ALCATEL-IND1-IP-MIB", "alaDoSPort"), ("ALCATEL-IND1-IP-MIB", "alaDoSChassisId"))
if mibBuilder.loadTexts: alaDoSTrap.setStatus('current')
trafficEventTrapObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 5))
pktDrop = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 0, 2)).setObjects(("ALCATEL-IND1-IP-MIB", "pktDropType"), ("ALCATEL-IND1-IP-MIB", "pktDropIfIndex"), ("ALCATEL-IND1-IP-MIB", "pktDropCount"), ("ALCATEL-IND1-IP-MIB", "pktDropFrag"))
if mibBuilder.loadTexts: pktDrop.setStatus('current')
pktDropType = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("spoofedIp", 0), ("toBlockedPort", 1), ("rulematchTriggeredPortDisable", 2), ("spoofTriggeredUserPortDisable", 3), ("bpduTriggeredUserPortDisable", 4), ("bgpTriggeredUserPortDisable", 5), ("ospfTriggeredUserPortDisable", 6), ("ripTriggeredUserPortDisable", 7), ("vrrpTriggeredUserPortDisable", 8)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: pktDropType.setStatus('current')
pktDropIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 5, 2), InterfaceIndexOrZero()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: pktDropIfIndex.setStatus('current')
pktDropCount = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 5, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: pktDropCount.setStatus('current')
pktDropFrag = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 5, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: pktDropFrag.setStatus('current')
ipCidrRouteAugTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 6), )
if mibBuilder.loadTexts: ipCidrRouteAugTable.setStatus('current')
ipCidrRouteAugEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 6, 1), )
ipCidrRouteEntry.registerAugmentions(("ALCATEL-IND1-IP-MIB", "ipCidrRouteAugEntry"))
ipCidrRouteAugEntry.setIndexNames(*ipCidrRouteEntry.getIndexNames())
if mibBuilder.loadTexts: ipCidrRouteAugEntry.setStatus('current')
ipCidrRouteScope = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("niroute", 1), ("emproute", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipCidrRouteScope.setStatus('current')
alaIcmpCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 7), )
if mibBuilder.loadTexts: alaIcmpCtrlTable.setStatus('current')
alaIcmpCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-IP-MIB", "alaIcmpCtrlType"), (0, "ALCATEL-IND1-IP-MIB", "alaIcmpCtrlCode"))
if mibBuilder.loadTexts: alaIcmpCtrlEntry.setStatus('current')
alaIcmpCtrlType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIcmpCtrlType.setStatus('current')
alaIcmpCtrlCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIcmpCtrlCode.setStatus('current')
alaIcmpCtrlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIcmpCtrlStatus.setStatus('current')
alaIcmpCtrlPktGap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 7, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIcmpCtrlPktGap.setStatus('current')
alaIpRouteSumTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 9), )
if mibBuilder.loadTexts: alaIpRouteSumTable.setStatus('current')
alaIpRouteSumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 9, 1), ).setIndexNames((0, "ALCATEL-IND1-IP-MIB", "alaIpRouteProtocol"))
if mibBuilder.loadTexts: alaIpRouteSumEntry.setStatus('current')
alaIpRouteProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("total", 1), ("local", 2), ("netmgmt", 3), ("rip", 4), ("isis", 5), ("ospf", 6), ("bgp", 7), ("other", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpRouteProtocol.setStatus('current')
alaIpRouteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpRouteCount.setStatus('current')
alaIcmpCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 10))
alaIcmpAllMsgStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("other", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIcmpAllMsgStatus.setStatus('current')
alaIpArpFilterTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 11), )
if mibBuilder.loadTexts: alaIpArpFilterTable.setStatus('current')
alaIpArpFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 11, 1), ).setIndexNames((0, "ALCATEL-IND1-IP-MIB", "alaIpArpFilterIpAddr"), (0, "ALCATEL-IND1-IP-MIB", "alaIpArpFilterIpMask"), (0, "ALCATEL-IND1-IP-MIB", "alaIpArpFilterVlan"), (0, "ALCATEL-IND1-IP-MIB", "alaIpArpFilterType"))
if mibBuilder.loadTexts: alaIpArpFilterEntry.setStatus('current')
alaIpArpFilterIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 11, 1, 1), IpAddress())
if mibBuilder.loadTexts: alaIpArpFilterIpAddr.setStatus('current')
alaIpArpFilterIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 11, 1, 2), IpAddress())
if mibBuilder.loadTexts: alaIpArpFilterIpMask.setStatus('current')
alaIpArpFilterVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaIpArpFilterVlan.setStatus('current')
alaIpArpFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("target", 1), ("sender", 2))).clone('target'))
if mibBuilder.loadTexts: alaIpArpFilterType.setStatus('current')
alaIpArpFilterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("block", 2))).clone('allow')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpArpFilterMode.setStatus('current')
alaIpArpFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 11, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpArpFilterRowStatus.setStatus('current')
alaIpServiceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 12), )
if mibBuilder.loadTexts: alaIpServiceTable.setStatus('current')
alaIpServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 12, 1), ).setIndexNames((0, "ALCATEL-IND1-IP-MIB", "alaIpServiceType"))
if mibBuilder.loadTexts: alaIpServiceEntry.setStatus('current')
alaIpServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ftp", 1), ("ssh", 2), ("telnet", 3), ("http", 4), ("ntp", 5), ("snmp", 6), ("https", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpServiceType.setStatus('current')
alaIpServicePort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpServicePort.setStatus('current')
alaIpServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("other", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpServiceStatus.setStatus('current')
alaIpPortServiceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 13), )
if mibBuilder.loadTexts: alaIpPortServiceTable.setStatus('current')
alaIpPortServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 13, 1), ).setIndexNames((0, "ALCATEL-IND1-IP-MIB", "alaIpPortServicePort"))
if mibBuilder.loadTexts: alaIpPortServiceEntry.setStatus('current')
alaIpPortServicePort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpPortServicePort.setStatus('current')
alaIpPortServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpPortServiceStatus.setStatus('current')
alaIpInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14), )
if mibBuilder.loadTexts: alaIpInterfaceTable.setStatus('current')
alaIpInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: alaIpInterfaceEntry.setStatus('current')
alaIpInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpInterfaceName.setStatus('current')
alaIpInterfaceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceAddress.setStatus('current')
alaIpInterfaceMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceMask.setStatus('current')
alaIpInterfaceAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceAdminState.setStatus('current')
alaIpInterfaceDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unbound", 0), ("vlan", 1), ("emp", 2), ("loopback", 3), ("greTunnel", 4), ("ipipTunnel", 5))).clone('unbound')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceDeviceType.setStatus('current')
alaIpInterfaceVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceVlanID.setStatus('current')
alaIpInterfaceIpForward = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceIpForward.setStatus('current')
alaIpInterfaceEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ethernet2", 1), ("snap", 2))).clone('ethernet2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceEncap.setStatus('current')
alaIpInterfaceMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceMtu.setStatus('current')
alaIpInterfaceLocalProxyArp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceLocalProxyArp.setStatus('current')
alaIpInterfacePrimCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfacePrimCfg.setStatus('current')
alaIpInterfaceOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpInterfaceOperState.setStatus('current')
alaIpInterfaceOperReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("interfaceUp", 0), ("adminDown", 1), ("unbound", 2), ("deviceDown", 3), ("noSuchDevice", 4), ("noRouterMac", 5), ("tunnelSrcInvalid", 6), ("tunnelDstUnreachable", 7), ("noVipAddress", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpInterfaceOperReason.setStatus('current')
alaIpInterfaceRouterMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 14), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpInterfaceRouterMac.setStatus('current')
alaIpInterfaceBcastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpInterfaceBcastAddr.setStatus('current')
alaIpInterfacePrimAct = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpInterfacePrimAct.setStatus('current')
alaIpInterfaceRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 17), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceRemoteAddr.setStatus('current')
alaIpInterfaceTunnelSrcAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 18), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceTunnelSrcAddressType.setStatus('current')
alaIpInterfaceTunnelSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 19), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceTunnelSrc.setStatus('current')
alaIpInterfaceTunnelDstAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 20), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceTunnelDstAddressType.setStatus('current')
alaIpInterfaceTunnelDst = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 21), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceTunnelDst.setStatus('current')
alaIpInterfaceVipAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 22), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceVipAddress.setStatus('current')
alaIpInterfaceDhcpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("discovery", 1), ("active", 2), ("timeout", 3))).clone('discovery')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceDhcpStatus.setStatus('current')
alaIpInterfaceDhcpIpRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceDhcpIpRelease.setStatus('current')
alaIpInterfaceDhcpIpRenew = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceDhcpIpRenew.setStatus('current')
alaIpInterfaceDhcpOption60String = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 14, 1, 26), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpInterfaceDhcpOption60String.setStatus('current')
alaIpItfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 15), )
if mibBuilder.loadTexts: alaIpItfConfigTable.setStatus('current')
alaIpItfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 15, 1), ).setIndexNames((0, "ALCATEL-IND1-IP-MIB", "alaIpItfConfigName"))
if mibBuilder.loadTexts: alaIpItfConfigEntry.setStatus('current')
alaIpItfConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 15, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpItfConfigName.setStatus('current')
alaIpItfConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 15, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpItfConfigIfIndex.setStatus('current')
alaIpItfConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 15, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpItfConfigRowStatus.setStatus('current')
alaIpFtpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 16))
alaIpFtpAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 16, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpFtpAdminStatus.setStatus('current')
alaIpFtpPort = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 16, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(21, 21), ValueRangeConstraint(1024, 65535), )).clone(21)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpFtpPort.setStatus('current')
alaIpSshConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 17))
alaIpSshAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 17, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpSshAdminStatus.setStatus('current')
alaIpSshPort = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 17, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(22, 22), ValueRangeConstraint(1024, 65535), )).clone(22)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpSshPort.setStatus('current')
alaIpSshPubKeyEnforceAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 17, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpSshPubKeyEnforceAdminStatus.setStatus('current')
alaIpTelnetConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 18))
alaIpTelnetAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 18, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpTelnetAdminStatus.setStatus('current')
alaIpTelnetPort = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 18, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(23, 23), ValueRangeConstraint(1024, 65535), )).clone(23)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpTelnetPort.setStatus('current')
alaIpDhcpHostIdentifierObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 19))
alaIpDhcpServerAddressType = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 19, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpDhcpServerAddressType.setStatus('current')
alaIpDhcpServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 19, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpDhcpServerAddress.setStatus('current')
alaIpDhcpRouterAddressType = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 19, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpDhcpRouterAddressType.setStatus('current')
alaIpDhcpRouterAddress = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 19, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpDhcpRouterAddress.setStatus('current')
alaIpDhcpHostName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 19, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpDhcpHostName.setStatus('current')
alaIpDhcpClientLeaseObtained = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 19, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpDhcpClientLeaseObtained.setStatus('current')
alaIpDhcpClientLeaseExpires = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 19, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpDhcpClientLeaseExpires.setStatus('current')
alaIpNtpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 20))
alaIpNtpVrfName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 1, 20, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpNtpVrfName.setStatus('current')
alcatelIND1IPMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2))
alcatelIND1IPMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 1))
alcatelIND1IPMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2))
alaIpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-IP-MIB", "alaIpConfigGroup"), ("ALCATEL-IND1-IP-MIB", "alaIpNetToMediaGroup"), ("ALCATEL-IND1-IP-MIB", "alaDoSGroup"), ("ALCATEL-IND1-IP-MIB", "alaPortScanGroup"), ("ALCATEL-IND1-IP-MIB", "alaArpPingGroup"), ("ALCATEL-IND1-IP-MIB", "alaArpPoisonGroup"), ("ALCATEL-IND1-IP-MIB", "alaIpNetToMediaAugGroup"), ("ALCATEL-IND1-IP-MIB", "alaPktDropGroup"), ("ALCATEL-IND1-IP-MIB", "alaIpCidrAugGroup"), ("ALCATEL-IND1-IP-MIB", "alaIcmpCtrlGroup"), ("ALCATEL-IND1-IP-MIB", "alaIpRouteSumGroup"), ("ALCATEL-IND1-IP-MIB", "alaIpArpFilterGroup"), ("ALCATEL-IND1-IP-MIB", "alaIpServiceTypeGroup"), ("ALCATEL-IND1-IP-MIB", "alaIpPortServiceTypeGroup"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceGroup"), ("ALCATEL-IND1-IP-MIB", "alaIpItfGroup"), ("ALCATEL-IND1-IP-MIB", "alaIpNotificationGroup"), ("ALCATEL-IND1-IP-MIB", "alaIpDhcpHostIdentifierGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpCompliance = alaIpCompliance.setStatus('current')
alaIpConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-IP-MIB", "alaIpClearArpCache"), ("ALCATEL-IND1-IP-MIB", "alaIpDirectedBroadcast"), ("ALCATEL-IND1-IP-MIB", "alaIpClearArpFilter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpConfigGroup = alaIpConfigGroup.setStatus('current')
alaIpNetToMediaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 2)).setObjects(("ALCATEL-IND1-IP-MIB", "alaIpNetToMediaPhysAddress"), ("ALCATEL-IND1-IP-MIB", "alaIpNetToMediaProxy"), ("ALCATEL-IND1-IP-MIB", "alaIpNetToMediaVrrp"), ("ALCATEL-IND1-IP-MIB", "alaIpNetToMediaAuth"), ("ALCATEL-IND1-IP-MIB", "alaIpNetToMediaName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpNetToMediaGroup = alaIpNetToMediaGroup.setStatus('current')
alaDoSGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 3)).setObjects(("ALCATEL-IND1-IP-MIB", "alaDoSType"), ("ALCATEL-IND1-IP-MIB", "alaDoSDetected"), ("ALCATEL-IND1-IP-MIB", "alaDoSIp"), ("ALCATEL-IND1-IP-MIB", "alaDoSMac"), ("ALCATEL-IND1-IP-MIB", "alaDoSSlot"), ("ALCATEL-IND1-IP-MIB", "alaDoSPort"), ("ALCATEL-IND1-IP-MIB", "alaDoSStatus"), ("ALCATEL-IND1-IP-MIB", "alaDoSChassisId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDoSGroup = alaDoSGroup.setStatus('current')
alaPortScanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 4)).setObjects(("ALCATEL-IND1-IP-MIB", "alaDoSPortScanClosePortPenalty"), ("ALCATEL-IND1-IP-MIB", "alaDoSPortScanTcpOpenPortPenalty"), ("ALCATEL-IND1-IP-MIB", "alaDoSPortScanUdpOpenPortPenalty"), ("ALCATEL-IND1-IP-MIB", "alaDoSPortScanTotalPenalty"), ("ALCATEL-IND1-IP-MIB", "alaDoSPortScanThreshold"), ("ALCATEL-IND1-IP-MIB", "alaDoSPortScanDecay"), ("ALCATEL-IND1-IP-MIB", "alaDoSTrapCntl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaPortScanGroup = alaPortScanGroup.setStatus('current')
alaArpPingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 5)).setObjects(("ALCATEL-IND1-IP-MIB", "alaDoSARPRate"), ("ALCATEL-IND1-IP-MIB", "alaDoSPingRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaArpPingGroup = alaArpPingGroup.setStatus('current')
alaArpPoisonGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 6)).setObjects(("ALCATEL-IND1-IP-MIB", "alaDoSArpPoisonDetected"), ("ALCATEL-IND1-IP-MIB", "alaDoSArpPoisonRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaArpPoisonGroup = alaArpPoisonGroup.setStatus('current')
alaIpNetToMediaAugGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 7)).setObjects(("ALCATEL-IND1-IP-MIB", "ipNetToMediaSlot"), ("ALCATEL-IND1-IP-MIB", "ipNetToMediaPort"), ("ALCATEL-IND1-IP-MIB", "ipNetToMediaName"), ("ALCATEL-IND1-IP-MIB", "ipNetToMediaChassisId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpNetToMediaAugGroup = alaIpNetToMediaAugGroup.setStatus('current')
alaPktDropGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 8)).setObjects(("ALCATEL-IND1-IP-MIB", "pktDropType"), ("ALCATEL-IND1-IP-MIB", "pktDropIfIndex"), ("ALCATEL-IND1-IP-MIB", "pktDropCount"), ("ALCATEL-IND1-IP-MIB", "pktDropFrag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaPktDropGroup = alaPktDropGroup.setStatus('current')
alaIpCidrAugGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 9)).setObjects(("ALCATEL-IND1-IP-MIB", "ipCidrRouteScope"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpCidrAugGroup = alaIpCidrAugGroup.setStatus('current')
alaIcmpCtrlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 10)).setObjects(("ALCATEL-IND1-IP-MIB", "alaIcmpCtrlType"), ("ALCATEL-IND1-IP-MIB", "alaIcmpCtrlCode"), ("ALCATEL-IND1-IP-MIB", "alaIcmpCtrlStatus"), ("ALCATEL-IND1-IP-MIB", "alaIcmpCtrlPktGap"), ("ALCATEL-IND1-IP-MIB", "alaIcmpAllMsgStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIcmpCtrlGroup = alaIcmpCtrlGroup.setStatus('current')
alaIpRouteSumGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 11)).setObjects(("ALCATEL-IND1-IP-MIB", "alaIpRouteProtocol"), ("ALCATEL-IND1-IP-MIB", "alaIpRouteCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpRouteSumGroup = alaIpRouteSumGroup.setStatus('current')
alaIpArpFilterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 12)).setObjects(("ALCATEL-IND1-IP-MIB", "alaIpArpFilterMode"), ("ALCATEL-IND1-IP-MIB", "alaIpArpFilterRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpArpFilterGroup = alaIpArpFilterGroup.setStatus('current')
alaIpServiceTypeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 13)).setObjects(("ALCATEL-IND1-IP-MIB", "alaIpServiceType"), ("ALCATEL-IND1-IP-MIB", "alaIpServicePort"), ("ALCATEL-IND1-IP-MIB", "alaIpServiceStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpServiceTypeGroup = alaIpServiceTypeGroup.setStatus('current')
alaIpPortServiceTypeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 14)).setObjects(("ALCATEL-IND1-IP-MIB", "alaIpPortServicePort"), ("ALCATEL-IND1-IP-MIB", "alaIpPortServiceStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpPortServiceTypeGroup = alaIpPortServiceTypeGroup.setStatus('current')
alaIpInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 15)).setObjects(("ALCATEL-IND1-IP-MIB", "alaIpInterfaceName"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceAddress"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceMask"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceAdminState"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceDeviceType"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceVlanID"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceIpForward"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceEncap"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceMtu"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceLocalProxyArp"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfacePrimCfg"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceOperState"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceOperReason"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceRouterMac"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceBcastAddr"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfacePrimAct"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceRemoteAddr"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceTunnelSrcAddressType"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceTunnelSrc"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceTunnelDstAddressType"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceTunnelDst"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceVipAddress"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceDhcpStatus"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceDhcpIpRelease"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceDhcpIpRenew"), ("ALCATEL-IND1-IP-MIB", "alaIpInterfaceDhcpOption60String"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpInterfaceGroup = alaIpInterfaceGroup.setStatus('current')
alaIpItfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 16)).setObjects(("ALCATEL-IND1-IP-MIB", "alaIpItfConfigName"), ("ALCATEL-IND1-IP-MIB", "alaIpItfConfigIfIndex"), ("ALCATEL-IND1-IP-MIB", "alaIpItfConfigRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpItfGroup = alaIpItfGroup.setStatus('current')
alaIpFtpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 17)).setObjects(("ALCATEL-IND1-IP-MIB", "alaIpFtpAdminStatus"), ("ALCATEL-IND1-IP-MIB", "alaIpFtpPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpFtpGroup = alaIpFtpGroup.setStatus('current')
alaIpSshGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 18)).setObjects(("ALCATEL-IND1-IP-MIB", "alaIpSshAdminStatus"), ("ALCATEL-IND1-IP-MIB", "alaIpSshPort"), ("ALCATEL-IND1-IP-MIB", "alaIpSshPubKeyEnforceAdminStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpSshGroup = alaIpSshGroup.setStatus('current')
alaIpTelnetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 19)).setObjects(("ALCATEL-IND1-IP-MIB", "alaIpTelnetAdminStatus"), ("ALCATEL-IND1-IP-MIB", "alaIpTelnetPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpTelnetGroup = alaIpTelnetGroup.setStatus('current')
alaIpNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 20)).setObjects(("ALCATEL-IND1-IP-MIB", "alaDoSTrap"), ("ALCATEL-IND1-IP-MIB", "pktDrop"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpNotificationGroup = alaIpNotificationGroup.setStatus('current')
alaIpDhcpHostIdentifierGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 21)).setObjects(("ALCATEL-IND1-IP-MIB", "alaIpDhcpServerAddressType"), ("ALCATEL-IND1-IP-MIB", "alaIpDhcpServerAddress"), ("ALCATEL-IND1-IP-MIB", "alaIpDhcpRouterAddressType"), ("ALCATEL-IND1-IP-MIB", "alaIpDhcpRouterAddress"), ("ALCATEL-IND1-IP-MIB", "alaIpDhcpHostName"), ("ALCATEL-IND1-IP-MIB", "alaIpDhcpClientLeaseObtained"), ("ALCATEL-IND1-IP-MIB", "alaIpDhcpClientLeaseExpires"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpDhcpHostIdentifierGroup = alaIpDhcpHostIdentifierGroup.setStatus('current')
alaIpNtpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 23, 1, 2, 2, 22)).setObjects(("ALCATEL-IND1-IP-MIB", "alaIpNtpVrfName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpNtpGroup = alaIpNtpGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-IP-MIB", alaIpSshAdminStatus=alaIpSshAdminStatus, alaIpRouteSumGroup=alaIpRouteSumGroup, alaDoSTrap=alaDoSTrap, alaDoSSlot=alaDoSSlot, alaIpArpFilterMode=alaIpArpFilterMode, alaIpInterfaceIpForward=alaIpInterfaceIpForward, alaDoSGroup=alaDoSGroup, alaDoSDetected=alaDoSDetected, ipNetToMediaChassisId=ipNetToMediaChassisId, alaIpItfConfigRowStatus=alaIpItfConfigRowStatus, alaIpSshPubKeyEnforceAdminStatus=alaIpSshPubKeyEnforceAdminStatus, alaIpPortServiceStatus=alaIpPortServiceStatus, alaIpDhcpClientLeaseObtained=alaIpDhcpClientLeaseObtained, alcatelIND1IPMIBConformance=alcatelIND1IPMIBConformance, alaIpItfConfigIfIndex=alaIpItfConfigIfIndex, alaIpInterfaceOperState=alaIpInterfaceOperState, alaDoSPort=alaDoSPort, alaIpInterfaceVipAddress=alaIpInterfaceVipAddress, alaIpInterfaceOperReason=alaIpInterfaceOperReason, ipNetToMediaPort=ipNetToMediaPort, alaDoSPingRate=alaDoSPingRate, alaIpNetToMediaAuth=alaIpNetToMediaAuth, alaIpArpFilterIpAddr=alaIpArpFilterIpAddr, alaIpCompliance=alaIpCompliance, pktDrop=pktDrop, ipCidrRouteAugEntry=ipCidrRouteAugEntry, alaIpInterfaceDhcpOption60String=alaIpInterfaceDhcpOption60String, alaIpDhcpClientLeaseExpires=alaIpDhcpClientLeaseExpires, alaIcmpAllMsgStatus=alaIcmpAllMsgStatus, alaDoSArpPoisonDetected=alaDoSArpPoisonDetected, pktDropType=pktDropType, alaDoSPortScanTotalPenalty=alaDoSPortScanTotalPenalty, alaIcmpCtrlType=alaIcmpCtrlType, alaIpServiceEntry=alaIpServiceEntry, alaDoSEntry=alaDoSEntry, alaIpFtpConfig=alaIpFtpConfig, alaIpPortServiceEntry=alaIpPortServiceEntry, ipNetToMediaName=ipNetToMediaName, alaDoSIp=alaDoSIp, alaIpSshConfig=alaIpSshConfig, alaIpInterfaceRemoteAddr=alaIpInterfaceRemoteAddr, alaIpArpFilterRowStatus=alaIpArpFilterRowStatus, alcatelIND1IPMIB=alcatelIND1IPMIB, alaIpRouteSumEntry=alaIpRouteSumEntry, alaIpDhcpServerAddressType=alaIpDhcpServerAddressType, alaIpNetToMediaGroup=alaIpNetToMediaGroup, alaIpInterfaceTunnelDstAddressType=alaIpInterfaceTunnelDstAddressType, alaDoSPortScanThreshold=alaDoSPortScanThreshold, alaIpNtpConfig=alaIpNtpConfig, pktDropCount=pktDropCount, ipNetToMediaSlot=ipNetToMediaSlot, alaArpPoisonGroup=alaArpPoisonGroup, alaIpInterfaceDhcpIpRelease=alaIpInterfaceDhcpIpRelease, alcatelIND1IPMIBNotifications=alcatelIND1IPMIBNotifications, alaDoSTrapCntl=alaDoSTrapCntl, alaIpInterfaceLocalProxyArp=alaIpInterfaceLocalProxyArp, alaIpInterfaceDeviceType=alaIpInterfaceDeviceType, alaIpDirectedBroadcast=alaIpDirectedBroadcast, alaIcmpCtrlGroup=alaIcmpCtrlGroup, alaIcmpCtrlCode=alaIcmpCtrlCode, alaIpInterfaceMask=alaIpInterfaceMask, alcatelIND1IPMIBCompliances=alcatelIND1IPMIBCompliances, alaIpDhcpHostIdentifierObjects=alaIpDhcpHostIdentifierObjects, alaIpItfGroup=alaIpItfGroup, alaIpConfigGroup=alaIpConfigGroup, alaIpInterfaceGroup=alaIpInterfaceGroup, alaIpNtpGroup=alaIpNtpGroup, alaIpNetToMediaAugGroup=alaIpNetToMediaAugGroup, alaIpNetToMediaVrrp=alaIpNetToMediaVrrp, alaIpRouteCount=alaIpRouteCount, alaDoSConfig=alaDoSConfig, alaIpItfConfigEntry=alaIpItfConfigEntry, alaIpArpFilterType=alaIpArpFilterType, alaIcmpCtrlPktGap=alaIcmpCtrlPktGap, alaIpNotificationGroup=alaIpNotificationGroup, alaIpDhcpHostName=alaIpDhcpHostName, alaDoSPortScanClosePortPenalty=alaDoSPortScanClosePortPenalty, ipNetToMediaAugEntry=ipNetToMediaAugEntry, pktDropIfIndex=pktDropIfIndex, alaIpNetToMediaEntry=alaIpNetToMediaEntry, alaIpInterfaceEntry=alaIpInterfaceEntry, alaIpItfConfigName=alaIpItfConfigName, alaIpSshPort=alaIpSshPort, alaIpInterfaceTunnelDst=alaIpInterfaceTunnelDst, alaDoSType=alaDoSType, alaDoSArpPoisonTable=alaDoSArpPoisonTable, alaIpArpFilterIpMask=alaIpArpFilterIpMask, alaPktDropGroup=alaPktDropGroup, ipCidrRouteAugTable=ipCidrRouteAugTable, alaIpDhcpServerAddress=alaIpDhcpServerAddress, alaPortScanGroup=alaPortScanGroup, alaIpClearArpCache=alaIpClearArpCache, alaDoSPortScanUdpOpenPortPenalty=alaDoSPortScanUdpOpenPortPenalty, ipNetToMediaAugTable=ipNetToMediaAugTable, alaIpTelnetConfig=alaIpTelnetConfig, alaIpArpFilterGroup=alaIpArpFilterGroup, alaIpTelnetPort=alaIpTelnetPort, alaIpInterfaceMtu=alaIpInterfaceMtu, alaIpSshGroup=alaIpSshGroup, alaIpInterfacePrimCfg=alaIpInterfacePrimCfg, alaIpNetToMediaTable=alaIpNetToMediaTable, alaIpNetToMediaName=alaIpNetToMediaName, alaIpInterfaceVlanID=alaIpInterfaceVlanID, alaIcmpCtrl=alaIcmpCtrl, alaDoSStatus=alaDoSStatus, alaArpPingGroup=alaArpPingGroup, alaIpArpFilterVlan=alaIpArpFilterVlan, pktDropFrag=pktDropFrag, alaIpFtpAdminStatus=alaIpFtpAdminStatus, alaIpPortServicePort=alaIpPortServicePort, alaIpInterfaceDhcpStatus=alaIpInterfaceDhcpStatus, alaIcmpCtrlEntry=alaIcmpCtrlEntry, alaIpInterfaceTunnelSrc=alaIpInterfaceTunnelSrc, alaIpServiceStatus=alaIpServiceStatus, alaIpDhcpRouterAddress=alaIpDhcpRouterAddress, alaIpInterfacePrimAct=alaIpInterfacePrimAct, alaIpFtpPort=alaIpFtpPort, alaIpClearArpFilter=alaIpClearArpFilter, alaIpInterfaceDhcpIpRenew=alaIpInterfaceDhcpIpRenew, alaDoSArpPoisonEntry=alaDoSArpPoisonEntry, alaIpNtpVrfName=alaIpNtpVrfName, alaDoSPortScanDecay=alaDoSPortScanDecay, alaIpPortServiceTable=alaIpPortServiceTable, alaIcmpCtrlStatus=alaIcmpCtrlStatus, alaDoSArpPoisonRowStatus=alaDoSArpPoisonRowStatus, alaIpServicePort=alaIpServicePort, alaIpDhcpHostIdentifierGroup=alaIpDhcpHostIdentifierGroup, alaDoSArpPoisonIpAddr=alaDoSArpPoisonIpAddr, alaIpRouteSumTable=alaIpRouteSumTable, alaIpNetToMediaProxy=alaIpNetToMediaProxy, alaIpServiceTable=alaIpServiceTable, alaDoSARPRate=alaDoSARPRate, alaIpDhcpRouterAddressType=alaIpDhcpRouterAddressType, alaIpInterfaceName=alaIpInterfaceName, alaIpCidrAugGroup=alaIpCidrAugGroup, alaIpInterfaceRouterMac=alaIpInterfaceRouterMac, alaIpInterfaceEncap=alaIpInterfaceEncap, alaIpRouteProtocol=alaIpRouteProtocol, alaIpServiceType=alaIpServiceType, alaIpPortServiceTypeGroup=alaIpPortServiceTypeGroup, alcatelIND1IPMIBObjects=alcatelIND1IPMIBObjects, alaDoSTable=alaDoSTable, alaIpInterfaceTable=alaIpInterfaceTable, alaIpInterfaceAddress=alaIpInterfaceAddress, alaIpTelnetGroup=alaIpTelnetGroup, alaIpConfig=alaIpConfig, alaIpNetToMediaPhysAddress=alaIpNetToMediaPhysAddress, alaIcmpCtrlTable=alaIcmpCtrlTable, alaDoSPortScanTcpOpenPortPenalty=alaDoSPortScanTcpOpenPortPenalty, alaIpItfConfigTable=alaIpItfConfigTable, alaDoSMac=alaDoSMac, ipCidrRouteScope=ipCidrRouteScope, PYSNMP_MODULE_ID=alcatelIND1IPMIB, alaIpArpFilterTable=alaIpArpFilterTable, alaIpInterfaceTunnelSrcAddressType=alaIpInterfaceTunnelSrcAddressType, alaIpServiceTypeGroup=alaIpServiceTypeGroup, alaIpFtpGroup=alaIpFtpGroup, alaIpArpFilterEntry=alaIpArpFilterEntry, alaIpInterfaceBcastAddr=alaIpInterfaceBcastAddr, alcatelIND1IPMIBGroups=alcatelIND1IPMIBGroups, alaDoSChassisId=alaDoSChassisId, alaIpInterfaceAdminState=alaIpInterfaceAdminState, alaIpTelnetAdminStatus=alaIpTelnetAdminStatus, trafficEventTrapObjs=trafficEventTrapObjs)
