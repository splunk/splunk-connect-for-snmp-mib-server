#
# PySNMP MIB module ZHONE-COM-IP-IP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZHONE-COM-IP-IP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:40:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, ModuleIdentity, Bits, Counter64, NotificationType, ObjectIdentity, iso, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, Integer32, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ModuleIdentity", "Bits", "Counter64", "NotificationType", "ObjectIdentity", "iso", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "Integer32", "Gauge32", "IpAddress")
PhysAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "PhysAddress", "DisplayString", "TextualConvention")
rdEntry, = mibBuilder.importSymbols("ZHONE-COM-IP-RD-MIB", "rdEntry")
zhoneIp, zhoneModules = mibBuilder.importSymbols("Zhone", "zhoneIp", "zhoneModules")
ZhoneRowStatus, = mibBuilder.importSymbols("Zhone-TC", "ZhoneRowStatus")
comIpIp = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 6, 54))
comIpIp.setRevisions(('2000-11-02 17:30', '2000-09-11 16:30',))
if mibBuilder.loadTexts: comIpIp.setLastUpdated('200009111700Z')
if mibBuilder.loadTexts: comIpIp.setOrganization('Zhone Technologies, Inc.')
ip = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4))
if mibBuilder.loadTexts: ip.setStatus('current')
zhoneIpTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2), )
if mibBuilder.loadTexts: zhoneIpTable.setStatus('current')
zhoneIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1), )
rdEntry.registerAugmentions(("ZHONE-COM-IP-IP-MIB", "zhoneIpEntry"))
zhoneIpEntry.setIndexNames(*rdEntry.getIndexNames())
if mibBuilder.loadTexts: zhoneIpEntry.setStatus('current')
zhIpForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forwarding", 1), ("notForwarding", 2))).clone('forwarding')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhIpForwarding.setStatus('current')
zhIpDefaultTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhIpDefaultTTL.setStatus('current')
zhIpInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpInReceives.setStatus('current')
zhIpInHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpInHdrErrors.setStatus('current')
zhIpInAddrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpInAddrErrors.setStatus('current')
zhIpForwDatagrams = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpForwDatagrams.setStatus('current')
zhIpInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpInUnknownProtos.setStatus('current')
zhIpInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpInDiscards.setStatus('current')
zhIpInDelivers = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpInDelivers.setStatus('current')
zhIpOutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpOutRequests.setStatus('current')
zhIpOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpOutDiscards.setStatus('current')
zhIpOutNoRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpOutNoRoutes.setStatus('current')
zhIpReasmTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 13), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpReasmTimeout.setStatus('current')
zhIpReasmReqds = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpReasmReqds.setStatus('current')
zhIpReasmOKs = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpReasmOKs.setStatus('current')
zhIpReasmFails = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpReasmFails.setStatus('current')
zhIpFragOKs = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpFragOKs.setStatus('current')
zhIpFragFails = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpFragFails.setStatus('current')
zhIpFragCreates = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpFragCreates.setStatus('current')
zhIpRoutingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpRoutingDiscards.setStatus('current')
zhoneIpNetToMediaTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 4), )
if mibBuilder.loadTexts: zhoneIpNetToMediaTable.setStatus('current')
zhoneIpNetToMediaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 4, 1), ).setIndexNames((0, "ZHONE-COM-IP-IP-MIB", "zhIpNetToMediaIfIndex"), (0, "ZHONE-COM-IP-IP-MIB", "zhIpNetToMediaNetAddress"))
if mibBuilder.loadTexts: zhoneIpNetToMediaEntry.setStatus('current')
zhIpNetToMediaIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: zhIpNetToMediaIfIndex.setStatus('current')
zhIpNetToMediaNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 4, 1, 2), IpAddress())
if mibBuilder.loadTexts: zhIpNetToMediaNetAddress.setStatus('current')
zhIpNetToMediaPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 4, 1, 3), PhysAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhIpNetToMediaPhysAddress.setStatus('current')
zhIpNetToMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("dynamic", 3), ("static", 4))).clone('static')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhIpNetToMediaType.setStatus('current')
zhIpNetToMediaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 4, 4, 1, 5), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhIpNetToMediaRowStatus.setStatus('current')
mibBuilder.exportSymbols("ZHONE-COM-IP-IP-MIB", zhIpRoutingDiscards=zhIpRoutingDiscards, zhIpNetToMediaType=zhIpNetToMediaType, comIpIp=comIpIp, zhIpNetToMediaNetAddress=zhIpNetToMediaNetAddress, PYSNMP_MODULE_ID=comIpIp, zhIpInReceives=zhIpInReceives, zhIpForwDatagrams=zhIpForwDatagrams, zhIpInAddrErrors=zhIpInAddrErrors, zhIpOutRequests=zhIpOutRequests, zhIpInDelivers=zhIpInDelivers, zhIpInHdrErrors=zhIpInHdrErrors, zhIpNetToMediaRowStatus=zhIpNetToMediaRowStatus, zhIpReasmFails=zhIpReasmFails, zhIpInDiscards=zhIpInDiscards, zhIpForwarding=zhIpForwarding, zhIpDefaultTTL=zhIpDefaultTTL, zhIpReasmTimeout=zhIpReasmTimeout, ip=ip, zhoneIpTable=zhoneIpTable, zhIpReasmOKs=zhIpReasmOKs, zhIpNetToMediaIfIndex=zhIpNetToMediaIfIndex, zhIpFragOKs=zhIpFragOKs, zhoneIpEntry=zhoneIpEntry, zhIpFragCreates=zhIpFragCreates, zhIpInUnknownProtos=zhIpInUnknownProtos, zhoneIpNetToMediaEntry=zhoneIpNetToMediaEntry, zhIpReasmReqds=zhIpReasmReqds, zhIpFragFails=zhIpFragFails, zhIpNetToMediaPhysAddress=zhIpNetToMediaPhysAddress, zhIpOutDiscards=zhIpOutDiscards, zhIpOutNoRoutes=zhIpOutNoRoutes, zhoneIpNetToMediaTable=zhoneIpNetToMediaTable)
