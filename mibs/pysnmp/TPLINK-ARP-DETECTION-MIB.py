#
# PySNMP MIB module TPLINK-ARP-DETECTION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-ARP-DETECTION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:16:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ObjectIdentity, NotificationType, Bits, TimeTicks, Counter32, MibIdentifier, ModuleIdentity, Unsigned32, IpAddress, Counter64, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ObjectIdentity", "NotificationType", "Bits", "TimeTicks", "Counter32", "MibIdentifier", "ModuleIdentity", "Unsigned32", "IpAddress", "Counter64", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
tplinkArpInspectionMIBObjects, = mibBuilder.importSymbols("TPLINK-ARP-INSPECTION-MIB", "tplinkArpInspectionMIBObjects")
tpArpDetection = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 28, 1, 1))
tpArpDetectionConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 28, 1, 1, 1))
tpArpDetectionStat = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 28, 1, 1, 2))
tpArpDetectionConfigEnable = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 28, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpArpDetectionConfigEnable.setStatus('current')
tpArpDetectionTrustPortTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 28, 1, 1, 1, 2), )
if mibBuilder.loadTexts: tpArpDetectionTrustPortTable.setStatus('current')
tpArpDetectionTrustPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 28, 1, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: tpArpDetectionTrustPortEntry.setStatus('current')
tpArpDetectionTrustPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 28, 1, 1, 1, 2, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpArpDetectionTrustPort.setStatus('current')
tpArpDetectionTrustPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 28, 1, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("trustful", 1), ("untrusty", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpArpDetectionTrustPortState.setStatus('current')
tpArpDetectionTrustPortLag = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 28, 1, 1, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpArpDetectionTrustPortLag.setStatus('current')
tpArpDetectionStatReset = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 28, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notReset", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpArpDetectionStatReset.setStatus('current')
tpArpDetectionStatTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 28, 1, 1, 2, 2), )
if mibBuilder.loadTexts: tpArpDetectionStatTable.setStatus('current')
tpArpDetectionStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 28, 1, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: tpArpDetectionStatEntry.setStatus('current')
tpArpDetectionStatPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 28, 1, 1, 2, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpArpDetectionStatPort.setStatus('current')
tpArpDetectionStatState = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 28, 1, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("trustful", 1), ("untrusty", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpArpDetectionStatState.setStatus('current')
tpArpDetectionStatNonLegalPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 28, 1, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpArpDetectionStatNonLegalPkt.setStatus('current')
mibBuilder.exportSymbols("TPLINK-ARP-DETECTION-MIB", tpArpDetectionTrustPortTable=tpArpDetectionTrustPortTable, tpArpDetectionStatReset=tpArpDetectionStatReset, tpArpDetectionTrustPort=tpArpDetectionTrustPort, tpArpDetectionStatEntry=tpArpDetectionStatEntry, tpArpDetectionStat=tpArpDetectionStat, tpArpDetection=tpArpDetection, tpArpDetectionConfig=tpArpDetectionConfig, tpArpDetectionStatState=tpArpDetectionStatState, tpArpDetectionTrustPortEntry=tpArpDetectionTrustPortEntry, tpArpDetectionStatPort=tpArpDetectionStatPort, tpArpDetectionTrustPortLag=tpArpDetectionTrustPortLag, tpArpDetectionTrustPortState=tpArpDetectionTrustPortState, tpArpDetectionConfigEnable=tpArpDetectionConfigEnable, tpArpDetectionStatNonLegalPkt=tpArpDetectionStatNonLegalPkt, tpArpDetectionStatTable=tpArpDetectionStatTable)
