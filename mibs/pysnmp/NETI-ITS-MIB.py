#
# PySNMP MIB module NETI-ITS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETI-ITS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
Dsti, = mibBuilder.importSymbols("NETI-CHMGR-MIB", "Dsti")
netiExperimentalGeneric, = mibBuilder.importSymbols("NETI-COMMON-MIB", "netiExperimentalGeneric")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, iso, Counter64, Integer32, MibIdentifier, TimeTicks, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, IpAddress, NotificationType, Counter32, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "Counter64", "Integer32", "MibIdentifier", "TimeTicks", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "IpAddress", "NotificationType", "Counter32", "ModuleIdentity", "Gauge32")
RowStatus, DisplayString, RowPointer, TruthValue, TimeStamp, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "RowPointer", "TruthValue", "TimeStamp", "TextualConvention")
netiItsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16))
netiItsMIB.setRevisions(('2014-09-11 13:00', '2014-02-21 15:00', '2013-09-30 07:00', '2012-12-03 11:00', '2012-09-04 14:00', '2012-01-20 16:00', '2011-12-01 09:00', '2011-10-10 13:00', '2011-04-27 09:00', '2011-04-27 08:00', '2011-02-04 12:00', '2011-02-03 09:00', '2010-08-19 09:00', '2010-01-19 09:00', '2009-01-22 15:00', '2008-04-17 10:30', '2008-01-18 15:00', '2007-12-04 16:00', '2007-06-29 14:00',))
if mibBuilder.loadTexts: netiItsMIB.setLastUpdated('201409111300Z')
if mibBuilder.loadTexts: netiItsMIB.setOrganization('Net Insight AB')
class ItsTtpIndexList(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), )
class ItsProtectionStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("unavailable", 1), ("unprotected", 2), ("standbyProtected", 3), ("hitlessCapable", 4), ("hitlessProtected", 5))

itsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1))
itsIfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1))
itsSourceGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2))
itsSinkGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3))
itsIfLastChange = MibScalar((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfLastChange.setStatus('current')
itsIfTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2), )
if mibBuilder.loadTexts: itsIfTable.setStatus('current')
itsIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1), ).setIndexNames((0, "NETI-ITS-MIB", "itsIfIndex"))
if mibBuilder.loadTexts: itsIfEntry.setStatus('current')
itsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: itsIfIndex.setStatus('current')
itsIfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfIfIndex.setStatus('current')
itsIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfName.setStatus('current')
itsIfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfDescr.setStatus('current')
itsIfSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfSpeed.setStatus('current')
itsIfSuppressAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 0), ("none", 1), ("warning", 2), ("all", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfSuppressAlarm.setStatus('current')
itsIfLoopMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 0), ("none", 1), ("line", 2), ("dtm", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfLoopMode.setStatus('current')
itsIfLoopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfLoopTime.setStatus('deprecated')
itsIfCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 9), Bits().clone(namedValues=NamedValues(("multicast", 0), ("allowProtection", 1), ("requireCapacity", 2), ("channelPM", 3), ("interfacePM", 4), ("ttp", 5), ("mon", 6), ("loopl", 7), ("loopd", 8), ("sdi1483", 9), ("sdi1485", 10), ("sdi288", 11), ("sdi270", 12), ("sdi2967", 13), ("sdi2970", 14), ("fs", 15), ("avrs", 16), ("madi", 19), ("ref", 20), ("j2kEnc", 21), ("j2kDec", 22), ("hitps", 23), ("psType3", 24), ("dvrs", 25), ("compatible", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfCapabilities.setStatus('current')
itsIfProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 10), Bits().clone(namedValues=NamedValues(("tbd", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfProperties.setStatus('current')
itsIfDefects = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 11), Bits().clone(namedValues=NamedValues(("los", 0), ("lof", 1), ("ais", 2), ("lop", 3), ("lod", 4), ("rdi", 5), ("lol", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfDefects.setStatus('current')
itsIfFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfFailure.setStatus('current')
itsIfPMReference = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 13), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfPMReference.setStatus('current')
itsIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 4), ("dormant", 5), ("notPresent", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfOperStatus.setStatus('current')
itsIfTxMuteOnFault = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 0), ("enable", 1), ("disable", 2), ("freeze", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfTxMuteOnFault.setStatus('current')
itsIfPurpose = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 16), SnmpAdminString().clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfPurpose.setStatus('current')
itsIfInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("pdh", 1), ("sdh", 2), ("sdi", 3), ("dvb", 4), ("aes", 5), ("mon", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfInterfaceType.setStatus('current')
itsIfMembersSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 18), ItsTtpIndexList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfMembersSrc.setStatus('current')
itsIfMembersSnk = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 2, 1, 19), ItsTtpIndexList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfMembersSnk.setStatus('current')
itsIfPdhTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 3), )
if mibBuilder.loadTexts: itsIfPdhTable.setStatus('current')
itsIfPdhEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 3, 1), ).setIndexNames((0, "NETI-ITS-MIB", "itsIfIndex"))
if mibBuilder.loadTexts: itsIfPdhEntry.setStatus('current')
itsIfPdhSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("e3", 1), ("ds3", 2))).clone('e3')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfPdhSignal.setStatus('current')
itsIfPdhFraming = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("g751", 2), ("g832", 3), ("cbit", 4), ("m13", 5))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfPdhFraming.setStatus('current')
itsIfSdhTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 4), )
if mibBuilder.loadTexts: itsIfSdhTable.setStatus('current')
itsIfSdhEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 4, 1), ).setIndexNames((0, "NETI-ITS-MIB", "itsIfIndex"))
if mibBuilder.loadTexts: itsIfSdhEntry.setStatus('current')
itsIfSdhTiming = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loop", 1), ("internal", 2))).clone('loop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfSdhTiming.setStatus('current')
itsIfSdhMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sdh", 1), ("sonet", 2))).clone('sdh')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfSdhMode.setStatus('current')
itsIfSdhSs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfSdhSs.setStatus('current')
itsIfSdhS1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfSdhS1.setStatus('current')
itsIfSdhSoh = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 4, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfSdhSoh.setStatus('current')
itsIfSdhPoh = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 4, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfSdhPoh.setStatus('current')
itsIfSdhJc = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 4, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfSdhJc.setStatus('current')
itsIfDvbTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 5), )
if mibBuilder.loadTexts: itsIfDvbTable.setStatus('current')
itsIfDvbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 5, 1), ).setIndexNames((0, "NETI-ITS-MIB", "itsIfIndex"))
if mibBuilder.loadTexts: itsIfDvbEntry.setStatus('current')
itsIfDvbFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 5, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfDvbFormat.setStatus('current')
itsIfDvbOutputMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("burst", 2), ("spread", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfDvbOutputMode.setStatus('current')
itsIfAesTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 6), )
if mibBuilder.loadTexts: itsIfAesTable.setStatus('current')
itsIfAesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 6, 1), ).setIndexNames((0, "NETI-ITS-MIB", "itsIfIndex"))
if mibBuilder.loadTexts: itsIfAesEntry.setStatus('current')
itsIfAesIsTimingProvider = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("wordClock", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfAesIsTimingProvider.setStatus('current')
itsIfAesReference = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 6, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfAesReference.setStatus('current')
itsIfSdiTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 7), )
if mibBuilder.loadTexts: itsIfSdiTable.setStatus('current')
itsIfSdiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 7, 1), ).setIndexNames((0, "NETI-ITS-MIB", "itsIfIndex"))
if mibBuilder.loadTexts: itsIfSdiEntry.setStatus('current')
itsIfSdiFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 7, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfSdiFormat.setStatus('current')
itsIfSdiAutoSense = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notSupported", 0), ("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfSdiAutoSense.setStatus('current')
itsIfSdiIsTimingProvider = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("analog", 1), ("digital", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfSdiIsTimingProvider.setStatus('current')
itsIfSdiReference = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 7, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfSdiReference.setStatus('current')
itsIfSdiFsVDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-3, 1124))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfSdiFsVDelay.setStatus('obsolete')
itsIfSdiFsHDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-3865, 259))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfSdiFsHDelay.setStatus('obsolete')
itsIfSdiFsDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-20854167, 20854167))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfSdiFsDelay.setStatus('current')
itsIfMonTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 9), )
if mibBuilder.loadTexts: itsIfMonTable.setStatus('current')
itsIfMonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 9, 1), ).setIndexNames((0, "NETI-ITS-MIB", "itsIfIndex"))
if mibBuilder.loadTexts: itsIfMonEntry.setStatus('current')
itsIfMonMonitoredInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 9, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfMonMonitoredInterface.setStatus('current')
itsIfMonDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("in", 1), ("out", 2))).clone('in')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfMonDirection.setStatus('current')
itsIfEnableButton = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 9, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfEnableButton.setStatus('current')
itsIfJ2kTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 10), )
if mibBuilder.loadTexts: itsIfJ2kTable.setStatus('current')
itsIfJ2kEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 10, 1), ).setIndexNames((0, "NETI-ITS-MIB", "itsIfIndex"))
if mibBuilder.loadTexts: itsIfJ2kEntry.setStatus('current')
itsIfJ2kEncoderEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 10, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfJ2kEncoderEnable.setStatus('current')
itsIfJ2kDecoderActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 10, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfJ2kDecoderActive.setStatus('current')
itsIfJ2kSignalFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notApplicable", 0), ("sdSdi", 1), ("hdSdiEu", 3), ("hdSdiUs", 4), ("hd3gSdiEu", 5), ("hd3gSdiUs", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfJ2kSignalFormat.setStatus('current')
itsIfJ2kRateVideo = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 10, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfJ2kRateVideo.setStatus('current')
itsIfJ2kRateVideoMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 10, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfJ2kRateVideoMax.setStatus('current')
itsIfJ2kRateVbi = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 10, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfJ2kRateVbi.setStatus('current')
itsIfJ2kRateAnc = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 10, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfJ2kRateAnc.setStatus('current')
itsIfJ2kRateAudio = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 10, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfJ2kRateAudio.setStatus('current')
itsIfJ2kAudioSampleSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(20, 20), ValueRangeConstraint(24, 24), )).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfJ2kAudioSampleSize.setStatus('current')
itsIfJ2kReduceAudioTransportBitrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 10, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfJ2kReduceAudioTransportBitrate.setStatus('current')
itsIfSdiAudioTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 11), )
if mibBuilder.loadTexts: itsIfSdiAudioTable.setStatus('current')
itsIfSdiAudioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 11, 1), ).setIndexNames((0, "NETI-ITS-MIB", "itsIfIndex"), (0, "NETI-ITS-MIB", "itsIfSdiAudioIndex"))
if mibBuilder.loadTexts: itsIfSdiAudioEntry.setStatus('current')
itsIfSdiAudioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: itsIfSdiAudioIndex.setStatus('current')
itsIfSdiAudioForward = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 11, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfSdiAudioForward.setStatus('current')
itsIfSdiVbiTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 12), )
if mibBuilder.loadTexts: itsIfSdiVbiTable.setStatus('current')
itsIfSdiVbiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 12, 1), ).setIndexNames((0, "NETI-ITS-MIB", "itsIfIndex"), (0, "NETI-ITS-MIB", "itsIfSdiVbiIndex"))
if mibBuilder.loadTexts: itsIfSdiVbiEntry.setStatus('current')
itsIfSdiVbiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 46)))
if mibBuilder.loadTexts: itsIfSdiVbiIndex.setStatus('current')
itsIfSdiVbiLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfSdiVbiLineNumber.setStatus('current')
itsIfSdiVbiForward = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notApplicable", 0), ("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfSdiVbiForward.setStatus('current')
itsIfSdiAncTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 13), )
if mibBuilder.loadTexts: itsIfSdiAncTable.setStatus('current')
itsIfSdiAncEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 13, 1), ).setIndexNames((0, "NETI-ITS-MIB", "itsIfIndex"), (0, "NETI-ITS-MIB", "itsIfSdiAncIndex"))
if mibBuilder.loadTexts: itsIfSdiAncEntry.setStatus('current')
itsIfSdiAncIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: itsIfSdiAncIndex.setStatus('current')
itsIfSdiAncDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 13, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfSdiAncDescription.setStatus('current')
itsIfSdiAncDid = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 13, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfSdiAncDid.setStatus('current')
itsIfSdiAncSdid = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 13, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfSdiAncSdid.setStatus('current')
itsIfSdiAncForward = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notApplicable", 0), ("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfSdiAncForward.setStatus('current')
itsIfPs3Table = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 14), )
if mibBuilder.loadTexts: itsIfPs3Table.setStatus('current')
itsIfPs3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 14, 1), ).setIndexNames((0, "NETI-ITS-MIB", "itsIfIndex"))
if mibBuilder.loadTexts: itsIfPs3Entry.setStatus('current')
itsIfPs3DifferentialDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 14, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfPs3DifferentialDelay.setStatus('current')
itsIfPs3DifferentialDelayValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 14, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfPs3DifferentialDelayValid.setStatus('current')
itsIfPs3AheadInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 14, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfPs3AheadInterface.setStatus('current')
itsIfPs3HitlessProtection = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 14, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfPs3HitlessProtection.setStatus('current')
itsIfPs3ProtectionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 14, 1, 5), ItsProtectionStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsIfPs3ProtectionStatus.setStatus('current')
itsIfPs3ExpectedProtectionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 14, 1, 6), ItsProtectionStatus().clone('unprotected')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfPs3ExpectedProtectionStatus.setStatus('current')
itsIfPs3ForceHit = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 14, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 0))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfPs3ForceHit.setStatus('current')
itsIfPs3ActiveInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 14, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfPs3ActiveInterface.setStatus('current')
itsIfPs3MaxExpDifferentialDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 1, 14, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsIfPs3MaxExpDifferentialDelay.setStatus('current')
itsSrcTtpLastChange = MibScalar((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSrcTtpLastChange.setStatus('current')
itsSrcTtpNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSrcTtpNextIndex.setStatus('current')
itsSrcTtpTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 3), )
if mibBuilder.loadTexts: itsSrcTtpTable.setStatus('current')
itsSrcTtpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 3, 1), ).setIndexNames((0, "NETI-ITS-MIB", "itsSrcTtpIndex"))
if mibBuilder.loadTexts: itsSrcTtpEntry.setStatus('current')
itsSrcTtpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: itsSrcTtpIndex.setStatus('current')
itsSrcTtpName = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 3, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSrcTtpName.setStatus('current')
itsSrcTtpCustomerId = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsSrcTtpCustomerId.setStatus('current')
itsSrcTtpPurpose = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 3, 1, 4), SnmpAdminString().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsSrcTtpPurpose.setStatus('current')
itsSrcTtpLocalIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsSrcTtpLocalIf.setStatus('current')
itsSrcTtpLocalDsti = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 3, 1, 6), Dsti()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsSrcTtpLocalDsti.setStatus('current')
itsSrcTtpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unicast", 1), ("multicast", 2), ("compatible", 3))).clone('unicast')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: itsSrcTtpMode.setStatus('current')
itsSrcTtpODescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 3, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSrcTtpODescription.setStatus('current')
itsSrcTtpOConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSrcTtpOConnection.setStatus('current')
itsSrcTtpFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 3, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSrcTtpFailure.setStatus('current')
itsSrcTtpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsSrcTtpAdminStatus.setStatus('current')
itsSrcTtpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 9))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 4), ("dormant", 5), ("partial", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSrcTtpOperStatus.setStatus('current')
itsSrcTtpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 3, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: itsSrcTtpRowStatus.setStatus('current')
itsSrcIndexLookupTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 4), )
if mibBuilder.loadTexts: itsSrcIndexLookupTable.setStatus('current')
itsSrcIndexLookupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 4, 1), ).setIndexNames((0, "NETI-ITS-MIB", "itsSrcTtpLocalDsti"))
if mibBuilder.loadTexts: itsSrcIndexLookupEntry.setStatus('current')
itsSrcIndexLookupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 2, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSrcIndexLookupIndex.setStatus('current')
itsSnkTtpLastChange = MibScalar((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSnkTtpLastChange.setStatus('current')
itsSnkTtpNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSnkTtpNextIndex.setStatus('current')
itsSnkTtpTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3), )
if mibBuilder.loadTexts: itsSnkTtpTable.setStatus('current')
itsSnkTtpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1), ).setIndexNames((0, "NETI-ITS-MIB", "itsSnkTtpIndex"))
if mibBuilder.loadTexts: itsSnkTtpEntry.setStatus('current')
itsSnkTtpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: itsSnkTtpIndex.setStatus('current')
itsSnkTtpName = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSnkTtpName.setStatus('current')
itsSnkTtpCustomerId = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsSnkTtpCustomerId.setStatus('current')
itsSnkTtpPurpose = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1, 4), SnmpAdminString().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsSnkTtpPurpose.setStatus('current')
itsSnkTtpLocalIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsSnkTtpLocalIf.setStatus('current')
itsSnkTtpLocalDsti = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1, 6), Dsti()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsSnkTtpLocalDsti.setStatus('current')
itsSnkTtpPSActiveChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsSnkTtpPSActiveChannel.setStatus('current')
itsSnkTtpSuppressAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 0), ("none", 1), ("warning", 2), ("all", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsSnkTtpSuppressAlarm.setStatus('current')
itsSnkTtpTConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSnkTtpTConnection.setStatus('current')
itsSnkTtpDefects = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1, 10), Bits().clone(namedValues=NamedValues(("los", 0), ("lof", 1), ("ais", 2), ("lop", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSnkTtpDefects.setStatus('current')
itsSnkTtpFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSnkTtpFailure.setStatus('current')
itsSnkTtpPMReference = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1, 12), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSnkTtpPMReference.setStatus('current')
itsSnkTtpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsSnkTtpAdminStatus.setStatus('current')
itsSnkTtpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("dormant", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSnkTtpOperStatus.setStatus('current')
itsSnkTtpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: itsSnkTtpRowStatus.setStatus('current')
itsSnkTtpTConnection2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSnkTtpTConnection2.setStatus('current')
itsSnkTtpPSAllow = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 3, 1, 17), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: itsSnkTtpPSAllow.setStatus('current')
itsSnkIndexLookupTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 4), )
if mibBuilder.loadTexts: itsSnkIndexLookupTable.setStatus('current')
itsSnkIndexLookupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 4, 1), ).setIndexNames((0, "NETI-ITS-MIB", "itsSnkTtpLocalDsti"))
if mibBuilder.loadTexts: itsSnkIndexLookupEntry.setStatus('current')
itsSnkIndexLookupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 16, 1, 3, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: itsSnkIndexLookupIndex.setStatus('current')
mibBuilder.exportSymbols("NETI-ITS-MIB", itsIfJ2kSignalFormat=itsIfJ2kSignalFormat, itsSnkTtpLocalDsti=itsSnkTtpLocalDsti, itsIfJ2kRateAnc=itsIfJ2kRateAnc, itsSnkTtpLocalIf=itsSnkTtpLocalIf, itsSnkIndexLookupEntry=itsSnkIndexLookupEntry, itsIfSdiAudioIndex=itsIfSdiAudioIndex, itsIfLoopTime=itsIfLoopTime, itsSourceGroup=itsSourceGroup, itsIfSdhJc=itsIfSdhJc, itsIfSdiEntry=itsIfSdiEntry, itsIfJ2kRateVbi=itsIfJ2kRateVbi, itsIfSpeed=itsIfSpeed, itsSrcTtpOConnection=itsSrcTtpOConnection, itsIfMonEntry=itsIfMonEntry, itsIfSdiVbiLineNumber=itsIfSdiVbiLineNumber, itsSnkTtpNextIndex=itsSnkTtpNextIndex, itsIfMonMonitoredInterface=itsIfMonMonitoredInterface, itsSrcTtpEntry=itsSrcTtpEntry, itsSrcTtpAdminStatus=itsSrcTtpAdminStatus, itsSnkTtpPSActiveChannel=itsSnkTtpPSActiveChannel, itsIfSdiAncSdid=itsIfSdiAncSdid, itsIfAesTable=itsIfAesTable, itsIfTxMuteOnFault=itsIfTxMuteOnFault, itsIfSdiAncIndex=itsIfSdiAncIndex, itsIfPs3Entry=itsIfPs3Entry, itsIfDefects=itsIfDefects, itsSnkTtpSuppressAlarm=itsSnkTtpSuppressAlarm, itsSrcTtpIndex=itsSrcTtpIndex, itsIfSdhEntry=itsIfSdhEntry, itsIfMonTable=itsIfMonTable, itsIfPs3MaxExpDifferentialDelay=itsIfPs3MaxExpDifferentialDelay, itsIfJ2kRateVideo=itsIfJ2kRateVideo, itsIfSdhS1=itsIfSdhS1, ItsTtpIndexList=ItsTtpIndexList, itsSrcIndexLookupTable=itsSrcIndexLookupTable, itsSrcTtpPurpose=itsSrcTtpPurpose, itsSrcTtpRowStatus=itsSrcTtpRowStatus, itsIfEnableButton=itsIfEnableButton, itsSnkTtpPMReference=itsSnkTtpPMReference, itsSrcTtpOperStatus=itsSrcTtpOperStatus, itsSnkTtpCustomerId=itsSnkTtpCustomerId, itsSnkTtpFailure=itsSnkTtpFailure, itsIfSuppressAlarm=itsIfSuppressAlarm, itsSnkTtpAdminStatus=itsSnkTtpAdminStatus, itsSrcTtpNextIndex=itsSrcTtpNextIndex, itsIfJ2kReduceAudioTransportBitrate=itsIfJ2kReduceAudioTransportBitrate, itsIfAesIsTimingProvider=itsIfAesIsTimingProvider, itsIfSdhTiming=itsIfSdhTiming, itsSrcTtpFailure=itsSrcTtpFailure, itsSrcTtpMode=itsSrcTtpMode, itsIfPs3DifferentialDelayValid=itsIfPs3DifferentialDelayValid, itsIfMembersSnk=itsIfMembersSnk, itsIfPurpose=itsIfPurpose, itsIfSdhSoh=itsIfSdhSoh, itsSnkIndexLookupTable=itsSnkIndexLookupTable, itsIfPdhFraming=itsIfPdhFraming, itsIfSdiVbiTable=itsIfSdiVbiTable, itsIfPs3DifferentialDelay=itsIfPs3DifferentialDelay, itsSnkTtpDefects=itsSnkTtpDefects, itsIfIfIndex=itsIfIfIndex, itsIfInterfaceType=itsIfInterfaceType, itsIfJ2kRateAudio=itsIfJ2kRateAudio, itsSnkTtpRowStatus=itsSnkTtpRowStatus, itsIfPs3ExpectedProtectionStatus=itsIfPs3ExpectedProtectionStatus, itsIfSdhTable=itsIfSdhTable, itsIfSdiAncDid=itsIfSdiAncDid, itsIfPs3Table=itsIfPs3Table, itsIfJ2kEncoderEnable=itsIfJ2kEncoderEnable, itsIfDescr=itsIfDescr, itsIfSdhPoh=itsIfSdhPoh, itsIfAesEntry=itsIfAesEntry, itsSnkTtpName=itsSnkTtpName, itsIfSdiVbiForward=itsIfSdiVbiForward, itsIfLoopMode=itsIfLoopMode, itsIfDvbTable=itsIfDvbTable, itsIfPdhSignal=itsIfPdhSignal, netiItsMIB=netiItsMIB, itsIfDvbOutputMode=itsIfDvbOutputMode, itsIfSdiAudioTable=itsIfSdiAudioTable, itsIfPMReference=itsIfPMReference, PYSNMP_MODULE_ID=netiItsMIB, itsIfSdiAncDescription=itsIfSdiAncDescription, itsIfJ2kTable=itsIfJ2kTable, itsIfMembersSrc=itsIfMembersSrc, itsIfDvbFormat=itsIfDvbFormat, itsSrcIndexLookupIndex=itsSrcIndexLookupIndex, itsSnkTtpPSAllow=itsSnkTtpPSAllow, itsIfMonDirection=itsIfMonDirection, itsSnkTtpIndex=itsSnkTtpIndex, itsSnkTtpLastChange=itsSnkTtpLastChange, itsIfSdiTable=itsIfSdiTable, itsIfSdiFsHDelay=itsIfSdiFsHDelay, itsSrcTtpLastChange=itsSrcTtpLastChange, itsSrcTtpLocalIf=itsSrcTtpLocalIf, itsIfSdiIsTimingProvider=itsIfSdiIsTimingProvider, itsIfCapabilities=itsIfCapabilities, itsIfSdiAncEntry=itsIfSdiAncEntry, itsSrcTtpName=itsSrcTtpName, itsIfSdhSs=itsIfSdhSs, itsIfJ2kRateVideoMax=itsIfJ2kRateVideoMax, itsSinkGroup=itsSinkGroup, itsSnkTtpEntry=itsSnkTtpEntry, itsIfJ2kAudioSampleSize=itsIfJ2kAudioSampleSize, itsIfSdiAudioEntry=itsIfSdiAudioEntry, itsIfSdiAncTable=itsIfSdiAncTable, itsSrcTtpCustomerId=itsSrcTtpCustomerId, itsSrcTtpLocalDsti=itsSrcTtpLocalDsti, itsIfPs3AheadInterface=itsIfPs3AheadInterface, itsIfEntry=itsIfEntry, itsIfSdiReference=itsIfSdiReference, itsIfFailure=itsIfFailure, itsIfSdhMode=itsIfSdhMode, itsSnkTtpTConnection=itsSnkTtpTConnection, itsIfSdiFsDelay=itsIfSdiFsDelay, itsIfOperStatus=itsIfOperStatus, itsSnkTtpTConnection2=itsSnkTtpTConnection2, itsIfPdhTable=itsIfPdhTable, itsIfSdiVbiIndex=itsIfSdiVbiIndex, itsIfSdiAutoSense=itsIfSdiAutoSense, itsIfSdiAudioForward=itsIfSdiAudioForward, itsIfPs3ActiveInterface=itsIfPs3ActiveInterface, itsObjects=itsObjects, itsIfIndex=itsIfIndex, itsIfName=itsIfName, itsSnkTtpOperStatus=itsSnkTtpOperStatus, itsIfLastChange=itsIfLastChange, ItsProtectionStatus=ItsProtectionStatus, itsIfProperties=itsIfProperties, itsSrcIndexLookupEntry=itsSrcIndexLookupEntry, itsIfPdhEntry=itsIfPdhEntry, itsIfSdiAncForward=itsIfSdiAncForward, itsSrcTtpTable=itsSrcTtpTable, itsIfDvbEntry=itsIfDvbEntry, itsIfSdiVbiEntry=itsIfSdiVbiEntry, itsSnkTtpPurpose=itsSnkTtpPurpose, itsIfPs3ProtectionStatus=itsIfPs3ProtectionStatus, itsIfJ2kEntry=itsIfJ2kEntry, itsIfSdiFsVDelay=itsIfSdiFsVDelay, itsIfGroup=itsIfGroup, itsIfJ2kDecoderActive=itsIfJ2kDecoderActive, itsIfPs3HitlessProtection=itsIfPs3HitlessProtection, itsSnkIndexLookupIndex=itsSnkIndexLookupIndex, itsIfSdiFormat=itsIfSdiFormat, itsIfTable=itsIfTable, itsSnkTtpTable=itsSnkTtpTable, itsIfPs3ForceHit=itsIfPs3ForceHit, itsSrcTtpODescription=itsSrcTtpODescription, itsIfAesReference=itsIfAesReference)
