#
# PySNMP MIB module ADTRAN-AOS-VQM (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ADTRAN-AOS-VQM
# Produced by pysmi-0.3.4 at Mon Apr 29 16:58:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
adGenAOSVoice, adGenAOSConformance = mibBuilder.importSymbols("ADTRAN-AOS", "adGenAOSVoice", "adGenAOSConformance")
adIdentity, = mibBuilder.importSymbols("ADTRAN-MIB", "adIdentity")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibIdentifier, Counter32, ObjectIdentity, TimeTicks, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Gauge32, IpAddress, Integer32, Bits, iso, Counter64, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter32", "ObjectIdentity", "TimeTicks", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Gauge32", "IpAddress", "Integer32", "Bits", "iso", "Counter64", "ModuleIdentity")
TextualConvention, DateAndTime, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "DisplayString", "TruthValue")
adGenAOSVQMMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 664, 6, 10000, 53, 5, 3))
if mibBuilder.loadTexts: adGenAOSVQMMib.setLastUpdated('200901060000Z')
if mibBuilder.loadTexts: adGenAOSVQMMib.setOrganization('ADTRAN, Inc.')
adVQM = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3))
adVQMTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 0))
adVQMTrapControl = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 1))
adVQMCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2))
adVQMThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3))
adVQMSysPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 4))
adVQMInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5))
adVQMEndPoint = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6))
adVQMHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7))
adVQMActive = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8))
class MOSvalue(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(100, 1000), ValueRangeConstraint(65535, 65535), )
class Percentage(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(0, 1000), ValueRangeConstraint(65535, 65535), )
class MsecValue(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'

adVQMEndOfCallTrap = NotificationType((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 0, 1)).setObjects(("ADTRAN-AOS-VQM", "adVqmTrapEventType"), ("ADTRAN-AOS-VQM", "adVqmCallHistMosLq"), ("ADTRAN-AOS-VQM", "adVqmCallHistMosPq"), ("ADTRAN-AOS-VQM", "adVqmCallHistPktsLostTotal"), ("ADTRAN-AOS-VQM", "adVqmCallHistOutOfOrder"), ("ADTRAN-AOS-VQM", "adVqmCallHistPdvAverageMs"))
if mibBuilder.loadTexts: adVQMEndOfCallTrap.setStatus('current')
adVqmTrapState = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adVqmTrapState.setStatus('current')
adVqmTrapCfgSeverityLevel = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("error", 1), ("warning", 2), ("notice", 3), ("info", 4))).clone('warning')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adVqmTrapCfgSeverityLevel.setStatus('current')
adVqmTrapEventType = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 1, 3), Bits().clone(namedValues=NamedValues(("lQMos", 0), ("pQMos", 1), ("loss", 2), ("outOfOrder", 3), ("jitter", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmTrapEventType.setStatus('current')
adVqmCfgEnable = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgEnable.setStatus('current')
adVqmCfgSipEnable = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgSipEnable.setStatus('current')
adVqmCfgUdpEnable = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgUdpEnable.setStatus('current')
adVqmCfgInternationalCode = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 5))).clone(namedValues=NamedValues(("none", 1), ("japan", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgInternationalCode.setStatus('current')
adVqmCfgJitterBufferType = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("jitterBufferFixed", 1), ("jitterBufferAdaptive", 2), ("jitterBufferUnknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgJitterBufferType.setStatus('current')
adVqmCfgJitterBufferAdaptiveMin = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgJitterBufferAdaptiveMin.setStatus('current')
adVqmCfgJitterBufferAdaptiveNominal = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgJitterBufferAdaptiveNominal.setStatus('current')
adVqmCfgJitterBufferAdaptiveMax = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgJitterBufferAdaptiveMax.setStatus('current')
adVqmCfgJitterBufferFixedNominal = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgJitterBufferFixedNominal.setStatus('current')
adVqmCfgJitterBufferFixedSize = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgJitterBufferFixedSize.setStatus('current')
adVqmCfgJitterBufferThresholdEarlyMs = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgJitterBufferThresholdEarlyMs.setStatus('current')
adVqmCfgJitterBufferThresholdLateMs = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgJitterBufferThresholdLateMs.setStatus('current')
adVqmCfgRoundTripPingEnabled = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgRoundTripPingEnabled.setStatus('current')
adVqmCfgRoundTripPingType = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ping", 1), ("timestamp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgRoundTripPingType.setStatus('current')
adVqmCfgCallHistorySize = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgCallHistorySize.setStatus('current')
adVqmCfgHistoryThresholdLqmos = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 16), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgHistoryThresholdLqmos.setStatus('current')
adVqmCfgHistoryThresholdCqmos = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 17), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgHistoryThresholdCqmos.setStatus('current')
adVqmCfgHistoryThresholdPqmos = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 18), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgHistoryThresholdPqmos.setStatus('current')
adVqmCfgHistoryThresholdLoss = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgHistoryThresholdLoss.setStatus('current')
adVqmCfgHistoryThresholdOutOfOrder = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgHistoryThresholdOutOfOrder.setStatus('current')
adVqmCfgHistoryThresholdJitter = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCfgHistoryThresholdJitter.setStatus('current')
adVqmCfgClear = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adVqmCfgClear.setStatus('current')
adVqmCfgClearCallHistory = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 2, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adVqmCfgClearCallHistory.setStatus('current')
adVqmThresholdLqmosInfo = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 1), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdLqmosInfo.setStatus('current')
adVqmThresholdLqmosNotice = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 2), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdLqmosNotice.setStatus('current')
adVqmThresholdLqmosWarning = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 3), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdLqmosWarning.setStatus('current')
adVqmThresholdLqmosError = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 4), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdLqmosError.setStatus('current')
adVqmThresholdPqmosInfo = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 5), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdPqmosInfo.setStatus('current')
adVqmThresholdPqmosNotice = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 6), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdPqmosNotice.setStatus('current')
adVqmThresholdPqmosWarning = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 7), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdPqmosWarning.setStatus('current')
adVqmThresholdPqmosError = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 8), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdPqmosError.setStatus('current')
adVqmThresholdOutOfOrderInfo = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdOutOfOrderInfo.setStatus('current')
adVqmThresholdOutOfOrderNotice = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdOutOfOrderNotice.setStatus('current')
adVqmThresholdOutOfOrderWarning = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdOutOfOrderWarning.setStatus('current')
adVqmThresholdOutOfOrderError = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdOutOfOrderError.setStatus('current')
adVqmThresholdLossInfo = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdLossInfo.setStatus('current')
adVqmThresholdLossNotice = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdLossNotice.setStatus('current')
adVqmThresholdLossWarning = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdLossWarning.setStatus('current')
adVqmThresholdLossError = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdLossError.setStatus('current')
adVqmThresholdJitterInfo = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdJitterInfo.setStatus('current')
adVqmThresholdJitterNotice = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdJitterNotice.setStatus('current')
adVqmThresholdJitterWarning = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdJitterWarning.setStatus('current')
adVqmThresholdJitterError = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 3, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmThresholdJitterError.setStatus('current')
adVqmSysActiveCalls = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmSysActiveCalls.setStatus('current')
adVqmSysActiveExcellent = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmSysActiveExcellent.setStatus('current')
adVqmSysActiveGood = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmSysActiveGood.setStatus('current')
adVqmSysActiveFair = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmSysActiveFair.setStatus('current')
adVqmSysActivePoor = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmSysActivePoor.setStatus('current')
adVqmSysCallHistoryCalls = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmSysCallHistoryCalls.setStatus('current')
adVqmSysCallHistoryExcellent = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmSysCallHistoryExcellent.setStatus('current')
adVqmSysCallHistoryGood = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 4, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmSysCallHistoryGood.setStatus('current')
adVqmSysCallHistoryFair = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 4, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmSysCallHistoryFair.setStatus('current')
adVqmSysCallHistoryPoor = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 4, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmSysCallHistoryPoor.setStatus('current')
adVqmSysAllCallsExcellent = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 4, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmSysAllCallsExcellent.setStatus('current')
adVqmSysAllCallsGood = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 4, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmSysAllCallsGood.setStatus('current')
adVqmSysAllCallsFair = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 4, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmSysAllCallsFair.setStatus('current')
adVqmSysAllCallsPoor = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 4, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmSysAllCallsPoor.setStatus('current')
adVQMInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1), )
if mibBuilder.loadTexts: adVQMInterfaceTable.setStatus('current')
adVQMInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1), ).setIndexNames((0, "ADTRAN-AOS-VQM", "adVqmIfcId"))
if mibBuilder.loadTexts: adVQMInterfaceEntry.setStatus('current')
adVqmIfcId = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcId.setStatus('current')
adVqmIfcName = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcName.setStatus('current')
adVqmIfcPktsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcPktsRx.setStatus('current')
adVqmIfcPktsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcPktsLost.setStatus('current')
adVqmIfcPktsOoo = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcPktsOoo.setStatus('current')
adVqmIfcPktsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcPktsDiscarded.setStatus('current')
adVqmIfcNumberActiveCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcNumberActiveCalls.setStatus('current')
adVqmIfcTerminatedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcTerminatedCalls.setStatus('current')
adVqmIfcRLqMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcRLqMinimum.setStatus('current')
adVqmIfcRLqAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcRLqAverage.setStatus('current')
adVqmIfcRLqMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcRLqMaximum.setStatus('current')
adVqmIfcRCqMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcRCqMinimum.setStatus('current')
adVqmIfcRCqAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcRCqAverage.setStatus('current')
adVqmIfcRCqMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcRCqMaximum.setStatus('current')
adVqmIfcRG107Minimum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcRG107Minimum.setStatus('current')
adVqmIfcRG107Average = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcRG107Average.setStatus('current')
adVqmIfcRG107Maximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcRG107Maximum.setStatus('current')
adVqmIfcMosLqMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 18), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcMosLqMinimum.setStatus('current')
adVqmIfcMosLqAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 19), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcMosLqAverage.setStatus('current')
adVqmIfcMosLqMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 20), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcMosLqMaximum.setStatus('current')
adVqmIfcMosCqMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 21), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcMosCqMinimum.setStatus('current')
adVqmIfcMosCqAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 22), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcMosCqAverage.setStatus('current')
adVqmIfcMosCqMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 23), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcMosCqMaximum.setStatus('current')
adVqmIfcMosPqMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 24), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcMosPqMinimum.setStatus('current')
adVqmIfcMosPqAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 25), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcMosPqAverage.setStatus('current')
adVqmIfcMosPqMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 26), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcMosPqMaximum.setStatus('current')
adVqmIfcLossMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcLossMinimum.setStatus('current')
adVqmIfcLossAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcLossAverage.setStatus('current')
adVqmIfcLossMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcLossMaximum.setStatus('current')
adVqmIfcDiscardsMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcDiscardsMinimum.setStatus('current')
adVqmIfcDiscardsAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcDiscardsAverage.setStatus('current')
adVqmIfcDiscardsMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcDiscardsMaximum.setStatus('current')
adVqmIfcPdvAverageMs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcPdvAverageMs.setStatus('current')
adVqmIfcPdvMaximumMs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcPdvMaximumMs.setStatus('current')
adVqmIfcDelayMinMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcDelayMinMsec.setStatus('current')
adVqmIfcDelayAvgMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcDelayAvgMsec.setStatus('current')
adVqmIfcDelayMaxMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcDelayMaxMsec.setStatus('current')
adVqmIfcNumberStreamsExcellent = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcNumberStreamsExcellent.setStatus('current')
adVqmIfcNumberStreamsGood = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcNumberStreamsGood.setStatus('current')
adVqmIfcNumberStreamsFair = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcNumberStreamsFair.setStatus('current')
adVqmIfcNumberStreamsPoor = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmIfcNumberStreamsPoor.setStatus('current')
adVqmIfcClear = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 5, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adVqmIfcClear.setStatus('current')
adVQMEndPointTable = MibTable((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1), )
if mibBuilder.loadTexts: adVQMEndPointTable.setStatus('current')
adVQMEndPointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1), ).setIndexNames((0, "ADTRAN-AOS-VQM", "adVqmEndPointRtpSourceIp"))
if mibBuilder.loadTexts: adVQMEndPointEntry.setStatus('current')
adVqmEndPointRtpSourceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmEndPointRtpSourceIp.setStatus('current')
adVqmEndPointNumberCompletedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmEndPointNumberCompletedCalls.setStatus('current')
adVqmEndPointInterfaceId = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmEndPointInterfaceId.setStatus('current')
adVqmEndPointInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmEndPointInterfaceName.setStatus('current')
adVqmEndPointMosLqMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1, 5), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmEndPointMosLqMinimum.setStatus('current')
adVqmEndPointMosLqAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1, 6), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmEndPointMosLqAverage.setStatus('current')
adVqmEndPointMosLqMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1, 7), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmEndPointMosLqMaximum.setStatus('current')
adVqmEndPointMosPqMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1, 8), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmEndPointMosPqMinimum.setStatus('current')
adVqmEndPointMosPqAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1, 9), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmEndPointMosPqAverage.setStatus('current')
adVqmEndPointMosPqMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1, 10), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmEndPointMosPqMaximum.setStatus('current')
adVqmEndPointPktsLostTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmEndPointPktsLostTotal.setStatus('current')
adVqmEndPointPktsOutOfOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmEndPointPktsOutOfOrder.setStatus('current')
adVqmEndPointJitterMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmEndPointJitterMaximum.setStatus('current')
adVqmEndPointNumberStreamsExcellent = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmEndPointNumberStreamsExcellent.setStatus('current')
adVqmEndPointNumberStreamsGood = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmEndPointNumberStreamsGood.setStatus('current')
adVqmEndPointNumberStreamsFair = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmEndPointNumberStreamsFair.setStatus('current')
adVqmEndPointNumberStreamsPoor = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 6, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmEndPointNumberStreamsPoor.setStatus('current')
adVQMCallHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1), )
if mibBuilder.loadTexts: adVQMCallHistoryTable.setStatus('current')
adVQMCallHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1), ).setIndexNames((0, "ADTRAN-AOS-VQM", "adVqmCallHistRtpSourceIp"), (0, "ADTRAN-AOS-VQM", "adVqmCallHistRtpSourcePort"), (0, "ADTRAN-AOS-VQM", "adVqmCallHistRtpDestIp"), (0, "ADTRAN-AOS-VQM", "adVqmCallHistRtpDestPort"), (0, "ADTRAN-AOS-VQM", "adVqmCallHistSsrcid"))
if mibBuilder.loadTexts: adVQMCallHistoryEntry.setStatus('current')
adVqmCallHistRtpSourceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistRtpSourceIp.setStatus('current')
adVqmCallHistRtpSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistRtpSourcePort.setStatus('current')
adVqmCallHistRtpDestIp = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistRtpDestIp.setStatus('current')
adVqmCallHistRtpDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistRtpDestPort.setStatus('current')
adVqmCallHistSsrcid = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistSsrcid.setStatus('current')
adVqmCallHistTo = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistTo.setStatus('current')
adVqmCallHistFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistFrom.setStatus('current')
adVqmCallHistRtpSourceUri = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistRtpSourceUri.setStatus('current')
adVqmCallHistCallid = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistCallid.setStatus('current')
adVqmCallHistCcmid = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistCcmid.setStatus('current')
adVqmCallHistSourceIntName = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistSourceIntName.setStatus('current')
adVqmCallHistDestIntName = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDestIntName.setStatus('current')
adVqmCallHistSourceIntDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistSourceIntDescription.setStatus('current')
adVqmCallHistDestIntDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDestIntDescription.setStatus('current')
adVqmCallHistCallStart = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistCallStart.setStatus('current')
adVqmCallHistCallDurationMs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistCallDurationMs.setStatus('current')
adVqmCallHistCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89))).clone(namedValues=NamedValues(("unknown", 1), ("g711U", 2), ("g711UPLC", 3), ("g723153K", 4), ("deprecated1", 5), ("g723163K", 6), ("deprecated2", 7), ("g728", 8), ("deprecated3", 9), ("g729", 10), ("deprecated4", 11), ("g729A", 12), ("deprecated5", 13), ("user1", 14), ("user2", 15), ("user3", 16), ("user4", 17), ("gsmfr", 18), ("reservedgsmhr", 19), ("gsmefr", 20), ("sx7300", 21), ("sx9600", 22), ("g711A", 23), ("g711APLC", 24), ("deprecated6", 25), ("g72616K", 26), ("g72624K", 27), ("g72632K", 28), ("g72640K", 29), ("gipse711U", 30), ("gipse711A", 31), ("gipsilbc", 32), ("gipsisac", 33), ("gipsipcmwb", 34), ("g729E8K0", 35), ("g729E11k8", 36), ("wblinearpcm", 37), ("wblinearpcmPlc", 38), ("g722at64k", 39), ("g722at56k", 40), ("g722at48k", 41), ("g7221at32k", 42), ("g7221at24k", 43), ("g7222at23k85", 44), ("g7222at23k05", 45), ("g7222at19k85", 46), ("g7222at18k25", 47), ("g7222at15k85", 48), ("g7222at14k25", 49), ("g7222at12k85", 50), ("g7222at8k85", 51), ("g7222at6k6", 52), ("qcelp8", 53), ("qcelp13", 54), ("evrc", 55), ("smv812", 56), ("smv579", 57), ("smv444", 58), ("smv395", 59), ("amrnb12k2", 60), ("amrnb10k2", 61), ("amrnb7k95", 62), ("amrnb7k4", 63), ("amrnb6k7", 64), ("amrnb5k9", 65), ("amrnb5k15", 66), ("amrnb4k75", 67), ("ilbc13k3", 68), ("ilbc15k2", 69), ("g711u56k", 70), ("g711uPLC56k", 71), ("g711A56k", 72), ("g711APLC56k", 73), ("g7231C", 74), ("speex2k15", 75), ("speex5k95", 76), ("speeX8k", 77), ("speeX11k", 78), ("speeX15k", 79), ("speeX18k2", 80), ("speeX24k6", 81), ("speeX3k95", 82), ("speeX12k8", 83), ("speeX16k8", 84), ("speeX20k6", 85), ("speeX23k8", 86), ("speeX27k8", 87), ("speeX34k2", 88), ("speeX42k2", 89)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistCodec.setStatus('current')
adVqmCallHistCodecClass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wideband", 1), ("other", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistCodecClass.setStatus('current')
adVqmCallHistDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDscp.setStatus('current')
adVqmCallHistPktsRcvdTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistPktsRcvdTotal.setStatus('current')
adVqmCallHistPktsLostTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistPktsLostTotal.setStatus('current')
adVqmCallHistPktsDiscardedTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistPktsDiscardedTotal.setStatus('current')
adVqmCallHistOutOfOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistOutOfOrder.setStatus('current')
adVqmCallHistPdvAverageMs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistPdvAverageMs.setStatus('current')
adVqmCallHistPdvMaximumMs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistPdvMaximumMs.setStatus('current')
adVqmCallHistRtDelayInst = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistRtDelayInst.setStatus('current')
adVqmCallHistRtDelayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistRtDelayAverage.setStatus('current')
adVqmCallHistRtDelayMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistRtDelayMaximum.setStatus('current')
adVqmCallHistOnewayDelayInst = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistOnewayDelayInst.setStatus('current')
adVqmCallHistOnewayDelayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistOnewayDelayAverage.setStatus('current')
adVqmCallHistOnewayDelayMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistOnewayDelayMaximum.setStatus('current')
adVqmCallHistOrigDelayInst = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistOrigDelayInst.setStatus('current')
adVqmCallHistOrigDelayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistOrigDelayAverage.setStatus('current')
adVqmCallHistOrigDelayMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistOrigDelayMaximum.setStatus('current')
adVqmCallHistTermDelayMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistTermDelayMinimum.setStatus('current')
adVqmCallHistTermDelayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistTermDelayAverage.setStatus('current')
adVqmCallHistTermDelayMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistTermDelayMaximum.setStatus('current')
adVqmCallHistRLq = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistRLq.setStatus('current')
adVqmCallHistRCq = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 39), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistRCq.setStatus('current')
adVqmCallHistRNominal = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 40), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistRNominal.setStatus('current')
adVqmCallHistRG107 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 41), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistRG107.setStatus('current')
adVqmCallHistMosLq = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 42), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistMosLq.setStatus('current')
adVqmCallHistMosCq = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 43), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistMosCq.setStatus('current')
adVqmCallHistMosPq = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 44), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistMosPq.setStatus('current')
adVqmCallHistMosNominal = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 45), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistMosNominal.setStatus('current')
adVqmCallHistDegLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 46), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDegLoss.setStatus('current')
adVqmCallHistDegDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 47), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDegDiscard.setStatus('current')
adVqmCallHistDegVocoder = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 48), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDegVocoder.setStatus('current')
adVqmCallHistDegRecency = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 49), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDegRecency.setStatus('current')
adVqmCallHistDegDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 50), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDegDelay.setStatus('current')
adVqmCallHistDegSiglvl = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 51), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDegSiglvl.setStatus('current')
adVqmCallHistDegNoiselvl = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 52), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDegNoiselvl.setStatus('current')
adVqmCallHistDegEcholvl = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 53), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDegEcholvl.setStatus('current')
adVqmCallHistBurstRLq = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 54), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistBurstRLq.setStatus('current')
adVqmCallHistBurstCount = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistBurstCount.setStatus('current')
adVqmCallHistBurstRateAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 56), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistBurstRateAvg.setStatus('current')
adVqmCallHistBurstLenAvgPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 57), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistBurstLenAvgPkts.setStatus('current')
adVqmCallHistBurstLenAvgMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 58), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistBurstLenAvgMsec.setStatus('current')
adVqmCallHistGapR = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 59), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistGapR.setStatus('current')
adVqmCallHistGapCount = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistGapCount.setStatus('current')
adVqmCallHistGapLossRateAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 61), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistGapLossRateAvg.setStatus('current')
adVqmCallHistGapLenPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 62), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistGapLenPkts.setStatus('current')
adVqmCallHistGapLenMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 63), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistGapLenMsec.setStatus('current')
adVqmCallHistLossRateAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 64), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistLossRateAvg.setStatus('current')
adVqmCallHistNetworkLossAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 65), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistNetworkLossAvg.setStatus('current')
adVqmCallHistDiscardRateAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 66), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDiscardRateAvg.setStatus('current')
adVqmCallHistExcessBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 67), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistExcessBurst.setStatus('current')
adVqmCallHistExcessGap = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 68), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistExcessGap.setStatus('current')
adVqmCallHistPpdvMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 69), MsecValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistPpdvMsec.setStatus('current')
adVqmCallHistLateThresholdMs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 70), MsecValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistLateThresholdMs.setStatus('current')
adVqmCallHistLateThresholdPc = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 71), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistLateThresholdPc.setStatus('current')
adVqmCallHistLateUnderThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 72), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistLateUnderThresh.setStatus('current')
adVqmCallHistLateTotalCount = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 73), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistLateTotalCount.setStatus('current')
adVqmCallHistLatePeakJitterMs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 74), MsecValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistLatePeakJitterMs.setStatus('current')
adVqmCallHistEarlyThreshMs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 75), MsecValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistEarlyThreshMs.setStatus('current')
adVqmCallHistEarlyThreshPc = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 76), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistEarlyThreshPc.setStatus('current')
adVqmCallHistEarlyUnderThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 77), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistEarlyUnderThresh.setStatus('current')
adVqmCallHistEarlyTotalCount = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 78), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistEarlyTotalCount.setStatus('current')
adVqmCallHistEarlyPeakJitterMs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 79), MsecValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistEarlyPeakJitterMs.setStatus('current')
adVqmCallHistDelayIncreaseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 80), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDelayIncreaseCount.setStatus('current')
adVqmCallHistDelayDecreaseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 81), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDelayDecreaseCount.setStatus('current')
adVqmCallHistResyncCount = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 82), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistResyncCount.setStatus('current')
adVqmCallHistJitterBufferType = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 83), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fixed", 1), ("adaptive", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistJitterBufferType.setStatus('current')
adVqmCallHistJbCfgMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 84), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistJbCfgMin.setStatus('current')
adVqmCallHistJbCfgNom = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 85), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistJbCfgNom.setStatus('current')
adVqmCallHistJbCfgMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 86), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistJbCfgMax.setStatus('current')
adVqmCallHistDuplicatePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 87), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDuplicatePkts.setStatus('current')
adVqmCallHistEarlyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 88), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistEarlyPkts.setStatus('current')
adVqmCallHistLatePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 89), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistLatePkts.setStatus('current')
adVqmCallHistOverrunDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 90), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistOverrunDiscardPkts.setStatus('current')
adVqmCallHistUnderrunDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 91), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistUnderrunDiscardPkts.setStatus('current')
adVqmCallHistDelayMinMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 92), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDelayMinMsec.setStatus('current')
adVqmCallHistDelayAvgMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 93), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDelayAvgMsec.setStatus('current')
adVqmCallHistDelayMaxMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 94), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDelayMaxMsec.setStatus('current')
adVqmCallHistDelayCurrentMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 95), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistDelayCurrentMsec.setStatus('current')
adVqmCallHistExtRLqIn = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 96), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistExtRLqIn.setStatus('current')
adVqmCallHistExtRLqOut = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 97), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistExtRLqOut.setStatus('current')
adVqmCallHistExtRCqIn = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 98), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistExtRCqIn.setStatus('current')
adVqmCallHistExtRCqOut = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 99), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistExtRCqOut.setStatus('current')
adVqmCallHistThroughPutIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 100), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistThroughPutIndex.setStatus('current')
adVqmCallHistReliabilityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 101), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistReliabilityIndex.setStatus('current')
adVqmCallHistBitrate = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 7, 1, 1, 102), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmCallHistBitrate.setStatus('current')
adVQMActiveCallTable = MibTable((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1), )
if mibBuilder.loadTexts: adVQMActiveCallTable.setStatus('current')
adVQMActiveCallEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1), ).setIndexNames((0, "ADTRAN-AOS-VQM", "adVqmActCallRtpSourceIp"), (0, "ADTRAN-AOS-VQM", "adVqmActCallRtpSourcePort"), (0, "ADTRAN-AOS-VQM", "adVqmActCallRtpDestIp"), (0, "ADTRAN-AOS-VQM", "adVqmActCallRtpDestPort"), (0, "ADTRAN-AOS-VQM", "adVqmActCallSsrcid"))
if mibBuilder.loadTexts: adVQMActiveCallEntry.setStatus('current')
adVqmActCallRtpSourceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallRtpSourceIp.setStatus('current')
adVqmActCallRtpSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallRtpSourcePort.setStatus('current')
adVqmActCallRtpDestIp = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallRtpDestIp.setStatus('current')
adVqmActCallRtpDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallRtpDestPort.setStatus('current')
adVqmActCallSsrcid = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallSsrcid.setStatus('current')
adVqmActCallTo = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallTo.setStatus('current')
adVqmActCallFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallFrom.setStatus('current')
adVqmActCallRtpSourceUri = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallRtpSourceUri.setStatus('current')
adVqmActCallCallid = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallCallid.setStatus('current')
adVqmActCallCcmid = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallCcmid.setStatus('current')
adVqmActCallSourceIntName = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallSourceIntName.setStatus('current')
adVqmActCallDestIntName = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDestIntName.setStatus('current')
adVqmActCallSourceIntDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallSourceIntDescription.setStatus('current')
adVqmActCallDestIntDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDestIntDescription.setStatus('current')
adVqmActCallCallStart = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallCallStart.setStatus('current')
adVqmActCallCallDurationMs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallCallDurationMs.setStatus('current')
adVqmActCallCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89))).clone(namedValues=NamedValues(("unknown", 1), ("g711U", 2), ("g711UPLC", 3), ("g723153K", 4), ("deprecated1", 5), ("g723163K", 6), ("deprecated2", 7), ("g728", 8), ("deprecated3", 9), ("g729", 10), ("deprecated4", 11), ("g729A", 12), ("deprecated5", 13), ("user1", 14), ("user2", 15), ("user3", 16), ("user4", 17), ("gsmfr", 18), ("reservedgsmhr", 19), ("gsmefr", 20), ("sx7300", 21), ("sx9600", 22), ("g711A", 23), ("g711APLC", 24), ("deprecated6", 25), ("g72616K", 26), ("g72624K", 27), ("g72632K", 28), ("g72640K", 29), ("gipse711U", 30), ("gipse711A", 31), ("gipsilbc", 32), ("gipsisac", 33), ("gipsipcmwb", 34), ("g729E8K0", 35), ("g729E11k8", 36), ("wblinearpcm", 37), ("wblinearpcmPlc", 38), ("g722at64k", 39), ("g722at56k", 40), ("g722at48k", 41), ("g7221at32k", 42), ("g7221at24k", 43), ("g7222at23k85", 44), ("g7222at23k05", 45), ("g7222at19k85", 46), ("g7222at18k25", 47), ("g7222at15k85", 48), ("g7222at14k25", 49), ("g7222at12k85", 50), ("g7222at8k85", 51), ("g7222at6k6", 52), ("qcelp8", 53), ("qcelp13", 54), ("evrc", 55), ("smv812", 56), ("smv579", 57), ("smv444", 58), ("smv395", 59), ("amrnb12k2", 60), ("amrnb10k2", 61), ("amrnb7k95", 62), ("amrnb7k4", 63), ("amrnb6k7", 64), ("amrnb5k9", 65), ("amrnb5k15", 66), ("amrnb4k75", 67), ("ilbc13k3", 68), ("ilbc15k2", 69), ("g711u56k", 70), ("g711uPLC56k", 71), ("g711A56k", 72), ("g711APLC56k", 73), ("g7231C", 74), ("speex2k15", 75), ("speex5k95", 76), ("speeX8k", 77), ("speeX11k", 78), ("speeX15k", 79), ("speeX18k2", 80), ("speeX24k6", 81), ("speeX3k95", 82), ("speeX12k8", 83), ("speeX16k8", 84), ("speeX20k6", 85), ("speeX23k8", 86), ("speeX27k8", 87), ("speeX34k2", 88), ("speeX42k2", 89)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallCodec.setStatus('current')
adVqmActCallCodecClass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wideband", 1), ("other", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallCodecClass.setStatus('current')
adVqmActCallDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDscp.setStatus('current')
adVqmActCallPktsRcvdTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallPktsRcvdTotal.setStatus('current')
adVqmActCallPktsLostTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallPktsLostTotal.setStatus('current')
adVqmActCallPktsDiscardedTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallPktsDiscardedTotal.setStatus('current')
adVqmActCallOutOfOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallOutOfOrder.setStatus('current')
adVqmActCallPdvAverageMs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallPdvAverageMs.setStatus('current')
adVqmActCallPdvMaximumMs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallPdvMaximumMs.setStatus('current')
adVqmActCallRtDelayInst = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallRtDelayInst.setStatus('current')
adVqmActCallRtDelayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallRtDelayAverage.setStatus('current')
adVqmActCallRtDelayMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallRtDelayMaximum.setStatus('current')
adVqmActCallOnewayDelayInst = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallOnewayDelayInst.setStatus('current')
adVqmActCallOnewayDelayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallOnewayDelayAverage.setStatus('current')
adVqmActCallOnewayDelayMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallOnewayDelayMaximum.setStatus('current')
adVqmActCallOrigDelayInst = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallOrigDelayInst.setStatus('current')
adVqmActCallOrigDelayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallOrigDelayAverage.setStatus('current')
adVqmActCallOrigDelayMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallOrigDelayMaximum.setStatus('current')
adVqmActCallTermDelayMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallTermDelayMinimum.setStatus('current')
adVqmActCallTermDelayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallTermDelayAverage.setStatus('current')
adVqmActCallTermDelayMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallTermDelayMaximum.setStatus('current')
adVqmActCallRLq = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallRLq.setStatus('current')
adVqmActCallRCq = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 39), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallRCq.setStatus('current')
adVqmActCallRNominal = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 40), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallRNominal.setStatus('current')
adVqmActCallRG107 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 41), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallRG107.setStatus('current')
adVqmActCallMosLq = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 42), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallMosLq.setStatus('current')
adVqmActCallMosCq = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 43), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallMosCq.setStatus('current')
adVqmActCallMosPq = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 44), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallMosPq.setStatus('current')
adVqmActCallMosNominal = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 45), MOSvalue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallMosNominal.setStatus('current')
adVqmActCallDegLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 46), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDegLoss.setStatus('current')
adVqmActCallDegDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 47), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDegDiscard.setStatus('current')
adVqmActCallDegVocoder = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 48), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDegVocoder.setStatus('current')
adVqmActCallDegRecency = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 49), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDegRecency.setStatus('current')
adVqmActCallDegDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 50), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDegDelay.setStatus('current')
adVqmActCallDegSiglvl = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 51), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDegSiglvl.setStatus('current')
adVqmActCallDegNoiselvl = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 52), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDegNoiselvl.setStatus('current')
adVqmActCallDegEcholvl = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 53), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDegEcholvl.setStatus('current')
adVqmActCallBurstRLq = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 54), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallBurstRLq.setStatus('current')
adVqmActCallBurstCount = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallBurstCount.setStatus('current')
adVqmActCallBurstRateAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 56), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallBurstRateAvg.setStatus('current')
adVqmActCallBurstLenAvgPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 57), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallBurstLenAvgPkts.setStatus('current')
adVqmActCallBurstLenAvgMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 58), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallBurstLenAvgMsec.setStatus('current')
adVqmActCallGapR = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 59), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallGapR.setStatus('current')
adVqmActCallGapCount = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallGapCount.setStatus('current')
adVqmActCallGapLossRateAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 61), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallGapLossRateAvg.setStatus('current')
adVqmActCallGapLenPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 62), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallGapLenPkts.setStatus('current')
adVqmActCallGapLenMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 63), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallGapLenMsec.setStatus('current')
adVqmActCallLossRateAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 64), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallLossRateAvg.setStatus('current')
adVqmActCallNetworkLossAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 65), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallNetworkLossAvg.setStatus('current')
adVqmActCallDiscardRateAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 66), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDiscardRateAvg.setStatus('current')
adVqmActCallExcessBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 67), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallExcessBurst.setStatus('current')
adVqmActCallExcessGap = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 68), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallExcessGap.setStatus('current')
adVqmActCallPpdvMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 69), MsecValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallPpdvMsec.setStatus('current')
adVqmActCallLateThresholdMs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 70), MsecValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallLateThresholdMs.setStatus('current')
adVqmActCallLateThresholdPc = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 71), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallLateThresholdPc.setStatus('current')
adVqmActCallLateUnderThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 72), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallLateUnderThresh.setStatus('current')
adVqmActCallLateTotalCount = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 73), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallLateTotalCount.setStatus('current')
adVqmActCallLatePeakJitterMs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 74), MsecValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallLatePeakJitterMs.setStatus('current')
adVqmActCallEarlyThreshMs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 75), MsecValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallEarlyThreshMs.setStatus('current')
adVqmActCallEarlyThreshPc = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 76), Percentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallEarlyThreshPc.setStatus('current')
adVqmActCallEarlyUnderThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 77), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallEarlyUnderThresh.setStatus('current')
adVqmActCallEarlyTotalCount = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 78), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallEarlyTotalCount.setStatus('current')
adVqmActCallEarlyPeakJitterMs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 79), MsecValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallEarlyPeakJitterMs.setStatus('current')
adVqmActCallDelayIncreaseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 80), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDelayIncreaseCount.setStatus('current')
adVqmActCallDelayDecreaseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 81), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDelayDecreaseCount.setStatus('current')
adVqmActCallResyncCount = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 82), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallResyncCount.setStatus('current')
adVqmActCallJitterBufferType = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 83), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fixed", 1), ("adaptive", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallJitterBufferType.setStatus('current')
adVqmActCallJbCfgMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 84), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallJbCfgMin.setStatus('current')
adVqmActCallJbCfgNom = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 85), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallJbCfgNom.setStatus('current')
adVqmActCallJbCfgMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 86), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallJbCfgMax.setStatus('current')
adVqmActCallDuplicatePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 87), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDuplicatePkts.setStatus('current')
adVqmActCallEarlyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 88), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallEarlyPkts.setStatus('current')
adVqmActCallLatePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 89), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallLatePkts.setStatus('current')
adVqmActCallOverrunDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 90), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallOverrunDiscardPkts.setStatus('current')
adVqmActCallUnderrunDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 91), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallUnderrunDiscardPkts.setStatus('current')
adVqmActCallDelayMinMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 92), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDelayMinMsec.setStatus('current')
adVqmActCallDelayAvgMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 93), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDelayAvgMsec.setStatus('current')
adVqmActCallDelayMaxMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 94), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDelayMaxMsec.setStatus('current')
adVqmActCallDelayCurrentMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 95), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallDelayCurrentMsec.setStatus('current')
adVqmActCallExtRLqIn = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 96), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallExtRLqIn.setStatus('current')
adVqmActCallExtRLqOut = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 97), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallExtRLqOut.setStatus('current')
adVqmActCallExtRCqIn = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 98), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallExtRCqIn.setStatus('current')
adVqmActCallExtRCqOut = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 99), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallExtRCqOut.setStatus('current')
adVqmActCallThroughPutIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 100), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallThroughPutIndex.setStatus('current')
adVqmActCallReliabilityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 101), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallReliabilityIndex.setStatus('current')
adVqmActCallBitrate = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 5, 3, 8, 1, 1, 102), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adVqmActCallBitrate.setStatus('current')
adGenAOSVqmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 10))
adGenAOSVqmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 10, 1))
adGenAOSVqmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 10, 2))
adGenAOSVqmFullCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 10, 2, 1)).setObjects(("ADTRAN-AOS-VQM", "adVQMCfgGroup"), ("ADTRAN-AOS-VQM", "adVQMThresholdGroup"), ("ADTRAN-AOS-VQM", "adVQMSysPerfGroup"), ("ADTRAN-AOS-VQM", "adVQMInterfaceGroup"), ("ADTRAN-AOS-VQM", "adVQMEndPointGroup"), ("ADTRAN-AOS-VQM", "adVQMCallHistoryGroup"), ("ADTRAN-AOS-VQM", "adVQMActiveCallGroup"), ("ADTRAN-AOS-VQM", "adVQMTrapGroup"), ("ADTRAN-AOS-VQM", "adVQMNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSVqmFullCompliance = adGenAOSVqmFullCompliance.setStatus('current')
adVQMCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 10, 1, 1)).setObjects(("ADTRAN-AOS-VQM", "adVqmCfgEnable"), ("ADTRAN-AOS-VQM", "adVqmCfgSipEnable"), ("ADTRAN-AOS-VQM", "adVqmCfgUdpEnable"), ("ADTRAN-AOS-VQM", "adVqmCfgInternationalCode"), ("ADTRAN-AOS-VQM", "adVqmCfgJitterBufferType"), ("ADTRAN-AOS-VQM", "adVqmCfgJitterBufferAdaptiveMin"), ("ADTRAN-AOS-VQM", "adVqmCfgJitterBufferAdaptiveNominal"), ("ADTRAN-AOS-VQM", "adVqmCfgJitterBufferAdaptiveMax"), ("ADTRAN-AOS-VQM", "adVqmCfgJitterBufferFixedNominal"), ("ADTRAN-AOS-VQM", "adVqmCfgJitterBufferFixedSize"), ("ADTRAN-AOS-VQM", "adVqmCfgJitterBufferThresholdEarlyMs"), ("ADTRAN-AOS-VQM", "adVqmCfgJitterBufferThresholdLateMs"), ("ADTRAN-AOS-VQM", "adVqmCfgRoundTripPingEnabled"), ("ADTRAN-AOS-VQM", "adVqmCfgRoundTripPingType"), ("ADTRAN-AOS-VQM", "adVqmCfgCallHistorySize"), ("ADTRAN-AOS-VQM", "adVqmCfgHistoryThresholdLqmos"), ("ADTRAN-AOS-VQM", "adVqmCfgHistoryThresholdCqmos"), ("ADTRAN-AOS-VQM", "adVqmCfgHistoryThresholdPqmos"), ("ADTRAN-AOS-VQM", "adVqmCfgHistoryThresholdLoss"), ("ADTRAN-AOS-VQM", "adVqmCfgHistoryThresholdOutOfOrder"), ("ADTRAN-AOS-VQM", "adVqmCfgHistoryThresholdJitter"), ("ADTRAN-AOS-VQM", "adVqmCfgClear"), ("ADTRAN-AOS-VQM", "adVqmCfgClearCallHistory"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adVQMCfgGroup = adVQMCfgGroup.setStatus('current')
adVQMThresholdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 10, 1, 2)).setObjects(("ADTRAN-AOS-VQM", "adVqmThresholdLqmosInfo"), ("ADTRAN-AOS-VQM", "adVqmThresholdLqmosNotice"), ("ADTRAN-AOS-VQM", "adVqmThresholdLqmosWarning"), ("ADTRAN-AOS-VQM", "adVqmThresholdLqmosError"), ("ADTRAN-AOS-VQM", "adVqmThresholdPqmosInfo"), ("ADTRAN-AOS-VQM", "adVqmThresholdPqmosNotice"), ("ADTRAN-AOS-VQM", "adVqmThresholdPqmosWarning"), ("ADTRAN-AOS-VQM", "adVqmThresholdPqmosError"), ("ADTRAN-AOS-VQM", "adVqmThresholdOutOfOrderInfo"), ("ADTRAN-AOS-VQM", "adVqmThresholdOutOfOrderNotice"), ("ADTRAN-AOS-VQM", "adVqmThresholdOutOfOrderWarning"), ("ADTRAN-AOS-VQM", "adVqmThresholdOutOfOrderError"), ("ADTRAN-AOS-VQM", "adVqmThresholdLossInfo"), ("ADTRAN-AOS-VQM", "adVqmThresholdLossNotice"), ("ADTRAN-AOS-VQM", "adVqmThresholdLossWarning"), ("ADTRAN-AOS-VQM", "adVqmThresholdLossError"), ("ADTRAN-AOS-VQM", "adVqmThresholdJitterInfo"), ("ADTRAN-AOS-VQM", "adVqmThresholdJitterNotice"), ("ADTRAN-AOS-VQM", "adVqmThresholdJitterWarning"), ("ADTRAN-AOS-VQM", "adVqmThresholdJitterError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adVQMThresholdGroup = adVQMThresholdGroup.setStatus('current')
adVQMSysPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 10, 1, 3)).setObjects(("ADTRAN-AOS-VQM", "adVqmSysActiveCalls"), ("ADTRAN-AOS-VQM", "adVqmSysActiveExcellent"), ("ADTRAN-AOS-VQM", "adVqmSysActiveGood"), ("ADTRAN-AOS-VQM", "adVqmSysActiveFair"), ("ADTRAN-AOS-VQM", "adVqmSysActivePoor"), ("ADTRAN-AOS-VQM", "adVqmSysCallHistoryCalls"), ("ADTRAN-AOS-VQM", "adVqmSysCallHistoryExcellent"), ("ADTRAN-AOS-VQM", "adVqmSysCallHistoryGood"), ("ADTRAN-AOS-VQM", "adVqmSysCallHistoryFair"), ("ADTRAN-AOS-VQM", "adVqmSysCallHistoryPoor"), ("ADTRAN-AOS-VQM", "adVqmSysAllCallsExcellent"), ("ADTRAN-AOS-VQM", "adVqmSysAllCallsGood"), ("ADTRAN-AOS-VQM", "adVqmSysAllCallsFair"), ("ADTRAN-AOS-VQM", "adVqmSysAllCallsPoor"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adVQMSysPerfGroup = adVQMSysPerfGroup.setStatus('current')
adVQMInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 10, 1, 4)).setObjects(("ADTRAN-AOS-VQM", "adVqmIfcId"), ("ADTRAN-AOS-VQM", "adVqmIfcName"), ("ADTRAN-AOS-VQM", "adVqmIfcPktsRx"), ("ADTRAN-AOS-VQM", "adVqmIfcPktsLost"), ("ADTRAN-AOS-VQM", "adVqmIfcPktsOoo"), ("ADTRAN-AOS-VQM", "adVqmIfcPktsDiscarded"), ("ADTRAN-AOS-VQM", "adVqmIfcNumberActiveCalls"), ("ADTRAN-AOS-VQM", "adVqmIfcTerminatedCalls"), ("ADTRAN-AOS-VQM", "adVqmIfcRLqMinimum"), ("ADTRAN-AOS-VQM", "adVqmIfcRLqAverage"), ("ADTRAN-AOS-VQM", "adVqmIfcRLqMaximum"), ("ADTRAN-AOS-VQM", "adVqmIfcRCqMinimum"), ("ADTRAN-AOS-VQM", "adVqmIfcRCqAverage"), ("ADTRAN-AOS-VQM", "adVqmIfcRCqMaximum"), ("ADTRAN-AOS-VQM", "adVqmIfcRG107Minimum"), ("ADTRAN-AOS-VQM", "adVqmIfcRG107Average"), ("ADTRAN-AOS-VQM", "adVqmIfcRG107Maximum"), ("ADTRAN-AOS-VQM", "adVqmIfcMosLqMinimum"), ("ADTRAN-AOS-VQM", "adVqmIfcMosLqAverage"), ("ADTRAN-AOS-VQM", "adVqmIfcMosLqMaximum"), ("ADTRAN-AOS-VQM", "adVqmIfcMosCqMinimum"), ("ADTRAN-AOS-VQM", "adVqmIfcMosCqAverage"), ("ADTRAN-AOS-VQM", "adVqmIfcMosCqMaximum"), ("ADTRAN-AOS-VQM", "adVqmIfcMosPqMinimum"), ("ADTRAN-AOS-VQM", "adVqmIfcMosPqAverage"), ("ADTRAN-AOS-VQM", "adVqmIfcMosPqMaximum"), ("ADTRAN-AOS-VQM", "adVqmIfcLossMinimum"), ("ADTRAN-AOS-VQM", "adVqmIfcLossAverage"), ("ADTRAN-AOS-VQM", "adVqmIfcLossMaximum"), ("ADTRAN-AOS-VQM", "adVqmIfcDiscardsMinimum"), ("ADTRAN-AOS-VQM", "adVqmIfcDiscardsAverage"), ("ADTRAN-AOS-VQM", "adVqmIfcDiscardsMaximum"), ("ADTRAN-AOS-VQM", "adVqmIfcPdvAverageMs"), ("ADTRAN-AOS-VQM", "adVqmIfcPdvMaximumMs"), ("ADTRAN-AOS-VQM", "adVqmIfcDelayMinMsec"), ("ADTRAN-AOS-VQM", "adVqmIfcDelayAvgMsec"), ("ADTRAN-AOS-VQM", "adVqmIfcDelayMaxMsec"), ("ADTRAN-AOS-VQM", "adVqmIfcNumberStreamsExcellent"), ("ADTRAN-AOS-VQM", "adVqmIfcNumberStreamsGood"), ("ADTRAN-AOS-VQM", "adVqmIfcNumberStreamsFair"), ("ADTRAN-AOS-VQM", "adVqmIfcNumberStreamsPoor"), ("ADTRAN-AOS-VQM", "adVqmIfcClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adVQMInterfaceGroup = adVQMInterfaceGroup.setStatus('current')
adVQMEndPointGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 10, 1, 5)).setObjects(("ADTRAN-AOS-VQM", "adVqmEndPointRtpSourceIp"), ("ADTRAN-AOS-VQM", "adVqmEndPointNumberCompletedCalls"), ("ADTRAN-AOS-VQM", "adVqmEndPointInterfaceId"), ("ADTRAN-AOS-VQM", "adVqmEndPointInterfaceName"), ("ADTRAN-AOS-VQM", "adVqmEndPointMosLqMinimum"), ("ADTRAN-AOS-VQM", "adVqmEndPointMosLqAverage"), ("ADTRAN-AOS-VQM", "adVqmEndPointMosLqMaximum"), ("ADTRAN-AOS-VQM", "adVqmEndPointMosPqMinimum"), ("ADTRAN-AOS-VQM", "adVqmEndPointMosPqAverage"), ("ADTRAN-AOS-VQM", "adVqmEndPointMosPqMaximum"), ("ADTRAN-AOS-VQM", "adVqmEndPointPktsLostTotal"), ("ADTRAN-AOS-VQM", "adVqmEndPointPktsOutOfOrder"), ("ADTRAN-AOS-VQM", "adVqmEndPointJitterMaximum"), ("ADTRAN-AOS-VQM", "adVqmEndPointNumberStreamsExcellent"), ("ADTRAN-AOS-VQM", "adVqmEndPointNumberStreamsGood"), ("ADTRAN-AOS-VQM", "adVqmEndPointNumberStreamsFair"), ("ADTRAN-AOS-VQM", "adVqmEndPointNumberStreamsPoor"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adVQMEndPointGroup = adVQMEndPointGroup.setStatus('current')
adVQMCallHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 10, 1, 6)).setObjects(("ADTRAN-AOS-VQM", "adVqmCallHistRtpSourceIp"), ("ADTRAN-AOS-VQM", "adVqmCallHistRtpSourcePort"), ("ADTRAN-AOS-VQM", "adVqmCallHistRtpDestIp"), ("ADTRAN-AOS-VQM", "adVqmCallHistRtpDestPort"), ("ADTRAN-AOS-VQM", "adVqmCallHistSsrcid"), ("ADTRAN-AOS-VQM", "adVqmCallHistTo"), ("ADTRAN-AOS-VQM", "adVqmCallHistFrom"), ("ADTRAN-AOS-VQM", "adVqmCallHistRtpSourceUri"), ("ADTRAN-AOS-VQM", "adVqmCallHistCallid"), ("ADTRAN-AOS-VQM", "adVqmCallHistCcmid"), ("ADTRAN-AOS-VQM", "adVqmCallHistSourceIntName"), ("ADTRAN-AOS-VQM", "adVqmCallHistDestIntName"), ("ADTRAN-AOS-VQM", "adVqmCallHistSourceIntDescription"), ("ADTRAN-AOS-VQM", "adVqmCallHistDestIntDescription"), ("ADTRAN-AOS-VQM", "adVqmCallHistCallStart"), ("ADTRAN-AOS-VQM", "adVqmCallHistCallDurationMs"), ("ADTRAN-AOS-VQM", "adVqmCallHistCodec"), ("ADTRAN-AOS-VQM", "adVqmCallHistCodecClass"), ("ADTRAN-AOS-VQM", "adVqmCallHistDscp"), ("ADTRAN-AOS-VQM", "adVqmCallHistPktsRcvdTotal"), ("ADTRAN-AOS-VQM", "adVqmCallHistPktsLostTotal"), ("ADTRAN-AOS-VQM", "adVqmCallHistPktsDiscardedTotal"), ("ADTRAN-AOS-VQM", "adVqmCallHistOutOfOrder"), ("ADTRAN-AOS-VQM", "adVqmCallHistPdvAverageMs"), ("ADTRAN-AOS-VQM", "adVqmCallHistPdvMaximumMs"), ("ADTRAN-AOS-VQM", "adVqmCallHistRtDelayInst"), ("ADTRAN-AOS-VQM", "adVqmCallHistRtDelayAverage"), ("ADTRAN-AOS-VQM", "adVqmCallHistRtDelayMaximum"), ("ADTRAN-AOS-VQM", "adVqmCallHistOnewayDelayInst"), ("ADTRAN-AOS-VQM", "adVqmCallHistOnewayDelayAverage"), ("ADTRAN-AOS-VQM", "adVqmCallHistOnewayDelayMaximum"), ("ADTRAN-AOS-VQM", "adVqmCallHistOrigDelayInst"), ("ADTRAN-AOS-VQM", "adVqmCallHistOrigDelayAverage"), ("ADTRAN-AOS-VQM", "adVqmCallHistOrigDelayMaximum"), ("ADTRAN-AOS-VQM", "adVqmCallHistTermDelayMinimum"), ("ADTRAN-AOS-VQM", "adVqmCallHistTermDelayAverage"), ("ADTRAN-AOS-VQM", "adVqmCallHistTermDelayMaximum"), ("ADTRAN-AOS-VQM", "adVqmCallHistRLq"), ("ADTRAN-AOS-VQM", "adVqmCallHistRCq"), ("ADTRAN-AOS-VQM", "adVqmCallHistRNominal"), ("ADTRAN-AOS-VQM", "adVqmCallHistRG107"), ("ADTRAN-AOS-VQM", "adVqmCallHistMosLq"), ("ADTRAN-AOS-VQM", "adVqmCallHistMosCq"), ("ADTRAN-AOS-VQM", "adVqmCallHistMosPq"), ("ADTRAN-AOS-VQM", "adVqmCallHistMosNominal"), ("ADTRAN-AOS-VQM", "adVqmCallHistDegLoss"), ("ADTRAN-AOS-VQM", "adVqmCallHistDegDiscard"), ("ADTRAN-AOS-VQM", "adVqmCallHistDegVocoder"), ("ADTRAN-AOS-VQM", "adVqmCallHistDegRecency"), ("ADTRAN-AOS-VQM", "adVqmCallHistDegDelay"), ("ADTRAN-AOS-VQM", "adVqmCallHistDegSiglvl"), ("ADTRAN-AOS-VQM", "adVqmCallHistDegNoiselvl"), ("ADTRAN-AOS-VQM", "adVqmCallHistDegEcholvl"), ("ADTRAN-AOS-VQM", "adVqmCallHistBurstRLq"), ("ADTRAN-AOS-VQM", "adVqmCallHistBurstCount"), ("ADTRAN-AOS-VQM", "adVqmCallHistBurstRateAvg"), ("ADTRAN-AOS-VQM", "adVqmCallHistBurstLenAvgPkts"), ("ADTRAN-AOS-VQM", "adVqmCallHistBurstLenAvgMsec"), ("ADTRAN-AOS-VQM", "adVqmCallHistGapR"), ("ADTRAN-AOS-VQM", "adVqmCallHistGapCount"), ("ADTRAN-AOS-VQM", "adVqmCallHistGapLossRateAvg"), ("ADTRAN-AOS-VQM", "adVqmCallHistGapLenPkts"), ("ADTRAN-AOS-VQM", "adVqmCallHistGapLenMsec"), ("ADTRAN-AOS-VQM", "adVqmCallHistLossRateAvg"), ("ADTRAN-AOS-VQM", "adVqmCallHistNetworkLossAvg"), ("ADTRAN-AOS-VQM", "adVqmCallHistDiscardRateAvg"), ("ADTRAN-AOS-VQM", "adVqmCallHistExcessBurst"), ("ADTRAN-AOS-VQM", "adVqmCallHistExcessGap"), ("ADTRAN-AOS-VQM", "adVqmCallHistPpdvMsec"), ("ADTRAN-AOS-VQM", "adVqmCallHistLateThresholdMs"), ("ADTRAN-AOS-VQM", "adVqmCallHistLateThresholdPc"), ("ADTRAN-AOS-VQM", "adVqmCallHistLateUnderThresh"), ("ADTRAN-AOS-VQM", "adVqmCallHistLateTotalCount"), ("ADTRAN-AOS-VQM", "adVqmCallHistLatePeakJitterMs"), ("ADTRAN-AOS-VQM", "adVqmCallHistEarlyThreshMs"), ("ADTRAN-AOS-VQM", "adVqmCallHistEarlyThreshPc"), ("ADTRAN-AOS-VQM", "adVqmCallHistEarlyUnderThresh"), ("ADTRAN-AOS-VQM", "adVqmCallHistEarlyTotalCount"), ("ADTRAN-AOS-VQM", "adVqmCallHistEarlyPeakJitterMs"), ("ADTRAN-AOS-VQM", "adVqmCallHistDelayIncreaseCount"), ("ADTRAN-AOS-VQM", "adVqmCallHistDelayDecreaseCount"), ("ADTRAN-AOS-VQM", "adVqmCallHistResyncCount"), ("ADTRAN-AOS-VQM", "adVqmCallHistJitterBufferType"), ("ADTRAN-AOS-VQM", "adVqmCallHistJbCfgMin"), ("ADTRAN-AOS-VQM", "adVqmCallHistJbCfgNom"), ("ADTRAN-AOS-VQM", "adVqmCallHistJbCfgMax"), ("ADTRAN-AOS-VQM", "adVqmCallHistDuplicatePkts"), ("ADTRAN-AOS-VQM", "adVqmCallHistEarlyPkts"), ("ADTRAN-AOS-VQM", "adVqmCallHistLatePkts"), ("ADTRAN-AOS-VQM", "adVqmCallHistOverrunDiscardPkts"), ("ADTRAN-AOS-VQM", "adVqmCallHistUnderrunDiscardPkts"), ("ADTRAN-AOS-VQM", "adVqmCallHistDelayMinMsec"), ("ADTRAN-AOS-VQM", "adVqmCallHistDelayAvgMsec"), ("ADTRAN-AOS-VQM", "adVqmCallHistDelayMaxMsec"), ("ADTRAN-AOS-VQM", "adVqmCallHistDelayCurrentMsec"), ("ADTRAN-AOS-VQM", "adVqmCallHistExtRLqIn"), ("ADTRAN-AOS-VQM", "adVqmCallHistExtRLqOut"), ("ADTRAN-AOS-VQM", "adVqmCallHistExtRCqIn"), ("ADTRAN-AOS-VQM", "adVqmCallHistExtRCqOut"), ("ADTRAN-AOS-VQM", "adVqmCallHistThroughPutIndex"), ("ADTRAN-AOS-VQM", "adVqmCallHistReliabilityIndex"), ("ADTRAN-AOS-VQM", "adVqmCallHistBitrate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adVQMCallHistoryGroup = adVQMCallHistoryGroup.setStatus('current')
adVQMActiveCallGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 10, 1, 7)).setObjects(("ADTRAN-AOS-VQM", "adVqmActCallRtpSourceIp"), ("ADTRAN-AOS-VQM", "adVqmActCallRtpSourcePort"), ("ADTRAN-AOS-VQM", "adVqmActCallRtpDestIp"), ("ADTRAN-AOS-VQM", "adVqmActCallRtpDestPort"), ("ADTRAN-AOS-VQM", "adVqmActCallSsrcid"), ("ADTRAN-AOS-VQM", "adVqmActCallTo"), ("ADTRAN-AOS-VQM", "adVqmActCallFrom"), ("ADTRAN-AOS-VQM", "adVqmActCallRtpSourceUri"), ("ADTRAN-AOS-VQM", "adVqmActCallCallid"), ("ADTRAN-AOS-VQM", "adVqmActCallCcmid"), ("ADTRAN-AOS-VQM", "adVqmActCallSourceIntName"), ("ADTRAN-AOS-VQM", "adVqmActCallDestIntName"), ("ADTRAN-AOS-VQM", "adVqmActCallSourceIntDescription"), ("ADTRAN-AOS-VQM", "adVqmActCallDestIntDescription"), ("ADTRAN-AOS-VQM", "adVqmActCallCallStart"), ("ADTRAN-AOS-VQM", "adVqmActCallCallDurationMs"), ("ADTRAN-AOS-VQM", "adVqmActCallCodec"), ("ADTRAN-AOS-VQM", "adVqmActCallCodecClass"), ("ADTRAN-AOS-VQM", "adVqmActCallDscp"), ("ADTRAN-AOS-VQM", "adVqmActCallPktsRcvdTotal"), ("ADTRAN-AOS-VQM", "adVqmActCallPktsLostTotal"), ("ADTRAN-AOS-VQM", "adVqmActCallPktsDiscardedTotal"), ("ADTRAN-AOS-VQM", "adVqmActCallOutOfOrder"), ("ADTRAN-AOS-VQM", "adVqmActCallPdvAverageMs"), ("ADTRAN-AOS-VQM", "adVqmActCallPdvMaximumMs"), ("ADTRAN-AOS-VQM", "adVqmActCallRtDelayInst"), ("ADTRAN-AOS-VQM", "adVqmActCallRtDelayAverage"), ("ADTRAN-AOS-VQM", "adVqmActCallRtDelayMaximum"), ("ADTRAN-AOS-VQM", "adVqmActCallOnewayDelayInst"), ("ADTRAN-AOS-VQM", "adVqmActCallOnewayDelayAverage"), ("ADTRAN-AOS-VQM", "adVqmActCallOnewayDelayMaximum"), ("ADTRAN-AOS-VQM", "adVqmActCallOrigDelayInst"), ("ADTRAN-AOS-VQM", "adVqmActCallOrigDelayAverage"), ("ADTRAN-AOS-VQM", "adVqmActCallOrigDelayMaximum"), ("ADTRAN-AOS-VQM", "adVqmActCallTermDelayMinimum"), ("ADTRAN-AOS-VQM", "adVqmActCallTermDelayAverage"), ("ADTRAN-AOS-VQM", "adVqmActCallTermDelayMaximum"), ("ADTRAN-AOS-VQM", "adVqmActCallRLq"), ("ADTRAN-AOS-VQM", "adVqmActCallRCq"), ("ADTRAN-AOS-VQM", "adVqmActCallRNominal"), ("ADTRAN-AOS-VQM", "adVqmActCallRG107"), ("ADTRAN-AOS-VQM", "adVqmActCallMosLq"), ("ADTRAN-AOS-VQM", "adVqmActCallMosCq"), ("ADTRAN-AOS-VQM", "adVqmActCallMosPq"), ("ADTRAN-AOS-VQM", "adVqmActCallMosNominal"), ("ADTRAN-AOS-VQM", "adVqmActCallDegLoss"), ("ADTRAN-AOS-VQM", "adVqmActCallDegDiscard"), ("ADTRAN-AOS-VQM", "adVqmActCallDegVocoder"), ("ADTRAN-AOS-VQM", "adVqmActCallDegRecency"), ("ADTRAN-AOS-VQM", "adVqmActCallDegDelay"), ("ADTRAN-AOS-VQM", "adVqmActCallDegSiglvl"), ("ADTRAN-AOS-VQM", "adVqmActCallDegNoiselvl"), ("ADTRAN-AOS-VQM", "adVqmActCallDegEcholvl"), ("ADTRAN-AOS-VQM", "adVqmActCallBurstRLq"), ("ADTRAN-AOS-VQM", "adVqmActCallBurstCount"), ("ADTRAN-AOS-VQM", "adVqmActCallBurstRateAvg"), ("ADTRAN-AOS-VQM", "adVqmActCallBurstLenAvgPkts"), ("ADTRAN-AOS-VQM", "adVqmActCallBurstLenAvgMsec"), ("ADTRAN-AOS-VQM", "adVqmActCallGapR"), ("ADTRAN-AOS-VQM", "adVqmActCallGapCount"), ("ADTRAN-AOS-VQM", "adVqmActCallGapLossRateAvg"), ("ADTRAN-AOS-VQM", "adVqmActCallGapLenPkts"), ("ADTRAN-AOS-VQM", "adVqmActCallGapLenMsec"), ("ADTRAN-AOS-VQM", "adVqmActCallLossRateAvg"), ("ADTRAN-AOS-VQM", "adVqmActCallNetworkLossAvg"), ("ADTRAN-AOS-VQM", "adVqmActCallDiscardRateAvg"), ("ADTRAN-AOS-VQM", "adVqmActCallExcessBurst"), ("ADTRAN-AOS-VQM", "adVqmActCallExcessGap"), ("ADTRAN-AOS-VQM", "adVqmActCallPpdvMsec"), ("ADTRAN-AOS-VQM", "adVqmActCallLateThresholdMs"), ("ADTRAN-AOS-VQM", "adVqmActCallLateThresholdPc"), ("ADTRAN-AOS-VQM", "adVqmActCallLateUnderThresh"), ("ADTRAN-AOS-VQM", "adVqmActCallLateTotalCount"), ("ADTRAN-AOS-VQM", "adVqmActCallLatePeakJitterMs"), ("ADTRAN-AOS-VQM", "adVqmActCallEarlyThreshMs"), ("ADTRAN-AOS-VQM", "adVqmActCallEarlyThreshPc"), ("ADTRAN-AOS-VQM", "adVqmActCallEarlyUnderThresh"), ("ADTRAN-AOS-VQM", "adVqmActCallEarlyTotalCount"), ("ADTRAN-AOS-VQM", "adVqmActCallEarlyPeakJitterMs"), ("ADTRAN-AOS-VQM", "adVqmActCallDelayIncreaseCount"), ("ADTRAN-AOS-VQM", "adVqmActCallDelayDecreaseCount"), ("ADTRAN-AOS-VQM", "adVqmActCallResyncCount"), ("ADTRAN-AOS-VQM", "adVqmActCallJitterBufferType"), ("ADTRAN-AOS-VQM", "adVqmActCallJbCfgMin"), ("ADTRAN-AOS-VQM", "adVqmActCallJbCfgNom"), ("ADTRAN-AOS-VQM", "adVqmActCallJbCfgMax"), ("ADTRAN-AOS-VQM", "adVqmActCallDuplicatePkts"), ("ADTRAN-AOS-VQM", "adVqmActCallEarlyPkts"), ("ADTRAN-AOS-VQM", "adVqmActCallLatePkts"), ("ADTRAN-AOS-VQM", "adVqmActCallOverrunDiscardPkts"), ("ADTRAN-AOS-VQM", "adVqmActCallUnderrunDiscardPkts"), ("ADTRAN-AOS-VQM", "adVqmActCallDelayMinMsec"), ("ADTRAN-AOS-VQM", "adVqmActCallDelayAvgMsec"), ("ADTRAN-AOS-VQM", "adVqmActCallDelayMaxMsec"), ("ADTRAN-AOS-VQM", "adVqmActCallDelayCurrentMsec"), ("ADTRAN-AOS-VQM", "adVqmActCallExtRLqIn"), ("ADTRAN-AOS-VQM", "adVqmActCallExtRLqOut"), ("ADTRAN-AOS-VQM", "adVqmActCallExtRCqIn"), ("ADTRAN-AOS-VQM", "adVqmActCallExtRCqOut"), ("ADTRAN-AOS-VQM", "adVqmActCallThroughPutIndex"), ("ADTRAN-AOS-VQM", "adVqmActCallReliabilityIndex"), ("ADTRAN-AOS-VQM", "adVqmActCallBitrate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adVQMActiveCallGroup = adVQMActiveCallGroup.setStatus('current')
adVQMTrapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 10, 1, 8)).setObjects(("ADTRAN-AOS-VQM", "adVqmTrapState"), ("ADTRAN-AOS-VQM", "adVqmTrapCfgSeverityLevel"), ("ADTRAN-AOS-VQM", "adVqmTrapEventType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adVQMTrapGroup = adVQMTrapGroup.setStatus('current')
adVQMNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 10, 1, 9)).setObjects(("ADTRAN-AOS-VQM", "adVQMEndOfCallTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adVQMNotificationGroup = adVQMNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("ADTRAN-AOS-VQM", adVqmActCallDegNoiselvl=adVqmActCallDegNoiselvl, adVqmActCallCallStart=adVqmActCallCallStart, adVQMCallHistoryTable=adVQMCallHistoryTable, adVqmCfgJitterBufferFixedNominal=adVqmCfgJitterBufferFixedNominal, adVqmSysActiveFair=adVqmSysActiveFair, adVqmCallHistRtpDestIp=adVqmCallHistRtpDestIp, adVqmActCallLatePeakJitterMs=adVqmActCallLatePeakJitterMs, adVQMTrapControl=adVQMTrapControl, adVqmCallHistMosCq=adVqmCallHistMosCq, adVQMActiveCallEntry=adVQMActiveCallEntry, adVqmCallHistDiscardRateAvg=adVqmCallHistDiscardRateAvg, adVqmCallHistRLq=adVqmCallHistRLq, adVqmCallHistOnewayDelayAverage=adVqmCallHistOnewayDelayAverage, adVqmCallHistDelayIncreaseCount=adVqmCallHistDelayIncreaseCount, adVqmIfcDiscardsMinimum=adVqmIfcDiscardsMinimum, adVqmCfgSipEnable=adVqmCfgSipEnable, adVqmThresholdLossError=adVqmThresholdLossError, adVqmActCallMosPq=adVqmActCallMosPq, adVqmCallHistCallDurationMs=adVqmCallHistCallDurationMs, adVQMInterfaceGroup=adVQMInterfaceGroup, adVqmCallHistDegDelay=adVqmCallHistDegDelay, adVqmActCallJbCfgNom=adVqmActCallJbCfgNom, adVqmCfgHistoryThresholdPqmos=adVqmCfgHistoryThresholdPqmos, adVqmActCallDegEcholvl=adVqmActCallDegEcholvl, adVQMInterfaceTable=adVQMInterfaceTable, adVqmCfgHistoryThresholdLoss=adVqmCfgHistoryThresholdLoss, adVqmEndPointMosLqMaximum=adVqmEndPointMosLqMaximum, adVqmTrapCfgSeverityLevel=adVqmTrapCfgSeverityLevel, adVqmEndPointMosLqMinimum=adVqmEndPointMosLqMinimum, adVqmCallHistCodecClass=adVqmCallHistCodecClass, adVqmActCallDegLoss=adVqmActCallDegLoss, adVqmIfcRLqMaximum=adVqmIfcRLqMaximum, adVqmActCallDelayDecreaseCount=adVqmActCallDelayDecreaseCount, adVqmCallHistDegNoiselvl=adVqmCallHistDegNoiselvl, adVqmSysActiveGood=adVqmSysActiveGood, adVqmCallHistMosNominal=adVqmCallHistMosNominal, adVQMThresholdGroup=adVQMThresholdGroup, adVqmActCallTermDelayMinimum=adVqmActCallTermDelayMinimum, adVqmActCallDelayAvgMsec=adVqmActCallDelayAvgMsec, adVqmCfgUdpEnable=adVqmCfgUdpEnable, adVqmCallHistDelayMinMsec=adVqmCallHistDelayMinMsec, adVqmThresholdLqmosWarning=adVqmThresholdLqmosWarning, adVqmCallHistExcessGap=adVqmCallHistExcessGap, adVqmActCallBurstRateAvg=adVqmActCallBurstRateAvg, adVqmCallHistEarlyThreshMs=adVqmCallHistEarlyThreshMs, adVqmCallHistPktsDiscardedTotal=adVqmCallHistPktsDiscardedTotal, adVqmCallHistOrigDelayAverage=adVqmCallHistOrigDelayAverage, adVqmActCallGapLenMsec=adVqmActCallGapLenMsec, adVqmEndPointNumberStreamsPoor=adVqmEndPointNumberStreamsPoor, adVqmCallHistDestIntName=adVqmCallHistDestIntName, adVqmActCallDiscardRateAvg=adVqmActCallDiscardRateAvg, adVqmActCallExcessGap=adVqmActCallExcessGap, adVqmActCallExtRCqOut=adVqmActCallExtRCqOut, adVqmActCallLateUnderThresh=adVqmActCallLateUnderThresh, adVqmCallHistJitterBufferType=adVqmCallHistJitterBufferType, adVqmCallHistRtpSourceUri=adVqmCallHistRtpSourceUri, adVqmCallHistLossRateAvg=adVqmCallHistLossRateAvg, adVqmCallHistLateThresholdMs=adVqmCallHistLateThresholdMs, adVqmCallHistBurstLenAvgMsec=adVqmCallHistBurstLenAvgMsec, adVqmCallHistReliabilityIndex=adVqmCallHistReliabilityIndex, adVqmThresholdLqmosInfo=adVqmThresholdLqmosInfo, adVqmActCallDscp=adVqmActCallDscp, adVqmIfcLossAverage=adVqmIfcLossAverage, adVqmActCallTermDelayAverage=adVqmActCallTermDelayAverage, adVqmActCallLatePkts=adVqmActCallLatePkts, adVqmActCallEarlyThreshMs=adVqmActCallEarlyThreshMs, adVqmActCallEarlyThreshPc=adVqmActCallEarlyThreshPc, adVQMEndOfCallTrap=adVQMEndOfCallTrap, adVqmThresholdLossInfo=adVqmThresholdLossInfo, adVQMCfgGroup=adVQMCfgGroup, adVqmIfcRCqMinimum=adVqmIfcRCqMinimum, adVqmActCallRtpDestIp=adVqmActCallRtpDestIp, adVqmActCallEarlyUnderThresh=adVqmActCallEarlyUnderThresh, adVqmCallHistMosLq=adVqmCallHistMosLq, adVqmCallHistMosPq=adVqmCallHistMosPq, adVqmEndPointJitterMaximum=adVqmEndPointJitterMaximum, adVqmIfcPktsRx=adVqmIfcPktsRx, adVqmThresholdOutOfOrderNotice=adVqmThresholdOutOfOrderNotice, adVqmCallHistGapLenPkts=adVqmCallHistGapLenPkts, adVqmActCallRtDelayInst=adVqmActCallRtDelayInst, adVqmThresholdJitterWarning=adVqmThresholdJitterWarning, adVqmSysCallHistoryExcellent=adVqmSysCallHistoryExcellent, adVqmEndPointInterfaceName=adVqmEndPointInterfaceName, adVqmActCallOnewayDelayAverage=adVqmActCallOnewayDelayAverage, adVqmIfcRCqMaximum=adVqmIfcRCqMaximum, adVqmActCallRtpSourcePort=adVqmActCallRtpSourcePort, adVqmThresholdLqmosError=adVqmThresholdLqmosError, adVqmActCallCcmid=adVqmActCallCcmid, adGenAOSVqmCompliances=adGenAOSVqmCompliances, adVqmCallHistDegSiglvl=adVqmCallHistDegSiglvl, adVqmIfcDelayMaxMsec=adVqmIfcDelayMaxMsec, adVqmIfcMosLqMaximum=adVqmIfcMosLqMaximum, adVQMTrap=adVQMTrap, adVqmCallHistEarlyThreshPc=adVqmCallHistEarlyThreshPc, adVqmCallHistExtRCqOut=adVqmCallHistExtRCqOut, adVqmThresholdOutOfOrderInfo=adVqmThresholdOutOfOrderInfo, adVqmActCallExtRCqIn=adVqmActCallExtRCqIn, adVQMEndPointEntry=adVQMEndPointEntry, adVqmCallHistDscp=adVqmCallHistDscp, MOSvalue=MOSvalue, adVqmCallHistJbCfgNom=adVqmCallHistJbCfgNom, adVqmActCallFrom=adVqmActCallFrom, adVqmSysCallHistoryGood=adVqmSysCallHistoryGood, adVqmEndPointNumberCompletedCalls=adVqmEndPointNumberCompletedCalls, adVqmSysCallHistoryFair=adVqmSysCallHistoryFair, adVqmThresholdLossNotice=adVqmThresholdLossNotice, adVqmCallHistBurstLenAvgPkts=adVqmCallHistBurstLenAvgPkts, adVqmSysActivePoor=adVqmSysActivePoor, adVqmActCallLateThresholdPc=adVqmActCallLateThresholdPc, adVqmActCallSsrcid=adVqmActCallSsrcid, adVqmIfcMosLqMinimum=adVqmIfcMosLqMinimum, adVqmCallHistRG107=adVqmCallHistRG107, adVqmCallHistRtDelayMaximum=adVqmCallHistRtDelayMaximum, adVqmActCallDegVocoder=adVqmActCallDegVocoder, adVqmIfcRG107Maximum=adVqmIfcRG107Maximum, adVqmEndPointInterfaceId=adVqmEndPointInterfaceId, adVqmCallHistTermDelayMinimum=adVqmCallHistTermDelayMinimum, adVQMEndPoint=adVQMEndPoint, adVqmCallHistPpdvMsec=adVqmCallHistPpdvMsec, adVqmCfgJitterBufferFixedSize=adVqmCfgJitterBufferFixedSize, adVqmActCallDegDelay=adVqmActCallDegDelay, adGenAOSVqmFullCompliance=adGenAOSVqmFullCompliance, adVqmIfcMosCqMaximum=adVqmIfcMosCqMaximum, adVqmActCallGapLenPkts=adVqmActCallGapLenPkts, adVqmActCallOutOfOrder=adVqmActCallOutOfOrder, adVqmActCallExtRLqIn=adVqmActCallExtRLqIn, adVqmCallHistFrom=adVqmCallHistFrom, adVQMActive=adVQMActive, adVqmCallHistTermDelayAverage=adVqmCallHistTermDelayAverage, adVqmIfcMosCqAverage=adVqmIfcMosCqAverage, adVqmCfgEnable=adVqmCfgEnable, adVqmActCallJbCfgMin=adVqmActCallJbCfgMin, adVqmActCallPktsLostTotal=adVqmActCallPktsLostTotal, adVqmActCallExcessBurst=adVqmActCallExcessBurst, adVqmCfgJitterBufferThresholdEarlyMs=adVqmCfgJitterBufferThresholdEarlyMs, MsecValue=MsecValue, adVqmActCallRLq=adVqmActCallRLq, adVqmActCallMosLq=adVqmActCallMosLq, adVqmThresholdJitterInfo=adVqmThresholdJitterInfo, adVqmCallHistTo=adVqmCallHistTo, adVqmCfgJitterBufferAdaptiveMin=adVqmCfgJitterBufferAdaptiveMin, adVqmSysActiveExcellent=adVqmSysActiveExcellent, adVqmActCallPdvMaximumMs=adVqmActCallPdvMaximumMs, adVqmActCallDelayCurrentMsec=adVqmActCallDelayCurrentMsec, adVqmCallHistDelayDecreaseCount=adVqmCallHistDelayDecreaseCount, adVqmCallHistEarlyPkts=adVqmCallHistEarlyPkts, adVqmActCallOrigDelayMaximum=adVqmActCallOrigDelayMaximum, adVQMCfg=adVQMCfg, adVqmCfgJitterBufferAdaptiveNominal=adVqmCfgJitterBufferAdaptiveNominal, adVqmIfcRG107Minimum=adVqmIfcRG107Minimum, adVqmIfcRG107Average=adVqmIfcRG107Average, adVqmActCallJitterBufferType=adVqmActCallJitterBufferType, adVqmCallHistRtDelayInst=adVqmCallHistRtDelayInst, adVqmEndPointNumberStreamsExcellent=adVqmEndPointNumberStreamsExcellent, adGenAOSVQMMib=adGenAOSVQMMib, adVqmActCallGapLossRateAvg=adVqmActCallGapLossRateAvg, adVqmThresholdPqmosWarning=adVqmThresholdPqmosWarning, adVqmCallHistBitrate=adVqmCallHistBitrate, adVqmCallHistExcessBurst=adVqmCallHistExcessBurst, adVqmCallHistOrigDelayMaximum=adVqmCallHistOrigDelayMaximum, adVqmCallHistLateUnderThresh=adVqmCallHistLateUnderThresh, adVqmCallHistDegVocoder=adVqmCallHistDegVocoder, adVqmActCallBurstLenAvgPkts=adVqmActCallBurstLenAvgPkts, adVqmActCallCodec=adVqmActCallCodec, adVqmActCallRNominal=adVqmActCallRNominal, adVqmActCallCallid=adVqmActCallCallid, adVqmCallHistDelayAvgMsec=adVqmCallHistDelayAvgMsec, adVqmThresholdPqmosError=adVqmThresholdPqmosError, adVQMInterface=adVQMInterface, adVqmActCallResyncCount=adVqmActCallResyncCount, adVqmActCallLateThresholdMs=adVqmActCallLateThresholdMs, adVqmActCallOverrunDiscardPkts=adVqmActCallOverrunDiscardPkts, adVqmActCallTermDelayMaximum=adVqmActCallTermDelayMaximum, adVqmCallHistRtpSourceIp=adVqmCallHistRtpSourceIp, adVqmCallHistRtDelayAverage=adVqmCallHistRtDelayAverage, adVqmCallHistBurstRLq=adVqmCallHistBurstRLq, adVqmTrapEventType=adVqmTrapEventType, adVqmActCallDegRecency=adVqmActCallDegRecency, adVqmActCallMosNominal=adVqmActCallMosNominal, adVqmActCallDelayIncreaseCount=adVqmActCallDelayIncreaseCount, adVqmCallHistSsrcid=adVqmCallHistSsrcid, adVqmThresholdPqmosNotice=adVqmThresholdPqmosNotice, adVqmActCallSourceIntDescription=adVqmActCallSourceIntDescription, adVqmActCallBurstRLq=adVqmActCallBurstRLq, adVqmCallHistThroughPutIndex=adVqmCallHistThroughPutIndex, adVqmActCallRCq=adVqmActCallRCq, adVqmCallHistDegRecency=adVqmCallHistDegRecency, adVqmActCallOrigDelayAverage=adVqmActCallOrigDelayAverage, adVqmIfcDelayMinMsec=adVqmIfcDelayMinMsec, adVqmCfgClearCallHistory=adVqmCfgClearCallHistory, adVqmThresholdJitterNotice=adVqmThresholdJitterNotice, adVqmActCallPktsRcvdTotal=adVqmActCallPktsRcvdTotal, adVqmCallHistCallStart=adVqmCallHistCallStart, adVqmActCallPpdvMsec=adVqmActCallPpdvMsec, adVqmIfcDiscardsMaximum=adVqmIfcDiscardsMaximum, adVqmCallHistPktsLostTotal=adVqmCallHistPktsLostTotal, adVqmActCallDelayMinMsec=adVqmActCallDelayMinMsec, adVqmCallHistSourceIntName=adVqmCallHistSourceIntName, adVqmActCallJbCfgMax=adVqmActCallJbCfgMax, adVqmCfgHistoryThresholdJitter=adVqmCfgHistoryThresholdJitter, adVqmCfgCallHistorySize=adVqmCfgCallHistorySize, adVqmSysCallHistoryCalls=adVqmSysCallHistoryCalls, adVqmCallHistExtRLqOut=adVqmCallHistExtRLqOut, adVqmCallHistBurstCount=adVqmCallHistBurstCount, adVqmCfgHistoryThresholdLqmos=adVqmCfgHistoryThresholdLqmos, adVQMActiveCallGroup=adVQMActiveCallGroup, adVqmThresholdOutOfOrderWarning=adVqmThresholdOutOfOrderWarning, adVqmCallHistEarlyPeakJitterMs=adVqmCallHistEarlyPeakJitterMs, adVqmCallHistDelayMaxMsec=adVqmCallHistDelayMaxMsec, adVqmIfcTerminatedCalls=adVqmIfcTerminatedCalls, adVqmCfgJitterBufferType=adVqmCfgJitterBufferType, adVqmThresholdPqmosInfo=adVqmThresholdPqmosInfo, adVqmCallHistPdvMaximumMs=adVqmCallHistPdvMaximumMs, adVqmActCallDestIntName=adVqmActCallDestIntName, adVqmSysAllCallsPoor=adVqmSysAllCallsPoor, adVqmActCallDegSiglvl=adVqmActCallDegSiglvl, adVqmIfcPktsLost=adVqmIfcPktsLost, adVqmCallHistPktsRcvdTotal=adVqmCallHistPktsRcvdTotal, adVqmActCallReliabilityIndex=adVqmActCallReliabilityIndex, adVqmThresholdOutOfOrderError=adVqmThresholdOutOfOrderError, adVqmCallHistOnewayDelayMaximum=adVqmCallHistOnewayDelayMaximum, adVqmCallHistLateThresholdPc=adVqmCallHistLateThresholdPc, adVqmIfcRLqAverage=adVqmIfcRLqAverage, adVqmCallHistDegEcholvl=adVqmCallHistDegEcholvl, adVqmActCallSourceIntName=adVqmActCallSourceIntName, adVqmIfcDiscardsAverage=adVqmIfcDiscardsAverage, adVqmIfcMosPqMaximum=adVqmIfcMosPqMaximum, adVqmCallHistUnderrunDiscardPkts=adVqmCallHistUnderrunDiscardPkts, adVQMSysPerf=adVQMSysPerf, adVQM=adVQM, adVqmActCallBitrate=adVqmActCallBitrate, adVqmCfgJitterBufferThresholdLateMs=adVqmCfgJitterBufferThresholdLateMs, adVqmActCallOrigDelayInst=adVqmActCallOrigDelayInst, adVqmEndPointMosLqAverage=adVqmEndPointMosLqAverage, adVqmActCallRtDelayMaximum=adVqmActCallRtDelayMaximum, adVqmActCallOnewayDelayInst=adVqmActCallOnewayDelayInst, adVqmIfcPdvMaximumMs=adVqmIfcPdvMaximumMs, adVqmIfcNumberStreamsFair=adVqmIfcNumberStreamsFair, adVqmActCallUnderrunDiscardPkts=adVqmActCallUnderrunDiscardPkts, adVqmActCallDegDiscard=adVqmActCallDegDiscard, adVqmActCallTo=adVqmActCallTo, adVqmActCallPdvAverageMs=adVqmActCallPdvAverageMs, adVqmCallHistTermDelayMaximum=adVqmCallHistTermDelayMaximum, adVqmEndPointMosPqAverage=adVqmEndPointMosPqAverage, adGenAOSVqmConformance=adGenAOSVqmConformance, adVqmIfcMosLqAverage=adVqmIfcMosLqAverage, adVqmSysCallHistoryPoor=adVqmSysCallHistoryPoor, adVqmIfcMosPqMinimum=adVqmIfcMosPqMinimum, adVqmActCallGapR=adVqmActCallGapR, adVqmCallHistRtpSourcePort=adVqmCallHistRtpSourcePort, adVqmIfcLossMaximum=adVqmIfcLossMaximum, adVqmIfcRCqAverage=adVqmIfcRCqAverage, adVqmCallHistGapCount=adVqmCallHistGapCount, adVqmActCallRG107=adVqmActCallRG107)
mibBuilder.exportSymbols("ADTRAN-AOS-VQM", adVqmCallHistDegDiscard=adVqmCallHistDegDiscard, adVqmCallHistBurstRateAvg=adVqmCallHistBurstRateAvg, adVqmIfcName=adVqmIfcName, adVqmCallHistOnewayDelayInst=adVqmCallHistOnewayDelayInst, adVQMActiveCallTable=adVQMActiveCallTable, adVqmCallHistOrigDelayInst=adVqmCallHistOrigDelayInst, adVqmIfcNumberStreamsPoor=adVqmIfcNumberStreamsPoor, adVQMTrapGroup=adVQMTrapGroup, adVqmEndPointMosPqMinimum=adVqmEndPointMosPqMinimum, adVQMEndPointGroup=adVQMEndPointGroup, adVqmEndPointRtpSourceIp=adVqmEndPointRtpSourceIp, adVqmActCallRtpSourceUri=adVqmActCallRtpSourceUri, adVqmCallHistEarlyUnderThresh=adVqmCallHistEarlyUnderThresh, adVqmIfcNumberStreamsGood=adVqmIfcNumberStreamsGood, adVqmCallHistLateTotalCount=adVqmCallHistLateTotalCount, adVqmCallHistDestIntDescription=adVqmCallHistDestIntDescription, adVqmCfgHistoryThresholdCqmos=adVqmCfgHistoryThresholdCqmos, adVqmCfgInternationalCode=adVqmCfgInternationalCode, adVqmCfgJitterBufferAdaptiveMax=adVqmCfgJitterBufferAdaptiveMax, adVqmCallHistOutOfOrder=adVqmCallHistOutOfOrder, adVqmCallHistRNominal=adVqmCallHistRNominal, adVqmCallHistJbCfgMax=adVqmCallHistJbCfgMax, adVqmCfgHistoryThresholdOutOfOrder=adVqmCfgHistoryThresholdOutOfOrder, adVqmActCallDelayMaxMsec=adVqmActCallDelayMaxMsec, adVqmActCallCallDurationMs=adVqmActCallCallDurationMs, adVqmIfcPktsDiscarded=adVqmIfcPktsDiscarded, adVQMNotificationGroup=adVQMNotificationGroup, adVqmActCallRtpDestPort=adVqmActCallRtpDestPort, adVQMHistory=adVQMHistory, adVqmIfcDelayAvgMsec=adVqmIfcDelayAvgMsec, adVqmActCallLateTotalCount=adVqmActCallLateTotalCount, adVqmActCallCodecClass=adVqmActCallCodecClass, adVQMThreshold=adVQMThreshold, adVqmIfcPktsOoo=adVqmIfcPktsOoo, adVqmActCallBurstLenAvgMsec=adVqmActCallBurstLenAvgMsec, adVqmActCallBurstCount=adVqmActCallBurstCount, adVqmSysAllCallsFair=adVqmSysAllCallsFair, adVqmIfcId=adVqmIfcId, adVqmTrapState=adVqmTrapState, adVqmCallHistRCq=adVqmCallHistRCq, Percentage=Percentage, adVqmIfcNumberStreamsExcellent=adVqmIfcNumberStreamsExcellent, adVqmActCallOnewayDelayMaximum=adVqmActCallOnewayDelayMaximum, adVqmActCallPktsDiscardedTotal=adVqmActCallPktsDiscardedTotal, adVqmCallHistSourceIntDescription=adVqmCallHistSourceIntDescription, adVqmIfcMosCqMinimum=adVqmIfcMosCqMinimum, adVqmCallHistDuplicatePkts=adVqmCallHistDuplicatePkts, PYSNMP_MODULE_ID=adGenAOSVQMMib, adVqmCallHistLatePkts=adVqmCallHistLatePkts, adVqmCallHistOverrunDiscardPkts=adVqmCallHistOverrunDiscardPkts, adVqmActCallDuplicatePkts=adVqmActCallDuplicatePkts, adVqmCfgRoundTripPingEnabled=adVqmCfgRoundTripPingEnabled, adVQMCallHistoryGroup=adVQMCallHistoryGroup, adVqmActCallExtRLqOut=adVqmActCallExtRLqOut, adVqmCallHistExtRCqIn=adVqmCallHistExtRCqIn, adVqmIfcPdvAverageMs=adVqmIfcPdvAverageMs, adVqmIfcClear=adVqmIfcClear, adVqmIfcRLqMinimum=adVqmIfcRLqMinimum, adVqmEndPointPktsLostTotal=adVqmEndPointPktsLostTotal, adVqmThresholdLossWarning=adVqmThresholdLossWarning, adVqmIfcMosPqAverage=adVqmIfcMosPqAverage, adVqmActCallLossRateAvg=adVqmActCallLossRateAvg, adVqmIfcNumberActiveCalls=adVqmIfcNumberActiveCalls, adVqmEndPointMosPqMaximum=adVqmEndPointMosPqMaximum, adVqmCallHistExtRLqIn=adVqmCallHistExtRLqIn, adVqmCallHistDegLoss=adVqmCallHistDegLoss, adVqmCallHistGapR=adVqmCallHistGapR, adVqmEndPointNumberStreamsGood=adVqmEndPointNumberStreamsGood, adVqmActCallRtDelayAverage=adVqmActCallRtDelayAverage, adVqmSysAllCallsGood=adVqmSysAllCallsGood, adVqmEndPointPktsOutOfOrder=adVqmEndPointPktsOutOfOrder, adVqmActCallGapCount=adVqmActCallGapCount, adVqmCallHistGapLenMsec=adVqmCallHistGapLenMsec, adVQMSysPerfGroup=adVQMSysPerfGroup, adVqmActCallDestIntDescription=adVqmActCallDestIntDescription, adVqmActCallMosCq=adVqmActCallMosCq, adVqmActCallNetworkLossAvg=adVqmActCallNetworkLossAvg, adVqmActCallThroughPutIndex=adVqmActCallThroughPutIndex, adVqmActCallEarlyPkts=adVqmActCallEarlyPkts, adVqmCallHistCallid=adVqmCallHistCallid, adVqmEndPointNumberStreamsFair=adVqmEndPointNumberStreamsFair, adVqmCallHistResyncCount=adVqmCallHistResyncCount, adVqmCallHistDelayCurrentMsec=adVqmCallHistDelayCurrentMsec, adVqmCallHistRtpDestPort=adVqmCallHistRtpDestPort, adVqmActCallEarlyPeakJitterMs=adVqmActCallEarlyPeakJitterMs, adVQMEndPointTable=adVQMEndPointTable, adVqmActCallRtpSourceIp=adVqmActCallRtpSourceIp, adVqmActCallEarlyTotalCount=adVqmActCallEarlyTotalCount, adGenAOSVqmGroups=adGenAOSVqmGroups, adVqmThresholdLqmosNotice=adVqmThresholdLqmosNotice, adVqmSysActiveCalls=adVqmSysActiveCalls, adVqmSysAllCallsExcellent=adVqmSysAllCallsExcellent, adVqmThresholdJitterError=adVqmThresholdJitterError, adVqmCfgClear=adVqmCfgClear, adVqmCallHistEarlyTotalCount=adVqmCallHistEarlyTotalCount, adVQMInterfaceEntry=adVQMInterfaceEntry, adVqmCallHistPdvAverageMs=adVqmCallHistPdvAverageMs, adVqmCallHistNetworkLossAvg=adVqmCallHistNetworkLossAvg, adVqmCallHistLatePeakJitterMs=adVqmCallHistLatePeakJitterMs, adVqmIfcLossMinimum=adVqmIfcLossMinimum, adVqmCallHistCodec=adVqmCallHistCodec, adVqmCallHistCcmid=adVqmCallHistCcmid, adVqmCallHistJbCfgMin=adVqmCallHistJbCfgMin, adVqmCfgRoundTripPingType=adVqmCfgRoundTripPingType, adVqmCallHistGapLossRateAvg=adVqmCallHistGapLossRateAvg, adVQMCallHistoryEntry=adVQMCallHistoryEntry)
