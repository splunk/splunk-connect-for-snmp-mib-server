#
# PySNMP MIB module SONUS-NODE-RESOURCES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-NODE-RESOURCES-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:02:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Counter64, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ObjectIdentity, MibIdentifier, NotificationType, Gauge32, TimeTicks, Integer32, Counter32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter64", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ObjectIdentity", "MibIdentifier", "NotificationType", "Gauge32", "TimeTicks", "Integer32", "Counter32", "Bits")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
sonusEventLevel, sonusEventClass, sonusEventDescription = mibBuilder.importSymbols("SONUS-COMMON-MIB", "sonusEventLevel", "sonusEventClass", "sonusEventDescription")
sonusResourcesMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusResourcesMIBs")
SonusName, SonusNameReference, SonusAdminState = mibBuilder.importSymbols("SONUS-TC", "SonusName", "SonusNameReference", "SonusAdminState")
sonusNodeResourcesMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2))
if mibBuilder.loadTexts: sonusNodeResourcesMIB.setLastUpdated('200107310000Z')
if mibBuilder.loadTexts: sonusNodeResourcesMIB.setOrganization('Sonus Networks, Inc.')
sonusNodeResourcesMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1))
sonusServProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1))
sonusServProfileNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusServProfileNextIndex.setStatus('deprecated')
sonusServProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2), )
if mibBuilder.loadTexts: sonusServProfileTable.setStatus('deprecated')
sonusServProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusServProfileIndex"))
if mibBuilder.loadTexts: sonusServProfileEntry.setStatus('deprecated')
sonusServProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusServProfileIndex.setStatus('deprecated')
sonusServProfileState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileState.setStatus('deprecated')
sonusServProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 3), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileName.setStatus('deprecated')
sonusServProfileType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("circuit", 1), ("packet", 2))).clone('circuit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileType.setStatus('deprecated')
sonusServProfileVCktEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5))).clone(namedValues=NamedValues(("g711ulaw", 1), ("g711alaw", 2), ("none", 5))).clone('g711ulaw')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileVCktEncoding.setStatus('deprecated')
sonusServProfileVCktBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileVCktBandwidth.setStatus('deprecated')
sonusServProfileVCktNecEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileVCktNecEnable.setStatus('deprecated')
sonusServProfileVPktEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("g711ulaw", 1), ("g711alaw", 2), ("g7231", 3), ("g729a", 4), ("none", 5))).clone('g711ulaw')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileVPktEncoding.setStatus('deprecated')
sonusServProfileVPktFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 9), Integer32().clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileVPktFrameSize.setStatus('deprecated')
sonusServProfileVPktFramesPerPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 10), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileVPktFramesPerPacket.setStatus('deprecated')
sonusServProfileVPktMaxNetworkJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(40, 400)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileVPktMaxNetworkJitter.setStatus('deprecated')
sonusServProfileVPktTosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileVPktTosValue.setStatus('deprecated')
sonusServProfileCttTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("remoteLoopback", 1), ("remote2Wire", 2), ("remote4Wire", 3))).clone('remoteLoopback')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileCttTestType.setStatus('deprecated')
sonusServProfileCttTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileCttTimeout.setStatus('deprecated')
sonusServProfileCttMinDetectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 60)).clone(45)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileCttMinDetectTime.setStatus('deprecated')
sonusServProfileCttMinReleaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 40)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileCttMinReleaseTime.setStatus('deprecated')
sonusServProfileCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("voiceOnly", 1), ("circuitModeData", 2), ("voiceOrCircuitModeData", 3))).clone('voiceOrCircuitModeData')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileCapability.setStatus('deprecated')
sonusServProfileDPktRestrictedCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unrestricted", 1), ("restricted", 2))).clone('unrestricted')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileDPktRestrictedCfg.setStatus('deprecated')
sonusServProfileDPktRtpPayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(56)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileDPktRtpPayloadType.setStatus('deprecated')
sonusServProfileDPktMaxNetworkJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(40, 400)).clone(400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileDPktMaxNetworkJitter.setStatus('deprecated')
sonusServProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 1, 2, 1, 21), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusServProfileRowStatus.setStatus('deprecated')
sonusSonicBusStatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 2), )
if mibBuilder.loadTexts: sonusSonicBusStatTable.setStatus('current')
sonusSonicBusStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 2, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusSonicBusStatShelfIndex"))
if mibBuilder.loadTexts: sonusSonicBusStatEntry.setStatus('current')
sonusSonicBusStatShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusSonicBusStatShelfIndex.setStatus('current')
sonusSonicBusStatNumCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusSonicBusStatNumCalls.setStatus('current')
sonusSonicBusStatBwAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusSonicBusStatBwAllocated.setStatus('current')
sonusSonicBusStatSduCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusSonicBusStatSduCount.setStatus('current')
sonusActiveCallTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3), )
if mibBuilder.loadTexts: sonusActiveCallTable.setStatus('current')
sonusActiveCallEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusActiveCallShelfIndex"), (0, "SONUS-NODE-RESOURCES-MIB", "sonusActiveCallSlotIndex"), (0, "SONUS-NODE-RESOURCES-MIB", "sonusActiveCallIndex"))
if mibBuilder.loadTexts: sonusActiveCallEntry.setStatus('current')
sonusActiveCallShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallShelfIndex.setStatus('current')
sonusActiveCallSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallSlotIndex.setStatus('current')
sonusActiveCallIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallIndex.setStatus('current')
sonusActiveCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallId.setStatus('current')
sonusActiveCallSonicBusUnitsAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallSonicBusUnitsAllocated.setStatus('current')
sonusActiveCallNumResources = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallNumResources.setStatus('current')
sonusActiveCallState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallState.setStatus('current')
sonusActiveCallIngressServProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallIngressServProfile.setStatus('current')
sonusActiveCallEgressServProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallEgressServProfile.setStatus('current')
sonusActiveCallCallingNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallCallingNum.setStatus('current')
sonusActiveCallCalledNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallCalledNum.setStatus('current')
sonusActiveCallAddressTransPerformed = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("lnp", 2), ("tollfree", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallAddressTransPerformed.setStatus('current')
sonusActiveCallOrigCalledNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallOrigCalledNum.setStatus('current')
sonusActiveCallScenarioType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallScenarioType.setStatus('current')
sonusActiveCallIngressPstnSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallIngressPstnSlotNum.setStatus('current')
sonusActiveCallIngressPstnPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallIngressPstnPortNum.setStatus('current')
sonusActiveCallIngressPstnChannelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallIngressPstnChannelNum.setStatus('current')
sonusActiveCallIngressPstnChannelCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallIngressPstnChannelCount.setStatus('current')
sonusActiveCallIngressPstnChannelBitMap = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallIngressPstnChannelBitMap.setStatus('current')
sonusActiveCallEgressPstnSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallEgressPstnSlotNum.setStatus('current')
sonusActiveCallEgressPstnPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallEgressPstnPortNum.setStatus('current')
sonusActiveCallEgressPstnChannelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallEgressPstnChannelNum.setStatus('current')
sonusActiveCallEgressPstnChannelCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallEgressPstnChannelCount.setStatus('current')
sonusActiveCallEgressPstnChannelBitMap = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallEgressPstnChannelBitMap.setStatus('current')
sonusActiveCallIngressLocalIpSockAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 25), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallIngressLocalIpSockAddr.setStatus('current')
sonusActiveCallIngressRemoteIpSockAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 26), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallIngressRemoteIpSockAddr.setStatus('current')
sonusActiveCallEgressLocalIpSockAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 27), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallEgressLocalIpSockAddr.setStatus('current')
sonusActiveCallEgressRemoteIpSockAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 28), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallEgressRemoteIpSockAddr.setStatus('current')
sonusActiveCallIngressPstnTrunk = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallIngressPstnTrunk.setStatus('current')
sonusActiveCallEgressPstnTrunk = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallEgressPstnTrunk.setStatus('current')
sonusActiveCallIngressIpDestGwName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallIngressIpDestGwName.setStatus('current')
sonusActiveCallEgressIpDestGwName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallEgressIpDestGwName.setStatus('current')
sonusActiveCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallDuration.setStatus('current')
sonusActiveCallIngressEpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("circuit", 1), ("packet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallIngressEpType.setStatus('current')
sonusActiveCallEgressEpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("circuit", 1), ("packet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallEgressEpType.setStatus('current')
sonusActiveCallIngressSgType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("unknown", 0), ("isup", 1), ("cas", 2), ("isdn", 3), ("h323", 4), ("gwip", 5), ("internal1", 6), ("internal2", 7), ("mg", 8), ("asg", 9), ("static", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallIngressSgType.setStatus('current')
sonusActiveCallEgressSgType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("unknown", 0), ("isup", 1), ("cas", 2), ("isdn", 3), ("h323", 4), ("gwip", 5), ("internal1", 6), ("internal2", 7), ("mg", 8), ("asg", 9), ("static", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallEgressSgType.setStatus('current')
sonusActiveCallPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallPacketsSent.setStatus('current')
sonusActiveCallPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallPacketsReceived.setStatus('current')
sonusActiveCallOctetsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallOctetsSent.setStatus('current')
sonusActiveCallOctetsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallOctetsReceived.setStatus('current')
sonusActiveCallPacketsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallPacketsLost.setStatus('current')
sonusActiveCallPacketsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallPacketsDiscarded.setStatus('current')
sonusActiveCallInterarrivalJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallInterarrivalJitter.setStatus('current')
sonusActiveCallPacketLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 3, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusActiveCallPacketLatency.setStatus('current')
sonusCallResTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 4), )
if mibBuilder.loadTexts: sonusCallResTable.setStatus('current')
sonusCallResEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 4, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusCallResShelfIndex"), (0, "SONUS-NODE-RESOURCES-MIB", "sonusCallResSlotIndex"), (0, "SONUS-NODE-RESOURCES-MIB", "sonusCallResCallIndex"), (0, "SONUS-NODE-RESOURCES-MIB", "sonusCallResIndex"))
if mibBuilder.loadTexts: sonusCallResEntry.setStatus('current')
sonusCallResShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallResShelfIndex.setStatus('current')
sonusCallResSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallResSlotIndex.setStatus('current')
sonusCallResCallIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallResCallIndex.setStatus('current')
sonusCallResIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallResIndex.setStatus('current')
sonusCallResId = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallResId.setStatus('current')
sonusCallResCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallResCallId.setStatus('current')
sonusCallResType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("bresIcm", 0), ("bresSw2Nif", 1), ("bresSw2DspCtrl", 2), ("bresSw2DspLocal", 3), ("bresSw2DspSonic", 4), ("bresDsp2Dsp", 5), ("bresDsp2Sonic", 6), ("bresLe2Sonic", 7), ("bresAtm2Sw", 8), ("bresSw2Atm", 9), ("dresPstn", 10), ("dresService", 11), ("pres", 12), ("xresCntrl", 13), ("xresUser", 14), ("aresAmq2Dsp", 15), ("atmres", 16), ("bresSw2DspApps", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallResType.setStatus('current')
sonusCallResMgrHandle = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallResMgrHandle.setStatus('current')
sonusCallResMgrShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallResMgrShelfIndex.setStatus('current')
sonusCallResMgrSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallResMgrSlotIndex.setStatus('current')
sonusCallPegCountsTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 5), )
if mibBuilder.loadTexts: sonusCallPegCountsTable.setStatus('current')
sonusCallPegCountsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 5, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusCallPegCountsShelfIndex"), (0, "SONUS-NODE-RESOURCES-MIB", "sonusCallPegCountsSlotIndex"))
if mibBuilder.loadTexts: sonusCallPegCountsEntry.setStatus('current')
sonusCallPegCountsShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallPegCountsShelfIndex.setStatus('current')
sonusCallPegCountsSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallPegCountsSlotIndex.setStatus('current')
sonusCallPegCountsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unknown", 1), ("reset", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusCallPegCountsReset.setStatus('current')
sonusCallPegCountsAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallPegCountsAttempts.setStatus('current')
sonusCallPegCountsCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallPegCountsCompletions.setStatus('current')
sonusCallPegCountsActiveCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallPegCountsActiveCalls.setStatus('current')
sonusCallPegCountsStableCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallPegCountsStableCalls.setStatus('current')
sonusCallPegCountsUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallPegCountsUpdates.setStatus('current')
sonusCallPegCountsActiveCallsNonUser = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 5, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallPegCountsActiveCallsNonUser.setStatus('current')
sonusCallPegCountsStableCallsNonUser = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 5, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallPegCountsStableCallsNonUser.setStatus('current')
sonusToneObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6))
sonusToneProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1))
sonusToneProfileNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusToneProfileNextIndex.setStatus('current')
sonusToneProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2), )
if mibBuilder.loadTexts: sonusToneProfileTable.setStatus('current')
sonusToneProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusToneProfileIndex"))
if mibBuilder.loadTexts: sonusToneProfileEntry.setStatus('current')
sonusToneProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusToneProfileIndex.setStatus('current')
sonusToneProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileName.setStatus('current')
sonusToneProfileGenerationMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("singleTone", 1), ("dualTone", 2), ("modulatedTone", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileGenerationMethod.setStatus('current')
sonusToneProfileTone1Freq = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileTone1Freq.setStatus('current')
sonusToneProfileTone1Power = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-50, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileTone1Power.setStatus('current')
sonusToneProfileTone2Freq = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileTone2Freq.setStatus('current')
sonusToneProfileTone2Power = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-50, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileTone2Power.setStatus('current')
sonusToneProfileCarrierFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileCarrierFreq.setStatus('current')
sonusToneProfileSignalFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileSignalFreq.setStatus('current')
sonusToneProfileModPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-50, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileModPower.setStatus('current')
sonusToneProfileModIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileModIndex.setStatus('current')
sonusToneProfileMake1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 8000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileMake1.setStatus('current')
sonusToneProfileBreak1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 8000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileBreak1.setStatus('current')
sonusToneProfileMake2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 8000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileMake2.setStatus('current')
sonusToneProfileBreak2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 8000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileBreak2.setStatus('current')
sonusToneProfileMake3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 8000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileMake3.setStatus('current')
sonusToneProfileBreak3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 8000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileBreak3.setStatus('current')
sonusToneProfileRepeat = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 18), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileRepeat.setStatus('current')
sonusToneProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 1, 2, 1, 19), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneProfileRowStatus.setStatus('current')
sonusToneType = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 2))
sonusToneTypeNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusToneTypeNextIndex.setStatus('current')
sonusToneTypeTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 2, 2), )
if mibBuilder.loadTexts: sonusToneTypeTable.setStatus('current')
sonusToneTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 2, 2, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusToneTypeIndex"))
if mibBuilder.loadTexts: sonusToneTypeEntry.setStatus('current')
sonusToneTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusToneTypeIndex.setStatus('current')
sonusToneTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 2, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneTypeName.setStatus('current')
sonusToneTypeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 2, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusToneTypeRowStatus.setStatus('current')
sonusTonePackage = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 3))
sonusTonePackageNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusTonePackageNextIndex.setStatus('current')
sonusTonePackageTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 3, 2), )
if mibBuilder.loadTexts: sonusTonePackageTable.setStatus('current')
sonusTonePackageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 3, 2, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusTonePackageIndex"))
if mibBuilder.loadTexts: sonusTonePackageEntry.setStatus('current')
sonusTonePackageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusTonePackageIndex.setStatus('current')
sonusTonePackageName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 3, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTonePackageName.setStatus('current')
sonusTonePackageRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 3, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTonePackageRowStatus.setStatus('current')
sonusTonePkgElem = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 4))
sonusTonePkgElemTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 4, 1), )
if mibBuilder.loadTexts: sonusTonePkgElemTable.setStatus('current')
sonusTonePkgElemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 4, 1, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusTonePkgElemIndex"))
if mibBuilder.loadTexts: sonusTonePkgElemEntry.setStatus('current')
sonusTonePkgElemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusTonePkgElemIndex.setStatus('current')
sonusTonePkgElemTonePackageRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 4, 1, 1, 2), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTonePkgElemTonePackageRef.setStatus('current')
sonusTonePkgElemToneTypeRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 4, 1, 1, 3), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTonePkgElemToneTypeRef.setStatus('current')
sonusTonePkgElemToneProfileRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 4, 1, 1, 4), SonusNameReference().clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTonePkgElemToneProfileRef.setStatus('current')
sonusTonePkgElemRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 6, 4, 1, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTonePkgElemRowStatus.setStatus('current')
sonusDigitProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 7))
sonusDigitProfileNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDigitProfileNextIndex.setStatus('current')
sonusDigitProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 7, 2), )
if mibBuilder.loadTexts: sonusDigitProfileTable.setStatus('current')
sonusDigitProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 7, 2, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusDigitProfileIndex"))
if mibBuilder.loadTexts: sonusDigitProfileEntry.setStatus('current')
sonusDigitProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 7, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDigitProfileIndex.setStatus('current')
sonusDigitProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 7, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDigitProfileName.setStatus('current')
sonusDigitProfileType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dtmf", 1), ("mfr1", 2), ("mfr2f", 3), ("mfr2b", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDigitProfileType.setStatus('current')
sonusDigitProfileGenPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-50, 3)).clone(-10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDigitProfileGenPower.setStatus('current')
sonusDigitProfileGenMake = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8000)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDigitProfileGenMake.setStatus('current')
sonusDigitProfileGenBreak = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 7, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8000)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDigitProfileGenBreak.setStatus('current')
sonusDigitProfileDetMinPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 7, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-45, -25)).clone(-45)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDigitProfileDetMinPower.setStatus('current')
sonusDigitProfileDetMinOnDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 7, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(25, 100)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDigitProfileDetMinOnDuration.setStatus('current')
sonusDigitProfileDetMinOffDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 7, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDigitProfileDetMinOffDuration.setStatus('current')
sonusDigitProfileDetFreqAcceptRange = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 7, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("narrow", 1), ("medium", 2), ("wide", 3), ("wider", 4))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDigitProfileDetFreqAcceptRange.setStatus('current')
sonusDigitProfileDtmfDetTwistCutoff = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 7, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 12)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDigitProfileDtmfDetTwistCutoff.setStatus('current')
sonusDigitProfileMfr1GenMakeKp = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 7, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8000)).clone(105)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDigitProfileMfr1GenMakeKp.setStatus('current')
sonusDigitProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 7, 2, 1, 13), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDigitProfileRowStatus.setStatus('current')
sonusStaticCall = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8))
sonusStaticCallNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusStaticCallNextIndex.setStatus('current')
sonusStaticCallAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2), )
if mibBuilder.loadTexts: sonusStaticCallAdmnTable.setStatus('current')
sonusStaticCallAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusStaticCallAdmnIndex"))
if mibBuilder.loadTexts: sonusStaticCallAdmnEntry.setStatus('current')
sonusStaticCallAdmnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusStaticCallAdmnIndex.setStatus('current')
sonusStaticCallAdmnState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnState.setStatus('current')
sonusStaticCallAdmnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 3), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnName.setStatus('current')
sonusStaticCallAdmnEndPointAShelf = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnEndPointAShelf.setStatus('current')
sonusStaticCallAdmnEndPointASlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnEndPointASlot.setStatus('current')
sonusStaticCallAdmnEndPointAPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnEndPointAPort.setStatus('current')
sonusStaticCallAdmnEndPointAChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnEndPointAChannel.setStatus('current')
sonusStaticCallAdmnEndPointAServProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 8), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnEndPointAServProfile.setStatus('current')
sonusStaticCallAdmnEndPointBType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("circuit", 1), ("packet", 2))).clone('circuit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnEndPointBType.setStatus('current')
sonusStaticCallAdmnEndPointBShelf = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnEndPointBShelf.setStatus('current')
sonusStaticCallAdmnEndPointBSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnEndPointBSlot.setStatus('current')
sonusStaticCallAdmnEndPointBPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnEndPointBPort.setStatus('current')
sonusStaticCallAdmnEndPointBChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnEndPointBChannel.setStatus('current')
sonusStaticCallAdmnEndPointBLocalRTPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnEndPointBLocalRTPPort.setStatus('current')
sonusStaticCallAdmnEndPointBLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 15), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnEndPointBLocalIpAddress.setStatus('current')
sonusStaticCallAdmnEndPointBRemoteRTPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnEndPointBRemoteRTPPort.setStatus('current')
sonusStaticCallAdmnEndPointBRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 17), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnEndPointBRemoteIpAddress.setStatus('current')
sonusStaticCallAdmnEndPointBServProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 18), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnEndPointBServProfile.setStatus('current')
sonusStaticCallAdmnCircuitMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("voice", 1), ("data", 2))).clone('voice')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnCircuitMode.setStatus('current')
sonusStaticCallAdmnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 8, 2, 1, 20), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAdmnRowStatus.setStatus('current')
sonusStaticCallStatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 9), )
if mibBuilder.loadTexts: sonusStaticCallStatTable.setStatus('current')
sonusStaticCallStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 9, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusStaticCallStatIndex"))
if mibBuilder.loadTexts: sonusStaticCallStatEntry.setStatus('current')
sonusStaticCallStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusStaticCallStatIndex.setStatus('current')
sonusStaticCallStatCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusStaticCallStatCallId.setStatus('current')
sonusStaticCallStatState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusStaticCallStatState.setStatus('current')
sonusStaticCallStatTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusStaticCallStatTime.setStatus('current')
sonusStaticCallActionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 10))
sonusStaticCallGcid = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 10, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallGcid.setStatus('current')
sonusStaticCallAction = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("delete", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusStaticCallAction.setStatus('current')
sonusCallTrace = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 11))
sonusCallTraceNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallTraceNextIndex.setStatus('current')
sonusCallTraceTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 11, 2), )
if mibBuilder.loadTexts: sonusCallTraceTable.setStatus('current')
sonusCallTraceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 11, 2, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusCallTraceIndex"))
if mibBuilder.loadTexts: sonusCallTraceEntry.setStatus('current')
sonusCallTraceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 11, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallTraceIndex.setStatus('current')
sonusCallTraceState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 11, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCallTraceState.setStatus('current')
sonusCallTraceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 11, 2, 1, 3), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCallTraceName.setStatus('current')
sonusCallTraceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 11, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("calledcalling", 1), ("calledonly", 2), ("callingonly", 3))).clone('calledcalling')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCallTraceType.setStatus('current')
sonusCallTraceCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 11, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCallTraceCalledNumber.setStatus('current')
sonusCallTraceCallingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 11, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCallTraceCallingNumber.setStatus('current')
sonusCallTraceLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 11, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2), ("level3", 3))).clone('level2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCallTraceLevel.setStatus('current')
sonusCallTraceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 11, 2, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCallTraceRowStatus.setStatus('current')
sonusCktServProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12))
sonusCktServProfileNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCktServProfileNextIndex.setStatus('current')
sonusCktServProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 2), )
if mibBuilder.loadTexts: sonusCktServProfileTable.setStatus('current')
sonusCktServProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 2, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusCktServProfileIndex"))
if mibBuilder.loadTexts: sonusCktServProfileEntry.setStatus('current')
sonusCktServProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCktServProfileIndex.setStatus('current')
sonusCktServProfileState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCktServProfileState.setStatus('current')
sonusCktServProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 2, 1, 3), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCktServProfileName.setStatus('current')
sonusCktServProfileAudioEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("g711ulaw", 1), ("g711alaw", 2))).clone('g711ulaw')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCktServProfileAudioEncoding.setStatus('current')
sonusCktServProfileBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCktServProfileBandwidth.setStatus('current')
sonusCktServProfileNecEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCktServProfileNecEnable.setStatus('current')
sonusCktServProfileCttTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("remoteLoopback", 1), ("remote2Wire", 2), ("remote4Wire", 3))).clone('remoteLoopback')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCktServProfileCttTestType.setStatus('current')
sonusCktServProfileCttTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCktServProfileCttTimeout.setStatus('current')
sonusCktServProfileCttMinDetectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 60)).clone(45)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCktServProfileCttMinDetectTime.setStatus('current')
sonusCktServProfileCttMinReleaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 40)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCktServProfileCttMinReleaseTime.setStatus('current')
sonusCktServProfileCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("voiceOnly", 1), ("circuitModeData", 2), ("voiceOrCircuitModeData", 3))).clone('voiceOrCircuitModeData')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCktServProfileCapability.setStatus('current')
sonusCktServProfileDataRestrictedCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unrestricted", 1), ("restricted", 2))).clone('unrestricted')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCktServProfileDataRestrictedCfg.setStatus('current')
sonusCktServProfileDtmfProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 2, 1, 13), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCktServProfileDtmfProfileName.setStatus('current')
sonusCktServProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 2, 1, 14), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCktServProfileRowStatus.setStatus('current')
sonusCktServProfileInterworkingXfrCap = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 12, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("speech", 1), ("audio31Khz", 2))).clone('speech')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCktServProfileInterworkingXfrCap.setStatus('current')
sonusPktServProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13))
sonusPktServProfileNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPktServProfileNextIndex.setStatus('current')
sonusPktServProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2), )
if mibBuilder.loadTexts: sonusPktServProfileTable.setStatus('current')
sonusPktServProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusPktServProfileIndex"))
if mibBuilder.loadTexts: sonusPktServProfileEntry.setStatus('current')
sonusPktServProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPktServProfileIndex.setStatus('current')
sonusPktServProfileState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileState.setStatus('current')
sonusPktServProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 3), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileName.setStatus('current')
sonusPktServProfileDestProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("gsx", 1), ("h323", 2))).clone('gsx')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileDestProtocol.setStatus('current')
sonusPktServProfilePrfdAudioEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5))).clone(namedValues=NamedValues(("g711", 1), ("g711ss", 2), ("g729a", 4), ("g729ab", 5))).clone('g711')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfilePrfdAudioEncoding.setStatus('current')
sonusPktServProfilePrfdFramesPerPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 6), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfilePrfdFramesPerPacket.setStatus('current')
sonusPktServProfileDefFramesPerPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 7), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileDefFramesPerPacket.setStatus('current')
sonusPktServProfileDefAudioEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileDefAudioEnable.setStatus('current')
sonusPktServProfileSilenceFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileSilenceFactor.setStatus('current')
sonusPktServProfileVInitPlayoutBufDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 10), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileVInitPlayoutBufDelay.setStatus('current')
sonusPktServProfileFaxRelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("never", 0), ("useIfCompressedAudio", 1), ("always", 2))).clone('never')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileFaxRelay.setStatus('current')
sonusPktServProfileDtmfRelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("never", 0), ("useIfCompressedAudio", 1), ("always", 2))).clone('never')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileDtmfRelay.setStatus('current')
sonusPktServProfileFallbackHandling = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disconnet", 1), ("continue", 2))).clone('continue')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileFallbackHandling.setStatus('current')
sonusPktServProfileTosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileTosValue.setStatus('current')
sonusPktServProfileDInitPlayoutBufDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 15), Integer32().clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileDInitPlayoutBufDelay.setStatus('current')
sonusPktServProfileDataRtpPayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(56)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileDataRtpPayloadType.setStatus('current')
sonusPktServProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 17), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileRowStatus.setStatus('current')
sonusPktServProfileG711SendSidPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileG711SendSidPackets.setStatus('current')
sonusPktServProfileG711SidRtpPayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(19)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileG711SidRtpPayloadType.setStatus('current')
sonusPktServProfileSidHeartbeat = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileSidHeartbeat.setStatus('current')
sonusPktServProfileRtcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileRtcp.setStatus('current')
sonusPktServProfilePacketLossThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfilePacketLossThreshold.setStatus('current')
sonusPktServProfilePacketLossAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("none", 0), ("trap", 1), ("trapAndDisconnect", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfilePacketLossAction.setStatus('current')
sonusPktServProfileRtpPeerAbsenceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("none", 0), ("trap", 1), ("trapAndDisconnect", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileRtpPeerAbsenceAction.setStatus('current')
sonusPktServProfileDtmfRelayOutOfBand = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileDtmfRelayOutOfBand.setStatus('current')
sonusPktServProfileDtmfRelayRemoveDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 13, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPktServProfileDtmfRelayRemoveDigits.setStatus('current')
sonusDisconnectTreatmentObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14))
sonusDiscTreatProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 1))
sonusDiscTreatProfileNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDiscTreatProfileNextIndex.setStatus('current')
sonusDiscTreatProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 1, 2), )
if mibBuilder.loadTexts: sonusDiscTreatProfileTable.setStatus('current')
sonusDiscTreatProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 1, 2, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusDiscTreatProfileIndex"))
if mibBuilder.loadTexts: sonusDiscTreatProfileEntry.setStatus('current')
sonusDiscTreatProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: sonusDiscTreatProfileIndex.setStatus('current')
sonusDiscTreatProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 1, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDiscTreatProfileName.setStatus('current')
sonusDiscTreatProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 1, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDiscTreatProfileRowStatus.setStatus('current')
sonusDiscTreatmentAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 2), )
if mibBuilder.loadTexts: sonusDiscTreatmentAdmnTable.setStatus('current')
sonusDiscTreatmentAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 2, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusDiscTreatmentProfileIndex"), (0, "SONUS-NODE-RESOURCES-MIB", "sonusDiscTreatmentIndex"))
if mibBuilder.loadTexts: sonusDiscTreatmentAdmnEntry.setStatus('current')
sonusDiscTreatmentProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: sonusDiscTreatmentProfileIndex.setStatus('current')
sonusDiscTreatmentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: sonusDiscTreatmentIndex.setStatus('current')
sonusDiscTreatmentReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDiscTreatmentReason.setStatus('current')
sonusDiscTreatmentSigSeqProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 2, 1, 4), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDiscTreatmentSigSeqProfileName.setStatus('current')
sonusDiscTreatmentRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 2, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDiscTreatmentRowStatus.setStatus('current')
sonusDiscSspGroupAdmn = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 3))
sonusDiscSspNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDiscSspNextIndex.setStatus('current')
sonusDiscSspAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 3, 2), )
if mibBuilder.loadTexts: sonusDiscSspAdmnTable.setStatus('current')
sonusDiscSspAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 3, 2, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusDiscSigSeqProfileIndex"))
if mibBuilder.loadTexts: sonusDiscSspAdmnEntry.setStatus('current')
sonusDiscSigSeqProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 3, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: sonusDiscSigSeqProfileIndex.setStatus('current')
sonusDiscSigSeqProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 3, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDiscSigSeqProfileName.setStatus('current')
sonusDiscSigSeqProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 3, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDiscSigSeqProfileRowStatus.setStatus('current')
sonusDiscSigSeqAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 4), )
if mibBuilder.loadTexts: sonusDiscSigSeqAdmnTable.setStatus('current')
sonusDiscSigSeqAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 4, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusDiscSigSequenceProfileIndex"), (0, "SONUS-NODE-RESOURCES-MIB", "sonusDiscSigSequenceIndex"))
if mibBuilder.loadTexts: sonusDiscSigSeqAdmnEntry.setStatus('current')
sonusDiscSigSequenceProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: sonusDiscSigSequenceProfileIndex.setStatus('current')
sonusDiscSigSequenceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 4, 1, 2), Integer32())
if mibBuilder.loadTexts: sonusDiscSigSequenceIndex.setStatus('current')
sonusDiscSigSequencePosition = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDiscSigSequencePosition.setStatus('current')
sonusDiscSigSequenceToken = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 8, 9, 16, 17))).clone(namedValues=NamedValues(("playTone", 7), ("playAnn", 8), ("delay", 9), ("clear", 16), ("exec", 17))).clone('clear')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDiscSigSequenceToken.setStatus('current')
sonusDiscSigSequenceParam1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDiscSigSequenceParam1.setStatus('current')
sonusDiscSigSequenceParam2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDiscSigSequenceParam2.setStatus('current')
sonusDiscSigSequenceAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 4, 1, 7), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDiscSigSequenceAdminState.setStatus('current')
sonusDiscSigSequenceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 14, 4, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDiscSigSequenceRowStatus.setStatus('current')
sonusTestCall = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 15))
sonusTestCallNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 15, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusTestCallNextIndex.setStatus('current')
sonusTestCallAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 15, 2), )
if mibBuilder.loadTexts: sonusTestCallAdmnTable.setStatus('current')
sonusTestCallAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 15, 2, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusTestCallAdmnIndex"))
if mibBuilder.loadTexts: sonusTestCallAdmnEntry.setStatus('current')
sonusTestCallAdmnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 15, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusTestCallAdmnIndex.setStatus('current')
sonusTestCallAdmnState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 15, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTestCallAdmnState.setStatus('current')
sonusTestCallAdmnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 15, 2, 1, 3), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTestCallAdmnName.setStatus('current')
sonusTestCallAdmnEndPointShelf = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 15, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTestCallAdmnEndPointShelf.setStatus('current')
sonusTestCallAdmnEndPointSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 15, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTestCallAdmnEndPointSlot.setStatus('current')
sonusTestCallAdmnEndPointPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 15, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTestCallAdmnEndPointPort.setStatus('current')
sonusTestCallAdmnEndPointChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 15, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTestCallAdmnEndPointChannel.setStatus('current')
sonusTestCallAdmnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 15, 2, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTestCallAdmnRowStatus.setStatus('current')
sonusTestCallAdmnType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 15, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("listen", 0), ("play", 1))).clone('listen')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTestCallAdmnType.setStatus('current')
sonusTestCallAdmnPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 15, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-50, 3)).clone(-6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTestCallAdmnPower.setStatus('current')
sonusTestCallAdmnFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 15, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3999)).clone(1004)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTestCallAdmnFrequency.setStatus('current')
sonusTestCallAdmnStatPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 15, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000, 3)).clone(-1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTestCallAdmnStatPower.setStatus('current')
sonusTestCallAdmnStatPowerTenths = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 15, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTestCallAdmnStatPowerTenths.setStatus('current')
sonusTestCallStatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 16), )
if mibBuilder.loadTexts: sonusTestCallStatTable.setStatus('current')
sonusTestCallStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 16, 1), ).setIndexNames((0, "SONUS-NODE-RESOURCES-MIB", "sonusTestCallStatIndex"))
if mibBuilder.loadTexts: sonusTestCallStatEntry.setStatus('current')
sonusTestCallStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusTestCallStatIndex.setStatus('current')
sonusTestCallStatCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 16, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusTestCallStatCallId.setStatus('current')
sonusTestCallStatState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 16, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusTestCallStatState.setStatus('current')
sonusTestCallStatTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 16, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusTestCallStatTime.setStatus('current')
sonusTestCallActionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 17))
sonusTestCallGcid = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 17, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTestCallGcid.setStatus('current')
sonusTestCallAction = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 1, 17, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("delete", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTestCallAction.setStatus('current')
sonusNodeResourcesMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 2))
sonusNodeResourcesMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 2, 0))
sonusNodeResourcesMIBNotificationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 2, 1))
sonusCallAdmissionChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 101))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCallAdmissionChangeReason.setStatus('current')
sonusNodeResourcesCallAdmissionSuspendedNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 2, 0, 1)).setObjects(("SONUS-NODE-RESOURCES-MIB", "sonusCallAdmissionChangeReason"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusNodeResourcesCallAdmissionSuspendedNotification.setStatus('current')
sonusNodeResourcesCallAdmissionEnabledNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 2, 0, 2)).setObjects(("SONUS-NODE-RESOURCES-MIB", "sonusCallAdmissionChangeReason"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusNodeResourcesCallAdmissionEnabledNotification.setStatus('current')
sonusNodeResourcesCallTraceHitNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 2, 2, 2, 0, 3)).setObjects(("SONUS-NODE-RESOURCES-MIB", "sonusCallTraceCalledNumber"), ("SONUS-NODE-RESOURCES-MIB", "sonusCallTraceCallingNumber"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusNodeResourcesCallTraceHitNotification.setStatus('current')
mibBuilder.exportSymbols("SONUS-NODE-RESOURCES-MIB", sonusServProfileCttTestType=sonusServProfileCttTestType, sonusActiveCallEntry=sonusActiveCallEntry, sonusDiscTreatProfileIndex=sonusDiscTreatProfileIndex, sonusStaticCallNextIndex=sonusStaticCallNextIndex, sonusTonePkgElem=sonusTonePkgElem, sonusTestCallAdmnEndPointChannel=sonusTestCallAdmnEndPointChannel, sonusActiveCallSlotIndex=sonusActiveCallSlotIndex, sonusToneProfileTone2Freq=sonusToneProfileTone2Freq, sonusSonicBusStatEntry=sonusSonicBusStatEntry, sonusStaticCallAdmnEntry=sonusStaticCallAdmnEntry, sonusActiveCallEgressPstnChannelNum=sonusActiveCallEgressPstnChannelNum, sonusDiscSigSeqAdmnTable=sonusDiscSigSeqAdmnTable, sonusActiveCallId=sonusActiveCallId, sonusActiveCallEgressEpType=sonusActiveCallEgressEpType, sonusDiscTreatProfile=sonusDiscTreatProfile, sonusCktServProfileBandwidth=sonusCktServProfileBandwidth, sonusStaticCallStatEntry=sonusStaticCallStatEntry, sonusToneProfileTone1Power=sonusToneProfileTone1Power, sonusStaticCallAdmnRowStatus=sonusStaticCallAdmnRowStatus, sonusActiveCallEgressPstnChannelCount=sonusActiveCallEgressPstnChannelCount, sonusActiveCallState=sonusActiveCallState, sonusCallTraceLevel=sonusCallTraceLevel, sonusPktServProfileRowStatus=sonusPktServProfileRowStatus, sonusTestCallStatCallId=sonusTestCallStatCallId, sonusNodeResourcesMIBNotifications=sonusNodeResourcesMIBNotifications, sonusDiscSigSequenceToken=sonusDiscSigSequenceToken, sonusTonePackageTable=sonusTonePackageTable, sonusPktServProfileNextIndex=sonusPktServProfileNextIndex, sonusPktServProfilePrfdFramesPerPacket=sonusPktServProfilePrfdFramesPerPacket, sonusDigitProfileDtmfDetTwistCutoff=sonusDigitProfileDtmfDetTwistCutoff, sonusActiveCallIngressServProfile=sonusActiveCallIngressServProfile, sonusSonicBusStatNumCalls=sonusSonicBusStatNumCalls, sonusDigitProfile=sonusDigitProfile, sonusPktServProfileDataRtpPayloadType=sonusPktServProfileDataRtpPayloadType, sonusDiscSigSequenceProfileIndex=sonusDiscSigSequenceProfileIndex, sonusTonePackageName=sonusTonePackageName, sonusCallTraceType=sonusCallTraceType, sonusTestCallAdmnPower=sonusTestCallAdmnPower, sonusActiveCallIngressRemoteIpSockAddr=sonusActiveCallIngressRemoteIpSockAddr, sonusDigitProfileIndex=sonusDigitProfileIndex, sonusActiveCallEgressLocalIpSockAddr=sonusActiveCallEgressLocalIpSockAddr, sonusPktServProfileDtmfRelay=sonusPktServProfileDtmfRelay, sonusCktServProfileCapability=sonusCktServProfileCapability, sonusActiveCallIngressLocalIpSockAddr=sonusActiveCallIngressLocalIpSockAddr, sonusDiscSigSequenceParam2=sonusDiscSigSequenceParam2, sonusServProfileCapability=sonusServProfileCapability, sonusActiveCallAddressTransPerformed=sonusActiveCallAddressTransPerformed, sonusPktServProfilePacketLossAction=sonusPktServProfilePacketLossAction, sonusStaticCallStatCallId=sonusStaticCallStatCallId, sonusCallResCallId=sonusCallResCallId, sonusStaticCallStatTime=sonusStaticCallStatTime, sonusSonicBusStatShelfIndex=sonusSonicBusStatShelfIndex, sonusTonePkgElemRowStatus=sonusTonePkgElemRowStatus, sonusServProfileVCktBandwidth=sonusServProfileVCktBandwidth, sonusCallTraceCalledNumber=sonusCallTraceCalledNumber, sonusToneObjects=sonusToneObjects, sonusToneProfileModPower=sonusToneProfileModPower, sonusToneProfileRowStatus=sonusToneProfileRowStatus, sonusCktServProfileState=sonusCktServProfileState, sonusToneProfileNextIndex=sonusToneProfileNextIndex, sonusActiveCallInterarrivalJitter=sonusActiveCallInterarrivalJitter, sonusToneProfileMake1=sonusToneProfileMake1, sonusToneProfileCarrierFreq=sonusToneProfileCarrierFreq, sonusActiveCallCalledNum=sonusActiveCallCalledNum, sonusStaticCallAdmnEndPointBShelf=sonusStaticCallAdmnEndPointBShelf, sonusCktServProfile=sonusCktServProfile, sonusServProfileDPktRtpPayloadType=sonusServProfileDPktRtpPayloadType, sonusPktServProfileSidHeartbeat=sonusPktServProfileSidHeartbeat, sonusCallTraceState=sonusCallTraceState, sonusCallTraceRowStatus=sonusCallTraceRowStatus, sonusServProfileVPktMaxNetworkJitter=sonusServProfileVPktMaxNetworkJitter, sonusTestCallAdmnType=sonusTestCallAdmnType, sonusActiveCallPacketsSent=sonusActiveCallPacketsSent, sonusCallPegCountsAttempts=sonusCallPegCountsAttempts, sonusTonePkgElemIndex=sonusTonePkgElemIndex, sonusCktServProfileName=sonusCktServProfileName, sonusTonePkgElemTable=sonusTonePkgElemTable, sonusCallResMgrShelfIndex=sonusCallResMgrShelfIndex, sonusActiveCallIngressPstnChannelNum=sonusActiveCallIngressPstnChannelNum, sonusToneProfileEntry=sonusToneProfileEntry, sonusToneProfileIndex=sonusToneProfileIndex, sonusCallResMgrHandle=sonusCallResMgrHandle, sonusDiscSigSequenceAdminState=sonusDiscSigSequenceAdminState, sonusActiveCallSonicBusUnitsAllocated=sonusActiveCallSonicBusUnitsAllocated, sonusDiscTreatProfileEntry=sonusDiscTreatProfileEntry, sonusToneProfileMake3=sonusToneProfileMake3, sonusPktServProfileDefAudioEnable=sonusPktServProfileDefAudioEnable, sonusCktServProfileRowStatus=sonusCktServProfileRowStatus, sonusCktServProfileCttMinReleaseTime=sonusCktServProfileCttMinReleaseTime, sonusServProfileVPktEncoding=sonusServProfileVPktEncoding, sonusPktServProfileDefFramesPerPacket=sonusPktServProfileDefFramesPerPacket, sonusDiscSigSeqProfileIndex=sonusDiscSigSeqProfileIndex, sonusActiveCallIngressPstnChannelBitMap=sonusActiveCallIngressPstnChannelBitMap, sonusPktServProfileDestProtocol=sonusPktServProfileDestProtocol, sonusDiscTreatProfileTable=sonusDiscTreatProfileTable, sonusCallPegCountsReset=sonusCallPegCountsReset, sonusCallTraceIndex=sonusCallTraceIndex, sonusCallTrace=sonusCallTrace, sonusNodeResourcesMIBNotificationsObjects=sonusNodeResourcesMIBNotificationsObjects, sonusSonicBusStatSduCount=sonusSonicBusStatSduCount, sonusCallResMgrSlotIndex=sonusCallResMgrSlotIndex, sonusDigitProfileGenBreak=sonusDigitProfileGenBreak, sonusCallPegCountsActiveCallsNonUser=sonusCallPegCountsActiveCallsNonUser, sonusStaticCallAction=sonusStaticCallAction, sonusPktServProfileFaxRelay=sonusPktServProfileFaxRelay, sonusTestCallAdmnTable=sonusTestCallAdmnTable, sonusStaticCallAdmnEndPointAPort=sonusStaticCallAdmnEndPointAPort, sonusTestCallAdmnEndPointShelf=sonusTestCallAdmnEndPointShelf, sonusCktServProfileCttTestType=sonusCktServProfileCttTestType, sonusDiscSigSequenceParam1=sonusDiscSigSequenceParam1, sonusStaticCallAdmnEndPointBType=sonusStaticCallAdmnEndPointBType, sonusNodeResourcesCallAdmissionSuspendedNotification=sonusNodeResourcesCallAdmissionSuspendedNotification, sonusActiveCallTable=sonusActiveCallTable, sonusStaticCallAdmnEndPointBRemoteIpAddress=sonusStaticCallAdmnEndPointBRemoteIpAddress, sonusToneProfileTable=sonusToneProfileTable, sonusDigitProfileGenPower=sonusDigitProfileGenPower, sonusStaticCallAdmnEndPointAShelf=sonusStaticCallAdmnEndPointAShelf, sonusTestCallStatTime=sonusTestCallStatTime, sonusToneProfileSignalFreq=sonusToneProfileSignalFreq, sonusStaticCallAdmnCircuitMode=sonusStaticCallAdmnCircuitMode, sonusCallResCallIndex=sonusCallResCallIndex, sonusCktServProfileInterworkingXfrCap=sonusCktServProfileInterworkingXfrCap, sonusActiveCallIngressIpDestGwName=sonusActiveCallIngressIpDestGwName, sonusCktServProfileDataRestrictedCfg=sonusCktServProfileDataRestrictedCfg, sonusDigitProfileType=sonusDigitProfileType, sonusDiscTreatmentRowStatus=sonusDiscTreatmentRowStatus, sonusTonePkgElemEntry=sonusTonePkgElemEntry, sonusDiscTreatmentAdmnEntry=sonusDiscTreatmentAdmnEntry, sonusToneTypeRowStatus=sonusToneTypeRowStatus, sonusPktServProfileRtpPeerAbsenceAction=sonusPktServProfileRtpPeerAbsenceAction, sonusStaticCallAdmnEndPointASlot=sonusStaticCallAdmnEndPointASlot, sonusActiveCallEgressIpDestGwName=sonusActiveCallEgressIpDestGwName, sonusPktServProfileEntry=sonusPktServProfileEntry, sonusServProfileVCktNecEnable=sonusServProfileVCktNecEnable, sonusServProfileCttMinDetectTime=sonusServProfileCttMinDetectTime, sonusStaticCallAdmnTable=sonusStaticCallAdmnTable, sonusServProfileEntry=sonusServProfileEntry, sonusDiscSigSequenceIndex=sonusDiscSigSequenceIndex, sonusActiveCallEgressPstnPortNum=sonusActiveCallEgressPstnPortNum, sonusToneType=sonusToneType, sonusStaticCall=sonusStaticCall, sonusActiveCallPacketsLost=sonusActiveCallPacketsLost, sonusStaticCallAdmnEndPointAServProfile=sonusStaticCallAdmnEndPointAServProfile, sonusStaticCallStatTable=sonusStaticCallStatTable, sonusActiveCallIngressSgType=sonusActiveCallIngressSgType, sonusTestCallAdmnState=sonusTestCallAdmnState, sonusToneTypeNextIndex=sonusToneTypeNextIndex, sonusTonePkgElemToneTypeRef=sonusTonePkgElemToneTypeRef, sonusDiscSigSequencePosition=sonusDiscSigSequencePosition, sonusServProfileNextIndex=sonusServProfileNextIndex, sonusDisconnectTreatmentObjects=sonusDisconnectTreatmentObjects, sonusNodeResourcesMIBNotificationsPrefix=sonusNodeResourcesMIBNotificationsPrefix, sonusActiveCallPacketLatency=sonusActiveCallPacketLatency, sonusCktServProfileEntry=sonusCktServProfileEntry, sonusPktServProfileIndex=sonusPktServProfileIndex, sonusCktServProfileNextIndex=sonusCktServProfileNextIndex, sonusStaticCallGcid=sonusStaticCallGcid, sonusPktServProfileDtmfRelayRemoveDigits=sonusPktServProfileDtmfRelayRemoveDigits, sonusCktServProfileIndex=sonusCktServProfileIndex, sonusCallResId=sonusCallResId, sonusCallPegCountsTable=sonusCallPegCountsTable, sonusActiveCallEgressRemoteIpSockAddr=sonusActiveCallEgressRemoteIpSockAddr, sonusToneProfileBreak1=sonusToneProfileBreak1, sonusDiscTreatmentAdmnTable=sonusDiscTreatmentAdmnTable, sonusSonicBusStatTable=sonusSonicBusStatTable, sonusDiscTreatProfileRowStatus=sonusDiscTreatProfileRowStatus, sonusDiscSspAdmnEntry=sonusDiscSspAdmnEntry, sonusActiveCallIndex=sonusActiveCallIndex, sonusCallResTable=sonusCallResTable, sonusDiscSspNextIndex=sonusDiscSspNextIndex, sonusTonePkgElemToneProfileRef=sonusTonePkgElemToneProfileRef, sonusActiveCallPacketsReceived=sonusActiveCallPacketsReceived, sonusTestCallNextIndex=sonusTestCallNextIndex, sonusDigitProfileTable=sonusDigitProfileTable, sonusStaticCallAdmnEndPointAChannel=sonusStaticCallAdmnEndPointAChannel, sonusToneProfileTone1Freq=sonusToneProfileTone1Freq, sonusCallTraceCallingNumber=sonusCallTraceCallingNumber, sonusTestCallAdmnEntry=sonusTestCallAdmnEntry, sonusToneProfileRepeat=sonusToneProfileRepeat, sonusToneProfileGenerationMethod=sonusToneProfileGenerationMethod, sonusTestCallAdmnEndPointSlot=sonusTestCallAdmnEndPointSlot, sonusActiveCallDuration=sonusActiveCallDuration, sonusToneProfileTone2Power=sonusToneProfileTone2Power, sonusToneProfileModIndex=sonusToneProfileModIndex, sonusTonePackageIndex=sonusTonePackageIndex, sonusActiveCallOrigCalledNum=sonusActiveCallOrigCalledNum, sonusStaticCallAdmnIndex=sonusStaticCallAdmnIndex, sonusServProfileType=sonusServProfileType, sonusActiveCallEgressServProfile=sonusActiveCallEgressServProfile, sonusTonePkgElemTonePackageRef=sonusTonePkgElemTonePackageRef, sonusCallResType=sonusCallResType, sonusStaticCallActionObjects=sonusStaticCallActionObjects, sonusCktServProfileCttTimeout=sonusCktServProfileCttTimeout, sonusToneProfileName=sonusToneProfileName, sonusCallPegCountsCompletions=sonusCallPegCountsCompletions, sonusCktServProfileAudioEncoding=sonusCktServProfileAudioEncoding, sonusCallResIndex=sonusCallResIndex, sonusCallPegCountsStableCalls=sonusCallPegCountsStableCalls, sonusCallResSlotIndex=sonusCallResSlotIndex, sonusPktServProfileRtcp=sonusPktServProfileRtcp, sonusTestCallAdmnName=sonusTestCallAdmnName, sonusPktServProfileVInitPlayoutBufDelay=sonusPktServProfileVInitPlayoutBufDelay, sonusTestCall=sonusTestCall, PYSNMP_MODULE_ID=sonusNodeResourcesMIB, sonusPktServProfileName=sonusPktServProfileName, sonusCallTraceTable=sonusCallTraceTable, sonusSonicBusStatBwAllocated=sonusSonicBusStatBwAllocated, sonusDigitProfileGenMake=sonusDigitProfileGenMake, sonusTonePackageNextIndex=sonusTonePackageNextIndex, sonusToneProfile=sonusToneProfile, sonusCallTraceName=sonusCallTraceName, sonusToneTypeTable=sonusToneTypeTable, sonusDigitProfileRowStatus=sonusDigitProfileRowStatus, sonusActiveCallEgressPstnChannelBitMap=sonusActiveCallEgressPstnChannelBitMap, sonusServProfileVPktFrameSize=sonusServProfileVPktFrameSize, sonusStaticCallAdmnEndPointBPort=sonusStaticCallAdmnEndPointBPort, sonusCallPegCountsShelfIndex=sonusCallPegCountsShelfIndex, sonusServProfileCttMinReleaseTime=sonusServProfileCttMinReleaseTime, sonusStaticCallAdmnEndPointBSlot=sonusStaticCallAdmnEndPointBSlot, sonusActiveCallIngressPstnTrunk=sonusActiveCallIngressPstnTrunk, sonusDigitProfileNextIndex=sonusDigitProfileNextIndex, sonusServProfileVPktFramesPerPacket=sonusServProfileVPktFramesPerPacket, sonusDigitProfileDetMinOffDuration=sonusDigitProfileDetMinOffDuration, sonusTestCallStatEntry=sonusTestCallStatEntry, sonusStaticCallAdmnEndPointBRemoteRTPPort=sonusStaticCallAdmnEndPointBRemoteRTPPort, sonusNodeResourcesMIBObjects=sonusNodeResourcesMIBObjects, sonusDigitProfileDetMinPower=sonusDigitProfileDetMinPower, sonusPktServProfile=sonusPktServProfile, sonusActiveCallEgressSgType=sonusActiveCallEgressSgType, sonusPktServProfileFallbackHandling=sonusPktServProfileFallbackHandling, sonusServProfileVPktTosValue=sonusServProfileVPktTosValue, sonusActiveCallIngressPstnChannelCount=sonusActiveCallIngressPstnChannelCount, sonusTestCallGcid=sonusTestCallGcid, sonusCktServProfileTable=sonusCktServProfileTable, sonusToneTypeEntry=sonusToneTypeEntry, sonusServProfileDPktMaxNetworkJitter=sonusServProfileDPktMaxNetworkJitter, sonusServProfileName=sonusServProfileName, sonusTestCallAction=sonusTestCallAction, sonusDiscTreatmentSigSeqProfileName=sonusDiscTreatmentSigSeqProfileName, sonusNodeResourcesCallAdmissionEnabledNotification=sonusNodeResourcesCallAdmissionEnabledNotification, sonusDiscSigSeqProfileName=sonusDiscSigSeqProfileName, sonusPktServProfileDtmfRelayOutOfBand=sonusPktServProfileDtmfRelayOutOfBand, sonusDiscTreatmentIndex=sonusDiscTreatmentIndex, sonusStaticCallAdmnName=sonusStaticCallAdmnName, sonusServProfile=sonusServProfile, sonusDiscTreatProfileName=sonusDiscTreatProfileName, sonusServProfileRowStatus=sonusServProfileRowStatus, sonusToneTypeName=sonusToneTypeName, sonusToneProfileMake2=sonusToneProfileMake2, sonusCktServProfileNecEnable=sonusCktServProfileNecEnable, sonusActiveCallCallingNum=sonusActiveCallCallingNum, sonusTestCallStatIndex=sonusTestCallStatIndex, sonusServProfileTable=sonusServProfileTable, sonusStaticCallAdmnEndPointBChannel=sonusStaticCallAdmnEndPointBChannel)
mibBuilder.exportSymbols("SONUS-NODE-RESOURCES-MIB", sonusActiveCallOctetsReceived=sonusActiveCallOctetsReceived, sonusStaticCallAdmnEndPointBLocalRTPPort=sonusStaticCallAdmnEndPointBLocalRTPPort, sonusStaticCallAdmnState=sonusStaticCallAdmnState, sonusTestCallAdmnFrequency=sonusTestCallAdmnFrequency, sonusTestCallAdmnStatPowerTenths=sonusTestCallAdmnStatPowerTenths, sonusDiscTreatProfileNextIndex=sonusDiscTreatProfileNextIndex, sonusCallTraceEntry=sonusCallTraceEntry, sonusServProfileIndex=sonusServProfileIndex, sonusActiveCallIngressPstnSlotNum=sonusActiveCallIngressPstnSlotNum, sonusDigitProfileMfr1GenMakeKp=sonusDigitProfileMfr1GenMakeKp, sonusActiveCallShelfIndex=sonusActiveCallShelfIndex, sonusCallResEntry=sonusCallResEntry, sonusTestCallAdmnIndex=sonusTestCallAdmnIndex, sonusCallPegCountsStableCallsNonUser=sonusCallPegCountsStableCallsNonUser, sonusTestCallAdmnStatPower=sonusTestCallAdmnStatPower, sonusDigitProfileEntry=sonusDigitProfileEntry, sonusPktServProfilePrfdAudioEncoding=sonusPktServProfilePrfdAudioEncoding, sonusActiveCallScenarioType=sonusActiveCallScenarioType, sonusCallPegCountsEntry=sonusCallPegCountsEntry, sonusCallPegCountsActiveCalls=sonusCallPegCountsActiveCalls, sonusTonePackageEntry=sonusTonePackageEntry, sonusActiveCallEgressPstnTrunk=sonusActiveCallEgressPstnTrunk, sonusActiveCallIngressPstnPortNum=sonusActiveCallIngressPstnPortNum, sonusDiscTreatmentProfileIndex=sonusDiscTreatmentProfileIndex, sonusToneTypeIndex=sonusToneTypeIndex, sonusCktServProfileDtmfProfileName=sonusCktServProfileDtmfProfileName, sonusDiscSigSequenceRowStatus=sonusDiscSigSequenceRowStatus, sonusCallTraceNextIndex=sonusCallTraceNextIndex, sonusStaticCallStatState=sonusStaticCallStatState, sonusStaticCallAdmnEndPointBServProfile=sonusStaticCallAdmnEndPointBServProfile, sonusTestCallAdmnEndPointPort=sonusTestCallAdmnEndPointPort, sonusActiveCallNumResources=sonusActiveCallNumResources, sonusTestCallActionObjects=sonusTestCallActionObjects, sonusNodeResourcesCallTraceHitNotification=sonusNodeResourcesCallTraceHitNotification, sonusPktServProfileSilenceFactor=sonusPktServProfileSilenceFactor, sonusCallPegCountsUpdates=sonusCallPegCountsUpdates, sonusToneProfileBreak3=sonusToneProfileBreak3, sonusPktServProfileG711SendSidPackets=sonusPktServProfileG711SendSidPackets, sonusDiscTreatmentReason=sonusDiscTreatmentReason, sonusServProfileDPktRestrictedCfg=sonusServProfileDPktRestrictedCfg, sonusDiscSigSeqAdmnEntry=sonusDiscSigSeqAdmnEntry, sonusTonePackageRowStatus=sonusTonePackageRowStatus, sonusCallResShelfIndex=sonusCallResShelfIndex, sonusPktServProfileDInitPlayoutBufDelay=sonusPktServProfileDInitPlayoutBufDelay, sonusPktServProfileTable=sonusPktServProfileTable, sonusTestCallAdmnRowStatus=sonusTestCallAdmnRowStatus, sonusServProfileState=sonusServProfileState, sonusServProfileVCktEncoding=sonusServProfileVCktEncoding, sonusTestCallStatState=sonusTestCallStatState, sonusActiveCallEgressPstnSlotNum=sonusActiveCallEgressPstnSlotNum, sonusCallAdmissionChangeReason=sonusCallAdmissionChangeReason, sonusStaticCallStatIndex=sonusStaticCallStatIndex, sonusDiscSspAdmnTable=sonusDiscSspAdmnTable, sonusTonePackage=sonusTonePackage, sonusTestCallStatTable=sonusTestCallStatTable, sonusPktServProfileState=sonusPktServProfileState, sonusDigitProfileDetMinOnDuration=sonusDigitProfileDetMinOnDuration, sonusStaticCallAdmnEndPointBLocalIpAddress=sonusStaticCallAdmnEndPointBLocalIpAddress, sonusActiveCallPacketsDiscarded=sonusActiveCallPacketsDiscarded, sonusActiveCallOctetsSent=sonusActiveCallOctetsSent, sonusNodeResourcesMIB=sonusNodeResourcesMIB, sonusCktServProfileCttMinDetectTime=sonusCktServProfileCttMinDetectTime, sonusPktServProfileTosValue=sonusPktServProfileTosValue, sonusDiscSigSeqProfileRowStatus=sonusDiscSigSeqProfileRowStatus, sonusDigitProfileDetFreqAcceptRange=sonusDigitProfileDetFreqAcceptRange, sonusCallPegCountsSlotIndex=sonusCallPegCountsSlotIndex, sonusServProfileCttTimeout=sonusServProfileCttTimeout, sonusToneProfileBreak2=sonusToneProfileBreak2, sonusDigitProfileName=sonusDigitProfileName, sonusPktServProfileG711SidRtpPayloadType=sonusPktServProfileG711SidRtpPayloadType, sonusDiscSspGroupAdmn=sonusDiscSspGroupAdmn, sonusActiveCallIngressEpType=sonusActiveCallIngressEpType, sonusPktServProfilePacketLossThreshold=sonusPktServProfilePacketLossThreshold)
