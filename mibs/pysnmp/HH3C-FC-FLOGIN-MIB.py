#
# PySNMP MIB module HH3C-FC-FLOGIN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-FC-FLOGIN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:13:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
Hh3cFcRxMTU, Hh3cFcClassOfServices, Hh3cFcBbCredit, Hh3cFcNameId, Hh3cFcAddressId = mibBuilder.importSymbols("HH3C-FC-TC-MIB", "Hh3cFcRxMTU", "Hh3cFcClassOfServices", "Hh3cFcBbCredit", "Hh3cFcNameId", "Hh3cFcAddressId")
hh3cVsanIndex, hh3cSan = mibBuilder.importSymbols("HH3C-VSAN-MIB", "hh3cVsanIndex", "hh3cSan")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, ModuleIdentity, NotificationType, Counter64, IpAddress, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Integer32, Unsigned32, TimeTicks, MibIdentifier, iso, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "NotificationType", "Counter64", "IpAddress", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Integer32", "Unsigned32", "TimeTicks", "MibIdentifier", "iso", "Gauge32")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
hh3cFcFLogin = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 127, 3))
hh3cFcFLogin.setRevisions(('2013-02-27 11:00',))
if mibBuilder.loadTexts: hh3cFcFLogin.setLastUpdated('201302271100Z')
if mibBuilder.loadTexts: hh3cFcFLogin.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cFcFLoginMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 3, 1))
hh3cFcFLoginTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 3, 1, 1), )
if mibBuilder.loadTexts: hh3cFcFLoginTable.setStatus('current')
hh3cFcFLoginEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 3, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-VSAN-MIB", "hh3cVsanIndex"), (0, "HH3C-FC-FLOGIN-MIB", "hh3cFcFLoginIndex"))
if mibBuilder.loadTexts: hh3cFcFLoginEntry.setStatus('current')
hh3cFcFLoginIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 3, 1, 1, 1, 1), Hh3cFcAddressId())
if mibBuilder.loadTexts: hh3cFcFLoginIndex.setStatus('current')
hh3cFcFLoginPortNodeWWN = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 3, 1, 1, 1, 2), Hh3cFcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcFLoginPortNodeWWN.setStatus('current')
hh3cFcFLoginPortWWN = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 3, 1, 1, 1, 3), Hh3cFcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcFLoginPortWWN.setStatus('current')
hh3cFcFLoginPortFcId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 3, 1, 1, 1, 4), Hh3cFcAddressId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcFLoginPortFcId.setStatus('current')
hh3cFcFLoginRxBbCredit = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 3, 1, 1, 1, 5), Hh3cFcBbCredit()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcFLoginRxBbCredit.setStatus('current')
hh3cFcFLoginTxBbCredit = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 3, 1, 1, 1, 6), Hh3cFcBbCredit()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcFLoginTxBbCredit.setStatus('current')
hh3cFcFLoginClass2RxMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 3, 1, 1, 1, 7), Hh3cFcRxMTU()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcFLoginClass2RxMTU.setStatus('current')
hh3cFcFLoginClass3RxMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 3, 1, 1, 1, 8), Hh3cFcRxMTU()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcFLoginClass3RxMTU.setStatus('current')
hh3cFcFLoginSuppClassRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 3, 1, 1, 1, 9), Hh3cFcClassOfServices()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcFLoginSuppClassRequested.setStatus('current')
hh3cFcFLoginClass2ReqAgreed = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 3, 1, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcFLoginClass2ReqAgreed.setStatus('current')
hh3cFcFLoginClass3ReqAgreed = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 3, 1, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcFLoginClass3ReqAgreed.setStatus('current')
mibBuilder.exportSymbols("HH3C-FC-FLOGIN-MIB", hh3cFcFLoginClass2ReqAgreed=hh3cFcFLoginClass2ReqAgreed, hh3cFcFLoginClass3ReqAgreed=hh3cFcFLoginClass3ReqAgreed, PYSNMP_MODULE_ID=hh3cFcFLogin, hh3cFcFLoginTxBbCredit=hh3cFcFLoginTxBbCredit, hh3cFcFLoginTable=hh3cFcFLoginTable, hh3cFcFLoginPortWWN=hh3cFcFLoginPortWWN, hh3cFcFLoginIndex=hh3cFcFLoginIndex, hh3cFcFLoginPortNodeWWN=hh3cFcFLoginPortNodeWWN, hh3cFcFLoginEntry=hh3cFcFLoginEntry, hh3cFcFLoginRxBbCredit=hh3cFcFLoginRxBbCredit, hh3cFcFLoginClass2RxMTU=hh3cFcFLoginClass2RxMTU, hh3cFcFLogin=hh3cFcFLogin, hh3cFcFLoginSuppClassRequested=hh3cFcFLoginSuppClassRequested, hh3cFcFLoginMibObjects=hh3cFcFLoginMibObjects, hh3cFcFLoginPortFcId=hh3cFcFLoginPortFcId, hh3cFcFLoginClass3RxMTU=hh3cFcFLoginClass3RxMTU)
