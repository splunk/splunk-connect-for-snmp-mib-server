#
# PySNMP MIB module AUDITEC2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AUDITEC2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:15:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
sysName, = mibBuilder.importSymbols("SNMPv2-MIB", "sysName")
Counter32, ObjectIdentity, ModuleIdentity, Counter64, IpAddress, TimeTicks, Unsigned32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Bits, Integer32, iso, MibIdentifier, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "ModuleIdentity", "Counter64", "IpAddress", "TimeTicks", "Unsigned32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Bits", "Integer32", "iso", "MibIdentifier", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
auditec = ModuleIdentity((1, 3, 6, 1, 4, 1, 1774))
auditec.setRevisions(('2001-11-23 10:00', '2001-12-11 10:00',))
if mibBuilder.loadTexts: auditec.setLastUpdated('200112111000Z')
if mibBuilder.loadTexts: auditec.setOrganization('auditec Corp.')
probe = MibIdentifier((1, 3, 6, 1, 4, 1, 1774, 1))
action = MibIdentifier((1, 3, 6, 1, 4, 1, 1774, 2))
alarm = MibIdentifier((1, 3, 6, 1, 4, 1, 1774, 3))
group = MibIdentifier((1, 3, 6, 1, 4, 1, 1774, 4))
prbIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 1774, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prbIpAddr.setStatus('mandatory')
prbState = MibScalar((1, 3, 6, 1, 4, 1, 1774, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("alive", 0), ("waiting", 1), ("suspended", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prbState.setStatus('mandatory')
prbBasePath = MibScalar((1, 3, 6, 1, 4, 1, 1774, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prbBasePath.setStatus('mandatory')
prbGrpList = MibScalar((1, 3, 6, 1, 4, 1, 1774, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prbGrpList.setStatus('mandatory')
prbServerConnection = MibScalar((1, 3, 6, 1, 4, 1, 1774, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notConfigured", 1), ("disconnected", 2), ("connected", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prbServerConnection.setStatus('mandatory')
prbDiffGMT = MibScalar((1, 3, 6, 1, 4, 1, 1774, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prbDiffGMT.setStatus('mandatory')
prbNewtestMemory = MibScalar((1, 3, 6, 1, 4, 1, 1774, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prbNewtestMemory.setStatus('mandatory')
prbGrpStartTime = MibScalar((1, 3, 6, 1, 4, 1, 1774, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prbGrpStartTime.setStatus('mandatory')
prbLastHeartBeat = MibScalar((1, 3, 6, 1, 4, 1, 1774, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prbLastHeartBeat.setStatus('mandatory')
actType = MibScalar((1, 3, 6, 1, 4, 1, 1774, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(230, 231, 232, 234, 238, 239, 240, 241, 242, 243))).clone(namedValues=NamedValues(("suspend", 230), ("resume", 231), ("reboot", 232), ("changeGroup", 234), ("ackAlm", 238), ("runSce", 239), ("suspendSce", 240), ("resumeSce", 241), ("stopGroup", 242), ("startGroup", 243)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actType.setStatus('mandatory')
actParam = MibScalar((1, 3, 6, 1, 4, 1, 1774, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actParam.setStatus('mandatory')
almSce = MibScalar((1, 3, 6, 1, 4, 1, 1774, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: almSce.setStatus('mandatory')
almMsg = MibScalar((1, 3, 6, 1, 4, 1, 1774, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 129))).setMaxAccess("readonly")
if mibBuilder.loadTexts: almMsg.setStatus('mandatory')
almCode = MibScalar((1, 3, 6, 1, 4, 1, 1774, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: almCode.setStatus('mandatory')
almLevel = MibScalar((1, 3, 6, 1, 4, 1, 1774, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almLevel.setStatus('mandatory')
almOrd = MibScalar((1, 3, 6, 1, 4, 1, 1774, 3, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: almOrd.setStatus('mandatory')
grpName = MibScalar((1, 3, 6, 1, 4, 1, 1774, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: grpName.setStatus('mandatory')
grpNbQueue = MibScalar((1, 3, 6, 1, 4, 1, 1774, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: grpNbQueue.setStatus('mandatory')
grpNextTime = MibScalar((1, 3, 6, 1, 4, 1, 1774, 4, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: grpNextTime.setStatus('mandatory')
grpQueueList = MibTable((1, 3, 6, 1, 4, 1, 1774, 4, 4), )
if mibBuilder.loadTexts: grpQueueList.setStatus('mandatory')
queue = MibTableRow((1, 3, 6, 1, 4, 1, 1774, 4, 4, 1), ).setIndexNames((0, "AUDITEC2-MIB", "queIndex"))
if mibBuilder.loadTexts: queue.setStatus('mandatory')
queIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: queIndex.setStatus('mandatory')
queName = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: queName.setStatus('mandatory')
queType = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1))).clone(namedValues=NamedValues(("alarm", 2), ("user", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: queType.setStatus('mandatory')
queNbSce = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: queNbSce.setStatus('mandatory')
grpSceList = MibTable((1, 3, 6, 1, 4, 1, 1774, 4, 5), )
if mibBuilder.loadTexts: grpSceList.setStatus('mandatory')
scenario = MibTableRow((1, 3, 6, 1, 4, 1, 1774, 4, 5, 1), ).setIndexNames((0, "AUDITEC2-MIB", "sceQueIndex"), (0, "AUDITEC2-MIB", "sceIndex"))
if mibBuilder.loadTexts: scenario.setStatus('mandatory')
sceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceIndex.setStatus('mandatory')
sceQueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceQueIndex.setStatus('mandatory')
sceName = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceName.setStatus('mandatory')
sceType = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("user", 0), ("service", 1), ("alarm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceType.setStatus('mandatory')
sceUnavailObj = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceUnavailObj.setStatus('mandatory')
sceState = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4))).clone(namedValues=NamedValues(("ok", 0), ("unavailable", 1), ("alarm", 2), ("suspended", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceState.setStatus('mandatory')
sceNbExec = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceNbExec.setStatus('mandatory')
sceNbUnAvailExec = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceNbUnAvailExec.setStatus('mandatory')
sceStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 5, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceStartTime.setStatus('mandatory')
sceAccumulationMeasureDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceAccumulationMeasureDuration.setStatus('mandatory')
sceAccumulationUnavailDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceAccumulationUnavailDuration.setStatus('mandatory')
sceNbOrd = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 5, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceNbOrd.setStatus('mandatory')
sceState2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 5, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("init", 1), ("outOfRange", 2), ("suspended", 4), ("unavailable", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceState2.setStatus('mandatory')
grpOrdList = MibTable((1, 3, 6, 1, 4, 1, 1774, 4, 6), )
if mibBuilder.loadTexts: grpOrdList.setStatus('mandatory')
order = MibTableRow((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1), ).setIndexNames((0, "AUDITEC2-MIB", "ordQueIndex"), (0, "AUDITEC2-MIB", "ordSceIndex"), (0, "AUDITEC2-MIB", "ordIndex"))
if mibBuilder.loadTexts: order.setStatus('mandatory')
ordIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordIndex.setStatus('mandatory')
ordSceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordSceIndex.setStatus('mandatory')
ordQueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordQueIndex.setStatus('mandatory')
ordName = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordName.setStatus('mandatory')
ordType = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("tps", 0), ("num", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordType.setStatus('mandatory')
ordObjNbRef = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordObjNbRef.setStatus('mandatory')
ordRef = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordRef.setStatus('mandatory')
ordAccumulationNbRef = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordAccumulationNbRef.setStatus('mandatory')
ordCoef = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordCoef.setStatus('mandatory')
ordUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordUnit.setStatus('mandatory')
ordMin = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordMin.setStatus('mandatory')
ordMax = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordMax.setStatus('mandatory')
ordAccumulation = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordAccumulation.setStatus('mandatory')
ordAverage6 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordAverage6.setStatus('mandatory')
ordNbSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordNbSamples.setStatus('mandatory')
ordThreashold1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordThreashold1.setStatus('mandatory')
ordThreashold2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordThreashold2.setStatus('mandatory')
ordThreashold3 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordThreashold3.setStatus('mandatory')
ordThreashold4 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordThreashold4.setStatus('mandatory')
ordAccumulationNb1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordAccumulationNb1.setStatus('mandatory')
ordAccumulationNb2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordAccumulationNb2.setStatus('mandatory')
ordAccumulationNb3 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordAccumulationNb3.setStatus('mandatory')
ordAccumulationNb4 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordAccumulationNb4.setStatus('mandatory')
ordAccumulationNb5 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordAccumulationNb5.setStatus('mandatory')
ordNbUnavail = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordNbUnavail.setStatus('mandatory')
ordTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 26), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordTime.setStatus('mandatory')
ordValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordValue.setStatus('mandatory')
ordErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordErrCode.setStatus('mandatory')
ordPrev1Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 29), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordPrev1Time.setStatus('mandatory')
ordPrev1Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordPrev1Value.setStatus('mandatory')
ordPrev1ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordPrev1ErrCode.setStatus('mandatory')
ordPrev2Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 32), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordPrev2Time.setStatus('mandatory')
ordPrev2Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordPrev2Value.setStatus('mandatory')
ordPrev2ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordPrev2ErrCode.setStatus('mandatory')
ordPrev3Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 35), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordPrev3Time.setStatus('mandatory')
ordPrev3Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordPrev3Value.setStatus('mandatory')
ordPrev3ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordPrev3ErrCode.setStatus('mandatory')
ordPrev4Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 38), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordPrev4Time.setStatus('mandatory')
ordPrev4Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordPrev4Value.setStatus('mandatory')
ordPrev4ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordPrev4ErrCode.setStatus('mandatory')
ordPrev5Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 41), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordPrev5Time.setStatus('mandatory')
ordPrev5Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordPrev5Value.setStatus('mandatory')
ordPrev5ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 6, 1, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordPrev5ErrCode.setStatus('mandatory')
grpOrdTxtList = MibTable((1, 3, 6, 1, 4, 1, 1774, 4, 7), )
if mibBuilder.loadTexts: grpOrdTxtList.setStatus('mandatory')
orderTxt = MibTableRow((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1), ).setIndexNames((0, "AUDITEC2-MIB", "otxQueIndex"), (0, "AUDITEC2-MIB", "otxSceIndex"), (0, "AUDITEC2-MIB", "otxIndex"))
if mibBuilder.loadTexts: orderTxt.setStatus('mandatory')
otxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxIndex.setStatus('mandatory')
otxSceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxSceIndex.setStatus('mandatory')
otxQueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxQueIndex.setStatus('mandatory')
otxName = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxName.setStatus('mandatory')
otxNbSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxNbSamples.setStatus('mandatory')
otxNbUnavail = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxNbUnavail.setStatus('mandatory')
otxTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxTime.setStatus('mandatory')
otxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxValue.setStatus('mandatory')
otxErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxErrCode.setStatus('mandatory')
otxPrev1Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxPrev1Time.setStatus('mandatory')
otxPrev1Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxPrev1Value.setStatus('mandatory')
otxPrev1ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxPrev1ErrCode.setStatus('mandatory')
otxPrev2Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxPrev2Time.setStatus('mandatory')
otxPrev2Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxPrev2Value.setStatus('mandatory')
otxPrev2ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxPrev2ErrCode.setStatus('mandatory')
otxPrev3Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 16), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxPrev3Time.setStatus('mandatory')
otxPrev3Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxPrev3Value.setStatus('mandatory')
otxPrev3ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxPrev3ErrCode.setStatus('mandatory')
otxPrev4Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 19), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxPrev4Time.setStatus('mandatory')
otxPrev4Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxPrev4Value.setStatus('mandatory')
otxPrev4ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxPrev4ErrCode.setStatus('mandatory')
otxPrev5Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 22), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxPrev5Time.setStatus('mandatory')
otxPrev5Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxPrev5Value.setStatus('mandatory')
otxPrev5ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 7, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxPrev5ErrCode.setStatus('mandatory')
grpQueueByNameList = MibTable((1, 3, 6, 1, 4, 1, 1774, 4, 8), )
if mibBuilder.loadTexts: grpQueueByNameList.setStatus('mandatory')
queueBN = MibTableRow((1, 3, 6, 1, 4, 1, 1774, 4, 8, 1), ).setIndexNames((0, "AUDITEC2-MIB", "queBNName"))
if mibBuilder.loadTexts: queueBN.setStatus('mandatory')
queBNName = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: queBNName.setStatus('mandatory')
queBNType = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1))).clone(namedValues=NamedValues(("alarm", 2), ("user", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: queBNType.setStatus('mandatory')
queBNNbSce = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: queBNNbSce.setStatus('mandatory')
grpSceByNameList = MibTable((1, 3, 6, 1, 4, 1, 1774, 4, 9), )
if mibBuilder.loadTexts: grpSceByNameList.setStatus('mandatory')
scenarioBN = MibTableRow((1, 3, 6, 1, 4, 1, 1774, 4, 9, 1), ).setIndexNames((0, "AUDITEC2-MIB", "sceBNQueName"), (0, "AUDITEC2-MIB", "sceBNName"))
if mibBuilder.loadTexts: scenarioBN.setStatus('mandatory')
sceBNName = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceBNName.setStatus('mandatory')
sceBNQueName = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceBNQueName.setStatus('mandatory')
sceBNType = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("user", 0), ("service", 1), ("alarm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceBNType.setStatus('mandatory')
sceBNUnavailObj = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceBNUnavailObj.setStatus('mandatory')
sceBNState = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("init", 1), ("outOfRange", 2), ("suspended", 4), ("unavailable", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceBNState.setStatus('mandatory')
sceBNNbExec = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 9, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceBNNbExec.setStatus('mandatory')
sceBNNbUnAvailExec = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 9, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceBNNbUnAvailExec.setStatus('mandatory')
sceBNStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 9, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceBNStartTime.setStatus('mandatory')
sceBNAccumulationMeasureDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 9, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceBNAccumulationMeasureDuration.setStatus('mandatory')
sceBNAccumulationUnavailDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 9, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceBNAccumulationUnavailDuration.setStatus('mandatory')
sceBNNbOrd = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 9, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sceBNNbOrd.setStatus('mandatory')
grpOrdByNameList = MibTable((1, 3, 6, 1, 4, 1, 1774, 4, 10), )
if mibBuilder.loadTexts: grpOrdByNameList.setStatus('mandatory')
orderBN = MibTableRow((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1), ).setIndexNames((0, "AUDITEC2-MIB", "ordBNQueName"), (0, "AUDITEC2-MIB", "ordBNSceName"), (0, "AUDITEC2-MIB", "ordBNName"))
if mibBuilder.loadTexts: orderBN.setStatus('mandatory')
ordBNName = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNName.setStatus('mandatory')
ordBNSceName = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNSceName.setStatus('mandatory')
ordBNQueName = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNQueName.setStatus('mandatory')
ordBNType = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("tps", 0), ("num", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNType.setStatus('mandatory')
ordBNObjNbRef = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNObjNbRef.setStatus('mandatory')
ordBNRef = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNRef.setStatus('mandatory')
ordBNAccumulationNbRef = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNAccumulationNbRef.setStatus('mandatory')
ordBNCoef = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNCoef.setStatus('mandatory')
ordBNUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNUnit.setStatus('mandatory')
ordBNMin = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNMin.setStatus('mandatory')
ordBNMax = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNMax.setStatus('mandatory')
ordBNAccumulation = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNAccumulation.setStatus('mandatory')
ordBNAverage6 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNAverage6.setStatus('mandatory')
ordBNNbSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNNbSamples.setStatus('mandatory')
ordBNThreashold1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNThreashold1.setStatus('mandatory')
ordBNThreashold2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNThreashold2.setStatus('mandatory')
ordBNThreashold3 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNThreashold3.setStatus('mandatory')
ordBNThreashold4 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNThreashold4.setStatus('mandatory')
ordBNAccumulationNb1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNAccumulationNb1.setStatus('mandatory')
ordBNAccumulationNb2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNAccumulationNb2.setStatus('mandatory')
ordBNAccumulationNb3 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNAccumulationNb3.setStatus('mandatory')
ordBNAccumulationNb4 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNAccumulationNb4.setStatus('mandatory')
ordBNAccumulationNb5 = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNAccumulationNb5.setStatus('mandatory')
ordBNNbUnavail = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNNbUnavail.setStatus('mandatory')
ordBNTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 25), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNTime.setStatus('mandatory')
ordBNValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNValue.setStatus('mandatory')
ordBNErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNErrCode.setStatus('mandatory')
ordBNPrev1Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 28), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNPrev1Time.setStatus('mandatory')
ordBNPrev1Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNPrev1Value.setStatus('mandatory')
ordBNPrev1ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNPrev1ErrCode.setStatus('mandatory')
ordBNPrev2Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 31), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNPrev2Time.setStatus('mandatory')
ordBNPrev2Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNPrev2Value.setStatus('mandatory')
ordBNPrev2ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNPrev2ErrCode.setStatus('mandatory')
ordBNPrev3Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 34), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNPrev3Time.setStatus('mandatory')
ordBNPrev3Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNPrev3Value.setStatus('mandatory')
ordBNPrev3ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNPrev3ErrCode.setStatus('mandatory')
ordBNPrev4Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 37), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNPrev4Time.setStatus('mandatory')
ordBNPrev4Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNPrev4Value.setStatus('mandatory')
ordBNPrev4ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNPrev4ErrCode.setStatus('mandatory')
ordBNPrev5Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 40), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNPrev5Time.setStatus('mandatory')
ordBNPrev5Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNPrev5Value.setStatus('mandatory')
ordBNPrev5ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 10, 1, 42), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ordBNPrev5ErrCode.setStatus('mandatory')
grpOrdTxtByNameList = MibTable((1, 3, 6, 1, 4, 1, 1774, 4, 11), )
if mibBuilder.loadTexts: grpOrdTxtByNameList.setStatus('mandatory')
orderTxtBN = MibTableRow((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1), ).setIndexNames((0, "AUDITEC2-MIB", "otxBNQueName"), (0, "AUDITEC2-MIB", "otxBNSceName"), (0, "AUDITEC2-MIB", "otxBNName"))
if mibBuilder.loadTexts: orderTxtBN.setStatus('mandatory')
otxBNName = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNName.setStatus('mandatory')
otxBNSceName = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNSceName.setStatus('mandatory')
otxBNQueName = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNQueName.setStatus('mandatory')
otxBNNbSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNNbSamples.setStatus('mandatory')
otxBNNbUnavail = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNNbUnavail.setStatus('mandatory')
otxBNTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNTime.setStatus('mandatory')
otxBNValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNValue.setStatus('mandatory')
otxBNErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNErrCode.setStatus('mandatory')
otxBNPrev1Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNPrev1Time.setStatus('mandatory')
otxBNPrev1Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNPrev1Value.setStatus('mandatory')
otxBNPrev1ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNPrev1ErrCode.setStatus('mandatory')
otxBNPrev2Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNPrev2Time.setStatus('mandatory')
otxBNPrev2Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNPrev2Value.setStatus('mandatory')
otxBNPrev2ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNPrev2ErrCode.setStatus('mandatory')
otxBNPrev3Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNPrev3Time.setStatus('mandatory')
otxBNPrev3Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNPrev3Value.setStatus('mandatory')
otxBNPrev3ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNPrev3ErrCode.setStatus('mandatory')
otxBNPrev4Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 18), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNPrev4Time.setStatus('mandatory')
otxBNPrev4Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNPrev4Value.setStatus('mandatory')
otxBNPrev4ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNPrev4ErrCode.setStatus('mandatory')
otxBNPrev5Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 21), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNPrev5Time.setStatus('mandatory')
otxBNPrev5Value = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNPrev5Value.setStatus('mandatory')
otxBNPrev5ErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1774, 4, 11, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otxBNPrev5ErrCode.setStatus('mandatory')
probeAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 1774, 0, 1)).setObjects(("SNMPv2-MIB", "sysName"), ("AUDITEC2-MIB", "almSce"), ("AUDITEC2-MIB", "almMsg"))
if mibBuilder.loadTexts: probeAlarmEvent.setStatus('current')
probeAlarmEvent2 = NotificationType((1, 3, 6, 1, 4, 1, 1774, 0, 3)).setObjects(("SNMPv2-MIB", "sysName"), ("AUDITEC2-MIB", "almSce"), ("AUDITEC2-MIB", "almOrd"), ("AUDITEC2-MIB", "almCode"), ("AUDITEC2-MIB", "almLevel"), ("AUDITEC2-MIB", "almMsg"))
if mibBuilder.loadTexts: probeAlarmEvent2.setStatus('current')
mibBuilder.exportSymbols("AUDITEC2-MIB", otxName=otxName, otxBNName=otxBNName, ordAccumulation=ordAccumulation, queIndex=queIndex, grpNextTime=grpNextTime, otxBNPrev1Time=otxBNPrev1Time, sceNbOrd=sceNbOrd, queBNNbSce=queBNNbSce, ordMax=ordMax, otxBNPrev4Time=otxBNPrev4Time, ordNbUnavail=ordNbUnavail, PYSNMP_MODULE_ID=auditec, queBNName=queBNName, queNbSce=queNbSce, ordBNPrev5Value=ordBNPrev5Value, otxIndex=otxIndex, group=group, ordSceIndex=ordSceIndex, otxBNPrev1Value=otxBNPrev1Value, ordBNThreashold3=ordBNThreashold3, almSce=almSce, order=order, otxBNPrev2Time=otxBNPrev2Time, ordPrev1Time=ordPrev1Time, grpSceByNameList=grpSceByNameList, ordBNAccumulationNb5=ordBNAccumulationNb5, otxSceIndex=otxSceIndex, ordPrev5Value=ordPrev5Value, ordBNRef=ordBNRef, ordBNObjNbRef=ordBNObjNbRef, ordBNNbUnavail=ordBNNbUnavail, otxPrev1ErrCode=otxPrev1ErrCode, probeAlarmEvent=probeAlarmEvent, otxPrev1Value=otxPrev1Value, actParam=actParam, ordBNPrev2Value=ordBNPrev2Value, sceNbExec=sceNbExec, otxPrev3Value=otxPrev3Value, ordBNPrev2Time=ordBNPrev2Time, grpName=grpName, ordBNPrev5ErrCode=ordBNPrev5ErrCode, ordAccumulationNb5=ordAccumulationNb5, otxPrev5Time=otxPrev5Time, internet=internet, ordAverage6=ordAverage6, ordBNPrev3Time=ordBNPrev3Time, ordBNPrev4Value=ordBNPrev4Value, ordBNPrev1Time=ordBNPrev1Time, sceQueIndex=sceQueIndex, orderTxt=orderTxt, grpOrdTxtList=grpOrdTxtList, ordBNPrev1ErrCode=ordBNPrev1ErrCode, grpOrdTxtByNameList=grpOrdTxtByNameList, otxPrev2ErrCode=otxPrev2ErrCode, ordTime=ordTime, prbNewtestMemory=prbNewtestMemory, ordType=ordType, prbState=prbState, sceBNType=sceBNType, ordBNAccumulation=ordBNAccumulation, ordBNAccumulationNb1=ordBNAccumulationNb1, otxBNSceName=otxBNSceName, ordBNAccumulationNb3=ordBNAccumulationNb3, grpOrdByNameList=grpOrdByNameList, ordBNMin=ordBNMin, ordBNAccumulationNbRef=ordBNAccumulationNbRef, prbLastHeartBeat=prbLastHeartBeat, almLevel=almLevel, sceUnavailObj=sceUnavailObj, ordPrev4Value=ordPrev4Value, otxPrev5ErrCode=otxPrev5ErrCode, ordBNPrev3Value=ordBNPrev3Value, almMsg=almMsg, queue=queue, ordBNPrev4Time=ordBNPrev4Time, ordBNAccumulationNb2=ordBNAccumulationNb2, ordBNAverage6=ordBNAverage6, ordPrev5ErrCode=ordPrev5ErrCode, otxPrev4Value=otxPrev4Value, sceState=sceState, almCode=almCode, ordNbSamples=ordNbSamples, sceBNUnavailObj=sceBNUnavailObj, ordAccumulationNb4=ordAccumulationNb4, prbServerConnection=prbServerConnection, ordPrev2ErrCode=ordPrev2ErrCode, sceBNAccumulationUnavailDuration=sceBNAccumulationUnavailDuration, alarm=alarm, prbBasePath=prbBasePath, ordBNPrev1Value=ordBNPrev1Value, sceStartTime=sceStartTime, otxBNTime=otxBNTime, otxPrev3ErrCode=otxPrev3ErrCode, ordRef=ordRef, ordBNErrCode=ordBNErrCode, otxBNPrev5Time=otxBNPrev5Time, ordMin=ordMin, otxPrev1Time=otxPrev1Time, ordAccumulationNb1=ordAccumulationNb1, ordBNPrev3ErrCode=ordBNPrev3ErrCode, ordErrCode=ordErrCode, otxNbUnavail=otxNbUnavail, ordBNPrev4ErrCode=ordBNPrev4ErrCode, otxBNPrev4ErrCode=otxBNPrev4ErrCode, sceIndex=sceIndex, otxBNPrev2Value=otxBNPrev2Value, sceName=sceName, ordAccumulationNb2=ordAccumulationNb2, auditec=auditec, sceAccumulationMeasureDuration=sceAccumulationMeasureDuration, sceAccumulationUnavailDuration=sceAccumulationUnavailDuration, ordObjNbRef=ordObjNbRef, ordPrev4ErrCode=ordPrev4ErrCode, queBNType=queBNType, ordPrev3ErrCode=ordPrev3ErrCode, ordPrev3Value=ordPrev3Value, ordBNPrev5Time=ordBNPrev5Time, otxBNPrev2ErrCode=otxBNPrev2ErrCode, ordBNAccumulationNb4=ordBNAccumulationNb4, prbDiffGMT=prbDiffGMT, otxErrCode=otxErrCode, ordBNType=ordBNType, sceBNQueName=sceBNQueName, otxQueIndex=otxQueIndex, ordBNPrev2ErrCode=ordBNPrev2ErrCode, orderBN=orderBN, ordBNThreashold4=ordBNThreashold4, otxBNPrev3Value=otxBNPrev3Value, grpNbQueue=grpNbQueue, ordQueIndex=ordQueIndex, sceBNState=sceBNState, sceBNStartTime=sceBNStartTime, sceState2=sceState2, ordName=ordName, otxNbSamples=otxNbSamples, sceBNNbOrd=sceBNNbOrd, ordBNName=ordBNName, ordBNTime=ordBNTime, ordUnit=ordUnit, sceBNNbUnAvailExec=sceBNNbUnAvailExec, ordBNSceName=ordBNSceName, actType=actType, ordBNThreashold2=ordBNThreashold2, ordPrev1ErrCode=ordPrev1ErrCode, queType=queType, ordBNCoef=ordBNCoef, otxPrev5Value=otxPrev5Value, grpSceList=grpSceList, scenario=scenario, orderTxtBN=orderTxtBN, probe=probe, ordValue=ordValue, otxBNErrCode=otxBNErrCode, queueBN=queueBN, ordPrev2Time=ordPrev2Time, sceType=sceType, otxBNNbUnavail=otxBNNbUnavail, otxPrev4ErrCode=otxPrev4ErrCode, grpQueueList=grpQueueList, otxBNPrev5ErrCode=otxBNPrev5ErrCode, sceBNNbExec=sceBNNbExec, prbIpAddr=prbIpAddr, otxPrev2Time=otxPrev2Time, otxPrev2Value=otxPrev2Value, otxPrev3Time=otxPrev3Time, ordPrev1Value=ordPrev1Value, ordBNThreashold1=ordBNThreashold1, sceNbUnAvailExec=sceNbUnAvailExec, ordAccumulationNb3=ordAccumulationNb3, ordPrev3Time=ordPrev3Time, ordBNNbSamples=ordBNNbSamples, ordPrev2Value=ordPrev2Value, otxPrev4Time=otxPrev4Time, ordThreashold1=ordThreashold1, otxBNPrev3Time=otxBNPrev3Time, otxBNPrev4Value=otxBNPrev4Value, ordBNUnit=ordBNUnit, action=action, otxBNPrev3ErrCode=otxBNPrev3ErrCode, ordPrev4Time=ordPrev4Time, ordThreashold2=ordThreashold2, otxValue=otxValue, private=private, prbGrpList=prbGrpList, ordBNValue=ordBNValue, ordPrev5Time=ordPrev5Time, enterprises=enterprises, sceBNAccumulationMeasureDuration=sceBNAccumulationMeasureDuration, ordBNQueName=ordBNQueName, otxTime=otxTime, ordThreashold3=ordThreashold3, ordCoef=ordCoef, ordAccumulationNbRef=ordAccumulationNbRef, scenarioBN=scenarioBN, grpOrdList=grpOrdList, queName=queName, otxBNPrev5Value=otxBNPrev5Value, ordThreashold4=ordThreashold4, ordIndex=ordIndex, prbGrpStartTime=prbGrpStartTime, grpQueueByNameList=grpQueueByNameList, otxBNQueName=otxBNQueName, probeAlarmEvent2=probeAlarmEvent2, otxBNNbSamples=otxBNNbSamples, otxBNValue=otxBNValue, almOrd=almOrd, ordBNMax=ordBNMax, sceBNName=sceBNName, otxBNPrev1ErrCode=otxBNPrev1ErrCode)
