#
# PySNMP MIB module Nortel-Magellan-Passport-AtmMpeMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-AtmMpeMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:16:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
Unsigned32, DisplayString, RowStatus, Integer32, StorageType, InterfaceIndex, Counter32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "Unsigned32", "DisplayString", "RowStatus", "Integer32", "StorageType", "InterfaceIndex", "Counter32")
Link, = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "Link")
components, passportMIBs = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "components", "passportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Unsigned32, Bits, Integer32, iso, ModuleIdentity, ObjectIdentity, Counter64, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, NotificationType, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Unsigned32", "Bits", "Integer32", "iso", "ModuleIdentity", "ObjectIdentity", "Counter64", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "NotificationType", "IpAddress", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
atmMpeMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 65))
atmMpe = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118))
atmMpeRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 1), )
if mibBuilder.loadTexts: atmMpeRowStatusTable.setStatus('mandatory')
atmMpeRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmMpeMIB", "atmMpeIndex"))
if mibBuilder.loadTexts: atmMpeRowStatusEntry.setStatus('mandatory')
atmMpeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmMpeRowStatus.setStatus('mandatory')
atmMpeComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeComponentName.setStatus('mandatory')
atmMpeStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeStorageType.setStatus('mandatory')
atmMpeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: atmMpeIndex.setStatus('mandatory')
atmMpeCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 10), )
if mibBuilder.loadTexts: atmMpeCidDataTable.setStatus('mandatory')
atmMpeCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmMpeMIB", "atmMpeIndex"))
if mibBuilder.loadTexts: atmMpeCidDataEntry.setStatus('mandatory')
atmMpeCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmMpeCustomerIdentifier.setStatus('mandatory')
atmMpeIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 11), )
if mibBuilder.loadTexts: atmMpeIfEntryTable.setStatus('mandatory')
atmMpeIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmMpeMIB", "atmMpeIndex"))
if mibBuilder.loadTexts: atmMpeIfEntryEntry.setStatus('mandatory')
atmMpeIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmMpeIfAdminStatus.setStatus('mandatory')
atmMpeIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeIfIndex.setStatus('mandatory')
atmMpeProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 12), )
if mibBuilder.loadTexts: atmMpeProvTable.setStatus('mandatory')
atmMpeProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmMpeMIB", "atmMpeIndex"))
if mibBuilder.loadTexts: atmMpeProvEntry.setStatus('mandatory')
atmMpeMaxTransmissionUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(256, 9188)).clone(9188)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmMpeMaxTransmissionUnit.setStatus('mandatory')
atmMpeEncapType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("llcEncap", 1), ("ipVcEncap", 2), ("ipxVcEncap", 3))).clone('llcEncap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmMpeEncapType.setStatus('mandatory')
atmMpeIlsForwarder = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 12, 1, 3), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmMpeIlsForwarder.setStatus('mandatory')
atmMpeMediaProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 13), )
if mibBuilder.loadTexts: atmMpeMediaProvTable.setStatus('mandatory')
atmMpeMediaProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmMpeMIB", "atmMpeIndex"))
if mibBuilder.loadTexts: atmMpeMediaProvEntry.setStatus('mandatory')
atmMpeLinkToProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 13, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmMpeLinkToProtocolPort.setStatus('mandatory')
atmMpeStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 14), )
if mibBuilder.loadTexts: atmMpeStateTable.setStatus('mandatory')
atmMpeStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmMpeMIB", "atmMpeIndex"))
if mibBuilder.loadTexts: atmMpeStateEntry.setStatus('mandatory')
atmMpeAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeAdminState.setStatus('mandatory')
atmMpeOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeOperationalState.setStatus('mandatory')
atmMpeUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeUsageState.setStatus('mandatory')
atmMpeOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 15), )
if mibBuilder.loadTexts: atmMpeOperStatusTable.setStatus('mandatory')
atmMpeOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmMpeMIB", "atmMpeIndex"))
if mibBuilder.loadTexts: atmMpeOperStatusEntry.setStatus('mandatory')
atmMpeSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeSnmpOperStatus.setStatus('mandatory')
atmMpeAc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2))
atmMpeAcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 1), )
if mibBuilder.loadTexts: atmMpeAcRowStatusTable.setStatus('mandatory')
atmMpeAcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmMpeMIB", "atmMpeIndex"), (0, "Nortel-Magellan-Passport-AtmMpeMIB", "atmMpeAcIndex"))
if mibBuilder.loadTexts: atmMpeAcRowStatusEntry.setStatus('mandatory')
atmMpeAcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmMpeAcRowStatus.setStatus('mandatory')
atmMpeAcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeAcComponentName.setStatus('mandatory')
atmMpeAcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeAcStorageType.setStatus('mandatory')
atmMpeAcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: atmMpeAcIndex.setStatus('mandatory')
atmMpeAcProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 10), )
if mibBuilder.loadTexts: atmMpeAcProvTable.setStatus('mandatory')
atmMpeAcProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmMpeMIB", "atmMpeIndex"), (0, "Nortel-Magellan-Passport-AtmMpeMIB", "atmMpeAcIndex"))
if mibBuilder.loadTexts: atmMpeAcProvEntry.setStatus('mandatory')
atmMpeAcAtmConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmMpeAcAtmConnection.setStatus('mandatory')
atmMpeAcIpCoS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmMpeAcIpCoS.setStatus('mandatory')
atmMpeAcStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 11), )
if mibBuilder.loadTexts: atmMpeAcStateTable.setStatus('mandatory')
atmMpeAcStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmMpeMIB", "atmMpeIndex"), (0, "Nortel-Magellan-Passport-AtmMpeMIB", "atmMpeAcIndex"))
if mibBuilder.loadTexts: atmMpeAcStateEntry.setStatus('mandatory')
atmMpeAcAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeAcAdminState.setStatus('mandatory')
atmMpeAcOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeAcOperationalState.setStatus('mandatory')
atmMpeAcUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeAcUsageState.setStatus('mandatory')
atmMpeAcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 12), )
if mibBuilder.loadTexts: atmMpeAcOperTable.setStatus('mandatory')
atmMpeAcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmMpeMIB", "atmMpeIndex"), (0, "Nortel-Magellan-Passport-AtmMpeMIB", "atmMpeAcIndex"))
if mibBuilder.loadTexts: atmMpeAcOperEntry.setStatus('mandatory')
atmMpeAcSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeAcSpeed.setStatus('mandatory')
atmMpeAcStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 13), )
if mibBuilder.loadTexts: atmMpeAcStatsTable.setStatus('mandatory')
atmMpeAcStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmMpeMIB", "atmMpeIndex"), (0, "Nortel-Magellan-Passport-AtmMpeMIB", "atmMpeAcIndex"))
if mibBuilder.loadTexts: atmMpeAcStatsEntry.setStatus('mandatory')
atmMpeAcOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeAcOutPackets.setStatus('mandatory')
atmMpeAcOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeAcOutOctets.setStatus('mandatory')
atmMpeAcOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeAcOutDiscards.setStatus('mandatory')
atmMpeAcInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeAcInPackets.setStatus('mandatory')
atmMpeAcInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeAcInOctets.setStatus('mandatory')
atmMpeAcInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeAcInUnknownProtos.setStatus('mandatory')
atmMpeAcInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 118, 2, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmMpeAcInErrors.setStatus('mandatory')
atmMpeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 65, 1))
atmMpeGroupBD = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 65, 1, 4))
atmMpeGroupBD00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 65, 1, 4, 1))
atmMpeGroupBD00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 65, 1, 4, 1, 2))
atmMpeCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 65, 3))
atmMpeCapabilitiesBD = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 65, 3, 4))
atmMpeCapabilitiesBD00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 65, 3, 4, 1))
atmMpeCapabilitiesBD00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 65, 3, 4, 1, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-AtmMpeMIB", atmMpeAcRowStatus=atmMpeAcRowStatus, atmMpeAcOutOctets=atmMpeAcOutOctets, atmMpeAcOperTable=atmMpeAcOperTable, atmMpeCapabilitiesBD00A=atmMpeCapabilitiesBD00A, atmMpeAcComponentName=atmMpeAcComponentName, atmMpeMediaProvTable=atmMpeMediaProvTable, atmMpeAcInOctets=atmMpeAcInOctets, atmMpeCapabilitiesBD00=atmMpeCapabilitiesBD00, atmMpeAcIndex=atmMpeAcIndex, atmMpeRowStatusTable=atmMpeRowStatusTable, atmMpeAcStateEntry=atmMpeAcStateEntry, atmMpeCustomerIdentifier=atmMpeCustomerIdentifier, atmMpeIlsForwarder=atmMpeIlsForwarder, atmMpeAcStorageType=atmMpeAcStorageType, atmMpeAcStatsEntry=atmMpeAcStatsEntry, atmMpeIfEntryEntry=atmMpeIfEntryEntry, atmMpeAcStateTable=atmMpeAcStateTable, atmMpeProvEntry=atmMpeProvEntry, atmMpeStateEntry=atmMpeStateEntry, atmMpeOperStatusTable=atmMpeOperStatusTable, atmMpeAcAtmConnection=atmMpeAcAtmConnection, atmMpeIfAdminStatus=atmMpeIfAdminStatus, atmMpeAcProvTable=atmMpeAcProvTable, atmMpeUsageState=atmMpeUsageState, atmMpeCapabilitiesBD=atmMpeCapabilitiesBD, atmMpe=atmMpe, atmMpeComponentName=atmMpeComponentName, atmMpeCidDataEntry=atmMpeCidDataEntry, atmMpeAc=atmMpeAc, atmMpeRowStatusEntry=atmMpeRowStatusEntry, atmMpeRowStatus=atmMpeRowStatus, atmMpeAcIpCoS=atmMpeAcIpCoS, atmMpeAcOperEntry=atmMpeAcOperEntry, atmMpeMaxTransmissionUnit=atmMpeMaxTransmissionUnit, atmMpeGroupBD=atmMpeGroupBD, atmMpeCapabilities=atmMpeCapabilities, atmMpeAcRowStatusEntry=atmMpeAcRowStatusEntry, atmMpeLinkToProtocolPort=atmMpeLinkToProtocolPort, atmMpeMIB=atmMpeMIB, atmMpeStorageType=atmMpeStorageType, atmMpeAcUsageState=atmMpeAcUsageState, atmMpeOperStatusEntry=atmMpeOperStatusEntry, atmMpeAcStatsTable=atmMpeAcStatsTable, atmMpeAcOutPackets=atmMpeAcOutPackets, atmMpeOperationalState=atmMpeOperationalState, atmMpeGroupBD00A=atmMpeGroupBD00A, atmMpeMediaProvEntry=atmMpeMediaProvEntry, atmMpeIfIndex=atmMpeIfIndex, atmMpeProvTable=atmMpeProvTable, atmMpeAcRowStatusTable=atmMpeAcRowStatusTable, atmMpeAcSpeed=atmMpeAcSpeed, atmMpeGroup=atmMpeGroup, atmMpeAcOperationalState=atmMpeAcOperationalState, atmMpeSnmpOperStatus=atmMpeSnmpOperStatus, atmMpeAcInPackets=atmMpeAcInPackets, atmMpeIfEntryTable=atmMpeIfEntryTable, atmMpeIndex=atmMpeIndex, atmMpeEncapType=atmMpeEncapType, atmMpeAcInUnknownProtos=atmMpeAcInUnknownProtos, atmMpeCidDataTable=atmMpeCidDataTable, atmMpeAcInErrors=atmMpeAcInErrors, atmMpeAcOutDiscards=atmMpeAcOutDiscards, atmMpeAcProvEntry=atmMpeAcProvEntry, atmMpeStateTable=atmMpeStateTable, atmMpeAcAdminState=atmMpeAcAdminState, atmMpeAdminState=atmMpeAdminState, atmMpeGroupBD00=atmMpeGroupBD00)
