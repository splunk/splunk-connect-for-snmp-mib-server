#
# PySNMP MIB module H3C-AAL5-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-AAL5-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:08:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
h3cAAL5, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cAAL5")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter32, Bits, Counter64, iso, ObjectIdentity, Unsigned32, IpAddress, NotificationType, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Integer32, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Bits", "Counter64", "iso", "ObjectIdentity", "Unsigned32", "IpAddress", "NotificationType", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Integer32", "ModuleIdentity", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
h3cAAL5MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1))
h3cAAL5MIB.setRevisions(('2004-11-04 13:50',))
if mibBuilder.loadTexts: h3cAAL5MIB.setLastUpdated('200411041350Z')
if mibBuilder.loadTexts: h3cAAL5MIB.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
h3cAal5MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 1))
h3cAal5MIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 0))
h3cAal5VccTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 1, 1), )
if mibBuilder.loadTexts: h3cAal5VccTable.setStatus('current')
h3cAal5VccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "H3C-AAL5-MIB", "h3cAal5VccVpi"), (0, "H3C-AAL5-MIB", "h3cAal5VccVci"))
if mibBuilder.loadTexts: h3cAal5VccEntry.setStatus('current')
h3cAal5VccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: h3cAal5VccVpi.setStatus('current')
h3cAal5VccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: h3cAal5VccVci.setStatus('current')
h3cAal5VccInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cAal5VccInPkts.setStatus('current')
h3cAal5VccOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cAal5VccOutPkts.setStatus('current')
h3cAal5VccInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cAal5VccInOctets.setStatus('current')
h3cAal5VccOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cAal5VccOutOctets.setStatus('current')
h3cAal5VccState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2), ("inactive", 3))).clone('active')).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cAal5VccState.setStatus('current')
h3cAal5VccStateChange = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 0, 1)).setObjects(("H3C-AAL5-MIB", "h3cAal5VccState"))
if mibBuilder.loadTexts: h3cAal5VccStateChange.setStatus('current')
h3cAal5MIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 3))
h3cAal5MIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 3, 1))
h3cAal5MIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 3, 2))
h3cAal5MIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 3, 1, 1)).setObjects(("H3C-AAL5-MIB", "h3cAal5MIBGroup"), ("H3C-AAL5-MIB", "h3cAal5NotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cAal5MIBCompliance = h3cAal5MIBCompliance.setStatus('current')
h3cAal5MIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 3, 2, 1)).setObjects(("H3C-AAL5-MIB", "h3cAal5VccInPkts"), ("H3C-AAL5-MIB", "h3cAal5VccOutPkts"), ("H3C-AAL5-MIB", "h3cAal5VccInOctets"), ("H3C-AAL5-MIB", "h3cAal5VccOutOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cAal5MIBGroup = h3cAal5MIBGroup.setStatus('current')
h3cAal5NotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 10, 2, 21, 1, 3, 2, 2)).setObjects(("H3C-AAL5-MIB", "h3cAal5VccStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cAal5NotificationGroup = h3cAal5NotificationGroup.setStatus('current')
mibBuilder.exportSymbols("H3C-AAL5-MIB", h3cAal5VccTable=h3cAal5VccTable, h3cAal5MIBGroups=h3cAal5MIBGroups, h3cAal5VccState=h3cAal5VccState, h3cAal5VccOutPkts=h3cAal5VccOutPkts, h3cAal5MIBTraps=h3cAal5MIBTraps, h3cAal5VccInOctets=h3cAal5VccInOctets, h3cAal5MIBGroup=h3cAal5MIBGroup, h3cAal5MIBObjects=h3cAal5MIBObjects, h3cAal5NotificationGroup=h3cAal5NotificationGroup, PYSNMP_MODULE_ID=h3cAAL5MIB, h3cAal5VccVpi=h3cAal5VccVpi, h3cAal5VccVci=h3cAal5VccVci, h3cAAL5MIB=h3cAAL5MIB, h3cAal5VccOutOctets=h3cAal5VccOutOctets, h3cAal5VccStateChange=h3cAal5VccStateChange, h3cAal5VccInPkts=h3cAal5VccInPkts, h3cAal5MIBConformance=h3cAal5MIBConformance, h3cAal5MIBCompliances=h3cAal5MIBCompliances, h3cAal5VccEntry=h3cAal5VccEntry, h3cAal5MIBCompliance=h3cAal5MIBCompliance)
