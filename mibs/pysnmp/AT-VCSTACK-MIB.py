#
# PySNMP MIB module AT-VCSTACK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AT-VCSTACK-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:14:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
sysinfo, = mibBuilder.importSymbols("AT-SMI-MIB", "sysinfo")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Unsigned32, Gauge32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits, iso, Counter64, NotificationType, Counter32, MibIdentifier, IpAddress, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Unsigned32", "Gauge32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits", "iso", "Counter64", "NotificationType", "Counter32", "MibIdentifier", "IpAddress", "ModuleIdentity")
TruthValue, DisplayString, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention", "MacAddress")
vcstack = ModuleIdentity((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13))
vcstack.setRevisions(('2011-11-03 00:00', '2010-09-07 00:00', '2010-09-03 00:00', '2010-06-15 00:15', '2010-05-24 01:19', '2010-01-15 00:39', '2009-11-05 00:00', '2009-06-08 00:00', '2009-01-20 00:00', '2008-03-19 00:00',))
if mibBuilder.loadTexts: vcstack.setLastUpdated('201111030000Z')
if mibBuilder.loadTexts: vcstack.setOrganization('Allied Telesis, Inc')
vcstackNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 0))
vcstackRoleChangeNotify = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 0, 1)).setObjects(("AT-VCSTACK-MIB", "vcstackId"), ("AT-VCSTACK-MIB", "vcstackRole"))
if mibBuilder.loadTexts: vcstackRoleChangeNotify.setStatus('current')
vcstackMemberJoinNotify = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 0, 2)).setObjects(("AT-VCSTACK-MIB", "vcstackId"), ("AT-VCSTACK-MIB", "vcstackNbrMemberIdNotify"))
if mibBuilder.loadTexts: vcstackMemberJoinNotify.setStatus('current')
vcstackMemberLeaveNotify = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 0, 3)).setObjects(("AT-VCSTACK-MIB", "vcstackId"), ("AT-VCSTACK-MIB", "vcstackNbrMemberIdNotify"))
if mibBuilder.loadTexts: vcstackMemberLeaveNotify.setStatus('current')
vcstackResiliencyLinkHealthCheckReceivingNotify = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 0, 4)).setObjects(("AT-VCSTACK-MIB", "vcstackId"), ("AT-VCSTACK-MIB", "vcstackResiliencyLinkInterfaceName"))
if mibBuilder.loadTexts: vcstackResiliencyLinkHealthCheckReceivingNotify.setStatus('current')
vcstackResiliencyLinkHealthCheckTimeOutNotify = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 0, 5)).setObjects(("AT-VCSTACK-MIB", "vcstackId"), ("AT-VCSTACK-MIB", "vcstackResiliencyLinkInterfaceName"))
if mibBuilder.loadTexts: vcstackResiliencyLinkHealthCheckTimeOutNotify.setStatus('current')
vcstackStkPortLinkUpNotify = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 0, 6)).setObjects(("AT-VCSTACK-MIB", "vcstackId"), ("AT-VCSTACK-MIB", "vcstackStkPortNameNotify"))
if mibBuilder.loadTexts: vcstackStkPortLinkUpNotify.setStatus('current')
vcstackStkPortLinkDownNotify = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 0, 7)).setObjects(("AT-VCSTACK-MIB", "vcstackId"), ("AT-VCSTACK-MIB", "vcstackStkPortNameNotify"))
if mibBuilder.loadTexts: vcstackStkPortLinkDownNotify.setStatus('current')
vcstackNbrMemberIdNotify = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 0, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vcstackNbrMemberIdNotify.setStatus('current')
vcstackStkPortNameNotify = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 0, 9), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vcstackStkPortNameNotify.setStatus('current')
vcstackStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normalOperation", 1), ("operatingInFailoverState", 2), ("standaloneUnit", 3), ("ringTopologyBroken", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackStatus.setStatus('current')
vcstackOperationalStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackOperationalStatus.setStatus('current')
vcstackMgmtVlanId = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackMgmtVlanId.setStatus('current')
vcstackMgmtVlanSubnetAddr = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackMgmtVlanSubnetAddr.setStatus('current')
vcstackTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5), )
if mibBuilder.loadTexts: vcstackTable.setStatus('current')
vcstackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1), ).setIndexNames((0, "AT-VCSTACK-MIB", "vcstackId"))
if mibBuilder.loadTexts: vcstackEntry.setStatus('current')
vcstackId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackId.setStatus('current')
vcstackPendingId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackPendingId.setStatus('current')
vcstackMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackMacAddr.setStatus('current')
vcstackPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackPriority.setStatus('current')
vcstackRole = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("leaving", 1), ("discovering", 2), ("synchronizing", 3), ("backupMember", 4), ("pendingMaster", 5), ("disabledMaster", 6), ("fallbackMaster", 7), ("activeMaster", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackRole.setStatus('current')
vcstackLastRoleChange = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackLastRoleChange.setStatus('current')
vcstackHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackHostname.setStatus('current')
vcstackProductType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackProductType.setStatus('current')
vcstackSWVersionAutoSync = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackSWVersionAutoSync.setStatus('current')
vcstackFallbackConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fileExists", 1), ("fileNotFound", 2), ("notConfigured", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackFallbackConfigStatus.setStatus('obsolete')
vcstackFallbackConfigFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackFallbackConfigFilename.setStatus('obsolete')
vcstackResiliencyLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("configured", 1), ("successful", 2), ("failed", 3), ("notConfigured", 4), ("stopped", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackResiliencyLinkStatus.setStatus('current')
vcstackResiliencyLinkInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackResiliencyLinkInterfaceName.setStatus('current')
vcstackActiveStkHardware = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("xemStk", 1), ("builtinStackingPorts", 2), ("none", 3), ("stackXG", 4), ("x6EMXS2", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackActiveStkHardware.setStatus('current')
vcstackStkPort1Status = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("down", 1), ("neighbourIncompatible", 2), ("discoveringNeighbour", 3), ("learntNeighbour", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackStkPort1Status.setStatus('current')
vcstackStkPort1NeighbourId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackStkPort1NeighbourId.setStatus('current')
vcstackStkPort2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("down", 1), ("neighbourIncompatible", 2), ("discoveringNeighbour", 3), ("learntNeighbour", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackStkPort2Status.setStatus('current')
vcstackStkPort2NeighbourId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackStkPort2NeighbourId.setStatus('current')
vcstackNumMembersJoined = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackNumMembersJoined.setStatus('current')
vcstackNumMembersLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackNumMembersLeft.setStatus('current')
vcstackNumIdConflict = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackNumIdConflict.setStatus('current')
vcstackNumMasterConflict = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackNumMasterConflict.setStatus('current')
vcstackNumMasterFailover = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackNumMasterFailover.setStatus('current')
vcstackNumStkPort1NbrIncompatible = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackNumStkPort1NbrIncompatible.setStatus('current')
vcstackNumStkPort2NbrIncompatible = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackNumStkPort2NbrIncompatible.setStatus('current')
vcstackReadinessStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 5, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("init", 1), ("syncing", 2), ("ready", 3), ("syncError", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackReadinessStatus.setStatus('current')
vcstackTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 6))
vcstackRoleChange = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 6, 1)).setObjects(("AT-VCSTACK-MIB", "vcstackId"), ("AT-VCSTACK-MIB", "vcstackRole"))
if mibBuilder.loadTexts: vcstackRoleChange.setStatus('deprecated')
vcstackMemberJoin = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 6, 2)).setObjects(("AT-VCSTACK-MIB", "vcstackId"), ("AT-VCSTACK-MIB", "vcstackNbrMemberId"))
if mibBuilder.loadTexts: vcstackMemberJoin.setStatus('deprecated')
vcstackMemberLeave = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 6, 3)).setObjects(("AT-VCSTACK-MIB", "vcstackId"), ("AT-VCSTACK-MIB", "vcstackNbrMemberId"))
if mibBuilder.loadTexts: vcstackMemberLeave.setStatus('deprecated')
vcstackResiliencyLinkHealthCheckReceiving = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 6, 4)).setObjects(("AT-VCSTACK-MIB", "vcstackId"), ("AT-VCSTACK-MIB", "vcstackResiliencyLinkInterfaceName"))
if mibBuilder.loadTexts: vcstackResiliencyLinkHealthCheckReceiving.setStatus('deprecated')
vcstackResiliencyLinkHealthCheckTimeOut = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 6, 5)).setObjects(("AT-VCSTACK-MIB", "vcstackId"), ("AT-VCSTACK-MIB", "vcstackResiliencyLinkInterfaceName"))
if mibBuilder.loadTexts: vcstackResiliencyLinkHealthCheckTimeOut.setStatus('deprecated')
vcstackStkPortLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 6, 6)).setObjects(("AT-VCSTACK-MIB", "vcstackId"), ("AT-VCSTACK-MIB", "vcstackStkPortName"))
if mibBuilder.loadTexts: vcstackStkPortLinkUp.setStatus('deprecated')
vcstackStkPortLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 6, 7)).setObjects(("AT-VCSTACK-MIB", "vcstackId"), ("AT-VCSTACK-MIB", "vcstackStkPortName"))
if mibBuilder.loadTexts: vcstackStkPortLinkDown.setStatus('deprecated')
vcstackNbrMemberId = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 6, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vcstackNbrMemberId.setStatus('deprecated')
vcstackStkPortName = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 6, 9), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vcstackStkPortName.setStatus('deprecated')
vcstackVirtualMacAddressStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackVirtualMacAddressStatus.setStatus('current')
vcstackVirtualChassisId = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackVirtualChassisId.setStatus('current')
vcstackVirtualMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 9), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackVirtualMacAddr.setStatus('current')
vcstackMasterId = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackMasterId.setStatus('current')
vcstackDisabledMasterMonitoringStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 13, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("inactive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcstackDisabledMasterMonitoringStatus.setStatus('current')
mibBuilder.exportSymbols("AT-VCSTACK-MIB", vcstackActiveStkHardware=vcstackActiveStkHardware, vcstackReadinessStatus=vcstackReadinessStatus, vcstackNotifications=vcstackNotifications, vcstackMacAddr=vcstackMacAddr, vcstackTraps=vcstackTraps, vcstackId=vcstackId, vcstackPendingId=vcstackPendingId, vcstackSWVersionAutoSync=vcstackSWVersionAutoSync, vcstackStkPortLinkDownNotify=vcstackStkPortLinkDownNotify, vcstackResiliencyLinkHealthCheckReceiving=vcstackResiliencyLinkHealthCheckReceiving, vcstackRoleChangeNotify=vcstackRoleChangeNotify, vcstackMemberLeaveNotify=vcstackMemberLeaveNotify, vcstackNumIdConflict=vcstackNumIdConflict, vcstackRole=vcstackRole, vcstackFallbackConfigStatus=vcstackFallbackConfigStatus, vcstackStkPort1NeighbourId=vcstackStkPort1NeighbourId, vcstackDisabledMasterMonitoringStatus=vcstackDisabledMasterMonitoringStatus, vcstackVirtualChassisId=vcstackVirtualChassisId, vcstackStkPortLinkUpNotify=vcstackStkPortLinkUpNotify, vcstackOperationalStatus=vcstackOperationalStatus, vcstackMgmtVlanSubnetAddr=vcstackMgmtVlanSubnetAddr, vcstackNumStkPort1NbrIncompatible=vcstackNumStkPort1NbrIncompatible, vcstackMemberLeave=vcstackMemberLeave, vcstackMemberJoin=vcstackMemberJoin, vcstackStkPort1Status=vcstackStkPort1Status, vcstackNumMasterConflict=vcstackNumMasterConflict, vcstackStkPortLinkUp=vcstackStkPortLinkUp, vcstackNbrMemberIdNotify=vcstackNbrMemberIdNotify, vcstackVirtualMacAddr=vcstackVirtualMacAddr, vcstackLastRoleChange=vcstackLastRoleChange, vcstackNumMasterFailover=vcstackNumMasterFailover, vcstackStatus=vcstackStatus, vcstackNumMembersLeft=vcstackNumMembersLeft, vcstackMasterId=vcstackMasterId, vcstackResiliencyLinkHealthCheckTimeOut=vcstackResiliencyLinkHealthCheckTimeOut, vcstackResiliencyLinkInterfaceName=vcstackResiliencyLinkInterfaceName, vcstackNumStkPort2NbrIncompatible=vcstackNumStkPort2NbrIncompatible, vcstackStkPortLinkDown=vcstackStkPortLinkDown, PYSNMP_MODULE_ID=vcstack, vcstackPriority=vcstackPriority, vcstackResiliencyLinkHealthCheckTimeOutNotify=vcstackResiliencyLinkHealthCheckTimeOutNotify, vcstackStkPortNameNotify=vcstackStkPortNameNotify, vcstackEntry=vcstackEntry, vcstackResiliencyLinkStatus=vcstackResiliencyLinkStatus, vcstackFallbackConfigFilename=vcstackFallbackConfigFilename, vcstackResiliencyLinkHealthCheckReceivingNotify=vcstackResiliencyLinkHealthCheckReceivingNotify, vcstackRoleChange=vcstackRoleChange, vcstackNbrMemberId=vcstackNbrMemberId, vcstackStkPort2Status=vcstackStkPort2Status, vcstackHostname=vcstackHostname, vcstackStkPortName=vcstackStkPortName, vcstackMgmtVlanId=vcstackMgmtVlanId, vcstackTable=vcstackTable, vcstackProductType=vcstackProductType, vcstackMemberJoinNotify=vcstackMemberJoinNotify, vcstackStkPort2NeighbourId=vcstackStkPort2NeighbourId, vcstackNumMembersJoined=vcstackNumMembersJoined, vcstack=vcstack, vcstackVirtualMacAddressStatus=vcstackVirtualMacAddressStatus)
