#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:22:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
Counter32, Gauge32, Unsigned32, StorageType, DisplayString, RowStatus = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Counter32", "Gauge32", "Unsigned32", "StorageType", "DisplayString", "RowStatus")
NonReplicated, Link = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "NonReplicated", "Link")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
mscSigChanIndex, mscSigChan = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex", "mscSigChan")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Counter32, NotificationType, IpAddress, MibIdentifier, Gauge32, ObjectIdentity, TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Integer32, iso, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "NotificationType", "IpAddress", "MibIdentifier", "Gauge32", "ObjectIdentity", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Integer32", "iso", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
vnetEuroIsdnMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 138))
mscSigChanEIsdn = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14))
mscSigChanEIsdnRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 1), )
if mibBuilder.loadTexts: mscSigChanEIsdnRowStatusTable.setStatus('mandatory')
mscSigChanEIsdnRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", "mscSigChanEIsdnIndex"))
if mibBuilder.loadTexts: mscSigChanEIsdnRowStatusEntry.setStatus('mandatory')
mscSigChanEIsdnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEIsdnRowStatus.setStatus('mandatory')
mscSigChanEIsdnComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnComponentName.setStatus('mandatory')
mscSigChanEIsdnStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnStorageType.setStatus('mandatory')
mscSigChanEIsdnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscSigChanEIsdnIndex.setStatus('mandatory')
mscSigChanEIsdnL2Table = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 11), )
if mibBuilder.loadTexts: mscSigChanEIsdnL2Table.setStatus('mandatory')
mscSigChanEIsdnL2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", "mscSigChanEIsdnIndex"))
if mibBuilder.loadTexts: mscSigChanEIsdnL2Entry.setStatus('mandatory')
mscSigChanEIsdnT23 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEIsdnT23.setStatus('mandatory')
mscSigChanEIsdnT200 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEIsdnT200.setStatus('mandatory')
mscSigChanEIsdnN200 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEIsdnN200.setStatus('mandatory')
mscSigChanEIsdnT203 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 40)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEIsdnT203.setStatus('mandatory')
mscSigChanEIsdnCircuitSwitchedK = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEIsdnCircuitSwitchedK.setStatus('mandatory')
mscSigChanEIsdnL3Table = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 12), )
if mibBuilder.loadTexts: mscSigChanEIsdnL3Table.setStatus('mandatory')
mscSigChanEIsdnL3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", "mscSigChanEIsdnIndex"))
if mibBuilder.loadTexts: mscSigChanEIsdnL3Entry.setStatus('mandatory')
mscSigChanEIsdnT310 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 120)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEIsdnT310.setStatus('mandatory')
mscSigChanEIsdnProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 13), )
if mibBuilder.loadTexts: mscSigChanEIsdnProvTable.setStatus('mandatory')
mscSigChanEIsdnProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", "mscSigChanEIsdnIndex"))
if mibBuilder.loadTexts: mscSigChanEIsdnProvEntry.setStatus('mandatory')
mscSigChanEIsdnSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("network", 1), ("user", 2))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEIsdnSide.setStatus('mandatory')
mscSigChanEIsdnMaxNonCallConcurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEIsdnMaxNonCallConcurrent.setStatus('mandatory')
mscSigChanEIsdnOverlapSending = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEIsdnOverlapSending.setStatus('mandatory')
mscSigChanEIsdnOverlapReceiving = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEIsdnOverlapReceiving.setStatus('mandatory')
mscSigChanEIsdnStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 14), )
if mibBuilder.loadTexts: mscSigChanEIsdnStateTable.setStatus('mandatory')
mscSigChanEIsdnStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", "mscSigChanEIsdnIndex"))
if mibBuilder.loadTexts: mscSigChanEIsdnStateEntry.setStatus('mandatory')
mscSigChanEIsdnAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnAdminState.setStatus('mandatory')
mscSigChanEIsdnOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnOperationalState.setStatus('mandatory')
mscSigChanEIsdnUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnUsageState.setStatus('mandatory')
mscSigChanEIsdnStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 15), )
if mibBuilder.loadTexts: mscSigChanEIsdnStatsTable.setStatus('mandatory')
mscSigChanEIsdnStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", "mscSigChanEIsdnIndex"))
if mibBuilder.loadTexts: mscSigChanEIsdnStatsEntry.setStatus('mandatory')
mscSigChanEIsdnTotalCallsToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 15, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnTotalCallsToIf.setStatus('mandatory')
mscSigChanEIsdnTotalCallsFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 15, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnTotalCallsFromIf.setStatus('mandatory')
mscSigChanEIsdnNonCallAssocSessionsToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 15, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnNonCallAssocSessionsToIf.setStatus('mandatory')
mscSigChanEIsdnNonCallAssocSessionsFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 15, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnNonCallAssocSessionsFromIf.setStatus('mandatory')
mscSigChanEIsdnOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 16), )
if mibBuilder.loadTexts: mscSigChanEIsdnOperTable.setStatus('mandatory')
mscSigChanEIsdnOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", "mscSigChanEIsdnIndex"))
if mibBuilder.loadTexts: mscSigChanEIsdnOperEntry.setStatus('mandatory')
mscSigChanEIsdnActiveChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 16, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnActiveChannels.setStatus('mandatory')
mscSigChanEIsdnActiveVoiceChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 16, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnActiveVoiceChannels.setStatus('mandatory')
mscSigChanEIsdnActiveDataChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 16, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnActiveDataChannels.setStatus('mandatory')
mscSigChanEIsdnPeakActiveChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 16, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnPeakActiveChannels.setStatus('mandatory')
mscSigChanEIsdnPeakActiveVoiceChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 16, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnPeakActiveVoiceChannels.setStatus('mandatory')
mscSigChanEIsdnPeakActiveDataChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 16, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnPeakActiveDataChannels.setStatus('mandatory')
mscSigChanEIsdnDChanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("outOfService", 0), ("establishing", 1), ("established", 2), ("enabling", 3), ("inService", 4), ("restarting", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnDChanStatus.setStatus('mandatory')
mscSigChanEIsdnToolsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 17), )
if mibBuilder.loadTexts: mscSigChanEIsdnToolsTable.setStatus('mandatory')
mscSigChanEIsdnToolsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", "mscSigChanEIsdnIndex"))
if mibBuilder.loadTexts: mscSigChanEIsdnToolsEntry.setStatus('mandatory')
mscSigChanEIsdnTracing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 17, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEIsdnTracing.setStatus('mandatory')
mscSigChanEIsdnOptTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 18), )
if mibBuilder.loadTexts: mscSigChanEIsdnOptTable.setStatus('mandatory')
mscSigChanEIsdnOptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", "mscSigChanEIsdnIndex"))
if mibBuilder.loadTexts: mscSigChanEIsdnOptEntry.setStatus('mandatory')
mscSigChanEIsdnVariant = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("etsiGeneric", 0), ("austria", 1), ("germany", 2))).clone('etsiGeneric')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEIsdnVariant.setStatus('mandatory')
mscSigChanEIsdnConnectServiceTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 18, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEIsdnConnectServiceTimer.setStatus('mandatory')
mscSigChanEIsdnResponseServiceTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 18, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEIsdnResponseServiceTimer.setStatus('mandatory')
mscSigChanEIsdnLifetimeServiceTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 200)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEIsdnLifetimeServiceTimer.setStatus('mandatory')
mscSigChanEIsdnFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2))
mscSigChanEIsdnFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 1), )
if mibBuilder.loadTexts: mscSigChanEIsdnFramerRowStatusTable.setStatus('mandatory')
mscSigChanEIsdnFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", "mscSigChanEIsdnIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", "mscSigChanEIsdnFramerIndex"))
if mibBuilder.loadTexts: mscSigChanEIsdnFramerRowStatusEntry.setStatus('mandatory')
mscSigChanEIsdnFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnFramerRowStatus.setStatus('mandatory')
mscSigChanEIsdnFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnFramerComponentName.setStatus('mandatory')
mscSigChanEIsdnFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnFramerStorageType.setStatus('mandatory')
mscSigChanEIsdnFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscSigChanEIsdnFramerIndex.setStatus('mandatory')
mscSigChanEIsdnFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 10), )
if mibBuilder.loadTexts: mscSigChanEIsdnFramerProvTable.setStatus('mandatory')
mscSigChanEIsdnFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", "mscSigChanEIsdnIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", "mscSigChanEIsdnFramerIndex"))
if mibBuilder.loadTexts: mscSigChanEIsdnFramerProvEntry.setStatus('mandatory')
mscSigChanEIsdnFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEIsdnFramerInterfaceName.setStatus('mandatory')
mscSigChanEIsdnFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 12), )
if mibBuilder.loadTexts: mscSigChanEIsdnFramerStateTable.setStatus('mandatory')
mscSigChanEIsdnFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", "mscSigChanEIsdnIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", "mscSigChanEIsdnFramerIndex"))
if mibBuilder.loadTexts: mscSigChanEIsdnFramerStateEntry.setStatus('mandatory')
mscSigChanEIsdnFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnFramerAdminState.setStatus('mandatory')
mscSigChanEIsdnFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnFramerOperationalState.setStatus('mandatory')
mscSigChanEIsdnFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnFramerUsageState.setStatus('mandatory')
mscSigChanEIsdnFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 13), )
if mibBuilder.loadTexts: mscSigChanEIsdnFramerStatsTable.setStatus('mandatory')
mscSigChanEIsdnFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", "mscSigChanEIsdnIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", "mscSigChanEIsdnFramerIndex"))
if mibBuilder.loadTexts: mscSigChanEIsdnFramerStatsEntry.setStatus('mandatory')
mscSigChanEIsdnFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnFramerFrmToIf.setStatus('mandatory')
mscSigChanEIsdnFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnFramerFrmFromIf.setStatus('mandatory')
mscSigChanEIsdnFramerOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnFramerOctetFromIf.setStatus('mandatory')
mscSigChanEIsdnFramerAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnFramerAborts.setStatus('mandatory')
mscSigChanEIsdnFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnFramerCrcErrors.setStatus('mandatory')
mscSigChanEIsdnFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnFramerLrcErrors.setStatus('mandatory')
mscSigChanEIsdnFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnFramerNonOctetErrors.setStatus('mandatory')
mscSigChanEIsdnFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnFramerOverruns.setStatus('mandatory')
mscSigChanEIsdnFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnFramerUnderruns.setStatus('mandatory')
mscSigChanEIsdnFramerLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 14, 2, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEIsdnFramerLargeFrmErrors.setStatus('mandatory')
vnetEuroIsdnGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 138, 1))
vnetEuroIsdnGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 138, 1, 1))
vnetEuroIsdnGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 138, 1, 1, 3))
vnetEuroIsdnGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 138, 1, 1, 3, 2))
vnetEuroIsdnCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 138, 3))
vnetEuroIsdnCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 138, 3, 1))
vnetEuroIsdnCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 138, 3, 1, 3))
vnetEuroIsdnCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 138, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-VnetEuroIsdnMIB", mscSigChanEIsdnNonCallAssocSessionsToIf=mscSigChanEIsdnNonCallAssocSessionsToIf, mscSigChanEIsdnOptTable=mscSigChanEIsdnOptTable, mscSigChanEIsdnFramerIndex=mscSigChanEIsdnFramerIndex, mscSigChanEIsdnL3Table=mscSigChanEIsdnL3Table, mscSigChanEIsdnFramerOctetFromIf=mscSigChanEIsdnFramerOctetFromIf, vnetEuroIsdnGroupCA02=vnetEuroIsdnGroupCA02, mscSigChanEIsdnL2Entry=mscSigChanEIsdnL2Entry, mscSigChanEIsdnFramerProvEntry=mscSigChanEIsdnFramerProvEntry, mscSigChanEIsdnTracing=mscSigChanEIsdnTracing, mscSigChanEIsdnRowStatus=mscSigChanEIsdnRowStatus, mscSigChanEIsdnStatsEntry=mscSigChanEIsdnStatsEntry, mscSigChanEIsdnOptEntry=mscSigChanEIsdnOptEntry, mscSigChanEIsdnFramerAborts=mscSigChanEIsdnFramerAborts, vnetEuroIsdnMIB=vnetEuroIsdnMIB, mscSigChanEIsdnMaxNonCallConcurrent=mscSigChanEIsdnMaxNonCallConcurrent, mscSigChanEIsdnOperationalState=mscSigChanEIsdnOperationalState, mscSigChanEIsdnVariant=mscSigChanEIsdnVariant, mscSigChanEIsdnFramer=mscSigChanEIsdnFramer, mscSigChanEIsdnIndex=mscSigChanEIsdnIndex, mscSigChanEIsdnFramerProvTable=mscSigChanEIsdnFramerProvTable, mscSigChanEIsdnFramerStateTable=mscSigChanEIsdnFramerStateTable, mscSigChanEIsdnFramerLrcErrors=mscSigChanEIsdnFramerLrcErrors, mscSigChanEIsdnOverlapReceiving=mscSigChanEIsdnOverlapReceiving, mscSigChanEIsdn=mscSigChanEIsdn, mscSigChanEIsdnSide=mscSigChanEIsdnSide, mscSigChanEIsdnConnectServiceTimer=mscSigChanEIsdnConnectServiceTimer, mscSigChanEIsdnTotalCallsToIf=mscSigChanEIsdnTotalCallsToIf, mscSigChanEIsdnFramerStateEntry=mscSigChanEIsdnFramerStateEntry, vnetEuroIsdnGroup=vnetEuroIsdnGroup, mscSigChanEIsdnPeakActiveChannels=mscSigChanEIsdnPeakActiveChannels, mscSigChanEIsdnFramerStatsEntry=mscSigChanEIsdnFramerStatsEntry, mscSigChanEIsdnPeakActiveVoiceChannels=mscSigChanEIsdnPeakActiveVoiceChannels, mscSigChanEIsdnActiveChannels=mscSigChanEIsdnActiveChannels, mscSigChanEIsdnFramerUsageState=mscSigChanEIsdnFramerUsageState, mscSigChanEIsdnT23=mscSigChanEIsdnT23, vnetEuroIsdnCapabilitiesCA02=vnetEuroIsdnCapabilitiesCA02, mscSigChanEIsdnFramerUnderruns=mscSigChanEIsdnFramerUnderruns, mscSigChanEIsdnOperEntry=mscSigChanEIsdnOperEntry, mscSigChanEIsdnPeakActiveDataChannels=mscSigChanEIsdnPeakActiveDataChannels, mscSigChanEIsdnUsageState=mscSigChanEIsdnUsageState, mscSigChanEIsdnDChanStatus=mscSigChanEIsdnDChanStatus, mscSigChanEIsdnStorageType=mscSigChanEIsdnStorageType, mscSigChanEIsdnL3Entry=mscSigChanEIsdnL3Entry, mscSigChanEIsdnProvTable=mscSigChanEIsdnProvTable, mscSigChanEIsdnFramerRowStatusTable=mscSigChanEIsdnFramerRowStatusTable, mscSigChanEIsdnRowStatusTable=mscSigChanEIsdnRowStatusTable, mscSigChanEIsdnOverlapSending=mscSigChanEIsdnOverlapSending, mscSigChanEIsdnRowStatusEntry=mscSigChanEIsdnRowStatusEntry, mscSigChanEIsdnNonCallAssocSessionsFromIf=mscSigChanEIsdnNonCallAssocSessionsFromIf, vnetEuroIsdnGroupCA02A=vnetEuroIsdnGroupCA02A, mscSigChanEIsdnAdminState=mscSigChanEIsdnAdminState, mscSigChanEIsdnFramerOverruns=mscSigChanEIsdnFramerOverruns, vnetEuroIsdnCapabilitiesCA02A=vnetEuroIsdnCapabilitiesCA02A, mscSigChanEIsdnL2Table=mscSigChanEIsdnL2Table, mscSigChanEIsdnT200=mscSigChanEIsdnT200, mscSigChanEIsdnStateEntry=mscSigChanEIsdnStateEntry, mscSigChanEIsdnFramerNonOctetErrors=mscSigChanEIsdnFramerNonOctetErrors, mscSigChanEIsdnFramerFrmToIf=mscSigChanEIsdnFramerFrmToIf, mscSigChanEIsdnN200=mscSigChanEIsdnN200, mscSigChanEIsdnFramerLargeFrmErrors=mscSigChanEIsdnFramerLargeFrmErrors, mscSigChanEIsdnFramerCrcErrors=mscSigChanEIsdnFramerCrcErrors, mscSigChanEIsdnProvEntry=mscSigChanEIsdnProvEntry, mscSigChanEIsdnComponentName=mscSigChanEIsdnComponentName, mscSigChanEIsdnFramerRowStatusEntry=mscSigChanEIsdnFramerRowStatusEntry, mscSigChanEIsdnActiveDataChannels=mscSigChanEIsdnActiveDataChannels, vnetEuroIsdnGroupCA=vnetEuroIsdnGroupCA, mscSigChanEIsdnT203=mscSigChanEIsdnT203, vnetEuroIsdnCapabilities=vnetEuroIsdnCapabilities, mscSigChanEIsdnToolsEntry=mscSigChanEIsdnToolsEntry, mscSigChanEIsdnFramerRowStatus=mscSigChanEIsdnFramerRowStatus, mscSigChanEIsdnOperTable=mscSigChanEIsdnOperTable, mscSigChanEIsdnLifetimeServiceTimer=mscSigChanEIsdnLifetimeServiceTimer, mscSigChanEIsdnFramerStatsTable=mscSigChanEIsdnFramerStatsTable, mscSigChanEIsdnResponseServiceTimer=mscSigChanEIsdnResponseServiceTimer, mscSigChanEIsdnTotalCallsFromIf=mscSigChanEIsdnTotalCallsFromIf, mscSigChanEIsdnT310=mscSigChanEIsdnT310, mscSigChanEIsdnCircuitSwitchedK=mscSigChanEIsdnCircuitSwitchedK, mscSigChanEIsdnStatsTable=mscSigChanEIsdnStatsTable, mscSigChanEIsdnFramerComponentName=mscSigChanEIsdnFramerComponentName, mscSigChanEIsdnFramerInterfaceName=mscSigChanEIsdnFramerInterfaceName, mscSigChanEIsdnFramerOperationalState=mscSigChanEIsdnFramerOperationalState, mscSigChanEIsdnFramerFrmFromIf=mscSigChanEIsdnFramerFrmFromIf, mscSigChanEIsdnStateTable=mscSigChanEIsdnStateTable, mscSigChanEIsdnActiveVoiceChannels=mscSigChanEIsdnActiveVoiceChannels, mscSigChanEIsdnToolsTable=mscSigChanEIsdnToolsTable, mscSigChanEIsdnFramerStorageType=mscSigChanEIsdnFramerStorageType, mscSigChanEIsdnFramerAdminState=mscSigChanEIsdnFramerAdminState, vnetEuroIsdnCapabilitiesCA=vnetEuroIsdnCapabilitiesCA)
