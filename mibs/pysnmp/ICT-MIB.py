#
# PySNMP MIB module ICT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ICT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:40:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Unsigned32, enterprises, Gauge32, Bits, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, NotificationType, Counter32, ObjectIdentity, Integer32, iso, ModuleIdentity, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "enterprises", "Gauge32", "Bits", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "NotificationType", "Counter32", "ObjectIdentity", "Integer32", "iso", "ModuleIdentity", "Counter64", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ictPower = MibIdentifier((1, 3, 6, 1, 4, 1, 39145))
digitalSeries = MibIdentifier((1, 3, 6, 1, 4, 1, 39145, 11))
deviceModel = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceModel.setStatus('mandatory')
deviceName = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceName.setStatus('mandatory')
deviceHardware = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceHardware.setStatus('mandatory')
deviceFirmware = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceFirmware.setStatus('mandatory')
deviceMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceMacAddress.setStatus('mandatory')
inputVoltage = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputVoltage.setStatus('mandatory')
outputVoltage = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outputVoltage.setStatus('mandatory')
outputCurrent = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outputCurrent.setStatus('mandatory')
outputEnable = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ENABLED", 1), ("DISABLED", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outputEnable.setStatus('mandatory')
mibBuilder.exportSymbols("ICT-MIB", outputCurrent=outputCurrent, outputVoltage=outputVoltage, inputVoltage=inputVoltage, deviceMacAddress=deviceMacAddress, deviceFirmware=deviceFirmware, ictPower=ictPower, outputEnable=outputEnable, digitalSeries=digitalSeries, deviceModel=deviceModel, deviceHardware=deviceHardware, deviceName=deviceName)
