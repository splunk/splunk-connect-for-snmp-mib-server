#
# PySNMP MIB module Wellfleet-IREDUND-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-IREDUND-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Counter32, NotificationType, MibIdentifier, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Bits, IpAddress, iso, Integer32, TimeTicks, Unsigned32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "NotificationType", "MibIdentifier", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Bits", "IpAddress", "iso", "Integer32", "TimeTicks", "Unsigned32", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfIRedundGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfIRedundGroup")
wfIRedundIfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 10, 1), )
if mibBuilder.loadTexts: wfIRedundIfTable.setStatus('mandatory')
wfIRedundIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 10, 1, 1), ).setIndexNames((0, "Wellfleet-IREDUND-MIB", "wfIRedundIfSlot"), (0, "Wellfleet-IREDUND-MIB", "wfIRedundIfPort"))
if mibBuilder.loadTexts: wfIRedundIfEntry.setStatus('mandatory')
wfIRedundIfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIRedundIfDelete.setStatus('mandatory')
wfIRedundIfDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIRedundIfDisable.setStatus('mandatory')
wfIRedundIfCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIRedundIfCct.setStatus('mandatory')
wfIRedundIfSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIRedundIfSlot.setStatus('mandatory')
wfIRedundIfPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 44))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIRedundIfPort.setStatus('mandatory')
wfIRedundIfPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("nonprimary", 2))).clone('nonprimary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIRedundIfPrimary.setStatus('mandatory')
wfIRedundIfActive = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 10, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notavailable", 1), ("standby", 2), ("active", 3))).clone('notavailable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIRedundIfActive.setStatus('mandatory')
wfIRedundIfMACAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 10, 1, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIRedundIfMACAddr.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-IREDUND-MIB", wfIRedundIfPort=wfIRedundIfPort, wfIRedundIfCct=wfIRedundIfCct, wfIRedundIfEntry=wfIRedundIfEntry, wfIRedundIfDisable=wfIRedundIfDisable, wfIRedundIfDelete=wfIRedundIfDelete, wfIRedundIfActive=wfIRedundIfActive, wfIRedundIfTable=wfIRedundIfTable, wfIRedundIfSlot=wfIRedundIfSlot, wfIRedundIfMACAddr=wfIRedundIfMACAddr, wfIRedundIfPrimary=wfIRedundIfPrimary)
