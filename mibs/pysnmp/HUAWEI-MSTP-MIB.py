#
# PySNMP MIB module HUAWEI-MSTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-MSTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:35:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
BridgeId, = mibBuilder.importSymbols("BRIDGE-MIB", "BridgeId")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, ifIndex, ifName = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex", "ifName")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, TimeTicks, IpAddress, Integer32, Counter64, MibIdentifier, Unsigned32, Bits, Gauge32, iso, ObjectIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "IpAddress", "Integer32", "Counter64", "MibIdentifier", "Unsigned32", "Bits", "Gauge32", "iso", "ObjectIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
hwMstp = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4))
if mibBuilder.loadTexts: hwMstp.setLastUpdated('200806141400Z')
if mibBuilder.loadTexts: hwMstp.setOrganization('Huawei Technologies co.,Ltd.')
class HwMSTPEnabledStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

hwL2Mgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42))
hwMstpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1))
hwMstpStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 1), HwMSTPEnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpStatus.setStatus('current')
hwMstpForceVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("stp", 0), ("rstp", 2), ("mstp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpForceVersion.setStatus('current')
hwMstpDiameter = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(2, 7), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpDiameter.setStatus('current')
hwMstpBridgeMaxHops = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpBridgeMaxHops.setStatus('current')
hwMstpMasterBridgeID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 5), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpMasterBridgeID.setStatus('current')
hwMstpMasterPathCost = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpMasterPathCost.setStatus('current')
hwMstpBpduGuard = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 7), HwMSTPEnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpBpduGuard.setStatus('current')
hwMstpAdminFormatSelector = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpAdminFormatSelector.setStatus('current')
hwMstpAdminRegionName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpAdminRegionName.setStatus('current')
hwMstpAdminRevisionLevel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpAdminRevisionLevel.setStatus('current')
hwMstpOperFormatSelector = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpOperFormatSelector.setStatus('current')
hwMstpOperRegionName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpOperRegionName.setStatus('current')
hwMstpOperRevisionLevel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpOperRevisionLevel.setStatus('current')
hwMstpRegionConfActive = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpRegionConfActive.setStatus('current')
hwMstpDefaultVlanAllo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("enable", 1), ("unused", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpDefaultVlanAllo.setStatus('current')
hwMstpDefaultRegionName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("reset", 1), ("unused", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpDefaultRegionName.setStatus('current')
hwMstpPathCostStandard = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dot1d-1998", 1), ("dot1t", 2), ("legacy", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpPathCostStandard.setStatus('current')
hwMstpVIDAllocationTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 18), )
if mibBuilder.loadTexts: hwMstpVIDAllocationTable.setStatus('current')
hwMstpVIDAllocationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 18, 1), ).setIndexNames((0, "HUAWEI-MSTP-MIB", "hwMstpVID"))
if mibBuilder.loadTexts: hwMstpVIDAllocationEntry.setStatus('current')
hwMstpVID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: hwMstpVID.setStatus('current')
hwMstpAdminMstID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 18, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpAdminMstID.setStatus('current')
hwMstpOperMstID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 18, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpOperMstID.setStatus('current')
hwMstpInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 19), )
if mibBuilder.loadTexts: hwMstpInstanceTable.setStatus('current')
hwMstpInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 19, 1), ).setIndexNames((0, "HUAWEI-MSTP-MIB", "hwMstpInstanceID"))
if mibBuilder.loadTexts: hwMstpInstanceEntry.setStatus('current')
hwMstpInstanceID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: hwMstpInstanceID.setStatus('current')
hwMstpiBridgeID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 19, 1, 2), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiBridgeID.setStatus('current')
hwMstpiBridgePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 19, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 61440)).clone(32768)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpiBridgePriority.setStatus('current')
hwMstpiDesignedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 19, 1, 4), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiDesignedRoot.setStatus('current')
hwMstpiRootPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 19, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiRootPathCost.setStatus('current')
hwMstpiRootPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 19, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiRootPort.setStatus('current')
hwMstpiRootType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 19, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("secondary", 1), ("primary", 2))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpiRootType.setStatus('current')
hwMstpiRemainingHops = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 19, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiRemainingHops.setStatus('current')
hwMstpiAdminMappedVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 19, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpiAdminMappedVlanListLow.setStatus('current')
hwMstpiAdminMappedVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 19, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpiAdminMappedVlanListHigh.setStatus('current')
hwMstpiOperMappedVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 19, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiOperMappedVlanListLow.setStatus('current')
hwMstpiOperMappedVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 19, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiOperMappedVlanListHigh.setStatus('current')
hwMstpiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 19, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpiRowStatus.setStatus('current')
hwMstpPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20), )
if mibBuilder.loadTexts: hwMstpPortTable.setStatus('current')
hwMstpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1), ).setIndexNames((0, "HUAWEI-MSTP-MIB", "hwMstpInstanceID"), (0, "HUAWEI-MSTP-MIB", "hwMstpiPortIndex"))
if mibBuilder.loadTexts: hwMstpPortEntry.setStatus('current')
hwMstpiPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMstpiPortIndex.setStatus('current')
hwMstpiState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("discarding", 2), ("learning", 4), ("forwarding", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiState.setStatus('current')
hwMstpiPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 240)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpiPortPriority.setStatus('current')
hwMstpiPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpiPathCost.setStatus('current')
hwMstpiDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 5), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiDesignatedRoot.setStatus('current')
hwMstpiDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiDesignatedCost.setStatus('current')
hwMstpiDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 7), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiDesignatedBridge.setStatus('current')
hwMstpiDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiDesignatedPort.setStatus('current')
hwMstpiStpPortEdgeport = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2), ("undo", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpiStpPortEdgeport.setStatus('current')
hwMstpiStpPortPointToPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forceTrue", 1), ("forceFalse", 2), ("auto", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpiStpPortPointToPoint.setStatus('current')
hwMstpiStpMcheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("enable", 1), ("unused", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpiStpMcheck.setStatus('current')
hwMstpiStpTransLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(147)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpiStpTransLimit.setStatus('current')
hwMstpiStpRXStpBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiStpRXStpBPDU.setStatus('current')
hwMstpiStpTXStpBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiStpTXStpBPDU.setStatus('current')
hwMstpiStpRXTCNBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiStpRXTCNBPDU.setStatus('current')
hwMstpiStpTXTCNBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiStpTXTCNBPDU.setStatus('current')
hwMstpiStpRXRSTPBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiStpRXRSTPBPDU.setStatus('current')
hwMstpiStpTXRSTPBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiStpTXRSTPBPDU.setStatus('current')
hwMstpiStpRXMSTPBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiStpRXMSTPBPDU.setStatus('current')
hwMstpiStpTXMSTPBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiStpTXMSTPBPDU.setStatus('current')
hwMstpiStpClearStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("clear", 1), ("unused", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpiStpClearStatistics.setStatus('current')
hwMstpiStpDefaultPortCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("reset", 1), ("unused", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpiStpDefaultPortCost.setStatus('current')
hwMstpiStpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 23), HwMSTPEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpiStpStatus.setStatus('current')
hwMstpiPortRootGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 24), HwMSTPEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpiPortRootGuard.setStatus('current')
hwMstpiPortLoopGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 25), HwMSTPEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpiPortLoopGuard.setStatus('current')
hwMstpPortCompliance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("dotls", 2), ("legacy", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpPortCompliance.setStatus('current')
hwMstpConfigDigestSnooping = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 27), HwMSTPEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpConfigDigestSnooping.setStatus('current')
hwMstpNoAgreementCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 30), HwMSTPEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpNoAgreementCheck.setStatus('current')
hwMstpPortTCNotify = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 31), HwMSTPEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpPortTCNotify.setStatus('current')
hwMstpiStpPortBpduFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2), ("undo", 3))).clone('undo')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpiStpPortBpduFilter.setStatus('current')
hwMstpiPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 20, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("alternate", 2), ("backup", 3), ("root", 4), ("designated", 5), ("master", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpiPortRole.setStatus('current')
hwMstpSnooping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpSnooping.setStatus('current')
hwMstpAccessoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 22), )
if mibBuilder.loadTexts: hwMstpAccessoryTable.setStatus('current')
hwMstpAccessoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 22, 1), ).setIndexNames((0, "HUAWEI-MSTP-MIB", "hwMstpAccessoryIndex"))
if mibBuilder.loadTexts: hwMstpAccessoryEntry.setStatus('current')
hwMstpAccessoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 512)))
if mibBuilder.loadTexts: hwMstpAccessoryIndex.setStatus('current')
hwMstpBackupReplyAgreement = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 22, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpBackupReplyAgreement.setStatus('current')
hwMstpStpNoAgreementCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 22, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpStpNoAgreementCheck.setStatus('current')
hwMstpProTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23), )
if mibBuilder.loadTexts: hwMstpProTable.setStatus('current')
hwMstpProEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1), ).setIndexNames((0, "HUAWEI-MSTP-MIB", "hwMstpProID"))
if mibBuilder.loadTexts: hwMstpProEntry.setStatus('current')
hwMstpProID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 288)))
if mibBuilder.loadTexts: hwMstpProID.setStatus('current')
hwMstpProStpState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 4), HwMSTPEnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProStpState.setStatus('current')
hwMstpProPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 61440)).clone(32768)).setUnits('4096').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProPriority.setStatus('current')
hwMstpProRootType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("secondary", 1), ("primary", 2))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProRootType.setStatus('current')
hwMstpProForceVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("stp", 0), ("rstp", 2), ("mstp", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProForceVersion.setStatus('current')
hwMstpProBpduGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 8), HwMSTPEnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProBpduGuard.setStatus('current')
hwMstpProDiameter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(2, 7), ValueRangeConstraint(65535, 65535), )).clone(7)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProDiameter.setStatus('current')
hwMstpProConvergeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fast", 1), ("normal", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProConvergeMode.setStatus('current')
hwMstpProMaxHops = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 40)).clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProMaxHops.setStatus('current')
hwMstpProMCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("enabled", 1), ("unused", 65535))).clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProMCheck.setStatus('current')
hwMstpProPathCostStandard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dot1d-1998", 1), ("dot1t", 2), ("legacy", 3))).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProPathCostStandard.setStatus('current')
hwMstpProHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000)).clone(200)).setUnits('100').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProHelloTime.setStatus('current')
hwMstpProFwdDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(400, 3000)).clone(1500)).setUnits('100').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProFwdDelay.setStatus('current')
hwMstpProMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(600, 4000)).clone(2000)).setUnits('100').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProMaxAge.setStatus('current')
hwMstpProTimerFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProTimerFactor.setStatus('current')
hwMstpProTCNotify = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProTCNotify.setStatus('current')
hwMstpProNoLinkSharePortList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProNoLinkSharePortList.setStatus('current')
hwMstpProLinkSharePortList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProLinkSharePortList.setStatus('current')
hwMstpProTcGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 21), HwMSTPEnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProTcGuard.setStatus('current')
hwMstpProTcGuardThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProTcGuardThreshold.setStatus('current')
hwMstpProTcNotifyProcess = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 23), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProTcNotifyProcess.setStatus('current')
hwMstpProRegionConfActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 24), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProRegionConfActive.setStatus('current')
hwMstpProLinkShareGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 25), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProLinkShareGuard.setStatus('current')
hwMstpConfigDegist = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 26), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpConfigDegist.setStatus('current')
hwMstpProRegionConfShare = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 27), EnabledStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProRegionConfShare.setStatus('current')
hwMstpProRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 30), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProRowStatus.setStatus('current')
hwMstpProTcGuardInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 23, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProTcGuardInterval.setStatus('current')
hwMstpPortBindTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 24), )
if mibBuilder.loadTexts: hwMstpPortBindTable.setStatus('current')
hwMstpPortBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 24, 1), ).setIndexNames((0, "HUAWEI-MSTP-MIB", "hwMstpProID"), (0, "HUAWEI-MSTP-MIB", "hwMstpPortId1"), (0, "HUAWEI-MSTP-MIB", "hwMstpPortId2"), (0, "HUAWEI-MSTP-MIB", "hwMstpPortId3"), (0, "HUAWEI-MSTP-MIB", "hwMstpPortId4"), (0, "HUAWEI-MSTP-MIB", "hwMstpPortIdFlag"))
if mibBuilder.loadTexts: hwMstpPortBindEntry.setStatus('current')
hwMstpPortId1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 24, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwMstpPortId1.setStatus('current')
hwMstpPortId2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 24, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwMstpPortId2.setStatus('current')
hwMstpPortId3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 24, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwMstpPortId3.setStatus('current')
hwMstpPortId4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 24, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwMstpPortId4.setStatus('current')
hwMstpPortIdFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 24, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwMstpPortIdFlag.setStatus('current')
hwMstpPortVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 24, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpPortVlanListLow.setStatus('current')
hwMstpPortVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 24, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpPortVlanListHigh.setStatus('current')
hwMstpProNewPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 24, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("nolinkshare", 2), ("linkshare", 3), ("nolinksharewithvlan", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProNewPortType.setStatus('current')
hwMstpProNewPortBpduVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 24, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProNewPortBpduVlan.setStatus('current')
hwMstpPortBindRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 24, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpPortBindRowStatus.setStatus('current')
hwMstpProPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25), )
if mibBuilder.loadTexts: hwMstpProPortTable.setStatus('current')
hwMstpProPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1), ).setIndexNames((0, "HUAWEI-MSTP-MIB", "hwMstpProID"), (0, "HUAWEI-MSTP-MIB", "hwMstpInstanceID"), (0, "HUAWEI-MSTP-MIB", "hwMstpiPortIndex"))
if mibBuilder.loadTexts: hwMstpProPortEntry.setStatus('current')
hwMstpProPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("discarding", 2), ("learning", 4), ("forwarding", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProPortState.setStatus('current')
hwMstpProPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 240)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProPortPriority.setStatus('current')
hwMstpProPortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProPortPathCost.setStatus('current')
hwMstpProPortDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 5), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProPortDesignatedRoot.setStatus('current')
hwMstpProPortDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProPortDesignatedCost.setStatus('current')
hwMstpProPortDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 7), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProPortDesignatedBridge.setStatus('current')
hwMstpProPortDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProPortDesignatedPort.setStatus('current')
hwMstpProPortStpEdgeport = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 9), HwMSTPEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProPortStpEdgeport.setStatus('current')
hwMstpProPortStpPointToPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forceTrue", 1), ("forceFalse", 2), ("auto", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProPortStpPointToPoint.setStatus('current')
hwMstpProPortStpMcheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("enable", 1), ("unused", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProPortStpMcheck.setStatus('current')
hwMstpProPortStpTransLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProPortStpTransLimit.setStatus('current')
hwMstpProPortStpRXStpBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProPortStpRXStpBPDU.setStatus('current')
hwMstpProPortStpTXStpBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProPortStpTXStpBPDU.setStatus('current')
hwMstpProPortStpRXTCNBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProPortStpRXTCNBPDU.setStatus('current')
hwMstpProPortStpTXTCNBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProPortStpTXTCNBPDU.setStatus('current')
hwMstpProPortStpRXRSTPBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProPortStpRXRSTPBPDU.setStatus('current')
hwMstpProPortStpTXRSTPBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProPortStpTXRSTPBPDU.setStatus('current')
hwMstpProPortStpRXMSTPBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProPortStpRXMSTPBPDU.setStatus('current')
hwMstpProPortStpTXMSTPBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProPortStpTXMSTPBPDU.setStatus('current')
hwMstpProPortStpClearStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("clear", 1), ("unused", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProPortStpClearStatistics.setStatus('current')
hwMstpProPortStpDefaultPortCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("reset", 1), ("unused", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProPortStpDefaultPortCost.setStatus('current')
hwMstpProPortStpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 23), HwMSTPEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProPortStpStatus.setStatus('current')
hwMstpProPortRootGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 24), HwMSTPEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProPortRootGuard.setStatus('current')
hwMstpProPortLoopGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 25), HwMSTPEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProPortLoopGuard.setStatus('current')
hwMstpProPortCompliance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("dotls", 2), ("legacy", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProPortCompliance.setStatus('current')
hwMstpProPortConfigDigestSnooping = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 27), HwMSTPEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProPortConfigDigestSnooping.setStatus('current')
hwMstpProPortNoAgreementCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 30), HwMSTPEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProPortNoAgreementCheck.setStatus('current')
hwMstpProPortTCNotify = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 31), HwMSTPEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProPortTCNotify.setStatus('current')
hwMstpProPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 25, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("nolinkshare", 1), ("linkshare", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProPortType.setStatus('current')
hwMstpTcGuard = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 26), HwMSTPEnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpTcGuard.setStatus('current')
hwMstpTcGuardThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpTcGuardThreshold.setStatus('current')
hwMstpProInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 28), )
if mibBuilder.loadTexts: hwMstpProInstanceTable.setStatus('current')
hwMstpProInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 28, 1), ).setIndexNames((0, "HUAWEI-MSTP-MIB", "hwMstpProID"), (0, "HUAWEI-MSTP-MIB", "hwMstpInstanceID"))
if mibBuilder.loadTexts: hwMstpProInstanceEntry.setStatus('current')
hwMstpProInstanceBridgeID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 28, 1, 1), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProInstanceBridgeID.setStatus('current')
hwMstpProInstanceBridgePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 28, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 61440)).clone(32768)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProInstanceBridgePriority.setStatus('current')
hwMstpProInstanceDesignedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 28, 1, 3), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProInstanceDesignedRoot.setStatus('current')
hwMstpProInstanceRootPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 28, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProInstanceRootPathCost.setStatus('current')
hwMstpProInstanceRootPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 28, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProInstanceRootPort.setStatus('current')
hwMstpProInstanceRootType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 28, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("secondary", 1), ("primary", 2))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProInstanceRootType.setStatus('current')
hwMstpProInstanceRemainingHops = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 28, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProInstanceRemainingHops.setStatus('current')
hwMstpProInstanceAdminMappedVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 28, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProInstanceAdminMappedVlanListLow.setStatus('current')
hwMstpProInstanceAdminMappedVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 28, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProInstanceAdminMappedVlanListHigh.setStatus('current')
hwMstpProInstanceOperMappedVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 28, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProInstanceOperMappedVlanListLow.setStatus('current')
hwMstpProInstanceOperMappedVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 28, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProInstanceOperMappedVlanListHigh.setStatus('current')
hwMstpProInstanceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 28, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMstpProInstanceRowStatus.setStatus('current')
hwMstpProNewPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29), )
if mibBuilder.loadTexts: hwMstpProNewPortTable.setStatus('current')
hwMstpProNewPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1), ).setIndexNames((0, "HUAWEI-MSTP-MIB", "hwMstpProID"), (0, "HUAWEI-MSTP-MIB", "hwMstpInstanceID"), (0, "HUAWEI-MSTP-MIB", "hwMstpPortId1"), (0, "HUAWEI-MSTP-MIB", "hwMstpPortId2"), (0, "HUAWEI-MSTP-MIB", "hwMstpPortId3"), (0, "HUAWEI-MSTP-MIB", "hwMstpPortId4"), (0, "HUAWEI-MSTP-MIB", "hwMstpPortIdFlag"))
if mibBuilder.loadTexts: hwMstpProNewPortEntry.setStatus('current')
hwMstpProNewPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("discarding", 2), ("learning", 4), ("forwarding", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProNewPortState.setStatus('current')
hwMstpProNewPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 240)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProNewPortPriority.setStatus('current')
hwMstpProNewPortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProNewPortPathCost.setStatus('current')
hwMstpProNewPortDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 4), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProNewPortDesignatedRoot.setStatus('current')
hwMstpProNewPortDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProNewPortDesignatedCost.setStatus('current')
hwMstpProNewPortDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 6), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProNewPortDesignatedBridge.setStatus('current')
hwMstpProNewPortDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProNewPortDesignatedPort.setStatus('current')
hwMstpProNewPortStpEdgeport = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2), ("undo", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProNewPortStpEdgeport.setStatus('current')
hwMstpProNewPortStpPointToPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forceTrue", 1), ("forceFalse", 2), ("auto", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProNewPortStpPointToPoint.setStatus('current')
hwMstpProNewPortStpMcheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("enable", 1), ("unused", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProNewPortStpMcheck.setStatus('current')
hwMstpProNewPortStpTransLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(147)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProNewPortStpTransLimit.setStatus('current')
hwMstpProNewPortStpRXStpBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProNewPortStpRXStpBPDU.setStatus('current')
hwMstpProNewPortStpTXStpBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProNewPortStpTXStpBPDU.setStatus('current')
hwMstpProNewPortStpRXTCNBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProNewPortStpRXTCNBPDU.setStatus('current')
hwMstpProNewPortStpTXTCNBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProNewPortStpTXTCNBPDU.setStatus('current')
hwMstpProNewPortStpRXRSTPBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProNewPortStpRXRSTPBPDU.setStatus('current')
hwMstpProNewPortStpTXRSTPBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProNewPortStpTXRSTPBPDU.setStatus('current')
hwMstpProNewPortStpRXMSTPBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProNewPortStpRXMSTPBPDU.setStatus('current')
hwMstpProNewPortStpTXMSTPBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProNewPortStpTXMSTPBPDU.setStatus('current')
hwMstpProNewPortStpClearStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("clear", 1), ("unused", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProNewPortStpClearStatistics.setStatus('current')
hwMstpProNewPortStpDefaultPortCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("reset", 1), ("unused", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProNewPortStpDefaultPortCost.setStatus('current')
hwMstpProNewPortStpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 22), EnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProNewPortStpStatus.setStatus('current')
hwMstpProNewPortRootGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 23), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProNewPortRootGuard.setStatus('current')
hwMstpProNewPortLoopGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 24), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProNewPortLoopGuard.setStatus('current')
hwMstpProNewPortCompliance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("dotls", 2), ("legacy", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProNewPortCompliance.setStatus('current')
hwMstpProNewPortConfigDigestSnooping = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 26), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProNewPortConfigDigestSnooping.setStatus('current')
hwMstpProNewPortNoAgreementCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 27), EnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProNewPortNoAgreementCheck.setStatus('current')
hwMstpProNewPortVplsSubinterfaceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 28), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProNewPortVplsSubinterfaceEnable.setStatus('current')
hwMstpProNewPortBpduEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pvst", 1), ("stp", 2))).clone('stp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProNewPortBpduEncapsulation.setStatus('current')
hwMstpProNewPortBpduFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2), ("undo", 3))).clone('undo')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpProNewPortBpduFilter.setStatus('current')
hwMstpProNewPortStpRXTC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProNewPortStpRXTC.setStatus('current')
hwMstpProNewPortStpTXTC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProNewPortStpTXTC.setStatus('current')
hwMstpProNewPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 29, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("alternate", 2), ("backup", 3), ("root", 4), ("designated", 5), ("master", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMstpProNewPortRole.setStatus('current')
hwMstpEdgedPortDefault = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 30), HwMSTPEnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpEdgedPortDefault.setStatus('current')
hwMstpBpduFilterPortDefault = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 31), HwMSTPEnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpBpduFilterPortDefault.setStatus('current')
hwMstpTransmitLimitDefault = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMstpTransmitLimitDefault.setStatus('current')
hwMstpTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2))
if mibBuilder.loadTexts: hwMstpTraps.setStatus('current')
hwMstpiPortStateForwarding = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 1)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpInstanceID"), ("HUAWEI-MSTP-MIB", "hwMstpiPortIndex"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMstpiPortStateForwarding.setStatus('current')
hwMstpiPortStateDiscarding = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 2)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpInstanceID"), ("HUAWEI-MSTP-MIB", "hwMstpiPortIndex"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMstpiPortStateDiscarding.setStatus('current')
hwMstpiBridgeLostRootPrimary = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 3)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpInstanceID"))
if mibBuilder.loadTexts: hwMstpiBridgeLostRootPrimary.setStatus('current')
hwMstpiPortRootGuarded = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 4)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpInstanceID"), ("HUAWEI-MSTP-MIB", "hwMstpiPortIndex"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMstpiPortRootGuarded.setStatus('current')
hwMstpiPortBpduGuarded = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 5)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpiPortIndex"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMstpiPortBpduGuarded.setStatus('current')
hwMstpiPortLoopGuarded = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 6)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpInstanceID"), ("HUAWEI-MSTP-MIB", "hwMstpiPortIndex"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMstpiPortLoopGuarded.setStatus('current')
hwMstpiEdgePortChanged = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 7)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpiStpPortEdgeport"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMstpiEdgePortChanged.setStatus('current')
hwMstpProPortStateForwarding = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 8)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProPortState"))
if mibBuilder.loadTexts: hwMstpProPortStateForwarding.setStatus('current')
hwMstpProPortStateDiscarding = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 9)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProPortState"))
if mibBuilder.loadTexts: hwMstpProPortStateDiscarding.setStatus('current')
hwMstpProBridgeLostRootPrimary = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 10)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProPortState"))
if mibBuilder.loadTexts: hwMstpProBridgeLostRootPrimary.setStatus('current')
hwMstpProPortRootGuarded = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 11)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProPortState"))
if mibBuilder.loadTexts: hwMstpProPortRootGuarded.setStatus('current')
hwMstpProPortBpduGuarded = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 12)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProPortState"))
if mibBuilder.loadTexts: hwMstpProPortBpduGuarded.setStatus('current')
hwMstpProPortLoopGuarded = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 13)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProPortState"))
if mibBuilder.loadTexts: hwMstpProPortLoopGuarded.setStatus('current')
hwMstpProEdgePortChanged = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 14)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProPortStpEdgeport"))
if mibBuilder.loadTexts: hwMstpProEdgePortChanged.setStatus('current')
hwMstpiTcGuarded = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 15)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpiBridgePriority"))
if mibBuilder.loadTexts: hwMstpiTcGuarded.setStatus('current')
hwMstpProTcGuarded = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 16)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProTcGuard"), ("HUAWEI-MSTP-MIB", "hwMstpProInstanceBridgePriority"))
if mibBuilder.loadTexts: hwMstpProTcGuarded.setStatus('current')
hwMstpProRootChanged = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 17)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProInstanceRootPort"))
if mibBuilder.loadTexts: hwMstpProRootChanged.setStatus('current')
hwMstpProNewPortStateForwarding = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 18)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProNewPortState"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMstpProNewPortStateForwarding.setStatus('current')
hwMstpProNewPortStateDiscarding = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 19)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProNewPortState"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMstpProNewPortStateDiscarding.setStatus('current')
hwMstpProNewBridgeLostRootPrimary = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 20)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProInstanceRootType"))
if mibBuilder.loadTexts: hwMstpProNewBridgeLostRootPrimary.setStatus('current')
hwMstpProNewPortRootGuarded = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 21)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProNewPortState"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMstpProNewPortRootGuarded.setStatus('current')
hwMstpProNewPortBpduGuarded = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 22)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProNewPortState"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMstpProNewPortBpduGuarded.setStatus('current')
hwMstpProNewPortLoopGuarded = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 23)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProNewPortState"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMstpProNewPortLoopGuarded.setStatus('current')
hwMstpProNewEdgePortChanged = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 24)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProNewPortState"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMstpProNewEdgePortChanged.setStatus('current')
hwMstpProLoopbackDetected = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 2, 25)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProNewPortState"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMstpProLoopbackDetected.setStatus('current')
hwMstpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 3))
hwMstpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 3, 1))
hwMstpBridgeInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 3, 1, 1)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpStatus"), ("HUAWEI-MSTP-MIB", "hwMstpForceVersion"), ("HUAWEI-MSTP-MIB", "hwMstpDiameter"), ("HUAWEI-MSTP-MIB", "hwMstpBridgeMaxHops"), ("HUAWEI-MSTP-MIB", "hwMstpMasterBridgeID"), ("HUAWEI-MSTP-MIB", "hwMstpMasterPathCost"), ("HUAWEI-MSTP-MIB", "hwMstpBpduGuard"), ("HUAWEI-MSTP-MIB", "hwMstpAdminFormatSelector"), ("HUAWEI-MSTP-MIB", "hwMstpAdminRegionName"), ("HUAWEI-MSTP-MIB", "hwMstpAdminRevisionLevel"), ("HUAWEI-MSTP-MIB", "hwMstpOperFormatSelector"), ("HUAWEI-MSTP-MIB", "hwMstpOperRegionName"), ("HUAWEI-MSTP-MIB", "hwMstpOperRevisionLevel"), ("HUAWEI-MSTP-MIB", "hwMstpRegionConfActive"), ("HUAWEI-MSTP-MIB", "hwMstpDefaultVlanAllo"), ("HUAWEI-MSTP-MIB", "hwMstpDefaultRegionName"), ("HUAWEI-MSTP-MIB", "hwMstpPathCostStandard"), ("HUAWEI-MSTP-MIB", "hwMstpSnooping"), ("HUAWEI-MSTP-MIB", "hwMstpTcGuard"), ("HUAWEI-MSTP-MIB", "hwMstpTcGuardThreshold"), ("HUAWEI-MSTP-MIB", "hwMstpEdgedPortDefault"), ("HUAWEI-MSTP-MIB", "hwMstpBpduFilterPortDefault"), ("HUAWEI-MSTP-MIB", "hwMstpTransmitLimitDefault"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMstpBridgeInfoGroup = hwMstpBridgeInfoGroup.setStatus('current')
hwMstpVlanInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 3, 1, 2)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpAdminMstID"), ("HUAWEI-MSTP-MIB", "hwMstpOperMstID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMstpVlanInfoGroup = hwMstpVlanInfoGroup.setStatus('current')
hwMstpInstanceInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 3, 1, 3)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpiBridgeID"), ("HUAWEI-MSTP-MIB", "hwMstpiBridgePriority"), ("HUAWEI-MSTP-MIB", "hwMstpiDesignedRoot"), ("HUAWEI-MSTP-MIB", "hwMstpiRootPathCost"), ("HUAWEI-MSTP-MIB", "hwMstpiRootPort"), ("HUAWEI-MSTP-MIB", "hwMstpiRootType"), ("HUAWEI-MSTP-MIB", "hwMstpiRemainingHops"), ("HUAWEI-MSTP-MIB", "hwMstpiAdminMappedVlanListLow"), ("HUAWEI-MSTP-MIB", "hwMstpiAdminMappedVlanListHigh"), ("HUAWEI-MSTP-MIB", "hwMstpiOperMappedVlanListLow"), ("HUAWEI-MSTP-MIB", "hwMstpiOperMappedVlanListHigh"), ("HUAWEI-MSTP-MIB", "hwMstpiRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMstpInstanceInfoGroup = hwMstpInstanceInfoGroup.setStatus('current')
hwMstpPortInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 3, 1, 4)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpiState"), ("HUAWEI-MSTP-MIB", "hwMstpiPortPriority"), ("HUAWEI-MSTP-MIB", "hwMstpiPathCost"), ("HUAWEI-MSTP-MIB", "hwMstpiDesignatedRoot"), ("HUAWEI-MSTP-MIB", "hwMstpiDesignatedCost"), ("HUAWEI-MSTP-MIB", "hwMstpiDesignatedBridge"), ("HUAWEI-MSTP-MIB", "hwMstpiDesignatedPort"), ("HUAWEI-MSTP-MIB", "hwMstpiStpPortEdgeport"), ("HUAWEI-MSTP-MIB", "hwMstpiStpPortPointToPoint"), ("HUAWEI-MSTP-MIB", "hwMstpiStpMcheck"), ("HUAWEI-MSTP-MIB", "hwMstpiStpTransLimit"), ("HUAWEI-MSTP-MIB", "hwMstpiStpRXStpBPDU"), ("HUAWEI-MSTP-MIB", "hwMstpiStpTXStpBPDU"), ("HUAWEI-MSTP-MIB", "hwMstpiStpRXTCNBPDU"), ("HUAWEI-MSTP-MIB", "hwMstpiStpTXTCNBPDU"), ("HUAWEI-MSTP-MIB", "hwMstpiStpRXRSTPBPDU"), ("HUAWEI-MSTP-MIB", "hwMstpiStpTXRSTPBPDU"), ("HUAWEI-MSTP-MIB", "hwMstpiStpRXMSTPBPDU"), ("HUAWEI-MSTP-MIB", "hwMstpiStpTXMSTPBPDU"), ("HUAWEI-MSTP-MIB", "hwMstpiStpClearStatistics"), ("HUAWEI-MSTP-MIB", "hwMstpiStpDefaultPortCost"), ("HUAWEI-MSTP-MIB", "hwMstpiStpStatus"), ("HUAWEI-MSTP-MIB", "hwMstpiPortRootGuard"), ("HUAWEI-MSTP-MIB", "hwMstpiPortLoopGuard"), ("HUAWEI-MSTP-MIB", "hwMstpPortCompliance"), ("HUAWEI-MSTP-MIB", "hwMstpConfigDigestSnooping"), ("HUAWEI-MSTP-MIB", "hwMstpNoAgreementCheck"), ("HUAWEI-MSTP-MIB", "hwMstpPortTCNotify"), ("HUAWEI-MSTP-MIB", "hwMstpiStpPortBpduFilter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMstpPortInfoGroup = hwMstpPortInfoGroup.setStatus('current')
hwMstpAccessoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 3, 1, 5)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpBackupReplyAgreement"), ("HUAWEI-MSTP-MIB", "hwMstpStpNoAgreementCheck"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMstpAccessoryGroup = hwMstpAccessoryGroup.setStatus('current')
hwMstpNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 3, 1, 6)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpiPortStateForwarding"), ("HUAWEI-MSTP-MIB", "hwMstpiPortStateDiscarding"), ("HUAWEI-MSTP-MIB", "hwMstpiBridgeLostRootPrimary"), ("HUAWEI-MSTP-MIB", "hwMstpiPortRootGuarded"), ("HUAWEI-MSTP-MIB", "hwMstpiPortBpduGuarded"), ("HUAWEI-MSTP-MIB", "hwMstpiPortLoopGuarded"), ("HUAWEI-MSTP-MIB", "hwMstpiEdgePortChanged"), ("HUAWEI-MSTP-MIB", "hwMstpiTcGuarded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMstpNotificationGroup = hwMstpNotificationGroup.setStatus('current')
hwMstpProGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 3, 1, 7)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProStpState"), ("HUAWEI-MSTP-MIB", "hwMstpProPriority"), ("HUAWEI-MSTP-MIB", "hwMstpProRootType"), ("HUAWEI-MSTP-MIB", "hwMstpProForceVersion"), ("HUAWEI-MSTP-MIB", "hwMstpProBpduGuard"), ("HUAWEI-MSTP-MIB", "hwMstpProDiameter"), ("HUAWEI-MSTP-MIB", "hwMstpProConvergeMode"), ("HUAWEI-MSTP-MIB", "hwMstpProMaxHops"), ("HUAWEI-MSTP-MIB", "hwMstpProMCheck"), ("HUAWEI-MSTP-MIB", "hwMstpProPathCostStandard"), ("HUAWEI-MSTP-MIB", "hwMstpProHelloTime"), ("HUAWEI-MSTP-MIB", "hwMstpProFwdDelay"), ("HUAWEI-MSTP-MIB", "hwMstpProMaxAge"), ("HUAWEI-MSTP-MIB", "hwMstpProTimerFactor"), ("HUAWEI-MSTP-MIB", "hwMstpProTcGuard"), ("HUAWEI-MSTP-MIB", "hwMstpProTcGuardThreshold"), ("HUAWEI-MSTP-MIB", "hwMstpProTcNotifyProcess"), ("HUAWEI-MSTP-MIB", "hwMstpProRegionConfActive"), ("HUAWEI-MSTP-MIB", "hwMstpProRowStatus"), ("HUAWEI-MSTP-MIB", "hwMstpProLinkShareGuard"), ("HUAWEI-MSTP-MIB", "hwMstpConfigDegist"), ("HUAWEI-MSTP-MIB", "hwMstpProTcGuardInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMstpProGroup = hwMstpProGroup.setStatus('current')
hwMstpProPortInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 3, 1, 8)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpPortVlanListLow"), ("HUAWEI-MSTP-MIB", "hwMstpPortVlanListHigh"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortType"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortBpduVlan"), ("HUAWEI-MSTP-MIB", "hwMstpPortBindRowStatus"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortState"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortPriority"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortPathCost"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortDesignatedRoot"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortDesignatedCost"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortDesignatedBridge"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortDesignatedPort"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStpEdgeport"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStpPointToPoint"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStpMcheck"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStpTransLimit"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStpRXStpBPDU"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStpTXStpBPDU"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStpRXTCNBPDU"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStpTXTCNBPDU"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStpRXRSTPBPDU"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStpTXRSTPBPDU"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStpRXMSTPBPDU"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStpTXMSTPBPDU"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStpClearStatistics"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStpDefaultPortCost"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStpStatus"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortRootGuard"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortLoopGuard"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortCompliance"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortConfigDigestSnooping"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortNoAgreementCheck"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortVplsSubinterfaceEnable"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortBpduEncapsulation"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortBpduFilter"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStpRXTC"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStpTXTC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMstpProPortInfoGroup = hwMstpProPortInfoGroup.setStatus('current')
hwMstpProNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 3, 1, 9)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProTcGuarded"), ("HUAWEI-MSTP-MIB", "hwMstpProRootChanged"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStateForwarding"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortStateDiscarding"), ("HUAWEI-MSTP-MIB", "hwMstpProNewBridgeLostRootPrimary"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortRootGuarded"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortBpduGuarded"), ("HUAWEI-MSTP-MIB", "hwMstpProNewPortLoopGuarded"), ("HUAWEI-MSTP-MIB", "hwMstpProNewEdgePortChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMstpProNotificationGroup = hwMstpProNotificationGroup.setStatus('current')
hwMstpProInstanceInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 3, 1, 10)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpProInstanceBridgeID"), ("HUAWEI-MSTP-MIB", "hwMstpProInstanceBridgePriority"), ("HUAWEI-MSTP-MIB", "hwMstpProInstanceDesignedRoot"), ("HUAWEI-MSTP-MIB", "hwMstpProInstanceRootPathCost"), ("HUAWEI-MSTP-MIB", "hwMstpProInstanceRootPort"), ("HUAWEI-MSTP-MIB", "hwMstpProInstanceRootType"), ("HUAWEI-MSTP-MIB", "hwMstpProInstanceRemainingHops"), ("HUAWEI-MSTP-MIB", "hwMstpProInstanceAdminMappedVlanListLow"), ("HUAWEI-MSTP-MIB", "hwMstpProInstanceAdminMappedVlanListHigh"), ("HUAWEI-MSTP-MIB", "hwMstpProInstanceOperMappedVlanListLow"), ("HUAWEI-MSTP-MIB", "hwMstpProInstanceOperMappedVlanListHigh"), ("HUAWEI-MSTP-MIB", "hwMstpProInstanceRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMstpProInstanceInfoGroup = hwMstpProInstanceInfoGroup.setStatus('current')
hwMstpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 3, 2))
hwMstpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 4, 3, 2, 1)).setObjects(("HUAWEI-MSTP-MIB", "hwMstpBridgeInfoGroup"), ("HUAWEI-MSTP-MIB", "hwMstpVlanInfoGroup"), ("HUAWEI-MSTP-MIB", "hwMstpInstanceInfoGroup"), ("HUAWEI-MSTP-MIB", "hwMstpPortInfoGroup"), ("HUAWEI-MSTP-MIB", "hwMstpAccessoryGroup"), ("HUAWEI-MSTP-MIB", "hwMstpProGroup"), ("HUAWEI-MSTP-MIB", "hwMstpProPortInfoGroup"), ("HUAWEI-MSTP-MIB", "hwMstpProNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMstpCompliance = hwMstpCompliance.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-MSTP-MIB", hwMstpVIDAllocationEntry=hwMstpVIDAllocationEntry, hwMstpiPortBpduGuarded=hwMstpiPortBpduGuarded, hwMstpProNotificationGroup=hwMstpProNotificationGroup, hwMstpiAdminMappedVlanListLow=hwMstpiAdminMappedVlanListLow, hwMstpiPortRole=hwMstpiPortRole, hwMstpProPortStpRXStpBPDU=hwMstpProPortStpRXStpBPDU, hwMstpiStpPortEdgeport=hwMstpiStpPortEdgeport, hwMstpProForceVersion=hwMstpProForceVersion, hwMstpProInstanceInfoGroup=hwMstpProInstanceInfoGroup, hwMstpProEdgePortChanged=hwMstpProEdgePortChanged, hwMstpConfigDigestSnooping=hwMstpConfigDigestSnooping, hwMstpProPortStpTXTCNBPDU=hwMstpProPortStpTXTCNBPDU, hwMstpProPortStpRXRSTPBPDU=hwMstpProPortStpRXRSTPBPDU, hwMstpStpNoAgreementCheck=hwMstpStpNoAgreementCheck, hwMstpProBpduGuard=hwMstpProBpduGuard, hwMstpProNewPortStpRXTC=hwMstpProNewPortStpRXTC, hwMstpProNewPortTable=hwMstpProNewPortTable, hwMstpProPortPathCost=hwMstpProPortPathCost, hwMstpDefaultRegionName=hwMstpDefaultRegionName, hwMstpConformance=hwMstpConformance, HwMSTPEnabledStatus=HwMSTPEnabledStatus, hwMstpForceVersion=hwMstpForceVersion, hwMstpOperFormatSelector=hwMstpOperFormatSelector, hwMstpProInstanceRootType=hwMstpProInstanceRootType, hwMstpiStpPortPointToPoint=hwMstpiStpPortPointToPoint, hwMstpProNewPortStpPointToPoint=hwMstpProNewPortStpPointToPoint, hwMstpPortBindTable=hwMstpPortBindTable, hwMstpProInstanceOperMappedVlanListHigh=hwMstpProInstanceOperMappedVlanListHigh, hwMstpVlanInfoGroup=hwMstpVlanInfoGroup, hwMstpProRootType=hwMstpProRootType, hwMstpAccessoryGroup=hwMstpAccessoryGroup, hwMstpPortBindEntry=hwMstpPortBindEntry, hwMstpProPortInfoGroup=hwMstpProPortInfoGroup, hwMstpProPortDesignatedRoot=hwMstpProPortDesignatedRoot, hwMstpMasterPathCost=hwMstpMasterPathCost, hwMstpiRootPort=hwMstpiRootPort, hwMstpAccessoryEntry=hwMstpAccessoryEntry, hwMstpProInstanceRemainingHops=hwMstpProInstanceRemainingHops, hwMstpiStpRXStpBPDU=hwMstpiStpRXStpBPDU, hwMstpProNewPortState=hwMstpProNewPortState, hwMstpiPortRootGuard=hwMstpiPortRootGuard, hwMstpInstanceEntry=hwMstpInstanceEntry, hwMstpPortId4=hwMstpPortId4, hwMstpiStpTXStpBPDU=hwMstpiStpTXStpBPDU, hwMstpOperRevisionLevel=hwMstpOperRevisionLevel, hwMstpProPortStateForwarding=hwMstpProPortStateForwarding, hwMstpProTcGuarded=hwMstpProTcGuarded, hwMstpProPriority=hwMstpProPriority, hwMstpProConvergeMode=hwMstpProConvergeMode, hwMstpiStpTransLimit=hwMstpiStpTransLimit, hwMstpiTcGuarded=hwMstpiTcGuarded, hwMstpProInstanceOperMappedVlanListLow=hwMstpProInstanceOperMappedVlanListLow, hwMstpNoAgreementCheck=hwMstpNoAgreementCheck, hwMstpProTcNotifyProcess=hwMstpProTcNotifyProcess, hwMstpPortIdFlag=hwMstpPortIdFlag, PYSNMP_MODULE_ID=hwMstp, hwMstpProPortStpDefaultPortCost=hwMstpProPortStpDefaultPortCost, hwMstpiStpRXTCNBPDU=hwMstpiStpRXTCNBPDU, hwMstpiStpStatus=hwMstpiStpStatus, hwMstpProMaxHops=hwMstpProMaxHops, hwMstpPortId3=hwMstpPortId3, hwMstpProPortStpTXRSTPBPDU=hwMstpProPortStpTXRSTPBPDU, hwMstpInstanceInfoGroup=hwMstpInstanceInfoGroup, hwMstpNotificationGroup=hwMstpNotificationGroup, hwMstpTraps=hwMstpTraps, hwMstpMasterBridgeID=hwMstpMasterBridgeID, hwMstpiDesignatedCost=hwMstpiDesignatedCost, hwMstpConfigDegist=hwMstpConfigDegist, hwMstpAccessoryTable=hwMstpAccessoryTable, hwMstpProNewPortCompliance=hwMstpProNewPortCompliance, hwMstpProNewPortStateDiscarding=hwMstpProNewPortStateDiscarding, hwMstpPortInfoGroup=hwMstpPortInfoGroup, hwMstpProNewPortBpduGuarded=hwMstpProNewPortBpduGuarded, hwMstpProNewPortConfigDigestSnooping=hwMstpProNewPortConfigDigestSnooping, hwMstpiPortPriority=hwMstpiPortPriority, hwMstpCompliance=hwMstpCompliance, hwMstpProInstanceBridgePriority=hwMstpProInstanceBridgePriority, hwMstpProNewPortStpRXMSTPBPDU=hwMstpProNewPortStpRXMSTPBPDU, hwMstpProInstanceTable=hwMstpProInstanceTable, hwMstpProNewPortVplsSubinterfaceEnable=hwMstpProNewPortVplsSubinterfaceEnable, hwMstpProPortStpClearStatistics=hwMstpProPortStpClearStatistics, hwMstpPortVlanListHigh=hwMstpPortVlanListHigh, hwMstpProRootChanged=hwMstpProRootChanged, hwMstpiOperMappedVlanListHigh=hwMstpiOperMappedVlanListHigh, hwMstpProPortDesignatedCost=hwMstpProPortDesignatedCost, hwMstpProNewPortBpduEncapsulation=hwMstpProNewPortBpduEncapsulation, hwMstpProPortDesignatedBridge=hwMstpProPortDesignatedBridge, hwMstpRegionConfActive=hwMstpRegionConfActive, hwMstpPathCostStandard=hwMstpPathCostStandard, hwMstpProNewPortType=hwMstpProNewPortType, hwMstpProPortConfigDigestSnooping=hwMstpProPortConfigDigestSnooping, hwMstpProNewPortPriority=hwMstpProNewPortPriority, hwMstpProInstanceRowStatus=hwMstpProInstanceRowStatus, hwMstpProGroup=hwMstpProGroup, hwMstpiAdminMappedVlanListHigh=hwMstpiAdminMappedVlanListHigh, hwMstpTcGuard=hwMstpTcGuard, hwMstpProNewPortStpRXTCNBPDU=hwMstpProNewPortStpRXTCNBPDU, hwMstpiStpRXRSTPBPDU=hwMstpiStpRXRSTPBPDU, hwMstpProInstanceAdminMappedVlanListHigh=hwMstpProInstanceAdminMappedVlanListHigh, hwMstpBridgeInfoGroup=hwMstpBridgeInfoGroup, hwMstpProPortNoAgreementCheck=hwMstpProPortNoAgreementCheck, hwMstpProNewBridgeLostRootPrimary=hwMstpProNewBridgeLostRootPrimary, hwMstpProNoLinkSharePortList=hwMstpProNoLinkSharePortList, hwMstpiPortRootGuarded=hwMstpiPortRootGuarded, hwMstpTcGuardThreshold=hwMstpTcGuardThreshold, hwMstpEdgedPortDefault=hwMstpEdgedPortDefault, hwMstpAdminFormatSelector=hwMstpAdminFormatSelector, hwMstpProLinkShareGuard=hwMstpProLinkShareGuard, hwMstpProNewEdgePortChanged=hwMstpProNewEdgePortChanged, hwMstpiPortLoopGuard=hwMstpiPortLoopGuard, hwMstpAdminRegionName=hwMstpAdminRegionName, hwMstpProInstanceBridgeID=hwMstpProInstanceBridgeID, hwMstpProInstanceDesignedRoot=hwMstpProInstanceDesignedRoot, hwMstpiOperMappedVlanListLow=hwMstpiOperMappedVlanListLow, hwMstpProFwdDelay=hwMstpProFwdDelay, hwMstpiDesignatedPort=hwMstpiDesignatedPort, hwMstpProPortRootGuard=hwMstpProPortRootGuard, hwMstpProNewPortStpTXRSTPBPDU=hwMstpProNewPortStpTXRSTPBPDU, hwMstpiPortStateDiscarding=hwMstpiPortStateDiscarding, hwMstpProStpState=hwMstpProStpState, hwMstpProNewPortStpClearStatistics=hwMstpProNewPortStpClearStatistics, hwMstpiStpMcheck=hwMstpiStpMcheck, hwMstpProPortDesignatedPort=hwMstpProPortDesignatedPort, hwMstpProNewPortStpTransLimit=hwMstpProNewPortStpTransLimit, hwMstpProPortRootGuarded=hwMstpProPortRootGuarded, hwMstpProNewPortStpMcheck=hwMstpProNewPortStpMcheck, hwMstpProNewPortDesignatedRoot=hwMstpProNewPortDesignatedRoot, hwMstpProTCNotify=hwMstpProTCNotify, hwMstpiEdgePortChanged=hwMstpiEdgePortChanged, hwMstpProLoopbackDetected=hwMstpProLoopbackDetected, hwMstpiRemainingHops=hwMstpiRemainingHops, hwMstpProPortBpduGuarded=hwMstpProPortBpduGuarded, hwMstpProTcGuard=hwMstpProTcGuard, hwMstp=hwMstp, hwMstpProTcGuardInterval=hwMstpProTcGuardInterval, hwMstpProPortLoopGuard=hwMstpProPortLoopGuard, hwMstpProInstanceRootPathCost=hwMstpProInstanceRootPathCost, hwMstpiStpDefaultPortCost=hwMstpiStpDefaultPortCost, hwMstpProNewPortRole=hwMstpProNewPortRole, hwMstpProPortStpRXMSTPBPDU=hwMstpProPortStpRXMSTPBPDU, hwMstpiBridgeLostRootPrimary=hwMstpiBridgeLostRootPrimary, hwMstpiPortIndex=hwMstpiPortIndex, hwMstpProNewPortBpduVlan=hwMstpProNewPortBpduVlan, hwMstpiBridgePriority=hwMstpiBridgePriority, hwMstpiRootType=hwMstpiRootType, hwMstpiPathCost=hwMstpiPathCost, hwMstpProPortTable=hwMstpProPortTable, hwMstpProNewPortStpDefaultPortCost=hwMstpProNewPortStpDefaultPortCost, hwMstpProNewPortNoAgreementCheck=hwMstpProNewPortNoAgreementCheck, hwMstpPortId2=hwMstpPortId2, hwMstpiDesignatedBridge=hwMstpiDesignatedBridge, hwMstpProPortStpStatus=hwMstpProPortStpStatus, hwMstpProPortCompliance=hwMstpProPortCompliance, hwMstpProHelloTime=hwMstpProHelloTime, hwMstpInstanceTable=hwMstpInstanceTable, hwMstpProPortType=hwMstpProPortType, hwMstpOperMstID=hwMstpOperMstID, hwMstpProNewPortRootGuarded=hwMstpProNewPortRootGuarded, hwMstpProInstanceEntry=hwMstpProInstanceEntry, hwMstpiStpRXMSTPBPDU=hwMstpiStpRXMSTPBPDU, hwMstpProRowStatus=hwMstpProRowStatus, hwMstpiStpTXMSTPBPDU=hwMstpiStpTXMSTPBPDU, hwMstpProNewPortDesignatedCost=hwMstpProNewPortDesignatedCost, hwMstpProDiameter=hwMstpProDiameter, hwMstpVIDAllocationTable=hwMstpVIDAllocationTable, hwMstpProInstanceAdminMappedVlanListLow=hwMstpProInstanceAdminMappedVlanListLow, hwMstpiRowStatus=hwMstpiRowStatus, hwMstpObjects=hwMstpObjects, hwMstpVID=hwMstpVID, hwMstpProPortStpPointToPoint=hwMstpProPortStpPointToPoint, hwMstpProPortStpTXMSTPBPDU=hwMstpProPortStpTXMSTPBPDU, hwMstpProTable=hwMstpProTable, hwMstpProPathCostStandard=hwMstpProPathCostStandard, hwMstpTransmitLimitDefault=hwMstpTransmitLimitDefault, hwMstpCompliances=hwMstpCompliances, hwMstpProNewPortStpRXRSTPBPDU=hwMstpProNewPortStpRXRSTPBPDU, hwMstpPortCompliance=hwMstpPortCompliance, hwMstpDefaultVlanAllo=hwMstpDefaultVlanAllo, hwMstpProEntry=hwMstpProEntry, hwMstpProNewPortDesignatedPort=hwMstpProNewPortDesignatedPort, hwMstpPortBindRowStatus=hwMstpPortBindRowStatus, hwMstpBridgeMaxHops=hwMstpBridgeMaxHops, hwMstpProPortStpTXStpBPDU=hwMstpProPortStpTXStpBPDU, hwMstpProPortTCNotify=hwMstpProPortTCNotify, hwMstpAdminRevisionLevel=hwMstpAdminRevisionLevel, hwMstpiBridgeID=hwMstpiBridgeID, hwMstpProMaxAge=hwMstpProMaxAge, hwMstpStatus=hwMstpStatus, hwMstpiStpClearStatistics=hwMstpiStpClearStatistics, hwMstpGroups=hwMstpGroups, hwMstpProPortLoopGuarded=hwMstpProPortLoopGuarded, hwMstpProPortEntry=hwMstpProPortEntry, hwMstpiDesignatedRoot=hwMstpiDesignatedRoot, hwMstpProPortStpEdgeport=hwMstpProPortStpEdgeport, hwMstpDiameter=hwMstpDiameter, hwMstpiDesignedRoot=hwMstpiDesignedRoot, hwMstpPortId1=hwMstpPortId1, hwMstpiStpTXRSTPBPDU=hwMstpiStpTXRSTPBPDU, hwMstpProNewPortStpTXStpBPDU=hwMstpProNewPortStpTXStpBPDU, hwMstpProTimerFactor=hwMstpProTimerFactor, hwMstpAdminMstID=hwMstpAdminMstID, hwMstpiState=hwMstpiState, hwMstpiPortLoopGuarded=hwMstpiPortLoopGuarded, hwMstpiStpTXTCNBPDU=hwMstpiStpTXTCNBPDU, hwMstpProNewPortLoopGuard=hwMstpProNewPortLoopGuard, hwMstpProNewPortStpEdgeport=hwMstpProNewPortStpEdgeport, hwMstpAccessoryIndex=hwMstpAccessoryIndex, hwMstpSnooping=hwMstpSnooping, hwMstpOperRegionName=hwMstpOperRegionName, hwMstpPortTCNotify=hwMstpPortTCNotify, hwMstpProPortStpMcheck=hwMstpProPortStpMcheck, hwMstpProMCheck=hwMstpProMCheck, hwMstpiPortStateForwarding=hwMstpiPortStateForwarding, hwMstpProNewPortLoopGuarded=hwMstpProNewPortLoopGuarded, hwMstpProNewPortStpTXTCNBPDU=hwMstpProNewPortStpTXTCNBPDU, hwMstpProID=hwMstpProID, hwMstpProNewPortBpduFilter=hwMstpProNewPortBpduFilter, hwMstpProNewPortStpTXMSTPBPDU=hwMstpProNewPortStpTXMSTPBPDU, hwMstpProBridgeLostRootPrimary=hwMstpProBridgeLostRootPrimary, hwMstpProNewPortStateForwarding=hwMstpProNewPortStateForwarding, hwMstpProTcGuardThreshold=hwMstpProTcGuardThreshold, hwMstpInstanceID=hwMstpInstanceID, hwMstpPortVlanListLow=hwMstpPortVlanListLow, hwMstpProNewPortEntry=hwMstpProNewPortEntry, hwMstpProNewPortStpStatus=hwMstpProNewPortStpStatus, hwL2Mgmt=hwL2Mgmt, hwMstpiRootPathCost=hwMstpiRootPathCost, hwMstpProLinkSharePortList=hwMstpProLinkSharePortList, hwMstpProNewPortRootGuard=hwMstpProNewPortRootGuard, hwMstpBpduFilterPortDefault=hwMstpBpduFilterPortDefault, hwMstpProRegionConfShare=hwMstpProRegionConfShare, hwMstpPortTable=hwMstpPortTable, hwMstpProPortStateDiscarding=hwMstpProPortStateDiscarding, hwMstpBackupReplyAgreement=hwMstpBackupReplyAgreement, hwMstpProInstanceRootPort=hwMstpProInstanceRootPort, hwMstpProPortState=hwMstpProPortState, hwMstpProNewPortPathCost=hwMstpProNewPortPathCost, hwMstpProNewPortDesignatedBridge=hwMstpProNewPortDesignatedBridge, hwMstpProPortPriority=hwMstpProPortPriority, hwMstpProPortStpTransLimit=hwMstpProPortStpTransLimit, hwMstpiStpPortBpduFilter=hwMstpiStpPortBpduFilter, hwMstpProRegionConfActive=hwMstpProRegionConfActive, hwMstpProNewPortStpRXStpBPDU=hwMstpProNewPortStpRXStpBPDU, hwMstpProNewPortStpTXTC=hwMstpProNewPortStpTXTC, hwMstpProPortStpRXTCNBPDU=hwMstpProPortStpRXTCNBPDU, hwMstpBpduGuard=hwMstpBpduGuard, hwMstpPortEntry=hwMstpPortEntry)
