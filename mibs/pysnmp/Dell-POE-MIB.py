#
# PySNMP MIB module Dell-POE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Dell-POE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:41:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
rnd, = mibBuilder.importSymbols("Dell-MIB", "rnd")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Integer32, NotificationType, iso, ObjectIdentity, TimeTicks, Counter64, Gauge32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, Bits, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "NotificationType", "iso", "ObjectIdentity", "TimeTicks", "Counter64", "Gauge32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "Bits", "Unsigned32")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
rlPoe = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 108))
rlPoe.setRevisions(('2010-06-02 00:00', '2009-11-26 00:00',))
if mibBuilder.loadTexts: rlPoe.setLastUpdated('200911260000Z')
if mibBuilder.loadTexts: rlPoe.setOrganization('Dell.')
rlPethPsePortTable = MibTable((1, 3, 6, 1, 4, 1, 89, 108, 1), )
if mibBuilder.loadTexts: rlPethPsePortTable.setStatus('current')
rlPethPsePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 108, 1, 1), ).setIndexNames((0, "Dell-POE-MIB", "rlPethPsePortGroupIndex"), (0, "Dell-POE-MIB", "rlPethPsePortIndex"))
if mibBuilder.loadTexts: rlPethPsePortEntry.setStatus('current')
rlPethPsePortGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rlPethPsePortGroupIndex.setStatus('current')
rlPethPsePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rlPethPsePortIndex.setStatus('current')
rlPethPsePortOutputVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortOutputVoltage.setStatus('current')
rlPethPsePortOutputCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortOutputCurrent.setStatus('current')
rlPethPsePortOutputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortOutputPower.setStatus('current')
rlPethPsePortPowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPsePortPowerLimit.setStatus('current')
rlPethPsePortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortStatus.setStatus('current')
rlPethPsePortStatusDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortStatusDescription.setStatus('current')
rlPethPsePortOperPowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortOperPowerLimit.setStatus('current')
rlPethPsePortSupportPoePlus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortSupportPoePlus.setStatus('current')
rlPethPsePortTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPsePortTimeRangeName.setStatus('current')
rlPethPsePortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortOperStatus.setStatus('current')
rlPethPsePortMaxPowerAllocAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortMaxPowerAllocAllowed.setStatus('current')
rlPethPsePortSupportPoe = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortSupportPoe.setStatus('current')
rlPethMainPseTable = MibTable((1, 3, 6, 1, 4, 1, 89, 108, 2), )
if mibBuilder.loadTexts: rlPethMainPseTable.setStatus('current')
rlPethMainPseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 108, 2, 1), ).setIndexNames((0, "Dell-POE-MIB", "rlPethMainPseGroupIndex"))
if mibBuilder.loadTexts: rlPethMainPseEntry.setStatus('current')
rlPethMainPseGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rlPethMainPseGroupIndex.setStatus('current')
rlPethMainPseSwVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethMainPseSwVersion.setStatus('current')
rlPethMainPseHwVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethMainPseHwVersion.setStatus('current')
rlPethMainPseHwType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("enhanced", 1), ("plus", 2), ("auto", 3), ("nonPoe", 4), ("enhancedPlus", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethMainPseHwType.setStatus('current')
rlPethMainPsePowerGuardBand = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethMainPsePowerGuardBand.setStatus('current')
rlPethPowerPseTable = MibTable((1, 3, 6, 1, 4, 1, 89, 108, 3), )
if mibBuilder.loadTexts: rlPethPowerPseTable.setStatus('current')
rlPethPowerPseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 108, 3, 1), ).setIndexNames((0, "Dell-POE-MIB", "rlPethPowerPseGroupIndex"))
if mibBuilder.loadTexts: rlPethPowerPseEntry.setStatus('current')
rlPethPowerPseGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: rlPethPowerPseGroupIndex.setStatus('current')
rlPethPowerPsePower = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("ps1", 1), ("ps2", 2), ("ps3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPowerPsePower.setStatus('current')
rlPethPowerPseRpsPower = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("rps1", 1), ("rps2", 2), ("rps3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPowerPseRpsPower.setStatus('current')
rlPethPowerPsePowerManagementMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 5, 6))).clone(namedValues=NamedValues(("portlimit", 0), ("classlimit", 5), ("maxlimit", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPowerPsePowerManagementMode.setStatus('current')
rlPethPowerPsedisconnectMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("lowestpriority", 0), ("nextport", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPowerPsedisconnectMethod.setStatus('current')
rlPethPowerPseTemperatureSensor = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-200, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPowerPseTemperatureSensor.setStatus('current')
rlPethPowerPseInrushTestEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPowerPseInrushTestEnabled.setStatus('current')
rlPethPowerPseLegacyDisabled = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPowerPseLegacyDisabled.setStatus('current')
mibBuilder.exportSymbols("Dell-POE-MIB", rlPethPsePortMaxPowerAllocAllowed=rlPethPsePortMaxPowerAllocAllowed, rlPethPsePortStatus=rlPethPsePortStatus, rlPethPsePortOutputCurrent=rlPethPsePortOutputCurrent, rlPethMainPseTable=rlPethMainPseTable, rlPethPsePortIndex=rlPethPsePortIndex, rlPethMainPseGroupIndex=rlPethMainPseGroupIndex, rlPethPsePortTimeRangeName=rlPethPsePortTimeRangeName, rlPethPowerPseLegacyDisabled=rlPethPowerPseLegacyDisabled, rlPethPsePortSupportPoe=rlPethPsePortSupportPoe, rlPethPowerPseTemperatureSensor=rlPethPowerPseTemperatureSensor, rlPethMainPseHwVersion=rlPethMainPseHwVersion, rlPethPowerPseGroupIndex=rlPethPowerPseGroupIndex, rlPethPsePortOutputVoltage=rlPethPsePortOutputVoltage, rlPethPowerPsePower=rlPethPowerPsePower, rlPoe=rlPoe, rlPethPsePortEntry=rlPethPsePortEntry, rlPethPowerPsedisconnectMethod=rlPethPowerPsedisconnectMethod, rlPethPowerPseEntry=rlPethPowerPseEntry, rlPethPsePortGroupIndex=rlPethPsePortGroupIndex, rlPethPowerPseInrushTestEnabled=rlPethPowerPseInrushTestEnabled, rlPethPowerPseTable=rlPethPowerPseTable, rlPethPsePortSupportPoePlus=rlPethPsePortSupportPoePlus, rlPethMainPsePowerGuardBand=rlPethMainPsePowerGuardBand, rlPethPowerPsePowerManagementMode=rlPethPowerPsePowerManagementMode, rlPethPsePortTable=rlPethPsePortTable, rlPethPowerPseRpsPower=rlPethPowerPseRpsPower, PYSNMP_MODULE_ID=rlPoe, rlPethPsePortStatusDescription=rlPethPsePortStatusDescription, rlPethPsePortOperStatus=rlPethPsePortOperStatus, rlPethMainPseSwVersion=rlPethMainPseSwVersion, rlPethMainPseHwType=rlPethMainPseHwType, rlPethPsePortOperPowerLimit=rlPethPsePortOperPowerLimit, rlPethMainPseEntry=rlPethMainPseEntry, rlPethPsePortPowerLimit=rlPethPsePortPowerLimit, rlPethPsePortOutputPower=rlPethPsePortOutputPower)
