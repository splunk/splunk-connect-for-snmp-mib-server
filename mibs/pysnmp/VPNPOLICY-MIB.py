#
# PySNMP MIB module VPNPOLICY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VPNPOLICY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:28:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, enterprises, NotificationType, Bits, Gauge32, Unsigned32, ObjectIdentity, ModuleIdentity, Counter32, IpAddress, iso, TimeTicks, Counter64, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "enterprises", "NotificationType", "Bits", "Gauge32", "Unsigned32", "ObjectIdentity", "ModuleIdentity", "Counter32", "IpAddress", "iso", "TimeTicks", "Counter64", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class VpIpAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )
ibmIROCVPNpolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15))
vpSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1))
vpPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2))
vpConditions = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3))
vpActions = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4))
vpTests = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5))
vpSystemGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 1))
vpSystemLdap = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2))
vpSysMibLevel = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSysMibLevel.setStatus('mandatory')
vpSysUpTime = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSysUpTime.setStatus('mandatory')
vpSysCurTime = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSysCurTime.setStatus('mandatory')
vpSysHoursFromCut = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("utcMinus0", 1), ("utcMinus1", 2), ("utcMinus2", 3), ("utcMinus3", 4), ("utcMinus4", 5), ("utcMinus5", 6), ("utcMinus6", 7), ("utcMinus7", 8), ("utcMinus8", 9), ("utcMinus9", 10), ("utcMinus10", 11), ("utcMinus11", 12), ("utcPlus1", 13), ("utcPlus2", 14), ("utcPlus3", 15), ("utcPlus4", 16), ("utcPlus5", 17), ("utcPlus6", 18), ("utcPlus7", 19), ("utcPlus8", 20), ("utcPlus9", 21), ("utcPlus10", 22), ("utcPlus11", 23), ("utcPlus12", 24)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSysHoursFromCut.setStatus('mandatory')
vpSysCurConfigSource = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("refreshInProgress", 1), ("none", 2), ("allSources", 3), ("sram", 4), ("ldap", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSysCurConfigSource.setStatus('mandatory')
vpSysRefreshConfig = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fromOperDefs", 1), ("fromAdminDefs", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpSysRefreshConfig.setStatus('mandatory')
vpLdapGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1))
vpLdapGlobalOper = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 1))
vpLdapGlobalAdmin = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 2))
vpLdapGblOperLdapStatus = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpLdapGblOperLdapStatus.setStatus('mandatory')
vpLdapGblOperPrimServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 1, 2), VpIpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpLdapGblOperPrimServerAddr.setStatus('mandatory')
vpLdapGblOperSecServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 1, 3), VpIpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpLdapGblOperSecServerAddr.setStatus('mandatory')
vpLdapGblOperServerLdapLvl = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpLdapGblOperServerLdapLvl.setStatus('mandatory')
vpLdapGblOperPolicyBaseName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpLdapGblOperPolicyBaseName.setStatus('mandatory')
vpLdapGblOperPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpLdapGblOperPortNumber.setStatus('mandatory')
vpLdapGblOperTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpLdapGblOperTimeOut.setStatus('mandatory')
vpLdapGblOperRetryInterval = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpLdapGblOperRetryInterval.setStatus('mandatory')
vpLdapGblOperUserId = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpLdapGblOperUserId.setStatus('mandatory')
vpLdapGblAdminLdapStatus = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpLdapGblAdminLdapStatus.setStatus('mandatory')
vpLdapGblAdminPrimServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 2, 2), VpIpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpLdapGblAdminPrimServerAddr.setStatus('mandatory')
vpLdapGblAdminSecServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 2, 3), VpIpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpLdapGblAdminSecServerAddr.setStatus('mandatory')
vpLdapGblAdminServerLdapLvl = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpLdapGblAdminServerLdapLvl.setStatus('mandatory')
vpLdapGblAdminPolicyBaseName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 2, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpLdapGblAdminPolicyBaseName.setStatus('mandatory')
vpLdapGblAdminPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 2, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpLdapGblAdminPortNumber.setStatus('mandatory')
vpLdapGblAdminTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 2, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpLdapGblAdminTimeOut.setStatus('mandatory')
vpLdapGblAdminRetryInterval = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 2, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpLdapGblAdminRetryInterval.setStatus('mandatory')
vpLdapGblAdminUserId = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 1, 2, 1, 2, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpLdapGblAdminUserId.setStatus('mandatory')
vpPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 1), )
if mibBuilder.loadTexts: vpPolicyTable.setStatus('mandatory')
vpPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 1, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpPolName"))
if mibBuilder.loadTexts: vpPolicyEntry.setStatus('mandatory')
vpPolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolName.setStatus('mandatory')
vpPolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpPolStatus.setStatus('mandatory')
vpPolPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolPriority.setStatus('mandatory')
vpPolValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolValidity.setStatus('mandatory')
vpPolTrafficProfileRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolTrafficProfileRef.setStatus('mandatory')
vpPolValidityPeriodRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolValidityPeriodRef.setStatus('mandatory')
vpPolRsvpActionRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolRsvpActionRef.setStatus('mandatory')
vpPolDiffServActionRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolDiffServActionRef.setStatus('mandatory')
vpPolIsakmpActionRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolIsakmpActionRef.setStatus('mandatory')
vpPolSecurityActionRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolSecurityActionRef.setStatus('mandatory')
vpPolIpsecManualTunId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolIpsecManualTunId.setStatus('mandatory')
vpPolMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolMatches.setStatus('mandatory')
vpPolicyRulePriTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 2), )
if mibBuilder.loadTexts: vpPolicyRulePriTable.setStatus('mandatory')
vpPolicyRulePriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 2, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpPolRulePriOrder"))
if mibBuilder.loadTexts: vpPolicyRulePriEntry.setStatus('mandatory')
vpPolRulePriOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolRulePriOrder.setStatus('mandatory')
vpPolRulePriName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolRulePriName.setStatus('mandatory')
vpPolRulePriStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpPolRulePriStatus.setStatus('mandatory')
vpPolRulePriPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolRulePriPriority.setStatus('mandatory')
vpPolRulePriTrafficProfileRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolRulePriTrafficProfileRef.setStatus('mandatory')
vpPolRulePriValidityPeriodRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolRulePriValidityPeriodRef.setStatus('mandatory')
vpPolRulePriRsvpActionRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolRulePriRsvpActionRef.setStatus('mandatory')
vpPolRulePriDiffServActionRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolRulePriDiffServActionRef.setStatus('mandatory')
vpPolRulePriIsakmpActionRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolRulePriIsakmpActionRef.setStatus('mandatory')
vpPolRulePriSecurityActionRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolRulePriSecurityActionRef.setStatus('mandatory')
vpPolRulePriIpsecManualTunId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolRulePriIpsecManualTunId.setStatus('mandatory')
vpPolicyCorTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 3), )
if mibBuilder.loadTexts: vpPolicyCorTable.setStatus('mandatory')
vpPolicyCorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 3, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpPolName"), (0, "VPNPOLICY-MIB", "vpPolCorRuleOrder"))
if mibBuilder.loadTexts: vpPolicyCorEntry.setStatus('mandatory')
vpPolCorRuleOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolCorRuleOrder.setStatus('mandatory')
vpPolCorRulePriOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpPolCorRulePriOrder.setStatus('mandatory')
vpTrafficProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1))
vpValidityPeriod = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 2))
vpTrafficProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1), )
if mibBuilder.loadTexts: vpTrafficProfileTable.setStatus('mandatory')
vpTrafficProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpTrafProfName"))
if mibBuilder.loadTexts: vpTrafficProfileEntry.setStatus('mandatory')
vpTrafProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafProfName.setStatus('mandatory')
vpTrafProfHiProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafProfHiProtocol.setStatus('mandatory')
vpTrafProfLoProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafProfLoProtocol.setStatus('mandatory')
vpTrafProfSrcHiAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1, 1, 4), VpIpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafProfSrcHiAddr.setStatus('mandatory')
vpTrafProfSrcLoAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1, 1, 5), VpIpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafProfSrcLoAddr.setStatus('mandatory')
vpTrafProfSrcHiPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafProfSrcHiPort.setStatus('mandatory')
vpTrafProfSrcLoPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafProfSrcLoPort.setStatus('mandatory')
vpTrafProfDstHiAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1, 1, 8), VpIpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafProfDstHiAddr.setStatus('mandatory')
vpTrafProfDstLoAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1, 1, 9), VpIpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafProfDstLoAddr.setStatus('mandatory')
vpTrafProfDstHiPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafProfDstHiPort.setStatus('mandatory')
vpTrafProfDstLoPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafProfDstLoPort.setStatus('mandatory')
vpTrafProfRcvTosByteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafProfRcvTosByteMask.setStatus('mandatory')
vpTrafProfRcvTosByteMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafProfRcvTosByteMatch.setStatus('mandatory')
vpTrafProfLocIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 9, 10, 11, 99))).clone(namedValues=NamedValues(("ipV4Addr", 1), ("fqdn", 2), ("userFqdn", 3), ("dn", 9), ("gn", 10), ("keyId", 11), ("any", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafProfLocIdType.setStatus('mandatory')
vpTrafProfLocIdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafProfLocIdValue.setStatus('mandatory')
vpTrafProfRemGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 1, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafProfRemGroup.setStatus('mandatory')
vpTrafficIfTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 2), )
if mibBuilder.loadTexts: vpTrafficIfTable.setStatus('mandatory')
vpTrafficIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 2, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpTrafProfName"), (0, "VPNPOLICY-MIB", "vpTrafIfIndex"))
if mibBuilder.loadTexts: vpTrafficIfEntry.setStatus('mandatory')
vpTrafIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafIfIndex.setStatus('mandatory')
vpTrafIfInAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 2, 1, 2), VpIpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafIfInAddr.setStatus('mandatory')
vpTrafIfOutAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 2, 1, 3), VpIpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafIfOutAddr.setStatus('mandatory')
vpTrafficRemIdTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 3), )
if mibBuilder.loadTexts: vpTrafficRemIdTable.setStatus('mandatory')
vpTrafficRemIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 3, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpTrafProfRemGroup"), (0, "VPNPOLICY-MIB", "vpTrafRemIdIndex"))
if mibBuilder.loadTexts: vpTrafficRemIdEntry.setStatus('mandatory')
vpTrafRemIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafRemIdIndex.setStatus('mandatory')
vpTrafRemIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 9, 10, 11))).clone(namedValues=NamedValues(("ipV4Addr", 1), ("fqdn", 2), ("userFqdn", 3), ("dn", 9), ("gn", 10), ("keyId", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafRemIdType.setStatus('mandatory')
vpTrafRemIdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafRemIdValue.setStatus('mandatory')
vpTrafRemIdAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("preShareKey", 1), ("cert", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTrafRemIdAuthMode.setStatus('mandatory')
vpValidityPeriodTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 2, 1), )
if mibBuilder.loadTexts: vpValidityPeriodTable.setStatus('mandatory')
vpValidityPeriodEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 2, 1, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpValPrdName"))
if mibBuilder.loadTexts: vpValidityPeriodEntry.setStatus('mandatory')
vpValPrdName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 2, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpValPrdName.setStatus('mandatory')
vpValPrdStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpValPrdStartTime.setStatus('mandatory')
vpValPrdEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpValPrdEndTime.setStatus('mandatory')
vpValPrdMonthMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpValPrdMonthMask.setStatus('mandatory')
vpValPrdDaysMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 2, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpValPrdDaysMask.setStatus('mandatory')
vpValPrdStartTod = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 2, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpValPrdStartTod.setStatus('mandatory')
vpValPrdStopTod = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 3, 2, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpValPrdStopTod.setStatus('mandatory')
vpRsvpAction = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 1))
vpDiffServAction = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 2))
vpIsakmpAction = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3))
vpSecurityAction = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4))
vpRsvpActionTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 1, 1), )
if mibBuilder.loadTexts: vpRsvpActionTable.setStatus('mandatory')
vpRsvpActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 1, 1, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpRsvpActName"))
if mibBuilder.loadTexts: vpRsvpActionEntry.setStatus('mandatory')
vpRsvpActName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpRsvpActName.setStatus('mandatory')
vpRsvpActPermission = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpRsvpActPermission.setStatus('mandatory')
vpRsvpActMaxRatePerFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpRsvpActMaxRatePerFlow.setStatus('mandatory')
vpRsvpActMaxTokenBucketPerFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpRsvpActMaxTokenBucketPerFlow.setStatus('mandatory')
vpRsvpActMaxFlowDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpRsvpActMaxFlowDuration.setStatus('mandatory')
vpRsvpActMinDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpRsvpActMinDelay.setStatus('mandatory')
vpRsvpActDiffSvrRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpRsvpActDiffSvrRef.setStatus('mandatory')
vpRsvpActMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpRsvpActMatches.setStatus('mandatory')
vpDiffServActionTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 2, 1), )
if mibBuilder.loadTexts: vpDiffServActionTable.setStatus('mandatory')
vpDiffServActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 2, 1, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpDifSrvActName"))
if mibBuilder.loadTexts: vpDiffServActionEntry.setStatus('mandatory')
vpDifSrvActName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 2, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpDifSrvActName.setStatus('mandatory')
vpDifSrvActPermission = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpDifSrvActPermission.setStatus('mandatory')
vpDifSrvActQuePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("premium", 1), ("bestEffort", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpDifSrvActQuePriority.setStatus('mandatory')
vpDifSrvActBwType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("absolute", 1), ("percent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpDifSrvActBwType.setStatus('mandatory')
vpDifSrvActBwShare = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpDifSrvActBwShare.setStatus('mandatory')
vpDifSrvActTransTosByteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 2, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpDifSrvActTransTosByteMask.setStatus('mandatory')
vpDifSrvActTransTosByteMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 2, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpDifSrvActTransTosByteMatch.setStatus('mandatory')
vpDifSrvActMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpDifSrvActMatches.setStatus('mandatory')
vpIsakmpActionTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 1), )
if mibBuilder.loadTexts: vpIsakmpActionTable.setStatus('mandatory')
vpIsakmpActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 1, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpIkActName"))
if mibBuilder.loadTexts: vpIsakmpActionEntry.setStatus('mandatory')
vpIkActName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkActName.setStatus('mandatory')
vpIkActExchangeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("main", 1), ("aggressive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkActExchangeMode.setStatus('mandatory')
vpIkActConnSaLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkActConnSaLifeTime.setStatus('mandatory')
vpIkActConnSaLifeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkActConnSaLifeSize.setStatus('mandatory')
vpIkActPolicyRole = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("initiator", 1), ("responder", 2), ("initAndResp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkActPolicyRole.setStatus('mandatory')
vpIkActMinPercentRefresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkActMinPercentRefresh.setStatus('mandatory')
vpIkActAutoStart = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkActAutoStart.setStatus('mandatory')
vpIkActMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkActMatches.setStatus('mandatory')
vpIsakmpProposalTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 2), )
if mibBuilder.loadTexts: vpIsakmpProposalTable.setStatus('mandatory')
vpIsakmpProposalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 2, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpIkPropName"))
if mibBuilder.loadTexts: vpIsakmpProposalEntry.setStatus('mandatory')
vpIkPropName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkPropName.setStatus('mandatory')
vpIkPropAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("preShardKey", 1), ("dssSig", 2), ("rsaSig", 3), ("rsaEncrypt", 4), ("revRsaEncrypt", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkPropAuthMethod.setStatus('mandatory')
vpIkPropHashAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("md5", 1), ("sha", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkPropHashAlgo.setStatus('mandatory')
vpIkPropCipherAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("des", 1), ("des3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkPropCipherAlgo.setStatus('mandatory')
vpIkPropDiffHellmanGrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dhGrp1", 1), ("dhGrp2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkPropDiffHellmanGrpId.setStatus('mandatory')
vpIkPropSaLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkPropSaLifeTime.setStatus('mandatory')
vpIkPropSaLifeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkPropSaLifeSize.setStatus('mandatory')
vpIsakmpCorTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 3), )
if mibBuilder.loadTexts: vpIsakmpCorTable.setStatus('mandatory')
vpIsakmpCorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 3, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpIkActName"), (0, "VPNPOLICY-MIB", "vpIkCorPropOrder"))
if mibBuilder.loadTexts: vpIsakmpCorEntry.setStatus('mandatory')
vpIkCorPropOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkCorPropOrder.setStatus('mandatory')
vpIkCorPropName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkCorPropName.setStatus('mandatory')
vpIsakmpActiveInstTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 4), )
if mibBuilder.loadTexts: vpIsakmpActiveInstTable.setStatus('mandatory')
vpIsakmpActiveInstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 4, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpIkActName"), (0, "VPNPOLICY-MIB", "vpIkActInstOrder"))
if mibBuilder.loadTexts: vpIsakmpActiveInstEntry.setStatus('mandatory')
vpIkActInstOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkActInstOrder.setStatus('mandatory')
vpIkActInstTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 4, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkActInstTunnelId.setStatus('mandatory')
vpIkActInstTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 3, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpIkActInstTunnelIndex.setStatus('mandatory')
vpSecurityActionTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1), )
if mibBuilder.loadTexts: vpSecurityActionTable.setStatus('mandatory')
vpSecurityActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpSecActName"))
if mibBuilder.loadTexts: vpSecurityActionEntry.setStatus('mandatory')
vpSecActName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActName.setStatus('mandatory')
vpSecActType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("block", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActType.setStatus('mandatory')
vpSecActTunStartAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 3), VpIpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActTunStartAddr.setStatus('mandatory')
vpSecActTunEndAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 4), VpIpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActTunEndAddr.setStatus('mandatory')
vpSecActLocProxyType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 7, 9, 10, 11))).clone(namedValues=NamedValues(("ipV4Addr", 1), ("fqdn", 2), ("userFqdn", 3), ("ipV4Subnet", 4), ("ipV4Range", 7), ("dn", 9), ("gn", 10), ("keyId", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActLocProxyType.setStatus('mandatory')
vpSecActLocProxyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActLocProxyValue.setStatus('mandatory')
vpSecActLocProxyProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActLocProxyProtocol.setStatus('mandatory')
vpSecActLocProxySrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActLocProxySrcPort.setStatus('mandatory')
vpSecActRemProxyType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 7, 9, 10, 11))).clone(namedValues=NamedValues(("ipV4Addr", 1), ("fqdn", 2), ("userFqdn", 3), ("ipV4Subnet", 4), ("ipV4Range", 7), ("dn", 9), ("gn", 10), ("keyId", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActRemProxyType.setStatus('mandatory')
vpSecActRemProxyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActRemProxyValue.setStatus('mandatory')
vpSecActRemProxyProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActRemProxyProtocol.setStatus('mandatory')
vpSecActRemProxySrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActRemProxySrcPort.setStatus('mandatory')
vpSecActSaRefreshThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActSaRefreshThresh.setStatus('mandatory')
vpSecActMinPercentRefresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActMinPercentRefresh.setStatus('mandatory')
vpSecActTunnelInTunnel = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActTunnelInTunnel.setStatus('mandatory')
vpSecActAutoStart = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActAutoStart.setStatus('mandatory')
vpSecActDontFragBitHandling = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("copyDfBit", 1), ("setDfBit", 2), ("clearDfBit", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActDontFragBitHandling.setStatus('mandatory')
vpSecActReplayPrevention = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActReplayPrevention.setStatus('mandatory')
vpSecActMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActMatches.setStatus('mandatory')
vpSecurityProposalTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 2), )
if mibBuilder.loadTexts: vpSecurityProposalTable.setStatus('mandatory')
vpSecurityProposalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 2, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpSecPropName"))
if mibBuilder.loadTexts: vpSecurityProposalEntry.setStatus('mandatory')
vpSecPropName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecPropName.setStatus('mandatory')
vpSecPropPrfFwdSecr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecPropPrfFwdSecr.setStatus('mandatory')
vpSecPropDiffHellmanGrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dhGrp1", 1), ("dhGrp2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecPropDiffHellmanGrpId.setStatus('mandatory')
vpSecurityAhTransTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 3), )
if mibBuilder.loadTexts: vpSecurityAhTransTable.setStatus('mandatory')
vpSecurityAhTransEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 3, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpSecAhTransName"))
if mibBuilder.loadTexts: vpSecurityAhTransEntry.setStatus('mandatory')
vpSecAhTransName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecAhTransName.setStatus('mandatory')
vpSecAhTransIntgAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hmacMd5", 1), ("hmacSha", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecAhTransIntgAlgo.setStatus('mandatory')
vpSecAhTransEncapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tunnel", 1), ("transport", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecAhTransEncapMode.setStatus('mandatory')
vpSecAhTransSaLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecAhTransSaLifeTime.setStatus('mandatory')
vpSecAhTransSaLifeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecAhTransSaLifeSize.setStatus('mandatory')
vpSecurityEspTransTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 4), )
if mibBuilder.loadTexts: vpSecurityEspTransTable.setStatus('mandatory')
vpSecurityEspTransEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 4, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpSecEspTransName"))
if mibBuilder.loadTexts: vpSecurityEspTransEntry.setStatus('mandatory')
vpSecEspTransName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecEspTransName.setStatus('mandatory')
vpSecEspTransEncapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tunnel", 1), ("transport", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecEspTransEncapMode.setStatus('mandatory')
vpSecEspTransIntgAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("md5", 2), ("sha", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecEspTransIntgAlgo.setStatus('mandatory')
vpSecEspTransCipherAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("des", 2), ("des3", 3), ("cdmf", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecEspTransCipherAlgo.setStatus('mandatory')
vpSecEspTransSaLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecEspTransSaLifeTime.setStatus('mandatory')
vpSecEspTransSaLifeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecEspTransSaLifeSize.setStatus('mandatory')
vpSecurityIpcompTransTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 5), )
if mibBuilder.loadTexts: vpSecurityIpcompTransTable.setStatus('mandatory')
vpSecurityIpcompTransEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 5, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpSecIpcompTransName"))
if mibBuilder.loadTexts: vpSecurityIpcompTransEntry.setStatus('mandatory')
vpSecIpcompTransName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecIpcompTransName.setStatus('mandatory')
vpSecIpcompTransAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecIpcompTransAlgo.setStatus('mandatory')
vpSecIpcompTransVendAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecIpcompTransVendAlgo.setStatus('mandatory')
vpSecIpcompTransSaLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecIpcompTransSaLifeTime.setStatus('mandatory')
vpSecIpcompTransSaLifeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecIpcompTransSaLifeSize.setStatus('mandatory')
vpSecurityPropCorTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 6), )
if mibBuilder.loadTexts: vpSecurityPropCorTable.setStatus('mandatory')
vpSecurityPropCorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 6, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpSecActName"), (0, "VPNPOLICY-MIB", "vpSecCorPropOrder"))
if mibBuilder.loadTexts: vpSecurityPropCorEntry.setStatus('mandatory')
vpSecCorPropOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecCorPropOrder.setStatus('mandatory')
vpSecCorPropRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecCorPropRef.setStatus('mandatory')
vpSecurityAhCorTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 7), )
if mibBuilder.loadTexts: vpSecurityAhCorTable.setStatus('mandatory')
vpSecurityAhCorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 7, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpSecPropName"), (0, "VPNPOLICY-MIB", "vpSecAhTransCorOrder"))
if mibBuilder.loadTexts: vpSecurityAhCorEntry.setStatus('mandatory')
vpSecAhTransCorOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecAhTransCorOrder.setStatus('mandatory')
vpSecAhTransCorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecAhTransCorName.setStatus('mandatory')
vpSecurityEspCorTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 8), )
if mibBuilder.loadTexts: vpSecurityEspCorTable.setStatus('mandatory')
vpSecurityEspCorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 8, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpSecPropName"), (0, "VPNPOLICY-MIB", "vpSecEspTransCorOrder"))
if mibBuilder.loadTexts: vpSecurityEspCorEntry.setStatus('mandatory')
vpSecEspTransCorOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecEspTransCorOrder.setStatus('mandatory')
vpSecEspTransCorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 8, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecEspTransCorName.setStatus('mandatory')
vpSecurityIpcompCorTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 9), )
if mibBuilder.loadTexts: vpSecurityIpcompCorTable.setStatus('mandatory')
vpSecurityIpcompCorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 9, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpSecPropName"), (0, "VPNPOLICY-MIB", "vpSecIpcompTransCorOrder"))
if mibBuilder.loadTexts: vpSecurityIpcompCorEntry.setStatus('mandatory')
vpSecIpcompTransCorOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecIpcompTransCorOrder.setStatus('mandatory')
vpSecIpcompTransCorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 9, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecIpcompTransCorName.setStatus('mandatory')
vpSecurityActiveInstTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 10), )
if mibBuilder.loadTexts: vpSecurityActiveInstTable.setStatus('mandatory')
vpSecurityActiveInstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 10, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpSecActName"), (0, "VPNPOLICY-MIB", "vpSecActInstOrder"))
if mibBuilder.loadTexts: vpSecurityActiveInstEntry.setStatus('mandatory')
vpSecActInstOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActInstOrder.setStatus('mandatory')
vpSecActInstTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActInstTunnelId.setStatus('mandatory')
vpSecActInstTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 4, 4, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpSecActInstTunnelIndex.setStatus('mandatory')
vpTestPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1), )
if mibBuilder.loadTexts: vpTestPolicyTable.setStatus('mandatory')
vpTestPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1), ).setIndexNames((0, "VPNPOLICY-MIB", "vpTestPolIndex"))
if mibBuilder.loadTexts: vpTestPolicyEntry.setStatus('mandatory')
vpTestPolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTestPolIndex.setStatus('mandatory')
vpTestPolSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 2), VpIpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpTestPolSrcAddr.setStatus('mandatory')
vpTestPolSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpTestPolSrcPort.setStatus('mandatory')
vpTestPolDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 4), VpIpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpTestPolDstAddr.setStatus('mandatory')
vpTestPolDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpTestPolDstPort.setStatus('mandatory')
vpTestPolProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpTestPolProtocol.setStatus('mandatory')
vpTestPolTosByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpTestPolTosByte.setStatus('mandatory')
vpTestPolIngressAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 8), VpIpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpTestPolIngressAddr.setStatus('mandatory')
vpTestPolEgressAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 9), VpIpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpTestPolEgressAddr.setStatus('mandatory')
vpTestPolResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inProgress", 1), ("successful", 2), ("noPolicyMatch", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTestPolResult.setStatus('mandatory')
vpTestPolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("active", 1), ("createAndGo", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpTestPolStatus.setStatus('mandatory')
vpTestPolRsvpPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTestPolRsvpPolicy.setStatus('mandatory')
vpTestPolRsvpAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTestPolRsvpAction.setStatus('mandatory')
vpTestPolDiffServPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTestPolDiffServPolicy.setStatus('mandatory')
vpTestPolDiffServAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTestPolDiffServAction.setStatus('mandatory')
vpTestPolIsakmpPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTestPolIsakmpPolicy.setStatus('mandatory')
vpTestPolIsakmpAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTestPolIsakmpAction.setStatus('mandatory')
vpTestPolIPSecPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTestPolIPSecPolicy.setStatus('mandatory')
vpTestPolIPSecAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 15, 5, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpTestPolIPSecAction.setStatus('mandatory')
mibBuilder.exportSymbols("VPNPOLICY-MIB", vpIkActPolicyRole=vpIkActPolicyRole, vpTrafRemIdType=vpTrafRemIdType, vpPolRulePriIsakmpActionRef=vpPolRulePriIsakmpActionRef, vpSecActSaRefreshThresh=vpSecActSaRefreshThresh, vpPolSecurityActionRef=vpPolSecurityActionRef, vpSecAhTransCorOrder=vpSecAhTransCorOrder, vpSecEspTransCorName=vpSecEspTransCorName, vpTestPolDstAddr=vpTestPolDstAddr, vpSysCurConfigSource=vpSysCurConfigSource, vpPolIpsecManualTunId=vpPolIpsecManualTunId, vpValidityPeriodTable=vpValidityPeriodTable, vpSecPropName=vpSecPropName, vpDiffServActionTable=vpDiffServActionTable, vpIkActExchangeMode=vpIkActExchangeMode, vpPolTrafficProfileRef=vpPolTrafficProfileRef, vpSecurityPropCorTable=vpSecurityPropCorTable, vpRsvpActMaxFlowDuration=vpRsvpActMaxFlowDuration, vpDifSrvActMatches=vpDifSrvActMatches, vpTrafficRemIdEntry=vpTrafficRemIdEntry, vpSysHoursFromCut=vpSysHoursFromCut, vpTrafProfDstHiPort=vpTrafProfDstHiPort, vpSecActDontFragBitHandling=vpSecActDontFragBitHandling, vpLdapGblAdminUserId=vpLdapGblAdminUserId, vpSecurityProposalTable=vpSecurityProposalTable, vpIsakmpActiveInstTable=vpIsakmpActiveInstTable, vpPolRulePriOrder=vpPolRulePriOrder, vpTrafProfName=vpTrafProfName, vpIsakmpProposalEntry=vpIsakmpProposalEntry, vpSecIpcompTransName=vpSecIpcompTransName, vpTestPolSrcPort=vpTestPolSrcPort, vpTrafIfOutAddr=vpTrafIfOutAddr, vpPolRulePriIpsecManualTunId=vpPolRulePriIpsecManualTunId, vpIsakmpProposalTable=vpIsakmpProposalTable, vpIkActConnSaLifeSize=vpIkActConnSaLifeSize, vpSecurityActionEntry=vpSecurityActionEntry, vpSecActLocProxySrcPort=vpSecActLocProxySrcPort, vpSecAhTransIntgAlgo=vpSecAhTransIntgAlgo, vpSecCorPropRef=vpSecCorPropRef, vpSecIpcompTransCorName=vpSecIpcompTransCorName, vpPolStatus=vpPolStatus, vpRsvpActMaxRatePerFlow=vpRsvpActMaxRatePerFlow, vpLdapGblAdminRetryInterval=vpLdapGblAdminRetryInterval, vpRsvpActMaxTokenBucketPerFlow=vpRsvpActMaxTokenBucketPerFlow, vpSecIpcompTransCorOrder=vpSecIpcompTransCorOrder, vpConditions=vpConditions, vpSecActTunnelInTunnel=vpSecActTunnelInTunnel, vpDifSrvActBwType=vpDifSrvActBwType, vpSecCorPropOrder=vpSecCorPropOrder, vpDifSrvActName=vpDifSrvActName, vpValidityPeriodEntry=vpValidityPeriodEntry, vpPolMatches=vpPolMatches, vpRsvpActName=vpRsvpActName, vpRsvpActPermission=vpRsvpActPermission, vpDifSrvActBwShare=vpDifSrvActBwShare, vpValPrdName=vpValPrdName, vpValPrdEndTime=vpValPrdEndTime, vpIkActMatches=vpIkActMatches, vpLdapGblOperTimeOut=vpLdapGblOperTimeOut, vpPolRulePriValidityPeriodRef=vpPolRulePriValidityPeriodRef, vpPolicyCorTable=vpPolicyCorTable, vpPolName=vpPolName, vpRsvpActionTable=vpRsvpActionTable, vpIkCorPropOrder=vpIkCorPropOrder, vpSecAhTransSaLifeTime=vpSecAhTransSaLifeTime, vpIkPropSaLifeTime=vpIkPropSaLifeTime, vpRsvpActionEntry=vpRsvpActionEntry, vpValPrdStartTod=vpValPrdStartTod, vpSecurityActiveInstTable=vpSecurityActiveInstTable, vpTrafProfLocIdType=vpTrafProfLocIdType, vpSecurityAhTransTable=vpSecurityAhTransTable, vpTestPolTosByte=vpTestPolTosByte, vpSecurityAhTransEntry=vpSecurityAhTransEntry, vpLdapGblOperSecServerAddr=vpLdapGblOperSecServerAddr, vpSecurityAction=vpSecurityAction, vpIsakmpActionTable=vpIsakmpActionTable, ibmIROCVPNpolicy=ibmIROCVPNpolicy, vpIkActName=vpIkActName, vpSecurityIpcompTransTable=vpSecurityIpcompTransTable, vpIsakmpAction=vpIsakmpAction, vpIkPropDiffHellmanGrpId=vpIkPropDiffHellmanGrpId, vpDifSrvActTransTosByteMatch=vpDifSrvActTransTosByteMatch, vpSecActRemProxyType=vpSecActRemProxyType, vpPolValidityPeriodRef=vpPolValidityPeriodRef, vpSecIpcompTransSaLifeTime=vpSecIpcompTransSaLifeTime, vpSecActName=vpSecActName, vpPolicy=vpPolicy, vpSecurityEspCorEntry=vpSecurityEspCorEntry, vpSecActRemProxySrcPort=vpSecActRemProxySrcPort, vpSecEspTransSaLifeTime=vpSecEspTransSaLifeTime, vpSecActInstTunnelIndex=vpSecActInstTunnelIndex, vpTrafficRemIdTable=vpTrafficRemIdTable, vpIsakmpCorTable=vpIsakmpCorTable, vpSecEspTransEncapMode=vpSecEspTransEncapMode, vpSecurityPropCorEntry=vpSecurityPropCorEntry, vpPolPriority=vpPolPriority, vpPolicyTable=vpPolicyTable, vpIsakmpCorEntry=vpIsakmpCorEntry, vpSecAhTransName=vpSecAhTransName, vpSecActLocProxyProtocol=vpSecActLocProxyProtocol, vpSecPropDiffHellmanGrpId=vpSecPropDiffHellmanGrpId, vpIkPropSaLifeSize=vpIkPropSaLifeSize, vpLdapGblOperRetryInterval=vpLdapGblOperRetryInterval, vpSecActReplayPrevention=vpSecActReplayPrevention, vpValPrdDaysMask=vpValPrdDaysMask, vpPolCorRuleOrder=vpPolCorRuleOrder, vpDifSrvActPermission=vpDifSrvActPermission, vpPolValidity=vpPolValidity, vpSecurityIpcompTransEntry=vpSecurityIpcompTransEntry, vpTestPolStatus=vpTestPolStatus, vpSecActAutoStart=vpSecActAutoStart, vpTestPolRsvpPolicy=vpTestPolRsvpPolicy, vpLdapGblOperServerLdapLvl=vpLdapGblOperServerLdapLvl, vpTrafProfHiProtocol=vpTrafProfHiProtocol, vpTestPolDstPort=vpTestPolDstPort, vpSysUpTime=vpSysUpTime, vpTrafProfRemGroup=vpTrafProfRemGroup, vpLdapGblAdminPolicyBaseName=vpLdapGblAdminPolicyBaseName, vpTrafProfSrcHiAddr=vpTrafProfSrcHiAddr, vpPolDiffServActionRef=vpPolDiffServActionRef, vpLdapGlobalOper=vpLdapGlobalOper, vpLdapGblOperUserId=vpLdapGblOperUserId, vpSecIpcompTransSaLifeSize=vpSecIpcompTransSaLifeSize, vpIkPropCipherAlgo=vpIkPropCipherAlgo, vpLdapGblOperPortNumber=vpLdapGblOperPortNumber, vpSystemLdap=vpSystemLdap, vpPolIsakmpActionRef=vpPolIsakmpActionRef, vpTrafRemIdAuthMode=vpTrafRemIdAuthMode, vpLdapGblOperLdapStatus=vpLdapGblOperLdapStatus, vpPolRulePriDiffServActionRef=vpPolRulePriDiffServActionRef, vpTestPolIndex=vpTestPolIndex, vpPolRulePriStatus=vpPolRulePriStatus, vpTestPolDiffServPolicy=vpTestPolDiffServPolicy, vpSecActType=vpSecActType, vpIkActConnSaLifeTime=vpIkActConnSaLifeTime, vpLdapGblAdminPrimServerAddr=vpLdapGblAdminPrimServerAddr, vpSecEspTransCipherAlgo=vpSecEspTransCipherAlgo, vpRsvpActDiffSvrRef=vpRsvpActDiffSvrRef, vpDifSrvActTransTosByteMask=vpDifSrvActTransTosByteMask, vpSecEspTransName=vpSecEspTransName, vpPolCorRulePriOrder=vpPolCorRulePriOrder, vpSecAhTransSaLifeSize=vpSecAhTransSaLifeSize, vpValPrdMonthMask=vpValPrdMonthMask, vpTrafficIfTable=vpTrafficIfTable, vpPolRulePriSecurityActionRef=vpPolRulePriSecurityActionRef, vpLdapGblAdminSecServerAddr=vpLdapGblAdminSecServerAddr, vpLdapGblAdminPortNumber=vpLdapGblAdminPortNumber, vpLdapGlobal=vpLdapGlobal, vpValidityPeriod=vpValidityPeriod, vpIsakmpActionEntry=vpIsakmpActionEntry, vpSecActTunStartAddr=vpSecActTunStartAddr, vpSecActRemProxyValue=vpSecActRemProxyValue, vpTrafficProfile=vpTrafficProfile, vpSecActInstTunnelId=vpSecActInstTunnelId, vpSecurityIpcompCorTable=vpSecurityIpcompCorTable, vpTrafProfRcvTosByteMatch=vpTrafProfRcvTosByteMatch, vpTestPolIPSecAction=vpTestPolIPSecAction, vpIkActInstOrder=vpIkActInstOrder, vpTestPolIPSecPolicy=vpTestPolIPSecPolicy, vpLdapGblAdminLdapStatus=vpLdapGblAdminLdapStatus, vpTrafIfIndex=vpTrafIfIndex, vpTestPolDiffServAction=vpTestPolDiffServAction, vpValPrdStartTime=vpValPrdStartTime, vpSecIpcompTransVendAlgo=vpSecIpcompTransVendAlgo, vpSecurityAhCorTable=vpSecurityAhCorTable, vpTrafProfDstLoAddr=vpTrafProfDstLoAddr, vpTestPolicyTable=vpTestPolicyTable, vpTestPolicyEntry=vpTestPolicyEntry, vpTestPolIsakmpAction=vpTestPolIsakmpAction, vpTrafRemIdValue=vpTrafRemIdValue, vpTrafProfDstLoPort=vpTrafProfDstLoPort, vpLdapGblAdminTimeOut=vpLdapGblAdminTimeOut, vpTrafProfRcvTosByteMask=vpTrafProfRcvTosByteMask, vpTrafficIfEntry=vpTrafficIfEntry, vpActions=vpActions, vpSecActMinPercentRefresh=vpSecActMinPercentRefresh, vpSecurityAhCorEntry=vpSecurityAhCorEntry, vpRsvpActMinDelay=vpRsvpActMinDelay, vpIkActAutoStart=vpIkActAutoStart, vpTrafIfInAddr=vpTrafIfInAddr, vpSecActTunEndAddr=vpSecActTunEndAddr, vpTestPolResult=vpTestPolResult, vpRsvpAction=vpRsvpAction, vpIkPropHashAlgo=vpIkPropHashAlgo, vpTrafProfSrcHiPort=vpTrafProfSrcHiPort, vpTrafProfDstHiAddr=vpTrafProfDstHiAddr, vpSecIpcompTransAlgo=vpSecIpcompTransAlgo, vpTrafProfSrcLoAddr=vpTrafProfSrcLoAddr, vpDifSrvActQuePriority=vpDifSrvActQuePriority, vpPolRulePriTrafficProfileRef=vpPolRulePriTrafficProfileRef, vpTrafProfLocIdValue=vpTrafProfLocIdValue, vpSecActMatches=vpSecActMatches, vpPolicyRulePriTable=vpPolicyRulePriTable, vpPolicyCorEntry=vpPolicyCorEntry, vpSecurityActiveInstEntry=vpSecurityActiveInstEntry, vpSecEspTransIntgAlgo=vpSecEspTransIntgAlgo, vpLdapGblOperPrimServerAddr=vpLdapGblOperPrimServerAddr, vpLdapGlobalAdmin=vpLdapGlobalAdmin, vpPolRulePriPriority=vpPolRulePriPriority, vpTrafficProfileTable=vpTrafficProfileTable, vpSecurityActionTable=vpSecurityActionTable, vpSecurityIpcompCorEntry=vpSecurityIpcompCorEntry, vpRsvpActMatches=vpRsvpActMatches, vpPolRsvpActionRef=vpPolRsvpActionRef, vpIkPropAuthMethod=vpIkPropAuthMethod, vpPolRulePriName=vpPolRulePriName, vpTests=vpTests, vpIkActMinPercentRefresh=vpIkActMinPercentRefresh, vpIsakmpActiveInstEntry=vpIsakmpActiveInstEntry, vpSystem=vpSystem, vpSecurityProposalEntry=vpSecurityProposalEntry, vpTestPolRsvpAction=vpTestPolRsvpAction, vpSecActLocProxyType=vpSecActLocProxyType, vpSecEspTransSaLifeSize=vpSecEspTransSaLifeSize, vpTrafProfSrcLoPort=vpTrafProfSrcLoPort, vpSysMibLevel=vpSysMibLevel, vpSecActInstOrder=vpSecActInstOrder, VpIpAddress=VpIpAddress, vpSecActRemProxyProtocol=vpSecActRemProxyProtocol, vpSecPropPrfFwdSecr=vpSecPropPrfFwdSecr, vpSecActLocProxyValue=vpSecActLocProxyValue, vpSecurityEspTransEntry=vpSecurityEspTransEntry, vpPolRulePriRsvpActionRef=vpPolRulePriRsvpActionRef, vpTestPolEgressAddr=vpTestPolEgressAddr, vpPolicyRulePriEntry=vpPolicyRulePriEntry, vpSysRefreshConfig=vpSysRefreshConfig, vpLdapGblAdminServerLdapLvl=vpLdapGblAdminServerLdapLvl, vpDiffServAction=vpDiffServAction, vpSecurityEspCorTable=vpSecurityEspCorTable, vpTrafficProfileEntry=vpTrafficProfileEntry, vpSecAhTransCorName=vpSecAhTransCorName, vpLdapGblOperPolicyBaseName=vpLdapGblOperPolicyBaseName, vpSysCurTime=vpSysCurTime, vpTrafRemIdIndex=vpTrafRemIdIndex, vpPolicyEntry=vpPolicyEntry, vpIkActInstTunnelId=vpIkActInstTunnelId, vpIkActInstTunnelIndex=vpIkActInstTunnelIndex, vpSecAhTransEncapMode=vpSecAhTransEncapMode, vpSecurityEspTransTable=vpSecurityEspTransTable, vpIkCorPropName=vpIkCorPropName, vpDiffServActionEntry=vpDiffServActionEntry, vpValPrdStopTod=vpValPrdStopTod, vpTestPolIngressAddr=vpTestPolIngressAddr, vpSystemGlobal=vpSystemGlobal, vpTestPolSrcAddr=vpTestPolSrcAddr, vpTestPolProtocol=vpTestPolProtocol, vpTestPolIsakmpPolicy=vpTestPolIsakmpPolicy, vpTrafProfLoProtocol=vpTrafProfLoProtocol, vpIkPropName=vpIkPropName, vpSecEspTransCorOrder=vpSecEspTransCorOrder)
