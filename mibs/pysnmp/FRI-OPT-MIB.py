#
# PySNMP MIB module FRI-OPT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FRI-OPT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:02:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, ObjectIdentity, Gauge32, Unsigned32, Counter32, iso, Integer32, Counter64, TimeTicks, MibIdentifier, IpAddress, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ObjectIdentity", "Gauge32", "Unsigned32", "Counter32", "iso", "Integer32", "Counter64", "TimeTicks", "MibIdentifier", "IpAddress", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
codex = MibIdentifier((1, 3, 6, 1, 4, 1, 449))
cdxProductSpecific = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2))
cdx6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1))
cdx6500Configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2))
cdx6500CfgProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1))
cdx6500PCTPortProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1))
cdx6500PCTStationProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3))
cdx6500Statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3))
cdx6500StatProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1))
cdx6500PSTPortProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1))
cdx6500PSTStationProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3))
cdx6500Controls = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 4))
class DisplayString(OctetString):
    pass

cdx6500PPCTFRIPortTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31), )
if mibBuilder.loadTexts: cdx6500PPCTFRIPortTable.setStatus('mandatory')
cdx6500PPCTFRIPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1), ).setIndexNames((0, "FRI-OPT-MIB", "friPCfgPortNumber"))
if mibBuilder.loadTexts: cdx6500PPCTFRIPortEntry.setStatus('mandatory')
friPCfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPCfgPortNumber.setStatus('mandatory')
friPCfgPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(18))).clone(namedValues=NamedValues(("fri", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPCfgPortType.setStatus('mandatory')
friPCfgConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 21, 100))).clone(namedValues=NamedValues(("simp", 1), ("dtr", 2), ("simpb", 21), ("nc", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgConnectionType.setStatus('mandatory')
friPCfgClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 100))).clone(namedValues=NamedValues(("int", 1), ("ext", 2), ("extint", 3), ("extlp", 4), ("nc", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgClockSource.setStatus('mandatory')
friPCfgClockSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1200, 2048000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgClockSpeed.setStatus('mandatory')
friPCfgHighestStnNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPCfgHighestStnNumber.setStatus('deprecated')
friPCfgFrameSeqCounting = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("normal", 1), ("extended", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPCfgFrameSeqCounting.setStatus('mandatory')
friPCfgPktSeqCounting = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("normal", 1), ("extended", 2), ("nc", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgPktSeqCounting.setStatus('mandatory')
friPCfgCntrlProtocolSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 100))).clone(namedValues=NamedValues(("annexD", 1), ("none", 2), ("lmi", 3), ("annexA", 4), ("auto", 5), ("nc", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgCntrlProtocolSupport.setStatus('mandatory')
friPCfgHighPriorityStn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgHighPriorityStn.setStatus('mandatory')
friPCfgMaxVoiceBWBitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgMaxVoiceBWBitsPerSec.setStatus('mandatory')
friPCfgSegSizeVoicePresent = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(33, 65, 129, 257, 513, 1025, 100))).clone(namedValues=NamedValues(("segSize32", 33), ("segSize64", 65), ("segSize128", 129), ("segSize256", 257), ("segSize512", 513), ("segSize1024", 1025), ("nc", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgSegSizeVoicePresent.setStatus('mandatory')
friPCfgSegSizeVoiceNotPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(33, 65, 129, 257, 513, 1025, 2049, 4097, 32000, 100))).clone(namedValues=NamedValues(("segSize32", 33), ("segSize64", 65), ("segSize128", 129), ("segSize256", 257), ("segSize512", 513), ("segSize1024", 1025), ("segSize2048", 2049), ("segSize4096", 4097), ("disable", 32000), ("nc", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgSegSizeVoiceNotPresent.setStatus('mandatory')
friPCfgT391Timer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgT391Timer.setStatus('mandatory')
friPCfgT392Timer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgT392Timer.setStatus('mandatory')
friPCfgN391PollCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgN391PollCycle.setStatus('mandatory')
friPCfgN392ErrsDuringMonitoredEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgN392ErrsDuringMonitoredEvents.setStatus('mandatory')
friPCfgN393MonitoredEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgN393MonitoredEvents.setStatus('mandatory')
friPCfgNT1PollTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPCfgNT1PollTimer.setStatus('mandatory')
friPCfgNT2VerificationTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPCfgNT2VerificationTimer.setStatus('mandatory')
friPCfgNN1StatusPollingCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPCfgNN1StatusPollingCycle.setStatus('mandatory')
friPCfgNN2ErrsDuringMonitoredEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPCfgNN2ErrsDuringMonitoredEvents.setStatus('mandatory')
friPCfgNN3MonitoredEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPCfgNN3MonitoredEvents.setStatus('mandatory')
friPCfgInvertTXClock = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("no", 1), ("yes", 2), ("nc", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgInvertTXClock.setStatus('mandatory')
friPCfgControlProtocolOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgControlProtocolOptions.setStatus('mandatory')
friPCfgDiscardControlOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("debit", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgDiscardControlOptions.setStatus('mandatory')
friPCfgStartSvcDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 27), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgStartSvcDlci.setStatus('mandatory')
friPCfgSubscriberNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 28), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 19))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgSubscriberNumber.setStatus('mandatory')
friPCfgMaxFmif = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(262, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgMaxFmif.setStatus('mandatory')
friPCfgT200 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgT200.setStatus('mandatory')
friPCfgN200 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgN200.setStatus('mandatory')
friPCfgWindowK = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgWindowK.setStatus('mandatory')
friPCfgT203 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgT203.setStatus('mandatory')
friPCfgT303 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgT303.setStatus('mandatory')
friPCfgT305 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgT305.setStatus('mandatory')
friPCfgT308 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgT308.setStatus('mandatory')
friPCfgT310 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgT310.setStatus('mandatory')
friPCfgControlProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dte", 1), ("dce", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgControlProtocol.setStatus('mandatory')
friPCfguniState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfguniState.setStatus('mandatory')
friPCfguniSSVP = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(65, 129, 257, 513, 1025))).clone(namedValues=NamedValues(("segSize64", 65), ("segSize128", 129), ("segSize256", 257), ("segSize512", 513), ("segSize1024", 1025)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPCfguniSSVP.setStatus('mandatory')
friPCfguniSSVNP = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(65, 129, 257, 513, 1025, 2049, 4097, 32000))).clone(namedValues=NamedValues(("segSize64", 65), ("segSize128", 129), ("segSize256", 257), ("segSize512", 513), ("segSize1024", 1025), ("segSize2048", 2049), ("segSize4096", 4097), ("disable", 32000)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfguniSSVNP.setStatus('mandatory')
friPCfguniSegDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfguniSegDelay.setStatus('mandatory')
friPCfguniCheckPckSize = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfguniCheckPckSize.setStatus('mandatory')
friPCfgElectricalInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("v24", 1), ("v35", 2), ("v36", 3), ("x21", 4), ("none", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgElectricalInterfaceType.setStatus('mandatory')
friPCfgV24ElectricalInterfaceOption = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ri", 1), ("tm", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgV24ElectricalInterfaceOption.setStatus('mandatory')
friPCfgHighSpeedElectricalInterfaceOption = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 31, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("xover", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friPCfgHighSpeedElectricalInterfaceOption.setStatus('mandatory')
cdx6500SPCTFRIStationTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9), )
if mibBuilder.loadTexts: cdx6500SPCTFRIStationTable.setStatus('mandatory')
cdx6500SPCTFRIStationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1), ).setIndexNames((0, "FRI-OPT-MIB", "friSCfgPortNumber"), (0, "FRI-OPT-MIB", "friSCfgStnNumber"))
if mibBuilder.loadTexts: cdx6500SPCTFRIStationEntry.setStatus('mandatory')
friSCfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSCfgPortNumber.setStatus('mandatory')
friSCfgStnNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSCfgStnNumber.setStatus('mandatory')
friSCfgStnType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("annexG", 1), ("bypass", 2), ("voiceRelay", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgStnType.setStatus('mandatory')
friSCfgDLCI = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgDLCI.setStatus('mandatory')
friSCfgCommInfoRate = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgCommInfoRate.setStatus('mandatory')
friSCfgCommBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 768000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgCommBurstSize.setStatus('mandatory')
friSCfgTransDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgTransDelay.setStatus('mandatory')
friSCfgCongControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 100))).clone(namedValues=NamedValues(("normal", 1), ("disable", 2), ("congested", 3), ("limit", 4), ("nc", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgCongControlMode.setStatus('mandatory')
friSCfgLinkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("dte", 1), ("dce", 2), ("nc", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgLinkAddress.setStatus('mandatory')
friSCfgPVCChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgPVCChannels.setStatus('mandatory')
friSCfgStartingPVC = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgStartingPVC.setStatus('mandatory')
friSCfgSVCChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgSVCChannels.setStatus('mandatory')
friSCfgStartingSVC = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgStartingSVC.setStatus('mandatory')
friSCfgVoiceSVCChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgVoiceSVCChannels.setStatus('mandatory')
friSCfgInitialFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 100))).clone(namedValues=NamedValues(("sabm", 1), ("disc", 2), ("none", 3), ("nc", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgInitialFrame.setStatus('mandatory')
friSCfgT1RetryTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgT1RetryTimer.setStatus('mandatory')
friSCfgT4PollTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgT4PollTimer.setStatus('mandatory')
friSCfgN2TransmissionTries = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgN2TransmissionTries.setStatus('mandatory')
friSCfgKFrameWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgKFrameWindow.setStatus('mandatory')
friSCfgWPacketWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgWPacketWindow.setStatus('mandatory')
friSCfgPPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 7, 8, 9, 10, 11, 100))).clone(namedValues=NamedValues(("psize32", 6), ("psize64", 7), ("psize128", 8), ("psize256", 9), ("psize512", 10), ("psize1024", 11), ("nc", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgPPacketSize.setStatus('mandatory')
friSCfgDataQUpperThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgDataQUpperThreshold.setStatus('mandatory')
friSCfgDataQLowerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgDataQLowerThreshold.setStatus('mandatory')
friSCfgRestartTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgRestartTimer.setStatus('mandatory')
friSCfgResetTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgResetTimer.setStatus('mandatory')
friSCfgCallTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgCallTimer.setStatus('mandatory')
friSCfgClearTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgClearTimer.setStatus('mandatory')
friSCfgX25Options = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgX25Options.setStatus('mandatory')
friSCfgRestrictedConnDest = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgRestrictedConnDest.setStatus('mandatory')
friSCfgCUGMembership = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgCUGMembership.setStatus('mandatory')
friSCfgBillingRecords = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("nc", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgBillingRecords.setStatus('mandatory')
friSCfgFrameSegmenter = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("nc", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgFrameSegmenter.setStatus('mandatory')
friSCfgVoiceCongCtrlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("nc", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgVoiceCongCtrlMode.setStatus('mandatory')
friSCfgPeakUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 240))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgPeakUtilization.setStatus('mandatory')
friSCfgMaxInboundQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 2500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgMaxInboundQueue.setStatus('mandatory')
friSCfgAnnexGRateReduction = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("nc", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgAnnexGRateReduction.setStatus('mandatory')
friSCfgCctType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pvc", 1), ("svc", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgCctType.setStatus('mandatory')
friSCfgCallControl = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("auto", 1), ("autd", 2), ("recv", 3), ("cnorm", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgCallControl.setStatus('mandatory')
friSCfgRetryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgRetryInterval.setStatus('mandatory')
friSCfgCallAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgCallAttempts.setStatus('mandatory')
friSCfgIdleInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgIdleInterval.setStatus('mandatory')
friSCfgIeNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 42), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgIeNegotiation.setStatus('mandatory')
friSCfgSubaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 43), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgSubaddress.setStatus('mandatory')
friSCfgCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 44), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 19))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgCalledNumber.setStatus('mandatory')
friSCfgCalledSubaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 45), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgCalledSubaddress.setStatus('mandatory')
friSCfgMinCir = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 155000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgMinCir.setStatus('mandatory')
friSCfgBurstExcess = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgBurstExcess.setStatus('mandatory')
friSCfgE2EEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgE2EEnabled.setStatus('mandatory')
friSCfgE2EType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("motorola", 1), ("frf12", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgE2EType.setStatus('mandatory')
friSCfgE2ESSVP = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(65, 129, 257, 513, 1025))).clone(namedValues=NamedValues(("segSize64", 65), ("segSize128", 129), ("segSize256", 257), ("segSize512", 513), ("segSize1024", 1025)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSCfgE2ESSVP.setStatus('mandatory')
friSCfgE2ESSVNP = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(65, 129, 257, 513, 1025, 2049, 4097, 32000))).clone(namedValues=NamedValues(("segSize64", 65), ("segSize128", 129), ("segSize256", 257), ("segSize512", 513), ("segSize1024", 1025), ("segSize2048", 2049), ("segSize4096", 4097), ("disable", 32000)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgE2ESSVNP.setStatus('mandatory')
friSCfgE2ESegDelayEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgE2ESegDelayEnabled.setStatus('mandatory')
friSCfgE2ECheckPckSize = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgE2ECheckPckSize.setStatus('mandatory')
friSCfgvoice_header = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 9, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setLabel("friSCfgvoice-header").setMaxAccess("readwrite")
if mibBuilder.loadTexts: friSCfgvoice_header.setStatus('mandatory')
cdx6500PPSTFRIPStatsTable = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32))
cdx6500PPSTFRIPortTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 1), )
if mibBuilder.loadTexts: cdx6500PPSTFRIPortTable.setStatus('mandatory')
cdx6500PPSTFRIPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 1, 1), ).setIndexNames((0, "FRI-OPT-MIB", "friPStatsPortNumber"))
if mibBuilder.loadTexts: cdx6500PPSTFRIPortEntry.setStatus('mandatory')
friPStatsPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsPortNumber.setStatus('mandatory')
friPStatsPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(17))).clone(namedValues=NamedValues(("fri", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsPortType.setStatus('mandatory')
friPStatsPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 100))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("busyOut", 3), ("up", 4), ("down", 5), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsPortStatus.setStatus('mandatory')
friPStatsConfiguredStns = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsConfiguredStns.setStatus('mandatory')
friPStatsPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsPortSpeed.setStatus('mandatory')
friPStatsOpCntrlProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsOpCntrlProtocol.setStatus('mandatory')
friPStatsSPBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsSPBackup.setStatus('mandatory')
friPStatsPriorityStn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsPriorityStn.setStatus('mandatory')
friPStatsLastStatsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsLastStatsReset.setStatus('mandatory')
cdx6500PPSTFRIDataSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 2), )
if mibBuilder.loadTexts: cdx6500PPSTFRIDataSummaryTable.setStatus('mandatory')
cdx6500PPSTFRIDataSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 2, 1), ).setIndexNames((0, "FRI-OPT-MIB", "friDataSummPortNumber"))
if mibBuilder.loadTexts: cdx6500PPSTFRIDataSummaryEntry.setStatus('mandatory')
friDataSummPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friDataSummPortNumber.setStatus('mandatory')
friPStatsCharInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsCharInTotal.setStatus('mandatory')
friPStatsCharOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsCharOutTotal.setStatus('mandatory')
friPStatsCharInPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsCharInPerSec.setStatus('mandatory')
friPStatsCharOutPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsCharOutPerSec.setStatus('mandatory')
friPStatsFramesInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsFramesInTotal.setStatus('mandatory')
friPStatsFramesOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsFramesOutTotal.setStatus('mandatory')
friPStatsFramesInPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsFramesInPerSec.setStatus('mandatory')
friPStatsFramesOutPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsFramesOutPerSec.setStatus('mandatory')
friPStatsAvFrameSizeIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsAvFrameSizeIn.setStatus('mandatory')
friPStatsAvFrameSizeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsAvFrameSizeOut.setStatus('mandatory')
friPStatsUtilIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsUtilIn.setStatus('mandatory')
friPStatsUtilOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsUtilOut.setStatus('mandatory')
cdx6500PPSTFRISummaryTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3), )
if mibBuilder.loadTexts: cdx6500PPSTFRISummaryTable.setStatus('mandatory')
cdx6500PPSTFRISummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1), ).setIndexNames((0, "FRI-OPT-MIB", "friSummPortNumber"))
if mibBuilder.loadTexts: cdx6500PPSTFRISummaryEntry.setStatus('mandatory')
friSummPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSummPortNumber.setStatus('mandatory')
friPStatsCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsCRCErrors.setStatus('mandatory')
friPStatsOverrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsOverrunErrors.setStatus('mandatory')
friPStatsFrameLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsFrameLengthErrors.setStatus('mandatory')
friPStatsUnderrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsUnderrunErrors.setStatus('mandatory')
friPStatsUnknownDLCICount = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsUnknownDLCICount.setStatus('mandatory')
friPStatsLastUnknownDLCI = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsLastUnknownDLCI.setStatus('mandatory')
friPStatsSplittingRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsSplittingRatio.setStatus('mandatory')
friPStatsTotalSegmentsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsTotalSegmentsLost.setStatus('mandatory')
friPStatsMaxContiguousSegmentsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsMaxContiguousSegmentsLost.setStatus('mandatory')
friPStatsVoiceBWOnPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsVoiceBWOnPort.setStatus('mandatory')
friPStatsFrameSegmenterSyncLost = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsFrameSegmenterSyncLost.setStatus('mandatory')
friPStatsStatusEnqSentFull = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsStatusEnqSentFull.setStatus('mandatory')
friPStatsFullStatusRecd = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsFullStatusRecd.setStatus('mandatory')
friPStatsStatusEnqSentLIV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsStatusEnqSentLIV.setStatus('mandatory')
friPStatsLIVStatusRecd = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsLIVStatusRecd.setStatus('mandatory')
friPStatsStatusEnqRecdFull = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsStatusEnqRecdFull.setStatus('mandatory')
friPStatsStatusEnqRecdLIV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsStatusEnqRecdLIV.setStatus('mandatory')
friPStatsAsyncUpdateRecd = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsAsyncUpdateRecd.setStatus('mandatory')
friPStatsSeqNumMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsSeqNumMismatch.setStatus('mandatory')
friPStatsTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 3, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsTimeouts.setStatus('mandatory')
cdx6500PPSTFRIISDNCallStatusTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4), )
if mibBuilder.loadTexts: cdx6500PPSTFRIISDNCallStatusTable.setStatus('mandatory')
cdx6500PPSTFRIISDNCallStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1), ).setIndexNames((0, "FRI-OPT-MIB", "friISDNCallStatusPortNumber"))
if mibBuilder.loadTexts: cdx6500PPSTFRIISDNCallStatusEntry.setStatus('mandatory')
friISDNCallStatusPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friISDNCallStatusPortNumber.setStatus('mandatory')
friPStatsNumRxCallsSinceLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsNumRxCallsSinceLastReset.setStatus('mandatory')
friPStatsNumRxCallsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsNumRxCallsRejected.setStatus('mandatory')
friPStatsRxLastCallFailureCause = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 100))).clone(namedValues=NamedValues(("noFailureReported", 193), ("noAvailableVirtualPort", 194), ("securityViolation", 195), ("noResourcesAvailable", 196), ("callRejected", 197), ("invalidPhoneNumber", 198), ("outgoingCallRequestTimeout", 199), ("callCollision", 200), ("virtualPortNotAvailable", 201), ("invalidConfiguration", 202), ("failureNotSupported", 203), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsRxLastCallFailureCause.setStatus('mandatory')
friPStatsRxLastCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsRxLastCalledNumber.setStatus('mandatory')
friPStatsRxLastCallingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsRxLastCallingNumber.setStatus('mandatory')
friPStatsRxMinCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsRxMinCallDuration.setStatus('mandatory')
friPStatsRxMaxCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsRxMaxCallDuration.setStatus('mandatory')
friPStatsRxAvgCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsRxAvgCallDuration.setStatus('mandatory')
friPStatsNumTxCallsSinceLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsNumTxCallsSinceLastReset.setStatus('mandatory')
friPStatsNumTxCallsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsNumTxCallsRejected.setStatus('mandatory')
friPStatsTxLastCallFailureCause = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 100))).clone(namedValues=NamedValues(("noFailureReported", 193), ("noAvailableVirtualPort", 194), ("securityViolation", 195), ("noResourcesAvailable", 196), ("callRejected", 197), ("invalidPhoneNumber", 198), ("outgoingCallRequestTimeout", 199), ("callCollision", 200), ("virtualPortNotAvailable", 201), ("invalidConfiguration", 202), ("failureNotSupported", 203), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsTxLastCallFailureCause.setStatus('mandatory')
friPStatsTxLastCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsTxLastCalledNumber.setStatus('mandatory')
friPStatsTxLastCallingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsTxLastCallingNumber.setStatus('mandatory')
friPStatsTxMinCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsTxMinCallDuration.setStatus('mandatory')
friPStatsTxMaxCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsTxMaxCallDuration.setStatus('mandatory')
friPStatsTxAvgCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsTxAvgCallDuration.setStatus('mandatory')
friPStatsSignalingState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 32, 4, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 100))).clone(namedValues=NamedValues(("idle", 1), ("ringing", 2), ("connected", 3), ("congested", 4), ("disabled", 5), ("dChannelDown", 6), ("disabledDChannelDown", 7), ("disconnecting", 8), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friPStatsSignalingState.setStatus('mandatory')
cdx6500SPSTFRISStatsTable = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10))
friSGenStatsTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1), )
if mibBuilder.loadTexts: friSGenStatsTable.setStatus('mandatory')
cdx6500friSGenStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1), ).setIndexNames((0, "FRI-OPT-MIB", "friSGenStatsPortNumber"), (0, "FRI-OPT-MIB", "friSGenStatsStnNumber"))
if mibBuilder.loadTexts: cdx6500friSGenStatsEntry.setStatus('mandatory')
friSGenStatsPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSGenStatsPortNumber.setStatus('mandatory')
friSGenStatsStnNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSGenStatsStnNumber.setStatus('mandatory')
friSStatsStnType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("annexG", 1), ("bypass", 2), ("voice", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsStnType.setStatus('mandatory')
friSStatsStnStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsStnStatus.setStatus('mandatory')
friSStatsDLCI = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsDLCI.setStatus('mandatory')
friSStatsStnState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsStnState.setStatus('mandatory')
friSStatsConfiguredCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsConfiguredCIR.setStatus('mandatory')
friSStatsAllowedInfoRate = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsAllowedInfoRate.setStatus('mandatory')
friSStatsImpCongDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsImpCongDetect.setStatus('mandatory')
friSStatsExpCongDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsExpCongDetect.setStatus('mandatory')
friSStatsLMIFlowCntrl = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsLMIFlowCntrl.setStatus('mandatory')
friSStatsMaxSVCCount = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsMaxSVCCount.setStatus('mandatory')
friSStatsCurrSVCCount = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsCurrSVCCount.setStatus('mandatory')
friSStatsMaxPVCCount = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsMaxPVCCount.setStatus('mandatory')
friSStatsCurrPVCCount = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsCurrPVCCount.setStatus('mandatory')
friSStatsLastStatsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsLastStatsReset.setStatus('mandatory')
friSStatsFrameSegState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsFrameSegState.setStatus('mandatory')
friSStatsFrameSegSyncLost = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsFrameSegSyncLost.setStatus('mandatory')
friSStatsPVCState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsPVCState.setStatus('mandatory')
friSStatsVoiceCongDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsVoiceCongDetect.setStatus('mandatory')
friSStatsMaxVSVCCount = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsMaxVSVCCount.setStatus('mandatory')
friSStatsCurrVSVCCount = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsCurrVSVCCount.setStatus('mandatory')
friSDataSummaryStatsTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2), )
if mibBuilder.loadTexts: friSDataSummaryStatsTable.setStatus('mandatory')
cdx6500friSDataSummaryStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1), ).setIndexNames((0, "FRI-OPT-MIB", "friSDataSummStatsPortNumber"), (0, "FRI-OPT-MIB", "friSDataSummStatsStnNumber"))
if mibBuilder.loadTexts: cdx6500friSDataSummaryStatsEntry.setStatus('mandatory')
friSDataSummStatsPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSDataSummStatsPortNumber.setStatus('mandatory')
friSDataSummStatsStnNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSDataSummStatsStnNumber.setStatus('mandatory')
friSStatsCharInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsCharInTotal.setStatus('mandatory')
friSStatsCharOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsCharOutTotal.setStatus('mandatory')
friSStatsCharInPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsCharInPerSec.setStatus('mandatory')
friSStatsCharOutPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsCharOutPerSec.setStatus('mandatory')
friSStatsPktInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsPktInTotal.setStatus('mandatory')
friSStatsPktOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsPktOutTotal.setStatus('mandatory')
friSStatsPktInPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsPktInPerSec.setStatus('mandatory')
friSStatsPktOutPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsPktOutPerSec.setStatus('mandatory')
friSStatsFrameInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsFrameInTotal.setStatus('mandatory')
friSStatsFrameOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsFrameOutTotal.setStatus('mandatory')
friSStatsFrameInPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsFrameInPerSec.setStatus('mandatory')
friSStatsFrameOutPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsFrameOutPerSec.setStatus('mandatory')
friSStatsUtilIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsUtilIn.setStatus('mandatory')
friSStatsUtilOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsUtilOut.setStatus('mandatory')
friSStatsNumPktsQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsNumPktsQueued.setStatus('mandatory')
friSStatsPktsDiscardIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsPktsDiscardIn.setStatus('mandatory')
friSStatsPktsDiscardOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsPktsDiscardOut.setStatus('mandatory')
friSStatsPktsQueuedIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsPktsQueuedIn.setStatus('mandatory')
friSStatsPktsQueuedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsPktsQueuedOut.setStatus('mandatory')
friSVoiceSummaryStatsTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 3), )
if mibBuilder.loadTexts: friSVoiceSummaryStatsTable.setStatus('mandatory')
cdx6500friSVoiceSummaryStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 3, 1), ).setIndexNames((0, "FRI-OPT-MIB", "friSVoiceSummStatsPortNumber"), (0, "FRI-OPT-MIB", "friSVoiceSummStatsStnNumber"))
if mibBuilder.loadTexts: cdx6500friSVoiceSummaryStatsEntry.setStatus('mandatory')
friSVoiceSummStatsPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSVoiceSummStatsPortNumber.setStatus('mandatory')
friSVoiceSummStatsStnNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSVoiceSummStatsStnNumber.setStatus('mandatory')
friSStatsVoiceCharInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsVoiceCharInTotal.setStatus('mandatory')
friSStatsVoiceCharOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsVoiceCharOutTotal.setStatus('mandatory')
friSStatsVoiceCharInPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsVoiceCharInPerSec.setStatus('mandatory')
friSStatsVoiceCharOutPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsVoiceCharOutPerSec.setStatus('mandatory')
friSStatsVoicePktInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsVoicePktInTotal.setStatus('mandatory')
friSStatsVoicePktOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsVoicePktOutTotal.setStatus('mandatory')
friSStatsVoicePktInPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsVoicePktInPerSec.setStatus('mandatory')
friSStatsVoicePktOutPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsVoicePktOutPerSec.setStatus('mandatory')
friSFrameSummaryStatsTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4), )
if mibBuilder.loadTexts: friSFrameSummaryStatsTable.setStatus('mandatory')
cdx6500friSFrameSummaryStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1), ).setIndexNames((0, "FRI-OPT-MIB", "friSFrameSummStatsPortNumber"), (0, "FRI-OPT-MIB", "friSFrameSummStatsStnNumber"))
if mibBuilder.loadTexts: cdx6500friSFrameSummaryStatsEntry.setStatus('mandatory')
friSFrameSummStatsPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSFrameSummStatsPortNumber.setStatus('mandatory')
friSFrameSummStatsStnNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSFrameSummStatsStnNumber.setStatus('mandatory')
friSStatsInfoFramesInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsInfoFramesInTotal.setStatus('mandatory')
friSStatsInfoFramesOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsInfoFramesOutTotal.setStatus('mandatory')
friSStatsRRFramesInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsRRFramesInTotal.setStatus('mandatory')
friSStatsRRFramesOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsRRFramesOutTotal.setStatus('mandatory')
friSStatsRNRFramesInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsRNRFramesInTotal.setStatus('mandatory')
friSStatsRNRFramesOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsRNRFramesOutTotal.setStatus('mandatory')
friSStatsREJFramesInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsREJFramesInTotal.setStatus('mandatory')
friSStatsREJFramesOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsREJFramesOutTotal.setStatus('mandatory')
friSStatsSABMFramesInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsSABMFramesInTotal.setStatus('mandatory')
friSStatsSABMFramesOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsSABMFramesOutTotal.setStatus('mandatory')
friSStatsDISCFramesInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsDISCFramesInTotal.setStatus('mandatory')
friSStatsDISCFramesOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsDISCFramesOutTotal.setStatus('mandatory')
friSStatsDMFramesInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsDMFramesInTotal.setStatus('mandatory')
friSStatsDMFramesOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsDMFramesOutTotal.setStatus('mandatory')
friSStatsUAFramesInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsUAFramesInTotal.setStatus('mandatory')
friSStatsUAFramesOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsUAFramesOutTotal.setStatus('mandatory')
friSStatsFRMRFramesInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsFRMRFramesInTotal.setStatus('mandatory')
friSStatsFRMRFramesOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsFRMRFramesOutTotal.setStatus('mandatory')
friSPacketSummaryStatsTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5), )
if mibBuilder.loadTexts: friSPacketSummaryStatsTable.setStatus('mandatory')
cdx6500friSPacketSummaryStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1), ).setIndexNames((0, "FRI-OPT-MIB", "friSPktSummStatsPortNumber"), (0, "FRI-OPT-MIB", "friSPktSummStatsStnNumber"))
if mibBuilder.loadTexts: cdx6500friSPacketSummaryStatsEntry.setStatus('mandatory')
friSPktSummStatsPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSPktSummStatsPortNumber.setStatus('mandatory')
friSPktSummStatsStnNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSPktSummStatsStnNumber.setStatus('mandatory')
friSStatsDataPktInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsDataPktInTotal.setStatus('mandatory')
friSStatsDataPktOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsDataPktOutTotal.setStatus('mandatory')
friSStatsRRPktInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsRRPktInTotal.setStatus('mandatory')
friSStatsRRPktOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsRRPktOutTotal.setStatus('mandatory')
friSStatsRNRPktInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsRNRPktInTotal.setStatus('mandatory')
friSStatsRNRPktOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsRNRPktOutTotal.setStatus('mandatory')
friSStatsREJPktInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsREJPktInTotal.setStatus('mandatory')
friSStatsREJPktOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsREJPktOutTotal.setStatus('mandatory')
friSStatsCallReqPktInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsCallReqPktInTotal.setStatus('mandatory')
friSStatsCallReqPktOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsCallReqPktOutTotal.setStatus('mandatory')
friSStatsCallAccPktInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsCallAccPktInTotal.setStatus('mandatory')
friSStatsCallAccPktOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsCallAccPktOutTotal.setStatus('mandatory')
friSStatsClrReqPktInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsClrReqPktInTotal.setStatus('mandatory')
friSStatsClrReqPktOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsClrReqPktOutTotal.setStatus('mandatory')
friSStatsClrConfPktInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsClrConfPktInTotal.setStatus('mandatory')
friSStatsClrConfPktOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsClrConfPktOutTotal.setStatus('mandatory')
friSStatsIntrReqPktInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsIntrReqPktInTotal.setStatus('mandatory')
friSStatsIntrReqPktOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsIntrReqPktOutTotal.setStatus('mandatory')
friSStatsIntrConfPktInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsIntrConfPktInTotal.setStatus('mandatory')
friSStatsIntrConfPktOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsIntrConfPktOutTotal.setStatus('mandatory')
friSStatsResetReqPktInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsResetReqPktInTotal.setStatus('mandatory')
friSStatsResetReqPktOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsResetReqPktOutTotal.setStatus('mandatory')
friSStatsResetConfPktInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsResetConfPktInTotal.setStatus('mandatory')
friSStatsResetConfPktOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsResetConfPktOutTotal.setStatus('mandatory')
friSStatsRestartReqPktInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsRestartReqPktInTotal.setStatus('mandatory')
friSStatsRestartReqPktOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsRestartReqPktOutTotal.setStatus('mandatory')
friSStatsRestartConfPktInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsRestartConfPktInTotal.setStatus('mandatory')
friSStatsRestartConfPktOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 5, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsRestartConfPktOutTotal.setStatus('mandatory')
friSFRISummaryStatsTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 6), )
if mibBuilder.loadTexts: friSFRISummaryStatsTable.setStatus('mandatory')
cdx6500friSFRISummaryStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 6, 1), ).setIndexNames((0, "FRI-OPT-MIB", "friSFRISummStatsPortNumber"), (0, "FRI-OPT-MIB", "friSFRISummStatsStnNumber"))
if mibBuilder.loadTexts: cdx6500friSFRISummaryStatsEntry.setStatus('mandatory')
friSFRISummStatsPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSFRISummStatsPortNumber.setStatus('mandatory')
friSFRISummStatsStnNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSFRISummStatsStnNumber.setStatus('mandatory')
friSStatsFECNInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsFECNInTotal.setStatus('mandatory')
friSStatsFECNOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsFECNOutTotal.setStatus('mandatory')
friSStatsBECNInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsBECNInTotal.setStatus('mandatory')
friSStatsBECNOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsBECNOutTotal.setStatus('mandatory')
friSStatsDEInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsDEInTotal.setStatus('mandatory')
friSStatsDEOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3, 10, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friSStatsDEOutTotal.setStatus('mandatory')
cdx6500ContFRITable = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 4, 14))
cdx6500FRIPContTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 4, 14, 1), )
if mibBuilder.loadTexts: cdx6500FRIPContTable.setStatus('mandatory')
cdx6500FRIPContEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 4, 14, 1, 1), ).setIndexNames((0, "FRI-OPT-MIB", "friPContPortNumber"))
if mibBuilder.loadTexts: cdx6500FRIPContEntry.setStatus('mandatory')
friPContPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 4, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: friPContPortNumber.setStatus('mandatory')
friPContPortControl = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 4, 14, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("boot", 1), ("enable", 2), ("disable", 3), ("resetstats", 4)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: friPContPortControl.setStatus('mandatory')
cdx6500FRISContTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 4, 14, 2), )
if mibBuilder.loadTexts: cdx6500FRISContTable.setStatus('mandatory')
cdx6500FRISContEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 4, 14, 2, 1), ).setIndexNames((0, "FRI-OPT-MIB", "friSContPortNumber"), (0, "FRI-OPT-MIB", "friSContStnNumber"))
if mibBuilder.loadTexts: cdx6500FRISContEntry.setStatus('mandatory')
friSContPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 4, 14, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: friSContPortNumber.setStatus('mandatory')
friSContStnNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 4, 14, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)))
if mibBuilder.loadTexts: friSContStnNumber.setStatus('mandatory')
friSContStnControl = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 4, 14, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("boot", 1), ("enable", 2), ("disable", 3), ("resetstats", 4)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: friSContStnControl.setStatus('mandatory')
mibBuilder.exportSymbols("FRI-OPT-MIB", friSStatsRNRFramesOutTotal=friSStatsRNRFramesOutTotal, friSStatsCallReqPktOutTotal=friSStatsCallReqPktOutTotal, cdx6500ContFRITable=cdx6500ContFRITable, friSStatsIntrConfPktInTotal=friSStatsIntrConfPktInTotal, friPCfgT303=friPCfgT303, friSStatsREJFramesInTotal=friSStatsREJFramesInTotal, friPCfgT203=friPCfgT203, friSCfgPortNumber=friSCfgPortNumber, cdx6500Statistics=cdx6500Statistics, friPStatsTxLastCalledNumber=friPStatsTxLastCalledNumber, friSCfgE2ESSVP=friSCfgE2ESSVP, cdx6500PCTPortProtocolGroup=cdx6500PCTPortProtocolGroup, friPCfgV24ElectricalInterfaceOption=friPCfgV24ElectricalInterfaceOption, friSCfgStnNumber=friSCfgStnNumber, friSStatsFrameSegState=friSStatsFrameSegState, friPStatsFullStatusRecd=friPStatsFullStatusRecd, friPStatsSPBackup=friPStatsSPBackup, friPStatsAvFrameSizeOut=friPStatsAvFrameSizeOut, friPStatsTxLastCallingNumber=friPStatsTxLastCallingNumber, friSStatsStnStatus=friSStatsStnStatus, friISDNCallStatusPortNumber=friISDNCallStatusPortNumber, friSCfgDataQLowerThreshold=friSCfgDataQLowerThreshold, cdx6500CfgProtocolGroup=cdx6500CfgProtocolGroup, cdx6500PSTStationProtocolGroup=cdx6500PSTStationProtocolGroup, friSCfgPVCChannels=friSCfgPVCChannels, cdx6500PPSTFRIPortTable=cdx6500PPSTFRIPortTable, friSStatsVoicePktOutPerSec=friSStatsVoicePktOutPerSec, cdx6500PPCTFRIPortEntry=cdx6500PPCTFRIPortEntry, friSCfgSubaddress=friSCfgSubaddress, friPStatsPortType=friPStatsPortType, friPStatsFramesInPerSec=friPStatsFramesInPerSec, friPStatsRxAvgCallDuration=friPStatsRxAvgCallDuration, friPStatsTxMaxCallDuration=friPStatsTxMaxCallDuration, cdxProductSpecific=cdxProductSpecific, friPStatsNumRxCallsRejected=friPStatsNumRxCallsRejected, friPCfgMaxVoiceBWBitsPerSec=friPCfgMaxVoiceBWBitsPerSec, friPStatsFrameLengthErrors=friPStatsFrameLengthErrors, friSCfgStartingSVC=friSCfgStartingSVC, friSCfgRetryInterval=friSCfgRetryInterval, friPCfguniCheckPckSize=friPCfguniCheckPckSize, friSCfgStartingPVC=friSCfgStartingPVC, cdx6500SPCTFRIStationTable=cdx6500SPCTFRIStationTable, friPStatsLastStatsReset=friPStatsLastStatsReset, friSStatsREJPktOutTotal=friSStatsREJPktOutTotal, friSStatsRNRPktInTotal=friSStatsRNRPktInTotal, friPStatsRxMaxCallDuration=friPStatsRxMaxCallDuration, cdx6500PPSTFRIISDNCallStatusTable=cdx6500PPSTFRIISDNCallStatusTable, friSStatsIntrConfPktOutTotal=friSStatsIntrConfPktOutTotal, friSStatsDataPktOutTotal=friSStatsDataPktOutTotal, friSStatsVoiceCharInPerSec=friSStatsVoiceCharInPerSec, friPStatsTxMinCallDuration=friPStatsTxMinCallDuration, cdx6500Configuration=cdx6500Configuration, friSStatsVoicePktInPerSec=friSStatsVoicePktInPerSec, friSStatsVoiceCharOutTotal=friSStatsVoiceCharOutTotal, friSStatsMaxSVCCount=friSStatsMaxSVCCount, friSCfgE2EType=friSCfgE2EType, friSStatsCallReqPktInTotal=friSStatsCallReqPktInTotal, cdx6500PPCTFRIPortTable=cdx6500PPCTFRIPortTable, friPStatsPortNumber=friPStatsPortNumber, friSStatsUtilOut=friSStatsUtilOut, friSStatsSABMFramesOutTotal=friSStatsSABMFramesOutTotal, friPCfgNT1PollTimer=friPCfgNT1PollTimer, friPStatsFramesOutTotal=friPStatsFramesOutTotal, friSStatsStnType=friSStatsStnType, cdx6500PPSTFRISummaryTable=cdx6500PPSTFRISummaryTable, friSVoiceSummStatsPortNumber=friSVoiceSummStatsPortNumber, friSStatsIntrReqPktInTotal=friSStatsIntrReqPktInTotal, friSStatsCallAccPktInTotal=friSStatsCallAccPktInTotal, friSStatsPktsQueuedIn=friSStatsPktsQueuedIn, friSCfgDLCI=friSCfgDLCI, friSFrameSummStatsPortNumber=friSFrameSummStatsPortNumber, friSCfgVoiceSVCChannels=friSCfgVoiceSVCChannels, friSCfgE2EEnabled=friSCfgE2EEnabled, friSFrameSummaryStatsTable=friSFrameSummaryStatsTable, friPStatsNumTxCallsRejected=friPStatsNumTxCallsRejected, cdx6500FRISContTable=cdx6500FRISContTable, friPCfgT391Timer=friPCfgT391Timer, friSCfgCallTimer=friSCfgCallTimer, friSStatsRNRFramesInTotal=friSStatsRNRFramesInTotal, friSStatsResetReqPktInTotal=friSStatsResetReqPktInTotal, friPCfgHighSpeedElectricalInterfaceOption=friPCfgHighSpeedElectricalInterfaceOption, friSStatsRRPktInTotal=friSStatsRRPktInTotal, friPCfgFrameSeqCounting=friPCfgFrameSeqCounting, friSStatsFRMRFramesInTotal=friSStatsFRMRFramesInTotal, friPCfgControlProtocol=friPCfgControlProtocol, friSCfgPeakUtilization=friSCfgPeakUtilization, friPCfgSegSizeVoiceNotPresent=friPCfgSegSizeVoiceNotPresent, friSStatsDEInTotal=friSStatsDEInTotal, friSStatsVoiceCharOutPerSec=friSStatsVoiceCharOutPerSec, friSStatsImpCongDetect=friSStatsImpCongDetect, friPCfguniState=friPCfguniState, friSStatsMaxPVCCount=friSStatsMaxPVCCount, friSStatsVoicePktInTotal=friSStatsVoicePktInTotal, friSDataSummStatsPortNumber=friSDataSummStatsPortNumber, friSCfgStnType=friSCfgStnType, friPStatsStatusEnqRecdLIV=friPStatsStatusEnqRecdLIV, friSStatsCharInPerSec=friSStatsCharInPerSec, friSCfgWPacketWindow=friSCfgWPacketWindow, friSStatsDLCI=friSStatsDLCI, friPStatsLIVStatusRecd=friPStatsLIVStatusRecd, friSStatsUAFramesOutTotal=friSStatsUAFramesOutTotal, friSPktSummStatsPortNumber=friSPktSummStatsPortNumber, friPStatsRxLastCallFailureCause=friPStatsRxLastCallFailureCause, friPStatsSeqNumMismatch=friPStatsSeqNumMismatch, friPCfgElectricalInterfaceType=friPCfgElectricalInterfaceType, friSCfgSVCChannels=friSCfgSVCChannels, friSStatsCharOutTotal=friSStatsCharOutTotal, friSStatsMaxVSVCCount=friSStatsMaxVSVCCount, friPContPortNumber=friPContPortNumber, friSStatsAllowedInfoRate=friSStatsAllowedInfoRate, friSContPortNumber=friSContPortNumber, friPCfgT308=friPCfgT308, friPStatsAvFrameSizeIn=friPStatsAvFrameSizeIn, friPCfgPktSeqCounting=friPCfgPktSeqCounting, friSStatsRNRPktOutTotal=friSStatsRNRPktOutTotal, friSStatsResetConfPktOutTotal=friSStatsResetConfPktOutTotal, friSStatsClrReqPktOutTotal=friSStatsClrReqPktOutTotal, friSStatsPktInPerSec=friSStatsPktInPerSec, friPCfgControlProtocolOptions=friPCfgControlProtocolOptions, friPStatsFramesInTotal=friPStatsFramesInTotal, friSStatsVoicePktOutTotal=friSStatsVoicePktOutTotal, friSStatsSABMFramesInTotal=friSStatsSABMFramesInTotal, friSCfgMaxInboundQueue=friSCfgMaxInboundQueue, friSCfgE2ESSVNP=friSCfgE2ESSVNP, friSVoiceSummStatsStnNumber=friSVoiceSummStatsStnNumber, cdx6500FRIPContEntry=cdx6500FRIPContEntry, cdx6500PPSTFRISummaryEntry=cdx6500PPSTFRISummaryEntry, friSStatsRRFramesOutTotal=friSStatsRRFramesOutTotal, cdx6500friSDataSummaryStatsEntry=cdx6500friSDataSummaryStatsEntry, friPCfguniSSVNP=friPCfguniSSVNP, cdx6500SPCTFRIStationEntry=cdx6500SPCTFRIStationEntry, cdx6500FRIPContTable=cdx6500FRIPContTable, cdx6500friSFRISummaryStatsEntry=cdx6500friSFRISummaryStatsEntry, friPStatsCharOutPerSec=friPStatsCharOutPerSec, friSCfgCommInfoRate=friSCfgCommInfoRate, friSStatsPktsQueuedOut=friSStatsPktsQueuedOut, friPStatsFramesOutPerSec=friPStatsFramesOutPerSec, friPStatsCharOutTotal=friPStatsCharOutTotal, friSCfgDataQUpperThreshold=friSCfgDataQUpperThreshold, friSStatsPktOutPerSec=friSStatsPktOutPerSec, friSCfgvoice_header=friSCfgvoice_header, cdx6500friSVoiceSummaryStatsEntry=cdx6500friSVoiceSummaryStatsEntry, friSVoiceSummaryStatsTable=friSVoiceSummaryStatsTable, friPCfguniSegDelay=friPCfguniSegDelay, friPStatsOverrunErrors=friPStatsOverrunErrors, friPCfguniSSVP=friPCfguniSSVP, friPStatsStatusEnqRecdFull=friPStatsStatusEnqRecdFull, friPStatsRxLastCallingNumber=friPStatsRxLastCallingNumber, friSStatsDMFramesOutTotal=friSStatsDMFramesOutTotal, friSPktSummStatsStnNumber=friSPktSummStatsStnNumber, friSCfgCallAttempts=friSCfgCallAttempts, friSDataSummaryStatsTable=friSDataSummaryStatsTable, friSCfgCUGMembership=friSCfgCUGMembership, codex=codex, friSStatsUAFramesInTotal=friSStatsUAFramesInTotal, friSPacketSummaryStatsTable=friSPacketSummaryStatsTable, friPCfgInvertTXClock=friPCfgInvertTXClock, cdx6500PCTStationProtocolGroup=cdx6500PCTStationProtocolGroup, friSCfgRestartTimer=friSCfgRestartTimer, friSFRISummStatsPortNumber=friSFRISummStatsPortNumber, friPContPortControl=friPContPortControl, friPCfgT305=friPCfgT305, cdx6500FRISContEntry=cdx6500FRISContEntry, friSStatsFrameInTotal=friSStatsFrameInTotal, friSCfgClearTimer=friSCfgClearTimer, friSStatsInfoFramesOutTotal=friSStatsInfoFramesOutTotal, friPCfgClockSpeed=friPCfgClockSpeed, friSCfgMinCir=friSCfgMinCir, cdx6500=cdx6500, friPStatsCRCErrors=friPStatsCRCErrors, friSStatsFrameOutTotal=friSStatsFrameOutTotal, friSStatsInfoFramesInTotal=friSStatsInfoFramesInTotal, friSStatsBECNInTotal=friSStatsBECNInTotal, friSStatsIntrReqPktOutTotal=friSStatsIntrReqPktOutTotal, friPStatsAsyncUpdateRecd=friPStatsAsyncUpdateRecd, friSFRISummaryStatsTable=friSFRISummaryStatsTable, friPCfgNN1StatusPollingCycle=friPCfgNN1StatusPollingCycle, cdx6500PPSTFRIISDNCallStatusEntry=cdx6500PPSTFRIISDNCallStatusEntry, friSDataSummStatsStnNumber=friSDataSummStatsStnNumber, friSCfgResetTimer=friSCfgResetTimer, friSStatsRRFramesInTotal=friSStatsRRFramesInTotal, friPCfgMaxFmif=friPCfgMaxFmif, friPStatsPortStatus=friPStatsPortStatus, friSStatsLastStatsReset=friSStatsLastStatsReset, cdx6500PPSTFRIPortEntry=cdx6500PPSTFRIPortEntry, cdx6500PSTPortProtocolGroup=cdx6500PSTPortProtocolGroup, friSStatsBECNOutTotal=friSStatsBECNOutTotal, friSStatsREJFramesOutTotal=friSStatsREJFramesOutTotal, friSCfgPPacketSize=friSCfgPPacketSize, friPStatsRxMinCallDuration=friPStatsRxMinCallDuration, friPCfgSubscriberNumber=friPCfgSubscriberNumber, friSCfgKFrameWindow=friSCfgKFrameWindow, friPCfgConnectionType=friPCfgConnectionType, friSStatsCurrPVCCount=friSStatsCurrPVCCount, friSStatsConfiguredCIR=friSStatsConfiguredCIR, friPCfgSegSizeVoicePresent=friPCfgSegSizeVoicePresent, friSStatsLMIFlowCntrl=friSStatsLMIFlowCntrl, friSStatsFECNInTotal=friSStatsFECNInTotal, friPStatsStatusEnqSentFull=friPStatsStatusEnqSentFull, friSCfgCctType=friSCfgCctType, friPCfgT310=friPCfgT310, friPStatsSignalingState=friPStatsSignalingState, friPCfgT200=friPCfgT200, friSStatsNumPktsQueued=friSStatsNumPktsQueued, friSCfgCallControl=friSCfgCallControl, friSCfgN2TransmissionTries=friSCfgN2TransmissionTries, friSCfgVoiceCongCtrlMode=friSCfgVoiceCongCtrlMode, friPCfgN200=friPCfgN200, friSCfgE2ESegDelayEnabled=friSCfgE2ESegDelayEnabled, friSStatsCharOutPerSec=friSStatsCharOutPerSec, friPCfgStartSvcDlci=friPCfgStartSvcDlci, friSStatsFRMRFramesOutTotal=friSStatsFRMRFramesOutTotal, friPCfgClockSource=friPCfgClockSource, friSStatsResetReqPktOutTotal=friSStatsResetReqPktOutTotal, friPStatsTimeouts=friPStatsTimeouts, friSCfgX25Options=friSCfgX25Options, friSCfgLinkAddress=friSCfgLinkAddress, friSCfgCommBurstSize=friSCfgCommBurstSize, friSCfgFrameSegmenter=friSCfgFrameSegmenter, friSCfgT1RetryTimer=friSCfgT1RetryTimer, friSStatsPktOutTotal=friSStatsPktOutTotal, friSStatsRRPktOutTotal=friSStatsRRPktOutTotal, friSContStnControl=friSContStnControl, friPCfgN393MonitoredEvents=friPCfgN393MonitoredEvents, friSCfgBurstExcess=friSCfgBurstExcess, friPStatsRxLastCalledNumber=friPStatsRxLastCalledNumber, friSummPortNumber=friSummPortNumber, friSCfgInitialFrame=friSCfgInitialFrame, friSStatsRestartConfPktInTotal=friSStatsRestartConfPktInTotal, friPStatsSplittingRatio=friPStatsSplittingRatio, friPStatsCharInTotal=friPStatsCharInTotal, friSStatsVoiceCongDetect=friSStatsVoiceCongDetect, cdx6500StatProtocolGroup=cdx6500StatProtocolGroup, friSStatsCurrVSVCCount=friSStatsCurrVSVCCount, friPStatsPriorityStn=friPStatsPriorityStn, friSStatsPktsDiscardIn=friSStatsPktsDiscardIn, friPStatsMaxContiguousSegmentsLost=friPStatsMaxContiguousSegmentsLost, friPCfgCntrlProtocolSupport=friPCfgCntrlProtocolSupport, cdx6500PPSTFRIPStatsTable=cdx6500PPSTFRIPStatsTable, friPStatsUnderrunErrors=friPStatsUnderrunErrors, friSCfgRestrictedConnDest=friSCfgRestrictedConnDest, friPStatsStatusEnqSentLIV=friPStatsStatusEnqSentLIV, friSStatsDISCFramesOutTotal=friSStatsDISCFramesOutTotal, friPStatsCharInPerSec=friPStatsCharInPerSec, friSStatsREJPktInTotal=friSStatsREJPktInTotal, friSStatsFrameSegSyncLost=friSStatsFrameSegSyncLost, friPStatsFrameSegmenterSyncLost=friPStatsFrameSegmenterSyncLost, friSStatsVoiceCharInTotal=friSStatsVoiceCharInTotal, friSStatsRestartReqPktOutTotal=friSStatsRestartReqPktOutTotal, friPCfgNT2VerificationTimer=friPCfgNT2VerificationTimer, friPStatsConfiguredStns=friPStatsConfiguredStns, friPStatsNumRxCallsSinceLastReset=friPStatsNumRxCallsSinceLastReset, friPCfgNN2ErrsDuringMonitoredEvents=friPCfgNN2ErrsDuringMonitoredEvents, friSCfgTransDelay=friSCfgTransDelay)
mibBuilder.exportSymbols("FRI-OPT-MIB", friPCfgHighestStnNumber=friPCfgHighestStnNumber, cdx6500PPSTFRIDataSummaryEntry=cdx6500PPSTFRIDataSummaryEntry, friPCfgPortNumber=friPCfgPortNumber, friPStatsTxAvgCallDuration=friPStatsTxAvgCallDuration, friPStatsOpCntrlProtocol=friPStatsOpCntrlProtocol, friPCfgDiscardControlOptions=friPCfgDiscardControlOptions, friPStatsLastUnknownDLCI=friPStatsLastUnknownDLCI, friSStatsDMFramesInTotal=friSStatsDMFramesInTotal, friSCfgCalledSubaddress=friSCfgCalledSubaddress, friSStatsPktInTotal=friSStatsPktInTotal, friSStatsCurrSVCCount=friSStatsCurrSVCCount, friSStatsClrConfPktOutTotal=friSStatsClrConfPktOutTotal, cdx6500PPSTFRIDataSummaryTable=cdx6500PPSTFRIDataSummaryTable, friSStatsDataPktInTotal=friSStatsDataPktInTotal, friPStatsTxLastCallFailureCause=friPStatsTxLastCallFailureCause, friDataSummPortNumber=friDataSummPortNumber, friSCfgAnnexGRateReduction=friSCfgAnnexGRateReduction, friPStatsUnknownDLCICount=friPStatsUnknownDLCICount, friSGenStatsPortNumber=friSGenStatsPortNumber, friSStatsResetConfPktInTotal=friSStatsResetConfPktInTotal, friSStatsDISCFramesInTotal=friSStatsDISCFramesInTotal, friPCfgN391PollCycle=friPCfgN391PollCycle, friPCfgNN3MonitoredEvents=friPCfgNN3MonitoredEvents, friSStatsClrConfPktInTotal=friSStatsClrConfPktInTotal, friPCfgHighPriorityStn=friPCfgHighPriorityStn, friPCfgN392ErrsDuringMonitoredEvents=friPCfgN392ErrsDuringMonitoredEvents, cdx6500friSPacketSummaryStatsEntry=cdx6500friSPacketSummaryStatsEntry, friSGenStatsTable=friSGenStatsTable, friSStatsCallAccPktOutTotal=friSStatsCallAccPktOutTotal, friSStatsRestartReqPktInTotal=friSStatsRestartReqPktInTotal, cdx6500Controls=cdx6500Controls, friSCfgCalledNumber=friSCfgCalledNumber, friSStatsPVCState=friSStatsPVCState, friSStatsRestartConfPktOutTotal=friSStatsRestartConfPktOutTotal, friPStatsUtilOut=friPStatsUtilOut, DisplayString=DisplayString, friSStatsFECNOutTotal=friSStatsFECNOutTotal, friPStatsNumTxCallsSinceLastReset=friPStatsNumTxCallsSinceLastReset, friSStatsFrameOutPerSec=friSStatsFrameOutPerSec, friSGenStatsStnNumber=friSGenStatsStnNumber, friPStatsPortSpeed=friPStatsPortSpeed, friPStatsVoiceBWOnPort=friPStatsVoiceBWOnPort, friSContStnNumber=friSContStnNumber, friSCfgIeNegotiation=friSCfgIeNegotiation, friSCfgIdleInterval=friSCfgIdleInterval, friSCfgE2ECheckPckSize=friSCfgE2ECheckPckSize, friPCfgPortType=friPCfgPortType, friSStatsDEOutTotal=friSStatsDEOutTotal, friSStatsCharInTotal=friSStatsCharInTotal, cdx6500SPSTFRISStatsTable=cdx6500SPSTFRISStatsTable, friSStatsExpCongDetect=friSStatsExpCongDetect, friSCfgT4PollTimer=friSCfgT4PollTimer, friSFRISummStatsStnNumber=friSFRISummStatsStnNumber, friPStatsTotalSegmentsLost=friPStatsTotalSegmentsLost, cdx6500friSGenStatsEntry=cdx6500friSGenStatsEntry, friSStatsClrReqPktInTotal=friSStatsClrReqPktInTotal, cdx6500friSFrameSummaryStatsEntry=cdx6500friSFrameSummaryStatsEntry, friSCfgCongControlMode=friSCfgCongControlMode, friPCfgWindowK=friPCfgWindowK, friSStatsUtilIn=friSStatsUtilIn, friSFrameSummStatsStnNumber=friSFrameSummStatsStnNumber, friPStatsUtilIn=friPStatsUtilIn, friSStatsFrameInPerSec=friSStatsFrameInPerSec, friSStatsPktsDiscardOut=friSStatsPktsDiscardOut, friPCfgT392Timer=friPCfgT392Timer, friSCfgBillingRecords=friSCfgBillingRecords, friSStatsStnState=friSStatsStnState)
