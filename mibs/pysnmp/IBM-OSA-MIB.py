#
# PySNMP MIB module IBM-OSA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IBM-OSA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:39:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
iso, ModuleIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter64, Counter32, TimeTicks, enterprises, NotificationType, Gauge32, ObjectIdentity, MibIdentifier, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ModuleIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter64", "Counter32", "TimeTicks", "enterprises", "NotificationType", "Gauge32", "ObjectIdentity", "MibIdentifier", "Integer32", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ibmOSAMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2, 6, 188))
ibmOSAMib.setRevisions(('2002-05-23 00:00', '2002-03-26 08:00',))
if mibBuilder.loadTexts: ibmOSAMib.setLastUpdated('200205230000Z')
if mibBuilder.loadTexts: ibmOSAMib.setOrganization('IBM eServer Development')
ibm = MibIdentifier((1, 3, 6, 1, 4, 1, 2))
ibmProd = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6))
ibmOSAMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 188, 1))
ibmOSAMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 188, 2))
ibmOSAExpChannelTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 1), )
if mibBuilder.loadTexts: ibmOSAExpChannelTable.setStatus('current')
ibmOSAExpChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ibmOSAExpChannelEntry.setStatus('current')
ibmOSAExpChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpChannelNumber.setStatus('current')
ibmOSAExpChannelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(17))).clone(namedValues=NamedValues(("osaDirectExpress", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpChannelType.setStatus('current')
ibmOSAExpChannelHdwLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("osaExp150", 2), ("osaExp175", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpChannelHdwLevel.setStatus('current')
ibmOSAExpChannelSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65, 81, 82, 2304))).clone(namedValues=NamedValues(("unknown", 1), ("gigabitEthernet", 65), ("fastEthernet", 81), ("tokenRing", 82), ("atmEmulatedEthernet", 2304)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpChannelSubType.setStatus('current')
ibmOSAExpChannelShared = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notShared", 0), ("shared", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpChannelShared.setStatus('current')
ibmOSAExpChannelNodeDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpChannelNodeDesc.setStatus('current')
ibmOSAExpChannelProcCodeLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpChannelProcCodeLevel.setStatus('current')
ibmOSAExpChannelPCIBusUtil1Min = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpChannelPCIBusUtil1Min.setStatus('current')
ibmOSAExpChannelProcUtil1Min = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpChannelProcUtil1Min.setStatus('current')
ibmOSAExpChannelPCIBusUtil5Min = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpChannelPCIBusUtil5Min.setStatus('current')
ibmOSAExpChannelProcUtil5Min = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpChannelProcUtil5Min.setStatus('current')
ibmOSAExpChannelPCIBusUtilHour = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpChannelPCIBusUtilHour.setStatus('current')
ibmOSAExpChannelProcUtilHour = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpChannelProcUtilHour.setStatus('current')
ibmOSAExpPerfTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2), )
if mibBuilder.loadTexts: ibmOSAExpPerfTable.setStatus('current')
ibmOSAExpPerfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ibmOSAExpPerfEntry.setStatus('current')
ibmOSAExpPerfDataLP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPerfDataLP0.setStatus('current')
ibmOSAExpPerfDataLP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPerfDataLP1.setStatus('current')
ibmOSAExpPerfDataLP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPerfDataLP2.setStatus('current')
ibmOSAExpPerfDataLP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPerfDataLP3.setStatus('current')
ibmOSAExpPerfDataLP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPerfDataLP4.setStatus('current')
ibmOSAExpPerfDataLP5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPerfDataLP5.setStatus('current')
ibmOSAExpPerfDataLP6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPerfDataLP6.setStatus('current')
ibmOSAExpPerfDataLP7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPerfDataLP7.setStatus('current')
ibmOSAExpPerfDataLP8 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPerfDataLP8.setStatus('current')
ibmOSAExpPerfDataLP9 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPerfDataLP9.setStatus('current')
ibmOSAExpPerfDataLP10 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPerfDataLP10.setStatus('current')
ibmOSAExpPerfDataLP11 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPerfDataLP11.setStatus('current')
ibmOSAExpPerfDataLP12 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPerfDataLP12.setStatus('current')
ibmOSAExpPerfDataLP13 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPerfDataLP13.setStatus('current')
ibmOSAExpPerfDataLP14 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPerfDataLP14.setStatus('current')
ibmOSAExpPerfDataLP15 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 2, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPerfDataLP15.setStatus('current')
ibmOSAExpPETable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 3), )
if mibBuilder.loadTexts: ibmOSAExpPETable.setStatus('current')
ibmOSAExpPEEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ibmOSAExpPEEntry.setStatus('current')
ibmOSAExpPEMaxSizeArpCache = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 214783647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPEMaxSizeArpCache.setStatus('current')
ibmOSAExpPEArpPendingEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPEArpPendingEntries.setStatus('current')
ibmOSAExpPEArpActiveEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPEArpActiveEntries.setStatus('current')
ibmOSAExpPEIPEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPEIPEntries.setStatus('current')
ibmOSAExpPEMulticastEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPEMulticastEntries.setStatus('current')
ibmOSAExpPEMulticastData = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3360, 3360)).setFixedLength(3360)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOSAExpPEMulticastData.setStatus('current')
ibmOSAExpEthPortTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4), )
if mibBuilder.loadTexts: ibmOSAExpEthPortTable.setStatus('current')
ibmOSAExpEthPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ibmOSAExpEthPortEntry.setStatus('current')
ibmOsaExpEthPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthPortNumber.setStatus('current')
ibmOsaExpEthPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(65, 81))).clone(namedValues=NamedValues(("gigabitEthernet", 65), ("fastEthernet", 81)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthPortType.setStatus('current')
ibmOsaExpEthLanTrafficState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("undefined", 0), ("unavailable", 1), ("enabling", 2), ("disabling", 3), ("enabled", 4), ("disabled", 5), ("linkMonitor", 6), ("definitionError", 7), ("configuredOffline", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthLanTrafficState.setStatus('current')
ibmOsaExpEthServiceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notInServiceMode", 0), ("inServiceMode", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthServiceMode.setStatus('current')
ibmOsaExpEthDisabledStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 5), Bits().clone(namedValues=NamedValues(("reserved0", 0), ("internalPortFailure", 1), ("reserved2", 2), ("reserved3", 3), ("reserved4", 4), ("reserved5", 5), ("portTemporarilyDisabled", 6), ("reserved7", 7), ("reserved8", 8), ("serviceProcessorRequest", 9), ("networkRequest", 10), ("osasfRequest", 11), ("configurationChange", 12), ("linkFailureThresholdExceeded", 13), ("reserved14", 14), ("reserved15", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthDisabledStatus.setStatus('current')
ibmOsaExpEthConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 34))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthConfigName.setStatus('current')
ibmOsaExpEthConfigSpeedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("notValidGigabit", -1), ("autoNegotiate", 0), ("tenMbHalfDuplex", 1), ("tenMbFullDuplex", 2), ("oneHundredMbHalfDuplex", 3), ("oneHundredMbFullDuplex", 4), ("oneThousandMbFullDuplex", 6)))).setUnits('Megabits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthConfigSpeedMode.setStatus('current')
ibmOsaExpEthActiveSpeedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("unknown", 0), ("tenMbHalfDuplex", 1), ("tenMbFullDuplex", 2), ("oneHundredMbHalfDuplex", 3), ("oneHundredMbFullDuplex", 4), ("oneThousandMbFullDuplex", 6)))).setUnits('Megabits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthActiveSpeedMode.setStatus('current')
ibmOsaExpEthMacAddrActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthMacAddrActive.setStatus('current')
ibmOsaExpEthMacAddrBurntIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthMacAddrBurntIn.setStatus('current')
ibmOsaExpEthUserData = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthUserData.setStatus('current')
ibmOsaExpEthOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthOutPackets.setStatus('current')
ibmOsaExpEthInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthInPackets.setStatus('current')
ibmOsaExpEthInGroupFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthInGroupFrames.setStatus('current')
ibmOsaExpEthInBroadcastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthInBroadcastFrames.setStatus('current')
ibmOsaExpEthPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthPortName.setStatus('current')
ibmOsaExpEthInUnknownIPFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthInUnknownIPFrames.setStatus('current')
ibmOsaExpEthGroupAddrTable = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 4, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpEthGroupAddrTable.setStatus('current')
ibmOSAExpTRPortTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5), )
if mibBuilder.loadTexts: ibmOSAExpTRPortTable.setStatus('current')
ibmOSAExpTRPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ibmOSAExpTRPortEntry.setStatus('current')
ibmOsaExpTRPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRPortNumber.setStatus('current')
ibmOsaExpTRPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(82))).clone(namedValues=NamedValues(("tokenring", 82)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRPortType.setStatus('current')
ibmOsaExpTRLanTrafficState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("undefined", 0), ("unavailable", 1), ("enabling", 2), ("disabling", 3), ("enabled", 4), ("disabled", 5), ("linkMonitor", 6), ("definitionError", 7), ("configuredOffline", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRLanTrafficState.setStatus('current')
ibmOsaExpTRServiceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notInServiceMode", 0), ("inServiceMode", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRServiceMode.setStatus('current')
ibmOsaExpTRDisabledStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 5), Bits().clone(namedValues=NamedValues(("reserved0", 0), ("internalPortFailure", 1), ("reserved2", 2), ("reserved3", 3), ("reserved4", 4), ("reserved5", 5), ("portTemporarilyDisabled", 6), ("reserved7", 7), ("reserved8", 8), ("serviceProcessorRequest", 9), ("networkRequest", 10), ("osasfRequest", 11), ("configurationChange", 12), ("linkFailureThresholdExceeded", 13), ("reserved14", 14), ("reserved15", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRDisabledStatus.setStatus('current')
ibmOsaExpTRConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 34))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRConfigName.setStatus('current')
ibmOsaExpTRMacAddrActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRMacAddrActive.setStatus('current')
ibmOsaExpTRMacAddrBurntIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRMacAddrBurntIn.setStatus('current')
ibmOsaExpTRConfigSpeedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("autoNegotiate", 0), ("fourMbHalfDuplex", 1), ("fourMbFullDuplex", 2), ("sixteenMbHalfDuplex", 3), ("sixteenMbFullDuplex", 4), ("oneHundredMbFullDuplex", 6)))).setUnits('Megabits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRConfigSpeedMode.setStatus('current')
ibmOsaExpTRActiveSpeedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("unknown", 0), ("fourMbHalfDuplex", 1), ("fourMbFullDuplex", 2), ("sixteenMbHalfDuplex", 3), ("sixteenMbFullDuplex", 4), ("oneHundredMbFullDuplex", 6)))).setUnits('Megabits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRActiveSpeedMode.setStatus('current')
ibmOsaExpTRUserData = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRUserData.setStatus('current')
ibmOsaExpTRPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRPortName.setStatus('current')
ibmOsaExpTRGroupAddrTable = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRGroupAddrTable.setStatus('current')
ibmOsaExpTRFunctionalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRFunctionalAddr.setStatus('current')
ibmOsaExpTRRingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 15), Bits().clone(namedValues=NamedValues(("reserved0", 0), ("reserved1", 1), ("reserved2", 2), ("reserved3", 3), ("reserved4", 4), ("reserved5", 5), ("reserved6", 6), ("reserved7", 7), ("reserved8", 8), ("reserved9", 9), ("reserved10", 10), ("reserved11", 11), ("reserved12", 12), ("reserved13", 13), ("noStatusOpenNotCompleted", 14), ("reserved15", 15), ("signalLoss", 16), ("hardError", 17), ("softError", 18), ("reserved19", 19), ("lobeWireFault", 20), ("autoRemovalError", 21), ("fdxProtocol", 22), ("removeReceived", 23), ("counterOverflow", 24), ("singleStation", 25), ("ringRecovery", 26), ("sRCounterOverflow", 27), ("reserved29", 28), ("openInFDXmode", 29), ("fourMbFullDuplex", 30), ("fourMbHalfDuplex", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRRingStatus.setStatus('current')
ibmOsaExpTRAllowAccessPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRAllowAccessPriority.setStatus('current')
ibmOsaExpTREarlyTokenRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("true", 0), ("false", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTREarlyTokenRelease.setStatus('current')
ibmOsaExpTRBeaconingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRBeaconingAddress.setStatus('current')
ibmOsaExpTRUpstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRUpstreamNeighbor.setStatus('current')
ibmOsaExpTRRingState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("opened", 1), ("closed", 2), ("opening", 3), ("closing", 4), ("openFailure", 5), ("ringFailure", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRRingState.setStatus('current')
ibmOsaExpTRRingOpenStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26))).clone(namedValues=NamedValues(("noOpen", 1), ("badParameter", 2), ("lobeFailed", 3), ("signalLoss", 4), ("insertionTimeout", 5), ("ringFailed", 6), ("beaconing", 7), ("duplicateMAC", 8), ("requestFailed", 9), ("removeReceived", 10), ("open", 11), ("sARecFrameNotEqualNAUNs", 12), ("claimTokenRec", 13), ("ringPurgeFramRec", 14), ("activeMonPresRec", 15), ("standbyMonPresRec", 16), ("accessProtocolDenied", 17), ("fDXInsDeniedDACfailOnOpen", 18), ("fDXInsDeniedDACfailOnBeaconTest", 19), ("beaconBeforeOpen", 20), ("insertTimerExpDuringDAC", 21), ("insertTimerExpDuringBeaconTest", 22), ("lobeMedizTestFailure", 23), ("heartbeatFailBeforeOpenCompleted", 24), ("heartbeatFailDuringBeaconTest", 25), ("recBeaconFrameWithInvalidSA", 26)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRRingOpenStatus.setStatus('current')
ibmOsaExpTRPacketsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 22), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRPacketsTransmitted.setStatus('current')
ibmOsaExpTRPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 23), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRPacketsReceived.setStatus('current')
ibmOsaExpTRLineErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRLineErrorCount.setStatus('current')
ibmOsaExpTRBurstErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRBurstErrorCount.setStatus('current')
ibmOsaExpTRACErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRACErrorCount.setStatus('current')
ibmOsaExpTRAbortTransErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRAbortTransErrorCount.setStatus('current')
ibmOsaExpTRInternalErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRInternalErrorCount.setStatus('current')
ibmOsaExpTRLostFrameErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRLostFrameErrorCount.setStatus('current')
ibmOsaExpTRRcvCongestionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRRcvCongestionCount.setStatus('current')
ibmOsaExpTRFrameCopyErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRFrameCopyErrorCount.setStatus('current')
ibmOsaExpTRTokenErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRTokenErrorCount.setStatus('current')
ibmOsaExpTRFullDuplexErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRFullDuplexErrorCount.setStatus('current')
ibmOsaExpTRSoftErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRSoftErrorCount.setStatus('current')
ibmOsaExpTRHardErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRHardErrorCount.setStatus('current')
ibmOsaExpTRSignalLossErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRSignalLossErrorCount.setStatus('current')
ibmOsaExpTRTransmitBeaconCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRTransmitBeaconCount.setStatus('current')
ibmOsaExpTRRecoveryCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRRecoveryCounter.setStatus('current')
ibmOsaExpTRLobeWireFaultCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRLobeWireFaultCount.setStatus('current')
ibmOsaExpTRRemoveReceivedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRRemoveReceivedCount.setStatus('current')
ibmOsaExpTRSingleStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 5, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpTRSingleStationCount.setStatus('current')
ibmOSAExpATMPortTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7), )
if mibBuilder.loadTexts: ibmOSAExpATMPortTable.setStatus('current')
ibmOSAExpATMPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ibmOSAExpATMPortEntry.setStatus('current')
ibmOsaExpATMPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMPortNumber.setStatus('current')
ibmOsaExpATMPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(17))).clone(namedValues=NamedValues(("emulatedEthernet", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMPortType.setStatus('current')
ibmOsaExpATMLanTrafficState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("undefined", 0), ("unavailable", 1), ("enabling", 2), ("disabling", 3), ("enabled", 4), ("disabled", 5), ("linkMonitor", 6), ("definitionError", 7), ("configuredOffline", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMLanTrafficState.setStatus('current')
ibmOsaExpATMServiceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notInServiceMode", 0), ("inServiceMode", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMServiceMode.setStatus('current')
ibmOsaExpATMDisabledStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 5), Bits().clone(namedValues=NamedValues(("reserved0", 0), ("internalPortFailure", 1), ("reserved2", 2), ("reserved3", 3), ("reserved4", 4), ("reserved5", 5), ("portTemporarilyDisabled", 6), ("reserved7", 7), ("reserved8", 8), ("serviceProcessorRequest", 9), ("networkRequest", 10), ("osasfRequest", 11), ("configurationChange", 12), ("linkFailureThresholdExceeded", 13), ("reserved14", 14), ("reserved15", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMDisabledStatus.setStatus('current')
ibmOsaExpATMConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 34))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMConfigName.setStatus('current')
ibmOsaExpATMMacAddrActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMMacAddrActive.setStatus('current')
ibmOsaExpATMMacAddrBurntIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMMacAddrBurntIn.setStatus('current')
ibmOsaExpATMUserData = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMUserData.setStatus('current')
ibmOsaExpATMPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMPortName.setStatus('current')
ibmOsaExpATMGroupMacAddrTable = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMGroupMacAddrTable.setStatus('current')
ibmOsaExpATMIBMEnhancedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMIBMEnhancedMode.setStatus('current')
ibmOsaExpATMBestEffortPeakRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 15), Integer32()).setUnits('Megabytes per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMBestEffortPeakRate.setStatus('current')
ibmOsaExpATMConfigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("automatic", 1), ("manual", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMConfigMode.setStatus('current')
ibmOsaExpATMConfigLanType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(17))).clone(namedValues=NamedValues(("emulatedEthernet", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMConfigLanType.setStatus('current')
ibmOsaExpATMActualLanType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(17))).clone(namedValues=NamedValues(("emulatedEthernet", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMActualLanType.setStatus('current')
ibmOsaExpATMConfigMaxDataFrmSz = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unspecified", 1), ("f1516", 2), ("f4544", 3), ("f9234", 4), ("f18190", 5)))).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMConfigMaxDataFrmSz.setStatus('current')
ibmOsaExpATMActualMaxDataFrmSz = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unspecified", 1), ("f1516", 2), ("f4544", 3), ("f9234", 4), ("f18190", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMActualMaxDataFrmSz.setStatus('current')
ibmOsaExpATMConfigELANName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 36))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMConfigELANName.setStatus('current')
ibmOsaExpATMActualELANName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 36))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMActualELANName.setStatus('current')
ibmOsaExpATMConfigLESATMAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMConfigLESATMAddress.setStatus('current')
ibmOsaExpATMActualLESATMAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMActualLESATMAddress.setStatus('current')
ibmOsaExpATMControlTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 300))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMControlTimeout.setStatus('current')
ibmOsaExpATMMaxUnknownFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMMaxUnknownFrameCount.setStatus('current')
ibmOsaExpATMMaxUnknownFrameTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMMaxUnknownFrameTime.setStatus('current')
ibmOsaExpATMVCCTimeoutPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 28), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMVCCTimeoutPeriod.setStatus('current')
ibmOsaExpATMMaxRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMMaxRetryCount.setStatus('current')
ibmOsaExpATMAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 300))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMAgingTime.setStatus('current')
ibmOsaExpATMForwardDelayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 30))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMForwardDelayTime.setStatus('current')
ibmOsaExpATMExpectedARPRespTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMExpectedARPRespTime.setStatus('current')
ibmOsaExpATMFlushTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMFlushTimeout.setStatus('current')
ibmOsaExpATMPathSwitchingDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMPathSwitchingDelay.setStatus('current')
ibmOsaExpATMLocalSegmentID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMLocalSegmentID.setStatus('current')
ibmOsaExpATMMltcstSendVCCType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("bestEffort", 1), ("variableBitRate", 2), ("constantBitRate", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMMltcstSendVCCType.setStatus('current')
ibmOsaExpATMMltcstSendVCCAvgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMMltcstSendVCCAvgRate.setStatus('current')
ibmOsaExpATMMcastSendVCCPeakRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMMcastSendVCCPeakRate.setStatus('current')
ibmOsaExpATMConnectCompleteTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMConnectCompleteTimer.setStatus('current')
ibmOsaExpATMClientATMAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 40), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMClientATMAddress.setStatus('current')
ibmOsaExpATMClientIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65279))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMClientIdentifier.setStatus('current')
ibmOsaExpATMClientCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("initialState", 1), ("lecsConnect", 2), ("configure", 3), ("join", 4), ("initialRegistration", 5), ("busConnect", 6), ("operational", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMClientCurrentState.setStatus('current')
ibmOsaExpATMLastFailureRespCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("none", 1), ("timeout", 2), ("undefinedError", 3), ("versionNotSupported", 4), ("invalidRequestParameters", 5), ("duplicateLanDestination", 6), ("duplicateAtmAddress", 7), ("insufficientResources", 8), ("accessDenied", 9), ("invalidRequesterId", 10), ("invalidLanDestination", 11), ("invalidAtmAddress", 12), ("noConfiguration", 13), ("leConfigureError", 14), ("insufficientInformation", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMLastFailureRespCode.setStatus('current')
ibmOsaExpATMLastFailureState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("initialState", 1), ("lecsConnect", 2), ("configure", 3), ("join", 4), ("initialRegistration", 5), ("busConnect", 6), ("operational", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMLastFailureState.setStatus('current')
ibmOsaExpATMProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMProtocol.setStatus('current')
ibmOsaExpATMLeVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMLeVersion.setStatus('current')
ibmOsaExpATMTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMTopologyChange.setStatus('current')
ibmOsaExpATMConfigServerATMAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 48), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMConfigServerATMAddr.setStatus('current')
ibmOsaExpATMConfigSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("gotAddressViaIlmi", 1), ("usedWellKnownAddress", 2), ("usedLecsPvc", 3), ("didNotUseLecs", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMConfigSource.setStatus('current')
ibmOsaExpATMProxyClient = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMProxyClient.setStatus('current')
ibmOsaExpATMLePDUOctetsInbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 51), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMLePDUOctetsInbound.setStatus('current')
ibmOsaExpATMNonErrLePDUDiscIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 52), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMNonErrLePDUDiscIn.setStatus('current')
ibmOsaExpATMErrLePDUDiscIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMErrLePDUDiscIn.setStatus('current')
ibmOsaExpATMLePDUOctetsOutbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 54), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMLePDUOctetsOutbound.setStatus('current')
ibmOsaExpATMNonErrLePDUDiscOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMNonErrLePDUDiscOut.setStatus('current')
ibmOsaExpATMErrLePDUDiscOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMErrLePDUDiscOut.setStatus('current')
ibmOsaExpATMLeARPRequestsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMLeARPRequestsOut.setStatus('current')
ibmOsaExpATMLeARPRequestsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMLeARPRequestsIn.setStatus('current')
ibmOsaExpATMLeARPRepliesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMLeARPRepliesOut.setStatus('current')
ibmOsaExpATMLeARPRepliesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMLeARPRepliesIn.setStatus('current')
ibmOsaExpATMControlFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 61), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMControlFramesOut.setStatus('current')
ibmOsaExpATMControlFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 62), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMControlFramesIn.setStatus('current')
ibmOsaExpATMSVCFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMSVCFailures.setStatus('current')
ibmOsaExpATMConfigDirectIntfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMConfigDirectIntfc.setStatus('current')
ibmOsaExpATMConfigDirectVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 65), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMConfigDirectVPI.setStatus('current')
ibmOsaExpATMConfigDirectVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 66), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMConfigDirectVCI.setStatus('current')
ibmOsaExpATMControlDirectIntfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 67), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMControlDirectIntfc.setStatus('current')
ibmOsaExpATMControlDirectVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 68), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMControlDirectVPI.setStatus('current')
ibmOsaExpATMControlDirectVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 69), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMControlDirectVCI.setStatus('current')
ibmOsaExpATMControlDistIntfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 70), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMControlDistIntfc.setStatus('current')
ibmOsaExpATMControlDistributeVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 71), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMControlDistributeVPI.setStatus('current')
ibmOsaExpATMControlDistributeVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 72), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMControlDistributeVCI.setStatus('current')
ibmOsaExpATMMulticastSendIntfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 73), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMMulticastSendIntfc.setStatus('current')
ibmOsaExpATMMulticastSendVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 74), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMMulticastSendVPI.setStatus('current')
ibmOsaExpATMMulticastSendVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 75), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMMulticastSendVCI.setStatus('current')
ibmOsaExpATMMulticastFwdIntfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 76), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMMulticastFwdIntfc.setStatus('current')
ibmOsaExpATMMulticastForwardVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 77), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMMulticastForwardVPI.setStatus('current')
ibmOsaExpATMMulticastForwardVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 188, 1, 7, 1, 78), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmOsaExpATMMulticastForwardVCI.setStatus('current')
ibmOSAMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 188, 2, 1))
ibmOSAMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 188, 2, 2))
ibmOSAMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2, 6, 188, 2, 1, 1)).setObjects(("IBM-OSA-MIB", "ibmOSAExpChannelGroup"), ("IBM-OSA-MIB", "ibmOSAExpPerfGroup"), ("IBM-OSA-MIB", "ibmOSAExpPEGroup"), ("IBM-OSA-MIB", "ibmOSAExpEthGroup"), ("IBM-OSA-MIB", "ibmOSAExpTRGroup"), ("IBM-OSA-MIB", "ibmOSAExpATMGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ibmOSAMibCompliance = ibmOSAMibCompliance.setStatus('current')
ibmOSAExpChannelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 188, 2, 2, 1)).setObjects(("IBM-OSA-MIB", "ibmOSAExpChannelNumber"), ("IBM-OSA-MIB", "ibmOSAExpChannelType"), ("IBM-OSA-MIB", "ibmOSAExpChannelHdwLevel"), ("IBM-OSA-MIB", "ibmOSAExpChannelSubType"), ("IBM-OSA-MIB", "ibmOSAExpChannelShared"), ("IBM-OSA-MIB", "ibmOSAExpChannelNodeDesc"), ("IBM-OSA-MIB", "ibmOSAExpChannelProcCodeLevel"), ("IBM-OSA-MIB", "ibmOSAExpChannelPCIBusUtil1Min"), ("IBM-OSA-MIB", "ibmOSAExpChannelProcUtil1Min"), ("IBM-OSA-MIB", "ibmOSAExpChannelPCIBusUtil5Min"), ("IBM-OSA-MIB", "ibmOSAExpChannelProcUtil5Min"), ("IBM-OSA-MIB", "ibmOSAExpChannelPCIBusUtilHour"), ("IBM-OSA-MIB", "ibmOSAExpChannelProcUtilHour"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ibmOSAExpChannelGroup = ibmOSAExpChannelGroup.setStatus('current')
ibmOSAExpPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 188, 2, 2, 2)).setObjects(("IBM-OSA-MIB", "ibmOSAExpPerfDataLP0"), ("IBM-OSA-MIB", "ibmOSAExpPerfDataLP1"), ("IBM-OSA-MIB", "ibmOSAExpPerfDataLP2"), ("IBM-OSA-MIB", "ibmOSAExpPerfDataLP3"), ("IBM-OSA-MIB", "ibmOSAExpPerfDataLP4"), ("IBM-OSA-MIB", "ibmOSAExpPerfDataLP5"), ("IBM-OSA-MIB", "ibmOSAExpPerfDataLP6"), ("IBM-OSA-MIB", "ibmOSAExpPerfDataLP7"), ("IBM-OSA-MIB", "ibmOSAExpPerfDataLP8"), ("IBM-OSA-MIB", "ibmOSAExpPerfDataLP9"), ("IBM-OSA-MIB", "ibmOSAExpPerfDataLP10"), ("IBM-OSA-MIB", "ibmOSAExpPerfDataLP11"), ("IBM-OSA-MIB", "ibmOSAExpPerfDataLP12"), ("IBM-OSA-MIB", "ibmOSAExpPerfDataLP13"), ("IBM-OSA-MIB", "ibmOSAExpPerfDataLP14"), ("IBM-OSA-MIB", "ibmOSAExpPerfDataLP15"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ibmOSAExpPerfGroup = ibmOSAExpPerfGroup.setStatus('current')
ibmOSAExpPEGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 188, 2, 2, 3)).setObjects(("IBM-OSA-MIB", "ibmOSAExpPEMaxSizeArpCache"), ("IBM-OSA-MIB", "ibmOSAExpPEArpPendingEntries"), ("IBM-OSA-MIB", "ibmOSAExpPEArpActiveEntries"), ("IBM-OSA-MIB", "ibmOSAExpPEIPEntries"), ("IBM-OSA-MIB", "ibmOSAExpPEMulticastEntries"), ("IBM-OSA-MIB", "ibmOSAExpPEMulticastData"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ibmOSAExpPEGroup = ibmOSAExpPEGroup.setStatus('current')
ibmOSAExpEthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 188, 2, 2, 4)).setObjects(("IBM-OSA-MIB", "ibmOsaExpEthPortNumber"), ("IBM-OSA-MIB", "ibmOsaExpEthPortType"), ("IBM-OSA-MIB", "ibmOsaExpEthLanTrafficState"), ("IBM-OSA-MIB", "ibmOsaExpEthServiceMode"), ("IBM-OSA-MIB", "ibmOsaExpEthDisabledStatus"), ("IBM-OSA-MIB", "ibmOsaExpEthConfigName"), ("IBM-OSA-MIB", "ibmOsaExpEthConfigSpeedMode"), ("IBM-OSA-MIB", "ibmOsaExpEthActiveSpeedMode"), ("IBM-OSA-MIB", "ibmOsaExpEthMacAddrActive"), ("IBM-OSA-MIB", "ibmOsaExpEthMacAddrBurntIn"), ("IBM-OSA-MIB", "ibmOsaExpEthUserData"), ("IBM-OSA-MIB", "ibmOsaExpEthOutPackets"), ("IBM-OSA-MIB", "ibmOsaExpEthInPackets"), ("IBM-OSA-MIB", "ibmOsaExpEthInGroupFrames"), ("IBM-OSA-MIB", "ibmOsaExpEthInBroadcastFrames"), ("IBM-OSA-MIB", "ibmOsaExpEthPortName"), ("IBM-OSA-MIB", "ibmOsaExpEthInUnknownIPFrames"), ("IBM-OSA-MIB", "ibmOsaExpEthGroupAddrTable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ibmOSAExpEthGroup = ibmOSAExpEthGroup.setStatus('current')
ibmOSAExpTRGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 188, 2, 2, 5)).setObjects(("IBM-OSA-MIB", "ibmOsaExpTRPortNumber"), ("IBM-OSA-MIB", "ibmOsaExpTRPortType"), ("IBM-OSA-MIB", "ibmOsaExpTRLanTrafficState"), ("IBM-OSA-MIB", "ibmOsaExpTRServiceMode"), ("IBM-OSA-MIB", "ibmOsaExpTRDisabledStatus"), ("IBM-OSA-MIB", "ibmOsaExpTRConfigName"), ("IBM-OSA-MIB", "ibmOsaExpTRMacAddrActive"), ("IBM-OSA-MIB", "ibmOsaExpTRMacAddrBurntIn"), ("IBM-OSA-MIB", "ibmOsaExpTRConfigSpeedMode"), ("IBM-OSA-MIB", "ibmOsaExpTRActiveSpeedMode"), ("IBM-OSA-MIB", "ibmOsaExpTRUserData"), ("IBM-OSA-MIB", "ibmOsaExpTRPortName"), ("IBM-OSA-MIB", "ibmOsaExpTRGroupAddrTable"), ("IBM-OSA-MIB", "ibmOsaExpTRFunctionalAddr"), ("IBM-OSA-MIB", "ibmOsaExpTRRingStatus"), ("IBM-OSA-MIB", "ibmOsaExpTRAllowAccessPriority"), ("IBM-OSA-MIB", "ibmOsaExpTREarlyTokenRelease"), ("IBM-OSA-MIB", "ibmOsaExpTRBeaconingAddress"), ("IBM-OSA-MIB", "ibmOsaExpTRUpstreamNeighbor"), ("IBM-OSA-MIB", "ibmOsaExpTRRingState"), ("IBM-OSA-MIB", "ibmOsaExpTRRingOpenStatus"), ("IBM-OSA-MIB", "ibmOsaExpTRPacketsTransmitted"), ("IBM-OSA-MIB", "ibmOsaExpTRPacketsReceived"), ("IBM-OSA-MIB", "ibmOsaExpTRLineErrorCount"), ("IBM-OSA-MIB", "ibmOsaExpTRBurstErrorCount"), ("IBM-OSA-MIB", "ibmOsaExpTRACErrorCount"), ("IBM-OSA-MIB", "ibmOsaExpTRAbortTransErrorCount"), ("IBM-OSA-MIB", "ibmOsaExpTRInternalErrorCount"), ("IBM-OSA-MIB", "ibmOsaExpTRLostFrameErrorCount"), ("IBM-OSA-MIB", "ibmOsaExpTRRcvCongestionCount"), ("IBM-OSA-MIB", "ibmOsaExpTRFrameCopyErrorCount"), ("IBM-OSA-MIB", "ibmOsaExpTRTokenErrorCount"), ("IBM-OSA-MIB", "ibmOsaExpTRFullDuplexErrorCount"), ("IBM-OSA-MIB", "ibmOsaExpTRSoftErrorCount"), ("IBM-OSA-MIB", "ibmOsaExpTRHardErrorCount"), ("IBM-OSA-MIB", "ibmOsaExpTRSignalLossErrorCount"), ("IBM-OSA-MIB", "ibmOsaExpTRTransmitBeaconCount"), ("IBM-OSA-MIB", "ibmOsaExpTRRecoveryCounter"), ("IBM-OSA-MIB", "ibmOsaExpTRLobeWireFaultCount"), ("IBM-OSA-MIB", "ibmOsaExpTRRemoveReceivedCount"), ("IBM-OSA-MIB", "ibmOsaExpTRSingleStationCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ibmOSAExpTRGroup = ibmOSAExpTRGroup.setStatus('current')
ibmOSAExpATMGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 188, 2, 2, 7)).setObjects(("IBM-OSA-MIB", "ibmOsaExpATMPortNumber"), ("IBM-OSA-MIB", "ibmOsaExpATMPortType"), ("IBM-OSA-MIB", "ibmOsaExpATMLanTrafficState"), ("IBM-OSA-MIB", "ibmOsaExpATMServiceMode"), ("IBM-OSA-MIB", "ibmOsaExpATMDisabledStatus"), ("IBM-OSA-MIB", "ibmOsaExpATMConfigName"), ("IBM-OSA-MIB", "ibmOsaExpATMMacAddrActive"), ("IBM-OSA-MIB", "ibmOsaExpATMMacAddrBurntIn"), ("IBM-OSA-MIB", "ibmOsaExpATMUserData"), ("IBM-OSA-MIB", "ibmOsaExpATMPortName"), ("IBM-OSA-MIB", "ibmOsaExpATMGroupMacAddrTable"), ("IBM-OSA-MIB", "ibmOsaExpATMIBMEnhancedMode"), ("IBM-OSA-MIB", "ibmOsaExpATMBestEffortPeakRate"), ("IBM-OSA-MIB", "ibmOsaExpATMConfigMode"), ("IBM-OSA-MIB", "ibmOsaExpATMConfigLanType"), ("IBM-OSA-MIB", "ibmOsaExpATMActualLanType"), ("IBM-OSA-MIB", "ibmOsaExpATMConfigMaxDataFrmSz"), ("IBM-OSA-MIB", "ibmOsaExpATMActualMaxDataFrmSz"), ("IBM-OSA-MIB", "ibmOsaExpATMConfigELANName"), ("IBM-OSA-MIB", "ibmOsaExpATMActualELANName"), ("IBM-OSA-MIB", "ibmOsaExpATMConfigLESATMAddress"), ("IBM-OSA-MIB", "ibmOsaExpATMActualLESATMAddress"), ("IBM-OSA-MIB", "ibmOsaExpATMControlTimeout"), ("IBM-OSA-MIB", "ibmOsaExpATMMaxUnknownFrameCount"), ("IBM-OSA-MIB", "ibmOsaExpATMMaxUnknownFrameTime"), ("IBM-OSA-MIB", "ibmOsaExpATMVCCTimeoutPeriod"), ("IBM-OSA-MIB", "ibmOsaExpATMMaxRetryCount"), ("IBM-OSA-MIB", "ibmOsaExpATMAgingTime"), ("IBM-OSA-MIB", "ibmOsaExpATMForwardDelayTime"), ("IBM-OSA-MIB", "ibmOsaExpATMExpectedARPRespTime"), ("IBM-OSA-MIB", "ibmOsaExpATMFlushTimeout"), ("IBM-OSA-MIB", "ibmOsaExpATMPathSwitchingDelay"), ("IBM-OSA-MIB", "ibmOsaExpATMLocalSegmentID"), ("IBM-OSA-MIB", "ibmOsaExpATMMltcstSendVCCType"), ("IBM-OSA-MIB", "ibmOsaExpATMMltcstSendVCCAvgRate"), ("IBM-OSA-MIB", "ibmOsaExpATMMcastSendVCCPeakRate"), ("IBM-OSA-MIB", "ibmOsaExpATMConnectCompleteTimer"), ("IBM-OSA-MIB", "ibmOsaExpATMClientATMAddress"), ("IBM-OSA-MIB", "ibmOsaExpATMClientIdentifier"), ("IBM-OSA-MIB", "ibmOsaExpATMClientCurrentState"), ("IBM-OSA-MIB", "ibmOsaExpATMLastFailureRespCode"), ("IBM-OSA-MIB", "ibmOsaExpATMLastFailureState"), ("IBM-OSA-MIB", "ibmOsaExpATMProtocol"), ("IBM-OSA-MIB", "ibmOsaExpATMLeVersion"), ("IBM-OSA-MIB", "ibmOsaExpATMTopologyChange"), ("IBM-OSA-MIB", "ibmOsaExpATMConfigServerATMAddr"), ("IBM-OSA-MIB", "ibmOsaExpATMConfigSource"), ("IBM-OSA-MIB", "ibmOsaExpATMProxyClient"), ("IBM-OSA-MIB", "ibmOsaExpATMLePDUOctetsInbound"), ("IBM-OSA-MIB", "ibmOsaExpATMNonErrLePDUDiscIn"), ("IBM-OSA-MIB", "ibmOsaExpATMErrLePDUDiscIn"), ("IBM-OSA-MIB", "ibmOsaExpATMLePDUOctetsOutbound"), ("IBM-OSA-MIB", "ibmOsaExpATMNonErrLePDUDiscOut"), ("IBM-OSA-MIB", "ibmOsaExpATMErrLePDUDiscOut"), ("IBM-OSA-MIB", "ibmOsaExpATMLeARPRequestsOut"), ("IBM-OSA-MIB", "ibmOsaExpATMLeARPRequestsIn"), ("IBM-OSA-MIB", "ibmOsaExpATMLeARPRepliesOut"), ("IBM-OSA-MIB", "ibmOsaExpATMLeARPRepliesIn"), ("IBM-OSA-MIB", "ibmOsaExpATMControlFramesOut"), ("IBM-OSA-MIB", "ibmOsaExpATMControlFramesIn"), ("IBM-OSA-MIB", "ibmOsaExpATMSVCFailures"), ("IBM-OSA-MIB", "ibmOsaExpATMConfigDirectIntfc"), ("IBM-OSA-MIB", "ibmOsaExpATMConfigDirectVPI"), ("IBM-OSA-MIB", "ibmOsaExpATMConfigDirectVCI"), ("IBM-OSA-MIB", "ibmOsaExpATMControlDirectIntfc"), ("IBM-OSA-MIB", "ibmOsaExpATMControlDirectVPI"), ("IBM-OSA-MIB", "ibmOsaExpATMControlDirectVCI"), ("IBM-OSA-MIB", "ibmOsaExpATMControlDistIntfc"), ("IBM-OSA-MIB", "ibmOsaExpATMControlDistributeVPI"), ("IBM-OSA-MIB", "ibmOsaExpATMControlDistributeVCI"), ("IBM-OSA-MIB", "ibmOsaExpATMMulticastSendIntfc"), ("IBM-OSA-MIB", "ibmOsaExpATMMulticastSendVPI"), ("IBM-OSA-MIB", "ibmOsaExpATMMulticastSendVCI"), ("IBM-OSA-MIB", "ibmOsaExpATMMulticastFwdIntfc"), ("IBM-OSA-MIB", "ibmOsaExpATMMulticastForwardVPI"), ("IBM-OSA-MIB", "ibmOsaExpATMMulticastForwardVCI"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ibmOSAExpATMGroup = ibmOSAExpATMGroup.setStatus('current')
mibBuilder.exportSymbols("IBM-OSA-MIB", ibmOSAExpChannelSubType=ibmOSAExpChannelSubType, ibmOSAExpTRPortEntry=ibmOSAExpTRPortEntry, ibmOsaExpATMClientATMAddress=ibmOsaExpATMClientATMAddress, ibmOsaExpTRInternalErrorCount=ibmOsaExpTRInternalErrorCount, ibmOSAExpPerfDataLP6=ibmOSAExpPerfDataLP6, ibmOsaExpTRSignalLossErrorCount=ibmOsaExpTRSignalLossErrorCount, ibmOsaExpTRMacAddrActive=ibmOsaExpTRMacAddrActive, ibmOsaExpTRACErrorCount=ibmOsaExpTRACErrorCount, ibmOSAExpChannelHdwLevel=ibmOSAExpChannelHdwLevel, ibmOsaExpTRPortName=ibmOsaExpTRPortName, ibmOsaExpATMPortName=ibmOsaExpATMPortName, ibmOsaExpATMClientIdentifier=ibmOsaExpATMClientIdentifier, ibmOsaExpEthInPackets=ibmOsaExpEthInPackets, ibmOsaExpEthOutPackets=ibmOsaExpEthOutPackets, ibmOsaExpATMGroupMacAddrTable=ibmOsaExpATMGroupMacAddrTable, ibmOsaExpATMConnectCompleteTimer=ibmOsaExpATMConnectCompleteTimer, ibmOsaExpATMConfigDirectVPI=ibmOsaExpATMConfigDirectVPI, ibmOsaExpTRPortType=ibmOsaExpTRPortType, ibmOsaExpATMConfigServerATMAddr=ibmOsaExpATMConfigServerATMAddr, ibmOSAExpEthGroup=ibmOSAExpEthGroup, ibmOSAExpPerfDataLP3=ibmOSAExpPerfDataLP3, ibmOSAMibCompliances=ibmOSAMibCompliances, ibmOsaExpATMControlDistributeVPI=ibmOsaExpATMControlDistributeVPI, ibmOSAMibObjects=ibmOSAMibObjects, ibmOsaExpTRPacketsReceived=ibmOsaExpTRPacketsReceived, ibmOsaExpEthUserData=ibmOsaExpEthUserData, ibmOsaExpTRAbortTransErrorCount=ibmOsaExpTRAbortTransErrorCount, ibmOSAExpPerfGroup=ibmOSAExpPerfGroup, ibmOsaExpATMDisabledStatus=ibmOsaExpATMDisabledStatus, ibmOsaExpEthInBroadcastFrames=ibmOsaExpEthInBroadcastFrames, ibmOsaExpATMConfigName=ibmOsaExpATMConfigName, ibmOsaExpATMProtocol=ibmOsaExpATMProtocol, ibmOsaExpTRLobeWireFaultCount=ibmOsaExpTRLobeWireFaultCount, ibmOsaExpEthPortType=ibmOsaExpEthPortType, ibmOsaExpATMMaxUnknownFrameCount=ibmOsaExpATMMaxUnknownFrameCount, ibmOsaExpATMConfigLESATMAddress=ibmOsaExpATMConfigLESATMAddress, ibmOsaExpATMMulticastSendIntfc=ibmOsaExpATMMulticastSendIntfc, ibmOsaExpTRLanTrafficState=ibmOsaExpTRLanTrafficState, ibmOSAExpPerfDataLP8=ibmOSAExpPerfDataLP8, ibmOsaExpTRLostFrameErrorCount=ibmOsaExpTRLostFrameErrorCount, ibmOsaExpATMErrLePDUDiscIn=ibmOsaExpATMErrLePDUDiscIn, ibmOsaExpATMMaxRetryCount=ibmOsaExpATMMaxRetryCount, ibmOsaExpATMConfigDirectVCI=ibmOsaExpATMConfigDirectVCI, ibmOsaExpATMMltcstSendVCCType=ibmOsaExpATMMltcstSendVCCType, ibmOsaExpATMMcastSendVCCPeakRate=ibmOsaExpATMMcastSendVCCPeakRate, ibmOsaExpTRServiceMode=ibmOsaExpTRServiceMode, ibmOsaExpATMControlDistributeVCI=ibmOsaExpATMControlDistributeVCI, ibmOsaExpATMIBMEnhancedMode=ibmOsaExpATMIBMEnhancedMode, ibmOSAExpPerfDataLP4=ibmOSAExpPerfDataLP4, ibmOsaExpATMExpectedARPRespTime=ibmOsaExpATMExpectedARPRespTime, ibmOsaExpATMMulticastSendVCI=ibmOsaExpATMMulticastSendVCI, ibmOsaExpATMProxyClient=ibmOsaExpATMProxyClient, ibmOsaExpEthDisabledStatus=ibmOsaExpEthDisabledStatus, ibmOsaExpATMLePDUOctetsInbound=ibmOsaExpATMLePDUOctetsInbound, ibmOSAExpEthPortTable=ibmOSAExpEthPortTable, ibmOSAExpPEGroup=ibmOSAExpPEGroup, ibmOsaExpEthPortName=ibmOsaExpEthPortName, ibmOSAExpPerfDataLP12=ibmOSAExpPerfDataLP12, ibmOsaExpTRSingleStationCount=ibmOsaExpTRSingleStationCount, ibmOsaExpTRRingStatus=ibmOsaExpTRRingStatus, ibmOSAExpChannelProcUtil5Min=ibmOSAExpChannelProcUtil5Min, ibmOsaExpATMConfigLanType=ibmOsaExpATMConfigLanType, ibmOSAExpChannelNumber=ibmOSAExpChannelNumber, ibmOsaExpATMConfigELANName=ibmOsaExpATMConfigELANName, ibmOsaExpTRActiveSpeedMode=ibmOsaExpTRActiveSpeedMode, ibmOSAExpChannelPCIBusUtil5Min=ibmOSAExpChannelPCIBusUtil5Min, ibmOSAExpChannelProcUtilHour=ibmOSAExpChannelProcUtilHour, ibmOsaExpTRBeaconingAddress=ibmOsaExpTRBeaconingAddress, ibmOSAExpPerfDataLP1=ibmOSAExpPerfDataLP1, ibmOSAExpPerfDataLP5=ibmOSAExpPerfDataLP5, ibmOsaExpTRBurstErrorCount=ibmOsaExpTRBurstErrorCount, ibmOsaExpATMLastFailureState=ibmOsaExpATMLastFailureState, ibmOSAExpPerfDataLP13=ibmOSAExpPerfDataLP13, ibmOSAMibCompliance=ibmOSAMibCompliance, ibmOsaExpTRConfigName=ibmOsaExpTRConfigName, ibmOsaExpEthConfigSpeedMode=ibmOsaExpEthConfigSpeedMode, ibmOsaExpATMLeARPRequestsOut=ibmOsaExpATMLeARPRequestsOut, ibmOsaExpATMMulticastSendVPI=ibmOsaExpATMMulticastSendVPI, ibmOSAExpPerfDataLP15=ibmOSAExpPerfDataLP15, ibmOSAExpTRPortTable=ibmOSAExpTRPortTable, ibmOSAMibGroups=ibmOSAMibGroups, ibmOsaExpEthServiceMode=ibmOsaExpEthServiceMode, ibmOsaExpTRTransmitBeaconCount=ibmOsaExpTRTransmitBeaconCount, ibmOSAExpPerfDataLP10=ibmOSAExpPerfDataLP10, ibmOSAExpPerfDataLP14=ibmOSAExpPerfDataLP14, ibmOsaExpTRFrameCopyErrorCount=ibmOsaExpTRFrameCopyErrorCount, ibmOsaExpATMUserData=ibmOsaExpATMUserData, ibmOsaExpTRRcvCongestionCount=ibmOsaExpTRRcvCongestionCount, ibmOsaExpTRRingOpenStatus=ibmOsaExpTRRingOpenStatus, ibmOsaExpTRRecoveryCounter=ibmOsaExpTRRecoveryCounter, ibmOSAExpPerfDataLP9=ibmOSAExpPerfDataLP9, ibmOsaExpATMPathSwitchingDelay=ibmOsaExpATMPathSwitchingDelay, ibmOsaExpATMMaxUnknownFrameTime=ibmOsaExpATMMaxUnknownFrameTime, ibmOsaExpATMConfigMode=ibmOsaExpATMConfigMode, ibmOsaExpATMForwardDelayTime=ibmOsaExpATMForwardDelayTime, ibmOSAExpPerfEntry=ibmOSAExpPerfEntry, ibmOSAExpTRGroup=ibmOSAExpTRGroup, ibmOSAExpChannelProcUtil1Min=ibmOSAExpChannelProcUtil1Min, ibmOSAExpPEArpActiveEntries=ibmOSAExpPEArpActiveEntries, ibmOSAExpChannelPCIBusUtil1Min=ibmOSAExpChannelPCIBusUtil1Min, ibmProd=ibmProd, ibmOsaExpATMMulticastFwdIntfc=ibmOsaExpATMMulticastFwdIntfc, ibmOsaExpATMMulticastForwardVPI=ibmOsaExpATMMulticastForwardVPI, ibmOsaExpATMConfigDirectIntfc=ibmOsaExpATMConfigDirectIntfc, ibmOsaExpTRConfigSpeedMode=ibmOsaExpTRConfigSpeedMode, ibmOsaExpATMTopologyChange=ibmOsaExpATMTopologyChange, ibmOsaExpATMAgingTime=ibmOsaExpATMAgingTime, ibmOsaExpATMLastFailureRespCode=ibmOsaExpATMLastFailureRespCode, ibmOsaExpATMControlDirectVCI=ibmOsaExpATMControlDirectVCI, ibmOsaExpATMMulticastForwardVCI=ibmOsaExpATMMulticastForwardVCI, ibmOsaExpTRFullDuplexErrorCount=ibmOsaExpTRFullDuplexErrorCount, ibmOsaExpEthGroupAddrTable=ibmOsaExpEthGroupAddrTable, ibmOSAExpChannelShared=ibmOSAExpChannelShared, ibmOSAExpChannelProcCodeLevel=ibmOSAExpChannelProcCodeLevel, ibmOSAExpPerfTable=ibmOSAExpPerfTable, ibmOsaExpATMBestEffortPeakRate=ibmOsaExpATMBestEffortPeakRate, ibmOSAExpChannelPCIBusUtilHour=ibmOSAExpChannelPCIBusUtilHour, ibmOsaExpATMControlFramesOut=ibmOsaExpATMControlFramesOut, ibmOsaExpATMLocalSegmentID=ibmOsaExpATMLocalSegmentID, ibmOsaExpATMClientCurrentState=ibmOsaExpATMClientCurrentState, ibmOSAExpPEMaxSizeArpCache=ibmOSAExpPEMaxSizeArpCache, ibmOsaExpTRGroupAddrTable=ibmOsaExpTRGroupAddrTable, ibmOSAExpATMPortEntry=ibmOSAExpATMPortEntry, ibmOSAMibConformance=ibmOSAMibConformance, ibmOsaExpEthInGroupFrames=ibmOsaExpEthInGroupFrames, ibmOsaExpTRRemoveReceivedCount=ibmOsaExpTRRemoveReceivedCount, ibmOSAExpPEIPEntries=ibmOSAExpPEIPEntries, ibmOsaExpTRDisabledStatus=ibmOsaExpTRDisabledStatus, ibmOsaExpATMActualLESATMAddress=ibmOsaExpATMActualLESATMAddress, ibmOsaExpTRAllowAccessPriority=ibmOsaExpTRAllowAccessPriority, ibmOSAExpChannelType=ibmOSAExpChannelType, ibmOSAExpPEArpPendingEntries=ibmOSAExpPEArpPendingEntries, ibmOSAExpChannelNodeDesc=ibmOSAExpChannelNodeDesc, ibmOsaExpATMErrLePDUDiscOut=ibmOsaExpATMErrLePDUDiscOut, ibmOsaExpATMLeARPRepliesIn=ibmOsaExpATMLeARPRepliesIn, ibmOSAExpPerfDataLP11=ibmOSAExpPerfDataLP11, ibmOsaExpATMMacAddrActive=ibmOsaExpATMMacAddrActive, ibmOsaExpATMLePDUOctetsOutbound=ibmOsaExpATMLePDUOctetsOutbound, ibmOsaExpATMPortType=ibmOsaExpATMPortType, ibmOsaExpTRRingState=ibmOsaExpTRRingState, ibmOsaExpATMNonErrLePDUDiscOut=ibmOsaExpATMNonErrLePDUDiscOut, ibmOsaExpTRMacAddrBurntIn=ibmOsaExpTRMacAddrBurntIn, ibmOsaExpATMVCCTimeoutPeriod=ibmOsaExpATMVCCTimeoutPeriod, ibmOsaExpTRSoftErrorCount=ibmOsaExpTRSoftErrorCount, ibmOsaExpATMControlTimeout=ibmOsaExpATMControlTimeout, ibmOSAExpChannelEntry=ibmOSAExpChannelEntry, ibmOSAExpPerfDataLP7=ibmOSAExpPerfDataLP7, ibmOsaExpATMMltcstSendVCCAvgRate=ibmOsaExpATMMltcstSendVCCAvgRate, ibmOsaExpATMLeARPRequestsIn=ibmOsaExpATMLeARPRequestsIn, ibmOsaExpEthConfigName=ibmOsaExpEthConfigName, ibmOsaExpATMActualMaxDataFrmSz=ibmOsaExpATMActualMaxDataFrmSz, ibmOsaExpATMNonErrLePDUDiscIn=ibmOsaExpATMNonErrLePDUDiscIn, ibmOsaExpATMMacAddrBurntIn=ibmOsaExpATMMacAddrBurntIn, ibmOsaExpEthMacAddrBurntIn=ibmOsaExpEthMacAddrBurntIn, ibmOSAExpChannelGroup=ibmOSAExpChannelGroup, ibmOsaExpTRUserData=ibmOsaExpTRUserData, ibmOsaExpTRPacketsTransmitted=ibmOsaExpTRPacketsTransmitted, ibmOsaExpATMPortNumber=ibmOsaExpATMPortNumber, ibmOSAExpPEEntry=ibmOSAExpPEEntry, ibmOsaExpEthActiveSpeedMode=ibmOsaExpEthActiveSpeedMode, ibmOsaExpEthInUnknownIPFrames=ibmOsaExpEthInUnknownIPFrames, ibmOsaExpEthPortNumber=ibmOsaExpEthPortNumber, ibmOsaExpTRLineErrorCount=ibmOsaExpTRLineErrorCount, ibmOsaExpATMActualLanType=ibmOsaExpATMActualLanType, ibmOsaExpATMSVCFailures=ibmOsaExpATMSVCFailures, ibmOsaExpATMLeARPRepliesOut=ibmOsaExpATMLeARPRepliesOut, ibmOsaExpTRUpstreamNeighbor=ibmOsaExpTRUpstreamNeighbor, ibmOSAExpPETable=ibmOSAExpPETable, ibmOsaExpATMControlDirectIntfc=ibmOsaExpATMControlDirectIntfc, ibm=ibm, ibmOsaExpATMLanTrafficState=ibmOsaExpATMLanTrafficState, ibmOSAExpATMPortTable=ibmOSAExpATMPortTable, ibmOsaExpATMServiceMode=ibmOsaExpATMServiceMode, ibmOsaExpTRFunctionalAddr=ibmOsaExpTRFunctionalAddr, ibmOSAExpEthPortEntry=ibmOSAExpEthPortEntry, ibmOSAMib=ibmOSAMib, ibmOSAExpPerfDataLP2=ibmOSAExpPerfDataLP2, PYSNMP_MODULE_ID=ibmOSAMib, ibmOsaExpTRTokenErrorCount=ibmOsaExpTRTokenErrorCount, ibmOsaExpATMFlushTimeout=ibmOsaExpATMFlushTimeout, ibmOsaExpEthLanTrafficState=ibmOsaExpEthLanTrafficState, ibmOsaExpTRPortNumber=ibmOsaExpTRPortNumber, ibmOsaExpATMConfigMaxDataFrmSz=ibmOsaExpATMConfigMaxDataFrmSz, ibmOSAExpATMGroup=ibmOSAExpATMGroup, ibmOSAExpChannelTable=ibmOSAExpChannelTable, ibmOsaExpTREarlyTokenRelease=ibmOsaExpTREarlyTokenRelease, ibmOsaExpATMActualELANName=ibmOsaExpATMActualELANName, ibmOsaExpATMControlDirectVPI=ibmOsaExpATMControlDirectVPI, ibmOsaExpATMLeVersion=ibmOsaExpATMLeVersion, ibmOSAExpPerfDataLP0=ibmOSAExpPerfDataLP0, ibmOsaExpATMControlFramesIn=ibmOsaExpATMControlFramesIn, ibmOsaExpATMControlDistIntfc=ibmOsaExpATMControlDistIntfc, ibmOsaExpEthMacAddrActive=ibmOsaExpEthMacAddrActive, ibmOsaExpTRHardErrorCount=ibmOsaExpTRHardErrorCount, ibmOsaExpATMConfigSource=ibmOsaExpATMConfigSource, ibmOSAExpPEMulticastData=ibmOSAExpPEMulticastData, ibmOSAExpPEMulticastEntries=ibmOSAExpPEMulticastEntries)
