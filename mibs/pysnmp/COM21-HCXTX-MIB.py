#
# PySNMP MIB module COM21-HCXTX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/COM21-HCXTX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:10:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
com21, com21Traps, com21Hcx = mibBuilder.importSymbols("COM21-HCX-MIB", "com21", "com21Traps", "com21Hcx")
hcxEventLogTime, hcxAlmSeverity = mibBuilder.importSymbols("COM21-HCXALM-MIB", "hcxEventLogTime", "hcxAlmSeverity")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Gauge32, Integer32, ModuleIdentity, Bits, Unsigned32, MibIdentifier, TimeTicks, ObjectIdentity, iso, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "Integer32", "ModuleIdentity", "Bits", "Unsigned32", "MibIdentifier", "TimeTicks", "ObjectIdentity", "iso", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter64")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
com21HcxTx = ModuleIdentity((1, 3, 6, 1, 4, 1, 1141, 2, 20))
if mibBuilder.loadTexts: com21HcxTx.setLastUpdated('9701080000Z')
if mibBuilder.loadTexts: com21HcxTx.setOrganization('Com21, Inc.')
com21HcxDnstrmPortGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 21))
com21HcxDnstrmStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 22))
com21HcxDnstrmUnitGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 23))
class Gain(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 255)

class PrimServiceState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("is", 1), ("oos", 2))

hcxDownstreamShelfId = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 23, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxDownstreamShelfId.setStatus('current')
hcxDownstreamSlotId = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 23, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxDownstreamSlotId.setStatus('current')
hcxDownstreamHardwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 23, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxDownstreamHardwareVersion.setStatus('current')
hcxDownstreamBootVersion = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 23, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxDownstreamBootVersion.setStatus('current')
hcxDnstreamUnitPrimServState = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 23, 5), PrimServiceState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxDnstreamUnitPrimServState.setStatus('current')
hcxDnstrmUnitPrimStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 60)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXTX-MIB", "hcxDownstreamShelfId"), ("COM21-HCXTX-MIB", "hcxDownstreamSlotId"), ("COM21-HCXTX-MIB", "hcxDnstreamUnitPrimServState"))
if mibBuilder.loadTexts: hcxDnstrmUnitPrimStateChange.setStatus('current')
hcxDnstreamUnitSecServState = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 23, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxDnstreamUnitSecServState.setStatus('current')
hcxDnstrmUnitSecStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 61)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXTX-MIB", "hcxDownstreamShelfId"), ("COM21-HCXTX-MIB", "hcxDownstreamSlotId"), ("COM21-HCXTX-MIB", "hcxDnstreamUnitSecServState"))
if mibBuilder.loadTexts: hcxDnstrmUnitSecStateChange.setStatus('current')
hcxDnUnitConfigState = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 23, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2000, 2001, 2002, 2003))).clone(namedValues=NamedValues(("offline", 2000), ("online", 2001), ("test", 2002), ("standby", 2003)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxDnUnitConfigState.setStatus('current')
hcxDnUnitRestartAction = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 23, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("restart", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxDnUnitRestartAction.setStatus('current')
hcxDnDiagTestAction = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 23, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("execute", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxDnDiagTestAction.setStatus('current')
hcxDnDiagTestComplete = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 62)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXTX-MIB", "hcxDownstreamShelfId"), ("COM21-HCXTX-MIB", "hcxDownstreamSlotId"), ("COM21-HCXTX-MIB", "hcxDnDiagTestResult"))
if mibBuilder.loadTexts: hcxDnDiagTestComplete.setStatus('current')
hcxDnDiagTestResult = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 23, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inprogress", 1), ("success", 2), ("failure", 3), ("invalidState", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxDnDiagTestResult.setStatus('current')
hcxDnTestStatusLed = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 23, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxDnTestStatusLed.setStatus('current')
hcxDnTestStatusLedChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 63)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXTX-MIB", "hcxDownstreamShelfId"), ("COM21-HCXTX-MIB", "hcxDownstreamSlotId"), ("COM21-HCXTX-MIB", "hcxDnTestStatusLed"))
if mibBuilder.loadTexts: hcxDnTestStatusLedChange.setStatus('current')
hcxDnFaultStatusLed = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 23, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxDnFaultStatusLed.setStatus('current')
hcxDnFaultStatusLedChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 64)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXTX-MIB", "hcxDownstreamShelfId"), ("COM21-HCXTX-MIB", "hcxDownstreamSlotId"), ("COM21-HCXTX-MIB", "hcxDnFaultStatusLed"))
if mibBuilder.loadTexts: hcxDnFaultStatusLedChange.setStatus('current')
hcxDnOperationFailure = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 65)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXTX-MIB", "hcxDownstreamShelfId"), ("COM21-HCXTX-MIB", "hcxDownstreamSlotId"))
if mibBuilder.loadTexts: hcxDnOperationFailure.setStatus('current')
hcxDownstreamSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 23, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxDownstreamSerialNumber.setStatus('current')
hcxDownstreamPortId = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 21, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxDownstreamPortId.setStatus('current')
hcxXmitFrequency = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 21, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(88000, 800000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxXmitFrequency.setStatus('current')
hcxXmitGain = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 21, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(45, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxXmitGain.setStatus('current')
hcxSynthLockLossDetected = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 68)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXTX-MIB", "hcxDownstreamShelfId"), ("COM21-HCXTX-MIB", "hcxDownstreamSlotId"), ("COM21-HCXTX-MIB", "hcxDownstreamPortId"))
if mibBuilder.loadTexts: hcxSynthLockLossDetected.setStatus('current')
hcxSynthLockLossClear = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 69)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXTX-MIB", "hcxDownstreamShelfId"), ("COM21-HCXTX-MIB", "hcxDownstreamSlotId"), ("COM21-HCXTX-MIB", "hcxDownstreamPortId"))
if mibBuilder.loadTexts: hcxSynthLockLossClear.setStatus('current')
hcxLossOfFrameClkDetected = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 70)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXTX-MIB", "hcxDownstreamShelfId"), ("COM21-HCXTX-MIB", "hcxDownstreamSlotId"), ("COM21-HCXTX-MIB", "hcxDownstreamPortId"))
if mibBuilder.loadTexts: hcxLossOfFrameClkDetected.setStatus('current')
hcxLossOfFrameClkClear = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 71)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXTX-MIB", "hcxDownstreamShelfId"), ("COM21-HCXTX-MIB", "hcxDownstreamSlotId"), ("COM21-HCXTX-MIB", "hcxDownstreamPortId"))
if mibBuilder.loadTexts: hcxLossOfFrameClkClear.setStatus('current')
hcxStatsCurrMinTxCells = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 22, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsCurrMinTxCells.setStatus('current')
hcxStatsCurrMinTxNullCells = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 22, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsCurrMinTxNullCells.setStatus('current')
hcxStatsPrevMinTxCells = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 22, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsPrevMinTxCells.setStatus('current')
hcxStatsPrevMinTxNullCells = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 22, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsPrevMinTxNullCells.setStatus('current')
hcxDownstreamUtil = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 22, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxDownstreamUtil.setStatus('current')
hcxStatsClearTxCurrStats = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 22, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxStatsClearTxCurrStats.setStatus('current')
mibBuilder.exportSymbols("COM21-HCXTX-MIB", hcxDownstreamShelfId=hcxDownstreamShelfId, PYSNMP_MODULE_ID=com21HcxTx, Gain=Gain, hcxDnstreamUnitPrimServState=hcxDnstreamUnitPrimServState, hcxDnDiagTestAction=hcxDnDiagTestAction, hcxDnDiagTestResult=hcxDnDiagTestResult, hcxDnFaultStatusLedChange=hcxDnFaultStatusLedChange, hcxLossOfFrameClkDetected=hcxLossOfFrameClkDetected, hcxDnUnitConfigState=hcxDnUnitConfigState, com21HcxDnstrmStatsGroup=com21HcxDnstrmStatsGroup, hcxDnstrmUnitPrimStateChange=hcxDnstrmUnitPrimStateChange, hcxDnTestStatusLedChange=hcxDnTestStatusLedChange, hcxStatsCurrMinTxNullCells=hcxStatsCurrMinTxNullCells, hcxDownstreamSerialNumber=hcxDownstreamSerialNumber, hcxDnFaultStatusLed=hcxDnFaultStatusLed, hcxSynthLockLossDetected=hcxSynthLockLossDetected, hcxDownstreamUtil=hcxDownstreamUtil, hcxDnstreamUnitSecServState=hcxDnstreamUnitSecServState, hcxDownstreamBootVersion=hcxDownstreamBootVersion, hcxXmitGain=hcxXmitGain, hcxSynthLockLossClear=hcxSynthLockLossClear, com21HcxDnstrmUnitGroup=com21HcxDnstrmUnitGroup, hcxDnOperationFailure=hcxDnOperationFailure, hcxDnUnitRestartAction=hcxDnUnitRestartAction, com21HcxTx=com21HcxTx, hcxLossOfFrameClkClear=hcxLossOfFrameClkClear, PrimServiceState=PrimServiceState, hcxStatsPrevMinTxCells=hcxStatsPrevMinTxCells, hcxXmitFrequency=hcxXmitFrequency, hcxDownstreamSlotId=hcxDownstreamSlotId, hcxStatsClearTxCurrStats=hcxStatsClearTxCurrStats, hcxDownstreamHardwareVersion=hcxDownstreamHardwareVersion, hcxDnstrmUnitSecStateChange=hcxDnstrmUnitSecStateChange, com21HcxDnstrmPortGroup=com21HcxDnstrmPortGroup, hcxDnTestStatusLed=hcxDnTestStatusLed, hcxStatsPrevMinTxNullCells=hcxStatsPrevMinTxNullCells, hcxDownstreamPortId=hcxDownstreamPortId, hcxDnDiagTestComplete=hcxDnDiagTestComplete, hcxStatsCurrMinTxCells=hcxStatsCurrMinTxCells)
