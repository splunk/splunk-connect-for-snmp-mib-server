#
# PySNMP MIB module TPLINK-SFLOW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-SFLOW-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:18:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, ModuleIdentity, Counter32, Integer32, Unsigned32, MibIdentifier, iso, IpAddress, NotificationType, Bits, ObjectIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ModuleIdentity", "Counter32", "Integer32", "Unsigned32", "MibIdentifier", "iso", "IpAddress", "NotificationType", "Bits", "ObjectIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
tplinkSflowMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 95))
tplinkSflowMIB.setRevisions(('2015-09-23 10:07',))
if mibBuilder.loadTexts: tplinkSflowMIB.setLastUpdated('201509231007Z')
if mibBuilder.loadTexts: tplinkSflowMIB.setOrganization('TPLINK')
tplinkSflowMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1))
tpSflowGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 1))
tpSflowCollector = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2))
tpSflowSampler = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3))
tpSflowGlobalConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowGlobalConfigStatus.setStatus('current')
tpSflowGlobalConfigAddress = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowGlobalConfigAddress.setStatus('current')
tpSflowGlobalConfigVersion = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpSflowGlobalConfigVersion.setStatus('current')
tpSflowCollectorTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1), )
if mibBuilder.loadTexts: tpSflowCollectorTable.setStatus('current')
tpSflowCollectorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1, 1), ).setIndexNames((0, "TPLINK-SFLOW-MIB", "tpSflowCollectorCollectorId"))
if mibBuilder.loadTexts: tpSflowCollectorEntry.setStatus('current')
tpSflowCollectorCollectorId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpSflowCollectorCollectorId.setStatus('current')
tpSflowCollectorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowCollectorDescription.setStatus('current')
tpSflowCollectorCollectorIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowCollectorCollectorIp.setStatus('current')
tpSflowCollectorCollectorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowCollectorCollectorPort.setStatus('current')
tpSflowCollectorMaxDatagram = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowCollectorMaxDatagram.setStatus('current')
tpSflowCollectorTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowCollectorTimeout.setStatus('current')
tpSflowCollectorLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpSflowCollectorLifetime.setStatus('current')
tpSflowSamplerTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3, 1), )
if mibBuilder.loadTexts: tpSflowSamplerTable.setStatus('current')
tpSflowSamplerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: tpSflowSamplerEntry.setStatus('current')
tpSflowSamplerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpSflowSamplerPort.setStatus('current')
tpSflowSamplerCollectorId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowSamplerCollectorId.setStatus('current')
tpSflowSamplerIngRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowSamplerIngRate.setStatus('current')
tpSflowSamplerEgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowSamplerEgRate.setStatus('current')
tpSflowSamplerMaxHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(18, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowSamplerMaxHeader.setStatus('current')
tpSflowSamplerPortLag = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpSflowSamplerPortLag.setStatus('current')
mibBuilder.exportSymbols("TPLINK-SFLOW-MIB", tpSflowGlobalConfigStatus=tpSflowGlobalConfigStatus, tpSflowSamplerEgRate=tpSflowSamplerEgRate, tpSflowSamplerIngRate=tpSflowSamplerIngRate, tpSflowCollectorCollectorPort=tpSflowCollectorCollectorPort, tpSflowSamplerEntry=tpSflowSamplerEntry, tpSflowCollectorMaxDatagram=tpSflowCollectorMaxDatagram, tpSflowGlobalConfig=tpSflowGlobalConfig, tpSflowCollector=tpSflowCollector, PYSNMP_MODULE_ID=tplinkSflowMIB, tpSflowCollectorTable=tpSflowCollectorTable, tpSflowCollectorCollectorIp=tpSflowCollectorCollectorIp, tpSflowSamplerPortLag=tpSflowSamplerPortLag, tpSflowCollectorDescription=tpSflowCollectorDescription, tpSflowCollectorEntry=tpSflowCollectorEntry, tpSflowSamplerMaxHeader=tpSflowSamplerMaxHeader, tplinkSflowMIBObjects=tplinkSflowMIBObjects, tpSflowCollectorLifetime=tpSflowCollectorLifetime, tpSflowSamplerTable=tpSflowSamplerTable, tpSflowCollectorTimeout=tpSflowCollectorTimeout, tpSflowGlobalConfigAddress=tpSflowGlobalConfigAddress, tplinkSflowMIB=tplinkSflowMIB, tpSflowSamplerPort=tpSflowSamplerPort, tpSflowSamplerCollectorId=tpSflowSamplerCollectorId, tpSflowGlobalConfigVersion=tpSflowGlobalConfigVersion, tpSflowSampler=tpSflowSampler, tpSflowCollectorCollectorId=tpSflowCollectorCollectorId)
