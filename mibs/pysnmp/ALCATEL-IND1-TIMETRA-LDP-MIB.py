#
# PySNMP MIB module ALCATEL-IND1-TIMETRA-LDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-TIMETRA-LDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:04:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
TFilterID, TFilterLogId = mibBuilder.importSymbols("ALCATEL-IND1-TIMETRA-FILTER-MIB", "TFilterID", "TFilterLogId")
tmnxSRConfs, timetraSRMIBModules, tmnxSRObjs, tmnxSRNotifyPrefix = mibBuilder.importSymbols("ALCATEL-IND1-TIMETRA-GLOBAL-MIB", "tmnxSRConfs", "timetraSRMIBModules", "tmnxSRObjs", "tmnxSRNotifyPrefix")
SdpId, ServType, TdmOptionsCasTrunkFraming, TdmOptionsSigPkts = mibBuilder.importSymbols("ALCATEL-IND1-TIMETRA-SERV-MIB", "SdpId", "ServType", "TdmOptionsCasTrunkFraming", "TdmOptionsSigPkts")
TmnxVcId, TmnxVRtrMplsLspID, TmnxOperState, TNamedItemOrEmpty, TmnxServId, TmnxVcType, TPolicyStatementNameOrEmpty, TmnxAdminState = mibBuilder.importSymbols("ALCATEL-IND1-TIMETRA-TC-MIB", "TmnxVcId", "TmnxVRtrMplsLspID", "TmnxOperState", "TNamedItemOrEmpty", "TmnxServId", "TmnxVcType", "TPolicyStatementNameOrEmpty", "TmnxAdminState")
vRtrLdpStatus, vRtrID = mibBuilder.importSymbols("ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrLdpStatus", "vRtrID")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
MplsLsrIdentifier, MplsLdpIdentifier = mibBuilder.importSymbols("MPLS-LDP-MIB", "MplsLsrIdentifier", "MplsLdpIdentifier")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
NotificationType, ObjectIdentity, Integer32, ModuleIdentity, TimeTicks, Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso, MibIdentifier, IpAddress, Counter32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "Integer32", "ModuleIdentity", "TimeTicks", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso", "MibIdentifier", "IpAddress", "Counter32", "Unsigned32")
TextualConvention, RowStatus, TimeStamp, DisplayString, TestAndIncr, TimeInterval, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TimeStamp", "DisplayString", "TestAndIncr", "TimeInterval", "TruthValue")
timetraLdpMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 8))
timetraLdpMIBModule.setRevisions(('1908-01-01 00:00', '1907-01-01 00:00', '1906-03-16 00:00', '1905-08-31 00:00', '1905-01-24 00:00', '1904-01-15 00:00', '1903-08-15 00:00', '1903-01-20 00:00', '1901-08-01 00:00',))
if mibBuilder.loadTexts: timetraLdpMIBModule.setLastUpdated('0801010000Z')
if mibBuilder.loadTexts: timetraLdpMIBModule.setOrganization('Alcatel')
tmnxLdpObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8))
tmnxLdpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8))
tmnxLdpNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 8))
tmnxLdpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 8, 0))
class TmnxLdpKeepAliveFactor(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 255)

class TmnxLdpKeepAliveTimeout(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 65535)

class TmnxLdpHelloFactor(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 255)

class TmnxLdpHelloTimeout(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 65535)

class TmnxLdpBackoffTime(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 2592000)

class TmnxLdpFECPolicy(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("system", 1), ("interface", 2), ("all", 3), ("none", 4))

class TmnxLdpLabelDistMethod(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("downstreamOnDemand", 1), ("downstreamUnsolicited", 2))

class TmnxLdpAdjacencyType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("link", 1), ("targeted", 2), ("both", 3))

class TmnxVpnId(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(10, 10)
    fixedLength = 10

class TmnxLabelStatus(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("dummyB0", 0), ("dummyB1", 1), ("statusSignalingSupported", 2), ("inUsePush", 3), ("inUseSwap", 4), ("inUsePop", 5), ("released", 6), ("notInUse", 7), ("withdrawn", 8), ("controlWord", 9))

class TmnxLabelSigStatus(TextualConvention, Unsigned32):
    reference = 'IETF draft-ietf-pwe3-iana-allocation-07.txt, sections 2,3 and 4'
    status = 'current'

class TmnxLdpFECType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 128, 129, 130))
    namedValues = NamedValues(("addrWildcard", 1), ("addrPrefix", 2), ("addrHost", 3), ("vll", 128), ("vpws", 129), ("vpls", 130))

class TmnxLdpFECFlags(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("dummyB0", 0), ("egress", 1), ("ingress", 2), ("installedSwap", 3), ("installedPush", 4), ("installedPop", 5), ("local", 6), ("nextHop", 7), ("importPolicyRejected", 8), ("exportPolicyAccepted", 9), ("installedStaticFec", 10), ("vcSwitching", 11), ("importTargPolicyRejected", 12), ("exportTargPolicyRejected", 13))

class TmnxLdpGenOperDownReasonCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("operUp", 0), ("adminDown", 1), ("noListenSocket", 2), ("noDiscoverySocket", 3), ("noRtm", 4), ("noTtm", 5), ("iomFailure", 6), ("recvFailure", 7), ("clearDown", 8), ("noResources", 9), ("systemIpDown", 10))

class TmnxLdpIntTargOperDownReasonCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("operUp", 0), ("adminDown", 1), ("noListenSocket", 2), ("noDiscoverySocket", 3), ("noResources", 4), ("addrFecDeprogram", 5), ("svcFecDeprogram", 6), ("clearDown", 7), ("instanceDown", 8), ("interfaceDown", 9), ("targetIpInvalid", 10), ("interfaceInvalid", 11))

class TmnxLdpFec129Tlv(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(2, 32)

vRtrLdpGeneralTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1), )
if mibBuilder.loadTexts: vRtrLdpGeneralTable.setStatus('current')
vRtrLdpGeneralEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"))
if mibBuilder.loadTexts: vRtrLdpGeneralEntry.setStatus('current')
vRtrLdpGenLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpGenLastChange.setStatus('current')
vRtrLdpGenAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 2), TmnxAdminState().clone('inService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenAdminState.setStatus('current')
vRtrLdpGenOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 3), TmnxOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpGenOperState.setStatus('current')
vRtrLdpGenLdpLsrId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 4), MplsLsrIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpGenLdpLsrId.setStatus('current')
vRtrLdpGenProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpGenProtocolVersion.setStatus('current')
vRtrLdpGenDeaggregateFec = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenDeaggregateFec.setStatus('current')
vRtrLdpGenKeepAliveFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 7), TmnxLdpKeepAliveFactor().clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenKeepAliveFactor.setStatus('current')
vRtrLdpGenKeepAliveTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 8), TmnxLdpKeepAliveTimeout().clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenKeepAliveTimeout.setStatus('current')
vRtrLdpGenHelloFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 9), TmnxLdpHelloFactor().clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenHelloFactor.setStatus('current')
vRtrLdpGenHelloTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 10), TmnxLdpHelloTimeout().clone(15)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenHelloTimeout.setStatus('current')
vRtrLdpGenRoutePreference = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(9)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenRoutePreference.setStatus('current')
vRtrLdpGenControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ordered", 1), ("independent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpGenControlMode.setStatus('current')
vRtrLdpGenDistMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 13), TmnxLdpLabelDistMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpGenDistMethod.setStatus('current')
vRtrLdpGenRetentionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("conservative", 1), ("liberal", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpGenRetentionMode.setStatus('current')
vRtrLdpGenTransportAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("interface", 1), ("system", 2))).clone('system')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenTransportAddrType.setStatus('current')
vRtrLdpGenPropagatePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 16), TmnxLdpFECPolicy().clone('system')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenPropagatePolicy.setStatus('current')
vRtrLdpGenLoopDetectCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("other", 2), ("hopCount", 3), ("pathVector", 4), ("hopCountAndPathVector", 5))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenLoopDetectCapable.setStatus('current')
vRtrLdpGenHopLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenHopLimit.setStatus('current')
vRtrLdpGenPathVectorLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenPathVectorLimit.setStatus('current')
vRtrLdpGenBackoffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 20), TmnxLdpBackoffTime().subtype(subtypeSpec=ValueRangeConstraint(1, 2592000)).clone(15)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenBackoffTime.setStatus('current')
vRtrLdpGenMaxBackoffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 21), TmnxLdpBackoffTime().clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenMaxBackoffTime.setStatus('current')
vRtrLdpGenTargKeepAliveFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 22), TmnxLdpKeepAliveFactor().clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenTargKeepAliveFactor.setStatus('current')
vRtrLdpGenTargKeepAliveTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 23), TmnxLdpKeepAliveTimeout().clone(40)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenTargKeepAliveTimeout.setStatus('current')
vRtrLdpGenTargHelloFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 24), TmnxLdpHelloFactor().clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenTargHelloFactor.setStatus('current')
vRtrLdpGenTargHelloTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 25), TmnxLdpHelloTimeout().clone(45)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenTargHelloTimeout.setStatus('current')
vRtrLdpGenTargPassiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 26), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenTargPassiveMode.setStatus('current')
vRtrLdpGenTargetedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 27), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenTargetedSessions.setStatus('current')
vRtrLdpGenCreateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 28), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpGenCreateTime.setStatus('current')
vRtrLdpGenUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 29), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpGenUpTime.setStatus('current')
vRtrLdpGenImportPolicy1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 30), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenImportPolicy1.setStatus('current')
vRtrLdpGenImportPolicy2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 31), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenImportPolicy2.setStatus('current')
vRtrLdpGenImportPolicy3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 32), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenImportPolicy3.setStatus('current')
vRtrLdpGenImportPolicy4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 33), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenImportPolicy4.setStatus('current')
vRtrLdpGenImportPolicy5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 34), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenImportPolicy5.setStatus('current')
vRtrLdpGenExportPolicy1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 35), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenExportPolicy1.setStatus('current')
vRtrLdpGenExportPolicy2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 36), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenExportPolicy2.setStatus('current')
vRtrLdpGenExportPolicy3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 37), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenExportPolicy3.setStatus('current')
vRtrLdpGenExportPolicy4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 38), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenExportPolicy4.setStatus('current')
vRtrLdpGenExportPolicy5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 39), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenExportPolicy5.setStatus('current')
vRtrLdpGenTunnelDownDampTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 40), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20)).clone(3)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenTunnelDownDampTime.setStatus('current')
vRtrLdpGenOperDownReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 41), TmnxLdpGenOperDownReasonCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpGenOperDownReason.setStatus('current')
vRtrLdpGenTrustList = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 42), TFilterID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenTrustList.setStatus('obsolete')
vRtrLdpGenGracefulRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 43), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenGracefulRestart.setStatus('current')
vRtrLdpGenGRNbrLiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 44), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 300)).clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenGRNbrLiveTime.setStatus('current')
vRtrLdpGenGRMaxRecoveryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 1, 1, 45), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(15, 1800)).clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpGenGRMaxRecoveryTime.setStatus('current')
vRtrLdpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2), )
if mibBuilder.loadTexts: vRtrLdpStatsTable.setStatus('current')
vRtrLdpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1), )
vRtrLdpGeneralEntry.registerAugmentions(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsEntry"))
vRtrLdpStatsEntry.setIndexNames(*vRtrLdpGeneralEntry.getIndexNames())
if mibBuilder.loadTexts: vRtrLdpStatsEntry.setStatus('current')
vRtrLdpStatsOperDownEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsOperDownEvents.setStatus('current')
vRtrLdpStatsActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsActiveSessions.setStatus('current')
vRtrLdpStatsActiveAdjacencies = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsActiveAdjacencies.setStatus('current')
vRtrLdpStatsActiveInterfaces = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsActiveInterfaces.setStatus('current')
vRtrLdpStatsInactiveInterfaces = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsInactiveInterfaces.setStatus('current')
vRtrLdpStatsActiveTargSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsActiveTargSessions.setStatus('current')
vRtrLdpStatsInactiveTargSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsInactiveTargSessions.setStatus('current')
vRtrLdpStatsAddrFECRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsAddrFECRecv.setStatus('current')
vRtrLdpStatsAddrFECSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsAddrFECSent.setStatus('current')
vRtrLdpStatsSvcFECRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsSvcFECRecv.setStatus('current')
vRtrLdpStatsSvcFECSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsSvcFECSent.setStatus('current')
vRtrLdpStatsAttemptedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsAttemptedSessions.setStatus('current')
vRtrLdpStatsSessRejNoHelloErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsSessRejNoHelloErrors.setStatus('current')
vRtrLdpStatsSessRejAdvErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsSessRejAdvErrors.setStatus('current')
vRtrLdpStatsSessRejMaxPduErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsSessRejMaxPduErrors.setStatus('current')
vRtrLdpStatsSessRejLabelRangeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsSessRejLabelRangeErrors.setStatus('current')
vRtrLdpStatsBadLdpIdentifierErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsBadLdpIdentifierErrors.setStatus('current')
vRtrLdpStatsBadPduLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsBadPduLengthErrors.setStatus('current')
vRtrLdpStatsBadMessageLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsBadMessageLengthErrors.setStatus('current')
vRtrLdpStatsBadTlvLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsBadTlvLengthErrors.setStatus('current')
vRtrLdpStatsMalformedTlvValueErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsMalformedTlvValueErrors.setStatus('current')
vRtrLdpStatsKeepAliveExpiredErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsKeepAliveExpiredErrors.setStatus('current')
vRtrLdpStatsShutdownNotifRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsShutdownNotifRecv.setStatus('current')
vRtrLdpStatsShutdownNotifSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStatsShutdownNotifSent.setStatus('current')
vRtrLdpPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 3), )
if mibBuilder.loadTexts: vRtrLdpPolicyTable.setStatus('obsolete')
vRtrLdpPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPolicyType"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPolicyIndex"))
if mibBuilder.loadTexts: vRtrLdpPolicyEntry.setStatus('obsolete')
vRtrLdpPolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("import", 1), ("export", 2), ("ingress", 3), ("egress", 4))))
if mibBuilder.loadTexts: vRtrLdpPolicyType.setStatus('obsolete')
vRtrLdpPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: vRtrLdpPolicyIndex.setStatus('obsolete')
vRtrLdpPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpPolicyRowStatus.setStatus('obsolete')
vRtrLdpPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 3, 1, 4), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpPolicyName.setStatus('obsolete')
vRtrLdpIfTableSpinlock = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 4), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrLdpIfTableSpinlock.setStatus('current')
vRtrLdpIfTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5), )
if mibBuilder.loadTexts: vRtrLdpIfTable.setStatus('current')
vRtrLdpIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfIndex"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerAddress"))
if mibBuilder.loadTexts: vRtrLdpIfEntry.setStatus('current')
vRtrLdpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: vRtrLdpIfIndex.setStatus('current')
vRtrLdpPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 2), IpAddress())
if mibBuilder.loadTexts: vRtrLdpPeerAddress.setStatus('current')
vRtrLdpIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpIfRowStatus.setStatus('current')
vRtrLdpIfLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpIfLastChange.setStatus('current')
vRtrLdpIfAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 5), TmnxAdminState().clone('inService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpIfAdminState.setStatus('current')
vRtrLdpIfOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 6), TmnxOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpIfOperState.setStatus('current')
vRtrLdpIfInheritance = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpIfInheritance.setStatus('current')
vRtrLdpIfKeepAliveFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 8), TmnxLdpKeepAliveFactor().clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpIfKeepAliveFactor.setStatus('current')
vRtrLdpIfKeepAliveTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 9), TmnxLdpKeepAliveTimeout().clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpIfKeepAliveTimeout.setStatus('current')
vRtrLdpIfHelloFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 10), TmnxLdpHelloFactor().clone(3)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpIfHelloFactor.setStatus('current')
vRtrLdpIfHelloTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 11), TmnxLdpHelloTimeout().clone(15)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpIfHelloTimeout.setStatus('current')
vRtrLdpIfBackoffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 12), TmnxLdpBackoffTime().subtype(subtypeSpec=ValueRangeConstraint(1, 2592000)).clone(15)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpIfBackoffTime.setStatus('current')
vRtrLdpIfMaxBackoffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 13), TmnxLdpBackoffTime().clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpIfMaxBackoffTime.setStatus('current')
vRtrLdpIfTransportAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("interface", 1), ("system", 2))).clone('system')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpIfTransportAddrType.setStatus('current')
vRtrLdpIfPassiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 15), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpIfPassiveMode.setStatus('current')
vRtrLdpIfAutoCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpIfAutoCreate.setStatus('current')
vRtrLdpIfOperDownReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 17), TmnxLdpIntTargOperDownReasonCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpIfOperDownReason.setStatus('current')
vRtrLdpIfTunneling = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 5, 1, 18), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpIfTunneling.setStatus('current')
vRtrLdpIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 6), )
if mibBuilder.loadTexts: vRtrLdpIfStatsTable.setStatus('current')
vRtrLdpIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 6, 1), )
vRtrLdpIfEntry.registerAugmentions(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfStatsEntry"))
vRtrLdpIfStatsEntry.setIndexNames(*vRtrLdpIfEntry.getIndexNames())
if mibBuilder.loadTexts: vRtrLdpIfStatsEntry.setStatus('current')
vRtrLdpIfExistingAdjacencies = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 6, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpIfExistingAdjacencies.setStatus('current')
vRtrLdpHelloAdjTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 7), )
if mibBuilder.loadTexts: vRtrLdpHelloAdjTable.setStatus('current')
vRtrLdpHelloAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerLdpId"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfIndex"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerAddress"))
if mibBuilder.loadTexts: vRtrLdpHelloAdjEntry.setStatus('current')
vRtrLdpPeerLdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 7, 1, 1), MplsLdpIdentifier())
if mibBuilder.loadTexts: vRtrLdpPeerLdpId.setStatus('current')
vRtrLdpHelloAdjLocalLdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 7, 1, 2), MplsLdpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpHelloAdjLocalLdpId.setStatus('current')
vRtrLdpHelloAdjEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 7, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpHelloAdjEntityIndex.setStatus('current')
vRtrLdpHelloAdjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 7, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpHelloAdjIndex.setStatus('current')
vRtrLdpHelloAdjHoldTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 7, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpHelloAdjHoldTimeRemaining.setStatus('current')
vRtrLdpHelloAdjType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 7, 1, 6), TmnxLdpAdjacencyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpHelloAdjType.setStatus('current')
vRtrLdpHelloAdjRemoteConfSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 7, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpHelloAdjRemoteConfSeqNum.setStatus('current')
vRtrLdpHelloAdjRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 7, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpHelloAdjRemoteIpAddress.setStatus('current')
vRtrLdpHelloAdjUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 7, 1, 9), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpHelloAdjUpTime.setStatus('current')
vRtrLdpHelloAdjLocalConfSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 7, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpHelloAdjLocalConfSeqNum.setStatus('current')
vRtrLdpHelloAdjLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 7, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpHelloAdjLocalIpAddress.setStatus('current')
vRtrLdpHelloAdjInHelloMsgCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 7, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpHelloAdjInHelloMsgCount.setStatus('current')
vRtrLdpHelloAdjOutHelloMsgCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 7, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpHelloAdjOutHelloMsgCount.setStatus('current')
vRtrLdpHelloAdjLocalHelloTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 7, 1, 14), TmnxLdpHelloTimeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpHelloAdjLocalHelloTimeout.setStatus('current')
vRtrLdpHelloAdjRemoteHelloTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 7, 1, 15), TmnxLdpHelloTimeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpHelloAdjRemoteHelloTimeout.setStatus('current')
vRtrLdpHelloAdjMapTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 8), )
if mibBuilder.loadTexts: vRtrLdpHelloAdjMapTable.setStatus('current')
vRtrLdpHelloAdjMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 8, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfIndex"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerAddress"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpHelloAdjMapLdpId"))
if mibBuilder.loadTexts: vRtrLdpHelloAdjMapEntry.setStatus('current')
vRtrLdpHelloAdjMapLdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 8, 1, 1), MplsLdpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpHelloAdjMapLdpId.setStatus('current')
vRtrLdpSessionTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9), )
if mibBuilder.loadTexts: vRtrLdpSessionTable.setStatus('current')
vRtrLdpSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerLdpId"))
if mibBuilder.loadTexts: vRtrLdpSessionEntry.setStatus('current')
vRtrLdpSessLocalLdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 1), MplsLdpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessLocalLdpId.setStatus('current')
vRtrLdpSessEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessEntityIndex.setStatus('current')
vRtrLdpSessLabelDistMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 3), TmnxLdpLabelDistMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessLabelDistMethod.setStatus('current')
vRtrLdpSessLoopDetectForPV = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessLoopDetectForPV.setStatus('current')
vRtrLdpSessPathVectorLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessPathVectorLimit.setStatus('current')
vRtrLdpSessState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nonexistent", 1), ("initialized", 2), ("openrec", 3), ("opensent", 4), ("operational", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessState.setStatus('current')
vRtrLdpSessAdjacencyType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 7), TmnxLdpAdjacencyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessAdjacencyType.setStatus('current')
vRtrLdpSessProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessProtocolVersion.setStatus('current')
vRtrLdpSessLocalUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessLocalUdpPort.setStatus('current')
vRtrLdpSessPeerUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessPeerUdpPort.setStatus('current')
vRtrLdpSessLocalTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessLocalTcpPort.setStatus('current')
vRtrLdpSessPeerTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessPeerTcpPort.setStatus('current')
vRtrLdpSessLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessLocalAddress.setStatus('current')
vRtrLdpSessPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessPeerAddress.setStatus('current')
vRtrLdpSessKAHoldTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 15), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessKAHoldTimeRemaining.setStatus('current')
vRtrLdpSessMaxPduLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessMaxPduLength.setStatus('current')
vRtrLdpSessUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 17), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessUpTime.setStatus('current')
vRtrLdpSessLocalKATimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 18), TmnxLdpKeepAliveTimeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessLocalKATimeout.setStatus('current')
vRtrLdpSessPeerKATimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 19), TmnxLdpKeepAliveTimeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessPeerKATimeout.setStatus('current')
vRtrLdpSessAdvertise = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("address", 1), ("service", 2), ("addressAndService", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessAdvertise.setStatus('current')
vRtrLdpSessRestartHelperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessRestartHelperState.setStatus('current')
vRtrLdpSessPeerNumRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessPeerNumRestart.setStatus('current')
vRtrLdpSessLastRestartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 23), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessLastRestartTime.setStatus('current')
vRtrLdpSessFtReconnectTimeNego = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 24), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessFtReconnectTimeNego.setStatus('current')
vRtrLdpSessFtRecoveryTimeNego = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 25), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessFtRecoveryTimeNego.setStatus('current')
vRtrLdpSessFtReconTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 26), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessFtReconTimeRemaining.setStatus('current')
vRtrLdpSessFtRecovTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 9, 1, 27), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessFtRecovTimeRemaining.setStatus('current')
vRtrLdpSessionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10), )
if mibBuilder.loadTexts: vRtrLdpSessionStatsTable.setStatus('current')
vRtrLdpSessionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1), )
vRtrLdpSessionEntry.registerAugmentions(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessionStatsEntry"))
vRtrLdpSessionStatsEntry.setIndexNames(*vRtrLdpSessionEntry.getIndexNames())
if mibBuilder.loadTexts: vRtrLdpSessionStatsEntry.setStatus('current')
vRtrLdpSessStatsTargAdj = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsTargAdj.setStatus('current')
vRtrLdpSessStatsLinkAdj = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsLinkAdj.setStatus('current')
vRtrLdpSessStatsFECRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsFECRecv.setStatus('current')
vRtrLdpSessStatsFECSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsFECSent.setStatus('current')
vRtrLdpSessStatsHelloIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsHelloIn.setStatus('current')
vRtrLdpSessStatsHelloOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsHelloOut.setStatus('current')
vRtrLdpSessStatsKeepaliveIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsKeepaliveIn.setStatus('current')
vRtrLdpSessStatsKeepaliveOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsKeepaliveOut.setStatus('current')
vRtrLdpSessStatsInitIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsInitIn.setStatus('current')
vRtrLdpSessStatsInitOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsInitOut.setStatus('current')
vRtrLdpSessStatsLabelMappingIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsLabelMappingIn.setStatus('current')
vRtrLdpSessStatsLabelMappingOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsLabelMappingOut.setStatus('current')
vRtrLdpSessStatsLabelRequestIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsLabelRequestIn.setStatus('current')
vRtrLdpSessStatsLabelRequestOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsLabelRequestOut.setStatus('current')
vRtrLdpSessStatsLabelReleaseIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsLabelReleaseIn.setStatus('current')
vRtrLdpSessStatsLabelReleaseOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsLabelReleaseOut.setStatus('current')
vRtrLdpSessStatsLabelWithdrawIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsLabelWithdrawIn.setStatus('current')
vRtrLdpSessStatsLabelWithdrawOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsLabelWithdrawOut.setStatus('current')
vRtrLdpSessStatsLabelAbortIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsLabelAbortIn.setStatus('current')
vRtrLdpSessStatsLabelAbortOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsLabelAbortOut.setStatus('current')
vRtrLdpSessStatsAddrIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsAddrIn.setStatus('current')
vRtrLdpSessStatsAddrOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsAddrOut.setStatus('current')
vRtrLdpSessStatsAddrWithdrawIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsAddrWithdrawIn.setStatus('current')
vRtrLdpSessStatsAddrWithdrawOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsAddrWithdrawOut.setStatus('current')
vRtrLdpSessStatsNotificationIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsNotificationIn.setStatus('current')
vRtrLdpSessStatsNotificationOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 10, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpSessStatsNotificationOut.setStatus('current')
vRtrLdpServFecTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11), )
if mibBuilder.loadTexts: vRtrLdpServFecTable.setStatus('current')
vRtrLdpServFecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecFecType"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecVcType"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecVcId"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerLdpId"))
if mibBuilder.loadTexts: vRtrLdpServFecEntry.setStatus('current')
vRtrLdpServFecFecType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 1), TmnxLdpFECType())
if mibBuilder.loadTexts: vRtrLdpServFecFecType.setStatus('current')
vRtrLdpServFecVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 2), TmnxVcType())
if mibBuilder.loadTexts: vRtrLdpServFecVcType.setStatus('current')
vRtrLdpServFecVcId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 3), TmnxVcId())
if mibBuilder.loadTexts: vRtrLdpServFecVcId.setStatus('current')
vRtrLdpServFecServType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 4), ServType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecServType.setStatus('current')
vRtrLdpServFecServId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 5), TmnxServId().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecServId.setStatus('current')
vRtrLdpServFecVpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 6), TmnxVpnId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecVpnId.setStatus('current')
vRtrLdpServFecFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 7), TmnxLdpFECFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecFlags.setStatus('current')
vRtrLdpServFecNumInLabels = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecNumInLabels.setStatus('current')
vRtrLdpServFecNumOutLabels = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecNumOutLabels.setStatus('current')
vRtrLdpServFecInLabel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecInLabel1.setStatus('current')
vRtrLdpServFecInLabelStatus1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 11), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecInLabelStatus1.setStatus('current')
vRtrLdpServFecInLabel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecInLabel2.setStatus('current')
vRtrLdpServFecInLabelStatus2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 13), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecInLabelStatus2.setStatus('current')
vRtrLdpServFecInLabel3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecInLabel3.setStatus('current')
vRtrLdpServFecInLabelStatus3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 15), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecInLabelStatus3.setStatus('current')
vRtrLdpServFecInLabel4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecInLabel4.setStatus('current')
vRtrLdpServFecInLabelStatus4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 17), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecInLabelStatus4.setStatus('current')
vRtrLdpServFecInLabel5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecInLabel5.setStatus('current')
vRtrLdpServFecInLabelStatus5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 19), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecInLabelStatus5.setStatus('current')
vRtrLdpServFecOutLabel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecOutLabel1.setStatus('current')
vRtrLdpServFecOutLabelStatus1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 21), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecOutLabelStatus1.setStatus('current')
vRtrLdpServFecOutLabel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecOutLabel2.setStatus('current')
vRtrLdpServFecOutLabelStatus2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 23), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecOutLabelStatus2.setStatus('current')
vRtrLdpServFecOutLabel3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecOutLabel3.setStatus('current')
vRtrLdpServFecOutLabelStatus3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 25), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecOutLabelStatus3.setStatus('current')
vRtrLdpServFecOutLabel4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecOutLabel4.setStatus('current')
vRtrLdpServFecOutLabelStatus4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 27), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecOutLabelStatus4.setStatus('current')
vRtrLdpServFecOutLabel5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecOutLabel5.setStatus('current')
vRtrLdpServFecOutLabelStatus5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 29), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecOutLabelStatus5.setStatus('current')
vRtrLdpServFecSdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 30), SdpId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecSdpId.setStatus('current')
vRtrLdpServFecLocalMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecLocalMTU.setStatus('current')
vRtrLdpServFecRemoteMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecRemoteMTU.setStatus('current')
vRtrLdpServFecLocalVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecLocalVlanTag.setStatus('current')
vRtrLdpServFecRemoteVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecRemoteVlanTag.setStatus('current')
vRtrLdpServFecLocalMaxCellConcat = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecLocalMaxCellConcat.setStatus('current')
vRtrLdpServFecRemoteMaxCellConcat = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecRemoteMaxCellConcat.setStatus('current')
vRtrLdpServFecInLabelSigStatus1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 37), TmnxLabelSigStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecInLabelSigStatus1.setStatus('current')
vRtrLdpServFecInLabelSigStatus2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 38), TmnxLabelSigStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecInLabelSigStatus2.setStatus('current')
vRtrLdpServFecInLabelSigStatus3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 39), TmnxLabelSigStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecInLabelSigStatus3.setStatus('current')
vRtrLdpServFecInLabelSigStatus4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 40), TmnxLabelSigStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecInLabelSigStatus4.setStatus('current')
vRtrLdpServFecInLabelSigStatus5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 41), TmnxLabelSigStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecInLabelSigStatus5.setStatus('current')
vRtrLdpServFecOutLabelSigStatus1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 42), TmnxLabelSigStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecOutLabelSigStatus1.setStatus('current')
vRtrLdpServFecOutLabelSigStatus2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 43), TmnxLabelSigStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecOutLabelSigStatus2.setStatus('current')
vRtrLdpServFecOutLabelSigStatus3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 44), TmnxLabelSigStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecOutLabelSigStatus3.setStatus('current')
vRtrLdpServFecOutLabelSigStatus4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 45), TmnxLabelSigStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecOutLabelSigStatus4.setStatus('current')
vRtrLdpServFecOutLabelSigStatus5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 46), TmnxLabelSigStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecOutLabelSigStatus5.setStatus('current')
vRtrLdpServFecMateEndpointVcId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 47), TmnxVcId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecMateEndpointVcId.setStatus('current')
vRtrLdpServFecMateEndpointSdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 11, 1, 48), SdpId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecMateEndpointSdpId.setStatus('current')
vRtrLdpServFecMapTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 12), )
if mibBuilder.loadTexts: vRtrLdpServFecMapTable.setStatus('obsolete')
vRtrLdpServFecMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 12, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerLdpId"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecMapFecType"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecMapVcType"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecMapVcId"))
if mibBuilder.loadTexts: vRtrLdpServFecMapEntry.setStatus('obsolete')
vRtrLdpServFecMapFecType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 12, 1, 1), TmnxLdpFECType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecMapFecType.setStatus('obsolete')
vRtrLdpServFecMapVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 12, 1, 2), TmnxVcType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecMapVcType.setStatus('obsolete')
vRtrLdpServFecMapVcId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 12, 1, 3), TmnxVcId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpServFecMapVcId.setStatus('obsolete')
vRtrLdpAddrFecTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13), )
if mibBuilder.loadTexts: vRtrLdpAddrFecTable.setStatus('current')
vRtrLdpAddrFecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecFecType"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecIpPrefix"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecIpMask"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerLdpId"))
if mibBuilder.loadTexts: vRtrLdpAddrFecEntry.setStatus('current')
vRtrLdpAddrFecFecType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 1), TmnxLdpFECType())
if mibBuilder.loadTexts: vRtrLdpAddrFecFecType.setStatus('current')
vRtrLdpAddrFecIpPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 2), IpAddress())
if mibBuilder.loadTexts: vRtrLdpAddrFecIpPrefix.setStatus('current')
vRtrLdpAddrFecIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 3), IpAddress())
if mibBuilder.loadTexts: vRtrLdpAddrFecIpMask.setStatus('current')
vRtrLdpAddrFecFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 4), TmnxLdpFECFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecFlags.setStatus('current')
vRtrLdpAddrFecNumInLabels = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecNumInLabels.setStatus('current')
vRtrLdpAddrFecNumOutLabels = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecNumOutLabels.setStatus('current')
vRtrLdpAddrFecInLabel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecInLabel1.setStatus('current')
vRtrLdpAddrFecInLabelStatus1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 8), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecInLabelStatus1.setStatus('current')
vRtrLdpAddrFecInLabelIfIndex1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 9), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecInLabelIfIndex1.setStatus('current')
vRtrLdpAddrFecInLabel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecInLabel2.setStatus('current')
vRtrLdpAddrFecInLabelStatus2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 11), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecInLabelStatus2.setStatus('current')
vRtrLdpAddrFecInLabelIfIndex2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 12), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecInLabelIfIndex2.setStatus('current')
vRtrLdpAddrFecInLabel3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecInLabel3.setStatus('current')
vRtrLdpAddrFecInLabelStatus3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 14), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecInLabelStatus3.setStatus('current')
vRtrLdpAddrFecInLabelIfIndex3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 15), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecInLabelIfIndex3.setStatus('current')
vRtrLdpAddrFecInLabel4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecInLabel4.setStatus('current')
vRtrLdpAddrFecInLabelStatus4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 17), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecInLabelStatus4.setStatus('current')
vRtrLdpAddrFecInLabelIfIndex4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 18), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecInLabelIfIndex4.setStatus('current')
vRtrLdpAddrFecInLabel5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecInLabel5.setStatus('current')
vRtrLdpAddrFecInLabelStatus5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 20), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecInLabelStatus5.setStatus('current')
vRtrLdpAddrFecInLabelIfIndex5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 21), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecInLabelIfIndex5.setStatus('current')
vRtrLdpAddrFecOutLabel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabel1.setStatus('current')
vRtrLdpAddrFecOutLabelStatus1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 23), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabelStatus1.setStatus('current')
vRtrLdpAddrFecOutLabelIfIndex1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 24), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabelIfIndex1.setStatus('current')
vRtrLdpAddrFecOutLabelNextHop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 25), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabelNextHop1.setStatus('current')
vRtrLdpAddrFecOutLabel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabel2.setStatus('current')
vRtrLdpAddrFecOutLabelStatus2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 27), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabelStatus2.setStatus('current')
vRtrLdpAddrFecOutLabelIfIndex2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 28), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabelIfIndex2.setStatus('current')
vRtrLdpAddrFecOutLabelNextHop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 29), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabelNextHop2.setStatus('current')
vRtrLdpAddrFecOutLabel3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabel3.setStatus('current')
vRtrLdpAddrFecOutLabelStatus3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 31), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabelStatus3.setStatus('current')
vRtrLdpAddrFecOutLabelIfIndex3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 32), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabelIfIndex3.setStatus('current')
vRtrLdpAddrFecOutLabelNextHop3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 33), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabelNextHop3.setStatus('current')
vRtrLdpAddrFecOutLabel4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabel4.setStatus('current')
vRtrLdpAddrFecOutLabelStatus4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 35), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabelStatus4.setStatus('current')
vRtrLdpAddrFecOutLabelIfIndex4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 36), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabelIfIndex4.setStatus('current')
vRtrLdpAddrFecOutLabelNextHop4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 37), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabelNextHop4.setStatus('current')
vRtrLdpAddrFecOutLabel5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabel5.setStatus('current')
vRtrLdpAddrFecOutLabelStatus5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 39), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabelStatus5.setStatus('current')
vRtrLdpAddrFecOutLabelIfIndex5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 40), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabelIfIndex5.setStatus('current')
vRtrLdpAddrFecOutLabelNextHop5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 41), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecOutLabelNextHop5.setStatus('current')
vRtrLdpAddrFecLspId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 13, 1, 42), TmnxVRtrMplsLspID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecLspId.setStatus('current')
vRtrLdpAddrFecMapTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 14), )
if mibBuilder.loadTexts: vRtrLdpAddrFecMapTable.setStatus('current')
vRtrLdpAddrFecMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 14, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerLdpId"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecMapFecType"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecMapIpPrefix"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecMapIpMask"))
if mibBuilder.loadTexts: vRtrLdpAddrFecMapEntry.setStatus('current')
vRtrLdpAddrFecMapFecType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 14, 1, 1), TmnxLdpFECType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecMapFecType.setStatus('current')
vRtrLdpAddrFecMapIpPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 14, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecMapIpPrefix.setStatus('current')
vRtrLdpAddrFecMapIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 14, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAddrFecMapIpMask.setStatus('current')
vRtrLdpAdjBackoffTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 15), )
if mibBuilder.loadTexts: vRtrLdpAdjBackoffTable.setStatus('current')
vRtrLdpAdjBackoffEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 15, 1), )
vRtrLdpHelloAdjEntry.registerAugmentions(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAdjBackoffEntry"))
vRtrLdpAdjBackoffEntry.setIndexNames(*vRtrLdpHelloAdjEntry.getIndexNames())
if mibBuilder.loadTexts: vRtrLdpAdjBackoffEntry.setStatus('current')
vRtrLdpAdjInitBackoff = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2592000))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAdjInitBackoff.setStatus('current')
vRtrLdpAdjMaxBackoff = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 15, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2592000))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAdjMaxBackoff.setStatus('current')
vRtrLdpAdjCurrentBackoff = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 15, 1, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAdjCurrentBackoff.setStatus('current')
vRtrLdpAdjWaitingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 15, 1, 4), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAdjWaitingTime.setStatus('current')
vRtrLdpAdjBackoffStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 15, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpAdjBackoffStatus.setStatus('current')
vRtrLdpPeerParamsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 16), )
if mibBuilder.loadTexts: vRtrLdpPeerParamsTable.setStatus('current')
vRtrLdpPeerParamsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 16, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerAddress"))
if mibBuilder.loadTexts: vRtrLdpPeerParamsEntry.setStatus('current')
vRtrLdpPeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 16, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpPeerRowStatus.setStatus('current')
vRtrLdpPeerAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 16, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpPeerAuth.setStatus('current')
vRtrLdpPeerAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 16, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpPeerAuthKey.setStatus('current')
vRtrLdpPeerMinTTLValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpPeerMinTTLValue.setStatus('current')
vRtrLdpPeerTTLLogId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 16, 1, 5), TFilterLogId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpPeerTTLLogId.setStatus('current')
vRtrLdpPeerAuthKeyChain = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 16, 1, 6), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpPeerAuthKeyChain.setStatus('current')
vRtrLdpStaticFecTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 18), )
if mibBuilder.loadTexts: vRtrLdpStaticFecTable.setStatus('current')
vRtrLdpStaticFecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 18, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStaticFecIpPrefix"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStaticFecIpMask"))
if mibBuilder.loadTexts: vRtrLdpStaticFecEntry.setStatus('current')
vRtrLdpStaticFecIpPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 18, 1, 1), IpAddress())
if mibBuilder.loadTexts: vRtrLdpStaticFecIpPrefix.setStatus('current')
vRtrLdpStaticFecIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 18, 1, 2), IpAddress())
if mibBuilder.loadTexts: vRtrLdpStaticFecIpMask.setStatus('current')
vRtrLdpStaticFecRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 18, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpStaticFecRowStatus.setStatus('current')
vRtrLdpStaticFecNextNHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 18, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStaticFecNextNHIndex.setStatus('current')
vRtrLdpStaticFecIngLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(32, 1023), ValueRangeConstraint(4294967295, 4294967295), )).clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpStaticFecIngLabel.setStatus('current')
vRtrLdpStaticFecNumNH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 18, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStaticFecNumNH.setStatus('current')
vRtrLdpStaticFecOperIngLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 18, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpStaticFecOperIngLabel.setStatus('current')
vRtrLdpStaticFecNHTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 19), )
if mibBuilder.loadTexts: vRtrLdpStaticFecNHTable.setStatus('current')
vRtrLdpStaticFecNHEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 19, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStaticFecIpPrefix"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStaticFecIpMask"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStaticFecNHIndex"))
if mibBuilder.loadTexts: vRtrLdpStaticFecNHEntry.setStatus('current')
vRtrLdpStaticFecNHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 19, 1, 1), Unsigned32())
if mibBuilder.loadTexts: vRtrLdpStaticFecNHIndex.setStatus('current')
vRtrLdpStaticFecNHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 19, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpStaticFecNHRowStatus.setStatus('current')
vRtrLdpStaticFecNHType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 19, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("ipAddress", 1), ("pop", 2))).clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpStaticFecNHType.setStatus('current')
vRtrLdpStaticFecNHIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 19, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpStaticFecNHIpAddr.setStatus('current')
vRtrLdpStaticFecNHEgrLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 19, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(16, 1048575), ValueRangeConstraint(4294967295, 4294967295), )).clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpStaticFecNHEgrLabel.setStatus('current')
vRtrLdpTargTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 20), )
if mibBuilder.loadTexts: vRtrLdpTargTable.setStatus('current')
vRtrLdpTargEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 20, 1), )
vRtrLdpGeneralEntry.registerAugmentions(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpTargEntry"))
vRtrLdpTargEntry.setIndexNames(*vRtrLdpGeneralEntry.getIndexNames())
if mibBuilder.loadTexts: vRtrLdpTargEntry.setStatus('current')
vRtrLdpTargImportPolicy1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 20, 1, 3), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpTargImportPolicy1.setStatus('current')
vRtrLdpTargImportPolicy2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 20, 1, 4), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpTargImportPolicy2.setStatus('current')
vRtrLdpTargImportPolicy3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 20, 1, 5), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpTargImportPolicy3.setStatus('current')
vRtrLdpTargImportPolicy4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 20, 1, 6), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpTargImportPolicy4.setStatus('current')
vRtrLdpTargImportPolicy5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 20, 1, 7), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpTargImportPolicy5.setStatus('current')
vRtrLdpTargExportPolicy1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 20, 1, 8), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpTargExportPolicy1.setStatus('current')
vRtrLdpTargExportPolicy2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 20, 1, 9), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpTargExportPolicy2.setStatus('current')
vRtrLdpTargExportPolicy3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 20, 1, 10), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpTargExportPolicy3.setStatus('current')
vRtrLdpTargExportPolicy4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 20, 1, 11), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpTargExportPolicy4.setStatus('current')
vRtrLdpTargExportPolicy5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 20, 1, 12), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpTargExportPolicy5.setStatus('current')
vRtrLdpTargTunnelPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 20, 1, 13), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpTargTunnelPreference.setStatus('current')
vRtrLdpIfTunnelingLspTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 21), )
if mibBuilder.loadTexts: vRtrLdpIfTunnelingLspTable.setStatus('current')
vRtrLdpIfTunnelingLspEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 21, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfIndex"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerAddress"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfLspId"))
if mibBuilder.loadTexts: vRtrLdpIfTunnelingLspEntry.setStatus('current')
vRtrLdpIfLspId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 21, 1, 1), TmnxVRtrMplsLspID())
if mibBuilder.loadTexts: vRtrLdpIfLspId.setStatus('current')
vRtrLdpIfLspRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrLdpIfLspRowStatus.setStatus('current')
vRtrLdpCepTdmFecTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22), )
if mibBuilder.loadTexts: vRtrLdpCepTdmFecTable.setStatus('current')
vRtrLdpCepTdmFecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1), )
vRtrLdpServFecEntry.registerAugmentions(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmFecEntry"))
vRtrLdpCepTdmFecEntry.setIndexNames(*vRtrLdpServFecEntry.getIndexNames())
if mibBuilder.loadTexts: vRtrLdpCepTdmFecEntry.setStatus('current')
vRtrLdpCepTdmLocalPayloadSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 4), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmLocalPayloadSize.setStatus('current')
vRtrLdpCepTdmRemotePayloadSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 5), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmRemotePayloadSize.setStatus('current')
vRtrLdpCepTdmLocalBitrate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 6), Unsigned32()).setUnits('64 Kbits/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmLocalBitrate.setStatus('current')
vRtrLdpCepTdmRemoteBitrate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 7), Unsigned32()).setUnits('64 Kbits/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmRemoteBitrate.setStatus('current')
vRtrLdpCepTdmLocalRtpHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmLocalRtpHeader.setStatus('current')
vRtrLdpCepTdmRemoteRtpHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmRemoteRtpHeader.setStatus('current')
vRtrLdpCepTdmLocalDiffTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmLocalDiffTimestamp.setStatus('current')
vRtrLdpCepTdmRemoteDiffTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmRemoteDiffTimestamp.setStatus('current')
vRtrLdpCepTdmLocalSigPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 12), TdmOptionsSigPkts()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmLocalSigPkts.setStatus('current')
vRtrLdpCepTdmRemoteSigPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 13), TdmOptionsSigPkts()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmRemoteSigPkts.setStatus('current')
vRtrLdpCepTdmLocalCasTrunk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 14), TdmOptionsCasTrunkFraming()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmLocalCasTrunk.setStatus('current')
vRtrLdpCepTdmRemoteCasTrunk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 15), TdmOptionsCasTrunkFraming()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmRemoteCasTrunk.setStatus('current')
vRtrLdpCepTdmLocalTimestampFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 16), Unsigned32()).setUnits('8 KHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmLocalTimestampFreq.setStatus('current')
vRtrLdpCepTdmRemoteTimestampFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 17), Unsigned32()).setUnits('8 KHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmRemoteTimestampFreq.setStatus('current')
vRtrLdpCepTdmLocalPayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmLocalPayloadType.setStatus('current')
vRtrLdpCepTdmRemotePayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmRemotePayloadType.setStatus('current')
vRtrLdpCepTdmLocalSsrcId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmLocalSsrcId.setStatus('current')
vRtrLdpCepTdmRemoteSsrcId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 22, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrLdpCepTdmRemoteSsrcId.setStatus('current')
vLdpServFec129Table = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23), )
if mibBuilder.loadTexts: vLdpServFec129Table.setStatus('current')
vLdpServFec129Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecVcType"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129AgiTlv"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129SrcAiiTlv"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129TgtAiiTlv"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerLdpId"))
if mibBuilder.loadTexts: vLdpServFec129Entry.setStatus('current')
vLdpServFec129AgiTlv = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 1), TmnxLdpFec129Tlv())
if mibBuilder.loadTexts: vLdpServFec129AgiTlv.setStatus('current')
vLdpServFec129SrcAiiTlv = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 2), TmnxLdpFec129Tlv())
if mibBuilder.loadTexts: vLdpServFec129SrcAiiTlv.setStatus('current')
vLdpServFec129TgtAiiTlv = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 3), TmnxLdpFec129Tlv())
if mibBuilder.loadTexts: vLdpServFec129TgtAiiTlv.setStatus('current')
vLdpServFec129ServType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 4), ServType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129ServType.setStatus('current')
vLdpServFec129ServId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 5), TmnxServId().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129ServId.setStatus('current')
vLdpServFec129VpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 6), TmnxVpnId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129VpnId.setStatus('current')
vLdpServFec129Flags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 7), TmnxLdpFECFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129Flags.setStatus('current')
vLdpServFec129NumInLabels = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129NumInLabels.setStatus('current')
vLdpServFec129NumOutLabels = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129NumOutLabels.setStatus('current')
vLdpServFec129InLabel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129InLabel1.setStatus('current')
vLdpServFec129InLabelStatus1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 11), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129InLabelStatus1.setStatus('current')
vLdpServFec129OutLabel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129OutLabel1.setStatus('current')
vLdpServFec129OutLabelStatus1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 21), TmnxLabelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129OutLabelStatus1.setStatus('current')
vLdpServFec129SdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 22), SdpId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129SdpId.setStatus('current')
vLdpServFec129LocalMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129LocalMTU.setStatus('current')
vLdpServFec129RemoteMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129RemoteMTU.setStatus('current')
vLdpServFec129LocalVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129LocalVlanTag.setStatus('current')
vLdpServFec129RemoteVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129RemoteVlanTag.setStatus('current')
vLdpServFec129LocalMaxCellConcat = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129LocalMaxCellConcat.setStatus('current')
vLdpServFec129RemoteMaxCellConcat = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129RemoteMaxCellConcat.setStatus('current')
vLdpServFec129InLabelSigStatus1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 29), TmnxLabelSigStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129InLabelSigStatus1.setStatus('current')
vLdpServFec129OutLabelSigStatus1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 23, 1, 30), TmnxLabelSigStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129OutLabelSigStatus1.setStatus('current')
vLdpServFec129MapTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 24), )
if mibBuilder.loadTexts: vLdpServFec129MapTable.setStatus('obsolete')
vLdpServFec129MapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 24, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerLdpId"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129MapVcType"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129MapAgiTlv"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129MapSrcAiiTlv"), (0, "ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129MapTgtAiiTlv"))
if mibBuilder.loadTexts: vLdpServFec129MapEntry.setStatus('obsolete')
vLdpServFec129MapVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 24, 1, 1), TmnxVcType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129MapVcType.setStatus('obsolete')
vLdpServFec129MapAgiTlv = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 24, 1, 2), TmnxLdpFec129Tlv()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129MapAgiTlv.setStatus('obsolete')
vLdpServFec129MapSrcAiiTlv = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 24, 1, 3), TmnxLdpFec129Tlv()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129MapSrcAiiTlv.setStatus('obsolete')
vLdpServFec129MapTgtAiiTlv = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 24, 1, 4), TmnxLdpFec129Tlv()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpServFec129MapTgtAiiTlv.setStatus('obsolete')
vLdpCepTdmFec129Table = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25), )
if mibBuilder.loadTexts: vLdpCepTdmFec129Table.setStatus('current')
vLdpCepTdmFec129Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1), )
vLdpServFec129Entry.registerAugmentions(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129Entry"))
vLdpCepTdmFec129Entry.setIndexNames(*vLdpServFec129Entry.getIndexNames())
if mibBuilder.loadTexts: vLdpCepTdmFec129Entry.setStatus('current')
vLdpCepTdmFec129LocalPayloadSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 4), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129LocalPayloadSize.setStatus('current')
vLdpCepTdmFec129RemotePayloadSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 5), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129RemotePayloadSize.setStatus('current')
vLdpCepTdmFec129LocalBitrate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 6), Unsigned32()).setUnits('64 Kbits/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129LocalBitrate.setStatus('current')
vLdpCepTdmFec129RemoteBitrate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 7), Unsigned32()).setUnits('64 Kbits/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129RemoteBitrate.setStatus('current')
vLdpCepTdmFec129LocalRtpHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129LocalRtpHeader.setStatus('current')
vLdpCepTdmFec129RemoteRtpHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129RemoteRtpHeader.setStatus('current')
vLdpCepTdmFec129LocalDiffTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129LocalDiffTimestamp.setStatus('current')
vLdpCepTdmFec129RemoteDiffTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129RemoteDiffTimestamp.setStatus('current')
vLdpCepTdmFec129LocalSigPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 12), TdmOptionsSigPkts()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129LocalSigPkts.setStatus('current')
vLdpCepTdmFec129RemoteSigPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 13), TdmOptionsSigPkts()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129RemoteSigPkts.setStatus('current')
vLdpCepTdmFec129LocalCasTrunk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 14), TdmOptionsCasTrunkFraming()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129LocalCasTrunk.setStatus('current')
vLdpCepTdmFec129RemoteCasTrunk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 15), TdmOptionsCasTrunkFraming()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129RemoteCasTrunk.setStatus('current')
vLdpCepTdmFec129LocalTimestampFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 16), Unsigned32()).setUnits('8 KHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129LocalTimestampFreq.setStatus('current')
vLdpCepTdmFec129RemoteTimestampFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 17), Unsigned32()).setUnits('8 KHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129RemoteTimestampFreq.setStatus('current')
vLdpCepTdmFec129LocalPayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129LocalPayloadType.setStatus('current')
vLdpCepTdmFec129RemotePayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129RemotePayloadType.setStatus('current')
vLdpCepTdmFec129LocalSsrcId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129LocalSsrcId.setStatus('current')
vLdpCepTdmFec129RemoteSsrcId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 25, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLdpCepTdmFec129RemoteSsrcId.setStatus('current')
tmnxLdpNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 17))
vRtrLdpInstanceNotifyReasonCode = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 17, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("adminUp", 1), ("adminDown", 2), ("operUp", 3), ("operDown", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vRtrLdpInstanceNotifyReasonCode.setStatus('current')
vRtrLdpIfNotifyReasonCode = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 17, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("adminUp", 1), ("adminDown", 2), ("operUp", 3), ("operDown", 4), ("sysIpUp", 5), ("sysIpDown", 6)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vRtrLdpIfNotifyReasonCode.setStatus('current')
vRtrLdpNotifyLocalServiceID = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 17, 3), TmnxServId().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vRtrLdpNotifyLocalServiceID.setStatus('obsolete')
vRtrLdpNotifyRemoteServiceID = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 17, 4), TmnxServId().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vRtrLdpNotifyRemoteServiceID.setStatus('obsolete')
vRtrLdpNotifyLocalGroupID = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 17, 5), TmnxVcId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vRtrLdpNotifyLocalGroupID.setStatus('current')
vRtrLdpNotifyRemoteGroupID = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 8, 17, 6), TmnxVcId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vRtrLdpNotifyRemoteGroupID.setStatus('current')
vRtrLdpStateChange = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 8, 0, 1)).setObjects(("ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrLdpStatus"))
if mibBuilder.loadTexts: vRtrLdpStateChange.setStatus('current')
vRtrLdpInstanceStateChange = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 8, 0, 2)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenAdminState"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenOperState"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpInstanceNotifyReasonCode"))
if mibBuilder.loadTexts: vRtrLdpInstanceStateChange.setStatus('current')
vRtrLdpIfStateChange = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 8, 0, 3)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfAdminState"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfOperState"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfNotifyReasonCode"))
if mibBuilder.loadTexts: vRtrLdpIfStateChange.setStatus('current')
vRtrLdpSvcIdMismatch = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 8, 0, 4)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpNotifyLocalServiceID"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpNotifyRemoteServiceID"))
if mibBuilder.loadTexts: vRtrLdpSvcIdMismatch.setStatus('obsolete')
vRtrLdpGroupIdMismatch = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 8, 0, 5)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpNotifyLocalGroupID"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpNotifyRemoteGroupID"))
if mibBuilder.loadTexts: vRtrLdpGroupIdMismatch.setStatus('current')
tmnxLdpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 1))
tmnxLdpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2))
tmnxLdpV4v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 1, 4)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpGlobalV3v0Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpIfV3v0Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpAdjR2r1Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpSessionR2r1Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpServFecV4v0Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpAddrFecGroup"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpNotificationGroup"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpStaticFecV3v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpV4v0Compliance = tmnxLdpV4v0Compliance.setStatus('obsolete')
tmnxLdpV5v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 1, 5)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpGlobalV5v0Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpIfV5v0Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpAdjR2r1Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpSessionV5v0Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpServFecV5v0Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpAddrFecV5v0Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpNotificationGroup"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpStaticFecV3v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpV5v0Compliance = tmnxLdpV5v0Compliance.setStatus('obsolete')
tmnxLdpV6v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 1, 6)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpGlobalV5v0Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpIfV5v0Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpAdjR2r1Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpSessionV5v0Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpServFecV6v0Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpServFec129V6v0Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpAddrFecV5v0Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpNotificationGroup"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpStaticFecV3v0Group"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "tmnxLdpCepTdmFecV6v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpV6v0Compliance = tmnxLdpV6v0Compliance.setStatus('current')
tmnxLdpAddrFecGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 6)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecFlags"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecNumInLabels"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecNumOutLabels"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabel1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelIfIndex1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabel2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelStatus2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelIfIndex2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabel3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelStatus3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelIfIndex3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabel4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelStatus4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelIfIndex4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabel5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelStatus5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelIfIndex5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabel1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelIfIndex1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelNextHop1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabel2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelStatus2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelIfIndex2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelNextHop2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabel3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelStatus3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelIfIndex3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelNextHop3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabel4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelStatus4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelIfIndex4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelNextHop4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabel5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelStatus5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelIfIndex5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelNextHop5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecMapFecType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecMapIpPrefix"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecMapIpMask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpAddrFecGroup = tmnxLdpAddrFecGroup.setStatus('obsolete')
tmnxLdpNotifyObjsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 7)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpInstanceNotifyReasonCode"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfNotifyReasonCode"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpNotifyLocalGroupID"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpNotifyRemoteGroupID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpNotifyObjsGroup = tmnxLdpNotifyObjsGroup.setStatus('current')
tmnxLdpNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 8)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStateChange"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpInstanceStateChange"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfStateChange"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGroupIdMismatch"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpNotificationGroup = tmnxLdpNotificationGroup.setStatus('current')
tmnxLdpAdjBackoffGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 10)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAdjInitBackoff"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAdjMaxBackoff"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAdjCurrentBackoff"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAdjWaitingTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAdjBackoffStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpAdjBackoffGroup = tmnxLdpAdjBackoffGroup.setStatus('current')
tmnxLdpObsoleteObjsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 11)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpNotifyLocalServiceID"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpNotifyRemoteServiceID"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPolicyRowStatus"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPolicyName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpObsoleteObjsGroup = tmnxLdpObsoleteObjsGroup.setStatus('current')
tmnxLdpObsoleteNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 12)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSvcIdMismatch"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpObsoleteNotificationGroup = tmnxLdpObsoleteNotificationGroup.setStatus('current')
tmnxLdpAdjR2r1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 15)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpHelloAdjMapLdpId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpHelloAdjLocalLdpId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpHelloAdjEntityIndex"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpHelloAdjIndex"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpHelloAdjHoldTimeRemaining"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpHelloAdjType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpHelloAdjRemoteConfSeqNum"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpHelloAdjRemoteIpAddress"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpHelloAdjUpTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpHelloAdjLocalConfSeqNum"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpHelloAdjLocalIpAddress"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpHelloAdjInHelloMsgCount"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpHelloAdjOutHelloMsgCount"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpHelloAdjLocalHelloTimeout"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpHelloAdjRemoteHelloTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpAdjR2r1Group = tmnxLdpAdjR2r1Group.setStatus('current')
tmnxLdpSessionR2r1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 16)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessLocalLdpId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessEntityIndex"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessLabelDistMethod"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessLoopDetectForPV"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessPathVectorLimit"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessState"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessAdjacencyType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessProtocolVersion"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessLocalUdpPort"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessPeerUdpPort"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessLocalTcpPort"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessPeerTcpPort"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessLocalAddress"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessPeerAddress"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessKAHoldTimeRemaining"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessMaxPduLength"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessUpTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessLocalKATimeout"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessPeerKATimeout"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsTargAdj"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLinkAdj"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsFECRecv"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsFECSent"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsHelloIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsHelloOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsKeepaliveIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsKeepaliveOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsInitIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsInitOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelMappingIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelMappingOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelRequestIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelRequestOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelReleaseIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelReleaseOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelWithdrawIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelWithdrawOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelAbortIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelAbortOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsAddrIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsAddrOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsAddrWithdrawIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsAddrWithdrawOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsNotificationIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsNotificationOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpSessionR2r1Group = tmnxLdpSessionR2r1Group.setStatus('obsolete')
tmnxLdpStaticFecV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 17)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStaticFecRowStatus"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStaticFecNextNHIndex"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStaticFecIngLabel"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStaticFecNumNH"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStaticFecOperIngLabel"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStaticFecNHRowStatus"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStaticFecNHType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStaticFecNHIpAddr"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStaticFecNHEgrLabel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpStaticFecV3v0Group = tmnxLdpStaticFecV3v0Group.setStatus('current')
tmnxLdpIfV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 19)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfTableSpinlock"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfRowStatus"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfLastChange"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfAdminState"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfOperState"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfInheritance"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfKeepAliveFactor"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfKeepAliveTimeout"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfHelloFactor"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfHelloTimeout"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfBackoffTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfMaxBackoffTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfTransportAddrType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfPassiveMode"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfAutoCreate"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfOperDownReason"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfExistingAdjacencies"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerRowStatus"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerAuth"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerAuthKey"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerMinTTLValue"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerTTLLogId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpIfV3v0Group = tmnxLdpIfV3v0Group.setStatus('obsolete')
tmnxLdpGlobalV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 20)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenLastChange"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenAdminState"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenOperState"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenLdpLsrId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenProtocolVersion"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenDeaggregateFec"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenKeepAliveFactor"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenKeepAliveTimeout"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenHelloFactor"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenHelloTimeout"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenRoutePreference"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenControlMode"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenDistMethod"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenRetentionMode"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTransportAddrType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenPropagatePolicy"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenLoopDetectCapable"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenHopLimit"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenPathVectorLimit"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenBackoffTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenMaxBackoffTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTargKeepAliveFactor"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTargKeepAliveTimeout"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTargHelloFactor"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTargHelloTimeout"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTargPassiveMode"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTargetedSessions"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenCreateTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenUpTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenImportPolicy1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenImportPolicy2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenImportPolicy3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenImportPolicy4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenImportPolicy5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenExportPolicy1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenExportPolicy2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenExportPolicy3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenExportPolicy4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenExportPolicy5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTunnelDownDampTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenOperDownReason"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTrustList"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsOperDownEvents"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsActiveSessions"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsActiveAdjacencies"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsActiveInterfaces"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsInactiveInterfaces"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsActiveTargSessions"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsInactiveTargSessions"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsAddrFECRecv"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsAddrFECSent"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsSvcFECRecv"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsSvcFECSent"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsAttemptedSessions"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsSessRejNoHelloErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsSessRejAdvErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsSessRejMaxPduErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsSessRejLabelRangeErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsBadLdpIdentifierErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsBadPduLengthErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsBadMessageLengthErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsBadTlvLengthErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsMalformedTlvValueErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsKeepAliveExpiredErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsShutdownNotifRecv"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsShutdownNotifSent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpGlobalV3v0Group = tmnxLdpGlobalV3v0Group.setStatus('obsolete')
tmnxLdpServFecV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 21)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecServType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecServId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecVpnId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecFlags"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecNumInLabels"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecNumOutLabels"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabel1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabel2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelStatus2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabel3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelStatus3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabel4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelStatus4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabel5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelStatus5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabel1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabel2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelStatus2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabel3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelStatus3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabel4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelStatus4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabel5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelStatus5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecSdpId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecLocalMTU"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecRemoteMTU"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecLocalVlanTag"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecRemoteVlanTag"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecLocalMaxCellConcat"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecRemoteMaxCellConcat"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecMapFecType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecMapVcType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecMapVcId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelSigStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelSigStatus2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelSigStatus3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelSigStatus4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelSigStatus5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelSigStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelSigStatus2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelSigStatus3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelSigStatus4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelSigStatus5"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpServFecV4v0Group = tmnxLdpServFecV4v0Group.setStatus('obsolete')
tmnxLdpGlobalV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 22)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenLastChange"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenAdminState"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenOperState"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenLdpLsrId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenProtocolVersion"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenDeaggregateFec"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenKeepAliveFactor"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenKeepAliveTimeout"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenHelloFactor"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenHelloTimeout"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenRoutePreference"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenControlMode"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenDistMethod"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenRetentionMode"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTransportAddrType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenPropagatePolicy"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenLoopDetectCapable"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenHopLimit"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenPathVectorLimit"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenBackoffTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenMaxBackoffTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTargKeepAliveFactor"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTargKeepAliveTimeout"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTargHelloFactor"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTargHelloTimeout"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTargPassiveMode"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTargetedSessions"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenCreateTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenUpTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenImportPolicy1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenImportPolicy2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenImportPolicy3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenImportPolicy4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenImportPolicy5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenExportPolicy1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenExportPolicy2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenExportPolicy3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenExportPolicy4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenExportPolicy5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTunnelDownDampTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenOperDownReason"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenGracefulRestart"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenGRNbrLiveTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenGRMaxRecoveryTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpTargImportPolicy1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpTargImportPolicy2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpTargImportPolicy3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpTargImportPolicy4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpTargImportPolicy5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpTargExportPolicy1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpTargExportPolicy2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpTargExportPolicy3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpTargExportPolicy4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpTargExportPolicy5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpTargTunnelPreference"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsOperDownEvents"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsActiveSessions"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsActiveAdjacencies"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsActiveInterfaces"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsInactiveInterfaces"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsActiveTargSessions"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsInactiveTargSessions"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsAddrFECRecv"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsAddrFECSent"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsSvcFECRecv"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsSvcFECSent"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsAttemptedSessions"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsSessRejNoHelloErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsSessRejAdvErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsSessRejMaxPduErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsSessRejLabelRangeErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsBadLdpIdentifierErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsBadPduLengthErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsBadMessageLengthErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsBadTlvLengthErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsMalformedTlvValueErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsKeepAliveExpiredErrors"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsShutdownNotifRecv"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpStatsShutdownNotifSent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpGlobalV5v0Group = tmnxLdpGlobalV5v0Group.setStatus('current')
tmnxLdpIfV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 23)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfTableSpinlock"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfRowStatus"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfLastChange"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfAdminState"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfOperState"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfInheritance"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfKeepAliveFactor"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfKeepAliveTimeout"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfHelloFactor"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfHelloTimeout"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfBackoffTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfMaxBackoffTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfTransportAddrType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfPassiveMode"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfAutoCreate"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfOperDownReason"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfExistingAdjacencies"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfTunneling"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpIfLspRowStatus"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerRowStatus"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerAuth"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerAuthKey"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerMinTTLValue"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerTTLLogId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpPeerAuthKeyChain"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpIfV5v0Group = tmnxLdpIfV5v0Group.setStatus('current')
tmnxLdpServFecV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 24)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecServType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecServId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecVpnId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecFlags"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecNumInLabels"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecNumOutLabels"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabel1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabel2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelStatus2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabel3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelStatus3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabel4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelStatus4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabel5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelStatus5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabel1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabel2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelStatus2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabel3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelStatus3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabel4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelStatus4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabel5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelStatus5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecSdpId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecLocalMTU"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecRemoteMTU"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecLocalVlanTag"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecRemoteVlanTag"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecLocalMaxCellConcat"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecRemoteMaxCellConcat"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecMapFecType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecMapVcType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecMapVcId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelSigStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelSigStatus2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelSigStatus3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelSigStatus4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelSigStatus5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelSigStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelSigStatus2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelSigStatus3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelSigStatus4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelSigStatus5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecMateEndpointVcId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecMateEndpointSdpId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpServFecV5v0Group = tmnxLdpServFecV5v0Group.setStatus('obsolete')
tmnxLdpAddrFecV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 25)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecFlags"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecNumInLabels"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecNumOutLabels"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabel1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelIfIndex1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabel2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelStatus2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelIfIndex2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabel3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelStatus3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelIfIndex3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabel4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelStatus4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelIfIndex4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabel5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelStatus5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecInLabelIfIndex5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabel1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelIfIndex1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelNextHop1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabel2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelStatus2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelIfIndex2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelNextHop2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabel3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelStatus3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelIfIndex3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelNextHop3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabel4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelStatus4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelIfIndex4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelNextHop4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabel5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelStatus5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelIfIndex5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecOutLabelNextHop5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecLspId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecMapFecType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecMapIpPrefix"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpAddrFecMapIpMask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpAddrFecV5v0Group = tmnxLdpAddrFecV5v0Group.setStatus('current')
tmnxLdpSessionV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 26)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessLocalLdpId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessEntityIndex"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessLabelDistMethod"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessLoopDetectForPV"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessPathVectorLimit"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessState"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessAdjacencyType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessProtocolVersion"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessLocalUdpPort"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessPeerUdpPort"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessLocalTcpPort"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessPeerTcpPort"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessLocalAddress"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessPeerAddress"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessKAHoldTimeRemaining"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessMaxPduLength"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessUpTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessLocalKATimeout"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessPeerKATimeout"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessAdvertise"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessRestartHelperState"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessPeerNumRestart"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessLastRestartTime"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessFtReconnectTimeNego"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessFtRecoveryTimeNego"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessFtReconTimeRemaining"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessFtRecovTimeRemaining"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsTargAdj"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLinkAdj"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsFECRecv"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsFECSent"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsHelloIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsHelloOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsKeepaliveIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsKeepaliveOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsInitIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsInitOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelMappingIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelMappingOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelRequestIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelRequestOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelReleaseIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelReleaseOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelWithdrawIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelWithdrawOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelAbortIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsLabelAbortOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsAddrIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsAddrOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsAddrWithdrawIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsAddrWithdrawOut"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsNotificationIn"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpSessStatsNotificationOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpSessionV5v0Group = tmnxLdpSessionV5v0Group.setStatus('current')
tmnxLdpObsoletedV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 27)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpGenTrustList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpObsoletedV5v0Group = tmnxLdpObsoletedV5v0Group.setStatus('current')
tmnxLdpCepTdmFecV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 28)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmLocalPayloadSize"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmRemotePayloadSize"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmLocalBitrate"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmRemoteBitrate"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmLocalRtpHeader"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmRemoteRtpHeader"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmLocalDiffTimestamp"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmRemoteDiffTimestamp"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmLocalSigPkts"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmRemoteSigPkts"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmLocalCasTrunk"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmRemoteCasTrunk"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmLocalTimestampFreq"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmRemoteTimestampFreq"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmLocalPayloadType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmRemotePayloadType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmLocalSsrcId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpCepTdmRemoteSsrcId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129LocalPayloadSize"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129RemotePayloadSize"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129LocalBitrate"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129RemoteBitrate"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129LocalRtpHeader"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129RemoteRtpHeader"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129LocalDiffTimestamp"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129RemoteDiffTimestamp"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129LocalSigPkts"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129RemoteSigPkts"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129LocalCasTrunk"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129RemoteCasTrunk"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129LocalTimestampFreq"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129RemoteTimestampFreq"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129LocalPayloadType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129RemotePayloadType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129LocalSsrcId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpCepTdmFec129RemoteSsrcId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpCepTdmFecV6v0Group = tmnxLdpCepTdmFecV6v0Group.setStatus('current')
tmnxLdpServFecV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 29)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecServType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecServId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecVpnId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecFlags"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecNumInLabels"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecNumOutLabels"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabel1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabel2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelStatus2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabel3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelStatus3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabel4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelStatus4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabel5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelStatus5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabel1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabel2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelStatus2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabel3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelStatus3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabel4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelStatus4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabel5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelStatus5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecSdpId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecLocalMTU"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecRemoteMTU"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecLocalVlanTag"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecRemoteVlanTag"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecLocalMaxCellConcat"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecRemoteMaxCellConcat"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelSigStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelSigStatus2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelSigStatus3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelSigStatus4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecInLabelSigStatus5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelSigStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelSigStatus2"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelSigStatus3"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelSigStatus4"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecOutLabelSigStatus5"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecMateEndpointVcId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecMateEndpointSdpId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpServFecV6v0Group = tmnxLdpServFecV6v0Group.setStatus('current')
tmnxLdpServFec129V6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 30)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129ServType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129ServId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129VpnId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129Flags"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129NumInLabels"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129NumOutLabels"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129InLabel1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129InLabelStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129OutLabel1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129OutLabelStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129SdpId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129LocalMTU"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129RemoteMTU"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129LocalVlanTag"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129RemoteVlanTag"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129LocalMaxCellConcat"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129RemoteMaxCellConcat"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129InLabelSigStatus1"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129OutLabelSigStatus1"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpServFec129V6v0Group = tmnxLdpServFec129V6v0Group.setStatus('current')
tmnxLdpServFecObsoletedV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 8, 2, 31)).setObjects(("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecMapFecType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecMapVcType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vRtrLdpServFecMapVcId"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129MapVcType"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129MapAgiTlv"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129MapSrcAiiTlv"), ("ALCATEL-IND1-TIMETRA-LDP-MIB", "vLdpServFec129MapTgtAiiTlv"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLdpServFecObsoletedV6v0Group = tmnxLdpServFecObsoletedV6v0Group.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-TIMETRA-LDP-MIB", vRtrLdpAddrFecOutLabelNextHop3=vRtrLdpAddrFecOutLabelNextHop3, vRtrLdpPeerLdpId=vRtrLdpPeerLdpId, vRtrLdpGenTargHelloFactor=vRtrLdpGenTargHelloFactor, vRtrLdpGenOperDownReason=vRtrLdpGenOperDownReason, vLdpCepTdmFec129RemoteTimestampFreq=vLdpCepTdmFec129RemoteTimestampFreq, vRtrLdpSessStatsLabelWithdrawIn=vRtrLdpSessStatsLabelWithdrawIn, vRtrLdpPolicyType=vRtrLdpPolicyType, tmnxLdpV6v0Compliance=tmnxLdpV6v0Compliance, vRtrLdpHelloAdjUpTime=vRtrLdpHelloAdjUpTime, vRtrLdpTargExportPolicy4=vRtrLdpTargExportPolicy4, vRtrLdpSessLocalTcpPort=vRtrLdpSessLocalTcpPort, vRtrLdpIfHelloTimeout=vRtrLdpIfHelloTimeout, vRtrLdpServFecOutLabelStatus5=vRtrLdpServFecOutLabelStatus5, vRtrLdpGenAdminState=vRtrLdpGenAdminState, vLdpServFec129Entry=vLdpServFec129Entry, vRtrLdpCepTdmRemoteBitrate=vRtrLdpCepTdmRemoteBitrate, vRtrLdpAddrFecMapEntry=vRtrLdpAddrFecMapEntry, tmnxLdpAdjR2r1Group=tmnxLdpAdjR2r1Group, vRtrLdpGenProtocolVersion=vRtrLdpGenProtocolVersion, vRtrLdpIfTunnelingLspTable=vRtrLdpIfTunnelingLspTable, vRtrLdpSessStatsLinkAdj=vRtrLdpSessStatsLinkAdj, vRtrLdpCepTdmFecEntry=vRtrLdpCepTdmFecEntry, vRtrLdpAddrFecOutLabelNextHop4=vRtrLdpAddrFecOutLabelNextHop4, vRtrLdpAddrFecNumOutLabels=vRtrLdpAddrFecNumOutLabels, vLdpServFec129MapAgiTlv=vLdpServFec129MapAgiTlv, vRtrLdpSessionStatsTable=vRtrLdpSessionStatsTable, vRtrLdpSessFtReconnectTimeNego=vRtrLdpSessFtReconnectTimeNego, tmnxLdpSessionR2r1Group=tmnxLdpSessionR2r1Group, TmnxLabelSigStatus=TmnxLabelSigStatus, vRtrLdpAddrFecOutLabel4=vRtrLdpAddrFecOutLabel4, vRtrLdpPeerRowStatus=vRtrLdpPeerRowStatus, vRtrLdpGenTargKeepAliveFactor=vRtrLdpGenTargKeepAliveFactor, vRtrLdpStaticFecNHRowStatus=vRtrLdpStaticFecNHRowStatus, vLdpServFec129Flags=vLdpServFec129Flags, vRtrLdpStateChange=vRtrLdpStateChange, vLdpServFec129LocalMaxCellConcat=vLdpServFec129LocalMaxCellConcat, vRtrLdpAddrFecOutLabelStatus1=vRtrLdpAddrFecOutLabelStatus1, vRtrLdpSessStatsLabelAbortOut=vRtrLdpSessStatsLabelAbortOut, vRtrLdpTargExportPolicy5=vRtrLdpTargExportPolicy5, vRtrLdpStaticFecNHTable=vRtrLdpStaticFecNHTable, vLdpCepTdmFec129LocalCasTrunk=vLdpCepTdmFec129LocalCasTrunk, tmnxLdpStaticFecV3v0Group=tmnxLdpStaticFecV3v0Group, vRtrLdpHelloAdjLocalConfSeqNum=vRtrLdpHelloAdjLocalConfSeqNum, vRtrLdpHelloAdjEntry=vRtrLdpHelloAdjEntry, vRtrLdpStaticFecIngLabel=vRtrLdpStaticFecIngLabel, vRtrLdpCepTdmRemoteRtpHeader=vRtrLdpCepTdmRemoteRtpHeader, vRtrLdpPolicyRowStatus=vRtrLdpPolicyRowStatus, vRtrLdpStaticFecNHType=vRtrLdpStaticFecNHType, vRtrLdpSessStatsInitIn=vRtrLdpSessStatsInitIn, vRtrLdpGeneralEntry=vRtrLdpGeneralEntry, vRtrLdpServFecOutLabelStatus3=vRtrLdpServFecOutLabelStatus3, vRtrLdpServFecVcType=vRtrLdpServFecVcType, vRtrLdpServFecInLabel5=vRtrLdpServFecInLabel5, TmnxVpnId=TmnxVpnId, vRtrLdpAddrFecOutLabelIfIndex3=vRtrLdpAddrFecOutLabelIfIndex3, tmnxLdpServFec129V6v0Group=tmnxLdpServFec129V6v0Group, vRtrLdpAdjBackoffStatus=vRtrLdpAdjBackoffStatus, PYSNMP_MODULE_ID=timetraLdpMIBModule, vRtrLdpGenImportPolicy2=vRtrLdpGenImportPolicy2, vLdpCepTdmFec129LocalSsrcId=vLdpCepTdmFec129LocalSsrcId, vRtrLdpServFecMateEndpointSdpId=vRtrLdpServFecMateEndpointSdpId, vRtrLdpHelloAdjRemoteIpAddress=vRtrLdpHelloAdjRemoteIpAddress, vRtrLdpSessPeerUdpPort=vRtrLdpSessPeerUdpPort, vRtrLdpHelloAdjMapLdpId=vRtrLdpHelloAdjMapLdpId, vRtrLdpAddrFecFecType=vRtrLdpAddrFecFecType, vRtrLdpIfStatsEntry=vRtrLdpIfStatsEntry, tmnxLdpV4v0Compliance=tmnxLdpV4v0Compliance, vRtrLdpGenTransportAddrType=vRtrLdpGenTransportAddrType, vLdpCepTdmFec129RemoteDiffTimestamp=vLdpCepTdmFec129RemoteDiffTimestamp, vRtrLdpSessPeerNumRestart=vRtrLdpSessPeerNumRestart, vRtrLdpGenLdpLsrId=vRtrLdpGenLdpLsrId, vRtrLdpTargTunnelPreference=vRtrLdpTargTunnelPreference, vRtrLdpPolicyEntry=vRtrLdpPolicyEntry, vRtrLdpSessStatsAddrOut=vRtrLdpSessStatsAddrOut, vRtrLdpAddrFecInLabelIfIndex1=vRtrLdpAddrFecInLabelIfIndex1, vRtrLdpServFecOutLabelSigStatus3=vRtrLdpServFecOutLabelSigStatus3, vRtrLdpSessStatsLabelAbortIn=vRtrLdpSessStatsLabelAbortIn, vLdpCepTdmFec129RemoteRtpHeader=vLdpCepTdmFec129RemoteRtpHeader, vRtrLdpStatsSvcFECSent=vRtrLdpStatsSvcFECSent, vRtrLdpServFecVcId=vRtrLdpServFecVcId, vRtrLdpTargTable=vRtrLdpTargTable, vRtrLdpCepTdmLocalPayloadType=vRtrLdpCepTdmLocalPayloadType, vLdpCepTdmFec129RemotePayloadSize=vLdpCepTdmFec129RemotePayloadSize, vRtrLdpAdjMaxBackoff=vRtrLdpAdjMaxBackoff, TmnxLdpGenOperDownReasonCode=TmnxLdpGenOperDownReasonCode, vRtrLdpGenExportPolicy4=vRtrLdpGenExportPolicy4, vRtrLdpIfLspId=vRtrLdpIfLspId, vRtrLdpHelloAdjIndex=vRtrLdpHelloAdjIndex, vRtrLdpCepTdmLocalRtpHeader=vRtrLdpCepTdmLocalRtpHeader, vLdpServFec129VpnId=vLdpServFec129VpnId, TmnxLdpHelloFactor=TmnxLdpHelloFactor, vRtrLdpGenMaxBackoffTime=vRtrLdpGenMaxBackoffTime, vRtrLdpSessStatsHelloOut=vRtrLdpSessStatsHelloOut, vRtrLdpSessStatsKeepaliveOut=vRtrLdpSessStatsKeepaliveOut, vRtrLdpSessStatsInitOut=vRtrLdpSessStatsInitOut, vRtrLdpStaticFecNHEntry=vRtrLdpStaticFecNHEntry, vRtrLdpServFecInLabel2=vRtrLdpServFecInLabel2, vRtrLdpPeerMinTTLValue=vRtrLdpPeerMinTTLValue, vRtrLdpGenLastChange=vRtrLdpGenLastChange, vRtrLdpAddrFecInLabelIfIndex5=vRtrLdpAddrFecInLabelIfIndex5, vRtrLdpIfAdminState=vRtrLdpIfAdminState, vRtrLdpAdjBackoffTable=vRtrLdpAdjBackoffTable, vRtrLdpGenOperState=vRtrLdpGenOperState, vRtrLdpServFecFecType=vRtrLdpServFecFecType, vRtrLdpGenPathVectorLimit=vRtrLdpGenPathVectorLimit, vRtrLdpStaticFecEntry=vRtrLdpStaticFecEntry, vRtrLdpStaticFecNumNH=vRtrLdpStaticFecNumNH, vRtrLdpAddrFecOutLabelStatus2=vRtrLdpAddrFecOutLabelStatus2, vRtrLdpInstanceNotifyReasonCode=vRtrLdpInstanceNotifyReasonCode, vRtrLdpHelloAdjType=vRtrLdpHelloAdjType, vRtrLdpHelloAdjInHelloMsgCount=vRtrLdpHelloAdjInHelloMsgCount, tmnxLdpNotifyObjsGroup=tmnxLdpNotifyObjsGroup, vRtrLdpIfStateChange=vRtrLdpIfStateChange, vRtrLdpGenBackoffTime=vRtrLdpGenBackoffTime, tmnxLdpObjs=tmnxLdpObjs, vRtrLdpGenGracefulRestart=vRtrLdpGenGracefulRestart, vRtrLdpPeerTTLLogId=vRtrLdpPeerTTLLogId, vRtrLdpServFecOutLabelSigStatus2=vRtrLdpServFecOutLabelSigStatus2, vRtrLdpServFecInLabelStatus2=vRtrLdpServFecInLabelStatus2, TmnxLdpFECType=TmnxLdpFECType, vRtrLdpServFecRemoteVlanTag=vRtrLdpServFecRemoteVlanTag, vRtrLdpStatsBadMessageLengthErrors=vRtrLdpStatsBadMessageLengthErrors, vRtrLdpAddrFecOutLabelIfIndex2=vRtrLdpAddrFecOutLabelIfIndex2, vRtrLdpAddrFecNumInLabels=vRtrLdpAddrFecNumInLabels, vRtrLdpAddrFecOutLabelNextHop2=vRtrLdpAddrFecOutLabelNextHop2, vRtrLdpServFecSdpId=vRtrLdpServFecSdpId, vRtrLdpSessPeerAddress=vRtrLdpSessPeerAddress, vRtrLdpServFecOutLabelStatus4=vRtrLdpServFecOutLabelStatus4, vRtrLdpGenUpTime=vRtrLdpGenUpTime, vLdpServFec129RemoteVlanTag=vLdpServFec129RemoteVlanTag, vRtrLdpStatsEntry=vRtrLdpStatsEntry, vRtrLdpInstanceStateChange=vRtrLdpInstanceStateChange, vRtrLdpServFecMapVcId=vRtrLdpServFecMapVcId, vRtrLdpGenExportPolicy2=vRtrLdpGenExportPolicy2, vRtrLdpIfTable=vRtrLdpIfTable, vRtrLdpAddrFecInLabelIfIndex2=vRtrLdpAddrFecInLabelIfIndex2, vRtrLdpAddrFecInLabel3=vRtrLdpAddrFecInLabel3, vRtrLdpServFecNumInLabels=vRtrLdpServFecNumInLabels, vRtrLdpStatsAddrFECRecv=vRtrLdpStatsAddrFECRecv, tmnxLdpAddrFecV5v0Group=tmnxLdpAddrFecV5v0Group, tmnxLdpGlobalV5v0Group=tmnxLdpGlobalV5v0Group, vRtrLdpCepTdmRemotePayloadSize=vRtrLdpCepTdmRemotePayloadSize, vRtrLdpGenExportPolicy1=vRtrLdpGenExportPolicy1, vRtrLdpServFecOutLabel1=vRtrLdpServFecOutLabel1, tmnxLdpServFecV5v0Group=tmnxLdpServFecV5v0Group, TmnxLdpFec129Tlv=TmnxLdpFec129Tlv, vRtrLdpServFecInLabelSigStatus4=vRtrLdpServFecInLabelSigStatus4, vRtrLdpHelloAdjRemoteConfSeqNum=vRtrLdpHelloAdjRemoteConfSeqNum, vRtrLdpIfRowStatus=vRtrLdpIfRowStatus, vRtrLdpServFecFlags=vRtrLdpServFecFlags, tmnxLdpServFecObsoletedV6v0Group=tmnxLdpServFecObsoletedV6v0Group, vRtrLdpServFecOutLabelStatus1=vRtrLdpServFecOutLabelStatus1, vRtrLdpStatsBadTlvLengthErrors=vRtrLdpStatsBadTlvLengthErrors, tmnxLdpAdjBackoffGroup=tmnxLdpAdjBackoffGroup, vRtrLdpStatsActiveSessions=vRtrLdpStatsActiveSessions, vRtrLdpSessPeerKATimeout=vRtrLdpSessPeerKATimeout, TmnxLdpKeepAliveTimeout=TmnxLdpKeepAliveTimeout, vLdpCepTdmFec129Table=vLdpCepTdmFec129Table, vRtrLdpPeerParamsTable=vRtrLdpPeerParamsTable, tmnxLdpIfV5v0Group=tmnxLdpIfV5v0Group, vRtrLdpGenTargHelloTimeout=vRtrLdpGenTargHelloTimeout, vRtrLdpServFecVpnId=vRtrLdpServFecVpnId, vRtrLdpServFecInLabelStatus5=vRtrLdpServFecInLabelStatus5, vRtrLdpAddrFecOutLabelIfIndex5=vRtrLdpAddrFecOutLabelIfIndex5, vRtrLdpServFecMapVcType=vRtrLdpServFecMapVcType, vRtrLdpStatsSessRejNoHelloErrors=vRtrLdpStatsSessRejNoHelloErrors, vRtrLdpAddrFecOutLabelStatus3=vRtrLdpAddrFecOutLabelStatus3, vRtrLdpServFecInLabelStatus3=vRtrLdpServFecInLabelStatus3, vRtrLdpStatsSessRejAdvErrors=vRtrLdpStatsSessRejAdvErrors, vRtrLdpAddrFecOutLabelStatus5=vRtrLdpAddrFecOutLabelStatus5, tmnxLdpServFecV6v0Group=tmnxLdpServFecV6v0Group, vRtrLdpSessUpTime=vRtrLdpSessUpTime, vRtrLdpIfOperState=vRtrLdpIfOperState, vRtrLdpIfEntry=vRtrLdpIfEntry, vRtrLdpSessionEntry=vRtrLdpSessionEntry, tmnxLdpGlobalV3v0Group=tmnxLdpGlobalV3v0Group, tmnxLdpSessionV5v0Group=tmnxLdpSessionV5v0Group, vRtrLdpHelloAdjLocalIpAddress=vRtrLdpHelloAdjLocalIpAddress, vRtrLdpIfHelloFactor=vRtrLdpIfHelloFactor, vRtrLdpServFecInLabel4=vRtrLdpServFecInLabel4, vRtrLdpServFecMapTable=vRtrLdpServFecMapTable, vRtrLdpAdjBackoffEntry=vRtrLdpAdjBackoffEntry, vRtrLdpAdjCurrentBackoff=vRtrLdpAdjCurrentBackoff, vLdpServFec129MapEntry=vLdpServFec129MapEntry, TmnxLdpIntTargOperDownReasonCode=TmnxLdpIntTargOperDownReasonCode, vRtrLdpSessLocalKATimeout=vRtrLdpSessLocalKATimeout, vRtrLdpCepTdmRemoteTimestampFreq=vRtrLdpCepTdmRemoteTimestampFreq, vRtrLdpGenRoutePreference=vRtrLdpGenRoutePreference, vRtrLdpSessionTable=vRtrLdpSessionTable, vRtrLdpIfIndex=vRtrLdpIfIndex, vRtrLdpCepTdmLocalTimestampFreq=vRtrLdpCepTdmLocalTimestampFreq, vRtrLdpServFecNumOutLabels=vRtrLdpServFecNumOutLabels, tmnxLdpObsoletedV5v0Group=tmnxLdpObsoletedV5v0Group, vRtrLdpServFecOutLabelStatus2=vRtrLdpServFecOutLabelStatus2, vRtrLdpStatsBadPduLengthErrors=vRtrLdpStatsBadPduLengthErrors, vRtrLdpStatsAttemptedSessions=vRtrLdpStatsAttemptedSessions, vRtrLdpServFecOutLabelSigStatus4=vRtrLdpServFecOutLabelSigStatus4, vLdpServFec129OutLabelStatus1=vLdpServFec129OutLabelStatus1, vRtrLdpGenLoopDetectCapable=vRtrLdpGenLoopDetectCapable, vRtrLdpIfNotifyReasonCode=vRtrLdpIfNotifyReasonCode, vRtrLdpGenExportPolicy3=vRtrLdpGenExportPolicy3, vRtrLdpAddrFecIpMask=vRtrLdpAddrFecIpMask, vRtrLdpSessStatsFECRecv=vRtrLdpSessStatsFECRecv, vRtrLdpTargExportPolicy3=vRtrLdpTargExportPolicy3, vRtrLdpPeerAuthKey=vRtrLdpPeerAuthKey, TmnxLdpFECPolicy=TmnxLdpFECPolicy, tmnxLdpNotificationObjects=tmnxLdpNotificationObjects, tmnxLdpNotificationGroup=tmnxLdpNotificationGroup, vRtrLdpNotifyLocalGroupID=vRtrLdpNotifyLocalGroupID, vRtrLdpSessStatsAddrWithdrawOut=vRtrLdpSessStatsAddrWithdrawOut, vLdpServFec129AgiTlv=vLdpServFec129AgiTlv, vRtrLdpServFecInLabelSigStatus2=vRtrLdpServFecInLabelSigStatus2, vRtrLdpSvcIdMismatch=vRtrLdpSvcIdMismatch, vRtrLdpGenRetentionMode=vRtrLdpGenRetentionMode, vRtrLdpSessStatsNotificationOut=vRtrLdpSessStatsNotificationOut, vRtrLdpAddrFecOutLabelNextHop1=vRtrLdpAddrFecOutLabelNextHop1, vRtrLdpAddrFecOutLabel1=vRtrLdpAddrFecOutLabel1, TmnxLabelStatus=TmnxLabelStatus, vRtrLdpHelloAdjOutHelloMsgCount=vRtrLdpHelloAdjOutHelloMsgCount, vRtrLdpHelloAdjMapEntry=vRtrLdpHelloAdjMapEntry, vRtrLdpSessStatsLabelMappingIn=vRtrLdpSessStatsLabelMappingIn, TmnxLdpHelloTimeout=TmnxLdpHelloTimeout, vRtrLdpPeerParamsEntry=vRtrLdpPeerParamsEntry, vRtrLdpHelloAdjRemoteHelloTimeout=vRtrLdpHelloAdjRemoteHelloTimeout, vRtrLdpGenExportPolicy5=vRtrLdpGenExportPolicy5, vRtrLdpAddrFecInLabelIfIndex3=vRtrLdpAddrFecInLabelIfIndex3, tmnxLdpNotifications=tmnxLdpNotifications, tmnxLdpServFecV4v0Group=tmnxLdpServFecV4v0Group, vRtrLdpStaticFecRowStatus=vRtrLdpStaticFecRowStatus, vRtrLdpCepTdmRemoteSigPkts=vRtrLdpCepTdmRemoteSigPkts, vRtrLdpServFecOutLabelSigStatus1=vRtrLdpServFecOutLabelSigStatus1, vRtrLdpSessFtRecovTimeRemaining=vRtrLdpSessFtRecovTimeRemaining, TmnxLdpKeepAliveFactor=TmnxLdpKeepAliveFactor, vRtrLdpHelloAdjEntityIndex=vRtrLdpHelloAdjEntityIndex, vRtrLdpAddrFecInLabelStatus3=vRtrLdpAddrFecInLabelStatus3, vRtrLdpStatsActiveTargSessions=vRtrLdpStatsActiveTargSessions, tmnxLdpCepTdmFecV6v0Group=tmnxLdpCepTdmFecV6v0Group, vRtrLdpStatsMalformedTlvValueErrors=vRtrLdpStatsMalformedTlvValueErrors, vRtrLdpGenKeepAliveTimeout=vRtrLdpGenKeepAliveTimeout, TmnxLdpLabelDistMethod=TmnxLdpLabelDistMethod, vRtrLdpStaticFecNHIndex=vRtrLdpStaticFecNHIndex, vLdpServFec129InLabelStatus1=vLdpServFec129InLabelStatus1, vRtrLdpGenTargKeepAliveTimeout=vRtrLdpGenTargKeepAliveTimeout, vRtrLdpGenGRNbrLiveTime=vRtrLdpGenGRNbrLiveTime, vLdpCepTdmFec129LocalTimestampFreq=vLdpCepTdmFec129LocalTimestampFreq, vRtrLdpPeerAuth=vRtrLdpPeerAuth, vLdpCepTdmFec129RemoteSigPkts=vLdpCepTdmFec129RemoteSigPkts, vRtrLdpSessStatsLabelWithdrawOut=vRtrLdpSessStatsLabelWithdrawOut, vRtrLdpGenControlMode=vRtrLdpGenControlMode, vRtrLdpCepTdmLocalSsrcId=vRtrLdpCepTdmLocalSsrcId, vRtrLdpPolicyName=vRtrLdpPolicyName, vRtrLdpSessAdjacencyType=vRtrLdpSessAdjacencyType, vRtrLdpSessFtReconTimeRemaining=vRtrLdpSessFtReconTimeRemaining, vRtrLdpGroupIdMismatch=vRtrLdpGroupIdMismatch)
mibBuilder.exportSymbols("ALCATEL-IND1-TIMETRA-LDP-MIB", vRtrLdpAdjInitBackoff=vRtrLdpAdjInitBackoff, vRtrLdpAddrFecInLabel5=vRtrLdpAddrFecInLabel5, vRtrLdpTargEntry=vRtrLdpTargEntry, vRtrLdpServFecEntry=vRtrLdpServFecEntry, vLdpServFec129ServType=vLdpServFec129ServType, vLdpServFec129MapVcType=vLdpServFec129MapVcType, vRtrLdpSessLocalLdpId=vRtrLdpSessLocalLdpId, vRtrLdpAddrFecInLabelStatus5=vRtrLdpAddrFecInLabelStatus5, vRtrLdpServFecMateEndpointVcId=vRtrLdpServFecMateEndpointVcId, vRtrLdpServFecOutLabel4=vRtrLdpServFecOutLabel4, vRtrLdpPeerAuthKeyChain=vRtrLdpPeerAuthKeyChain, vRtrLdpCepTdmRemoteCasTrunk=vRtrLdpCepTdmRemoteCasTrunk, vRtrLdpSessStatsAddrWithdrawIn=vRtrLdpSessStatsAddrWithdrawIn, vRtrLdpAddrFecOutLabelNextHop5=vRtrLdpAddrFecOutLabelNextHop5, vRtrLdpGenTrustList=vRtrLdpGenTrustList, vRtrLdpSessEntityIndex=vRtrLdpSessEntityIndex, vLdpServFec129TgtAiiTlv=vLdpServFec129TgtAiiTlv, vRtrLdpAddrFecFlags=vRtrLdpAddrFecFlags, vRtrLdpServFecMapEntry=vRtrLdpServFecMapEntry, tmnxLdpAddrFecGroup=tmnxLdpAddrFecGroup, vRtrLdpStaticFecNHIpAddr=vRtrLdpStaticFecNHIpAddr, vRtrLdpAddrFecInLabelStatus2=vRtrLdpAddrFecInLabelStatus2, vRtrLdpCepTdmRemoteSsrcId=vRtrLdpCepTdmRemoteSsrcId, vRtrLdpAddrFecOutLabelIfIndex4=vRtrLdpAddrFecOutLabelIfIndex4, vLdpServFec129NumOutLabels=vLdpServFec129NumOutLabels, vRtrLdpAddrFecMapIpPrefix=vRtrLdpAddrFecMapIpPrefix, vRtrLdpStaticFecIpPrefix=vRtrLdpStaticFecIpPrefix, vRtrLdpGenImportPolicy4=vRtrLdpGenImportPolicy4, vRtrLdpCepTdmLocalBitrate=vRtrLdpCepTdmLocalBitrate, vRtrLdpCepTdmLocalCasTrunk=vRtrLdpCepTdmLocalCasTrunk, vRtrLdpTargImportPolicy1=vRtrLdpTargImportPolicy1, vLdpServFec129RemoteMaxCellConcat=vLdpServFec129RemoteMaxCellConcat, vLdpServFec129NumInLabels=vLdpServFec129NumInLabels, vRtrLdpIfPassiveMode=vRtrLdpIfPassiveMode, vRtrLdpTargImportPolicy3=vRtrLdpTargImportPolicy3, vRtrLdpAddrFecOutLabelIfIndex1=vRtrLdpAddrFecOutLabelIfIndex1, vRtrLdpAddrFecOutLabel5=vRtrLdpAddrFecOutLabel5, vRtrLdpAddrFecInLabelIfIndex4=vRtrLdpAddrFecInLabelIfIndex4, vRtrLdpPolicyTable=vRtrLdpPolicyTable, vRtrLdpServFecInLabelSigStatus3=vRtrLdpServFecInLabelSigStatus3, vRtrLdpStatsOperDownEvents=vRtrLdpStatsOperDownEvents, vRtrLdpTargImportPolicy5=vRtrLdpTargImportPolicy5, vLdpServFec129OutLabelSigStatus1=vLdpServFec129OutLabelSigStatus1, vRtrLdpGenHelloTimeout=vRtrLdpGenHelloTimeout, vRtrLdpAddrFecLspId=vRtrLdpAddrFecLspId, vRtrLdpSessStatsLabelRequestOut=vRtrLdpSessStatsLabelRequestOut, vRtrLdpCepTdmLocalPayloadSize=vRtrLdpCepTdmLocalPayloadSize, vRtrLdpStatsAddrFECSent=vRtrLdpStatsAddrFECSent, tmnxLdpObsoleteNotificationGroup=tmnxLdpObsoleteNotificationGroup, vLdpCepTdmFec129Entry=vLdpCepTdmFec129Entry, vRtrLdpGenTargPassiveMode=vRtrLdpGenTargPassiveMode, vRtrLdpServFecRemoteMaxCellConcat=vRtrLdpServFecRemoteMaxCellConcat, vRtrLdpAddrFecInLabel2=vRtrLdpAddrFecInLabel2, vRtrLdpStatsKeepAliveExpiredErrors=vRtrLdpStatsKeepAliveExpiredErrors, vRtrLdpIfStatsTable=vRtrLdpIfStatsTable, TmnxLdpFECFlags=TmnxLdpFECFlags, vRtrLdpServFecInLabelStatus4=vRtrLdpServFecInLabelStatus4, vLdpCepTdmFec129LocalPayloadSize=vLdpCepTdmFec129LocalPayloadSize, vRtrLdpServFecOutLabel2=vRtrLdpServFecOutLabel2, vRtrLdpServFecInLabel1=vRtrLdpServFecInLabel1, vRtrLdpSessStatsLabelMappingOut=vRtrLdpSessStatsLabelMappingOut, tmnxLdpNotifyPrefix=tmnxLdpNotifyPrefix, vRtrLdpGenDistMethod=vRtrLdpGenDistMethod, vRtrLdpServFecOutLabel3=vRtrLdpServFecOutLabel3, vLdpCepTdmFec129RemotePayloadType=vLdpCepTdmFec129RemotePayloadType, vRtrLdpStatsSessRejMaxPduErrors=vRtrLdpStatsSessRejMaxPduErrors, vRtrLdpSessLastRestartTime=vRtrLdpSessLastRestartTime, vRtrLdpServFecMapFecType=vRtrLdpServFecMapFecType, vRtrLdpServFecTable=vRtrLdpServFecTable, vRtrLdpTargImportPolicy4=vRtrLdpTargImportPolicy4, vRtrLdpGenDeaggregateFec=vRtrLdpGenDeaggregateFec, vRtrLdpAddrFecMapIpMask=vRtrLdpAddrFecMapIpMask, vRtrLdpGenImportPolicy5=vRtrLdpGenImportPolicy5, vLdpCepTdmFec129LocalRtpHeader=vLdpCepTdmFec129LocalRtpHeader, vRtrLdpGenHelloFactor=vRtrLdpGenHelloFactor, vLdpCepTdmFec129LocalDiffTimestamp=vLdpCepTdmFec129LocalDiffTimestamp, vRtrLdpServFecServId=vRtrLdpServFecServId, vRtrLdpServFecOutLabel5=vRtrLdpServFecOutLabel5, vRtrLdpNotifyLocalServiceID=vRtrLdpNotifyLocalServiceID, vRtrLdpSessStatsAddrIn=vRtrLdpSessStatsAddrIn, vRtrLdpAddrFecMapTable=vRtrLdpAddrFecMapTable, vRtrLdpGenKeepAliveFactor=vRtrLdpGenKeepAliveFactor, vRtrLdpAddrFecInLabelStatus4=vRtrLdpAddrFecInLabelStatus4, tmnxLdpCompliances=tmnxLdpCompliances, vRtrLdpServFecLocalMTU=vRtrLdpServFecLocalMTU, vRtrLdpGenCreateTime=vRtrLdpGenCreateTime, vRtrLdpStatsShutdownNotifSent=vRtrLdpStatsShutdownNotifSent, vRtrLdpIfTransportAddrType=vRtrLdpIfTransportAddrType, vRtrLdpHelloAdjHoldTimeRemaining=vRtrLdpHelloAdjHoldTimeRemaining, vLdpServFec129MapTgtAiiTlv=vLdpServFec129MapTgtAiiTlv, vRtrLdpSessLocalAddress=vRtrLdpSessLocalAddress, vRtrLdpStatsInactiveInterfaces=vRtrLdpStatsInactiveInterfaces, vRtrLdpStaticFecNextNHIndex=vRtrLdpStaticFecNextNHIndex, TmnxLdpAdjacencyType=TmnxLdpAdjacencyType, vRtrLdpGenImportPolicy3=vRtrLdpGenImportPolicy3, vLdpCepTdmFec129RemoteSsrcId=vLdpCepTdmFec129RemoteSsrcId, tmnxLdpGroups=tmnxLdpGroups, tmnxLdpV5v0Compliance=tmnxLdpV5v0Compliance, vRtrLdpServFecRemoteMTU=vRtrLdpServFecRemoteMTU, vRtrLdpAddrFecOutLabel3=vRtrLdpAddrFecOutLabel3, vRtrLdpStaticFecNHEgrLabel=vRtrLdpStaticFecNHEgrLabel, vRtrLdpSessStatsLabelReleaseIn=vRtrLdpSessStatsLabelReleaseIn, vRtrLdpSessMaxPduLength=vRtrLdpSessMaxPduLength, vRtrLdpHelloAdjLocalHelloTimeout=vRtrLdpHelloAdjLocalHelloTimeout, vRtrLdpSessStatsLabelRequestIn=vRtrLdpSessStatsLabelRequestIn, vRtrLdpAddrFecIpPrefix=vRtrLdpAddrFecIpPrefix, vRtrLdpIfTableSpinlock=vRtrLdpIfTableSpinlock, vRtrLdpSessLoopDetectForPV=vRtrLdpSessLoopDetectForPV, vRtrLdpIfOperDownReason=vRtrLdpIfOperDownReason, vRtrLdpSessStatsLabelReleaseOut=vRtrLdpSessStatsLabelReleaseOut, vRtrLdpIfInheritance=vRtrLdpIfInheritance, vRtrLdpTargExportPolicy1=vRtrLdpTargExportPolicy1, vRtrLdpHelloAdjLocalLdpId=vRtrLdpHelloAdjLocalLdpId, vRtrLdpSessStatsTargAdj=vRtrLdpSessStatsTargAdj, vRtrLdpSessAdvertise=vRtrLdpSessAdvertise, vRtrLdpSessStatsHelloIn=vRtrLdpSessStatsHelloIn, vRtrLdpSessKAHoldTimeRemaining=vRtrLdpSessKAHoldTimeRemaining, vRtrLdpStatsSvcFECRecv=vRtrLdpStatsSvcFECRecv, vRtrLdpStatsShutdownNotifRecv=vRtrLdpStatsShutdownNotifRecv, vLdpServFec129SrcAiiTlv=vLdpServFec129SrcAiiTlv, vRtrLdpIfKeepAliveFactor=vRtrLdpIfKeepAliveFactor, vRtrLdpAddrFecInLabel1=vRtrLdpAddrFecInLabel1, vRtrLdpStatsActiveInterfaces=vRtrLdpStatsActiveInterfaces, vLdpServFec129RemoteMTU=vLdpServFec129RemoteMTU, vRtrLdpHelloAdjMapTable=vRtrLdpHelloAdjMapTable, vRtrLdpAddrFecOutLabel2=vRtrLdpAddrFecOutLabel2, vRtrLdpPolicyIndex=vRtrLdpPolicyIndex, vRtrLdpSessFtRecoveryTimeNego=vRtrLdpSessFtRecoveryTimeNego, vRtrLdpIfAutoCreate=vRtrLdpIfAutoCreate, vRtrLdpGenGRMaxRecoveryTime=vRtrLdpGenGRMaxRecoveryTime, vRtrLdpAddrFecInLabelStatus1=vRtrLdpAddrFecInLabelStatus1, tmnxLdpIfV3v0Group=tmnxLdpIfV3v0Group, vLdpCepTdmFec129LocalPayloadType=vLdpCepTdmFec129LocalPayloadType, vRtrLdpIfLastChange=vRtrLdpIfLastChange, vRtrLdpIfTunneling=vRtrLdpIfTunneling, vRtrLdpAddrFecEntry=vRtrLdpAddrFecEntry, vRtrLdpStaticFecIpMask=vRtrLdpStaticFecIpMask, vRtrLdpIfKeepAliveTimeout=vRtrLdpIfKeepAliveTimeout, vRtrLdpSessRestartHelperState=vRtrLdpSessRestartHelperState, vRtrLdpServFecLocalVlanTag=vRtrLdpServFecLocalVlanTag, vRtrLdpNotifyRemoteServiceID=vRtrLdpNotifyRemoteServiceID, vRtrLdpCepTdmLocalDiffTimestamp=vRtrLdpCepTdmLocalDiffTimestamp, vRtrLdpCepTdmLocalSigPkts=vRtrLdpCepTdmLocalSigPkts, vLdpServFec129InLabelSigStatus1=vLdpServFec129InLabelSigStatus1, tmnxLdpConformance=tmnxLdpConformance, vLdpServFec129LocalVlanTag=vLdpServFec129LocalVlanTag, vRtrLdpSessStatsKeepaliveIn=vRtrLdpSessStatsKeepaliveIn, vRtrLdpSessProtocolVersion=vRtrLdpSessProtocolVersion, vRtrLdpAddrFecMapFecType=vRtrLdpAddrFecMapFecType, vRtrLdpSessPathVectorLimit=vRtrLdpSessPathVectorLimit, vRtrLdpNotifyRemoteGroupID=vRtrLdpNotifyRemoteGroupID, vRtrLdpStatsTable=vRtrLdpStatsTable, vRtrLdpSessState=vRtrLdpSessState, vRtrLdpTargImportPolicy2=vRtrLdpTargImportPolicy2, vRtrLdpServFecInLabel3=vRtrLdpServFecInLabel3, vRtrLdpStatsSessRejLabelRangeErrors=vRtrLdpStatsSessRejLabelRangeErrors, vRtrLdpServFecLocalMaxCellConcat=vRtrLdpServFecLocalMaxCellConcat, vLdpServFec129MapSrcAiiTlv=vLdpServFec129MapSrcAiiTlv, vLdpServFec129InLabel1=vLdpServFec129InLabel1, vLdpServFec129LocalMTU=vLdpServFec129LocalMTU, vRtrLdpStatsActiveAdjacencies=vRtrLdpStatsActiveAdjacencies, timetraLdpMIBModule=timetraLdpMIBModule, vRtrLdpSessStatsNotificationIn=vRtrLdpSessStatsNotificationIn, vRtrLdpGenPropagatePolicy=vRtrLdpGenPropagatePolicy, vRtrLdpAddrFecInLabel4=vRtrLdpAddrFecInLabel4, vRtrLdpGenTunnelDownDampTime=vRtrLdpGenTunnelDownDampTime, vRtrLdpSessionStatsEntry=vRtrLdpSessionStatsEntry, vLdpServFec129ServId=vLdpServFec129ServId, vRtrLdpGeneralTable=vRtrLdpGeneralTable, vRtrLdpStaticFecTable=vRtrLdpStaticFecTable, vRtrLdpStatsInactiveTargSessions=vRtrLdpStatsInactiveTargSessions, vRtrLdpStaticFecOperIngLabel=vRtrLdpStaticFecOperIngLabel, vLdpCepTdmFec129LocalBitrate=vLdpCepTdmFec129LocalBitrate, vRtrLdpServFecInLabelSigStatus1=vRtrLdpServFecInLabelSigStatus1, vLdpCepTdmFec129RemoteCasTrunk=vLdpCepTdmFec129RemoteCasTrunk, vRtrLdpServFecInLabelSigStatus5=vRtrLdpServFecInLabelSigStatus5, vLdpServFec129OutLabel1=vLdpServFec129OutLabel1, vRtrLdpIfTunnelingLspEntry=vRtrLdpIfTunnelingLspEntry, vLdpServFec129Table=vLdpServFec129Table, tmnxLdpObsoleteObjsGroup=tmnxLdpObsoleteObjsGroup, vRtrLdpGenHopLimit=vRtrLdpGenHopLimit, vRtrLdpSessLocalUdpPort=vRtrLdpSessLocalUdpPort, vLdpServFec129MapTable=vLdpServFec129MapTable, vRtrLdpSessPeerTcpPort=vRtrLdpSessPeerTcpPort, vLdpCepTdmFec129RemoteBitrate=vLdpCepTdmFec129RemoteBitrate, vRtrLdpStatsBadLdpIdentifierErrors=vRtrLdpStatsBadLdpIdentifierErrors, vRtrLdpPeerAddress=vRtrLdpPeerAddress, vRtrLdpIfExistingAdjacencies=vRtrLdpIfExistingAdjacencies, vRtrLdpIfMaxBackoffTime=vRtrLdpIfMaxBackoffTime, vRtrLdpIfLspRowStatus=vRtrLdpIfLspRowStatus, vRtrLdpGenImportPolicy1=vRtrLdpGenImportPolicy1, vRtrLdpAddrFecTable=vRtrLdpAddrFecTable, TmnxLdpBackoffTime=TmnxLdpBackoffTime, vRtrLdpHelloAdjTable=vRtrLdpHelloAdjTable, vRtrLdpCepTdmFecTable=vRtrLdpCepTdmFecTable, vLdpCepTdmFec129LocalSigPkts=vLdpCepTdmFec129LocalSigPkts, vRtrLdpSessStatsFECSent=vRtrLdpSessStatsFECSent, vRtrLdpIfBackoffTime=vRtrLdpIfBackoffTime, vRtrLdpTargExportPolicy2=vRtrLdpTargExportPolicy2, vRtrLdpSessLabelDistMethod=vRtrLdpSessLabelDistMethod, vRtrLdpCepTdmRemoteDiffTimestamp=vRtrLdpCepTdmRemoteDiffTimestamp, vRtrLdpServFecOutLabelSigStatus5=vRtrLdpServFecOutLabelSigStatus5, vRtrLdpAddrFecOutLabelStatus4=vRtrLdpAddrFecOutLabelStatus4, vRtrLdpCepTdmRemotePayloadType=vRtrLdpCepTdmRemotePayloadType, vRtrLdpServFecInLabelStatus1=vRtrLdpServFecInLabelStatus1, vRtrLdpGenTargetedSessions=vRtrLdpGenTargetedSessions, vRtrLdpServFecServType=vRtrLdpServFecServType, vLdpServFec129SdpId=vLdpServFec129SdpId, vRtrLdpAdjWaitingTime=vRtrLdpAdjWaitingTime)
