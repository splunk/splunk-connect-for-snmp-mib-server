#
# PySNMP MIB module ASCEND-MIBDBA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBDBA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:10:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Counter64, NotificationType, ModuleIdentity, TimeTicks, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, iso, IpAddress, Bits, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Counter64", "NotificationType", "ModuleIdentity", "TimeTicks", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "iso", "IpAddress", "Bits", "Unsigned32", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

mibdBAProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 71))
mibdBAProfileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 71, 1), )
if mibBuilder.loadTexts: mibdBAProfileTable.setStatus('mandatory')
mibdBAProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1), ).setIndexNames((0, "ASCEND-MIBDBA-MIB", "dBAProfile-Shelf-o"), (0, "ASCEND-MIBDBA-MIB", "dBAProfile-Slot-o"), (0, "ASCEND-MIBDBA-MIB", "dBAProfile-Item-o"), (0, "ASCEND-MIBDBA-MIB", "dBAProfile-LogicalItem-o"))
if mibBuilder.loadTexts: mibdBAProfileEntry.setStatus('mandatory')
dBAProfile_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 1), Integer32()).setLabel("dBAProfile-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: dBAProfile_Shelf_o.setStatus('mandatory')
dBAProfile_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 2), Integer32()).setLabel("dBAProfile-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: dBAProfile_Slot_o.setStatus('mandatory')
dBAProfile_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 3), Integer32()).setLabel("dBAProfile-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: dBAProfile_Item_o.setStatus('mandatory')
dBAProfile_LogicalItem_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 4), Integer32()).setLabel("dBAProfile-LogicalItem-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: dBAProfile_LogicalItem_o.setStatus('mandatory')
dBAProfile_LogicalAddress_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("dBAProfile-LogicalAddress-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_LogicalAddress_PhysicalAddress_Shelf.setStatus('mandatory')
dBAProfile_LogicalAddress_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("dBAProfile-LogicalAddress-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_LogicalAddress_PhysicalAddress_Slot.setStatus('mandatory')
dBAProfile_LogicalAddress_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 7), Integer32()).setLabel("dBAProfile-LogicalAddress-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_LogicalAddress_PhysicalAddress_ItemNumber.setStatus('mandatory')
dBAProfile_LogicalAddress_LogicalItem = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 8), Integer32()).setLabel("dBAProfile-LogicalAddress-LogicalItem").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_LogicalAddress_LogicalItem.setStatus('mandatory')
dBAProfile_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 9), DisplayString()).setLabel("dBAProfile-Name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_Name.setStatus('mandatory')
dBAProfile_PhoneNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 10), DisplayString()).setLabel("dBAProfile-PhoneNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_PhoneNumber.setStatus('mandatory')
dBAProfile_BillingNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 11), DisplayString()).setLabel("dBAProfile-BillingNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_BillingNumber.setStatus('mandatory')
dBAProfile_oCallType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("callChNBy", 1), ("callChNByBonding", 2), ("callCh1Ch", 3), ("callCh2Ch", 4), ("callChFt1", 5), ("callChFt1Aim", 6), ("callChFt1Bo", 7), ("callChFt1StaticBo", 8), ("numberOfCallChTypes", 9)))).setLabel("dBAProfile-oCallType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_oCallType.setStatus('mandatory')
dBAProfile_oCallMgm = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("callMgmtStaticRate", 1), ("callMgmtManualRate", 2), ("callMgmtDynamicRate", 3), ("callMgmtDeltaRate", 4), ("callMgmtTimeOfDay", 5), ("callMgmtOneOfEight", 6), ("callMgmtOneOfFourty", 7), ("callMgmtBonding0", 8), ("callMgmtBonding1", 9), ("callMgmtBonding2", 10), ("callMgmtBonding3", 11), ("numberOfCallMgmtProtocols", 12)))).setLabel("dBAProfile-oCallMgm").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_oCallMgm.setStatus('mandatory')
dBAProfile_oDataSvc = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 255, 263))).clone(namedValues=NamedValues(("voice", 1), ("n-56kRestricted", 2), ("n-64kClear", 3), ("n-64kRestricted", 4), ("n-56kClear", 5), ("n-384kRestricted", 6), ("n-384kClear", 7), ("n-1536kClear", 8), ("n-1536kRestricted", 9), ("n-128kClear", 10), ("n-192kClear", 11), ("n-256kClear", 12), ("n-320kClear", 13), ("dws384Clear", 14), ("n-448Clear", 15), ("n-512Clear", 16), ("n-576Clear", 17), ("n-640Clear", 18), ("n-704Clear", 19), ("n-768Clear", 20), ("n-832Clear", 21), ("n-896Clear", 22), ("n-960Clear", 23), ("n-1024Clear", 24), ("n-1088Clear", 25), ("n-1152Clear", 26), ("n-1216Clear", 27), ("n-1280Clear", 28), ("n-1344Clear", 29), ("n-1408Clear", 30), ("n-1472Clear", 31), ("n-1600Clear", 32), ("n-1664Clear", 33), ("n-1728Clear", 34), ("n-1792Clear", 35), ("n-1856Clear", 36), ("n-1920Clear", 37), ("x30RestrictedBearer", 39), ("v110ClearBearer", 40), ("n-64kX30Restricted", 41), ("n-56kV110Clear", 42), ("modem", 43), ("atmodem", 44), ("n-2456kV110", 46), ("n-4856kV110", 47), ("n-9656kV110", 48), ("n-19256kV110", 49), ("n-38456kV110", 50), ("n-2456krV110", 51), ("n-4856krV110", 52), ("n-9656krV110", 53), ("n-19256krV110", 54), ("n-38456krV110", 55), ("n-2464kV110", 56), ("n-4864kV110", 57), ("n-9664kV110", 58), ("n-19264kV110", 59), ("n-38464kV110", 60), ("n-2464krV110", 61), ("n-4864krV110", 62), ("n-9664krV110", 63), ("n-19264krV110", 64), ("n-38464krV110", 65), ("v32", 66), ("phs64k", 67), ("voiceOverIp", 68), ("atmSvc", 70), ("frameRelaySvc", 71), ("vpnTunnel", 72), ("wormarq", 73), ("n-14456kV110", 74), ("n-28856kV110", 75), ("n-14456krV110", 76), ("n-28856krV110", 77), ("n-14464kV110", 78), ("n-28864kV110", 79), ("n-14464krV110", 80), ("n-28864krV110", 81), ("modem31khzAudio", 82), ("x25Svc", 83), ("n-144kClear", 255), ("iptoip", 263)))).setLabel("dBAProfile-oDataSvc").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_oDataSvc.setStatus('mandatory')
dBAProfile_Force56 = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("dBAProfile-Force56").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_Force56.setStatus('mandatory')
dBAProfile_BaseChannelCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 16), Integer32()).setLabel("dBAProfile-BaseChannelCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_BaseChannelCount.setStatus('mandatory')
dBAProfile_IncrementChannelCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 17), Integer32()).setLabel("dBAProfile-IncrementChannelCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_IncrementChannelCount.setStatus('mandatory')
dBAProfile_DecrementChannelCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 18), Integer32()).setLabel("dBAProfile-DecrementChannelCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_DecrementChannelCount.setStatus('mandatory')
dBAProfile_oFailAction = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disc", 1), ("reduce", 2), ("retry", 3), ("numberOfFailureActions", 4)))).setLabel("dBAProfile-oFailAction").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_oFailAction.setStatus('mandatory')
dBAProfile_BitInversionRequired = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("dBAProfile-BitInversionRequired").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_BitInversionRequired.setStatus('mandatory')
dBAProfile_Ft1Caller = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("dBAProfile-Ft1Caller").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_Ft1Caller.setStatus('mandatory')
dBAProfile_Ft1Timeout = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 22), Integer32()).setLabel("dBAProfile-Ft1Timeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_Ft1Timeout.setStatus('mandatory')
dBAProfile_CallByCallID = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 23), Integer32()).setLabel("dBAProfile-CallByCallID").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_CallByCallID.setStatus('mandatory')
dBAProfile_CalledNumberType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 24), Integer32()).setLabel("dBAProfile-CalledNumberType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_CalledNumberType.setStatus('mandatory')
dBAProfile_UnknownPlanUnknown = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("dBAProfile-UnknownPlanUnknown").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_UnknownPlanUnknown.setStatus('mandatory')
dBAProfile_LocalPlanIsdn = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("dBAProfile-LocalPlanIsdn").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_LocalPlanIsdn.setStatus('mandatory')
dBAProfile_TransitNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 27), DisplayString()).setLabel("dBAProfile-TransitNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_TransitNumber.setStatus('mandatory')
dBAProfile_oAutoBERT = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("off", 1), ("n-15Sec", 2), ("n-30Sec", 3), ("n-60Sec", 4), ("n-90Sec", 5), ("n-120Sec", 6), ("numberOfBertTestOptions", 7)))).setLabel("dBAProfile-oAutoBERT").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_oAutoBERT.setStatus('mandatory')
dBAProfile_TimedCall = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("dBAProfile-TimedCall").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_TimedCall.setStatus('mandatory')
dBAProfile_FlagIdle = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("dBAProfile-FlagIdle").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_FlagIdle.setStatus('mandatory')
dBAProfile_oDynAlg = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("constant", 1), ("linear", 2), ("quadratic", 3)))).setLabel("dBAProfile-oDynAlg").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_oDynAlg.setStatus('mandatory')
dBAProfile_SecondsOfHistory = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 32), Integer32()).setLabel("dBAProfile-SecondsOfHistory").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_SecondsOfHistory.setStatus('mandatory')
dBAProfile_AddSecondsOfPersistence = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 33), Integer32()).setLabel("dBAProfile-AddSecondsOfPersistence").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_AddSecondsOfPersistence.setStatus('mandatory')
dBAProfile_RemoveSecondsOfPersistence = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 34), Integer32()).setLabel("dBAProfile-RemoveSecondsOfPersistence").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_RemoveSecondsOfPersistence.setStatus('mandatory')
dBAProfile_NailedUpGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 35), Integer32()).setLabel("dBAProfile-NailedUpGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_NailedUpGroup.setStatus('mandatory')
dBAProfile_CallPassword = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 36), DisplayString()).setLabel("dBAProfile-CallPassword").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_CallPassword.setStatus('mandatory')
dBAProfile_DbaPriNumberingPlanId = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 37), Integer32()).setLabel("dBAProfile-DbaPriNumberingPlanId").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_DbaPriNumberingPlanId.setStatus('mandatory')
dBAProfile_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("dBAProfile-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_Action_o.setStatus('mandatory')
mibdBAProfile_TimerPeriodParametersTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 71, 2), ).setLabel("mibdBAProfile-TimerPeriodParametersTable")
if mibBuilder.loadTexts: mibdBAProfile_TimerPeriodParametersTable.setStatus('mandatory')
mibdBAProfile_TimerPeriodParametersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 71, 2, 1), ).setLabel("mibdBAProfile-TimerPeriodParametersEntry").setIndexNames((0, "ASCEND-MIBDBA-MIB", "dBAProfile-TimerPeriodParameters-Shelf-o"), (0, "ASCEND-MIBDBA-MIB", "dBAProfile-TimerPeriodParameters-Slot-o"), (0, "ASCEND-MIBDBA-MIB", "dBAProfile-TimerPeriodParameters-Item-o"), (0, "ASCEND-MIBDBA-MIB", "dBAProfile-TimerPeriodParameters-LogicalItem-o"), (0, "ASCEND-MIBDBA-MIB", "dBAProfile-TimerPeriodParameters-Index-o"))
if mibBuilder.loadTexts: mibdBAProfile_TimerPeriodParametersEntry.setStatus('mandatory')
dBAProfile_TimerPeriodParameters_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 2, 1, 1), Integer32()).setLabel("dBAProfile-TimerPeriodParameters-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: dBAProfile_TimerPeriodParameters_Shelf_o.setStatus('mandatory')
dBAProfile_TimerPeriodParameters_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 2, 1, 2), Integer32()).setLabel("dBAProfile-TimerPeriodParameters-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: dBAProfile_TimerPeriodParameters_Slot_o.setStatus('mandatory')
dBAProfile_TimerPeriodParameters_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 2, 1, 3), Integer32()).setLabel("dBAProfile-TimerPeriodParameters-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: dBAProfile_TimerPeriodParameters_Item_o.setStatus('mandatory')
dBAProfile_TimerPeriodParameters_LogicalItem_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 2, 1, 4), Integer32()).setLabel("dBAProfile-TimerPeriodParameters-LogicalItem-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: dBAProfile_TimerPeriodParameters_LogicalItem_o.setStatus('mandatory')
dBAProfile_TimerPeriodParameters_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 2, 1, 5), Integer32()).setLabel("dBAProfile-TimerPeriodParameters-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: dBAProfile_TimerPeriodParameters_Index_o.setStatus('mandatory')
dBAProfile_TimerPeriodParameters_oActiv = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("shutdown", 3)))).setLabel("dBAProfile-TimerPeriodParameters-oActiv").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_TimerPeriodParameters_oActiv.setStatus('mandatory')
dBAProfile_TimerPeriodParameters_StartingTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 2, 1, 7), Integer32()).setLabel("dBAProfile-TimerPeriodParameters-StartingTime").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_TimerPeriodParameters_StartingTime.setStatus('mandatory')
dBAProfile_TimerPeriodParameters_MinimumChannelCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 2, 1, 8), Integer32()).setLabel("dBAProfile-TimerPeriodParameters-MinimumChannelCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_TimerPeriodParameters_MinimumChannelCount.setStatus('mandatory')
dBAProfile_TimerPeriodParameters_MaximumChannelCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 2, 1, 9), Integer32()).setLabel("dBAProfile-TimerPeriodParameters-MaximumChannelCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_TimerPeriodParameters_MaximumChannelCount.setStatus('mandatory')
dBAProfile_TimerPeriodParameters_TargetUtilization = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 2, 1, 10), Integer32()).setLabel("dBAProfile-TimerPeriodParameters-TargetUtilization").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_TimerPeriodParameters_TargetUtilization.setStatus('mandatory')
dBAProfile_TimerPeriodParameters_X25chanTargetUtilization = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 71, 2, 1, 11), Integer32()).setLabel("dBAProfile-TimerPeriodParameters-X25chanTargetUtilization").setMaxAccess("readwrite")
if mibBuilder.loadTexts: dBAProfile_TimerPeriodParameters_X25chanTargetUtilization.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-MIBDBA-MIB", dBAProfile_TimerPeriodParameters_LogicalItem_o=dBAProfile_TimerPeriodParameters_LogicalItem_o, dBAProfile_DecrementChannelCount=dBAProfile_DecrementChannelCount, dBAProfile_CallByCallID=dBAProfile_CallByCallID, dBAProfile_BillingNumber=dBAProfile_BillingNumber, dBAProfile_Shelf_o=dBAProfile_Shelf_o, dBAProfile_Ft1Caller=dBAProfile_Ft1Caller, dBAProfile_UnknownPlanUnknown=dBAProfile_UnknownPlanUnknown, dBAProfile_TransitNumber=dBAProfile_TransitNumber, mibdBAProfile_TimerPeriodParametersTable=mibdBAProfile_TimerPeriodParametersTable, mibdBAProfile=mibdBAProfile, dBAProfile_Item_o=dBAProfile_Item_o, dBAProfile_LocalPlanIsdn=dBAProfile_LocalPlanIsdn, dBAProfile_TimerPeriodParameters_Shelf_o=dBAProfile_TimerPeriodParameters_Shelf_o, dBAProfile_PhoneNumber=dBAProfile_PhoneNumber, dBAProfile_oCallMgm=dBAProfile_oCallMgm, dBAProfile_AddSecondsOfPersistence=dBAProfile_AddSecondsOfPersistence, dBAProfile_TimerPeriodParameters_X25chanTargetUtilization=dBAProfile_TimerPeriodParameters_X25chanTargetUtilization, dBAProfile_IncrementChannelCount=dBAProfile_IncrementChannelCount, dBAProfile_TimerPeriodParameters_Item_o=dBAProfile_TimerPeriodParameters_Item_o, dBAProfile_LogicalAddress_LogicalItem=dBAProfile_LogicalAddress_LogicalItem, dBAProfile_LogicalAddress_PhysicalAddress_Slot=dBAProfile_LogicalAddress_PhysicalAddress_Slot, dBAProfile_TimerPeriodParameters_MinimumChannelCount=dBAProfile_TimerPeriodParameters_MinimumChannelCount, dBAProfile_Slot_o=dBAProfile_Slot_o, dBAProfile_TimerPeriodParameters_Index_o=dBAProfile_TimerPeriodParameters_Index_o, dBAProfile_LogicalAddress_PhysicalAddress_Shelf=dBAProfile_LogicalAddress_PhysicalAddress_Shelf, mibdBAProfileTable=mibdBAProfileTable, dBAProfile_LogicalItem_o=dBAProfile_LogicalItem_o, dBAProfile_Action_o=dBAProfile_Action_o, dBAProfile_Ft1Timeout=dBAProfile_Ft1Timeout, dBAProfile_SecondsOfHistory=dBAProfile_SecondsOfHistory, dBAProfile_TimerPeriodParameters_Slot_o=dBAProfile_TimerPeriodParameters_Slot_o, dBAProfile_DbaPriNumberingPlanId=dBAProfile_DbaPriNumberingPlanId, DisplayString=DisplayString, dBAProfile_oFailAction=dBAProfile_oFailAction, dBAProfile_oDynAlg=dBAProfile_oDynAlg, mibdBAProfile_TimerPeriodParametersEntry=mibdBAProfile_TimerPeriodParametersEntry, dBAProfile_BaseChannelCount=dBAProfile_BaseChannelCount, dBAProfile_LogicalAddress_PhysicalAddress_ItemNumber=dBAProfile_LogicalAddress_PhysicalAddress_ItemNumber, dBAProfile_Name=dBAProfile_Name, dBAProfile_oDataSvc=dBAProfile_oDataSvc, dBAProfile_TimerPeriodParameters_TargetUtilization=dBAProfile_TimerPeriodParameters_TargetUtilization, dBAProfile_oCallType=dBAProfile_oCallType, dBAProfile_CalledNumberType=dBAProfile_CalledNumberType, dBAProfile_CallPassword=dBAProfile_CallPassword, dBAProfile_RemoveSecondsOfPersistence=dBAProfile_RemoveSecondsOfPersistence, dBAProfile_TimerPeriodParameters_MaximumChannelCount=dBAProfile_TimerPeriodParameters_MaximumChannelCount, dBAProfile_NailedUpGroup=dBAProfile_NailedUpGroup, dBAProfile_BitInversionRequired=dBAProfile_BitInversionRequired, dBAProfile_FlagIdle=dBAProfile_FlagIdle, dBAProfile_Force56=dBAProfile_Force56, dBAProfile_TimedCall=dBAProfile_TimedCall, dBAProfile_TimerPeriodParameters_oActiv=dBAProfile_TimerPeriodParameters_oActiv, dBAProfile_TimerPeriodParameters_StartingTime=dBAProfile_TimerPeriodParameters_StartingTime, dBAProfile_oAutoBERT=dBAProfile_oAutoBERT, mibdBAProfileEntry=mibdBAProfileEntry)
