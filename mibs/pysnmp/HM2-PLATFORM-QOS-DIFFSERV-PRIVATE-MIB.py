#
# PySNMP MIB module HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:19:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
HmEnabledStatus, hm2PlatformMibs = mibBuilder.importSymbols("HM2-TC-MIB", "HmEnabledStatus", "hm2PlatformMibs")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
InetPortNumber, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, iso, TimeTicks, ModuleIdentity, Counter32, Integer32, Bits, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "iso", "TimeTicks", "ModuleIdentity", "Counter32", "Integer32", "Bits", "IpAddress", "Counter64")
StorageType, TextualConvention, DisplayString, TruthValue, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "TextualConvention", "DisplayString", "TruthValue", "MacAddress", "RowStatus")
hm2PlatformQOSDiffServPrivate = ModuleIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7))
hm2PlatformQOSDiffServPrivate.setRevisions(('2011-10-28 00:00',))
if mibBuilder.loadTexts: hm2PlatformQOSDiffServPrivate.setLastUpdated('201110280000Z')
if mibBuilder.loadTexts: hm2PlatformQOSDiffServPrivate.setOrganization('Hirschmann Automation and Control GmbH')
class QosBurstSize(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 128)

class IntfDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("in", 1), ("out", 2))

class EtypeValue(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'x'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1536, 65535)

class Ipv6AddressPrefix(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 16)

hm2AgentDiffServGenStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 12, 7, 1))
hm2AgentDiffServGenStatusAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 7, 1, 1), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2AgentDiffServGenStatusAdminMode.setStatus('current')
hm2AgentDiffServGenStatusClassTableSize = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 7, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServGenStatusClassTableSize.setStatus('current')
hm2AgentDiffServGenStatusClassTableMax = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 7, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServGenStatusClassTableMax.setStatus('current')
hm2AgentDiffServGenStatusClassRuleTableSize = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 7, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServGenStatusClassRuleTableSize.setStatus('current')
hm2AgentDiffServGenStatusClassRuleTableMax = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 7, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServGenStatusClassRuleTableMax.setStatus('current')
hm2AgentDiffServGenStatusPolicyTableSize = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 7, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServGenStatusPolicyTableSize.setStatus('current')
hm2AgentDiffServGenStatusPolicyTableMax = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 7, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServGenStatusPolicyTableMax.setStatus('current')
hm2AgentDiffServGenStatusPolicyInstTableSize = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 7, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServGenStatusPolicyInstTableSize.setStatus('current')
hm2AgentDiffServGenStatusPolicyInstTableMax = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 7, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServGenStatusPolicyInstTableMax.setStatus('current')
hm2AgentDiffServGenStatusPolicyAttrTableSize = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 7, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServGenStatusPolicyAttrTableSize.setStatus('current')
hm2AgentDiffServGenStatusPolicyAttrTableMax = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 7, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServGenStatusPolicyAttrTableMax.setStatus('current')
hm2AgentDiffServGenStatusServiceTableSize = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 7, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServGenStatusServiceTableSize.setStatus('current')
hm2AgentDiffServGenStatusServiceTableMax = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 7, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServGenStatusServiceTableMax.setStatus('current')
hm2AgentDiffServClassGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 12, 7, 2))
hm2AgentDiffServClassIndexNextFree = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServClassIndexNextFree.setStatus('current')
hm2AgentDiffServClassTable = MibTable((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 2), )
if mibBuilder.loadTexts: hm2AgentDiffServClassTable.setStatus('current')
hm2AgentDiffServClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 2, 1), ).setIndexNames((0, "HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB", "hm2AgentDiffServClassIndex"))
if mibBuilder.loadTexts: hm2AgentDiffServClassEntry.setStatus('current')
hm2AgentDiffServClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hm2AgentDiffServClassIndex.setStatus('current')
hm2AgentDiffServClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassName.setStatus('current')
hm2AgentDiffServClassType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("all", 1), ("any", 2), ("acl", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassType.setStatus('current')
hm2AgentDiffServClassRuleIndexNextFree = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleIndexNextFree.setStatus('current')
hm2AgentDiffServClassStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 2, 1, 6), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassStorageType.setStatus('current')
hm2AgentDiffServClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRowStatus.setStatus('current')
hm2AgentDiffServClassProtoType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassProtoType.setStatus('current')
hm2AgentDiffServClassRuleTable = MibTable((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3), )
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleTable.setStatus('current')
hm2AgentDiffServClassRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1), ).setIndexNames((0, "HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB", "hm2AgentDiffServClassIndex"), (0, "HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB", "hm2AgentDiffServClassRuleIndex"))
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleEntry.setStatus('current')
hm2AgentDiffServClassRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleIndex.setStatus('current')
hm2AgentDiffServClassRuleMatchEntryType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("cos", 1), ("dstip", 2), ("dstl4port", 3), ("dstmac", 4), ("every", 5), ("ipdscp", 6), ("ipprecedence", 7), ("iptos", 8), ("protocol", 9), ("refclass", 10), ("srcip", 11), ("srcl4port", 12), ("srcmac", 13), ("vlan", 14), ("cos2", 15), ("etype", 16), ("vlanid", 17), ("vlanid2", 18), ("flowLabel", 19), ("srcPrefix", 20), ("dstPrefix", 21)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchEntryType.setStatus('current')
hm2AgentDiffServClassRuleMatchCos = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchCos.setStatus('current')
hm2AgentDiffServClassRuleMatchDstIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchDstIpAddr.setStatus('current')
hm2AgentDiffServClassRuleMatchDstIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchDstIpMask.setStatus('current')
hm2AgentDiffServClassRuleMatchDstL4PortStart = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 6), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchDstL4PortStart.setStatus('current')
hm2AgentDiffServClassRuleMatchDstL4PortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 7), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchDstL4PortEnd.setStatus('current')
hm2AgentDiffServClassRuleMatchDstMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 8), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchDstMacAddr.setStatus('current')
hm2AgentDiffServClassRuleMatchDstMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 9), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchDstMacMask.setStatus('current')
hm2AgentDiffServClassRuleMatchEvery = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchEvery.setStatus('current')
hm2AgentDiffServClassRuleMatchIpDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchIpDscp.setStatus('current')
hm2AgentDiffServClassRuleMatchIpPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchIpPrecedence.setStatus('current')
hm2AgentDiffServClassRuleMatchIpTosBits = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchIpTosBits.setStatus('current')
hm2AgentDiffServClassRuleMatchIpTosMask = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchIpTosMask.setStatus('current')
hm2AgentDiffServClassRuleMatchProtocolNum = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchProtocolNum.setStatus('current')
hm2AgentDiffServClassRuleMatchRefClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 16), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchRefClassIndex.setStatus('current')
hm2AgentDiffServClassRuleMatchSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 17), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchSrcIpAddr.setStatus('current')
hm2AgentDiffServClassRuleMatchSrcIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 18), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchSrcIpMask.setStatus('current')
hm2AgentDiffServClassRuleMatchSrcL4PortStart = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 19), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchSrcL4PortStart.setStatus('current')
hm2AgentDiffServClassRuleMatchSrcL4PortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 20), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchSrcL4PortEnd.setStatus('current')
hm2AgentDiffServClassRuleMatchSrcMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 21), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchSrcMacAddr.setStatus('current')
hm2AgentDiffServClassRuleMatchSrcMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 22), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchSrcMacMask.setStatus('current')
hm2AgentDiffServClassRuleMatchExcludeFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 24), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchExcludeFlag.setStatus('current')
hm2AgentDiffServClassRuleStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 25), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleStorageType.setStatus('current')
hm2AgentDiffServClassRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 26), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleRowStatus.setStatus('current')
hm2AgentDiffServClassRuleMatchCos2 = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchCos2.setStatus('current')
hm2AgentDiffServClassRuleMatchEtypeKey = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("custom", 1), ("appletalk", 2), ("arp", 3), ("ibmsna", 4), ("ipv4", 5), ("ipv6", 6), ("ipx", 7), ("mplsmcast", 8), ("mplsucast", 9), ("netbios", 10), ("novell", 11), ("pppoe", 12), ("rarp", 13)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchEtypeKey.setStatus('current')
hm2AgentDiffServClassRuleMatchEtypeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 29), EtypeValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchEtypeValue.setStatus('current')
hm2AgentDiffServClassRuleMatchVlanIdStart = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4042))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchVlanIdStart.setStatus('current')
hm2AgentDiffServClassRuleMatchVlanIdEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4042))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchVlanIdEnd.setStatus('current')
hm2AgentDiffServClassRuleMatchVlanId2Start = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4042))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchVlanId2Start.setStatus('current')
hm2AgentDiffServClassRuleMatchVlanId2End = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 2, 3, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4042))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchVlanId2End.setStatus('current')
hm2AgentDiffServPolicyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 12, 7, 3))
hm2AgentDiffServPolicyIndexNextFree = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyIndexNextFree.setStatus('current')
hm2AgentDiffServPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 2), )
if mibBuilder.loadTexts: hm2AgentDiffServPolicyTable.setStatus('current')
hm2AgentDiffServPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 2, 1), ).setIndexNames((0, "HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB", "hm2AgentDiffServPolicyIndex"))
if mibBuilder.loadTexts: hm2AgentDiffServPolicyEntry.setStatus('current')
hm2AgentDiffServPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hm2AgentDiffServPolicyIndex.setStatus('current')
hm2AgentDiffServPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyName.setStatus('current')
hm2AgentDiffServPolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 2, 1, 3), IntfDirection()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyType.setStatus('current')
hm2AgentDiffServPolicyInstIndexNextFree = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyInstIndexNextFree.setStatus('current')
hm2AgentDiffServPolicyStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 2, 1, 5), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyStorageType.setStatus('current')
hm2AgentDiffServPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyRowStatus.setStatus('current')
hm2AgentDiffServPolicyInstTable = MibTable((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 3), )
if mibBuilder.loadTexts: hm2AgentDiffServPolicyInstTable.setStatus('current')
hm2AgentDiffServPolicyInstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 3, 1), ).setIndexNames((0, "HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB", "hm2AgentDiffServPolicyIndex"), (0, "HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB", "hm2AgentDiffServPolicyInstIndex"))
if mibBuilder.loadTexts: hm2AgentDiffServPolicyInstEntry.setStatus('current')
hm2AgentDiffServPolicyInstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hm2AgentDiffServPolicyInstIndex.setStatus('current')
hm2AgentDiffServPolicyInstClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 3, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyInstClassIndex.setStatus('current')
hm2AgentDiffServPolicyInstAttrIndexNextFree = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyInstAttrIndexNextFree.setStatus('current')
hm2AgentDiffServPolicyInstStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 3, 1, 4), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyInstStorageType.setStatus('current')
hm2AgentDiffServPolicyInstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyInstRowStatus.setStatus('current')
hm2AgentDiffServPolicyAttrTable = MibTable((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4), )
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrTable.setStatus('current')
hm2AgentDiffServPolicyAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1), ).setIndexNames((0, "HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB", "hm2AgentDiffServPolicyIndex"), (0, "HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB", "hm2AgentDiffServPolicyInstIndex"), (0, "HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB", "hm2AgentDiffServPolicyAttrIndex"))
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrEntry.setStatus('current')
hm2AgentDiffServPolicyAttrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrIndex.setStatus('current')
hm2AgentDiffServPolicyAttrStmtEntryType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("bandwidth", 1), ("expedite", 2), ("markCosVal", 3), ("markIpDscpVal", 4), ("markIpPrecedenceVal", 5), ("policeSimple", 6), ("policeSinglerate", 7), ("policeTworate", 8), ("randomdrop", 9), ("shapeAverage", 10), ("shapePeak", 11), ("assignQueue", 12), ("drop", 13), ("markCos2Val", 14), ("redirect", 15), ("mirror", 16), ("markCosAsSecCos", 17)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtEntryType.setStatus('current')
hm2AgentDiffServPolicyAttrStmtMarkCosVal = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtMarkCosVal.setStatus('current')
hm2AgentDiffServPolicyAttrStmtMarkIpDscpVal = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtMarkIpDscpVal.setStatus('current')
hm2AgentDiffServPolicyAttrStmtMarkIpPrecedenceVal = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtMarkIpPrecedenceVal.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceConformAct = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("drop", 1), ("markdscp", 2), ("markprec", 3), ("send", 4), ("markcos", 5), ("markcos2", 6), ("markcosAsSecCos", 7))).clone('send')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceConformAct.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceConformVal = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceConformVal.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceExceedAct = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("drop", 1), ("markdscp", 2), ("markprec", 3), ("send", 4), ("markcos", 5), ("markcos2", 6), ("markcosAsSecCos", 7))).clone('drop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceExceedAct.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceExceedVal = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceExceedVal.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceNonconformAct = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("drop", 1), ("markdscp", 2), ("markprec", 3), ("send", 4), ("markcos", 5), ("markcos2", 6), ("markcosAsSecCos", 7))).clone('drop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceNonconformAct.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceNonconformVal = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceNonconformVal.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceSimpleCrate = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 17), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceSimpleCrate.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceSimpleCburst = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 18), QosBurstSize()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceSimpleCburst.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceSinglerateCrate = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 19), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceSinglerateCrate.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceSinglerateCburst = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 20), QosBurstSize()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceSinglerateCburst.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceSinglerateEburst = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 21), QosBurstSize()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceSinglerateEburst.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceTworateCrate = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 22), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceTworateCrate.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceTworateCburst = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 23), QosBurstSize()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceTworateCburst.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceTworatePrate = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 24), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceTworatePrate.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceTworatePburst = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 25), QosBurstSize()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceTworatePburst.setStatus('current')
hm2AgentDiffServPolicyAttrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 34), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStorageType.setStatus('current')
hm2AgentDiffServPolicyAttrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 35), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrRowStatus.setStatus('current')
hm2AgentDiffServPolicyAttrStmtAssignQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 36), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtAssignQueueId.setStatus('current')
hm2AgentDiffServPolicyAttrStmtDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 37), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtDrop.setStatus('current')
hm2AgentDiffServPolicyAttrStmtMarkCos2Val = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 38), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtMarkCos2Val.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceColorConformIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 39), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceColorConformIndex.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceColorConformMode = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("blind", 1), ("cos", 2), ("cos2", 3), ("ipdscp", 4), ("ipprec", 5))).clone('blind')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceColorConformMode.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceColorConformVal = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 41), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceColorConformVal.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceColorExceedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 42), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceColorExceedIndex.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceColorExceedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("blind", 1), ("cos", 2), ("cos2", 3), ("ipdscp", 4), ("ipprec", 5), ("unused", 6))).clone('blind')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceColorExceedMode.setStatus('current')
hm2AgentDiffServPolicyAttrStmtPoliceColorExceedVal = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 44), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtPoliceColorExceedVal.setStatus('current')
hm2AgentDiffServPolicyAttrStmtRedirectIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 45), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtRedirectIntf.setStatus('current')
hm2AgentDiffServPolicyAttrStmtMirrorIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 46), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtMirrorIntf.setStatus('current')
hm2AgentDiffServPolicyAttrStmtMarkCosAsSecCos = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 4, 1, 47), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyAttrStmtMarkCosAsSecCos.setStatus('current')
hm2AgentDiffServPolicyPerfInTable = MibTable((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 5), )
if mibBuilder.loadTexts: hm2AgentDiffServPolicyPerfInTable.setStatus('current')
hm2AgentDiffServPolicyPerfInEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 5, 1), ).setIndexNames((0, "HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB", "hm2AgentDiffServPolicyIndex"), (0, "HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB", "hm2AgentDiffServPolicyInstIndex"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hm2AgentDiffServPolicyPerfInEntry.setStatus('current')
hm2AgentDiffServPolicyPerfInOfferedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyPerfInOfferedPackets.setStatus('current')
hm2AgentDiffServPolicyPerfInDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyPerfInDiscardedPackets.setStatus('current')
hm2AgentDiffServPolicyPerfInHCOfferedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyPerfInHCOfferedPackets.setStatus('current')
hm2AgentDiffServPolicyPerfInHCDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyPerfInHCDiscardedPackets.setStatus('current')
hm2AgentDiffServPolicyPerfInStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 5, 1, 9), StorageType().clone('nonVolatile')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyPerfInStorageType.setStatus('current')
hm2AgentDiffServPolicyPerfInRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 5, 1, 10), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyPerfInRowStatus.setStatus('current')
hm2AgentDiffServPolicyPerfOutTable = MibTable((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 6), )
if mibBuilder.loadTexts: hm2AgentDiffServPolicyPerfOutTable.setStatus('current')
hm2AgentDiffServPolicyPerfOutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 6, 1), ).setIndexNames((0, "HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB", "hm2AgentDiffServPolicyIndex"), (0, "HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB", "hm2AgentDiffServPolicyInstIndex"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hm2AgentDiffServPolicyPerfOutEntry.setStatus('current')
hm2AgentDiffServPolicyPerfOutOfferedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 6, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyPerfOutOfferedPackets.setStatus('current')
hm2AgentDiffServPolicyPerfOutDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 6, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyPerfOutDiscardedPackets.setStatus('current')
hm2AgentDiffServPolicyPerfOutHCOfferedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 6, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyPerfOutHCOfferedPackets.setStatus('current')
hm2AgentDiffServPolicyPerfOutHCDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 6, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyPerfOutHCDiscardedPackets.setStatus('current')
hm2AgentDiffServPolicyPerfOutStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 6, 1, 25), StorageType().clone('nonVolatile')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyPerfOutStorageType.setStatus('current')
hm2AgentDiffServPolicyPerfOutRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 3, 6, 1, 26), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServPolicyPerfOutRowStatus.setStatus('current')
hm2AgentDiffServServiceGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 12, 7, 4))
hm2AgentDiffServServiceTable = MibTable((1, 3, 6, 1, 4, 1, 248, 12, 7, 4, 1), )
if mibBuilder.loadTexts: hm2AgentDiffServServiceTable.setStatus('current')
hm2AgentDiffServServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 12, 7, 4, 1, 1), ).setIndexNames((0, "HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB", "hm2AgentDiffServServiceIfIndex"), (0, "HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB", "hm2AgentDiffServServiceIfDirection"))
if mibBuilder.loadTexts: hm2AgentDiffServServiceEntry.setStatus('current')
hm2AgentDiffServServiceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 4, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hm2AgentDiffServServiceIfIndex.setStatus('current')
hm2AgentDiffServServiceIfDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 4, 1, 1, 2), IntfDirection())
if mibBuilder.loadTexts: hm2AgentDiffServServiceIfDirection.setStatus('current')
hm2AgentDiffServServicePolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServServicePolicyIndex.setStatus('current')
hm2AgentDiffServServiceIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentDiffServServiceIfOperStatus.setStatus('current')
hm2AgentDiffServServiceStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 4, 1, 1, 5), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServServiceStorageType.setStatus('current')
hm2AgentDiffServServiceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 7, 4, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentDiffServServiceRowStatus.setStatus('current')
hm2AgentDiffServSNMPExtensionGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 12, 7, 248))
hm2AgentDiffServClassNameInUseErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 1))
if mibBuilder.loadTexts: hm2AgentDiffServClassNameInUseErrorReturn.setStatus('current')
hm2AgentDiffServClassHasRulesErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 2))
if mibBuilder.loadTexts: hm2AgentDiffServClassHasRulesErrorReturn.setStatus('current')
hm2AgentDiffServClassHasReferencesErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 3))
if mibBuilder.loadTexts: hm2AgentDiffServClassHasReferencesErrorReturn.setStatus('current')
hm2AgentDiffServClassTableFullErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 4))
if mibBuilder.loadTexts: hm2AgentDiffServClassTableFullErrorReturn.setStatus('current')
hm2AgentDiffServClassRuleTableFullErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 5))
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleTableFullErrorReturn.setStatus('current')
hm2AgentDiffServClassIndexOutOfRangeErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 6))
if mibBuilder.loadTexts: hm2AgentDiffServClassIndexOutOfRangeErrorReturn.setStatus('current')
hm2AgentDiffServClassRuleIndexOutOfRangeErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 7))
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleIndexOutOfRangeErrorReturn.setStatus('current')
hm2AgentDiffServClassRuleColorRefErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 8))
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleColorRefErrorReturn.setStatus('current')
hm2AgentDiffServClassRuleInUseErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 9))
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleInUseErrorReturn.setStatus('current')
hm2AgentDiffServClassRuleInvalidReferenceErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 10))
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleInvalidReferenceErrorReturn.setStatus('current')
hm2AgentDiffServClassRuleReferenceLoopErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 11))
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleReferenceLoopErrorReturn.setStatus('current')
hm2AgentDiffServClassRuleMatchSecCosErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 12))
if mibBuilder.loadTexts: hm2AgentDiffServClassRuleMatchSecCosErrorReturn.setStatus('current')
hm2AgentDiffServPolicyTableFullErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 13))
if mibBuilder.loadTexts: hm2AgentDiffServPolicyTableFullErrorReturn.setStatus('current')
hm2AgentDiffServPolicyNameInUseErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 14))
if mibBuilder.loadTexts: hm2AgentDiffServPolicyNameInUseErrorReturn.setStatus('current')
hm2AgentDiffServPolicyHasInstancesErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 15))
if mibBuilder.loadTexts: hm2AgentDiffServPolicyHasInstancesErrorReturn.setStatus('current')
hm2AgentDiffServPolicyHasReferencesErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 16))
if mibBuilder.loadTexts: hm2AgentDiffServPolicyHasReferencesErrorReturn.setStatus('current')
hm2AgentDiffServPolicyIndexOutOfRangeErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 17))
if mibBuilder.loadTexts: hm2AgentDiffServPolicyIndexOutOfRangeErrorReturn.setStatus('current')
hm2AgentDiffServInstanceIndexOutOfRangeErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 18))
if mibBuilder.loadTexts: hm2AgentDiffServInstanceIndexOutOfRangeErrorReturn.setStatus('current')
hm2AgentDiffServInstanceTableFullErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 19))
if mibBuilder.loadTexts: hm2AgentDiffServInstanceTableFullErrorReturn.setStatus('current')
hm2AgentDiffServInstanceHasAttributesErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 20))
if mibBuilder.loadTexts: hm2AgentDiffServInstanceHasAttributesErrorReturn.setStatus('current')
hm2AgentDiffServAttributeIndexOutOfRangeErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 21))
if mibBuilder.loadTexts: hm2AgentDiffServAttributeIndexOutOfRangeErrorReturn.setStatus('current')
hm2AgentDiffServAttributeTableFullErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 22))
if mibBuilder.loadTexts: hm2AgentDiffServAttributeTableFullErrorReturn.setStatus('current')
hm2AgentDiffServAttributeIncompatibilityErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 23))
if mibBuilder.loadTexts: hm2AgentDiffServAttributeIncompatibilityErrorReturn.setStatus('current')
hm2AgentDiffServAttributeActionSetCosAsSecCosErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 24))
if mibBuilder.loadTexts: hm2AgentDiffServAttributeActionSetCosAsSecCosErrorReturn.setStatus('current')
hm2AgentDiffServAttributeConformColorClassIndexErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 25))
if mibBuilder.loadTexts: hm2AgentDiffServAttributeConformColorClassIndexErrorReturn.setStatus('current')
hm2AgentDiffServServiceInvalidInterfaceErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 26))
if mibBuilder.loadTexts: hm2AgentDiffServServiceInvalidInterfaceErrorReturn.setStatus('current')
hm2AgentDiffServServiceInvalidDirectionErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 27))
if mibBuilder.loadTexts: hm2AgentDiffServServiceInvalidDirectionErrorReturn.setStatus('current')
hm2AgentDiffServServiceTableFullErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 28))
if mibBuilder.loadTexts: hm2AgentDiffServServiceTableFullErrorReturn.setStatus('current')
hm2AgentDiffServServiceInvalidPolicyTypeErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 29))
if mibBuilder.loadTexts: hm2AgentDiffServServiceInvalidPolicyTypeErrorReturn.setStatus('current')
hm2AgentDiffServInstanceExistsErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 30))
if mibBuilder.loadTexts: hm2AgentDiffServInstanceExistsErrorReturn.setStatus('current')
hm2AgentDiffServInstanceInvalidClassErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 7, 248, 31))
if mibBuilder.loadTexts: hm2AgentDiffServInstanceInvalidClassErrorReturn.setStatus('current')
mibBuilder.exportSymbols("HM2-PLATFORM-QOS-DIFFSERV-PRIVATE-MIB", hm2AgentDiffServPolicyPerfInHCOfferedPackets=hm2AgentDiffServPolicyPerfInHCOfferedPackets, hm2AgentDiffServPolicyPerfOutRowStatus=hm2AgentDiffServPolicyPerfOutRowStatus, hm2AgentDiffServServiceInvalidPolicyTypeErrorReturn=hm2AgentDiffServServiceInvalidPolicyTypeErrorReturn, hm2AgentDiffServClassRuleMatchDstIpAddr=hm2AgentDiffServClassRuleMatchDstIpAddr, hm2AgentDiffServPolicyPerfInDiscardedPackets=hm2AgentDiffServPolicyPerfInDiscardedPackets, hm2AgentDiffServPolicyAttrStmtPoliceTworatePrate=hm2AgentDiffServPolicyAttrStmtPoliceTworatePrate, hm2AgentDiffServPolicyInstClassIndex=hm2AgentDiffServPolicyInstClassIndex, hm2AgentDiffServGenStatusPolicyAttrTableMax=hm2AgentDiffServGenStatusPolicyAttrTableMax, hm2AgentDiffServClassRuleMatchIpTosBits=hm2AgentDiffServClassRuleMatchIpTosBits, hm2AgentDiffServClassRuleMatchEtypeValue=hm2AgentDiffServClassRuleMatchEtypeValue, hm2AgentDiffServPolicyPerfInEntry=hm2AgentDiffServPolicyPerfInEntry, hm2AgentDiffServClassRuleEntry=hm2AgentDiffServClassRuleEntry, hm2AgentDiffServServiceGroup=hm2AgentDiffServServiceGroup, hm2AgentDiffServAttributeConformColorClassIndexErrorReturn=hm2AgentDiffServAttributeConformColorClassIndexErrorReturn, hm2AgentDiffServInstanceExistsErrorReturn=hm2AgentDiffServInstanceExistsErrorReturn, hm2AgentDiffServGenStatusPolicyInstTableSize=hm2AgentDiffServGenStatusPolicyInstTableSize, hm2AgentDiffServClassRuleMatchVlanId2End=hm2AgentDiffServClassRuleMatchVlanId2End, hm2AgentDiffServPolicyAttrStmtPoliceColorConformIndex=hm2AgentDiffServPolicyAttrStmtPoliceColorConformIndex, hm2AgentDiffServPolicyInstIndexNextFree=hm2AgentDiffServPolicyInstIndexNextFree, hm2AgentDiffServPolicyInstAttrIndexNextFree=hm2AgentDiffServPolicyInstAttrIndexNextFree, QosBurstSize=QosBurstSize, hm2AgentDiffServPolicyAttrStmtPoliceNonconformAct=hm2AgentDiffServPolicyAttrStmtPoliceNonconformAct, hm2AgentDiffServClassRuleMatchSrcIpAddr=hm2AgentDiffServClassRuleMatchSrcIpAddr, hm2AgentDiffServClassRuleMatchVlanIdStart=hm2AgentDiffServClassRuleMatchVlanIdStart, hm2AgentDiffServServiceIfIndex=hm2AgentDiffServServiceIfIndex, hm2AgentDiffServGenStatusPolicyInstTableMax=hm2AgentDiffServGenStatusPolicyInstTableMax, hm2AgentDiffServPolicyAttrStmtMarkIpPrecedenceVal=hm2AgentDiffServPolicyAttrStmtMarkIpPrecedenceVal, hm2AgentDiffServPolicyPerfInTable=hm2AgentDiffServPolicyPerfInTable, hm2AgentDiffServClassRuleMatchSrcL4PortStart=hm2AgentDiffServClassRuleMatchSrcL4PortStart, hm2AgentDiffServPolicyPerfOutEntry=hm2AgentDiffServPolicyPerfOutEntry, hm2AgentDiffServServiceInvalidDirectionErrorReturn=hm2AgentDiffServServiceInvalidDirectionErrorReturn, hm2AgentDiffServGenStatusClassTableMax=hm2AgentDiffServGenStatusClassTableMax, hm2AgentDiffServGenStatusPolicyTableSize=hm2AgentDiffServGenStatusPolicyTableSize, hm2AgentDiffServClassRowStatus=hm2AgentDiffServClassRowStatus, hm2AgentDiffServPolicyTableFullErrorReturn=hm2AgentDiffServPolicyTableFullErrorReturn, hm2AgentDiffServClassTable=hm2AgentDiffServClassTable, hm2AgentDiffServClassRuleIndexOutOfRangeErrorReturn=hm2AgentDiffServClassRuleIndexOutOfRangeErrorReturn, hm2AgentDiffServClassGroup=hm2AgentDiffServClassGroup, hm2AgentDiffServPolicyAttrStmtPoliceSimpleCburst=hm2AgentDiffServPolicyAttrStmtPoliceSimpleCburst, hm2AgentDiffServPolicyIndex=hm2AgentDiffServPolicyIndex, hm2AgentDiffServClassRuleIndexNextFree=hm2AgentDiffServClassRuleIndexNextFree, hm2AgentDiffServPolicyInstStorageType=hm2AgentDiffServPolicyInstStorageType, hm2AgentDiffServClassRuleMatchSrcIpMask=hm2AgentDiffServClassRuleMatchSrcIpMask, hm2AgentDiffServPolicyAttrStorageType=hm2AgentDiffServPolicyAttrStorageType, hm2AgentDiffServPolicyInstRowStatus=hm2AgentDiffServPolicyInstRowStatus, hm2AgentDiffServPolicyAttrStmtMarkCosVal=hm2AgentDiffServPolicyAttrStmtMarkCosVal, hm2AgentDiffServAttributeActionSetCosAsSecCosErrorReturn=hm2AgentDiffServAttributeActionSetCosAsSecCosErrorReturn, hm2AgentDiffServClassRuleMatchCos2=hm2AgentDiffServClassRuleMatchCos2, hm2AgentDiffServClassRuleMatchIpPrecedence=hm2AgentDiffServClassRuleMatchIpPrecedence, hm2AgentDiffServPolicyPerfInStorageType=hm2AgentDiffServPolicyPerfInStorageType, hm2AgentDiffServPolicyAttrStmtPoliceSimpleCrate=hm2AgentDiffServPolicyAttrStmtPoliceSimpleCrate, hm2AgentDiffServGenStatusAdminMode=hm2AgentDiffServGenStatusAdminMode, hm2AgentDiffServClassRuleMatchSecCosErrorReturn=hm2AgentDiffServClassRuleMatchSecCosErrorReturn, hm2AgentDiffServPolicyAttrStmtPoliceColorConformVal=hm2AgentDiffServPolicyAttrStmtPoliceColorConformVal, hm2AgentDiffServClassRuleMatchEtypeKey=hm2AgentDiffServClassRuleMatchEtypeKey, hm2AgentDiffServClassRuleMatchIpTosMask=hm2AgentDiffServClassRuleMatchIpTosMask, hm2AgentDiffServClassRuleMatchSrcL4PortEnd=hm2AgentDiffServClassRuleMatchSrcL4PortEnd, hm2AgentDiffServClassRuleReferenceLoopErrorReturn=hm2AgentDiffServClassRuleReferenceLoopErrorReturn, hm2AgentDiffServPolicyAttrStmtPoliceConformAct=hm2AgentDiffServPolicyAttrStmtPoliceConformAct, hm2AgentDiffServClassRuleMatchCos=hm2AgentDiffServClassRuleMatchCos, hm2AgentDiffServClassRuleMatchDstMacAddr=hm2AgentDiffServClassRuleMatchDstMacAddr, hm2AgentDiffServPolicyAttrStmtPoliceExceedAct=hm2AgentDiffServPolicyAttrStmtPoliceExceedAct, hm2AgentDiffServGenStatusPolicyTableMax=hm2AgentDiffServGenStatusPolicyTableMax, hm2AgentDiffServPolicyAttrStmtMarkCosAsSecCos=hm2AgentDiffServPolicyAttrStmtMarkCosAsSecCos, hm2AgentDiffServClassNameInUseErrorReturn=hm2AgentDiffServClassNameInUseErrorReturn, hm2AgentDiffServPolicyPerfOutHCOfferedPackets=hm2AgentDiffServPolicyPerfOutHCOfferedPackets, hm2AgentDiffServPolicyAttrStmtAssignQueueId=hm2AgentDiffServPolicyAttrStmtAssignQueueId, hm2AgentDiffServPolicyAttrStmtPoliceExceedVal=hm2AgentDiffServPolicyAttrStmtPoliceExceedVal, hm2AgentDiffServPolicyIndexOutOfRangeErrorReturn=hm2AgentDiffServPolicyIndexOutOfRangeErrorReturn, hm2AgentDiffServPolicyAttrStmtPoliceNonconformVal=hm2AgentDiffServPolicyAttrStmtPoliceNonconformVal, hm2AgentDiffServPolicyPerfOutTable=hm2AgentDiffServPolicyPerfOutTable, hm2AgentDiffServServiceIfDirection=hm2AgentDiffServServiceIfDirection, hm2AgentDiffServClassHasReferencesErrorReturn=hm2AgentDiffServClassHasReferencesErrorReturn, hm2AgentDiffServPolicyRowStatus=hm2AgentDiffServPolicyRowStatus, hm2AgentDiffServPolicyAttrStmtDrop=hm2AgentDiffServPolicyAttrStmtDrop, PYSNMP_MODULE_ID=hm2PlatformQOSDiffServPrivate, hm2AgentDiffServClassName=hm2AgentDiffServClassName, hm2AgentDiffServClassRuleMatchExcludeFlag=hm2AgentDiffServClassRuleMatchExcludeFlag, hm2AgentDiffServAttributeTableFullErrorReturn=hm2AgentDiffServAttributeTableFullErrorReturn, hm2AgentDiffServClassIndexOutOfRangeErrorReturn=hm2AgentDiffServClassIndexOutOfRangeErrorReturn, hm2AgentDiffServSNMPExtensionGroup=hm2AgentDiffServSNMPExtensionGroup, hm2AgentDiffServInstanceHasAttributesErrorReturn=hm2AgentDiffServInstanceHasAttributesErrorReturn, hm2AgentDiffServPolicyStorageType=hm2AgentDiffServPolicyStorageType, hm2AgentDiffServGenStatusPolicyAttrTableSize=hm2AgentDiffServGenStatusPolicyAttrTableSize, hm2AgentDiffServPolicyTable=hm2AgentDiffServPolicyTable, hm2AgentDiffServPolicyAttrEntry=hm2AgentDiffServPolicyAttrEntry, hm2AgentDiffServPolicyAttrStmtPoliceSinglerateCburst=hm2AgentDiffServPolicyAttrStmtPoliceSinglerateCburst, hm2AgentDiffServPolicyInstTable=hm2AgentDiffServPolicyInstTable, hm2AgentDiffServClassRuleMatchSrcMacAddr=hm2AgentDiffServClassRuleMatchSrcMacAddr, hm2AgentDiffServClassRuleMatchVlanIdEnd=hm2AgentDiffServClassRuleMatchVlanIdEnd, hm2AgentDiffServPolicyAttrStmtRedirectIntf=hm2AgentDiffServPolicyAttrStmtRedirectIntf, hm2AgentDiffServGenStatusServiceTableSize=hm2AgentDiffServGenStatusServiceTableSize, hm2AgentDiffServServicePolicyIndex=hm2AgentDiffServServicePolicyIndex, hm2AgentDiffServPolicyAttrStmtPoliceTworateCrate=hm2AgentDiffServPolicyAttrStmtPoliceTworateCrate, hm2AgentDiffServPolicyAttrStmtPoliceConformVal=hm2AgentDiffServPolicyAttrStmtPoliceConformVal, hm2AgentDiffServPolicyInstEntry=hm2AgentDiffServPolicyInstEntry, hm2AgentDiffServGenStatusClassRuleTableMax=hm2AgentDiffServGenStatusClassRuleTableMax, hm2AgentDiffServPolicyAttrStmtPoliceTworateCburst=hm2AgentDiffServPolicyAttrStmtPoliceTworateCburst, hm2AgentDiffServClassHasRulesErrorReturn=hm2AgentDiffServClassHasRulesErrorReturn, hm2AgentDiffServClassProtoType=hm2AgentDiffServClassProtoType, hm2AgentDiffServClassRuleIndex=hm2AgentDiffServClassRuleIndex, hm2AgentDiffServPolicyHasInstancesErrorReturn=hm2AgentDiffServPolicyHasInstancesErrorReturn, hm2AgentDiffServClassRuleMatchEvery=hm2AgentDiffServClassRuleMatchEvery, hm2AgentDiffServInstanceIndexOutOfRangeErrorReturn=hm2AgentDiffServInstanceIndexOutOfRangeErrorReturn, hm2AgentDiffServPolicyType=hm2AgentDiffServPolicyType, IntfDirection=IntfDirection, hm2AgentDiffServClassRuleTable=hm2AgentDiffServClassRuleTable, hm2AgentDiffServPolicyAttrStmtPoliceColorExceedMode=hm2AgentDiffServPolicyAttrStmtPoliceColorExceedMode, hm2AgentDiffServPolicyAttrRowStatus=hm2AgentDiffServPolicyAttrRowStatus, hm2AgentDiffServClassRuleMatchDstMacMask=hm2AgentDiffServClassRuleMatchDstMacMask, hm2PlatformQOSDiffServPrivate=hm2PlatformQOSDiffServPrivate, hm2AgentDiffServInstanceTableFullErrorReturn=hm2AgentDiffServInstanceTableFullErrorReturn, hm2AgentDiffServPolicyPerfOutOfferedPackets=hm2AgentDiffServPolicyPerfOutOfferedPackets, hm2AgentDiffServClassRuleMatchDstL4PortEnd=hm2AgentDiffServClassRuleMatchDstL4PortEnd, hm2AgentDiffServClassRuleMatchDstL4PortStart=hm2AgentDiffServClassRuleMatchDstL4PortStart, Ipv6AddressPrefix=Ipv6AddressPrefix, hm2AgentDiffServPolicyPerfOutHCDiscardedPackets=hm2AgentDiffServPolicyPerfOutHCDiscardedPackets, hm2AgentDiffServServiceInvalidInterfaceErrorReturn=hm2AgentDiffServServiceInvalidInterfaceErrorReturn, hm2AgentDiffServServiceTable=hm2AgentDiffServServiceTable, hm2AgentDiffServGenStatusServiceTableMax=hm2AgentDiffServGenStatusServiceTableMax, hm2AgentDiffServClassEntry=hm2AgentDiffServClassEntry, hm2AgentDiffServClassRuleMatchProtocolNum=hm2AgentDiffServClassRuleMatchProtocolNum, hm2AgentDiffServPolicyPerfOutStorageType=hm2AgentDiffServPolicyPerfOutStorageType, hm2AgentDiffServPolicyAttrStmtMarkCos2Val=hm2AgentDiffServPolicyAttrStmtMarkCos2Val, hm2AgentDiffServGenStatusClassTableSize=hm2AgentDiffServGenStatusClassTableSize, hm2AgentDiffServPolicyAttrStmtPoliceColorExceedVal=hm2AgentDiffServPolicyAttrStmtPoliceColorExceedVal, hm2AgentDiffServPolicyPerfInOfferedPackets=hm2AgentDiffServPolicyPerfInOfferedPackets, hm2AgentDiffServPolicyGroup=hm2AgentDiffServPolicyGroup, hm2AgentDiffServPolicyAttrTable=hm2AgentDiffServPolicyAttrTable, hm2AgentDiffServPolicyPerfInHCDiscardedPackets=hm2AgentDiffServPolicyPerfInHCDiscardedPackets, hm2AgentDiffServClassIndexNextFree=hm2AgentDiffServClassIndexNextFree, hm2AgentDiffServClassRuleStorageType=hm2AgentDiffServClassRuleStorageType, hm2AgentDiffServAttributeIncompatibilityErrorReturn=hm2AgentDiffServAttributeIncompatibilityErrorReturn, hm2AgentDiffServServiceEntry=hm2AgentDiffServServiceEntry, hm2AgentDiffServPolicyAttrIndex=hm2AgentDiffServPolicyAttrIndex, hm2AgentDiffServPolicyAttrStmtPoliceSinglerateEburst=hm2AgentDiffServPolicyAttrStmtPoliceSinglerateEburst, hm2AgentDiffServPolicyEntry=hm2AgentDiffServPolicyEntry, hm2AgentDiffServServiceTableFullErrorReturn=hm2AgentDiffServServiceTableFullErrorReturn, hm2AgentDiffServGenStatusGroup=hm2AgentDiffServGenStatusGroup, hm2AgentDiffServPolicyHasReferencesErrorReturn=hm2AgentDiffServPolicyHasReferencesErrorReturn, hm2AgentDiffServClassIndex=hm2AgentDiffServClassIndex, hm2AgentDiffServClassRuleMatchRefClassIndex=hm2AgentDiffServClassRuleMatchRefClassIndex, hm2AgentDiffServClassRuleMatchSrcMacMask=hm2AgentDiffServClassRuleMatchSrcMacMask, hm2AgentDiffServClassRuleInUseErrorReturn=hm2AgentDiffServClassRuleInUseErrorReturn, hm2AgentDiffServPolicyAttrStmtEntryType=hm2AgentDiffServPolicyAttrStmtEntryType, hm2AgentDiffServPolicyAttrStmtPoliceColorExceedIndex=hm2AgentDiffServPolicyAttrStmtPoliceColorExceedIndex, hm2AgentDiffServClassRuleMatchDstIpMask=hm2AgentDiffServClassRuleMatchDstIpMask, hm2AgentDiffServPolicyAttrStmtMarkIpDscpVal=hm2AgentDiffServPolicyAttrStmtMarkIpDscpVal, hm2AgentDiffServPolicyAttrStmtMirrorIntf=hm2AgentDiffServPolicyAttrStmtMirrorIntf, hm2AgentDiffServClassRuleRowStatus=hm2AgentDiffServClassRuleRowStatus, hm2AgentDiffServClassType=hm2AgentDiffServClassType, hm2AgentDiffServPolicyAttrStmtPoliceTworatePburst=hm2AgentDiffServPolicyAttrStmtPoliceTworatePburst, hm2AgentDiffServClassRuleInvalidReferenceErrorReturn=hm2AgentDiffServClassRuleInvalidReferenceErrorReturn, hm2AgentDiffServPolicyPerfInRowStatus=hm2AgentDiffServPolicyPerfInRowStatus, hm2AgentDiffServPolicyName=hm2AgentDiffServPolicyName, hm2AgentDiffServClassRuleMatchEntryType=hm2AgentDiffServClassRuleMatchEntryType, hm2AgentDiffServClassRuleMatchIpDscp=hm2AgentDiffServClassRuleMatchIpDscp, hm2AgentDiffServClassTableFullErrorReturn=hm2AgentDiffServClassTableFullErrorReturn, hm2AgentDiffServAttributeIndexOutOfRangeErrorReturn=hm2AgentDiffServAttributeIndexOutOfRangeErrorReturn, hm2AgentDiffServPolicyAttrStmtPoliceColorConformMode=hm2AgentDiffServPolicyAttrStmtPoliceColorConformMode, hm2AgentDiffServPolicyAttrStmtPoliceSinglerateCrate=hm2AgentDiffServPolicyAttrStmtPoliceSinglerateCrate, hm2AgentDiffServGenStatusClassRuleTableSize=hm2AgentDiffServGenStatusClassRuleTableSize, hm2AgentDiffServClassRuleMatchVlanId2Start=hm2AgentDiffServClassRuleMatchVlanId2Start, hm2AgentDiffServInstanceInvalidClassErrorReturn=hm2AgentDiffServInstanceInvalidClassErrorReturn, EtypeValue=EtypeValue, hm2AgentDiffServPolicyNameInUseErrorReturn=hm2AgentDiffServPolicyNameInUseErrorReturn, hm2AgentDiffServServiceRowStatus=hm2AgentDiffServServiceRowStatus, hm2AgentDiffServServiceStorageType=hm2AgentDiffServServiceStorageType, hm2AgentDiffServServiceIfOperStatus=hm2AgentDiffServServiceIfOperStatus, hm2AgentDiffServClassRuleColorRefErrorReturn=hm2AgentDiffServClassRuleColorRefErrorReturn, hm2AgentDiffServPolicyPerfOutDiscardedPackets=hm2AgentDiffServPolicyPerfOutDiscardedPackets, hm2AgentDiffServClassRuleTableFullErrorReturn=hm2AgentDiffServClassRuleTableFullErrorReturn, hm2AgentDiffServClassStorageType=hm2AgentDiffServClassStorageType, hm2AgentDiffServPolicyInstIndex=hm2AgentDiffServPolicyInstIndex, hm2AgentDiffServPolicyIndexNextFree=hm2AgentDiffServPolicyIndexNextFree)
