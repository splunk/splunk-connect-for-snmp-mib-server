#
# PySNMP MIB module PWG-IMAGING-COUNTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PWG-IMAGING-COUNTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:34:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
NotificationType, ObjectIdentity, Counter32, ModuleIdentity, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Bits, Integer32, MibIdentifier, TimeTicks, Unsigned32, Gauge32, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "Counter32", "ModuleIdentity", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Bits", "Integer32", "MibIdentifier", "TimeTicks", "Unsigned32", "Gauge32", "iso", "IpAddress")
DateAndTime, DisplayString, TextualConvention, TruthValue, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TextualConvention", "TruthValue", "TimeStamp")
imagingCounterMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2699, 1, 3))
imagingCounterMIB.setRevisions(('2008-03-18 00:00', '2005-12-23 00:00',))
if mibBuilder.loadTexts: imagingCounterMIB.setLastUpdated('200803180000Z')
if mibBuilder.loadTexts: imagingCounterMIB.setOrganization('Printer Working Group, a Program of IEEE/ISTO')
icMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 0))
icMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1))
icMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2))
icMIBObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2))
icMIBNotificationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 3))
class IcCounter32(TextualConvention, Integer32):
    reference = "Section 5 'Counters' in PWG Imaging System Counters (PWG 5106.1); Section 4.1.12 'integer' datatype in IPP/1.1 (RFC 2911)."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class IcCounterEventTypeTC(TextualConvention, Integer32):
    reference = "Section 5 'Counters' in PWG Imaging System Counters (PWG 5106.1); prtAlertCode in Printer MIB (RFC 1759/3805); PrtAlertCodeTC in IANA Printer MIB (RFC 3805 and http://www.iana.org/assignments/ianaprinter-mib)."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
    namedValues = NamedValues(("other", 1), ("unknown", 2), ("counterCreated", 3), ("counterForErrors", 4), ("counterForWarnings", 5), ("counterReset", 6), ("counterWrap", 7), ("serviceCreated", 8), ("subunitCreated", 9), ("mediaUsedCreated", 10), ("serviceStateChanged", 11), ("subunitStatusChanged", 12), ("counterInterval", 13), ("counterThreshold", 14))

class IcPersistenceTC(TextualConvention, Integer32):
    reference = "Section 5.1.3 'Persistence' in PWG Imaging System Counters (PWG 5106.1); prtMarkerLifeCount and prtMarkerPowerOnCount in Printer MIB (RFC 1759/3805)."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("other", 1), ("unknown", 2), ("lifetime", 3), ("powerOn", 4), ("reset", 5))

class IcServiceStateTC(TextualConvention, Integer32):
    reference = 'printer-state in IPP/1.1 Model (RFC 2911); hrDeviceStatus in Host Resources MIB (RFC 2790).'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("other", 1), ("unknown", 2), ("idle", 3), ("processing", 4), ("stopped", 5), ("testing", 6), ("down", 7))

class IcServiceTypeTC(TextualConvention, Integer32):
    reference = "Section 4.2 'Imaging System Services' in PWG Imaging System Counters (PWG 5106.1); JmJobServiceTypesTC and jobServiceTypes in Job Mon MIB (RFC 2707)."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("other", 1), ("unknown", 2), ("systemTotals", 3), ("copy", 4), ("emailIn", 5), ("emailOut", 6), ("faxIn", 7), ("faxOut", 8), ("networkFaxIn", 9), ("networkFaxOut", 10), ("print", 11), ("scan", 12), ("transform", 13))

class IcSubunitStatusTC(TextualConvention, Integer32):
    reference = "Section 2.2 'Printer Sub-Units' in Printer MIB v2 (RFC 3805); PrtSubUnitStatusTC in IANA Printer MIB (RFC 3805 and http://www.iana.org/assignments/ianaprinter-mib)."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 126)

class IcSubunitTypeTC(TextualConvention, Integer32):
    reference = "Section 4.4 'Counter Overview' in PWG Imaging System Counters (PWG 5106.1); Section 2.2 'Printer Sub-Units' and ptrAlertGroup in Printer MIB (RFC 1759/3805); PrtAlertGroupTC in IANA Printer MIB (RFC 3805 and http://www.iana.org/assignments/ianaprinter-mib); finDeviceType in Finisher MIB (RFC 3806); FinDeviceTypeTC in IANA Finisher MIB (RFC 3806 and http://www.iana.org/assignments/ianafinisher-mib)."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 4, 6, 8, 9, 10, 13, 14, 15, 30, 40, 50, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 503, 504))
    namedValues = NamedValues(("other", 1), ("unknown", 2), ("console", 4), ("cover", 6), ("inputTray", 8), ("outputTray", 9), ("marker", 10), ("mediaPath", 13), ("channel", 14), ("interpreter", 15), ("finisher", 30), ("interface", 40), ("scanner", 50), ("stapler", 302), ("stitcher", 303), ("folder", 304), ("binder", 305), ("trimmer", 306), ("dieCutter", 307), ("puncher", 308), ("perforater", 309), ("slitter", 310), ("separationCutter", 311), ("imprinter", 312), ("wrapper", 313), ("bander", 314), ("makeEnvelope", 315), ("stacker", 316), ("sheetRotator", 317), ("inserter", 318), ("scannerADF", 503), ("scannerPlaten", 504))

class IcWorkTypeTC(TextualConvention, Integer32):
    reference = "Section 5.2 'Work Counters' in PWG Imaging System Counters (PWG 5106.1)."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("other", 1), ("unknown", 2), ("workTotals", 3), ("datastream", 4), ("auxiliary", 5), ("waste", 6), ("maintenance", 7))

icGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 1))
icGeneralNaturalLanguage = MibScalar((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63)).clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: icGeneralNaturalLanguage.setStatus('current')
icGeneralTotalServiceRecords = MibScalar((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 1, 2), IcCounter32()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: icGeneralTotalServiceRecords.setStatus('current')
icGeneralTotalSubunitRecords = MibScalar((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 1, 3), IcCounter32()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: icGeneralTotalSubunitRecords.setStatus('current')
icGeneralTotalMediaUsedRecords = MibScalar((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 1, 4), IcCounter32()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: icGeneralTotalMediaUsedRecords.setStatus('current')
icKey = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 2))
icKeyTable = MibTable((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 2, 1), )
if mibBuilder.loadTexts: icKeyTable.setStatus('current')
icKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 2, 1, 1), ).setIndexNames((0, "PWG-IMAGING-COUNTER-MIB", "icKeyIndex"))
if mibBuilder.loadTexts: icKeyEntry.setStatus('current')
icKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: icKeyIndex.setStatus('current')
icKeyServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 2, 1, 1, 2), IcServiceTypeTC().clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: icKeyServiceType.setStatus('current')
icKeyServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: icKeyServiceIndex.setStatus('current')
icKeySubunitType = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 2, 1, 1, 4), IcSubunitTypeTC().clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: icKeySubunitType.setStatus('current')
icKeySubunitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: icKeySubunitIndex.setStatus('current')
icService = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 3))
icServiceTable = MibTable((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 3, 1), )
if mibBuilder.loadTexts: icServiceTable.setStatus('current')
icServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 3, 1, 1), ).setIndexNames((0, "PWG-IMAGING-COUNTER-MIB", "icServiceType"), (0, "PWG-IMAGING-COUNTER-MIB", "icServiceIndex"))
if mibBuilder.loadTexts: icServiceEntry.setStatus('current')
icServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 3, 1, 1, 1), IcServiceTypeTC())
if mibBuilder.loadTexts: icServiceType.setStatus('current')
icServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: icServiceIndex.setStatus('current')
icServiceKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: icServiceKey.setStatus('current')
icServiceInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 3, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: icServiceInfo.setStatus('current')
icServiceJobSetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: icServiceJobSetIndex.setStatus('current')
icServiceState = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 3, 1, 1, 6), IcServiceStateTC().clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: icServiceState.setStatus('current')
icServiceStateMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 3, 1, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: icServiceStateMessage.setStatus('current')
icServicePrtAlertIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: icServicePrtAlertIndex.setStatus('current')
icSubunit = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 4))
icSubunitTable = MibTable((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 4, 1), )
if mibBuilder.loadTexts: icSubunitTable.setStatus('current')
icSubunitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 4, 1, 1), ).setIndexNames((0, "PWG-IMAGING-COUNTER-MIB", "icSubunitType"), (0, "PWG-IMAGING-COUNTER-MIB", "icSubunitIndex"))
if mibBuilder.loadTexts: icSubunitEntry.setStatus('current')
icSubunitType = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 4, 1, 1, 1), IcSubunitTypeTC())
if mibBuilder.loadTexts: icSubunitType.setStatus('current')
icSubunitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: icSubunitIndex.setStatus('current')
icSubunitKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: icSubunitKey.setStatus('current')
icSubunitInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 4, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: icSubunitInfo.setStatus('current')
icSubunitStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 4, 1, 1, 5), IcSubunitStatusTC().clone(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: icSubunitStatus.setStatus('current')
icSubunitStatusMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 4, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: icSubunitStatusMessage.setStatus('current')
icTime = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 5))
icTimeTable = MibTable((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 5, 1), )
if mibBuilder.loadTexts: icTimeTable.setStatus('current')
icTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 5, 1, 1), ).setIndexNames((0, "PWG-IMAGING-COUNTER-MIB", "icTimeKeyIndex"), (0, "PWG-IMAGING-COUNTER-MIB", "icTimePersistence"))
if mibBuilder.loadTexts: icTimeEntry.setStatus('current')
icTimeKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: icTimeKeyIndex.setStatus('current')
icTimePersistence = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 5, 1, 1, 2), IcPersistenceTC())
if mibBuilder.loadTexts: icTimePersistence.setStatus('current')
icTimeTotalSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 5, 1, 1, 3), IcCounter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: icTimeTotalSeconds.setStatus('current')
icTimeDownSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 5, 1, 1, 4), IcCounter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: icTimeDownSeconds.setStatus('current')
icTimeMaintenanceSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 5, 1, 1, 5), IcCounter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: icTimeMaintenanceSeconds.setStatus('current')
icTimeProcessingSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 5, 1, 1, 6), IcCounter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: icTimeProcessingSeconds.setStatus('current')
icMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6))
icMonitorTable = MibTable((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6, 1), )
if mibBuilder.loadTexts: icMonitorTable.setStatus('current')
icMonitorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6, 1, 1), ).setIndexNames((0, "PWG-IMAGING-COUNTER-MIB", "icMonitorKeyIndex"), (0, "PWG-IMAGING-COUNTER-MIB", "icMonitorPersistence"))
if mibBuilder.loadTexts: icMonitorEntry.setStatus('current')
icMonitorKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: icMonitorKeyIndex.setStatus('current')
icMonitorPersistence = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6, 1, 1, 2), IcPersistenceTC())
if mibBuilder.loadTexts: icMonitorPersistence.setStatus('current')
icMonitorConfigChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6, 1, 1, 3), IcCounter32()).setUnits('changes').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMonitorConfigChanges.setStatus('current')
icMonitorTotalAlerts = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6, 1, 1, 4), IcCounter32()).setUnits('alerts').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMonitorTotalAlerts.setStatus('current')
icMonitorCriticalAlerts = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6, 1, 1, 5), IcCounter32()).setUnits('alerts').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMonitorCriticalAlerts.setStatus('current')
icMonitorAbortedJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6, 1, 1, 6), IcCounter32()).setUnits('jobs').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMonitorAbortedJobs.setStatus('current')
icMonitorCanceledJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6, 1, 1, 7), IcCounter32()).setUnits('jobs').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMonitorCanceledJobs.setStatus('current')
icMonitorCompletedJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6, 1, 1, 8), IcCounter32()).setUnits('jobs').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMonitorCompletedJobs.setStatus('current')
icMonitorCompletedFinisherJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6, 1, 1, 9), IcCounter32()).setUnits('jobs').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMonitorCompletedFinisherJobs.setStatus('current')
icMonitorMemoryAllocErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6, 1, 1, 10), IcCounter32()).setUnits('errors').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMonitorMemoryAllocErrors.setStatus('current')
icMonitorMemoryAllocWarnings = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6, 1, 1, 11), IcCounter32()).setUnits('warnings').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMonitorMemoryAllocWarnings.setStatus('current')
icMonitorStorageAllocErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6, 1, 1, 12), IcCounter32()).setUnits('errors').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMonitorStorageAllocErrors.setStatus('current')
icMonitorStorageAllocWarnings = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6, 1, 1, 13), IcCounter32()).setUnits('warnings').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMonitorStorageAllocWarnings.setStatus('current')
icMonitorLocalStorageKOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6, 1, 1, 14), IcCounter32()).setUnits('koctets').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMonitorLocalStorageKOctets.setStatus('current')
icMonitorRemoteStorageKOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 6, 1, 1, 15), IcCounter32()).setUnits('koctets').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMonitorRemoteStorageKOctets.setStatus('current')
icImage = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 7))
icImageTable = MibTable((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 7, 1), )
if mibBuilder.loadTexts: icImageTable.setStatus('current')
icImageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 7, 1, 1), ).setIndexNames((0, "PWG-IMAGING-COUNTER-MIB", "icImageKeyIndex"), (0, "PWG-IMAGING-COUNTER-MIB", "icImageWorkType"), (0, "PWG-IMAGING-COUNTER-MIB", "icImagePersistence"))
if mibBuilder.loadTexts: icImageEntry.setStatus('current')
icImageKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: icImageKeyIndex.setStatus('current')
icImageWorkType = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 7, 1, 1, 2), IcWorkTypeTC())
if mibBuilder.loadTexts: icImageWorkType.setStatus('current')
icImagePersistence = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 7, 1, 1, 3), IcPersistenceTC())
if mibBuilder.loadTexts: icImagePersistence.setStatus('current')
icImageTotalImages = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 7, 1, 1, 4), IcCounter32()).setUnits('images').setMaxAccess("readonly")
if mibBuilder.loadTexts: icImageTotalImages.setStatus('current')
icImageMonochromeImages = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 7, 1, 1, 5), IcCounter32()).setUnits('images').setMaxAccess("readonly")
if mibBuilder.loadTexts: icImageMonochromeImages.setStatus('current')
icImageFullColorImages = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 7, 1, 1, 6), IcCounter32()).setUnits('images').setMaxAccess("readonly")
if mibBuilder.loadTexts: icImageFullColorImages.setStatus('current')
icImpression = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 8))
icImpressionTable = MibTable((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 8, 1), )
if mibBuilder.loadTexts: icImpressionTable.setStatus('current')
icImpressionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 8, 1, 1), ).setIndexNames((0, "PWG-IMAGING-COUNTER-MIB", "icImpressionKeyIndex"), (0, "PWG-IMAGING-COUNTER-MIB", "icImpressionWorkType"), (0, "PWG-IMAGING-COUNTER-MIB", "icImpressionPersistence"))
if mibBuilder.loadTexts: icImpressionEntry.setStatus('current')
icImpressionKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: icImpressionKeyIndex.setStatus('current')
icImpressionWorkType = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 8, 1, 1, 2), IcWorkTypeTC())
if mibBuilder.loadTexts: icImpressionWorkType.setStatus('current')
icImpressionPersistence = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 8, 1, 1, 3), IcPersistenceTC())
if mibBuilder.loadTexts: icImpressionPersistence.setStatus('current')
icImpressionTotalImps = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 8, 1, 1, 4), IcCounter32()).setUnits('impressions').setMaxAccess("readonly")
if mibBuilder.loadTexts: icImpressionTotalImps.setStatus('current')
icImpressionMonochromeImps = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 8, 1, 1, 5), IcCounter32()).setUnits('impressions').setMaxAccess("readonly")
if mibBuilder.loadTexts: icImpressionMonochromeImps.setStatus('current')
icImpressionBlankImps = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 8, 1, 1, 6), IcCounter32()).setUnits('impressions').setMaxAccess("readonly")
if mibBuilder.loadTexts: icImpressionBlankImps.setStatus('current')
icImpressionFullColorImps = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 8, 1, 1, 7), IcCounter32()).setUnits('impressions').setMaxAccess("readonly")
if mibBuilder.loadTexts: icImpressionFullColorImps.setStatus('current')
icImpressionHighlightColorImps = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 8, 1, 1, 8), IcCounter32()).setUnits('impressions').setMaxAccess("readonly")
if mibBuilder.loadTexts: icImpressionHighlightColorImps.setStatus('current')
icTwoSided = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 9))
icTwoSidedTable = MibTable((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 9, 1), )
if mibBuilder.loadTexts: icTwoSidedTable.setStatus('current')
icTwoSidedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 9, 1, 1), ).setIndexNames((0, "PWG-IMAGING-COUNTER-MIB", "icTwoSidedKeyIndex"), (0, "PWG-IMAGING-COUNTER-MIB", "icTwoSidedWorkType"), (0, "PWG-IMAGING-COUNTER-MIB", "icTwoSidedPersistence"))
if mibBuilder.loadTexts: icTwoSidedEntry.setStatus('current')
icTwoSidedKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: icTwoSidedKeyIndex.setStatus('current')
icTwoSidedWorkType = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 9, 1, 1, 2), IcWorkTypeTC())
if mibBuilder.loadTexts: icTwoSidedWorkType.setStatus('current')
icTwoSidedPersistence = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 9, 1, 1, 3), IcPersistenceTC())
if mibBuilder.loadTexts: icTwoSidedPersistence.setStatus('current')
icTwoSidedTotalImps = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 9, 1, 1, 4), IcCounter32()).setUnits('impressions').setMaxAccess("readonly")
if mibBuilder.loadTexts: icTwoSidedTotalImps.setStatus('current')
icTwoSidedMonochromeImps = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 9, 1, 1, 5), IcCounter32()).setUnits('impressions').setMaxAccess("readonly")
if mibBuilder.loadTexts: icTwoSidedMonochromeImps.setStatus('current')
icTwoSidedBlankImps = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 9, 1, 1, 6), IcCounter32()).setUnits('impressions').setMaxAccess("readonly")
if mibBuilder.loadTexts: icTwoSidedBlankImps.setStatus('current')
icTwoSidedFullColorImps = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 9, 1, 1, 7), IcCounter32()).setUnits('impressions').setMaxAccess("readonly")
if mibBuilder.loadTexts: icTwoSidedFullColorImps.setStatus('current')
icTwoSidedHighlightColorImps = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 9, 1, 1, 8), IcCounter32()).setUnits('impressions').setMaxAccess("readonly")
if mibBuilder.loadTexts: icTwoSidedHighlightColorImps.setStatus('current')
icSheet = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 10))
icSheetTable = MibTable((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 10, 1), )
if mibBuilder.loadTexts: icSheetTable.setStatus('current')
icSheetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 10, 1, 1), ).setIndexNames((0, "PWG-IMAGING-COUNTER-MIB", "icSheetKeyIndex"), (0, "PWG-IMAGING-COUNTER-MIB", "icSheetWorkType"), (0, "PWG-IMAGING-COUNTER-MIB", "icSheetPersistence"))
if mibBuilder.loadTexts: icSheetEntry.setStatus('current')
icSheetKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: icSheetKeyIndex.setStatus('current')
icSheetWorkType = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 10, 1, 1, 2), IcWorkTypeTC())
if mibBuilder.loadTexts: icSheetWorkType.setStatus('current')
icSheetPersistence = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 10, 1, 1, 3), IcPersistenceTC())
if mibBuilder.loadTexts: icSheetPersistence.setStatus('current')
icSheetTotalSheets = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 10, 1, 1, 4), IcCounter32()).setUnits('sheets').setMaxAccess("readonly")
if mibBuilder.loadTexts: icSheetTotalSheets.setStatus('current')
icSheetMonochromeSheets = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 10, 1, 1, 5), IcCounter32()).setUnits('sheets').setMaxAccess("readonly")
if mibBuilder.loadTexts: icSheetMonochromeSheets.setStatus('current')
icSheetBlankSheets = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 10, 1, 1, 6), IcCounter32()).setUnits('sheets').setMaxAccess("readonly")
if mibBuilder.loadTexts: icSheetBlankSheets.setStatus('current')
icSheetFullColorSheets = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 10, 1, 1, 7), IcCounter32()).setUnits('sheets').setMaxAccess("readonly")
if mibBuilder.loadTexts: icSheetFullColorSheets.setStatus('current')
icSheetHighlightColorSheets = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 10, 1, 1, 8), IcCounter32()).setUnits('sheets').setMaxAccess("readonly")
if mibBuilder.loadTexts: icSheetHighlightColorSheets.setStatus('current')
icTraffic = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 11))
icTrafficTable = MibTable((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 11, 1), )
if mibBuilder.loadTexts: icTrafficTable.setStatus('current')
icTrafficEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 11, 1, 1), ).setIndexNames((0, "PWG-IMAGING-COUNTER-MIB", "icTrafficKeyIndex"), (0, "PWG-IMAGING-COUNTER-MIB", "icTrafficWorkType"), (0, "PWG-IMAGING-COUNTER-MIB", "icTrafficPersistence"))
if mibBuilder.loadTexts: icTrafficEntry.setStatus('current')
icTrafficKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: icTrafficKeyIndex.setStatus('current')
icTrafficWorkType = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 11, 1, 1, 2), IcWorkTypeTC())
if mibBuilder.loadTexts: icTrafficWorkType.setStatus('current')
icTrafficPersistence = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 11, 1, 1, 3), IcPersistenceTC())
if mibBuilder.loadTexts: icTrafficPersistence.setStatus('current')
icTrafficInputKOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 11, 1, 1, 4), IcCounter32()).setUnits('koctets').setMaxAccess("readonly")
if mibBuilder.loadTexts: icTrafficInputKOctets.setStatus('current')
icTrafficOutputKOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 11, 1, 1, 5), IcCounter32()).setUnits('koctets').setMaxAccess("readonly")
if mibBuilder.loadTexts: icTrafficOutputKOctets.setStatus('current')
icTrafficInputMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 11, 1, 1, 6), IcCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: icTrafficInputMessages.setStatus('current')
icTrafficOutputMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 11, 1, 1, 7), IcCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: icTrafficOutputMessages.setStatus('current')
icMediaUsed = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 12))
icMediaUsedTable = MibTable((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 12, 1), )
if mibBuilder.loadTexts: icMediaUsedTable.setStatus('current')
icMediaUsedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 12, 1, 1), ).setIndexNames((0, "PWG-IMAGING-COUNTER-MIB", "icMediaUsedKeyIndex"), (0, "PWG-IMAGING-COUNTER-MIB", "icMediaUsedIndex"), (0, "PWG-IMAGING-COUNTER-MIB", "icMediaUsedPersistence"))
if mibBuilder.loadTexts: icMediaUsedEntry.setStatus('current')
icMediaUsedKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: icMediaUsedKeyIndex.setStatus('current')
icMediaUsedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: icMediaUsedIndex.setStatus('current')
icMediaUsedPersistence = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 12, 1, 1, 3), IcPersistenceTC())
if mibBuilder.loadTexts: icMediaUsedPersistence.setStatus('current')
icMediaUsedTotalSheets = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 12, 1, 1, 4), IcCounter32()).setUnits('sheets').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMediaUsedTotalSheets.setStatus('current')
icMediaUsedMonochromeSheets = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 12, 1, 1, 5), IcCounter32()).setUnits('sheets').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMediaUsedMonochromeSheets.setStatus('current')
icMediaUsedBlankSheets = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 12, 1, 1, 6), IcCounter32()).setUnits('sheets').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMediaUsedBlankSheets.setStatus('current')
icMediaUsedFullColorSheets = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 12, 1, 1, 7), IcCounter32()).setUnits('sheets').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMediaUsedFullColorSheets.setStatus('current')
icMediaUsedHighlightColorSheets = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 12, 1, 1, 8), IcCounter32()).setUnits('sheets').setMaxAccess("readonly")
if mibBuilder.loadTexts: icMediaUsedHighlightColorSheets.setStatus('current')
icMediaUsedMediaSizeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 12, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: icMediaUsedMediaSizeName.setStatus('current')
icMediaUsedMediaInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 12, 1, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: icMediaUsedMediaInfo.setStatus('current')
icMediaUsedMediaName = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 12, 1, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: icMediaUsedMediaName.setStatus('current')
icMediaUsedMediaAccountingKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 12, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: icMediaUsedMediaAccountingKey.setStatus('current')
icAlert = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 13))
icAlertTable = MibTable((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 13, 1), )
if mibBuilder.loadTexts: icAlertTable.setStatus('current')
icAlertEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 13, 1, 1), ).setIndexNames((0, "PWG-IMAGING-COUNTER-MIB", "icAlertKeyIndex"), (0, "PWG-IMAGING-COUNTER-MIB", "icAlertIndex"), (0, "PWG-IMAGING-COUNTER-MIB", "icAlertPersistence"))
if mibBuilder.loadTexts: icAlertEntry.setStatus('current')
icAlertKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: icAlertKeyIndex.setStatus('current')
icAlertIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 13, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: icAlertIndex.setStatus('current')
icAlertPersistence = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 13, 1, 1, 3), IcPersistenceTC())
if mibBuilder.loadTexts: icAlertPersistence.setStatus('current')
icAlertCounterEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 13, 1, 1, 4), IcCounterEventTypeTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icAlertCounterEventType.setStatus('current')
icAlertCounterName = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 13, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: icAlertCounterName.setStatus('current')
icAlertCounterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 13, 1, 1, 6), IcCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icAlertCounterValue.setStatus('current')
icAlertDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 13, 1, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icAlertDateAndTime.setStatus('current')
icAlertTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 13, 1, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icAlertTimeStamp.setStatus('current')
icAlertV2Trap = NotificationType((1, 3, 6, 1, 4, 1, 2699, 1, 3, 0, 1)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icAlertCounterEventType"), ("PWG-IMAGING-COUNTER-MIB", "icAlertCounterName"), ("PWG-IMAGING-COUNTER-MIB", "icAlertCounterValue"), ("PWG-IMAGING-COUNTER-MIB", "icAlertDateAndTime"))
if mibBuilder.loadTexts: icAlertV2Trap.setStatus('current')
icSubunitMap = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 14))
icSubunitMapTable = MibTable((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 14, 1), )
if mibBuilder.loadTexts: icSubunitMapTable.setStatus('current')
icSubunitMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 14, 1, 1), ).setIndexNames((0, "PWG-IMAGING-COUNTER-MIB", "icSubunitMapServiceKeyIndex"), (0, "PWG-IMAGING-COUNTER-MIB", "icSubunitMapSubunitKeyIndex"))
if mibBuilder.loadTexts: icSubunitMapEntry.setStatus('current')
icSubunitMapServiceKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: icSubunitMapServiceKeyIndex.setStatus('current')
icSubunitMapSubunitKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 14, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: icSubunitMapSubunitKeyIndex.setStatus('current')
icSubunitMapSubunitEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 3, 1, 14, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: icSubunitMapSubunitEnabled.setStatus('current')
icMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 1)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icGeneralGroup"), ("PWG-IMAGING-COUNTER-MIB", "icKeyGroup"), ("PWG-IMAGING-COUNTER-MIB", "icServiceGroup"), ("PWG-IMAGING-COUNTER-MIB", "icTimeGroup"), ("PWG-IMAGING-COUNTER-MIB", "icMonitorGroup"), ("PWG-IMAGING-COUNTER-MIB", "icSubunitGroup"), ("PWG-IMAGING-COUNTER-MIB", "icImageGroup"), ("PWG-IMAGING-COUNTER-MIB", "icImpressionGroup"), ("PWG-IMAGING-COUNTER-MIB", "icTwoSidedGroup"), ("PWG-IMAGING-COUNTER-MIB", "icSheetGroup"), ("PWG-IMAGING-COUNTER-MIB", "icTrafficGroup"), ("PWG-IMAGING-COUNTER-MIB", "icMediaUsedGroup"), ("PWG-IMAGING-COUNTER-MIB", "icAlertGroup"), ("PWG-IMAGING-COUNTER-MIB", "icAlertTrapGroup"), ("PWG-IMAGING-COUNTER-MIB", "icSubunitMapV2Group"), ("PWG-IMAGING-COUNTER-MIB", "icServiceV2Group"), ("PWG-IMAGING-COUNTER-MIB", "icSubunitV2Group"), ("PWG-IMAGING-COUNTER-MIB", "icMediaUsedV2Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icMIBCompliance = icMIBCompliance.setStatus('current')
icMIBStateCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 4)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icGeneralGroup"), ("PWG-IMAGING-COUNTER-MIB", "icKeyGroup"), ("PWG-IMAGING-COUNTER-MIB", "icServiceGroup"), ("PWG-IMAGING-COUNTER-MIB", "icServiceV2Group"), ("PWG-IMAGING-COUNTER-MIB", "icSubunitGroup"), ("PWG-IMAGING-COUNTER-MIB", "icSubunitV2Group"), ("PWG-IMAGING-COUNTER-MIB", "icSubunitMapV2Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icMIBStateCompliance = icMIBStateCompliance.setStatus('current')
icGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2, 1)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icGeneralNaturalLanguage"), ("PWG-IMAGING-COUNTER-MIB", "icGeneralTotalServiceRecords"), ("PWG-IMAGING-COUNTER-MIB", "icGeneralTotalSubunitRecords"), ("PWG-IMAGING-COUNTER-MIB", "icGeneralTotalMediaUsedRecords"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icGeneralGroup = icGeneralGroup.setStatus('current')
icKeyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2, 2)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icKeyServiceType"), ("PWG-IMAGING-COUNTER-MIB", "icKeyServiceIndex"), ("PWG-IMAGING-COUNTER-MIB", "icKeySubunitType"), ("PWG-IMAGING-COUNTER-MIB", "icKeySubunitIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icKeyGroup = icKeyGroup.setStatus('current')
icServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2, 3)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icServiceKey"), ("PWG-IMAGING-COUNTER-MIB", "icServiceInfo"), ("PWG-IMAGING-COUNTER-MIB", "icServiceJobSetIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icServiceGroup = icServiceGroup.setStatus('current')
icSubunitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2, 4)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icSubunitKey"), ("PWG-IMAGING-COUNTER-MIB", "icSubunitInfo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icSubunitGroup = icSubunitGroup.setStatus('current')
icTimeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2, 5)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icTimeTotalSeconds"), ("PWG-IMAGING-COUNTER-MIB", "icTimeDownSeconds"), ("PWG-IMAGING-COUNTER-MIB", "icTimeMaintenanceSeconds"), ("PWG-IMAGING-COUNTER-MIB", "icTimeProcessingSeconds"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icTimeGroup = icTimeGroup.setStatus('current')
icMonitorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2, 6)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icMonitorConfigChanges"), ("PWG-IMAGING-COUNTER-MIB", "icMonitorTotalAlerts"), ("PWG-IMAGING-COUNTER-MIB", "icMonitorCriticalAlerts"), ("PWG-IMAGING-COUNTER-MIB", "icMonitorAbortedJobs"), ("PWG-IMAGING-COUNTER-MIB", "icMonitorCanceledJobs"), ("PWG-IMAGING-COUNTER-MIB", "icMonitorCompletedJobs"), ("PWG-IMAGING-COUNTER-MIB", "icMonitorCompletedFinisherJobs"), ("PWG-IMAGING-COUNTER-MIB", "icMonitorMemoryAllocErrors"), ("PWG-IMAGING-COUNTER-MIB", "icMonitorMemoryAllocWarnings"), ("PWG-IMAGING-COUNTER-MIB", "icMonitorStorageAllocErrors"), ("PWG-IMAGING-COUNTER-MIB", "icMonitorStorageAllocWarnings"), ("PWG-IMAGING-COUNTER-MIB", "icMonitorLocalStorageKOctets"), ("PWG-IMAGING-COUNTER-MIB", "icMonitorRemoteStorageKOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icMonitorGroup = icMonitorGroup.setStatus('current')
icImageGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2, 7)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icImageTotalImages"), ("PWG-IMAGING-COUNTER-MIB", "icImageMonochromeImages"), ("PWG-IMAGING-COUNTER-MIB", "icImageFullColorImages"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icImageGroup = icImageGroup.setStatus('current')
icImpressionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2, 8)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icImpressionTotalImps"), ("PWG-IMAGING-COUNTER-MIB", "icImpressionMonochromeImps"), ("PWG-IMAGING-COUNTER-MIB", "icImpressionBlankImps"), ("PWG-IMAGING-COUNTER-MIB", "icImpressionFullColorImps"), ("PWG-IMAGING-COUNTER-MIB", "icImpressionHighlightColorImps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icImpressionGroup = icImpressionGroup.setStatus('current')
icTwoSidedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2, 9)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icTwoSidedTotalImps"), ("PWG-IMAGING-COUNTER-MIB", "icTwoSidedMonochromeImps"), ("PWG-IMAGING-COUNTER-MIB", "icTwoSidedBlankImps"), ("PWG-IMAGING-COUNTER-MIB", "icTwoSidedFullColorImps"), ("PWG-IMAGING-COUNTER-MIB", "icTwoSidedHighlightColorImps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icTwoSidedGroup = icTwoSidedGroup.setStatus('current')
icSheetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2, 10)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icSheetTotalSheets"), ("PWG-IMAGING-COUNTER-MIB", "icSheetMonochromeSheets"), ("PWG-IMAGING-COUNTER-MIB", "icSheetBlankSheets"), ("PWG-IMAGING-COUNTER-MIB", "icSheetFullColorSheets"), ("PWG-IMAGING-COUNTER-MIB", "icSheetHighlightColorSheets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icSheetGroup = icSheetGroup.setStatus('current')
icTrafficGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2, 11)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icTrafficInputKOctets"), ("PWG-IMAGING-COUNTER-MIB", "icTrafficOutputKOctets"), ("PWG-IMAGING-COUNTER-MIB", "icTrafficInputMessages"), ("PWG-IMAGING-COUNTER-MIB", "icTrafficOutputMessages"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icTrafficGroup = icTrafficGroup.setStatus('current')
icMediaUsedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2, 12)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icMediaUsedTotalSheets"), ("PWG-IMAGING-COUNTER-MIB", "icMediaUsedMonochromeSheets"), ("PWG-IMAGING-COUNTER-MIB", "icMediaUsedBlankSheets"), ("PWG-IMAGING-COUNTER-MIB", "icMediaUsedFullColorSheets"), ("PWG-IMAGING-COUNTER-MIB", "icMediaUsedHighlightColorSheets"), ("PWG-IMAGING-COUNTER-MIB", "icMediaUsedMediaSizeName"), ("PWG-IMAGING-COUNTER-MIB", "icMediaUsedMediaInfo"), ("PWG-IMAGING-COUNTER-MIB", "icMediaUsedMediaName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icMediaUsedGroup = icMediaUsedGroup.setStatus('current')
icAlertGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2, 13)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icAlertCounterEventType"), ("PWG-IMAGING-COUNTER-MIB", "icAlertCounterName"), ("PWG-IMAGING-COUNTER-MIB", "icAlertCounterValue"), ("PWG-IMAGING-COUNTER-MIB", "icAlertDateAndTime"), ("PWG-IMAGING-COUNTER-MIB", "icAlertTimeStamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icAlertGroup = icAlertGroup.setStatus('current')
icAlertTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 3, 1)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icAlertV2Trap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icAlertTrapGroup = icAlertTrapGroup.setStatus('current')
icSubunitMapV2Group = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2, 14)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icSubunitMapSubunitEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icSubunitMapV2Group = icSubunitMapV2Group.setStatus('current')
icServiceV2Group = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2, 15)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icServiceState"), ("PWG-IMAGING-COUNTER-MIB", "icServiceStateMessage"), ("PWG-IMAGING-COUNTER-MIB", "icServicePrtAlertIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icServiceV2Group = icServiceV2Group.setStatus('current')
icSubunitV2Group = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2, 16)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icSubunitStatus"), ("PWG-IMAGING-COUNTER-MIB", "icSubunitStatusMessage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icSubunitV2Group = icSubunitV2Group.setStatus('current')
icMediaUsedV2Group = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 3, 2, 2, 17)).setObjects(("PWG-IMAGING-COUNTER-MIB", "icMediaUsedMediaAccountingKey"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    icMediaUsedV2Group = icMediaUsedV2Group.setStatus('current')
mibBuilder.exportSymbols("PWG-IMAGING-COUNTER-MIB", icTrafficGroup=icTrafficGroup, icAlertCounterEventType=icAlertCounterEventType, icMonitorEntry=icMonitorEntry, icSheetKeyIndex=icSheetKeyIndex, icSubunitType=icSubunitType, icKey=icKey, icAlertV2Trap=icAlertV2Trap, icServicePrtAlertIndex=icServicePrtAlertIndex, icGeneralTotalServiceRecords=icGeneralTotalServiceRecords, icSubunitStatus=icSubunitStatus, icImageEntry=icImageEntry, icTrafficWorkType=icTrafficWorkType, icTwoSidedFullColorImps=icTwoSidedFullColorImps, icMediaUsedIndex=icMediaUsedIndex, icMIBConformance=icMIBConformance, icTwoSidedMonochromeImps=icTwoSidedMonochromeImps, icMediaUsedV2Group=icMediaUsedV2Group, icSheetTotalSheets=icSheetTotalSheets, icSheetBlankSheets=icSheetBlankSheets, icTrafficInputKOctets=icTrafficInputKOctets, icSheetHighlightColorSheets=icSheetHighlightColorSheets, icGeneralTotalSubunitRecords=icGeneralTotalSubunitRecords, icMIBObjectGroups=icMIBObjectGroups, icSubunitTable=icSubunitTable, icSheetEntry=icSheetEntry, icSubunitMap=icSubunitMap, icSubunitMapServiceKeyIndex=icSubunitMapServiceKeyIndex, icGeneralGroup=icGeneralGroup, icMonitorMemoryAllocWarnings=icMonitorMemoryAllocWarnings, icTimeEntry=icTimeEntry, icSheet=icSheet, icMonitorCanceledJobs=icMonitorCanceledJobs, icMIBNotificationGroups=icMIBNotificationGroups, icTrafficTable=icTrafficTable, icImageWorkType=icImageWorkType, icMonitorGroup=icMonitorGroup, icAlertTimeStamp=icAlertTimeStamp, icSubunitMapTable=icSubunitMapTable, IcSubunitStatusTC=IcSubunitStatusTC, icAlertTable=icAlertTable, PYSNMP_MODULE_ID=imagingCounterMIB, icMonitorKeyIndex=icMonitorKeyIndex, icServiceV2Group=icServiceV2Group, icMonitorMemoryAllocErrors=icMonitorMemoryAllocErrors, IcServiceTypeTC=IcServiceTypeTC, icSubunitMapSubunitKeyIndex=icSubunitMapSubunitKeyIndex, icMediaUsedMediaName=icMediaUsedMediaName, icAlertIndex=icAlertIndex, icImpressionTotalImps=icImpressionTotalImps, icSheetTable=icSheetTable, icMediaUsedTable=icMediaUsedTable, icTwoSidedTable=icTwoSidedTable, icTimeMaintenanceSeconds=icTimeMaintenanceSeconds, icMonitorConfigChanges=icMonitorConfigChanges, icImpressionPersistence=icImpressionPersistence, icService=icService, icMonitorStorageAllocWarnings=icMonitorStorageAllocWarnings, icTimeDownSeconds=icTimeDownSeconds, icImpressionFullColorImps=icImpressionFullColorImps, icGeneralTotalMediaUsedRecords=icGeneralTotalMediaUsedRecords, icKeySubunitType=icKeySubunitType, icSheetPersistence=icSheetPersistence, icServiceIndex=icServiceIndex, icImageGroup=icImageGroup, icImpressionTable=icImpressionTable, icSheetMonochromeSheets=icSheetMonochromeSheets, icServiceKey=icServiceKey, icTwoSidedTotalImps=icTwoSidedTotalImps, icTrafficKeyIndex=icTrafficKeyIndex, imagingCounterMIB=imagingCounterMIB, IcCounterEventTypeTC=IcCounterEventTypeTC, icKeySubunitIndex=icKeySubunitIndex, icImpressionGroup=icImpressionGroup, icMonitorStorageAllocErrors=icMonitorStorageAllocErrors, icSheetWorkType=icSheetWorkType, icMediaUsedMonochromeSheets=icMediaUsedMonochromeSheets, IcSubunitTypeTC=IcSubunitTypeTC, icMonitorTotalAlerts=icMonitorTotalAlerts, icSubunitV2Group=icSubunitV2Group, icMIBObjects=icMIBObjects, icTime=icTime, icMediaUsedMediaSizeName=icMediaUsedMediaSizeName, IcCounter32=IcCounter32, icServiceType=icServiceType, icMonitorPersistence=icMonitorPersistence, icMonitorRemoteStorageKOctets=icMonitorRemoteStorageKOctets, icMonitorCompletedFinisherJobs=icMonitorCompletedFinisherJobs, icSubunitIndex=icSubunitIndex, icTrafficOutputMessages=icTrafficOutputMessages, icTimeGroup=icTimeGroup, icAlertGroup=icAlertGroup, icMonitorCompletedJobs=icMonitorCompletedJobs, icAlertPersistence=icAlertPersistence, icAlertTrapGroup=icAlertTrapGroup, icKeyServiceType=icKeyServiceType, icMediaUsedBlankSheets=icMediaUsedBlankSheets, icAlertDateAndTime=icAlertDateAndTime, icSubunitInfo=icSubunitInfo, icImageKeyIndex=icImageKeyIndex, icMediaUsedMediaAccountingKey=icMediaUsedMediaAccountingKey, icImpression=icImpression, icAlert=icAlert, icSubunitMapV2Group=icSubunitMapV2Group, icServiceEntry=icServiceEntry, icSubunitEntry=icSubunitEntry, icMediaUsedGroup=icMediaUsedGroup, icTwoSidedGroup=icTwoSidedGroup, icTimePersistence=icTimePersistence, icSubunit=icSubunit, icSubunitGroup=icSubunitGroup, icImageFullColorImages=icImageFullColorImages, icAlertEntry=icAlertEntry, icKeyTable=icKeyTable, icAlertCounterName=icAlertCounterName, IcPersistenceTC=IcPersistenceTC, icMonitorAbortedJobs=icMonitorAbortedJobs, icImpressionHighlightColorImps=icImpressionHighlightColorImps, icTimeProcessingSeconds=icTimeProcessingSeconds, icTwoSidedKeyIndex=icTwoSidedKeyIndex, icAlertCounterValue=icAlertCounterValue, icMediaUsedKeyIndex=icMediaUsedKeyIndex, icGeneralNaturalLanguage=icGeneralNaturalLanguage, icServiceGroup=icServiceGroup, icMediaUsedMediaInfo=icMediaUsedMediaInfo, icImageTotalImages=icImageTotalImages, icTrafficInputMessages=icTrafficInputMessages, icMonitor=icMonitor, icSubunitStatusMessage=icSubunitStatusMessage, icMIBStateCompliance=icMIBStateCompliance, icSubunitMapSubunitEnabled=icSubunitMapSubunitEnabled, icMIBNotifications=icMIBNotifications, icTwoSidedEntry=icTwoSidedEntry, icTrafficEntry=icTrafficEntry, icKeyServiceIndex=icKeyServiceIndex, icKeyEntry=icKeyEntry, icServiceInfo=icServiceInfo, icSheetGroup=icSheetGroup, icImpressionBlankImps=icImpressionBlankImps, icTwoSided=icTwoSided, icImage=icImage, icServiceTable=icServiceTable, icKeyIndex=icKeyIndex, icImpressionMonochromeImps=icImpressionMonochromeImps, icMonitorCriticalAlerts=icMonitorCriticalAlerts, icTimeKeyIndex=icTimeKeyIndex, icServiceJobSetIndex=icServiceJobSetIndex, icMediaUsedEntry=icMediaUsedEntry, IcServiceStateTC=IcServiceStateTC, IcWorkTypeTC=IcWorkTypeTC, icMediaUsedHighlightColorSheets=icMediaUsedHighlightColorSheets, icMediaUsedTotalSheets=icMediaUsedTotalSheets, icTraffic=icTraffic, icMediaUsedPersistence=icMediaUsedPersistence, icServiceStateMessage=icServiceStateMessage, icSubunitMapEntry=icSubunitMapEntry, icTrafficOutputKOctets=icTrafficOutputKOctets, icTwoSidedBlankImps=icTwoSidedBlankImps, icImpressionWorkType=icImpressionWorkType, icKeyGroup=icKeyGroup, icImpressionEntry=icImpressionEntry, icAlertKeyIndex=icAlertKeyIndex, icMonitorLocalStorageKOctets=icMonitorLocalStorageKOctets, icTimeTotalSeconds=icTimeTotalSeconds, icImpressionKeyIndex=icImpressionKeyIndex, icMediaUsed=icMediaUsed, icMIBCompliance=icMIBCompliance, icSheetFullColorSheets=icSheetFullColorSheets, icSubunitKey=icSubunitKey, icMediaUsedFullColorSheets=icMediaUsedFullColorSheets, icImageMonochromeImages=icImageMonochromeImages, icImageTable=icImageTable, icTimeTable=icTimeTable, icServiceState=icServiceState, icTrafficPersistence=icTrafficPersistence, icImagePersistence=icImagePersistence, icTwoSidedHighlightColorImps=icTwoSidedHighlightColorImps, icGeneral=icGeneral, icTwoSidedWorkType=icTwoSidedWorkType, icTwoSidedPersistence=icTwoSidedPersistence, icMonitorTable=icMonitorTable)
