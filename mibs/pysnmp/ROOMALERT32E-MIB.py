#
# PySNMP MIB module ROOMALERT32E-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ROOMALERT32E-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:50:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Gauge32, NotificationType, enterprises, iso, ModuleIdentity, Counter32, ObjectIdentity, MibIdentifier, Integer32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Bits, Counter64, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Gauge32", "NotificationType", "enterprises", "iso", "ModuleIdentity", "Counter32", "ObjectIdentity", "MibIdentifier", "Integer32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Bits", "Counter64", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
avtech = MibIdentifier((1, 3, 6, 1, 4, 1, 20916))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1))
roomalert32E = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8))
sensors = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1))
internal = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 1))
temperature = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 1, 1))
humidity = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 1, 2))
power = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 1, 3))
heat_index = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 1, 4)).setLabel("heat-index")
analog = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 1, 5))
digital = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2))
digital_sen1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 1)).setLabel("digital-sen1")
digital_sen2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 2)).setLabel("digital-sen2")
digital_sen3 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 3)).setLabel("digital-sen3")
digital_sen4 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 4)).setLabel("digital-sen4")
digital_sen5 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 5)).setLabel("digital-sen5")
digital_sen6 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 6)).setLabel("digital-sen6")
digital_sen7 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 7)).setLabel("digital-sen7")
digital_sen8 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 8)).setLabel("digital-sen8")
switch = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 3))
wireless = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4))
wish_1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1)).setLabel("wish-1")
wish_1_sensors = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4)).setLabel("wish-1-sensors")
wish_1_internal = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 1)).setLabel("wish-1-internal")
wish_1_external = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 2)).setLabel("wish-1-external")
wish_1_external_1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 2, 1)).setLabel("wish-1-external-1")
wish_1_external_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 2, 2)).setLabel("wish-1-external-2")
wish_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2)).setLabel("wish-2")
wish_2_sensors = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4)).setLabel("wish-2-sensors")
wish_2_internal = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 1)).setLabel("wish-2-internal")
wish_2_external = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 2)).setLabel("wish-2-external")
wish_2_external_1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 2, 1)).setLabel("wish-2-external-1")
wish_2_external_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 2, 2)).setLabel("wish-2-external-2")
wish_3 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3)).setLabel("wish-3")
wish_3_sensors = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4)).setLabel("wish-3-sensors")
wish_3_internal = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 1)).setLabel("wish-3-internal")
wish_3_external = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 2)).setLabel("wish-3-external")
wish_3_external_1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 2, 1)).setLabel("wish-3-external-1")
wish_3_external_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 2, 2)).setLabel("wish-3-external-2")
wish_4 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4)).setLabel("wish-4")
wish_4_sensors = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4)).setLabel("wish-4-sensors")
wish_4_internal = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 1)).setLabel("wish-4-internal")
wish_4_external = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 2)).setLabel("wish-4-external")
wish_4_external_1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 2, 1)).setLabel("wish-4-external-1")
wish_4_external_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 2, 2)).setLabel("wish-4-external-2")
wish_5 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5)).setLabel("wish-5")
wish_5_sensors = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4)).setLabel("wish-5-sensors")
wish_5_internal = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 1)).setLabel("wish-5-internal")
wish_5_external = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 2)).setLabel("wish-5-external")
wish_5_external_1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 2, 1)).setLabel("wish-5-external-1")
wish_5_external_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 2, 2)).setLabel("wish-5-external-2")
wish_6 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6)).setLabel("wish-6")
wish_6_sensors = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4)).setLabel("wish-6-sensors")
wish_6_internal = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 1)).setLabel("wish-6-internal")
wish_6_external = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 2)).setLabel("wish-6-external")
wish_6_external_1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 2, 1)).setLabel("wish-6-external-1")
wish_6_external_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 2, 2)).setLabel("wish-6-external-2")
wish_7 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7)).setLabel("wish-7")
wish_7_sensors = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4)).setLabel("wish-7-sensors")
wish_7_internal = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 1)).setLabel("wish-7-internal")
wish_7_external = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 2)).setLabel("wish-7-external")
wish_7_external_1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 2, 1)).setLabel("wish-7-external-1")
wish_7_external_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 2, 2)).setLabel("wish-7-external-2")
wish_8 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8)).setLabel("wish-8")
wish_8_sensors = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4)).setLabel("wish-8-sensors")
wish_8_internal = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 1)).setLabel("wish-8-internal")
wish_8_external = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 2)).setLabel("wish-8-external")
wish_8_external_1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 2, 1)).setLabel("wish-8-external-1")
wish_8_external_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 2, 2)).setLabel("wish-8-external-2")
wish_9 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9)).setLabel("wish-9")
wish_9_sensors = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4)).setLabel("wish-9-sensors")
wish_9_internal = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 1)).setLabel("wish-9-internal")
wish_9_external = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 2)).setLabel("wish-9-external")
wish_9_external_1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 2, 1)).setLabel("wish-9-external-1")
wish_9_external_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 2, 2)).setLabel("wish-9-external-2")
wish_10 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10)).setLabel("wish-10")
wish_10_sensors = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4)).setLabel("wish-10-sensors")
wish_10_internal = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 1)).setLabel("wish-10-internal")
wish_10_external = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 2)).setLabel("wish-10-external")
wish_10_external_1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 2, 1)).setLabel("wish-10-external-1")
wish_10_external_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 2, 2)).setLabel("wish-10-external-2")
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 8, 2))
internal_tempf = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("internal-tempf").setMaxAccess("readonly")
if mibBuilder.loadTexts: internal_tempf.setStatus('mandatory')
internal_tempc = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("internal-tempc").setMaxAccess("readonly")
if mibBuilder.loadTexts: internal_tempc.setStatus('mandatory')
internal_humidity = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("internal-humidity").setMaxAccess("readonly")
if mibBuilder.loadTexts: internal_humidity.setStatus('mandatory')
internal_heat_index = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("internal-heat-index").setMaxAccess("readonly")
if mibBuilder.loadTexts: internal_heat_index.setStatus('optional')
internal_heat_indexC = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("internal-heat-indexC").setMaxAccess("readonly")
if mibBuilder.loadTexts: internal_heat_indexC.setStatus('optional')
internal_power = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("internal-power").setMaxAccess("readonly")
if mibBuilder.loadTexts: internal_power.setStatus('mandatory')
internal_analog1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 1, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("internal-analog1").setMaxAccess("readonly")
if mibBuilder.loadTexts: internal_analog1.setStatus('mandatory')
internal_analog2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 1, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("internal-analog2").setMaxAccess("readonly")
if mibBuilder.loadTexts: internal_analog2.setStatus('mandatory')
digital_sen1_1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen1-1").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen1_1.setStatus('mandatory')
digital_sen1_2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen1-2").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen1_2.setStatus('mandatory')
digital_sen1_3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen1-3").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen1_3.setStatus('mandatory')
digital_sen1_4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen1-4").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen1_4.setStatus('mandatory')
digital_sen1_5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen1-5").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen1_5.setStatus('mandatory')
digital_sen2_1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen2-1").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen2_1.setStatus('mandatory')
digital_sen2_2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen2-2").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen2_2.setStatus('mandatory')
digital_sen2_3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen2-3").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen2_3.setStatus('mandatory')
digital_sen2_4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen2-4").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen2_4.setStatus('mandatory')
digital_sen2_5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen2-5").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen2_5.setStatus('mandatory')
digital_sen3_1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen3-1").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen3_1.setStatus('mandatory')
digital_sen3_2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen3-2").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen3_2.setStatus('mandatory')
digital_sen3_3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen3-3").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen3_3.setStatus('mandatory')
digital_sen3_4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen3-4").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen3_4.setStatus('mandatory')
digital_sen3_5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen3-5").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen3_5.setStatus('mandatory')
digital_sen4_1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen4-1").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen4_1.setStatus('mandatory')
digital_sen4_2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen4-2").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen4_2.setStatus('mandatory')
digital_sen4_3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen4-3").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen4_3.setStatus('mandatory')
digital_sen4_4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen4-4").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen4_4.setStatus('mandatory')
digital_sen4_5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen4-5").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen4_5.setStatus('mandatory')
digital_sen5_1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen5-1").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen5_1.setStatus('mandatory')
digital_sen5_2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen5-2").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen5_2.setStatus('mandatory')
digital_sen5_3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen5-3").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen5_3.setStatus('mandatory')
digital_sen5_4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 5, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen5-4").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen5_4.setStatus('mandatory')
digital_sen5_5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 5, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen5-5").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen5_5.setStatus('mandatory')
digital_sen6_1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen6-1").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen6_1.setStatus('mandatory')
digital_sen6_2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen6-2").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen6_2.setStatus('mandatory')
digital_sen6_3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen6-3").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen6_3.setStatus('mandatory')
digital_sen6_4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen6-4").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen6_4.setStatus('mandatory')
digital_sen1_6 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 6, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen1-6").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen1_6.setStatus('mandatory')
digital_sen7_1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen7-1").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen7_1.setStatus('mandatory')
digital_sen7_2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 7, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen7-2").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen7_2.setStatus('mandatory')
digital_sen7_3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 7, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen7-3").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen7_3.setStatus('mandatory')
digital_sen7_4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 7, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen7-4").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen7_4.setStatus('mandatory')
digital_sen7_5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 7, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen7-5").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen7_5.setStatus('mandatory')
digital_sen8_1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen8-1").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen8_1.setStatus('mandatory')
digital_sen8_2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen8-2").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen8_2.setStatus('mandatory')
digital_sen8_3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen8-3").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen8_3.setStatus('mandatory')
digital_sen8_4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen8-4").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen8_4.setStatus('mandatory')
digital_sen8_5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 2, 8, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("digital-sen8-5").setMaxAccess("readonly")
if mibBuilder.loadTexts: digital_sen8_5.setStatus('mandatory')
switch_sen1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("switch-sen1").setMaxAccess("readonly")
if mibBuilder.loadTexts: switch_sen1.setStatus('mandatory')
switch_sen2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("switch-sen2").setMaxAccess("readonly")
if mibBuilder.loadTexts: switch_sen2.setStatus('mandatory')
switch_sen3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("switch-sen3").setMaxAccess("readonly")
if mibBuilder.loadTexts: switch_sen3.setStatus('mandatory')
switch_sen4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("switch-sen4").setMaxAccess("readonly")
if mibBuilder.loadTexts: switch_sen4.setStatus('mandatory')
switch_sen5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("switch-sen5").setMaxAccess("readonly")
if mibBuilder.loadTexts: switch_sen5.setStatus('mandatory')
switch_sen6 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("switch-sen6").setMaxAccess("readonly")
if mibBuilder.loadTexts: switch_sen6.setStatus('mandatory')
switch_sen7 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("switch-sen7").setMaxAccess("readonly")
if mibBuilder.loadTexts: switch_sen7.setStatus('mandatory')
switch_sen8 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 3, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("switch-sen8").setMaxAccess("readonly")
if mibBuilder.loadTexts: switch_sen8.setStatus('mandatory')
switch_sen9 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 3, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("switch-sen9").setMaxAccess("readonly")
if mibBuilder.loadTexts: switch_sen9.setStatus('mandatory')
switch_sen10 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 3, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("switch-sen10").setMaxAccess("readonly")
if mibBuilder.loadTexts: switch_sen10.setStatus('mandatory')
switch_sen11 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 3, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("switch-sen11").setMaxAccess("readonly")
if mibBuilder.loadTexts: switch_sen11.setStatus('mandatory')
switch_sen12 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 3, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("switch-sen12").setMaxAccess("readonly")
if mibBuilder.loadTexts: switch_sen12.setStatus('mandatory')
switch_sen13 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 3, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("switch-sen13").setMaxAccess("readonly")
if mibBuilder.loadTexts: switch_sen13.setStatus('mandatory')
switch_sen14 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 3, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("switch-sen14").setMaxAccess("readonly")
if mibBuilder.loadTexts: switch_sen14.setStatus('mandatory')
switch_sen15 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 3, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("switch-sen15").setMaxAccess("readonly")
if mibBuilder.loadTexts: switch_sen15.setStatus('mandatory')
switch_sen16 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 3, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("switch-sen16").setMaxAccess("readonly")
if mibBuilder.loadTexts: switch_sen16.setStatus('mandatory')
wish_1_enabled = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-1-enabled").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_enabled.setStatus('mandatory')
wish_1_serial_num = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 2), OctetString()).setLabel("wish-1-serial-num").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_serial_num.setStatus('mandatory')
wish_1_updates = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-1-updates").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_updates.setStatus('mandatory')
wish_1_battery_voltage = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-1-battery-voltage").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_battery_voltage.setStatus('mandatory')
wish_1_internal_tempc = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-1-internal-tempc").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_internal_tempc.setStatus('mandatory')
wish_1_internal_tempf = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-1-internal-tempf").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_internal_tempf.setStatus('mandatory')
wish_1_external_1_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-1-external-1-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_external_1_type.setStatus('mandatory')
wish_1_external_1_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-1-external-1-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_external_1_val1.setStatus('mandatory')
wish_1_external_1_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-1-external-1-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_external_1_val2.setStatus('mandatory')
wish_1_external_1_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-1-external-1-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_external_1_val3.setStatus('mandatory')
wish_1_external_1_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-1-external-1-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_external_1_val4.setStatus('mandatory')
wish_1_external_1_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-1-external-1-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_external_1_val5.setStatus('mandatory')
wish_1_external_2_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-1-external-2-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_external_2_type.setStatus('mandatory')
wish_1_external_2_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-1-external-2-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_external_2_val1.setStatus('mandatory')
wish_1_external_2_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-1-external-2-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_external_2_val2.setStatus('mandatory')
wish_1_external_2_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-1-external-2-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_external_2_val3.setStatus('mandatory')
wish_1_external_2_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-1-external-2-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_external_2_val4.setStatus('mandatory')
wish_1_external_2_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 2, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-1-external-2-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_external_2_val5.setStatus('mandatory')
wish_1_external_switch = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 1, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-1-external-switch").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_1_external_switch.setStatus('mandatory')
wish_2_enabled = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-2-enabled").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_enabled.setStatus('mandatory')
wish_2_serial_num = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 2), OctetString()).setLabel("wish-2-serial-num").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_serial_num.setStatus('mandatory')
wish_2_updates = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-2-updates").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_updates.setStatus('mandatory')
wish_2_battery_voltage = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-2-battery-voltage").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_battery_voltage.setStatus('mandatory')
wish_2_internal_tempc = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-2-internal-tempc").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_internal_tempc.setStatus('mandatory')
wish_2_internal_tempf = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-2-internal-tempf").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_internal_tempf.setStatus('mandatory')
wish_2_external_1_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-2-external-1-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_external_1_type.setStatus('mandatory')
wish_2_external_1_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-2-external-1-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_external_1_val1.setStatus('mandatory')
wish_2_external_1_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-2-external-1-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_external_1_val2.setStatus('mandatory')
wish_2_external_1_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-2-external-1-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_external_1_val3.setStatus('mandatory')
wish_2_external_1_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-2-external-1-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_external_1_val4.setStatus('mandatory')
wish_2_external_1_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-2-external-1-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_external_1_val5.setStatus('mandatory')
wish_2_external_2_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-2-external-2-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_external_2_type.setStatus('mandatory')
wish_2_external_2_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-2-external-2-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_external_2_val1.setStatus('mandatory')
wish_2_external_2_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-2-external-2-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_external_2_val2.setStatus('mandatory')
wish_2_external_2_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-2-external-2-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_external_2_val3.setStatus('mandatory')
wish_2_external_2_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-2-external-2-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_external_2_val4.setStatus('mandatory')
wish_2_external_2_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 2, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-2-external-2-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_external_2_val5.setStatus('mandatory')
wish_2_external_switch = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 2, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-2-external-switch").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_2_external_switch.setStatus('mandatory')
wish_3_enabled = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-3-enabled").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_enabled.setStatus('mandatory')
wish_3_serial_num = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 2), OctetString()).setLabel("wish-3-serial-num").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_serial_num.setStatus('mandatory')
wish_3_updates = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-3-updates").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_updates.setStatus('mandatory')
wish_3_battery_voltage = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-3-battery-voltage").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_battery_voltage.setStatus('mandatory')
wish_3_internal_tempc = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-3-internal-tempc").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_internal_tempc.setStatus('mandatory')
wish_3_internal_tempf = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-3-internal-tempf").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_internal_tempf.setStatus('mandatory')
wish_3_external_1_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-3-external-1-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_external_1_type.setStatus('mandatory')
wish_3_external_1_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-3-external-1-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_external_1_val1.setStatus('mandatory')
wish_3_external_1_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-3-external-1-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_external_1_val2.setStatus('mandatory')
wish_3_external_1_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-3-external-1-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_external_1_val3.setStatus('mandatory')
wish_3_external_1_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-3-external-1-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_external_1_val4.setStatus('mandatory')
wish_3_external_1_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-3-external-1-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_external_1_val5.setStatus('mandatory')
wish_3_external_2_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-3-external-2-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_external_2_type.setStatus('mandatory')
wish_3_external_2_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-3-external-2-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_external_2_val1.setStatus('mandatory')
wish_3_external_2_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-3-external-2-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_external_2_val2.setStatus('mandatory')
wish_3_external_2_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-3-external-2-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_external_2_val3.setStatus('mandatory')
wish_3_external_2_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-3-external-2-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_external_2_val4.setStatus('mandatory')
wish_3_external_2_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 2, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-3-external-2-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_external_2_val5.setStatus('mandatory')
wish_3_external_switch = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 3, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-3-external-switch").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_3_external_switch.setStatus('mandatory')
wish_4_enabled = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-4-enabled").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_enabled.setStatus('mandatory')
wish_4_serial_num = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 2), OctetString()).setLabel("wish-4-serial-num").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_serial_num.setStatus('mandatory')
wish_4_updates = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-4-updates").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_updates.setStatus('mandatory')
wish_4_battery_voltage = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-4-battery-voltage").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_battery_voltage.setStatus('mandatory')
wish_4_internal_tempc = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-4-internal-tempc").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_internal_tempc.setStatus('mandatory')
wish_4_internal_tempf = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-4-internal-tempf").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_internal_tempf.setStatus('mandatory')
wish_4_external_1_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-4-external-1-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_external_1_type.setStatus('mandatory')
wish_4_external_1_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-4-external-1-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_external_1_val1.setStatus('mandatory')
wish_4_external_1_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-4-external-1-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_external_1_val2.setStatus('mandatory')
wish_4_external_1_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-4-external-1-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_external_1_val3.setStatus('mandatory')
wish_4_external_1_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-4-external-1-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_external_1_val4.setStatus('mandatory')
wish_4_external_1_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-4-external-1-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_external_1_val5.setStatus('mandatory')
wish_4_external_2_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-4-external-2-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_external_2_type.setStatus('mandatory')
wish_4_external_2_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-4-external-2-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_external_2_val1.setStatus('mandatory')
wish_4_external_2_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-4-external-2-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_external_2_val2.setStatus('mandatory')
wish_4_external_2_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-4-external-2-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_external_2_val3.setStatus('mandatory')
wish_4_external_2_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-4-external-2-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_external_2_val4.setStatus('mandatory')
wish_4_external_2_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 2, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-4-external-2-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_external_2_val5.setStatus('mandatory')
wish_4_external_switch = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 4, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-4-external-switch").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_4_external_switch.setStatus('mandatory')
wish_5_enabled = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-5-enabled").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_enabled.setStatus('mandatory')
wish_5_serial_num = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 2), OctetString()).setLabel("wish-5-serial-num").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_serial_num.setStatus('mandatory')
wish_5_updates = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-5-updates").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_updates.setStatus('mandatory')
wish_5_battery_voltage = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-5-battery-voltage").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_battery_voltage.setStatus('mandatory')
wish_5_internal_tempc = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-5-internal-tempc").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_internal_tempc.setStatus('mandatory')
wish_5_internal_tempf = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-5-internal-tempf").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_internal_tempf.setStatus('mandatory')
wish_5_external_1_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-5-external-1-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_external_1_type.setStatus('mandatory')
wish_5_external_1_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-5-external-1-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_external_1_val1.setStatus('mandatory')
wish_5_external_1_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-5-external-1-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_external_1_val2.setStatus('mandatory')
wish_5_external_1_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-5-external-1-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_external_1_val3.setStatus('mandatory')
wish_5_external_1_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-5-external-1-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_external_1_val4.setStatus('mandatory')
wish_5_external_1_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-5-external-1-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_external_1_val5.setStatus('mandatory')
wish_5_external_2_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-5-external-2-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_external_2_type.setStatus('mandatory')
wish_5_external_2_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-5-external-2-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_external_2_val1.setStatus('mandatory')
wish_5_external_2_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-5-external-2-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_external_2_val2.setStatus('mandatory')
wish_5_external_2_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-5-external-2-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_external_2_val3.setStatus('mandatory')
wish_5_external_2_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-5-external-2-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_external_2_val4.setStatus('mandatory')
wish_5_external_2_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 2, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-5-external-2-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_external_2_val5.setStatus('mandatory')
wish_5_external_switch = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 5, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-5-external-switch").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_5_external_switch.setStatus('mandatory')
wish_6_enabled = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-6-enabled").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_enabled.setStatus('mandatory')
wish_6_serial_num = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 2), OctetString()).setLabel("wish-6-serial-num").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_serial_num.setStatus('mandatory')
wish_6_updates = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-6-updates").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_updates.setStatus('mandatory')
wish_6_battery_voltage = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-6-battery-voltage").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_battery_voltage.setStatus('mandatory')
wish_6_internal_tempc = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-6-internal-tempc").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_internal_tempc.setStatus('mandatory')
wish_6_internal_tempf = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-6-internal-tempf").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_internal_tempf.setStatus('mandatory')
wish_6_external_1_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-6-external-1-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_external_1_type.setStatus('mandatory')
wish_6_external_1_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-6-external-1-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_external_1_val1.setStatus('mandatory')
wish_6_external_1_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-6-external-1-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_external_1_val2.setStatus('mandatory')
wish_6_external_1_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-6-external-1-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_external_1_val3.setStatus('mandatory')
wish_6_external_1_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-6-external-1-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_external_1_val4.setStatus('mandatory')
wish_6_external_1_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-6-external-1-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_external_1_val5.setStatus('mandatory')
wish_6_external_2_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-6-external-2-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_external_2_type.setStatus('mandatory')
wish_6_external_2_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-6-external-2-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_external_2_val1.setStatus('mandatory')
wish_6_external_2_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-6-external-2-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_external_2_val2.setStatus('mandatory')
wish_6_external_2_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-6-external-2-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_external_2_val3.setStatus('mandatory')
wish_6_external_2_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-6-external-2-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_external_2_val4.setStatus('mandatory')
wish_6_external_2_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 2, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-6-external-2-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_external_2_val5.setStatus('mandatory')
wish_6_external_switch = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 6, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-6-external-switch").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_6_external_switch.setStatus('mandatory')
wish_7_enabled = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-7-enabled").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_enabled.setStatus('mandatory')
wish_7_serial_num = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 2), OctetString()).setLabel("wish-7-serial-num").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_serial_num.setStatus('mandatory')
wish_7_updates = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-7-updates").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_updates.setStatus('mandatory')
wish_7_battery_voltage = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-7-battery-voltage").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_battery_voltage.setStatus('mandatory')
wish_7_internal_tempc = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-7-internal-tempc").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_internal_tempc.setStatus('mandatory')
wish_7_internal_tempf = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-7-internal-tempf").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_internal_tempf.setStatus('mandatory')
wish_7_external_1_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-7-external-1-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_external_1_type.setStatus('mandatory')
wish_7_external_1_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-7-external-1-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_external_1_val1.setStatus('mandatory')
wish_7_external_1_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-7-external-1-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_external_1_val2.setStatus('mandatory')
wish_7_external_1_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-7-external-1-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_external_1_val3.setStatus('mandatory')
wish_7_external_1_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-7-external-1-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_external_1_val4.setStatus('mandatory')
wish_7_external_1_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-7-external-1-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_external_1_val5.setStatus('mandatory')
wish_7_external_2_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-7-external-2-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_external_2_type.setStatus('mandatory')
wish_7_external_2_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-7-external-2-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_external_2_val1.setStatus('mandatory')
wish_7_external_2_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-7-external-2-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_external_2_val2.setStatus('mandatory')
wish_7_external_2_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-7-external-2-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_external_2_val3.setStatus('mandatory')
wish_7_external_2_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-7-external-2-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_external_2_val4.setStatus('mandatory')
wish_7_external_2_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 2, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-7-external-2-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_external_2_val5.setStatus('mandatory')
wish_7_external_switch = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 7, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-7-external-switch").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_7_external_switch.setStatus('mandatory')
wish_8_enabled = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-8-enabled").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_enabled.setStatus('mandatory')
wish_8_serial_num = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 2), OctetString()).setLabel("wish-8-serial-num").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_serial_num.setStatus('mandatory')
wish_8_updates = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-8-updates").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_updates.setStatus('mandatory')
wish_8_battery_voltage = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-8-battery-voltage").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_battery_voltage.setStatus('mandatory')
wish_8_internal_tempc = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-8-internal-tempc").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_internal_tempc.setStatus('mandatory')
wish_8_internal_tempf = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-8-internal-tempf").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_internal_tempf.setStatus('mandatory')
wish_8_external_1_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-8-external-1-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_external_1_type.setStatus('mandatory')
wish_8_external_1_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-8-external-1-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_external_1_val1.setStatus('mandatory')
wish_8_external_1_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-8-external-1-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_external_1_val2.setStatus('mandatory')
wish_8_external_1_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-8-external-1-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_external_1_val3.setStatus('mandatory')
wish_8_external_1_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-8-external-1-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_external_1_val4.setStatus('mandatory')
wish_8_external_1_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-8-external-1-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_external_1_val5.setStatus('mandatory')
wish_8_external_2_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-8-external-2-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_external_2_type.setStatus('mandatory')
wish_8_external_2_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-8-external-2-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_external_2_val1.setStatus('mandatory')
wish_8_external_2_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-8-external-2-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_external_2_val2.setStatus('mandatory')
wish_8_external_2_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-8-external-2-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_external_2_val3.setStatus('mandatory')
wish_8_external_2_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-8-external-2-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_external_2_val4.setStatus('mandatory')
wish_8_external_2_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 2, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-8-external-2-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_external_2_val5.setStatus('mandatory')
wish_8_external_switch = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 8, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-8-external-switch").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_8_external_switch.setStatus('mandatory')
wish_9_enabled = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-9-enabled").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_enabled.setStatus('mandatory')
wish_9_serial_num = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 2), OctetString()).setLabel("wish-9-serial-num").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_serial_num.setStatus('mandatory')
wish_9_updates = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-9-updates").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_updates.setStatus('mandatory')
wish_9_battery_voltage = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-9-battery-voltage").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_battery_voltage.setStatus('mandatory')
wish_9_internal_tempc = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-9-internal-tempc").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_internal_tempc.setStatus('mandatory')
wish_9_internal_tempf = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-9-internal-tempf").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_internal_tempf.setStatus('mandatory')
wish_9_external_1_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-9-external-1-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_external_1_type.setStatus('mandatory')
wish_9_external_1_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-9-external-1-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_external_1_val1.setStatus('mandatory')
wish_9_external_1_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-9-external-1-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_external_1_val2.setStatus('mandatory')
wish_9_external_1_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-9-external-1-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_external_1_val3.setStatus('mandatory')
wish_9_external_1_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-9-external-1-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_external_1_val4.setStatus('mandatory')
wish_9_external_1_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-9-external-1-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_external_1_val5.setStatus('mandatory')
wish_9_external_2_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-9-external-2-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_external_2_type.setStatus('mandatory')
wish_9_external_2_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-9-external-2-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_external_2_val1.setStatus('mandatory')
wish_9_external_2_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-9-external-2-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_external_2_val2.setStatus('mandatory')
wish_9_external_2_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-9-external-2-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_external_2_val3.setStatus('mandatory')
wish_9_external_2_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-9-external-2-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_external_2_val4.setStatus('mandatory')
wish_9_external_2_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 2, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-9-external-2-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_external_2_val5.setStatus('mandatory')
wish_9_external_switch = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 9, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-9-external-switch").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_9_external_switch.setStatus('mandatory')
wish_10_enabled = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-10-enabled").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_enabled.setStatus('mandatory')
wish_10_serial_num = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 2), OctetString()).setLabel("wish-10-serial-num").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_serial_num.setStatus('mandatory')
wish_10_updates = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-10-updates").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_updates.setStatus('mandatory')
wish_10_battery_voltage = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-10-battery-voltage").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_battery_voltage.setStatus('mandatory')
wish_10_internal_tempc = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-10-internal-tempc").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_internal_tempc.setStatus('mandatory')
wish_10_internal_tempf = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-10-internal-tempf").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_internal_tempf.setStatus('mandatory')
wish_10_external_1_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-10-external-1-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_external_1_type.setStatus('mandatory')
wish_10_external_1_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-10-external-1-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_external_1_val1.setStatus('mandatory')
wish_10_external_1_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-10-external-1-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_external_1_val2.setStatus('mandatory')
wish_10_external_1_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-10-external-1-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_external_1_val3.setStatus('mandatory')
wish_10_external_1_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-10-external-1-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_external_1_val4.setStatus('mandatory')
wish_10_external_1_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-10-external-1-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_external_1_val5.setStatus('mandatory')
wish_10_external_2_type = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-10-external-2-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_external_2_type.setStatus('mandatory')
wish_10_external_2_val1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-10-external-2-val1").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_external_2_val1.setStatus('mandatory')
wish_10_external_2_val2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-10-external-2-val2").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_external_2_val2.setStatus('mandatory')
wish_10_external_2_val3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-10-external-2-val3").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_external_2_val3.setStatus('mandatory')
wish_10_external_2_val4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-10-external-2-val4").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_external_2_val4.setStatus('mandatory')
wish_10_external_2_val5 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 2, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wish-10-external-2-val5").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_external_2_val5.setStatus('mandatory')
wish_10_external_switch = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 1, 4, 10, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setLabel("wish-10-external-switch").setMaxAccess("readonly")
if mibBuilder.loadTexts: wish_10_external_switch.setStatus('mandatory')
alarmmessage = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 8, 2, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmmessage.setStatus('mandatory')
tempalarm1_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,1)).setLabel("tempalarm1-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
room_alert_32E_snmp_trap = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,2)).setLabel("room-alert-32E-snmp-trap").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
tempalarm2_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,3)).setLabel("tempalarm2-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
tempclear2_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,4)).setLabel("tempclear2-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
tempalarm3_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,5)).setLabel("tempalarm3-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
tempclear3_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,6)).setLabel("tempclear3-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
humidityalarm1_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,7)).setLabel("humidityalarm1-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
humidityclear1_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,8)).setLabel("humidityclear1-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
humidityalarm2_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,9)).setLabel("humidityalarm2-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
humidityclear2_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,10)).setLabel("humidityclear2-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
humidityalarm3_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,11)).setLabel("humidityalarm3-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
humidityclear3_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,12)).setLabel("humidityclear3-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
switchalarm1_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,13)).setLabel("switchalarm1-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
switchclear1_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,14)).setLabel("switchclear1-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
switchalarm2_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,15)).setLabel("switchalarm2-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
switchclear2_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,16)).setLabel("switchclear2-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
switchalarm3_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,17)).setLabel("switchalarm3-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
switchclear3_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,18)).setLabel("switchclear3-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
switchalarm4_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,19)).setLabel("switchalarm4-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
switchclear4_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,20)).setLabel("switchclear4-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
switchalarm5_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,21)).setLabel("switchalarm5-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
switchclear5_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,22)).setLabel("switchclear5-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
switchalarm6_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,23)).setLabel("switchalarm6-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
switchclear6_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,24)).setLabel("switchclear6-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
switchalarm7_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,25)).setLabel("switchalarm7-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
switchclear7_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,26)).setLabel("switchclear7-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
switchalarm8_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,27)).setLabel("switchalarm8-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
switchclear8_32E = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 8) + (0,28)).setLabel("switchclear8-32E").setObjects(("ROOMALERT32E-MIB", "alarmmessage"))
mibBuilder.exportSymbols("ROOMALERT32E-MIB", wish_10_external_1_type=wish_10_external_1_type, digital_sen7_4=digital_sen7_4, wish_2_external_1_val2=wish_2_external_1_val2, digital_sen2_3=digital_sen2_3, wish_5_external_2_val2=wish_5_external_2_val2, wish_3_external_1_val5=wish_3_external_1_val5, switchalarm3_32E=switchalarm3_32E, wish_10_internal=wish_10_internal, wish_4_external_switch=wish_4_external_switch, wish_6_external_switch=wish_6_external_switch, wish_8_external_2=wish_8_external_2, wish_2_internal=wish_2_internal, wish_7=wish_7, wish_9_external_1=wish_9_external_1, digital_sen8_5=digital_sen8_5, wish_8_external=wish_8_external, wish_9_internal=wish_9_internal, wish_9_external_2=wish_9_external_2, wish_8_internal=wish_8_internal, wish_4_updates=wish_4_updates, wish_9_sensors=wish_9_sensors, wish_7_external_2_type=wish_7_external_2_type, wish_10_external_2_val5=wish_10_external_2_val5, wish_8_sensors=wish_8_sensors, digital_sen5_5=digital_sen5_5, wish_2_external=wish_2_external, wish_3_external_1=wish_3_external_1, wish_5_serial_num=wish_5_serial_num, tempalarm3_32E=tempalarm3_32E, wish_3_external_1_val1=wish_3_external_1_val1, wish_3_external_2_val5=wish_3_external_2_val5, wish_5_external_1_val4=wish_5_external_1_val4, wish_8_internal_tempf=wish_8_internal_tempf, wish_8_external_2_val4=wish_8_external_2_val4, wish_4_serial_num=wish_4_serial_num, wish_8_external_2_type=wish_8_external_2_type, wish_2_battery_voltage=wish_2_battery_voltage, switch_sen5=switch_sen5, room_alert_32E_snmp_trap=room_alert_32E_snmp_trap, switch_sen15=switch_sen15, wish_10_external_2_val1=wish_10_external_2_val1, power=power, digital_sen7_1=digital_sen7_1, digital_sen3_2=digital_sen3_2, roomalert32E=roomalert32E, digital_sen8_4=digital_sen8_4, wish_10_sensors=wish_10_sensors, wish_7_external_1=wish_7_external_1, wish_8_external_2_val3=wish_8_external_2_val3, switchclear6_32E=switchclear6_32E, wish_6_enabled=wish_6_enabled, wish_2_internal_tempc=wish_2_internal_tempc, wish_10_external_switch=wish_10_external_switch, wish_10_external_1_val2=wish_10_external_1_val2, internal_tempf=internal_tempf, wish_4_external_1_type=wish_4_external_1_type, wish_3_serial_num=wish_3_serial_num, switchclear4_32E=switchclear4_32E, digital_sen7_2=digital_sen7_2, wish_2_external_1_val3=wish_2_external_1_val3, wish_2_sensors=wish_2_sensors, wish_9_serial_num=wish_9_serial_num, wish_4_external=wish_4_external, wish_4_external_1_val1=wish_4_external_1_val1, internal=internal, wish_2_internal_tempf=wish_2_internal_tempf, wish_1_external_1_type=wish_1_external_1_type, digital_sen1_6=digital_sen1_6, wish_3_external_1_type=wish_3_external_1_type, wish_5_battery_voltage=wish_5_battery_voltage, digital_sen4_5=digital_sen4_5, switch_sen9=switch_sen9, wish_2_external_2_type=wish_2_external_2_type, digital_sen5=digital_sen5, wish_7_external_1_val5=wish_7_external_1_val5, wish_2_external_2_val4=wish_2_external_2_val4, humidityalarm1_32E=humidityalarm1_32E, wish_4_internal=wish_4_internal, wish_2_external_2_val5=wish_2_external_2_val5, tempclear2_32E=tempclear2_32E, wish_10_external_2_val3=wish_10_external_2_val3, wish_2_external_1_val1=wish_2_external_1_val1, humidityclear1_32E=humidityclear1_32E, digital_sen2_4=digital_sen2_4, digital_sen3_3=digital_sen3_3, wish_5_enabled=wish_5_enabled, wish_1_internal=wish_1_internal, switch_sen4=switch_sen4, switchalarm6_32E=switchalarm6_32E, digital_sen6_2=digital_sen6_2, digital_sen8_2=digital_sen8_2, wish_8_external_1=wish_8_external_1, digital_sen1=digital_sen1, digital_sen2_5=digital_sen2_5, wish_1_external_2_type=wish_1_external_2_type, wish_5_external_2=wish_5_external_2, wish_10_enabled=wish_10_enabled, wish_9_external_2_val5=wish_9_external_2_val5, switchalarm2_32E=switchalarm2_32E, wish_5_external=wish_5_external, wish_6_external_2=wish_6_external_2, digital_sen8_3=digital_sen8_3, wish_2_external_switch=wish_2_external_switch, wish_8_updates=wish_8_updates, wish_7_external_2_val4=wish_7_external_2_val4, switch_sen7=switch_sen7, wish_2_enabled=wish_2_enabled, avtech=avtech, wish_1_external_switch=wish_1_external_switch, wish_10_external_2_type=wish_10_external_2_type, digital_sen2=digital_sen2, wish_7_external=wish_7_external, wish_1_external_2_val5=wish_1_external_2_val5, tempclear3_32E=tempclear3_32E, wish_1_sensors=wish_1_sensors, digital_sen5_4=digital_sen5_4, wish_6_external_2_type=wish_6_external_2_type, digital_sen1_4=digital_sen1_4, internal_power=internal_power, wish_4_internal_tempf=wish_4_internal_tempf, digital_sen4_1=digital_sen4_1, switch_sen10=switch_sen10, wish_6_serial_num=wish_6_serial_num, wish_10_battery_voltage=wish_10_battery_voltage, wish_1_external_1_val5=wish_1_external_1_val5, wish_7_external_switch=wish_7_external_switch, switchclear1_32E=switchclear1_32E, digital_sen8_1=digital_sen8_1, switch_sen1=switch_sen1, internal_humidity=internal_humidity, switchalarm7_32E=switchalarm7_32E, wish_6_internal_tempc=wish_6_internal_tempc, wish_3_external_switch=wish_3_external_switch, wish_7_battery_voltage=wish_7_battery_voltage, wish_5_updates=wish_5_updates, wish_4_external_1_val2=wish_4_external_1_val2, digital_sen7_3=digital_sen7_3, temperature=temperature, switchclear3_32E=switchclear3_32E, wish_2_external_2_val1=wish_2_external_2_val1, wish_10=wish_10, wish_8_external_2_val1=wish_8_external_2_val1, wish_5_external_2_val4=wish_5_external_2_val4, wish_2_external_1_val4=wish_2_external_1_val4, wish_2_external_1=wish_2_external_1, digital_sen7=digital_sen7, wish_9_external_switch=wish_9_external_switch, humidity=humidity, wish_1=wish_1, wish_6_external_1_val4=wish_6_external_1_val4, wish_4_external_2_type=wish_4_external_2_type, wish_10_external_1_val5=wish_10_external_1_val5, switch_sen11=switch_sen11, traps=traps, wish_6_internal_tempf=wish_6_internal_tempf, wish_1_external_2_val1=wish_1_external_2_val1, wish_1_battery_voltage=wish_1_battery_voltage, wish_5_external_1_type=wish_5_external_1_type, wish_1_serial_num=wish_1_serial_num, digital_sen3_1=digital_sen3_1, internal_analog1=internal_analog1, digital_sen2_1=digital_sen2_1, digital_sen6_1=digital_sen6_1, wish_6_updates=wish_6_updates, wish_8_external_2_val5=wish_8_external_2_val5, tempalarm2_32E=tempalarm2_32E, internal_heat_indexC=internal_heat_indexC, wish_9_external_2_val2=wish_9_external_2_val2, wish_6_external_1_val5=wish_6_external_1_val5, wish_9_external_1_val2=wish_9_external_1_val2, wish_7_internal_tempc=wish_7_internal_tempc, switch_sen3=switch_sen3, wish_7_external_2_val3=wish_7_external_2_val3, wish_7_external_2=wish_7_external_2, wish_4_external_1=wish_4_external_1, humidityalarm3_32E=humidityalarm3_32E, wish_9_battery_voltage=wish_9_battery_voltage, sensors=sensors, wish_6_external_1_val1=wish_6_external_1_val1, wish_8_serial_num=wish_8_serial_num, wish_4_enabled=wish_4_enabled, wish_5_external_2_val3=wish_5_external_2_val3, internal_analog2=internal_analog2, switch_sen14=switch_sen14, wish_9_external_2_val1=wish_9_external_2_val1, wish_3_external_2_val2=wish_3_external_2_val2, wish_6_external_1_val2=wish_6_external_1_val2, switch=switch, wish_4_sensors=wish_4_sensors, wish_6_sensors=wish_6_sensors, wish_1_external_2_val4=wish_1_external_2_val4, wish_10_internal_tempf=wish_10_internal_tempf, digital_sen3_5=digital_sen3_5, wish_8_external_1_type=wish_8_external_1_type, wish_9_internal_tempc=wish_9_internal_tempc, wish_1_external_2=wish_1_external_2, wish_6_external_2_val1=wish_6_external_2_val1, wish_7_external_1_val1=wish_7_external_1_val1, wish_1_external_2_val2=wish_1_external_2_val2, wish_3_external=wish_3_external, wish_2_updates=wish_2_updates, wish_1_external_1=wish_1_external_1, wish_3_external_1_val2=wish_3_external_1_val2, wish_7_updates=wish_7_updates, wish_2_external_1_type=wish_2_external_1_type, humidityclear3_32E=humidityclear3_32E, wish_7_enabled=wish_7_enabled, analog=analog, digital_sen1_2=digital_sen1_2, wish_4=wish_4, wish_7_external_2_val5=wish_7_external_2_val5, digital=digital, switch_sen8=switch_sen8, wish_9_external_1_val1=wish_9_external_1_val1, wish_9_external_1_type=wish_9_external_1_type, wish_10_serial_num=wish_10_serial_num, digital_sen7_5=digital_sen7_5, switchalarm1_32E=switchalarm1_32E, wish_5_external_2_val1=wish_5_external_2_val1, wish_6_external=wish_6_external, wish_3_sensors=wish_3_sensors, wish_7_external_1_val3=wish_7_external_1_val3, digital_sen3_4=digital_sen3_4, wish_3_internal_tempf=wish_3_internal_tempf, wish_8_external_1_val3=wish_8_external_1_val3, wish_5_external_2_val5=wish_5_external_2_val5, wish_7_external_2_val2=wish_7_external_2_val2, wish_4_external_2_val4=wish_4_external_2_val4, wish_3_external_1_val4=wish_3_external_1_val4, wish_6_external_2_val3=wish_6_external_2_val3, switch_sen2=switch_sen2, wish_9_updates=wish_9_updates, wish_8_external_1_val4=wish_8_external_1_val4, wish_4_external_2_val5=wish_4_external_2_val5, wish_8_external_switch=wish_8_external_switch, wish_8=wish_8, wish_9_external_2_val3=wish_9_external_2_val3, wish_7_external_2_val1=wish_7_external_2_val1, digital_sen1_1=digital_sen1_1, wish_6_external_2_val4=wish_6_external_2_val4, wish_3_battery_voltage=wish_3_battery_voltage, digital_sen2_2=digital_sen2_2, wish_7_sensors=wish_7_sensors, wish_6_internal=wish_6_internal, wish_9=wish_9, switchclear5_32E=switchclear5_32E, wish_5_external_1_val3=wish_5_external_1_val3, switch_sen16=switch_sen16, digital_sen4_2=digital_sen4_2, wish_6_external_2_val2=wish_6_external_2_val2, wish_5_internal_tempc=wish_5_internal_tempc, products=products, wish_5_internal_tempf=wish_5_internal_tempf, wish_2=wish_2)
mibBuilder.exportSymbols("ROOMALERT32E-MIB", wish_10_external_2_val4=wish_10_external_2_val4, digital_sen1_5=digital_sen1_5, digital_sen3=digital_sen3, wish_9_external_1_val3=wish_9_external_1_val3, digital_sen8=digital_sen8, wish_1_external_1_val1=wish_1_external_1_val1, wish_2_external_2_val3=wish_2_external_2_val3, digital_sen6_3=digital_sen6_3, wish_8_external_1_val2=wish_8_external_1_val2, wish_3_external_2_val1=wish_3_external_2_val1, wish_5_external_1_val2=wish_5_external_1_val2, wish_9_external=wish_9_external, wish_4_battery_voltage=wish_4_battery_voltage, wish_6_external_1_val3=wish_6_external_1_val3, digital_sen6_4=digital_sen6_4, wish_3=wish_3, digital_sen4_4=digital_sen4_4, wish_1_internal_tempf=wish_1_internal_tempf, wish_3_external_1_val3=wish_3_external_1_val3, wish_3_external_2_type=wish_3_external_2_type, wish_6_external_1=wish_6_external_1, wish_9_external_2_val4=wish_9_external_2_val4, wish_5_external_switch=wish_5_external_switch, wish_1_external_1_val3=wish_1_external_1_val3, wish_1_external_1_val2=wish_1_external_1_val2, tempalarm1_32E=tempalarm1_32E, wish_3_external_2_val3=wish_3_external_2_val3, digital_sen5_2=digital_sen5_2, wish_1_updates=wish_1_updates, wish_10_external_1_val3=wish_10_external_1_val3, wish_4_external_2=wish_4_external_2, wish_1_enabled=wish_1_enabled, wish_10_external_1_val1=wish_10_external_1_val1, wish_7_serial_num=wish_7_serial_num, wish_3_updates=wish_3_updates, wish_3_external_2=wish_3_external_2, humidityclear2_32E=humidityclear2_32E, digital_sen4=digital_sen4, wish_5_external_2_type=wish_5_external_2_type, wish_9_external_1_val5=wish_9_external_1_val5, wish_10_external_1_val4=wish_10_external_1_val4, wish_2_external_1_val5=wish_2_external_1_val5, wish_8_internal_tempc=wish_8_internal_tempc, humidityalarm2_32E=humidityalarm2_32E, wish_10_external=wish_10_external, wish_9_external_2_type=wish_9_external_2_type, wish_4_external_2_val1=wish_4_external_2_val1, digital_sen5_3=digital_sen5_3, switch_sen12=switch_sen12, wish_1_external_2_val3=wish_1_external_2_val3, switchclear7_32E=switchclear7_32E, wish_4_external_2_val3=wish_4_external_2_val3, wish_2_external_2=wish_2_external_2, alarmmessage=alarmmessage, wish_9_internal_tempf=wish_9_internal_tempf, wish_5=wish_5, wish_4_external_2_val2=wish_4_external_2_val2, wish_6_external_1_type=wish_6_external_1_type, wish_5_external_1_val1=wish_5_external_1_val1, wish_3_internal_tempc=wish_3_internal_tempc, wish_5_external_1=wish_5_external_1, wish_8_external_1_val1=wish_8_external_1_val1, wish_6_external_2_val5=wish_6_external_2_val5, wireless=wireless, wish_9_external_1_val4=wish_9_external_1_val4, wish_10_updates=wish_10_updates, wish_1_internal_tempc=wish_1_internal_tempc, wish_5_internal=wish_5_internal, wish_10_external_2_val2=wish_10_external_2_val2, wish_2_serial_num=wish_2_serial_num, wish_10_external_1=wish_10_external_1, wish_7_internal_tempf=wish_7_internal_tempf, wish_10_external_2=wish_10_external_2, wish_4_internal_tempc=wish_4_internal_tempc, switchalarm8_32E=switchalarm8_32E, wish_4_external_1_val3=wish_4_external_1_val3, wish_5_external_1_val5=wish_5_external_1_val5, internal_tempc=internal_tempc, wish_4_external_1_val4=wish_4_external_1_val4, wish_10_internal_tempc=wish_10_internal_tempc, wish_5_sensors=wish_5_sensors, switch_sen6=switch_sen6, wish_3_internal=wish_3_internal, digital_sen6=digital_sen6, wish_7_internal=wish_7_internal, switchclear8_32E=switchclear8_32E, wish_8_battery_voltage=wish_8_battery_voltage, digital_sen4_3=digital_sen4_3, wish_7_external_1_type=wish_7_external_1_type, wish_7_external_1_val2=wish_7_external_1_val2, wish_1_external=wish_1_external, wish_7_external_1_val4=wish_7_external_1_val4, wish_6_battery_voltage=wish_6_battery_voltage, switchalarm5_32E=switchalarm5_32E, wish_4_external_1_val5=wish_4_external_1_val5, wish_1_external_1_val4=wish_1_external_1_val4, wish_3_enabled=wish_3_enabled, switchclear2_32E=switchclear2_32E, wish_6=wish_6, wish_8_enabled=wish_8_enabled, wish_8_external_1_val5=wish_8_external_1_val5, heat_index=heat_index, switchalarm4_32E=switchalarm4_32E, wish_9_enabled=wish_9_enabled, digital_sen1_3=digital_sen1_3, digital_sen5_1=digital_sen5_1, internal_heat_index=internal_heat_index, wish_8_external_2_val2=wish_8_external_2_val2, wish_3_external_2_val4=wish_3_external_2_val4, switch_sen13=switch_sen13, wish_2_external_2_val2=wish_2_external_2_val2)
