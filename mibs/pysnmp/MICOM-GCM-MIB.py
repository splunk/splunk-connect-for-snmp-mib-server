#
# PySNMP MIB module MICOM-GCM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MICOM-GCM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:02:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
micom_oscar, = mibBuilder.importSymbols("MICOM-OSCAR-MIB", "micom-oscar")
mcmSysAsciiTimeOfDay, = mibBuilder.importSymbols("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Unsigned32, NotificationType, MibIdentifier, iso, Integer32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, NotificationType, TimeTicks, Gauge32, Bits, Counter64, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Unsigned32", "NotificationType", "MibIdentifier", "iso", "Integer32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "NotificationType", "TimeTicks", "Gauge32", "Bits", "Counter64", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
micom_gcm = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 25)).setLabel("micom-gcm")
configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1))
status = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 2))
mcmGcmGlobalCfgGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 1))
mcmGcmGlobalCfgAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmGlobalCfgAdminStatus.setStatus('mandatory')
mcmGcmGlobalCfgTraps = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmGlobalCfgTraps.setStatus('mandatory')
mcmGcmGlobalCfgAutoActSelMode = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hwCfgAutoSelect", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmGlobalCfgAutoActSelMode.setStatus('mandatory')
mcmGcmLinkTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 2), )
if mibBuilder.loadTexts: mcmGcmLinkTable.setStatus('mandatory')
mcmGcmLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 2, 1), ).setIndexNames((0, "MICOM-GCM-MIB", "mcmGcmLinkIndex"))
if mibBuilder.loadTexts: mcmGcmLinkEntry.setStatus('mandatory')
mcmGcmLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmLinkIndex.setStatus('mandatory')
mcmGcmLinkUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmLinkUnitIndex.setStatus('mandatory')
mcmGcmLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmLinkName.setStatus('mandatory')
mcmGcmLinkSigType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("reserved", 1), ("isdn", 2), ("unusedEver-up", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmLinkSigType.setStatus('mandatory')
mcmGcmLinkSigPcmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmLinkSigPcmIndex.setStatus('mandatory')
mcmGcmLinkSigOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("cfg-error", 1), ("info-wait", 2), ("inactive", 3), ("enable-wait", 4), ("deferred", 5), ("protocol-down", 6), ("activating", 7), ("active", 8), ("disconnecting", 9), ("ever-up", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmLinkSigOperStatus.setStatus('mandatory')
mcmGcmLinkProtoType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reserved", 1), ("frameRelay", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmLinkProtoType.setStatus('mandatory')
mcmGcmLinkProtoPcmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmLinkProtoPcmIndex.setStatus('mandatory')
mcmGcmLinkProtoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("cfg-error", 1), ("info-wait", 2), ("inactive", 3), ("enable-wait", 4), ("deferred", 5), ("protocol-down", 6), ("activating", 7), ("wait-switch", 8), ("switching", 9), ("active", 10), ("disconnecting", 11), ("ever-up", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmLinkProtoStatus.setStatus('mandatory')
mcmGcmLinkVoiceCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmLinkVoiceCalls.setStatus('mandatory')
mcmGcmUnitTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3), )
if mibBuilder.loadTexts: mcmGcmUnitTable.setStatus('mandatory')
mcmGcmUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1), ).setIndexNames((0, "MICOM-GCM-MIB", "mcmGcmUnitIndex"))
if mibBuilder.loadTexts: mcmGcmUnitEntry.setStatus('mandatory')
mcmGcmUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmUnitIndex.setStatus('mandatory')
mcmGcmUnitName = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmUnitName.setStatus('mandatory')
mcmGcmUnitAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("down", 1), ("up", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmUnitAdminStatus.setStatus('mandatory')
mcmGcmUnitTimerAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmUnitTimerAdminStatus.setStatus('mandatory')
mcmGcmUnitSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("fast-switch", 1), ("voice-switch", 2), ("manual-switch-backup", 3), ("manual-switching", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmUnitSwitchType.setStatus('mandatory')
mcmGcmUnitSwitchDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmUnitSwitchDelay.setStatus('deprecated')
mcmGcmUnitPrimaryLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmUnitPrimaryLinkIndex.setStatus('mandatory')
mcmGcmUnitBackupRemainTime = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmUnitBackupRemainTime.setStatus('mandatory')
mcmGcmUnitBackupSwitchDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmUnitBackupSwitchDelay.setStatus('mandatory')
mcmGcmUnitPrimarySwitchDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmUnitPrimarySwitchDelay.setStatus('mandatory')
mcmGcmUnitRegionalLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmUnitRegionalLinkIndex.setStatus('mandatory')
mcmGcmUnitModeCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("branch-node", 1), ("regional-node", 2), ("central-site-node", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmUnitModeCfg.setStatus('mandatory')
mcmGcmUnitPriLinkFailMonStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmUnitPriLinkFailMonStatus.setStatus('mandatory')
mcmGcmUnitPriLinkFailMonDurMin = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmUnitPriLinkFailMonDurMin.setStatus('mandatory')
mcmGcmUnitPriLinkFailMonThrshld = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmUnitPriLinkFailMonThrshld.setStatus('mandatory')
mcmGcmUnitPriLinkFailMonCount = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmUnitPriLinkFailMonCount.setStatus('mandatory')
mcmGcmUnitCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("switch-to-primary", 1), ("switch-to-backup", 2)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mcmGcmUnitCmd.setStatus('mandatory')
mcmGcmBackupCfgTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 4), )
if mibBuilder.loadTexts: mcmGcmBackupCfgTable.setStatus('mandatory')
mcmGcmBackupCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 4, 1), ).setIndexNames((0, "MICOM-GCM-MIB", "mcmGcmBackupCfgIndex"))
if mibBuilder.loadTexts: mcmGcmBackupCfgEntry.setStatus('mandatory')
mcmGcmBackupCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmBackupCfgIndex.setStatus('mandatory')
mcmGcmBackupCfgUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmBackupCfgUnitIndex.setStatus('mandatory')
mcmGcmBackupCfgLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmBackupCfgLinkIndex.setStatus('mandatory')
mcmGcmTimerTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 5), )
if mibBuilder.loadTexts: mcmGcmTimerTable.setStatus('mandatory')
mcmGcmTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 5, 1), ).setIndexNames((0, "MICOM-GCM-MIB", "mcmGcmTimerIndex"))
if mibBuilder.loadTexts: mcmGcmTimerEntry.setStatus('mandatory')
mcmGcmTimerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmTimerIndex.setStatus('mandatory')
mcmGcmTimerUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmTimerUnitIndex.setStatus('mandatory')
mcmGcmTimerInactStartHr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmTimerInactStartHr.setStatus('mandatory')
mcmGcmTimerInactStartMin = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmTimerInactStartMin.setStatus('mandatory')
mcmGcmTimerInactDurationHr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 167))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmTimerInactDurationHr.setStatus('mandatory')
mcmGcmTimerInactDurationMin = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmTimerInactDurationMin.setStatus('mandatory')
mcmGcmTimerInactMonday = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmTimerInactMonday.setStatus('mandatory')
mcmGcmTimerInactTuesday = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmTimerInactTuesday.setStatus('mandatory')
mcmGcmTimerInactWednesday = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmTimerInactWednesday.setStatus('mandatory')
mcmGcmTimerInactThursday = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmTimerInactThursday.setStatus('mandatory')
mcmGcmTimerInactFriday = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmTimerInactFriday.setStatus('mandatory')
mcmGcmTimerInactSaturday = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmTimerInactSaturday.setStatus('mandatory')
mcmGcmTimerInactSunday = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 5, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmTimerInactSunday.setStatus('mandatory')
mcmGcmTimerInactPeriodic = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 5, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmTimerInactPeriodic.setStatus('mandatory')
nvmGcmGlobalCfgGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 6))
nvmGcmGlobalCfgAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmGlobalCfgAdminStatus.setStatus('mandatory')
nvmGcmGlobalCfgTraps = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmGlobalCfgTraps.setStatus('mandatory')
nvmGcmGlobalCfgAutoActSelMode = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hwCfgAutoSelect", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmGlobalCfgAutoActSelMode.setStatus('mandatory')
nvmGcmLinkTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 7), )
if mibBuilder.loadTexts: nvmGcmLinkTable.setStatus('mandatory')
nvmGcmLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 7, 1), ).setIndexNames((0, "MICOM-GCM-MIB", "nvmGcmLinkIndex"))
if mibBuilder.loadTexts: nvmGcmLinkEntry.setStatus('mandatory')
nvmGcmLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmGcmLinkIndex.setStatus('mandatory')
nvmGcmLinkUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmGcmLinkUnitIndex.setStatus('mandatory')
nvmGcmLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmLinkName.setStatus('mandatory')
nvmGcmLinkSigType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("reserved", 1), ("isdn", 2), ("unusedEver-up", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmLinkSigType.setStatus('mandatory')
nvmGcmLinkSigPcmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmLinkSigPcmIndex.setStatus('mandatory')
nvmGcmLinkProtoType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reserved", 1), ("frameRelay", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmLinkProtoType.setStatus('mandatory')
nvmGcmLinkProtoPcmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmLinkProtoPcmIndex.setStatus('mandatory')
nvmGcmLinkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("add", 1), ("delete", 2), ("active", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmLinkRowStatus.setStatus('mandatory')
nvmGcmUnitTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 8), )
if mibBuilder.loadTexts: nvmGcmUnitTable.setStatus('mandatory')
nvmGcmUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 8, 1), ).setIndexNames((0, "MICOM-GCM-MIB", "nvmGcmUnitIndex"))
if mibBuilder.loadTexts: nvmGcmUnitEntry.setStatus('mandatory')
nvmGcmUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmGcmUnitIndex.setStatus('mandatory')
nvmGcmUnitName = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmUnitName.setStatus('mandatory')
nvmGcmUnitAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("down", 1), ("up", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmUnitAdminStatus.setStatus('mandatory')
nvmGcmUnitTimerAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmUnitTimerAdminStatus.setStatus('mandatory')
nvmGcmUnitSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("fast-switch", 1), ("voice-switch", 2), ("manual-switch-backup", 3), ("manual-switching", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmUnitSwitchType.setStatus('mandatory')
nvmGcmUnitSwitchDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmUnitSwitchDelay.setStatus('deprecated')
nvmGcmUnitPrimaryLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmUnitPrimaryLinkIndex.setStatus('mandatory')
nvmGcmUnitBackupRemainTime = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmUnitBackupRemainTime.setStatus('mandatory')
nvmGcmUnitBackupSwitchDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 8, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmUnitBackupSwitchDelay.setStatus('mandatory')
nvmGcmUnitPrimarySwitchDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 8, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmUnitPrimarySwitchDelay.setStatus('mandatory')
nvmGcmUnitRegionalLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 8, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmUnitRegionalLinkIndex.setStatus('mandatory')
nvmGcmUnitModeCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 8, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("branch-node", 1), ("regional-node", 2), ("central-site-node", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmUnitModeCfg.setStatus('mandatory')
nvmGcmUnitPriLinkFailMonStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 8, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmUnitPriLinkFailMonStatus.setStatus('mandatory')
nvmGcmUnitPriLinkFailMonDurMin = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 8, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmUnitPriLinkFailMonDurMin.setStatus('mandatory')
nvmGcmUnitPriLinkFailMonThrshld = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 8, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmUnitPriLinkFailMonThrshld.setStatus('mandatory')
nvmGcmBackupCfgTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 9), )
if mibBuilder.loadTexts: nvmGcmBackupCfgTable.setStatus('mandatory')
nvmGcmBackupCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 9, 1), ).setIndexNames((0, "MICOM-GCM-MIB", "nvmGcmBackupCfgIndex"))
if mibBuilder.loadTexts: nvmGcmBackupCfgEntry.setStatus('mandatory')
nvmGcmBackupCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmGcmBackupCfgIndex.setStatus('mandatory')
nvmGcmBackupCfgUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmBackupCfgUnitIndex.setStatus('mandatory')
nvmGcmBackupCfgLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmBackupCfgLinkIndex.setStatus('mandatory')
nvmGcmBackupCfgLinkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("add", 1), ("delete", 2), ("active", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmBackupCfgLinkRowStatus.setStatus('mandatory')
nvmGcmTimerTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 10), )
if mibBuilder.loadTexts: nvmGcmTimerTable.setStatus('mandatory')
nvmGcmTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 10, 1), ).setIndexNames((0, "MICOM-GCM-MIB", "nvmGcmTimerIndex"))
if mibBuilder.loadTexts: nvmGcmTimerEntry.setStatus('mandatory')
nvmGcmTimerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmGcmTimerIndex.setStatus('mandatory')
nvmGcmTimerUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmTimerUnitIndex.setStatus('mandatory')
nvmGcmTimerInactStartHr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmTimerInactStartHr.setStatus('mandatory')
nvmGcmTimerInactStartMin = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmTimerInactStartMin.setStatus('mandatory')
nvmGcmTimerInactDurationHr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 167))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmTimerInactDurationHr.setStatus('mandatory')
nvmGcmTimerInactDurationMin = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 10, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmTimerInactDurationMin.setStatus('mandatory')
nvmGcmTimerInactMonday = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmTimerInactMonday.setStatus('mandatory')
nvmGcmTimerInactTuesday = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmTimerInactTuesday.setStatus('mandatory')
nvmGcmTimerInactWednesday = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmTimerInactWednesday.setStatus('mandatory')
nvmGcmTimerInactThursday = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmTimerInactThursday.setStatus('mandatory')
nvmGcmTimerInactFriday = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmTimerInactFriday.setStatus('mandatory')
nvmGcmTimerInactSaturday = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmTimerInactSaturday.setStatus('mandatory')
nvmGcmTimerInactSunday = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmTimerInactSunday.setStatus('mandatory')
nvmGcmTimerInactPeriodic = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmTimerInactPeriodic.setStatus('mandatory')
nvmGcmTimerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 1, 10, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("add", 1), ("delete", 2), ("active", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmGcmTimerRowStatus.setStatus('mandatory')
mcmGcmHwStatusTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 2, 1), )
if mibBuilder.loadTexts: mcmGcmHwStatusTable.setStatus('mandatory')
mcmGcmHwStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 2, 1, 1), ).setIndexNames((0, "MICOM-GCM-MIB", "mcmGcmHwStatusIndex"))
if mibBuilder.loadTexts: mcmGcmHwStatusEntry.setStatus('mandatory')
mcmGcmHwStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("everDown", 1), ("everUp", 2), ("isdnPrimary", 3), ("isdnBackup", 4), ("frPrimary", 5), ("frBackup", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmHwStatusIndex.setStatus('mandatory')
mcmGcmHwStatusDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmHwStatusDesc.setStatus('mandatory')
mcmGcmHwStatusOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ever-down", 1), ("up", 2), ("ever-up", 3), ("down", 4), ("enable-req", 5), ("disable-req", 6), ("link-error", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmHwStatusOperStatus.setStatus('mandatory')
mcmGcmHwStatusActiveLink = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 25, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmGcmHwStatusActiveLink.setStatus('mandatory')
mcmGCMPriLinkDownCausedByPhysicalConnection = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 25) + (0,1)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-GCM-MIB", "mcmGcmLinkIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkName"), ("MICOM-GCM-MIB", "mcmGcmLinkSigType"), ("MICOM-GCM-MIB", "mcmGcmLinkSigPcmIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoType"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoPcmIndex"))
mcmGCMPriLinkDownCausedByProtocolFailure = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 25) + (0,2)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-GCM-MIB", "mcmGcmLinkIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkName"), ("MICOM-GCM-MIB", "mcmGcmLinkSigType"), ("MICOM-GCM-MIB", "mcmGcmLinkSigPcmIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoType"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoPcmIndex"))
mcmGcmPriLinkDownCausedByGcmTimerEvent = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 25) + (0,3)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-GCM-MIB", "mcmGcmLinkIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkName"), ("MICOM-GCM-MIB", "mcmGcmLinkSigType"), ("MICOM-GCM-MIB", "mcmGcmLinkSigPcmIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoType"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoPcmIndex"), ("MICOM-GCM-MIB", "mcmGcmTimerIndex"))
mcmGcmPriLinkDownCausedByUnknownSource = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 25) + (0,4)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-GCM-MIB", "mcmGcmLinkIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkName"), ("MICOM-GCM-MIB", "mcmGcmLinkSigType"), ("MICOM-GCM-MIB", "mcmGcmLinkSigPcmIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoType"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoPcmIndex"))
mcmGCMBakLinkDownCausedByPhysicalConnection = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 25) + (0,5)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-GCM-MIB", "mcmGcmLinkIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkName"), ("MICOM-GCM-MIB", "mcmGcmLinkSigType"), ("MICOM-GCM-MIB", "mcmGcmLinkSigPcmIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoType"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoPcmIndex"))
mcmGCMBakLinkDownCausedByProtocolFailure = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 25) + (0,6)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-GCM-MIB", "mcmGcmLinkIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkName"), ("MICOM-GCM-MIB", "mcmGcmLinkSigType"), ("MICOM-GCM-MIB", "mcmGcmLinkSigPcmIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoType"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoPcmIndex"))
mcmGcmBakLinkDownCausedByGcmTimerEvent = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 25) + (0,7)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-GCM-MIB", "mcmGcmLinkIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkName"), ("MICOM-GCM-MIB", "mcmGcmLinkSigType"), ("MICOM-GCM-MIB", "mcmGcmLinkSigPcmIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoType"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoPcmIndex"), ("MICOM-GCM-MIB", "mcmGcmTimerIndex"))
mcmGcmBakLinkDownCausedByUnknownSource = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 25) + (0,8)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-GCM-MIB", "mcmGcmLinkIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkName"), ("MICOM-GCM-MIB", "mcmGcmLinkSigType"), ("MICOM-GCM-MIB", "mcmGcmLinkSigPcmIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoType"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoPcmIndex"))
mcmGcmPriLinkEst = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 25) + (0,9)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-GCM-MIB", "mcmGcmLinkIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkName"), ("MICOM-GCM-MIB", "mcmGcmLinkSigType"), ("MICOM-GCM-MIB", "mcmGcmLinkSigPcmIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoType"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoPcmIndex"))
mcmGcmBakLinkEst = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 25) + (0,10)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-GCM-MIB", "mcmGcmLinkIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkName"), ("MICOM-GCM-MIB", "mcmGcmLinkSigType"), ("MICOM-GCM-MIB", "mcmGcmLinkSigPcmIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoType"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoPcmIndex"))
mcmGcmPriLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 25) + (0,11)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-GCM-MIB", "mcmGcmLinkIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkName"), ("MICOM-GCM-MIB", "mcmGcmLinkSigType"), ("MICOM-GCM-MIB", "mcmGcmLinkSigPcmIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoType"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoPcmIndex"))
mcmGcmBakLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 25) + (0,12)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-GCM-MIB", "mcmGcmLinkIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkName"), ("MICOM-GCM-MIB", "mcmGcmLinkSigType"), ("MICOM-GCM-MIB", "mcmGcmLinkSigPcmIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoType"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoPcmIndex"))
mcmGcmRegionalLinkEst = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 25) + (0,13)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-GCM-MIB", "mcmGcmLinkIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkName"), ("MICOM-GCM-MIB", "mcmGcmLinkSigType"), ("MICOM-GCM-MIB", "mcmGcmLinkSigPcmIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoType"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoPcmIndex"))
mcmGcmRegionalLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 25) + (0,14)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-GCM-MIB", "mcmGcmLinkIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkName"), ("MICOM-GCM-MIB", "mcmGcmLinkSigType"), ("MICOM-GCM-MIB", "mcmGcmLinkSigPcmIndex"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoType"), ("MICOM-GCM-MIB", "mcmGcmLinkProtoPcmIndex"))
mibBuilder.exportSymbols("MICOM-GCM-MIB", mcmGcmTimerInactPeriodic=mcmGcmTimerInactPeriodic, nvmGcmUnitRegionalLinkIndex=nvmGcmUnitRegionalLinkIndex, nvmGcmBackupCfgTable=nvmGcmBackupCfgTable, mcmGcmLinkTable=mcmGcmLinkTable, nvmGcmTimerInactDurationHr=nvmGcmTimerInactDurationHr, mcmGcmBakLinkUp=mcmGcmBakLinkUp, nvmGcmTimerInactWednesday=nvmGcmTimerInactWednesday, mcmGcmUnitIndex=mcmGcmUnitIndex, mcmGcmLinkName=mcmGcmLinkName, nvmGcmTimerInactFriday=nvmGcmTimerInactFriday, mcmGcmUnitTable=mcmGcmUnitTable, nvmGcmUnitSwitchDelay=nvmGcmUnitSwitchDelay, status=status, mcmGCMBakLinkDownCausedByProtocolFailure=mcmGCMBakLinkDownCausedByProtocolFailure, mcmGcmGlobalCfgGroup=mcmGcmGlobalCfgGroup, nvmGcmUnitBackupRemainTime=nvmGcmUnitBackupRemainTime, mcmGcmUnitTimerAdminStatus=mcmGcmUnitTimerAdminStatus, mcmGcmUnitName=mcmGcmUnitName, nvmGcmTimerRowStatus=nvmGcmTimerRowStatus, nvmGcmUnitPriLinkFailMonStatus=nvmGcmUnitPriLinkFailMonStatus, mcmGcmTimerInactStartHr=mcmGcmTimerInactStartHr, nvmGcmUnitTable=nvmGcmUnitTable, mcmGcmLinkUnitIndex=mcmGcmLinkUnitIndex, nvmGcmBackupCfgLinkIndex=nvmGcmBackupCfgLinkIndex, mcmGcmGlobalCfgTraps=mcmGcmGlobalCfgTraps, nvmGcmTimerInactSaturday=nvmGcmTimerInactSaturday, nvmGcmUnitModeCfg=nvmGcmUnitModeCfg, mcmGcmGlobalCfgAdminStatus=mcmGcmGlobalCfgAdminStatus, mcmGcmLinkVoiceCalls=mcmGcmLinkVoiceCalls, mcmGcmTimerInactDurationHr=mcmGcmTimerInactDurationHr, mcmGcmUnitBackupRemainTime=mcmGcmUnitBackupRemainTime, mcmGcmGlobalCfgAutoActSelMode=mcmGcmGlobalCfgAutoActSelMode, nvmGcmLinkSigType=nvmGcmLinkSigType, mcmGcmTimerTable=mcmGcmTimerTable, nvmGcmGlobalCfgTraps=nvmGcmGlobalCfgTraps, mcmGcmLinkProtoStatus=mcmGcmLinkProtoStatus, nvmGcmTimerUnitIndex=nvmGcmTimerUnitIndex, mcmGcmUnitBackupSwitchDelay=mcmGcmUnitBackupSwitchDelay, nvmGcmGlobalCfgAutoActSelMode=nvmGcmGlobalCfgAutoActSelMode, mcmGcmPriLinkUp=mcmGcmPriLinkUp, mcmGcmLinkSigOperStatus=mcmGcmLinkSigOperStatus, nvmGcmUnitPriLinkFailMonDurMin=nvmGcmUnitPriLinkFailMonDurMin, nvmGcmTimerInactMonday=nvmGcmTimerInactMonday, mcmGcmUnitPrimarySwitchDelay=mcmGcmUnitPrimarySwitchDelay, nvmGcmUnitAdminStatus=nvmGcmUnitAdminStatus, mcmGcmLinkProtoPcmIndex=mcmGcmLinkProtoPcmIndex, nvmGcmTimerInactPeriodic=nvmGcmTimerInactPeriodic, mcmGcmUnitPriLinkFailMonStatus=mcmGcmUnitPriLinkFailMonStatus, mcmGcmLinkSigType=mcmGcmLinkSigType, nvmGcmTimerInactStartHr=nvmGcmTimerInactStartHr, mcmGcmUnitRegionalLinkIndex=mcmGcmUnitRegionalLinkIndex, mcmGcmTimerInactSaturday=mcmGcmTimerInactSaturday, nvmGcmTimerIndex=nvmGcmTimerIndex, mcmGcmHwStatusTable=mcmGcmHwStatusTable, mcmGCMPriLinkDownCausedByProtocolFailure=mcmGCMPriLinkDownCausedByProtocolFailure, mcmGcmTimerInactStartMin=mcmGcmTimerInactStartMin, nvmGcmUnitPrimaryLinkIndex=nvmGcmUnitPrimaryLinkIndex, mcmGcmHwStatusIndex=mcmGcmHwStatusIndex, mcmGcmHwStatusOperStatus=mcmGcmHwStatusOperStatus, mcmGcmRegionalLinkDown=mcmGcmRegionalLinkDown, nvmGcmUnitBackupSwitchDelay=nvmGcmUnitBackupSwitchDelay, nvmGcmTimerInactStartMin=nvmGcmTimerInactStartMin, mcmGcmUnitCmd=mcmGcmUnitCmd, mcmGcmUnitPrimaryLinkIndex=mcmGcmUnitPrimaryLinkIndex, nvmGcmLinkTable=nvmGcmLinkTable, nvmGcmLinkIndex=nvmGcmLinkIndex, mcmGcmPriLinkDownCausedByUnknownSource=mcmGcmPriLinkDownCausedByUnknownSource, nvmGcmUnitPrimarySwitchDelay=nvmGcmUnitPrimarySwitchDelay, micom_gcm=micom_gcm, mcmGcmTimerInactWednesday=mcmGcmTimerInactWednesday, nvmGcmLinkProtoType=nvmGcmLinkProtoType, mcmGCMPriLinkDownCausedByPhysicalConnection=mcmGCMPriLinkDownCausedByPhysicalConnection, nvmGcmBackupCfgUnitIndex=nvmGcmBackupCfgUnitIndex, mcmGcmBackupCfgLinkIndex=mcmGcmBackupCfgLinkIndex, nvmGcmBackupCfgIndex=nvmGcmBackupCfgIndex, nvmGcmTimerEntry=nvmGcmTimerEntry, nvmGcmTimerInactDurationMin=nvmGcmTimerInactDurationMin, mcmGcmBakLinkEst=mcmGcmBakLinkEst, mcmGcmTimerInactTuesday=mcmGcmTimerInactTuesday, nvmGcmBackupCfgEntry=nvmGcmBackupCfgEntry, mcmGcmBackupCfgTable=mcmGcmBackupCfgTable, mcmGcmBackupCfgUnitIndex=mcmGcmBackupCfgUnitIndex, mcmGcmUnitSwitchType=mcmGcmUnitSwitchType, mcmGcmUnitPriLinkFailMonCount=mcmGcmUnitPriLinkFailMonCount, nvmGcmTimerInactThursday=nvmGcmTimerInactThursday, mcmGcmUnitSwitchDelay=mcmGcmUnitSwitchDelay, nvmGcmGlobalCfgAdminStatus=nvmGcmGlobalCfgAdminStatus, mcmGcmHwStatusEntry=mcmGcmHwStatusEntry, mcmGcmLinkSigPcmIndex=mcmGcmLinkSigPcmIndex, mcmGcmLinkIndex=mcmGcmLinkIndex, mcmGcmTimerInactSunday=mcmGcmTimerInactSunday, mcmGcmTimerInactMonday=mcmGcmTimerInactMonday, mcmGcmUnitAdminStatus=mcmGcmUnitAdminStatus, nvmGcmLinkProtoPcmIndex=nvmGcmLinkProtoPcmIndex, nvmGcmTimerTable=nvmGcmTimerTable, mcmGcmBackupCfgIndex=mcmGcmBackupCfgIndex, mcmGcmUnitPriLinkFailMonDurMin=mcmGcmUnitPriLinkFailMonDurMin, mcmGcmTimerUnitIndex=mcmGcmTimerUnitIndex, mcmGcmLinkEntry=mcmGcmLinkEntry, nvmGcmLinkSigPcmIndex=nvmGcmLinkSigPcmIndex, nvmGcmLinkName=nvmGcmLinkName, mcmGcmPriLinkEst=mcmGcmPriLinkEst, mcmGcmTimerIndex=mcmGcmTimerIndex, nvmGcmUnitPriLinkFailMonThrshld=nvmGcmUnitPriLinkFailMonThrshld, nvmGcmGlobalCfgGroup=nvmGcmGlobalCfgGroup, mcmGcmTimerInactFriday=mcmGcmTimerInactFriday, mcmGcmBakLinkDownCausedByUnknownSource=mcmGcmBakLinkDownCausedByUnknownSource, mcmGcmLinkProtoType=mcmGcmLinkProtoType, mcmGcmTimerEntry=mcmGcmTimerEntry, mcmGcmTimerInactThursday=mcmGcmTimerInactThursday, mcmGcmRegionalLinkEst=mcmGcmRegionalLinkEst, nvmGcmBackupCfgLinkRowStatus=nvmGcmBackupCfgLinkRowStatus, nvmGcmTimerInactTuesday=nvmGcmTimerInactTuesday, nvmGcmUnitSwitchType=nvmGcmUnitSwitchType, mcmGcmBakLinkDownCausedByGcmTimerEvent=mcmGcmBakLinkDownCausedByGcmTimerEvent, mcmGcmUnitModeCfg=mcmGcmUnitModeCfg, mcmGcmHwStatusDesc=mcmGcmHwStatusDesc, configuration=configuration, mcmGcmTimerInactDurationMin=mcmGcmTimerInactDurationMin, mcmGCMBakLinkDownCausedByPhysicalConnection=mcmGCMBakLinkDownCausedByPhysicalConnection, mcmGcmPriLinkDownCausedByGcmTimerEvent=mcmGcmPriLinkDownCausedByGcmTimerEvent, nvmGcmUnitIndex=nvmGcmUnitIndex, nvmGcmLinkUnitIndex=nvmGcmLinkUnitIndex, mcmGcmHwStatusActiveLink=mcmGcmHwStatusActiveLink, nvmGcmLinkRowStatus=nvmGcmLinkRowStatus, mcmGcmUnitPriLinkFailMonThrshld=mcmGcmUnitPriLinkFailMonThrshld, nvmGcmLinkEntry=nvmGcmLinkEntry, nvmGcmUnitEntry=nvmGcmUnitEntry, nvmGcmUnitName=nvmGcmUnitName, nvmGcmUnitTimerAdminStatus=nvmGcmUnitTimerAdminStatus, mcmGcmBackupCfgEntry=mcmGcmBackupCfgEntry, mcmGcmUnitEntry=mcmGcmUnitEntry, nvmGcmTimerInactSunday=nvmGcmTimerInactSunday)
