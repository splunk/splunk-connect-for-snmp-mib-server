#
# PySNMP MIB module SRM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SRM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:02:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
cardSpecific, = mibBuilder.importSymbols("BASIS-MIB", "cardSpecific")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, iso, Gauge32, ModuleIdentity, Integer32, Bits, Unsigned32, IpAddress, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "iso", "Gauge32", "ModuleIdentity", "Integer32", "Bits", "Unsigned32", "IpAddress", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "NotificationType", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
srm3T3CnfGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 3, 10))
srmeCnfGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 3, 22))
srm3T3CnfGrpTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 3, 10, 1), )
if mibBuilder.loadTexts: srm3T3CnfGrpTable.setStatus('mandatory')
srm3T3CnfGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 3, 10, 1, 1), ).setIndexNames((0, "SRM-MIB", "srmT3LineNum"), (0, "SRM-MIB", "srmStartT1LineNum"))
if mibBuilder.loadTexts: srm3T3CnfGrpEntry.setStatus('mandatory')
srmT3LineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 3, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srmT3LineNum.setStatus('mandatory')
srmStartT1LineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 3, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srmStartT1LineNum.setStatus('mandatory')
srmT1RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 3, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("add", 1), ("delete", 2), ("modify", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srmT1RowStatus.setStatus('mandatory')
srmTargetSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 3, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srmTargetSlotNum.setStatus('mandatory')
srmTargetSlotLineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 3, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srmTargetSlotLineNum.setStatus('mandatory')
srmeCnfGrpTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 3, 22, 1), )
if mibBuilder.loadTexts: srmeCnfGrpTable.setStatus('mandatory')
srmeCnfGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 3, 22, 1, 1), ).setIndexNames((0, "SRM-MIB", "srmeLineNum"), (0, "SRM-MIB", "srmeStartVtNum"))
if mibBuilder.loadTexts: srmeCnfGrpEntry.setStatus('mandatory')
srmeLineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 3, 22, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srmeLineNum.setStatus('mandatory')
srmeStartVtNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 3, 22, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 84))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srmeStartVtNum.setStatus('mandatory')
srmeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 3, 22, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("add", 1), ("delete", 2), ("modify", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srmeRowStatus.setStatus('mandatory')
srmeTargetSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 3, 22, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srmeTargetSlotNum.setStatus('mandatory')
srmeTargetSlotLineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 3, 22, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srmeTargetSlotLineNum.setStatus('mandatory')
srmeVtFramingType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 3, 22, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("sf", 2), ("esf", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srmeVtFramingType.setStatus('mandatory')
mibBuilder.exportSymbols("SRM-MIB", srmStartT1LineNum=srmStartT1LineNum, srmT3LineNum=srmT3LineNum, srmeCnfGrpTable=srmeCnfGrpTable, srmeStartVtNum=srmeStartVtNum, srmTargetSlotNum=srmTargetSlotNum, srmeTargetSlotLineNum=srmeTargetSlotLineNum, srmeCnfGrpEntry=srmeCnfGrpEntry, srmeRowStatus=srmeRowStatus, srmTargetSlotLineNum=srmTargetSlotLineNum, srmeLineNum=srmeLineNum, srmeVtFramingType=srmeVtFramingType, srmeCnfGrp=srmeCnfGrp, srmeTargetSlotNum=srmeTargetSlotNum, srm3T3CnfGrpTable=srm3T3CnfGrpTable, srmT1RowStatus=srmT1RowStatus, srm3T3CnfGrp=srm3T3CnfGrp, srm3T3CnfGrpEntry=srm3T3CnfGrpEntry)
