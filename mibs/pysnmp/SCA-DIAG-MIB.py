#
# PySNMP MIB module SCA-DIAG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SCA-DIAG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:52:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
scanet, = mibBuilder.importSymbols("SCANET-MIB", "scanet")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, MibIdentifier, iso, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, NotificationType, Counter64, ObjectIdentity, Bits, Gauge32, Unsigned32, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "iso", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "NotificationType", "Counter64", "ObjectIdentity", "Bits", "Gauge32", "Unsigned32", "Integer32", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
diag = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 47))
diagList = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 47, 1))
diagTest = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 47, 2))
diagListNumberOfEntries = MibScalar((1, 3, 6, 1, 4, 1, 208, 47, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diagListNumberOfEntries.setStatus('mandatory')
diagListNumberOfErrorEntries = MibScalar((1, 3, 6, 1, 4, 1, 208, 47, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListNumberOfErrorEntries.setStatus('mandatory')
diagListLastUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 208, 47, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListLastUpdateTime.setStatus('mandatory')
diagListTable = MibTable((1, 3, 6, 1, 4, 1, 208, 47, 1, 4), )
if mibBuilder.loadTexts: diagListTable.setStatus('mandatory')
diagListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 208, 47, 1, 4, 1), ).setIndexNames((0, "SCA-DIAG-MIB", "diagListIndex"))
if mibBuilder.loadTexts: diagListEntry.setStatus('mandatory')
diagListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListIndex.setStatus('mandatory')
diagListLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(32, 64, 96))).clone(namedValues=NamedValues(("warning", 32), ("error", 64), ("fatalError", 96)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListLevel.setStatus('mandatory')
diagListCode = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListCode.setStatus('mandatory')
diagListIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListIfindex.setStatus('mandatory')
diagListTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 1, 4, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListTimeStamp.setStatus('mandatory')
diagListDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 1, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(160, 160)).setFixedLength(160)).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListDescription.setStatus('mandatory')
diagListAdvice = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 1, 4, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(160, 160)).setFixedLength(160)).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListAdvice.setStatus('mandatory')
diagTestTable = MibTable((1, 3, 6, 1, 4, 1, 208, 47, 2, 1), )
if mibBuilder.loadTexts: diagTestTable.setStatus('mandatory')
diagTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 208, 47, 2, 1, 1), ).setIndexNames((0, "SCA-DIAG-MIB", "diagTestType"))
if mibBuilder.loadTexts: diagTestEntry.setStatus('mandatory')
diagTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagTestType.setStatus('mandatory')
diagTestDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagTestDescription.setStatus('mandatory')
diagTestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ready", 1), ("test", 2), ("testing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diagTestStatus.setStatus('mandatory')
mibBuilder.exportSymbols("SCA-DIAG-MIB", diagListCode=diagListCode, diagListNumberOfEntries=diagListNumberOfEntries, diagListNumberOfErrorEntries=diagListNumberOfErrorEntries, diagTestStatus=diagTestStatus, diagListIfindex=diagListIfindex, diagTestDescription=diagTestDescription, diagListDescription=diagListDescription, diagTestEntry=diagTestEntry, diagListEntry=diagListEntry, diagListLevel=diagListLevel, diagTestType=diagTestType, diagListTimeStamp=diagListTimeStamp, diagListTable=diagListTable, diagListAdvice=diagListAdvice, diagTest=diagTest, diagListIndex=diagListIndex, diagTestTable=diagTestTable, diag=diag, diagListLastUpdateTime=diagListLastUpdateTime, diagList=diagList)
