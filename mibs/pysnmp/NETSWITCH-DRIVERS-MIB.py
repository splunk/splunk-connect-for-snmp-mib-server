#
# PySNMP MIB module NETSWITCH-DRIVERS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSWITCH-DRIVERS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:11:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, IpAddress, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity, MibIdentifier, Gauge32, Counter64, iso, NotificationType, Unsigned32, enterprises, Counter32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "IpAddress", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity", "MibIdentifier", "Gauge32", "Counter64", "iso", "NotificationType", "Unsigned32", "enterprises", "Counter32", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hp = MibIdentifier((1, 3, 6, 1, 4, 1, 11))
nm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2))
icf = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14))
hpicfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11))
hpicfSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5))
hpSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1))
hpOpSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 1))
hpHwSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2))
hpDriverStats = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3))
hpDriverStatsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1), )
if mibBuilder.loadTexts: hpDriverStatsTable.setStatus('mandatory')
hpDriverStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1, 1), ).setIndexNames((0, "NETSWITCH-DRIVERS-MIB", "hpDriverStatsIndex"))
if mibBuilder.loadTexts: hpDriverStatsEntry.setStatus('mandatory')
hpDriverStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDriverStatsIndex.setStatus('mandatory')
hpDriverStatsType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDriverStatsType.setStatus('mandatory')
hpDriverStatsOctetsRxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDriverStatsOctetsRxOk.setStatus('mandatory')
hpDriverStatsFrameRxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDriverStatsFrameRxOk.setStatus('mandatory')
hpDriverStatsTotalRxError = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDriverStatsTotalRxError.setStatus('mandatory')
hpDriverStatsOctetTxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDriverStatsOctetTxOk.setStatus('mandatory')
hpDriverStatsFrameTxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDriverStatsFrameTxOk.setStatus('mandatory')
hpDriverStatsTotalTxError = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDriverStatsTotalTxError.setStatus('mandatory')
hpDriverStatsOctetsRxPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDriverStatsOctetsRxPerSec.setStatus('mandatory')
hpDriverStatsPeakOctetsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDriverStatsPeakOctetsRx.setStatus('mandatory')
hpDriverStatsFramesRxPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDriverStatsFramesRxPerSec.setStatus('mandatory')
hpDriverStatsPeakFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDriverStatsPeakFramesRx.setStatus('mandatory')
hpDriverStatsOctetsTxPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDriverStatsOctetsTxPerSec.setStatus('mandatory')
hpDriverStatsPeakOctetsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDriverStatsPeakOctetsTx.setStatus('mandatory')
hpDriverStatsFramesTxPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDriverStatsFramesTxPerSec.setStatus('mandatory')
hpDriverStatsPeakFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDriverStatsPeakFramesTx.setStatus('mandatory')
hpFddiDriverStatsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2), )
if mibBuilder.loadTexts: hpFddiDriverStatsTable.setStatus('mandatory')
hpFddiDriverStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1), ).setIndexNames((0, "NETSWITCH-DRIVERS-MIB", "hpFddiDriverStatsIndex"))
if mibBuilder.loadTexts: hpFddiDriverStatsEntry.setStatus('mandatory')
hpFddiDriverStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsIndex.setStatus('mandatory')
hpFddiDriverStatsSMTOctetsRxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsSMTOctetsRxOk.setStatus('mandatory')
hpFddiDriverStatsSMTFrameRxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsSMTFrameRxOk.setStatus('mandatory')
hpFddiDriverStatsSMTOctetsTxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsSMTOctetsTxOk.setStatus('mandatory')
hpFddiDriverStatsSMTFrameTxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsSMTFrameTxOk.setStatus('mandatory')
hpFddiDriverStatsErrRxCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsErrRxCRC.setStatus('mandatory')
hpFddiDriverStatsErrRxOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsErrRxOverrun.setStatus('mandatory')
hpFddiDriverStatsErrRxParity = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsErrRxParity.setStatus('mandatory')
hpFddiDriverStatsErrRxMACStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsErrRxMACStatus.setStatus('mandatory')
hpFddiDriverStatsErrTxAbort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsErrTxAbort.setStatus('mandatory')
hpFddiDriverStatsErrTxUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsErrTxUnderrun.setStatus('mandatory')
hpFddiDriverStatsErrTxParity = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsErrTxParity.setStatus('mandatory')
hpFddiDriverStatsErrGsrLlcTxRer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsErrGsrLlcTxRer.setStatus('mandatory')
hpFddiDriverStatsErrGsrLlcRxRer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsErrGsrLlcRxRer.setStatus('mandatory')
hpFddiDriverStatsErrGsrSMTTxRer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsErrGsrSMTTxRer.setStatus('mandatory')
hpFddiDriverStatsErrGsrSMTRxRer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsErrGsrSMTRxRer.setStatus('mandatory')
hpFddiDriverStatsErrGsrPortOp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsErrGsrPortOp.setStatus('mandatory')
hpFddiDriverStatsErrGsrLlcRxRov = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsErrGsrLlcRxRov.setStatus('mandatory')
hpFddiDriverStatsErrGsrSMTRxRov = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsErrGsrSMTRxRov.setStatus('mandatory')
hpFddiDriverStatsErrGsrInternalOp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsErrGsrInternalOp.setStatus('mandatory')
hpFddiDriverStatsIoeMov = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsIoeMov.setStatus('mandatory')
hpFddiDriverStatsErrGsrHost = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsErrGsrHost.setStatus('mandatory')
hpFddiDriverStatsTxCongestion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsTxCongestion.setStatus('mandatory')
hpFddiDriverStatsMissedCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsMissedCmd.setStatus('mandatory')
hpFddiDriverStatsMissedCRF = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2, 3, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpFddiDriverStatsMissedCRF.setStatus('mandatory')
mibBuilder.exportSymbols("NETSWITCH-DRIVERS-MIB", hpFddiDriverStatsMissedCmd=hpFddiDriverStatsMissedCmd, hpDriverStatsOctetTxOk=hpDriverStatsOctetTxOk, hpDriverStatsFramesRxPerSec=hpDriverStatsFramesRxPerSec, nm=nm, hpFddiDriverStatsSMTOctetsTxOk=hpFddiDriverStatsSMTOctetsTxOk, hpFddiDriverStatsErrGsrLlcRxRov=hpFddiDriverStatsErrGsrLlcRxRov, icf=icf, hpDriverStatsPeakFramesTx=hpDriverStatsPeakFramesTx, hpHwSystem=hpHwSystem, hpFddiDriverStatsErrGsrLlcRxRer=hpFddiDriverStatsErrGsrLlcRxRer, hp=hp, hpFddiDriverStatsErrRxParity=hpFddiDriverStatsErrRxParity, hpFddiDriverStatsErrGsrSMTRxRer=hpFddiDriverStatsErrGsrSMTRxRer, hpDriverStatsEntry=hpDriverStatsEntry, hpFddiDriverStatsErrGsrSMTRxRov=hpFddiDriverStatsErrGsrSMTRxRov, hpOpSystem=hpOpSystem, hpFddiDriverStatsIndex=hpFddiDriverStatsIndex, hpFddiDriverStatsErrGsrHost=hpFddiDriverStatsErrGsrHost, hpFddiDriverStatsSMTOctetsRxOk=hpFddiDriverStatsSMTOctetsRxOk, hpFddiDriverStatsErrGsrLlcTxRer=hpFddiDriverStatsErrGsrLlcTxRer, hpDriverStatsTable=hpDriverStatsTable, hpFddiDriverStatsTable=hpFddiDriverStatsTable, hpFddiDriverStatsErrRxOverrun=hpFddiDriverStatsErrRxOverrun, hpFddiDriverStatsErrTxParity=hpFddiDriverStatsErrTxParity, hpFddiDriverStatsTxCongestion=hpFddiDriverStatsTxCongestion, hpFddiDriverStatsErrGsrInternalOp=hpFddiDriverStatsErrGsrInternalOp, hpDriverStats=hpDriverStats, hpDriverStatsPeakFramesRx=hpDriverStatsPeakFramesRx, hpFddiDriverStatsErrTxUnderrun=hpFddiDriverStatsErrTxUnderrun, hpDriverStatsTotalTxError=hpDriverStatsTotalTxError, hpDriverStatsType=hpDriverStatsType, hpDriverStatsOctetsRxPerSec=hpDriverStatsOctetsRxPerSec, hpDriverStatsTotalRxError=hpDriverStatsTotalRxError, hpicfSwitch=hpicfSwitch, hpDriverStatsFramesTxPerSec=hpDriverStatsFramesTxPerSec, hpSwitch=hpSwitch, hpDriverStatsFrameRxOk=hpDriverStatsFrameRxOk, hpDriverStatsFrameTxOk=hpDriverStatsFrameTxOk, hpFddiDriverStatsEntry=hpFddiDriverStatsEntry, hpFddiDriverStatsSMTFrameRxOk=hpFddiDriverStatsSMTFrameRxOk, hpFddiDriverStatsErrRxMACStatus=hpFddiDriverStatsErrRxMACStatus, hpFddiDriverStatsErrGsrPortOp=hpFddiDriverStatsErrGsrPortOp, hpFddiDriverStatsMissedCRF=hpFddiDriverStatsMissedCRF, hpDriverStatsPeakOctetsRx=hpDriverStatsPeakOctetsRx, hpDriverStatsOctetsRxOk=hpDriverStatsOctetsRxOk, hpicfObjects=hpicfObjects, hpFddiDriverStatsErrTxAbort=hpFddiDriverStatsErrTxAbort, hpFddiDriverStatsSMTFrameTxOk=hpFddiDriverStatsSMTFrameTxOk, hpFddiDriverStatsErrGsrSMTTxRer=hpFddiDriverStatsErrGsrSMTTxRer, hpFddiDriverStatsErrRxCRC=hpFddiDriverStatsErrRxCRC, hpDriverStatsIndex=hpDriverStatsIndex, hpFddiDriverStatsIoeMov=hpFddiDriverStatsIoeMov, hpDriverStatsOctetsTxPerSec=hpDriverStatsOctetsTxPerSec, hpDriverStatsPeakOctetsTx=hpDriverStatsPeakOctetsTx)
