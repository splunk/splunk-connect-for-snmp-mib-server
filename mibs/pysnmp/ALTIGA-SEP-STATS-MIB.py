#
# PySNMP MIB module ALTIGA-SEP-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALTIGA-SEP-STATS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:05:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
alSepMibModule, = mibBuilder.importSymbols("ALTIGA-GLOBAL-REG", "alSepMibModule")
alStatsSep, alSepGroup = mibBuilder.importSymbols("ALTIGA-MIB", "alStatsSep", "alSepGroup")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibIdentifier, Integer32, TimeTicks, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Unsigned32, iso, ModuleIdentity, Counter64, IpAddress, Bits, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Integer32", "TimeTicks", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Unsigned32", "iso", "ModuleIdentity", "Counter64", "IpAddress", "Bits", "NotificationType", "ObjectIdentity")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
altigaSepStatsMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3076, 1, 1, 35, 2))
altigaSepStatsMibModule.setRevisions(('2003-03-27 00:00', '2002-09-05 13:00', '2002-07-10 00:00',))
if mibBuilder.loadTexts: altigaSepStatsMibModule.setLastUpdated('200303270000Z')
if mibBuilder.loadTexts: altigaSepStatsMibModule.setOrganization('Cisco Systems, Inc.')
alSepModuleStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2), )
if mibBuilder.loadTexts: alSepModuleStatsTable.setStatus('current')
alSepModuleStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1), ).setIndexNames((0, "ALTIGA-SEP-STATS-MIB", "alSepModuleStatsSlotNum"))
if mibBuilder.loadTexts: alSepModuleStatsEntry.setStatus('current')
alSepModuleStatsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alSepModuleStatsRowStatus.setStatus('current')
alSepModuleStatsSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: alSepModuleStatsSlotNum.setStatus('current')
alSepModuleStatsType = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cryptSet", 1), ("cryptIc", 2), ("bcm582x", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsType.setStatus('current')
alSepModuleStatsState = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("sepNotFound", 1), ("sepFound", 2), ("sepDiagFailure", 3), ("sepNotOperational", 4), ("sepLoading", 5), ("sepInitializing", 6), ("sepOperational", 7), ("sepDisabled", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsState.setStatus('current')
alSepModuleStatsDspCodeVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsDspCodeVersion.setStatus('current')
alSepModuleStatsHashOutboundPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsHashOutboundPackets.setStatus('current')
alSepModuleStatsHashOutboundOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsHashOutboundOctets.setStatus('current')
alSepModuleStatsHashInboundPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsHashInboundPackets.setStatus('current')
alSepModuleStatsHashInboundOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsHashInboundOctets.setStatus('current')
alSepModuleStatsEncPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsEncPackets.setStatus('current')
alSepModuleStatsEncOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsEncOctets.setStatus('current')
alSepModuleStatsDecPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsDecPackets.setStatus('current')
alSepModuleStatsDecOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsDecOctets.setStatus('current')
alSepModuleStatsHashEncPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsHashEncPackets.setStatus('current')
alSepModuleStatsHashDecPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsHashDecPackets.setStatus('current')
alSepModuleStatsCryptoTransformsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsCryptoTransformsTotal.setStatus('current')
alSepModuleStatsPacketDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsPacketDrops.setStatus('current')
alSepModuleStatsRandRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsRandRequests.setStatus('current')
alSepModuleStatsRandReplens = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsRandReplens.setStatus('current')
alSepModuleStatsRandBytesAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsRandBytesAvail.setStatus('current')
alSepModuleStatsRandCacheEmpty = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsRandCacheEmpty.setStatus('current')
alSepModuleStatsDHKeysGenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsDHKeysGenerated.setStatus('current')
alSepModuleStatsDHDerivedSecretKeys = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsDHDerivedSecretKeys.setStatus('current')
alSepModuleStatsRSASignings = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsRSASignings.setStatus('current')
alSepModuleStatsRSAVerifications = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsRSAVerifications.setStatus('current')
alSepModuleStatsRSAEncPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsRSAEncPackets.setStatus('current')
alSepModuleStatsRSAEncOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsRSAEncOctets.setStatus('current')
alSepModuleStatsRSADecPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsRSADecPackets.setStatus('current')
alSepModuleStatsRSADecOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsRSADecOctets.setStatus('current')
alSepModuleStatsDSAKeysGenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsDSAKeysGenerated.setStatus('current')
alSepModuleStatsDSASignings = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsDSASignings.setStatus('current')
alSepModuleStatsDSAVerifications = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsDSAVerifications.setStatus('current')
alSepModuleStatsRSAKeysGenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 30, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alSepModuleStatsRSAKeysGenerated.setStatus('current')
altigaSepStatsMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 35, 2, 1))
altigaSepStatsMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 35, 2, 1, 1))
altigaSepStatsMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3076, 1, 1, 35, 2, 1, 1, 1)).setObjects(("ALTIGA-SEP-STATS-MIB", "altigaSepStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaSepStatsMibCompliance = altigaSepStatsMibCompliance.setStatus('current')
altigaSepStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3076, 2, 1, 1, 1, 30, 2)).setObjects(("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsRowStatus"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsType"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsState"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsDspCodeVersion"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsHashOutboundPackets"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsHashOutboundOctets"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsHashInboundPackets"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsHashInboundOctets"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsEncPackets"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsEncOctets"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsDecPackets"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsDecOctets"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsHashEncPackets"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsHashDecPackets"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsCryptoTransformsTotal"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsPacketDrops"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsRandRequests"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsRandReplens"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsRandBytesAvail"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsRandCacheEmpty"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsDHKeysGenerated"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsDHDerivedSecretKeys"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsRSASignings"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsRSAVerifications"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsRSAEncPackets"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsRSAEncOctets"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsRSADecPackets"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsRSADecOctets"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsDSAKeysGenerated"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsDSASignings"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsDSAVerifications"), ("ALTIGA-SEP-STATS-MIB", "alSepModuleStatsRSAKeysGenerated"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaSepStatsGroup = altigaSepStatsGroup.setStatus('current')
mibBuilder.exportSymbols("ALTIGA-SEP-STATS-MIB", alSepModuleStatsRSADecPackets=alSepModuleStatsRSADecPackets, alSepModuleStatsHashDecPackets=alSepModuleStatsHashDecPackets, altigaSepStatsMibCompliance=altigaSepStatsMibCompliance, alSepModuleStatsDSAKeysGenerated=alSepModuleStatsDSAKeysGenerated, alSepModuleStatsDHDerivedSecretKeys=alSepModuleStatsDHDerivedSecretKeys, alSepModuleStatsEncOctets=alSepModuleStatsEncOctets, alSepModuleStatsRandCacheEmpty=alSepModuleStatsRandCacheEmpty, alSepModuleStatsEncPackets=alSepModuleStatsEncPackets, alSepModuleStatsHashOutboundOctets=alSepModuleStatsHashOutboundOctets, alSepModuleStatsCryptoTransformsTotal=alSepModuleStatsCryptoTransformsTotal, alSepModuleStatsHashInboundPackets=alSepModuleStatsHashInboundPackets, altigaSepStatsMibConformance=altigaSepStatsMibConformance, alSepModuleStatsDSAVerifications=alSepModuleStatsDSAVerifications, alSepModuleStatsHashOutboundPackets=alSepModuleStatsHashOutboundPackets, alSepModuleStatsRSAEncPackets=alSepModuleStatsRSAEncPackets, alSepModuleStatsRSAVerifications=alSepModuleStatsRSAVerifications, altigaSepStatsMibCompliances=altigaSepStatsMibCompliances, alSepModuleStatsRowStatus=alSepModuleStatsRowStatus, alSepModuleStatsDecPackets=alSepModuleStatsDecPackets, alSepModuleStatsRandRequests=alSepModuleStatsRandRequests, alSepModuleStatsEntry=alSepModuleStatsEntry, alSepModuleStatsSlotNum=alSepModuleStatsSlotNum, alSepModuleStatsRandReplens=alSepModuleStatsRandReplens, alSepModuleStatsHashEncPackets=alSepModuleStatsHashEncPackets, alSepModuleStatsRSASignings=alSepModuleStatsRSASignings, alSepModuleStatsRandBytesAvail=alSepModuleStatsRandBytesAvail, alSepModuleStatsDecOctets=alSepModuleStatsDecOctets, alSepModuleStatsRSADecOctets=alSepModuleStatsRSADecOctets, alSepModuleStatsDHKeysGenerated=alSepModuleStatsDHKeysGenerated, alSepModuleStatsRSAEncOctets=alSepModuleStatsRSAEncOctets, alSepModuleStatsType=alSepModuleStatsType, alSepModuleStatsDSASignings=alSepModuleStatsDSASignings, PYSNMP_MODULE_ID=altigaSepStatsMibModule, alSepModuleStatsState=alSepModuleStatsState, alSepModuleStatsRSAKeysGenerated=alSepModuleStatsRSAKeysGenerated, altigaSepStatsMibModule=altigaSepStatsMibModule, alSepModuleStatsTable=alSepModuleStatsTable, alSepModuleStatsDspCodeVersion=alSepModuleStatsDspCodeVersion, altigaSepStatsGroup=altigaSepStatsGroup, alSepModuleStatsPacketDrops=alSepModuleStatsPacketDrops, alSepModuleStatsHashInboundOctets=alSepModuleStatsHashInboundOctets)
