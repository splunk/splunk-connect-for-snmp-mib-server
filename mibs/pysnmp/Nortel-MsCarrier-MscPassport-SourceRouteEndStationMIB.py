#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-SourceRouteEndStationMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-SourceRouteEndStationMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:21:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
Counter32, Gauge32, RowStatus, StorageType, Unsigned32, DisplayString = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Counter32", "Gauge32", "RowStatus", "StorageType", "Unsigned32", "DisplayString")
AsciiStringIndex, AsciiString, HexString, NonReplicated, DashedHexString = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "AsciiStringIndex", "AsciiString", "HexString", "NonReplicated", "DashedHexString")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
mscVr, mscVrIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVr", "mscVrIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Counter32, Gauge32, ObjectIdentity, Integer32, iso, ModuleIdentity, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, MibIdentifier, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "Gauge32", "ObjectIdentity", "Integer32", "iso", "ModuleIdentity", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "MibIdentifier", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
sourceRouteEndStationMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 54))
mscVrSres = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13))
mscVrSresRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 1), )
if mibBuilder.loadTexts: mscVrSresRowStatusTable.setStatus('mandatory')
mscVrSresRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-SourceRouteEndStationMIB", "mscVrSresIndex"))
if mibBuilder.loadTexts: mscVrSresRowStatusEntry.setStatus('mandatory')
mscVrSresRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrSresRowStatus.setStatus('mandatory')
mscVrSresComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresComponentName.setStatus('mandatory')
mscVrSresStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresStorageType.setStatus('mandatory')
mscVrSresIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrSresIndex.setStatus('mandatory')
mscVrSresAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 10), )
if mibBuilder.loadTexts: mscVrSresAdminControlTable.setStatus('mandatory')
mscVrSresAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-SourceRouteEndStationMIB", "mscVrSresIndex"))
if mibBuilder.loadTexts: mscVrSresAdminControlEntry.setStatus('mandatory')
mscVrSresSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresSnmpAdminStatus.setStatus('mandatory')
mscVrSresProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 11), )
if mibBuilder.loadTexts: mscVrSresProvTable.setStatus('mandatory')
mscVrSresProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-SourceRouteEndStationMIB", "mscVrSresIndex"))
if mibBuilder.loadTexts: mscVrSresProvEntry.setStatus('mandatory')
mscVrSresRouteTableNumEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrSresRouteTableNumEntries.setStatus('mandatory')
mscVrSresAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(200, 1000000)).clone(900)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrSresAgingTime.setStatus('mandatory')
mscVrSresRouteDescriptorLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(8, 14)).clone(14)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresRouteDescriptorLength.setStatus('mandatory')
mscVrSresOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 12), )
if mibBuilder.loadTexts: mscVrSresOperStatusTable.setStatus('mandatory')
mscVrSresOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-SourceRouteEndStationMIB", "mscVrSresIndex"))
if mibBuilder.loadTexts: mscVrSresOperStatusEntry.setStatus('mandatory')
mscVrSresSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresSnmpOperStatus.setStatus('mandatory')
mscVrSresStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 13), )
if mibBuilder.loadTexts: mscVrSresStateTable.setStatus('mandatory')
mscVrSresStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-SourceRouteEndStationMIB", "mscVrSresIndex"))
if mibBuilder.loadTexts: mscVrSresStateEntry.setStatus('mandatory')
mscVrSresAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresAdminState.setStatus('mandatory')
mscVrSresOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresOperationalState.setStatus('mandatory')
mscVrSresUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresUsageState.setStatus('mandatory')
mscVrSresOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 14), )
if mibBuilder.loadTexts: mscVrSresOperTable.setStatus('mandatory')
mscVrSresOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-SourceRouteEndStationMIB", "mscVrSresIndex"))
if mibBuilder.loadTexts: mscVrSresOperEntry.setStatus('mandatory')
mscVrSresRtEntriesUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 14, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresRtEntriesUsed.setStatus('mandatory')
mscVrSresRtEntriesFree = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 14, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresRtEntriesFree.setStatus('mandatory')
mscVrSresRtEntriesDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 14, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresRtEntriesDenied.setStatus('mandatory')
mscVrSresRe = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 2))
mscVrSresReRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 2, 1), )
if mibBuilder.loadTexts: mscVrSresReRowStatusTable.setStatus('mandatory')
mscVrSresReRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-SourceRouteEndStationMIB", "mscVrSresIndex"), (0, "Nortel-MsCarrier-MscPassport-SourceRouteEndStationMIB", "mscVrSresReDestMacAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-SourceRouteEndStationMIB", "mscVrSresReProtocolPortNameIndex"))
if mibBuilder.loadTexts: mscVrSresReRowStatusEntry.setStatus('mandatory')
mscVrSresReRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresReRowStatus.setStatus('mandatory')
mscVrSresReComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresReComponentName.setStatus('mandatory')
mscVrSresReStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresReStorageType.setStatus('mandatory')
mscVrSresReDestMacAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 2, 1, 1, 10), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: mscVrSresReDestMacAddressIndex.setStatus('mandatory')
mscVrSresReProtocolPortNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 2, 1, 1, 11), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: mscVrSresReProtocolPortNameIndex.setStatus('mandatory')
mscVrSresReOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 2, 10), )
if mibBuilder.loadTexts: mscVrSresReOperTable.setStatus('mandatory')
mscVrSresReOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-SourceRouteEndStationMIB", "mscVrSresIndex"), (0, "Nortel-MsCarrier-MscPassport-SourceRouteEndStationMIB", "mscVrSresReDestMacAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-SourceRouteEndStationMIB", "mscVrSresReProtocolPortNameIndex"))
if mibBuilder.loadTexts: mscVrSresReOperEntry.setStatus('mandatory')
mscVrSresReRouteControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 2, 10, 1, 1), HexString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresReRouteControl.setStatus('mandatory')
mscVrSresReRifLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresReRifLength.setStatus('mandatory')
mscVrSresReRdDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("leftToRight", 0), ("rightToLeft", 1), ("noRif", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresReRdDirection.setStatus('mandatory')
mscVrSresReRouteDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 13, 2, 10, 1, 4), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 90))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSresReRouteDescr.setStatus('mandatory')
sourceRouteEndStationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 54, 1))
sourceRouteEndStationGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 54, 1, 1))
sourceRouteEndStationGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 54, 1, 1, 3))
sourceRouteEndStationGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 54, 1, 1, 3, 2))
sourceRouteEndStationCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 54, 3))
sourceRouteEndStationCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 54, 3, 1))
sourceRouteEndStationCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 54, 3, 1, 3))
sourceRouteEndStationCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 54, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-SourceRouteEndStationMIB", sourceRouteEndStationCapabilitiesCA02A=sourceRouteEndStationCapabilitiesCA02A, mscVrSresStateTable=mscVrSresStateTable, mscVrSresSnmpOperStatus=mscVrSresSnmpOperStatus, mscVrSresReOperEntry=mscVrSresReOperEntry, mscVrSresProvEntry=mscVrSresProvEntry, mscVrSres=mscVrSres, mscVrSresAdminControlTable=mscVrSresAdminControlTable, mscVrSresReRowStatusEntry=mscVrSresReRowStatusEntry, sourceRouteEndStationCapabilities=sourceRouteEndStationCapabilities, mscVrSresReProtocolPortNameIndex=mscVrSresReProtocolPortNameIndex, mscVrSresOperationalState=mscVrSresOperationalState, mscVrSresReRifLength=mscVrSresReRifLength, mscVrSresUsageState=mscVrSresUsageState, mscVrSresProvTable=mscVrSresProvTable, mscVrSresRowStatusTable=mscVrSresRowStatusTable, sourceRouteEndStationGroupCA02=sourceRouteEndStationGroupCA02, mscVrSresComponentName=mscVrSresComponentName, mscVrSresRe=mscVrSresRe, mscVrSresRowStatusEntry=mscVrSresRowStatusEntry, mscVrSresRowStatus=mscVrSresRowStatus, mscVrSresReRdDirection=mscVrSresReRdDirection, mscVrSresStateEntry=mscVrSresStateEntry, mscVrSresOperEntry=mscVrSresOperEntry, mscVrSresRouteTableNumEntries=mscVrSresRouteTableNumEntries, mscVrSresRtEntriesFree=mscVrSresRtEntriesFree, mscVrSresIndex=mscVrSresIndex, mscVrSresReRowStatus=mscVrSresReRowStatus, mscVrSresReOperTable=mscVrSresReOperTable, mscVrSresOperStatusEntry=mscVrSresOperStatusEntry, mscVrSresAgingTime=mscVrSresAgingTime, mscVrSresReRouteDescr=mscVrSresReRouteDescr, mscVrSresReDestMacAddressIndex=mscVrSresReDestMacAddressIndex, mscVrSresRtEntriesDenied=mscVrSresRtEntriesDenied, mscVrSresStorageType=mscVrSresStorageType, mscVrSresReStorageType=mscVrSresReStorageType, sourceRouteEndStationMIB=sourceRouteEndStationMIB, mscVrSresSnmpAdminStatus=mscVrSresSnmpAdminStatus, mscVrSresRouteDescriptorLength=mscVrSresRouteDescriptorLength, sourceRouteEndStationGroupCA=sourceRouteEndStationGroupCA, mscVrSresOperStatusTable=mscVrSresOperStatusTable, sourceRouteEndStationCapabilitiesCA02=sourceRouteEndStationCapabilitiesCA02, mscVrSresRtEntriesUsed=mscVrSresRtEntriesUsed, sourceRouteEndStationGroupCA02A=sourceRouteEndStationGroupCA02A, mscVrSresReRowStatusTable=mscVrSresReRowStatusTable, mscVrSresReRouteControl=mscVrSresReRouteControl, mscVrSresAdminControlEntry=mscVrSresAdminControlEntry, mscVrSresReComponentName=mscVrSresReComponentName, sourceRouteEndStationGroup=sourceRouteEndStationGroup, sourceRouteEndStationCapabilitiesCA=sourceRouteEndStationCapabilitiesCA, mscVrSresOperTable=mscVrSresOperTable, mscVrSresAdminState=mscVrSresAdminState)
