#
# PySNMP MIB module CISCO-GATEKEEPER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-GATEKEEPER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:41:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
CgkGatekeeperID, CgkTAddressTag, CgkNAddress, CgkNAddressTag = mibBuilder.importSymbols("CISCO-H323-TC-MIB", "CgkGatekeeperID", "CgkTAddressTag", "CgkNAddress", "CgkNAddressTag")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Unsigned32, ModuleIdentity, iso, MibIdentifier, TimeTicks, NotificationType, Gauge32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, IpAddress, ObjectIdentity, Counter64, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ModuleIdentity", "iso", "MibIdentifier", "TimeTicks", "NotificationType", "Gauge32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "IpAddress", "ObjectIdentity", "Counter64", "Bits")
RowStatus, TruthValue, TAddress, TimeStamp, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TAddress", "TimeStamp", "TextualConvention", "DisplayString")
ciscoGatekeeperMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 40))
ciscoGatekeeperMIB.setRevisions(('2007-08-29 00:00', '2007-08-28 00:00', '2003-03-13 00:00', '2002-03-12 00:00', '2001-09-20 00:00', '2001-04-09 00:00', '2000-06-26 00:00', '2000-03-10 00:00', '1998-10-09 12:00',))
if mibBuilder.loadTexts: ciscoGatekeeperMIB.setLastUpdated('200708290000Z')
if mibBuilder.loadTexts: ciscoGatekeeperMIB.setOrganization('Cisco Systems, Inc')
ciscoGatekeeperMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 40, 1))
cgkZone = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1))
cgkHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 2))
cgkGeneralConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 3))
cgkGeneralStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4))
cgkZoneStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4))
cgkRemoteZone = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 5))
cgkZoneTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 1), )
if mibBuilder.loadTexts: cgkZoneTable.setStatus('current')
cgkZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-GATEKEEPER-MIB", "cgkZoneIndex"))
if mibBuilder.loadTexts: cgkZoneEntry.setStatus('current')
cgkZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cgkZoneIndex.setStatus('current')
cgkZoneZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 1, 1, 2), CgkGatekeeperID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgkZoneZoneName.setStatus('current')
cgkZoneDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgkZoneDomain.setStatus('current')
cgkZoneRasAddressTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 1, 1, 4), CgkTAddressTag().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgkZoneRasAddressTag.setStatus('current')
cgkZoneRasAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 1, 1, 5), TAddress().clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgkZoneRasAddress.setStatus('current')
cgkZoneIrrFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(240)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgkZoneIrrFrequency.setStatus('current')
cgkZoneLocalZone = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 1, 1, 7), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgkZoneLocalZone.setStatus('current')
cgkZoneDefaultSubnetFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgkZoneDefaultSubnetFlags.setStatus('current')
cgkZoneAddressLookupFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkZoneAddressLookupFailures.setStatus('current')
cgkZoneEndpointTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkZoneEndpointTimeouts.setStatus('current')
cgkZoneOtherFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkZoneOtherFailures.setStatus('current')
cgkZoneLRQs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkZoneLRQs.setStatus('current')
cgkZoneRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 1, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgkZoneRowStatus.setStatus('current')
cgkZoneSubnetTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 2), )
if mibBuilder.loadTexts: cgkZoneSubnetTable.setStatus('current')
cgkZoneSubnetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-GATEKEEPER-MIB", "cgkZoneIndex"), (0, "CISCO-GATEKEEPER-MIB", "cgkZoneSubnetTag"), (1, "CISCO-GATEKEEPER-MIB", "cgkZoneSubnetAddress"))
if mibBuilder.loadTexts: cgkZoneSubnetEntry.setStatus('current')
cgkZoneSubnetTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 2, 1, 1), CgkNAddressTag())
if mibBuilder.loadTexts: cgkZoneSubnetTag.setStatus('current')
cgkZoneSubnetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 2, 1, 2), CgkNAddress())
if mibBuilder.loadTexts: cgkZoneSubnetAddress.setStatus('current')
cgkZoneSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 2, 1, 3), CgkNAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgkZoneSubnetMask.setStatus('current')
cgkZoneSubnetFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgkZoneSubnetFlags.setStatus('current')
cgkZoneSubnetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgkZoneSubnetRowStatus.setStatus('current')
cgkLocalZoneTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 3), )
if mibBuilder.loadTexts: cgkLocalZoneTable.setStatus('current')
cgkLocalZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-GATEKEEPER-MIB", "cgkZoneIndex"))
if mibBuilder.loadTexts: cgkLocalZoneEntry.setStatus('current')
cgkLZoneACFs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneACFs.setStatus('current')
cgkLZoneARJs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneARJs.setStatus('current')
cgkLZoneTotalBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1000000000)).clone(-1)).setUnits('100 bps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgkLZoneTotalBandwidth.setStatus('current')
cgkLZoneAllocTotalBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 3, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000000))).setUnits('100 bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneAllocTotalBandwidth.setStatus('current')
cgkLZoneInterzoneBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1000000000)).clone(-1)).setUnits('100 bps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgkLZoneInterzoneBandwidth.setStatus('current')
cgkLZoneAllocInterzoneBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 3, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000000))).setUnits('100 bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneAllocInterzoneBandwidth.setStatus('current')
cgkLZoneSessionBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 50000)).clone(-1)).setUnits('100 bps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgkLZoneSessionBandwidth.setStatus('current')
cgkLZoneProxiedCall = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgkLZoneProxiedCall.setStatus('deprecated')
cgkLZoneProxiedCallBits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 3, 1, 9), Bits().clone(namedValues=NamedValues(("inboundToTerminal", 0), ("inboundToGateway", 1), ("outboundFromTerminal", 2), ("outboundFromGateway", 3), ("inboundToMcu", 4), ("outboundFromMcu", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgkLZoneProxiedCallBits.setStatus('current')
cgkLZoneTotalConcurrentCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 3, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneTotalConcurrentCalls.setStatus('current')
cgkLocalZoneStatsAdmissionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 1), )
if mibBuilder.loadTexts: cgkLocalZoneStatsAdmissionTable.setStatus('current')
cgkLocalZoneStatsAdmissionTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-GATEKEEPER-MIB", "cgkZoneIndex"))
if mibBuilder.loadTexts: cgkLocalZoneStatsAdmissionTableEntry.setStatus('current')
cgkLZoneStatsAdmissionRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsAdmissionRequests.setStatus('current')
cgkLZoneStatsOriginAdmissionRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsOriginAdmissionRequests.setStatus('current')
cgkLZoneStatsOriginAdmissionConfirms = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsOriginAdmissionConfirms.setStatus('current')
cgkLZoneStatsOriginAdmissionRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsOriginAdmissionRejects.setStatus('current')
cgkLZoneStatsOriginTotalConcurrentCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsOriginTotalConcurrentCalls.setStatus('current')
cgkLocalZoneStatsLocationTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 2), )
if mibBuilder.loadTexts: cgkLocalZoneStatsLocationTable.setStatus('current')
cgkLocalZoneStatsLocationTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-GATEKEEPER-MIB", "cgkZoneIndex"))
if mibBuilder.loadTexts: cgkLocalZoneStatsLocationTableEntry.setStatus('current')
cgkLZoneStatsSentLocationRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsSentLocationRequests.setStatus('current')
cgkLZoneStatsRcvdLocationConfirms = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsRcvdLocationConfirms.setStatus('current')
cgkLZoneStatsSentLocationConfirms = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsSentLocationConfirms.setStatus('current')
cgkLZoneStatsRcvdLocationRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsRcvdLocationRejects.setStatus('current')
cgkLZoneStatsSentLocationRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsSentLocationRejects.setStatus('current')
cgkLocalZoneStatsRegistrationTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 3), )
if mibBuilder.loadTexts: cgkLocalZoneStatsRegistrationTable.setStatus('current')
cgkLocalZoneStatsRegistrationTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 3, 1), ).setIndexNames((0, "CISCO-GATEKEEPER-MIB", "cgkZoneIndex"))
if mibBuilder.loadTexts: cgkLocalZoneStatsRegistrationTableEntry.setStatus('current')
cgkLZoneStatsFullRegistrationRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsFullRegistrationRequests.setStatus('current')
cgkLZoneStatsLightRegistrationRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsLightRegistrationRequests.setStatus('current')
cgkLZoneStatsRegistrationConfirms = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsRegistrationConfirms.setStatus('current')
cgkLZoneStatsRegistrationRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsRegistrationRejects.setStatus('current')
cgkLZoneStatsRegisteredEndpoints = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsRegisteredEndpoints.setStatus('current')
cgkLocalZoneStatsUnRegistrationTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 4), )
if mibBuilder.loadTexts: cgkLocalZoneStatsUnRegistrationTable.setStatus('current')
cgkLocalZoneStatsUnRegistrationTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 4, 1), ).setIndexNames((0, "CISCO-GATEKEEPER-MIB", "cgkZoneIndex"))
if mibBuilder.loadTexts: cgkLocalZoneStatsUnRegistrationTableEntry.setStatus('current')
cgkLZoneStatsRcvdUnregistrationRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsRcvdUnregistrationRequests.setStatus('current')
cgkLZoneStatsSentUnregistrationRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsSentUnregistrationRequests.setStatus('current')
cgkLZoneStatsTimeoutSentUnregistrationRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsTimeoutSentUnregistrationRequests.setStatus('current')
cgkLZoneStatsRcvdUnregistrationConfirms = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsRcvdUnregistrationConfirms.setStatus('current')
cgkLZoneStatsSentUnregistrationConfirms = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsSentUnregistrationConfirms.setStatus('current')
cgkLZoneStatsRcvdUnregistrationRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsRcvdUnregistrationRejects.setStatus('current')
cgkLZoneStatsSentUnregistrationRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsSentUnregistrationRejects.setStatus('current')
cgkLocalZoneStatsDisengageTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 5), )
if mibBuilder.loadTexts: cgkLocalZoneStatsDisengageTable.setStatus('current')
cgkLocalZoneStatsDisengageTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 5, 1), ).setIndexNames((0, "CISCO-GATEKEEPER-MIB", "cgkZoneIndex"))
if mibBuilder.loadTexts: cgkLocalZoneStatsDisengageTableEntry.setStatus('current')
cgkLZoneStatsRcvdDisengageRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsRcvdDisengageRequests.setStatus('current')
cgkLZoneStatsSentDisengageRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsSentDisengageRequests.setStatus('current')
cgkLZoneStatsRcvdDisengageConfirms = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsRcvdDisengageConfirms.setStatus('current')
cgkLZoneStatsSentDisengageConfirms = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsSentDisengageConfirms.setStatus('current')
cgkLZoneStatsRcvdDisengageRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsRcvdDisengageRejects.setStatus('current')
cgkLZoneStatsSentDisengageRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 4, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkLZoneStatsSentDisengageRejects.setStatus('current')
cgkRZoneTotalBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1000000000)).clone(-1)).setUnits('100 bps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgkRZoneTotalBandwidth.setStatus('current')
cgkRZoneAllocTotalBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 1, 5, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000000))).setUnits('100 bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkRZoneAllocTotalBandwidth.setStatus('current')
cgkHistoryMaxEventEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgkHistoryMaxEventEntries.setStatus('current')
cgkHistoryEventTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 2, 2), )
if mibBuilder.loadTexts: cgkHistoryEventTable.setStatus('current')
cgkHistoryEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-GATEKEEPER-MIB", "cgkHistoryEventIndex"))
if mibBuilder.loadTexts: cgkHistoryEventEntry.setStatus('current')
cgkHistoryEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cgkHistoryEventIndex.setStatus('current')
cgkHistoryEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("register", 2), ("unregister", 3), ("unregisterForced", 4), ("overload", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkHistoryEventType.setStatus('current')
cgkHistoryEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 2, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkHistoryEventTime.setStatus('current')
cgkHistoryEventText = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 2, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkHistoryEventText.setStatus('current')
cgkHistoryEventEndpointType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("other", 2), ("gatekeeper", 3), ("gateway", 4), ("mcu", 5), ("terminal", 6), ("proxy", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkHistoryEventEndpointType.setStatus('current')
cgkHistoryEventEndpointAddrTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 2, 2, 1, 6), CgkNAddressTag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkHistoryEventEndpointAddrTag.setStatus('current')
cgkHistoryEventEndpointAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 2, 2, 1, 7), CgkNAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkHistoryEventEndpointAddress.setStatus('current')
cgkHistoryEventEndpointH323id = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 2, 2, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkHistoryEventEndpointH323id.setStatus('current')
cgkMIBEnableEventNotification = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 3, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgkMIBEnableEventNotification.setStatus('current')
cgkMIBDefaultTotalBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1000000000)).clone(-1)).setUnits('100 bps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgkMIBDefaultTotalBandwidth.setStatus('current')
cgkMIBDefaultInterzoneBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1000000000)).clone(-1)).setUnits('100 bps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgkMIBDefaultInterzoneBandwidth.setStatus('current')
cgkMIBDefaultSessionBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 50000)).clone(-1)).setUnits('100 bps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgkMIBDefaultSessionBandwidth.setStatus('current')
cgkStatsAdmissionRequests = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsAdmissionRequests.setStatus('current')
cgkStatsOriginAdmissionRequests = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsOriginAdmissionRequests.setStatus('current')
cgkStatsAdmissionConfirms = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsAdmissionConfirms.setStatus('current')
cgkStatsOriginAdmissionConfirms = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsOriginAdmissionConfirms.setStatus('current')
cgkStatsAdmissionRejects = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsAdmissionRejects.setStatus('current')
cgkStatsOriginAdmissionRejects = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsOriginAdmissionRejects.setStatus('current')
cgkStatsTotalConcurrentCalls = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsTotalConcurrentCalls.setStatus('current')
cgkStatsOriginTotalConcurrentCalls = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsOriginTotalConcurrentCalls.setStatus('current')
cgkStatsRcvdLocationRequests = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsRcvdLocationRequests.setStatus('current')
cgkStatsSentLocationRequests = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsSentLocationRequests.setStatus('current')
cgkStatsRcvdLocationConfirms = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsRcvdLocationConfirms.setStatus('current')
cgkStatsSentLocationConfirms = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsSentLocationConfirms.setStatus('current')
cgkStatsRcvdLocationRejects = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsRcvdLocationRejects.setStatus('current')
cgkStatsSentLocationRejects = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsSentLocationRejects.setStatus('current')
cgkStatsRegisteredEndpoints = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsRegisteredEndpoints.setStatus('current')
cgkStatsRcvdDisengageRequests = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsRcvdDisengageRequests.setStatus('current')
cgkStatsSentDisengageRequests = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsSentDisengageRequests.setStatus('current')
cgkStatsRcvdDisengageConfirms = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsRcvdDisengageConfirms.setStatus('current')
cgkStatsSentDisengageConfirms = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsSentDisengageConfirms.setStatus('current')
cgkStatsRcvdDisengageRejects = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsRcvdDisengageRejects.setStatus('current')
cgkStatsSentDisengageRejects = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 40, 1, 4, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgkStatsSentDisengageRejects.setStatus('current')
ciscoGatekeeperMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 40, 2))
ciscoGatekeeperMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 40, 2, 0))
ciscoGatekeeperEvent = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 40, 2, 0, 1)).setObjects(("CISCO-GATEKEEPER-MIB", "cgkHistoryEventType"), ("CISCO-GATEKEEPER-MIB", "cgkHistoryEventEndpointType"), ("CISCO-GATEKEEPER-MIB", "cgkHistoryEventEndpointAddrTag"), ("CISCO-GATEKEEPER-MIB", "cgkHistoryEventEndpointAddress"), ("CISCO-GATEKEEPER-MIB", "cgkHistoryEventEndpointH323id"))
if mibBuilder.loadTexts: ciscoGatekeeperEvent.setStatus('current')
ciscoGatekeeperMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 40, 3))
ciscoGatekeeperMIBCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 1))
ciscoGatekeeperMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 2))
cgkGatekeeperCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 1, 1)).setObjects(("CISCO-GATEKEEPER-MIB", "cgkZoneGroup"), ("CISCO-GATEKEEPER-MIB", "cgkZoneSubnetGroup"), ("CISCO-GATEKEEPER-MIB", "cgkLocalZoneGroup"), ("CISCO-GATEKEEPER-MIB", "cgkHistoryEventGroup"), ("CISCO-GATEKEEPER-MIB", "cgkGeneralGroup"), ("CISCO-GATEKEEPER-MIB", "cgkNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cgkGatekeeperCompliance = cgkGatekeeperCompliance.setStatus('deprecated')
cgkGatekeeperComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 1, 2)).setObjects(("CISCO-GATEKEEPER-MIB", "cgkZoneGroup"), ("CISCO-GATEKEEPER-MIB", "cgkZoneSubnetGroup"), ("CISCO-GATEKEEPER-MIB", "cgkLocalZoneGroupRev1"), ("CISCO-GATEKEEPER-MIB", "cgkHistoryEventGroup"), ("CISCO-GATEKEEPER-MIB", "cgkGeneralGroup"), ("CISCO-GATEKEEPER-MIB", "cgkNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cgkGatekeeperComplianceRev1 = cgkGatekeeperComplianceRev1.setStatus('deprecated')
cgkGatekeeperComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 1, 3)).setObjects(("CISCO-GATEKEEPER-MIB", "cgkZoneGroup"), ("CISCO-GATEKEEPER-MIB", "cgkZoneSubnetGroup"), ("CISCO-GATEKEEPER-MIB", "cgkLocalZoneGroupRev2"), ("CISCO-GATEKEEPER-MIB", "cgkHistoryEventGroup"), ("CISCO-GATEKEEPER-MIB", "cgkGeneralGroup"), ("CISCO-GATEKEEPER-MIB", "cgkNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cgkGatekeeperComplianceRev2 = cgkGatekeeperComplianceRev2.setStatus('deprecated')
cgkGatekeeperComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 1, 4)).setObjects(("CISCO-GATEKEEPER-MIB", "cgkZoneGroup"), ("CISCO-GATEKEEPER-MIB", "cgkZoneSubnetGroup"), ("CISCO-GATEKEEPER-MIB", "cgkLocalZoneGroupRev2"), ("CISCO-GATEKEEPER-MIB", "cgkHistoryEventGroup"), ("CISCO-GATEKEEPER-MIB", "cgkGeneralGroup"), ("CISCO-GATEKEEPER-MIB", "cgkZoneMgmtStatsGroup"), ("CISCO-GATEKEEPER-MIB", "cgkGeneralMgmtStatsGroup"), ("CISCO-GATEKEEPER-MIB", "cgkNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cgkGatekeeperComplianceRev3 = cgkGatekeeperComplianceRev3.setStatus('deprecated')
cgkGatekeeperComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 1, 5)).setObjects(("CISCO-GATEKEEPER-MIB", "cgkZoneGroup"), ("CISCO-GATEKEEPER-MIB", "cgkZoneSubnetGroup"), ("CISCO-GATEKEEPER-MIB", "cgkLocalZoneGroupRev2"), ("CISCO-GATEKEEPER-MIB", "cgkHistoryEventGroup"), ("CISCO-GATEKEEPER-MIB", "cgkGeneralGroup"), ("CISCO-GATEKEEPER-MIB", "cgkZoneMgmtStatsGroup"), ("CISCO-GATEKEEPER-MIB", "cgkGeneralMgmtStatsGroup"), ("CISCO-GATEKEEPER-MIB", "cgkNotificationsGroup"), ("CISCO-GATEKEEPER-MIB", "cgkRemoteZoneGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cgkGatekeeperComplianceRev4 = cgkGatekeeperComplianceRev4.setStatus('current')
cgkZoneGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 2, 1)).setObjects(("CISCO-GATEKEEPER-MIB", "cgkZoneZoneName"), ("CISCO-GATEKEEPER-MIB", "cgkZoneDomain"), ("CISCO-GATEKEEPER-MIB", "cgkZoneRasAddressTag"), ("CISCO-GATEKEEPER-MIB", "cgkZoneRasAddress"), ("CISCO-GATEKEEPER-MIB", "cgkZoneIrrFrequency"), ("CISCO-GATEKEEPER-MIB", "cgkZoneLocalZone"), ("CISCO-GATEKEEPER-MIB", "cgkZoneDefaultSubnetFlags"), ("CISCO-GATEKEEPER-MIB", "cgkZoneAddressLookupFailures"), ("CISCO-GATEKEEPER-MIB", "cgkZoneEndpointTimeouts"), ("CISCO-GATEKEEPER-MIB", "cgkZoneOtherFailures"), ("CISCO-GATEKEEPER-MIB", "cgkZoneLRQs"), ("CISCO-GATEKEEPER-MIB", "cgkZoneRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cgkZoneGroup = cgkZoneGroup.setStatus('current')
cgkZoneSubnetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 2, 2)).setObjects(("CISCO-GATEKEEPER-MIB", "cgkZoneSubnetMask"), ("CISCO-GATEKEEPER-MIB", "cgkZoneSubnetFlags"), ("CISCO-GATEKEEPER-MIB", "cgkZoneSubnetRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cgkZoneSubnetGroup = cgkZoneSubnetGroup.setStatus('current')
cgkLocalZoneGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 2, 3)).setObjects(("CISCO-GATEKEEPER-MIB", "cgkLZoneACFs"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneARJs"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneTotalBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneAllocTotalBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneInterzoneBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneAllocInterzoneBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneSessionBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneProxiedCall"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cgkLocalZoneGroup = cgkLocalZoneGroup.setStatus('deprecated')
cgkHistoryEventGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 2, 4)).setObjects(("CISCO-GATEKEEPER-MIB", "cgkHistoryMaxEventEntries"), ("CISCO-GATEKEEPER-MIB", "cgkHistoryEventType"), ("CISCO-GATEKEEPER-MIB", "cgkHistoryEventTime"), ("CISCO-GATEKEEPER-MIB", "cgkHistoryEventText"), ("CISCO-GATEKEEPER-MIB", "cgkHistoryEventEndpointType"), ("CISCO-GATEKEEPER-MIB", "cgkHistoryEventEndpointAddress"), ("CISCO-GATEKEEPER-MIB", "cgkHistoryEventEndpointAddrTag"), ("CISCO-GATEKEEPER-MIB", "cgkHistoryEventEndpointH323id"), ("CISCO-GATEKEEPER-MIB", "cgkMIBEnableEventNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cgkHistoryEventGroup = cgkHistoryEventGroup.setStatus('current')
cgkGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 2, 5)).setObjects(("CISCO-GATEKEEPER-MIB", "cgkMIBDefaultTotalBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkMIBDefaultInterzoneBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkMIBDefaultSessionBandwidth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cgkGeneralGroup = cgkGeneralGroup.setStatus('current')
cgkNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 2, 6)).setObjects(("CISCO-GATEKEEPER-MIB", "ciscoGatekeeperEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cgkNotificationsGroup = cgkNotificationsGroup.setStatus('current')
cgkLocalZoneGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 2, 7)).setObjects(("CISCO-GATEKEEPER-MIB", "cgkLZoneACFs"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneARJs"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneTotalBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneAllocTotalBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneInterzoneBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneAllocInterzoneBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneSessionBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneProxiedCall"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneProxiedCallBits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cgkLocalZoneGroupRev1 = cgkLocalZoneGroupRev1.setStatus('deprecated')
cgkLocalZoneGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 2, 8)).setObjects(("CISCO-GATEKEEPER-MIB", "cgkLZoneACFs"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneARJs"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneTotalBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneAllocTotalBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneInterzoneBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneAllocInterzoneBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneSessionBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneProxiedCallBits"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneTotalConcurrentCalls"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cgkLocalZoneGroupRev2 = cgkLocalZoneGroupRev2.setStatus('current')
cgkZoneMgmtStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 2, 9)).setObjects(("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsAdmissionRequests"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsOriginAdmissionRequests"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsOriginAdmissionConfirms"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsOriginAdmissionRejects"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsOriginTotalConcurrentCalls"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsSentLocationRequests"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsRcvdLocationConfirms"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsSentLocationConfirms"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsRcvdLocationRejects"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsSentLocationRejects"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsFullRegistrationRequests"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsLightRegistrationRequests"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsRegistrationConfirms"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsRegistrationRejects"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsRegisteredEndpoints"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsRcvdUnregistrationRequests"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsSentUnregistrationRequests"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsTimeoutSentUnregistrationRequests"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsRcvdUnregistrationConfirms"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsSentUnregistrationConfirms"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsRcvdUnregistrationRejects"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsSentUnregistrationRejects"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsRcvdDisengageRequests"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsSentDisengageRequests"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsRcvdDisengageConfirms"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsSentDisengageConfirms"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsRcvdDisengageRejects"), ("CISCO-GATEKEEPER-MIB", "cgkLZoneStatsSentDisengageRejects"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cgkZoneMgmtStatsGroup = cgkZoneMgmtStatsGroup.setStatus('current')
cgkGeneralMgmtStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 2, 10)).setObjects(("CISCO-GATEKEEPER-MIB", "cgkStatsAdmissionRequests"), ("CISCO-GATEKEEPER-MIB", "cgkStatsOriginAdmissionRequests"), ("CISCO-GATEKEEPER-MIB", "cgkStatsAdmissionConfirms"), ("CISCO-GATEKEEPER-MIB", "cgkStatsOriginAdmissionConfirms"), ("CISCO-GATEKEEPER-MIB", "cgkStatsAdmissionRejects"), ("CISCO-GATEKEEPER-MIB", "cgkStatsOriginAdmissionRejects"), ("CISCO-GATEKEEPER-MIB", "cgkStatsTotalConcurrentCalls"), ("CISCO-GATEKEEPER-MIB", "cgkStatsOriginTotalConcurrentCalls"), ("CISCO-GATEKEEPER-MIB", "cgkStatsRcvdLocationRequests"), ("CISCO-GATEKEEPER-MIB", "cgkStatsSentLocationRequests"), ("CISCO-GATEKEEPER-MIB", "cgkStatsRcvdLocationConfirms"), ("CISCO-GATEKEEPER-MIB", "cgkStatsSentLocationConfirms"), ("CISCO-GATEKEEPER-MIB", "cgkStatsRcvdLocationRejects"), ("CISCO-GATEKEEPER-MIB", "cgkStatsSentLocationRejects"), ("CISCO-GATEKEEPER-MIB", "cgkStatsRegisteredEndpoints"), ("CISCO-GATEKEEPER-MIB", "cgkStatsRcvdDisengageRequests"), ("CISCO-GATEKEEPER-MIB", "cgkStatsSentDisengageRequests"), ("CISCO-GATEKEEPER-MIB", "cgkStatsRcvdDisengageConfirms"), ("CISCO-GATEKEEPER-MIB", "cgkStatsSentDisengageConfirms"), ("CISCO-GATEKEEPER-MIB", "cgkStatsRcvdDisengageRejects"), ("CISCO-GATEKEEPER-MIB", "cgkStatsSentDisengageRejects"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cgkGeneralMgmtStatsGroup = cgkGeneralMgmtStatsGroup.setStatus('current')
cgkRemoteZoneGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 40, 3, 2, 11)).setObjects(("CISCO-GATEKEEPER-MIB", "cgkRZoneTotalBandwidth"), ("CISCO-GATEKEEPER-MIB", "cgkRZoneAllocTotalBandwidth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cgkRemoteZoneGroup = cgkRemoteZoneGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-GATEKEEPER-MIB", cgkZoneSubnetMask=cgkZoneSubnetMask, cgkZoneDomain=cgkZoneDomain, cgkLZoneStatsRcvdUnregistrationRequests=cgkLZoneStatsRcvdUnregistrationRequests, cgkLZoneStatsOriginAdmissionRejects=cgkLZoneStatsOriginAdmissionRejects, cgkLocalZoneStatsLocationTableEntry=cgkLocalZoneStatsLocationTableEntry, cgkHistory=cgkHistory, cgkZoneEntry=cgkZoneEntry, cgkRZoneAllocTotalBandwidth=cgkRZoneAllocTotalBandwidth, cgkLZoneInterzoneBandwidth=cgkLZoneInterzoneBandwidth, cgkLocalZoneStatsRegistrationTableEntry=cgkLocalZoneStatsRegistrationTableEntry, ciscoGatekeeperMIBGroups=ciscoGatekeeperMIBGroups, cgkLocalZoneGroup=cgkLocalZoneGroup, cgkGatekeeperComplianceRev3=cgkGatekeeperComplianceRev3, cgkLZoneACFs=cgkLZoneACFs, ciscoGatekeeperMIB=ciscoGatekeeperMIB, cgkStatsTotalConcurrentCalls=cgkStatsTotalConcurrentCalls, cgkStatsSentLocationRequests=cgkStatsSentLocationRequests, cgkHistoryMaxEventEntries=cgkHistoryMaxEventEntries, cgkLZoneStatsRegisteredEndpoints=cgkLZoneStatsRegisteredEndpoints, cgkStatsRcvdLocationConfirms=cgkStatsRcvdLocationConfirms, cgkLZoneStatsRcvdDisengageRequests=cgkLZoneStatsRcvdDisengageRequests, cgkLZoneStatsFullRegistrationRequests=cgkLZoneStatsFullRegistrationRequests, cgkHistoryEventEndpointAddress=cgkHistoryEventEndpointAddress, cgkLZoneStatsOriginAdmissionConfirms=cgkLZoneStatsOriginAdmissionConfirms, cgkStatsAdmissionConfirms=cgkStatsAdmissionConfirms, cgkLZoneStatsSentDisengageConfirms=cgkLZoneStatsSentDisengageConfirms, cgkLocalZoneStatsLocationTable=cgkLocalZoneStatsLocationTable, ciscoGatekeeperMIBConformance=ciscoGatekeeperMIBConformance, cgkZone=cgkZone, cgkLZoneStatsOriginAdmissionRequests=cgkLZoneStatsOriginAdmissionRequests, cgkHistoryEventEntry=cgkHistoryEventEntry, cgkLZoneStatsSentLocationConfirms=cgkLZoneStatsSentLocationConfirms, cgkStatsRcvdDisengageRejects=cgkStatsRcvdDisengageRejects, cgkLocalZoneGroupRev1=cgkLocalZoneGroupRev1, cgkLocalZoneGroupRev2=cgkLocalZoneGroupRev2, ciscoGatekeeperMIBCompliance=ciscoGatekeeperMIBCompliance, cgkZoneSubnetEntry=cgkZoneSubnetEntry, cgkZoneSubnetFlags=cgkZoneSubnetFlags, cgkLZoneAllocTotalBandwidth=cgkLZoneAllocTotalBandwidth, cgkStatsOriginAdmissionRequests=cgkStatsOriginAdmissionRequests, cgkRemoteZone=cgkRemoteZone, cgkRemoteZoneGroup=cgkRemoteZoneGroup, cgkStatsAdmissionRequests=cgkStatsAdmissionRequests, cgkStatsSentDisengageRequests=cgkStatsSentDisengageRequests, cgkGatekeeperComplianceRev4=cgkGatekeeperComplianceRev4, cgkHistoryEventType=cgkHistoryEventType, cgkLocalZoneStatsDisengageTableEntry=cgkLocalZoneStatsDisengageTableEntry, cgkStatsRcvdLocationRejects=cgkStatsRcvdLocationRejects, cgkMIBDefaultTotalBandwidth=cgkMIBDefaultTotalBandwidth, cgkZoneLRQs=cgkZoneLRQs, cgkLZoneTotalConcurrentCalls=cgkLZoneTotalConcurrentCalls, cgkHistoryEventEndpointType=cgkHistoryEventEndpointType, cgkHistoryEventIndex=cgkHistoryEventIndex, cgkLZoneARJs=cgkLZoneARJs, cgkZoneRasAddressTag=cgkZoneRasAddressTag, cgkLZoneStatsSentUnregistrationRequests=cgkLZoneStatsSentUnregistrationRequests, cgkLZoneAllocInterzoneBandwidth=cgkLZoneAllocInterzoneBandwidth, cgkHistoryEventGroup=cgkHistoryEventGroup, cgkStatsSentLocationConfirms=cgkStatsSentLocationConfirms, cgkStatsOriginAdmissionConfirms=cgkStatsOriginAdmissionConfirms, cgkZoneSubnetTag=cgkZoneSubnetTag, cgkZoneTable=cgkZoneTable, cgkLocalZoneStatsDisengageTable=cgkLocalZoneStatsDisengageTable, cgkZoneAddressLookupFailures=cgkZoneAddressLookupFailures, cgkZoneZoneName=cgkZoneZoneName, cgkHistoryEventTable=cgkHistoryEventTable, cgkLZoneStatsSentUnregistrationConfirms=cgkLZoneStatsSentUnregistrationConfirms, cgkStatsRegisteredEndpoints=cgkStatsRegisteredEndpoints, cgkLZoneStatsOriginTotalConcurrentCalls=cgkLZoneStatsOriginTotalConcurrentCalls, cgkStatsRcvdLocationRequests=cgkStatsRcvdLocationRequests, cgkZoneSubnetTable=cgkZoneSubnetTable, cgkLZoneStatsSentLocationRequests=cgkLZoneStatsSentLocationRequests, cgkLZoneStatsRegistrationConfirms=cgkLZoneStatsRegistrationConfirms, cgkStatsSentLocationRejects=cgkStatsSentLocationRejects, cgkZoneIndex=cgkZoneIndex, cgkHistoryEventTime=cgkHistoryEventTime, cgkLocalZoneStatsUnRegistrationTableEntry=cgkLocalZoneStatsUnRegistrationTableEntry, cgkStatsAdmissionRejects=cgkStatsAdmissionRejects, cgkLocalZoneTable=cgkLocalZoneTable, cgkHistoryEventEndpointAddrTag=cgkHistoryEventEndpointAddrTag, cgkZoneEndpointTimeouts=cgkZoneEndpointTimeouts, cgkMIBEnableEventNotification=cgkMIBEnableEventNotification, cgkGeneralGroup=cgkGeneralGroup, cgkLZoneStatsLightRegistrationRequests=cgkLZoneStatsLightRegistrationRequests, cgkZoneLocalZone=cgkZoneLocalZone, cgkLocalZoneStatsAdmissionTable=cgkLocalZoneStatsAdmissionTable, cgkLZoneProxiedCall=cgkLZoneProxiedCall, PYSNMP_MODULE_ID=ciscoGatekeeperMIB, cgkHistoryEventEndpointH323id=cgkHistoryEventEndpointH323id, cgkLZoneStatsRcvdUnregistrationRejects=cgkLZoneStatsRcvdUnregistrationRejects, cgkZoneOtherFailures=cgkZoneOtherFailures, cgkZoneGroup=cgkZoneGroup, cgkZoneRasAddress=cgkZoneRasAddress, cgkLZoneTotalBandwidth=cgkLZoneTotalBandwidth, cgkGeneralMgmtStatsGroup=cgkGeneralMgmtStatsGroup, cgkGeneralStats=cgkGeneralStats, cgkStatsRcvdDisengageConfirms=cgkStatsRcvdDisengageConfirms, cgkStatsSentDisengageRejects=cgkStatsSentDisengageRejects, ciscoGatekeeperEvent=ciscoGatekeeperEvent, cgkStatsRcvdDisengageRequests=cgkStatsRcvdDisengageRequests, ciscoGatekeeperMIBNotificationPrefix=ciscoGatekeeperMIBNotificationPrefix, cgkLZoneStatsRcvdLocationConfirms=cgkLZoneStatsRcvdLocationConfirms, cgkZoneDefaultSubnetFlags=cgkZoneDefaultSubnetFlags, cgkZoneSubnetGroup=cgkZoneSubnetGroup, cgkLZoneStatsSentLocationRejects=cgkLZoneStatsSentLocationRejects, cgkLocalZoneEntry=cgkLocalZoneEntry, cgkLZoneStatsAdmissionRequests=cgkLZoneStatsAdmissionRequests, cgkZoneStats=cgkZoneStats, cgkGeneralConfig=cgkGeneralConfig, cgkLZoneStatsRcvdLocationRejects=cgkLZoneStatsRcvdLocationRejects, cgkLocalZoneStatsUnRegistrationTable=cgkLocalZoneStatsUnRegistrationTable, cgkStatsOriginAdmissionRejects=cgkStatsOriginAdmissionRejects, cgkLocalZoneStatsRegistrationTable=cgkLocalZoneStatsRegistrationTable, cgkZoneMgmtStatsGroup=cgkZoneMgmtStatsGroup, cgkMIBDefaultInterzoneBandwidth=cgkMIBDefaultInterzoneBandwidth, cgkStatsSentDisengageConfirms=cgkStatsSentDisengageConfirms, cgkGatekeeperComplianceRev1=cgkGatekeeperComplianceRev1, cgkLZoneProxiedCallBits=cgkLZoneProxiedCallBits, cgkHistoryEventText=cgkHistoryEventText, cgkGatekeeperComplianceRev2=cgkGatekeeperComplianceRev2, cgkZoneRowStatus=cgkZoneRowStatus, cgkLZoneStatsRcvdDisengageRejects=cgkLZoneStatsRcvdDisengageRejects, cgkStatsOriginTotalConcurrentCalls=cgkStatsOriginTotalConcurrentCalls, cgkLZoneStatsTimeoutSentUnregistrationRequests=cgkLZoneStatsTimeoutSentUnregistrationRequests, cgkLZoneStatsSentUnregistrationRejects=cgkLZoneStatsSentUnregistrationRejects, cgkLZoneStatsRegistrationRejects=cgkLZoneStatsRegistrationRejects, cgkLZoneStatsRcvdDisengageConfirms=cgkLZoneStatsRcvdDisengageConfirms, cgkZoneIrrFrequency=cgkZoneIrrFrequency, cgkLocalZoneStatsAdmissionTableEntry=cgkLocalZoneStatsAdmissionTableEntry, cgkZoneSubnetRowStatus=cgkZoneSubnetRowStatus, ciscoGatekeeperMIBNotifications=ciscoGatekeeperMIBNotifications, ciscoGatekeeperMIBObjects=ciscoGatekeeperMIBObjects, cgkLZoneStatsSentDisengageRequests=cgkLZoneStatsSentDisengageRequests, cgkLZoneSessionBandwidth=cgkLZoneSessionBandwidth, cgkLZoneStatsSentDisengageRejects=cgkLZoneStatsSentDisengageRejects, cgkLZoneStatsRcvdUnregistrationConfirms=cgkLZoneStatsRcvdUnregistrationConfirms, cgkGatekeeperCompliance=cgkGatekeeperCompliance, cgkRZoneTotalBandwidth=cgkRZoneTotalBandwidth, cgkMIBDefaultSessionBandwidth=cgkMIBDefaultSessionBandwidth, cgkZoneSubnetAddress=cgkZoneSubnetAddress, cgkNotificationsGroup=cgkNotificationsGroup)
