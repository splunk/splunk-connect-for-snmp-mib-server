#
# PySNMP MIB module HOST-RESOURCES-V2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HOST-RESOURCES-V2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:20:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier, ModuleIdentity, Counter64, Gauge32, Unsigned32, Integer32, iso, NotificationType, TimeTicks, Bits, mib_2, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier", "ModuleIdentity", "Counter64", "Gauge32", "Unsigned32", "Integer32", "iso", "NotificationType", "TimeTicks", "Bits", "mib-2", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hostResourcesMibModule = ModuleIdentity((1, 3, 6, 1, 2, 1, 25))
hostResourcesMibModule.setRevisions(('1998-03-07 16:00',))
if mibBuilder.loadTexts: hostResourcesMibModule.setLastUpdated('9803071600Z')
if mibBuilder.loadTexts: hostResourcesMibModule.setOrganization('IETF Host Resources MIB Working Group')
host = MibIdentifier((1, 3, 6, 1, 2, 1, 25))
hrSystem = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 1))
hrStorage = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 2))
hrDevice = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3))
hrSWRun = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 4))
hrSWRunPerf = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 5))
hrSWInstalled = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 6))
hrConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 7))
class Boolean(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("true", 1), ("false", 2))

class KBytes(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class ProductID(ObjectIdentifier):
    pass

class DateAndTime(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(8, 8), ValueSizeConstraint(11, 11), )
class InternationalDisplayString(OctetString):
    pass

hrSystemUptime = MibScalar((1, 3, 6, 1, 2, 1, 25, 1, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSystemUptime.setStatus('current')
hrSystemDate = MibScalar((1, 3, 6, 1, 2, 1, 25, 1, 2), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hrSystemDate.setStatus('current')
hrSystemInitialLoadDevice = MibScalar((1, 3, 6, 1, 2, 1, 25, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hrSystemInitialLoadDevice.setStatus('current')
hrSystemInitialLoadParameters = MibScalar((1, 3, 6, 1, 2, 1, 25, 1, 4), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hrSystemInitialLoadParameters.setStatus('current')
hrSystemNumUsers = MibScalar((1, 3, 6, 1, 2, 1, 25, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSystemNumUsers.setStatus('current')
hrSystemProcesses = MibScalar((1, 3, 6, 1, 2, 1, 25, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSystemProcesses.setStatus('current')
hrSystemMaxProcesses = MibScalar((1, 3, 6, 1, 2, 1, 25, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSystemMaxProcesses.setStatus('current')
hrStorageTypes = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 2, 1))
hrStorageOther = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 2, 1, 1))
hrStorageRam = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 2, 1, 2))
hrStorageVirtualMemory = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 2, 1, 3))
hrStorageFixedDisk = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 2, 1, 4))
hrStorageRemovableDisk = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 2, 1, 5))
hrStorageFloppyDisk = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 2, 1, 6))
hrStorageCompactDisc = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 2, 1, 7))
hrStorageRamDisk = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 2, 1, 8))
hrMemorySize = MibScalar((1, 3, 6, 1, 2, 1, 25, 2, 2), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrMemorySize.setStatus('current')
hrStorageTable = MibTable((1, 3, 6, 1, 2, 1, 25, 2, 3), )
if mibBuilder.loadTexts: hrStorageTable.setStatus('current')
hrStorageEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 2, 3, 1), ).setIndexNames((0, "HOST-RESOURCES-V2-MIB", "hrStorageIndex"))
if mibBuilder.loadTexts: hrStorageEntry.setStatus('current')
hrStorageIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrStorageIndex.setStatus('current')
hrStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrStorageType.setStatus('current')
hrStorageDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrStorageDescr.setStatus('current')
hrStorageAllocationUnits = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrStorageAllocationUnits.setStatus('current')
hrStorageSize = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hrStorageSize.setStatus('current')
hrStorageUsed = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrStorageUsed.setStatus('current')
hrStorageAllocationFailures = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrStorageAllocationFailures.setStatus('current')
hrDeviceTypes = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1))
hrDeviceOther = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 1))
hrDeviceUnknown = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 2))
hrDeviceProcessor = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 3))
hrDeviceNetwork = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 4))
hrDevicePrinter = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 5))
hrDeviceDiskStorage = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 6))
hrDeviceVideo = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 10))
hrDeviceAudio = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 11))
hrDeviceCoprocessor = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 12))
hrDeviceKeyboard = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 13))
hrDeviceModem = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 14))
hrDeviceParallelPort = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 15))
hrDevicePointing = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 16))
hrDeviceSerialPort = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 17))
hrDeviceTape = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 18))
hrDeviceClock = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 19))
hrDeviceVolatileMemory = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 20))
hrDeviceNonVolatileMemory = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1, 21))
hrDeviceTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 2), )
if mibBuilder.loadTexts: hrDeviceTable.setStatus('current')
hrDeviceEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 2, 1), ).setIndexNames((0, "HOST-RESOURCES-V2-MIB", "hrDeviceIndex"))
if mibBuilder.loadTexts: hrDeviceEntry.setStatus('current')
hrDeviceIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDeviceIndex.setStatus('current')
hrDeviceType = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDeviceType.setStatus('current')
hrDeviceDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDeviceDescr.setStatus('current')
hrDeviceID = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 4), ProductID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDeviceID.setStatus('current')
hrDeviceStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("running", 2), ("warning", 3), ("testing", 4), ("down", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDeviceStatus.setStatus('current')
hrDeviceErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDeviceErrors.setStatus('current')
hrProcessorTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 3), )
if mibBuilder.loadTexts: hrProcessorTable.setStatus('current')
hrProcessorEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 3, 1), ).setIndexNames((0, "HOST-RESOURCES-V2-MIB", "hrDeviceIndex"))
if mibBuilder.loadTexts: hrProcessorEntry.setStatus('current')
hrProcessorFrwID = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 3, 1, 1), ProductID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrProcessorFrwID.setStatus('current')
hrProcessorLoad = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrProcessorLoad.setStatus('current')
hrNetworkTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 4), )
if mibBuilder.loadTexts: hrNetworkTable.setStatus('current')
hrNetworkEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 4, 1), ).setIndexNames((0, "HOST-RESOURCES-V2-MIB", "hrDeviceIndex"))
if mibBuilder.loadTexts: hrNetworkEntry.setStatus('current')
hrNetworkIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrNetworkIfIndex.setStatus('current')
hrPrinterTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 5), )
if mibBuilder.loadTexts: hrPrinterTable.setStatus('current')
hrPrinterEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 5, 1), ).setIndexNames((0, "HOST-RESOURCES-V2-MIB", "hrDeviceIndex"))
if mibBuilder.loadTexts: hrPrinterEntry.setStatus('current')
hrPrinterStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("idle", 3), ("printing", 4), ("warmup", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrPrinterStatus.setStatus('current')
hrPrinterDetectedErrorState = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 5, 1, 2), Bits().clone(namedValues=NamedValues(("lowPaper", 0), ("noPaper", 1), ("lowToner", 2), ("noToner", 3), ("doorOpen", 4), ("jammed", 5), ("offline", 6), ("serviceRequested", 7), ("inputTrayMissing", 8), ("outputTrayMissing", 9), ("markerSupplyMissing", 10), ("outputNearFull", 11), ("outputFull", 12), ("inputTrayEmpty", 13), ("overduePreventMaint", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrPrinterDetectedErrorState.setStatus('current')
hrDiskStorageTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 6), )
if mibBuilder.loadTexts: hrDiskStorageTable.setStatus('current')
hrDiskStorageEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 6, 1), ).setIndexNames((0, "HOST-RESOURCES-V2-MIB", "hrDeviceIndex"))
if mibBuilder.loadTexts: hrDiskStorageEntry.setStatus('current')
hrDiskStorageAccess = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("readWrite", 1), ("readOnly", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDiskStorageAccess.setStatus('current')
hrDiskStorageMedia = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("hardDisk", 3), ("floppyDisk", 4), ("opticalDiskROM", 5), ("opticalDiskWORM", 6), ("opticalDiskRW", 7), ("ramDisk", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDiskStorageMedia.setStatus('current')
hrDiskStorageRemoveble = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 6, 1, 3), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDiskStorageRemoveble.setStatus('current')
hrDiskStorageCapacity = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 6, 1, 4), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDiskStorageCapacity.setStatus('current')
hrPartitionTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 7), )
if mibBuilder.loadTexts: hrPartitionTable.setStatus('current')
hrPartitionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 7, 1), ).setIndexNames((0, "HOST-RESOURCES-V2-MIB", "hrDeviceIndex"), (0, "HOST-RESOURCES-V2-MIB", "hrPartitionIndex"))
if mibBuilder.loadTexts: hrPartitionEntry.setStatus('current')
hrPartitionIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrPartitionIndex.setStatus('current')
hrPartitionLabel = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 2), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrPartitionLabel.setStatus('current')
hrPartitionID = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrPartitionID.setStatus('current')
hrPartitionSize = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 4), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrPartitionSize.setStatus('current')
hrPartitionFSIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrPartitionFSIndex.setStatus('current')
hrFSTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 8), )
if mibBuilder.loadTexts: hrFSTable.setStatus('current')
hrFSEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 8, 1), ).setIndexNames((0, "HOST-RESOURCES-V2-MIB", "hrFSIndex"))
if mibBuilder.loadTexts: hrFSEntry.setStatus('current')
hrFSTypes = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9))
hrFSOther = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 1))
hrFSUnknown = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 2))
hrFSBerkeleyFFS = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 3))
hrFSSys5FS = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 4))
hrFSFat = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 5))
hrFSHPFS = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 6))
hrFSHFS = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 7))
hrFSMFS = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 8))
hrFSNTFS = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 9))
hrFSVNode = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 10))
hrFSJournaled = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 11))
hrFSiso9660 = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 12))
hrFSRockRidge = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 13))
hrFSNFS = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 14))
hrFSNetware = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 15))
hrFSAFS = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 16))
hrFSDFS = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 17))
hrFSAppleshare = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 18))
hrFSRFS = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 19))
hrFSDGCFS = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 20))
hrFSBFS = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9, 21))
hrFSIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrFSIndex.setStatus('current')
hrFSMountPoint = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 2), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrFSMountPoint.setStatus('current')
hrFSRemoteMountPoint = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 3), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrFSRemoteMountPoint.setStatus('current')
hrFSType = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 4), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrFSType.setStatus('current')
hrFSAccess = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("readWrite", 1), ("readOnly", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrFSAccess.setStatus('current')
hrFSBootable = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 6), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrFSBootable.setStatus('current')
hrFSStorageIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrFSStorageIndex.setStatus('current')
hrFSLastFullBackupDate = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 8), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hrFSLastFullBackupDate.setStatus('current')
hrFSLastPartialBackupDate = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 9), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hrFSLastPartialBackupDate.setStatus('current')
hrSWOSIndex = MibScalar((1, 3, 6, 1, 2, 1, 25, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWOSIndex.setStatus('current')
hrSWRunTable = MibTable((1, 3, 6, 1, 2, 1, 25, 4, 2), )
if mibBuilder.loadTexts: hrSWRunTable.setStatus('current')
hrSWRunEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 4, 2, 1), ).setIndexNames((0, "HOST-RESOURCES-V2-MIB", "hrSWRunIndex"))
if mibBuilder.loadTexts: hrSWRunEntry.setStatus('current')
hrSWRunIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWRunIndex.setStatus('current')
hrSWRunName = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 2), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWRunName.setStatus('current')
hrSWRunID = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 3), ProductID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWRunID.setStatus('current')
hrSWRunPath = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 4), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWRunPath.setStatus('current')
hrSWRunParameters = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 5), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWRunParameters.setStatus('current')
hrSWRunType = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("operatingSystem", 2), ("deviceDriver", 3), ("application", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWRunType.setStatus('current')
hrSWRunStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("running", 1), ("runnable", 2), ("notRunnable", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hrSWRunStatus.setStatus('current')
hrSWRunPerfTable = MibTable((1, 3, 6, 1, 2, 1, 25, 5, 1), )
if mibBuilder.loadTexts: hrSWRunPerfTable.setStatus('current')
hrSWRunPerfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 5, 1, 1), ).setIndexNames((0, "HOST-RESOURCES-V2-MIB", "hrSWRunIndex"))
if mibBuilder.loadTexts: hrSWRunPerfEntry.setStatus('current')
hrSWRunPerfCPU = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWRunPerfCPU.setStatus('current')
hrSWRunPerfMem = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 5, 1, 1, 2), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWRunPerfMem.setStatus('current')
hrSWInstalledLastChange = MibScalar((1, 3, 6, 1, 2, 1, 25, 6, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWInstalledLastChange.setStatus('current')
hrSWInstalledLastUpdateTime = MibScalar((1, 3, 6, 1, 2, 1, 25, 6, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWInstalledLastUpdateTime.setStatus('current')
hrSWInstalledTable = MibTable((1, 3, 6, 1, 2, 1, 25, 6, 3), )
if mibBuilder.loadTexts: hrSWInstalledTable.setStatus('current')
hrSWInstalledEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 6, 3, 1), ).setIndexNames((0, "HOST-RESOURCES-V2-MIB", "hrSWInstalledIndex"))
if mibBuilder.loadTexts: hrSWInstalledEntry.setStatus('current')
hrSWInstalledIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWInstalledIndex.setStatus('current')
hrSWInstalledName = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 2), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWInstalledName.setStatus('current')
hrSWInstalledID = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 3), ProductID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWInstalledID.setStatus('current')
hrSWInstalledType = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("operatingSystem", 2), ("deviceDriver", 3), ("application", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWInstalledType.setStatus('current')
hrSWInstalledDate = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWInstalledDate.setStatus('current')
hrMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 7, 1))
hrMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 7, 2))
hrMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 25, 7, 1, 1)).setObjects(("HOST-RESOURCES-V2-MIB", "hrSystemGroup"), ("HOST-RESOURCES-V2-MIB", "hrStorageGroup"), ("HOST-RESOURCES-V2-MIB", "hrDeviceGroup"), ("HOST-RESOURCES-V2-MIB", "hrSWRunGroup"), ("HOST-RESOURCES-V2-MIB", "hrSWInstalledGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hrMIBCompliance = hrMIBCompliance.setStatus('current')
hrSystemGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 25, 7, 2, 1)).setObjects(("HOST-RESOURCES-V2-MIB", "hrSystemUptime"), ("HOST-RESOURCES-V2-MIB", "hrSystemDate"), ("HOST-RESOURCES-V2-MIB", "hrSystemInitialLoadDevice"), ("HOST-RESOURCES-V2-MIB", "hrSystemInitialLoadParameters"), ("HOST-RESOURCES-V2-MIB", "hrSystemNumUsers"), ("HOST-RESOURCES-V2-MIB", "hrSystemProcesses"), ("HOST-RESOURCES-V2-MIB", "hrSystemMaxProcesses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hrSystemGroup = hrSystemGroup.setStatus('current')
hrStorageGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 25, 7, 2, 2)).setObjects(("HOST-RESOURCES-V2-MIB", "hrMemorySize"), ("HOST-RESOURCES-V2-MIB", "hrStorageIndex"), ("HOST-RESOURCES-V2-MIB", "hrStorageType"), ("HOST-RESOURCES-V2-MIB", "hrStorageDescr"), ("HOST-RESOURCES-V2-MIB", "hrStorageAllocationUnits"), ("HOST-RESOURCES-V2-MIB", "hrStorageSize"), ("HOST-RESOURCES-V2-MIB", "hrStorageUsed"), ("HOST-RESOURCES-V2-MIB", "hrStorageAllocationFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hrStorageGroup = hrStorageGroup.setStatus('current')
hrDeviceGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 25, 7, 2, 3)).setObjects(("HOST-RESOURCES-V2-MIB", "hrDeviceIndex"), ("HOST-RESOURCES-V2-MIB", "hrDeviceType"), ("HOST-RESOURCES-V2-MIB", "hrDeviceDescr"), ("HOST-RESOURCES-V2-MIB", "hrDeviceID"), ("HOST-RESOURCES-V2-MIB", "hrDeviceStatus"), ("HOST-RESOURCES-V2-MIB", "hrDeviceErrors"), ("HOST-RESOURCES-V2-MIB", "hrProcessorFrwID"), ("HOST-RESOURCES-V2-MIB", "hrProcessorLoad"), ("HOST-RESOURCES-V2-MIB", "hrNetworkIfIndex"), ("HOST-RESOURCES-V2-MIB", "hrPrinterStatus"), ("HOST-RESOURCES-V2-MIB", "hrPrinterDetectedErrorState"), ("HOST-RESOURCES-V2-MIB", "hrDiskStorageAccess"), ("HOST-RESOURCES-V2-MIB", "hrDiskStorageMedia"), ("HOST-RESOURCES-V2-MIB", "hrDiskStorageRemoveble"), ("HOST-RESOURCES-V2-MIB", "hrDiskStorageCapacity"), ("HOST-RESOURCES-V2-MIB", "hrPartitionIndex"), ("HOST-RESOURCES-V2-MIB", "hrPartitionLabel"), ("HOST-RESOURCES-V2-MIB", "hrPartitionID"), ("HOST-RESOURCES-V2-MIB", "hrPartitionSize"), ("HOST-RESOURCES-V2-MIB", "hrPartitionFSIndex"), ("HOST-RESOURCES-V2-MIB", "hrFSIndex"), ("HOST-RESOURCES-V2-MIB", "hrFSMountPoint"), ("HOST-RESOURCES-V2-MIB", "hrFSRemoteMountPoint"), ("HOST-RESOURCES-V2-MIB", "hrFSType"), ("HOST-RESOURCES-V2-MIB", "hrFSAccess"), ("HOST-RESOURCES-V2-MIB", "hrFSBootable"), ("HOST-RESOURCES-V2-MIB", "hrFSStorageIndex"), ("HOST-RESOURCES-V2-MIB", "hrFSLastFullBackupDate"), ("HOST-RESOURCES-V2-MIB", "hrFSLastPartialBackupDate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hrDeviceGroup = hrDeviceGroup.setStatus('current')
hrSWRunGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 25, 7, 2, 4)).setObjects(("HOST-RESOURCES-V2-MIB", "hrSWOSIndex"), ("HOST-RESOURCES-V2-MIB", "hrSWRunIndex"), ("HOST-RESOURCES-V2-MIB", "hrSWRunName"), ("HOST-RESOURCES-V2-MIB", "hrSWRunID"), ("HOST-RESOURCES-V2-MIB", "hrSWRunPath"), ("HOST-RESOURCES-V2-MIB", "hrSWRunParameters"), ("HOST-RESOURCES-V2-MIB", "hrSWRunType"), ("HOST-RESOURCES-V2-MIB", "hrSWRunStatus"), ("HOST-RESOURCES-V2-MIB", "hrSWRunPerfCPU"), ("HOST-RESOURCES-V2-MIB", "hrSWRunPerfMem"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hrSWRunGroup = hrSWRunGroup.setStatus('current')
hrSWInstalledGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 25, 7, 2, 5)).setObjects(("HOST-RESOURCES-V2-MIB", "hrSWInstalledLastChange"), ("HOST-RESOURCES-V2-MIB", "hrSWInstalledLastUpdateTime"), ("HOST-RESOURCES-V2-MIB", "hrSWInstalledIndex"), ("HOST-RESOURCES-V2-MIB", "hrSWInstalledName"), ("HOST-RESOURCES-V2-MIB", "hrSWInstalledID"), ("HOST-RESOURCES-V2-MIB", "hrSWInstalledType"), ("HOST-RESOURCES-V2-MIB", "hrSWInstalledDate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hrSWInstalledGroup = hrSWInstalledGroup.setStatus('current')
mibBuilder.exportSymbols("HOST-RESOURCES-V2-MIB", hrStorageUsed=hrStorageUsed, hrSWRunTable=hrSWRunTable, hrDeviceProcessor=hrDeviceProcessor, hrFSTypes=hrFSTypes, hrDiskStorageTable=hrDiskStorageTable, hrDeviceCoprocessor=hrDeviceCoprocessor, hrSWRunPerfEntry=hrSWRunPerfEntry, hrPrinterTable=hrPrinterTable, hrStorageAllocationFailures=hrStorageAllocationFailures, hrSWInstalledName=hrSWInstalledName, hrProcessorEntry=hrProcessorEntry, hrSystem=hrSystem, hrFSNFS=hrFSNFS, hrFSFat=hrFSFat, hrDeviceTape=hrDeviceTape, hrNetworkEntry=hrNetworkEntry, hrSystemNumUsers=hrSystemNumUsers, hrNetworkTable=hrNetworkTable, hrFSAccess=hrFSAccess, hrFSBerkeleyFFS=hrFSBerkeleyFFS, hrPrinterEntry=hrPrinterEntry, hrFSUnknown=hrFSUnknown, hrSystemInitialLoadParameters=hrSystemInitialLoadParameters, hrStorageAllocationUnits=hrStorageAllocationUnits, hrDeviceNonVolatileMemory=hrDeviceNonVolatileMemory, hrPartitionTable=hrPartitionTable, hrDeviceGroup=hrDeviceGroup, hrSWInstalled=hrSWInstalled, hrFSTable=hrFSTable, DateAndTime=DateAndTime, hrSWRunStatus=hrSWRunStatus, hrDeviceKeyboard=hrDeviceKeyboard, hrDeviceErrors=hrDeviceErrors, hrFSJournaled=hrFSJournaled, hrSystemGroup=hrSystemGroup, hrSWRunParameters=hrSWRunParameters, hrDeviceStatus=hrDeviceStatus, hrDeviceDescr=hrDeviceDescr, hrDeviceNetwork=hrDeviceNetwork, hrFSIndex=hrFSIndex, hrFSType=hrFSType, host=host, hrDeviceVolatileMemory=hrDeviceVolatileMemory, hrStorageRemovableDisk=hrStorageRemovableDisk, hrFSNetware=hrFSNetware, hrSWRunPerfTable=hrSWRunPerfTable, hrStorageCompactDisc=hrStorageCompactDisc, hrSWInstalledLastUpdateTime=hrSWInstalledLastUpdateTime, hrPrinterStatus=hrPrinterStatus, hrDeviceTable=hrDeviceTable, hrNetworkIfIndex=hrNetworkIfIndex, hostResourcesMibModule=hostResourcesMibModule, PYSNMP_MODULE_ID=hostResourcesMibModule, Boolean=Boolean, hrConformance=hrConformance, hrFSNTFS=hrFSNTFS, hrDeviceID=hrDeviceID, hrFSOther=hrFSOther, hrSWRunPath=hrSWRunPath, hrDiskStorageAccess=hrDiskStorageAccess, hrPartitionSize=hrPartitionSize, hrDiskStorageMedia=hrDiskStorageMedia, KBytes=KBytes, hrStorageRam=hrStorageRam, hrDeviceModem=hrDeviceModem, hrPartitionLabel=hrPartitionLabel, hrSystemInitialLoadDevice=hrSystemInitialLoadDevice, hrSystemUptime=hrSystemUptime, hrSWRunPerfMem=hrSWRunPerfMem, hrDeviceDiskStorage=hrDeviceDiskStorage, hrStorageGroup=hrStorageGroup, hrSWInstalledID=hrSWInstalledID, hrMIBCompliances=hrMIBCompliances, hrDeviceParallelPort=hrDeviceParallelPort, hrSystemProcesses=hrSystemProcesses, hrSWRun=hrSWRun, hrSWRunName=hrSWRunName, hrStorageDescr=hrStorageDescr, hrSWRunGroup=hrSWRunGroup, hrStorage=hrStorage, hrMIBGroups=hrMIBGroups, hrDevicePrinter=hrDevicePrinter, hrProcessorLoad=hrProcessorLoad, hrSystemMaxProcesses=hrSystemMaxProcesses, hrFSHFS=hrFSHFS, hrFSDGCFS=hrFSDGCFS, hrSWRunType=hrSWRunType, hrSWInstalledDate=hrSWInstalledDate, hrFSAppleshare=hrFSAppleshare, hrSystemDate=hrSystemDate, hrDevice=hrDevice, hrStorageTypes=hrStorageTypes, hrSWInstalledTable=hrSWInstalledTable, hrDeviceTypes=hrDeviceTypes, hrDeviceVideo=hrDeviceVideo, hrFSHPFS=hrFSHPFS, hrDeviceEntry=hrDeviceEntry, hrMemorySize=hrMemorySize, hrFSStorageIndex=hrFSStorageIndex, hrFSMountPoint=hrFSMountPoint, hrStorageType=hrStorageType, hrStorageIndex=hrStorageIndex, hrDeviceIndex=hrDeviceIndex, hrSWRunIndex=hrSWRunIndex, hrStorageRamDisk=hrStorageRamDisk, hrSWInstalledIndex=hrSWInstalledIndex, hrDiskStorageEntry=hrDiskStorageEntry, hrDevicePointing=hrDevicePointing, hrSWRunPerfCPU=hrSWRunPerfCPU, hrStorageSize=hrStorageSize, hrPartitionIndex=hrPartitionIndex, hrFSiso9660=hrFSiso9660, hrFSSys5FS=hrFSSys5FS, ProductID=ProductID, hrSWRunEntry=hrSWRunEntry, hrStorageOther=hrStorageOther, hrDeviceOther=hrDeviceOther, hrFSVNode=hrFSVNode, hrPrinterDetectedErrorState=hrPrinterDetectedErrorState, hrSWOSIndex=hrSWOSIndex, hrStorageFloppyDisk=hrStorageFloppyDisk, hrStorageVirtualMemory=hrStorageVirtualMemory, hrFSMFS=hrFSMFS, hrDeviceAudio=hrDeviceAudio, hrFSDFS=hrFSDFS, hrFSBFS=hrFSBFS, hrStorageTable=hrStorageTable, hrDiskStorageCapacity=hrDiskStorageCapacity, hrStorageEntry=hrStorageEntry, hrFSLastPartialBackupDate=hrFSLastPartialBackupDate, hrFSEntry=hrFSEntry, hrPartitionID=hrPartitionID, hrMIBCompliance=hrMIBCompliance, hrProcessorTable=hrProcessorTable, hrPartitionFSIndex=hrPartitionFSIndex, hrDiskStorageRemoveble=hrDiskStorageRemoveble, hrFSRockRidge=hrFSRockRidge, InternationalDisplayString=InternationalDisplayString, hrSWInstalledLastChange=hrSWInstalledLastChange, hrSWRunPerf=hrSWRunPerf, hrSWInstalledType=hrSWInstalledType, hrFSBootable=hrFSBootable, hrDeviceUnknown=hrDeviceUnknown, hrDeviceSerialPort=hrDeviceSerialPort, hrDeviceClock=hrDeviceClock, hrFSLastFullBackupDate=hrFSLastFullBackupDate, hrFSRemoteMountPoint=hrFSRemoteMountPoint, hrSWInstalledEntry=hrSWInstalledEntry, hrPartitionEntry=hrPartitionEntry, hrFSAFS=hrFSAFS, hrDeviceType=hrDeviceType, hrFSRFS=hrFSRFS, hrSWInstalledGroup=hrSWInstalledGroup, hrProcessorFrwID=hrProcessorFrwID, hrStorageFixedDisk=hrStorageFixedDisk, hrSWRunID=hrSWRunID)
