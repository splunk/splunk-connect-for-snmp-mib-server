#
# PySNMP MIB module ELTEX-MES-AAA-STATISTICS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-MES-AAA-STATISTICS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:46:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
eltMesAAAStatMIB, = mibBuilder.importSymbols("ELTEX-MES-MNG-MIB", "eltMesAAAStatMIB")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, iso, TimeTicks, MibIdentifier, IpAddress, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, Unsigned32, NotificationType, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "iso", "TimeTicks", "MibIdentifier", "IpAddress", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "Unsigned32", "NotificationType", "ModuleIdentity", "Gauge32")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
eltRadiusAuthServTotalAccessRequests = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAuthServTotalAccessRequests.setStatus('current')
eltRadiusAuthServTotalAccessAccepts = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAuthServTotalAccessAccepts.setStatus('current')
eltRadiusAuthServAccessRejects = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAuthServAccessRejects.setStatus('current')
eltRadiusAuthServAccessChallenges = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAuthServAccessChallenges.setStatus('current')
eltRadiusAuthServAverageResponseDelay = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAuthServAverageResponseDelay.setStatus('current')
eltRadiusAuthServMaximumResponseDelay = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAuthServMaximumResponseDelay.setStatus('current')
eltRadiusAuthServTotalTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAuthServTotalTimeouts.setStatus('current')
eltRadiusAuthServTotalMalformedAccessRequests = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAuthServTotalMalformedAccessRequests.setStatus('current')
eltRadiusAuthServMaximumBufferSize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAuthServMaximumBufferSize.setStatus('current')
eltRadiusAuthServTotalPacketsDropped = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAuthServTotalPacketsDropped.setStatus('current')
eltRadiusAccServTotalRequests = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAccServTotalRequests.setStatus('current')
eltRadiusAccServTotalDupRequests = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAccServTotalDupRequests.setStatus('current')
eltRadiusAccServTotalResponses = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAccServTotalResponses.setStatus('current')
eltRadiusAccServAverageResponseDelay = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAccServAverageResponseDelay.setStatus('current')
eltRadiusAccServMaximumResponseDelay = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAccServMaximumResponseDelay.setStatus('current')
eltRadiusAccServTotalTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAccServTotalTimeouts.setStatus('current')
eltRadiusAccServTotalMalformedAccessRequests = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAccServTotalMalformedAccessRequests.setStatus('current')
eltRadiusAccServMaximumBufferSize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAccServMaximumBufferSize.setStatus('current')
eltRadiusAccServTotalPacketsDropped = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusAccServTotalPacketsDropped.setStatus('current')
eltTacacsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 20), )
if mibBuilder.loadTexts: eltTacacsStatsTable.setStatus('current')
eltTacacsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 20, 1), ).setIndexNames((0, "ELTEX-MES-AAA-STATISTICS-MIB", "eltTacacsServerAddress"))
if mibBuilder.loadTexts: eltTacacsStatsEntry.setStatus('current')
eltTacacsServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 20, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltTacacsServerAddress.setStatus('current')
eltTacacsSocketOpens = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 20, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltTacacsSocketOpens.setStatus('current')
eltTacacsSocketCloses = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 20, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltTacacsSocketCloses.setStatus('current')
eltTacacsSocketAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 20, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltTacacsSocketAborts.setStatus('current')
eltTacacsSocketErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 20, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltTacacsSocketErrors.setStatus('current')
eltTacacsSocketTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 20, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltTacacsSocketTimeouts.setStatus('current')
eltTacacsFailesConnAttemps = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 20, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltTacacsFailesConnAttemps.setStatus('current')
eltTacacsTotalPackageSent = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 20, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltTacacsTotalPackageSent.setStatus('current')
eltTacacsTotalPackageRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 20, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltTacacsTotalPackageRecv.setStatus('current')
eltRadiusServerStatusTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 21), )
if mibBuilder.loadTexts: eltRadiusServerStatusTable.setStatus('current')
eltRadiusServerStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 21, 1), ).setIndexNames((0, "ELTEX-MES-AAA-STATISTICS-MIB", "eltRadiusServerAddressType"), (0, "ELTEX-MES-AAA-STATISTICS-MIB", "eltRadiusServerAddress"), (0, "ELTEX-MES-AAA-STATISTICS-MIB", "eltRadiusServerAuthPortNumber"), (0, "ELTEX-MES-AAA-STATISTICS-MIB", "eltRadiusServerAcctPortNumber"))
if mibBuilder.loadTexts: eltRadiusServerStatusEntry.setStatus('current')
eltRadiusServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 21, 1, 1), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltRadiusServerAddressType.setStatus('current')
eltRadiusServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 21, 1, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltRadiusServerAddress.setStatus('current')
eltRadiusServerAuthPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 21, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltRadiusServerAuthPortNumber.setStatus('current')
eltRadiusServerAcctPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 21, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltRadiusServerAcctPortNumber.setStatus('current')
eltRadiusServerAuthClientTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 21, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusServerAuthClientTimeouts.setStatus('current')
eltRadiusServerDeadStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 21, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusServerDeadStatus.setStatus('current')
eltRadiusServerRemainDeadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 21, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltRadiusServerRemainDeadTime.setStatus('current')
eltRadiusServerStatusReset = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 3, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltRadiusServerStatusReset.setStatus('current')
mibBuilder.exportSymbols("ELTEX-MES-AAA-STATISTICS-MIB", eltRadiusServerStatusReset=eltRadiusServerStatusReset, eltRadiusAccServTotalMalformedAccessRequests=eltRadiusAccServTotalMalformedAccessRequests, eltRadiusAccServTotalDupRequests=eltRadiusAccServTotalDupRequests, eltRadiusAccServTotalResponses=eltRadiusAccServTotalResponses, eltRadiusAuthServTotalTimeouts=eltRadiusAuthServTotalTimeouts, eltRadiusAccServTotalRequests=eltRadiusAccServTotalRequests, eltRadiusAuthServMaximumBufferSize=eltRadiusAuthServMaximumBufferSize, eltRadiusServerStatusEntry=eltRadiusServerStatusEntry, eltRadiusAccServTotalPacketsDropped=eltRadiusAccServTotalPacketsDropped, eltRadiusAccServAverageResponseDelay=eltRadiusAccServAverageResponseDelay, eltRadiusServerStatusTable=eltRadiusServerStatusTable, eltTacacsTotalPackageSent=eltTacacsTotalPackageSent, eltRadiusAuthServMaximumResponseDelay=eltRadiusAuthServMaximumResponseDelay, eltRadiusServerDeadStatus=eltRadiusServerDeadStatus, eltRadiusAuthServTotalAccessAccepts=eltRadiusAuthServTotalAccessAccepts, eltTacacsSocketOpens=eltTacacsSocketOpens, eltTacacsSocketAborts=eltTacacsSocketAborts, eltRadiusServerAuthPortNumber=eltRadiusServerAuthPortNumber, eltRadiusAuthServTotalAccessRequests=eltRadiusAuthServTotalAccessRequests, eltTacacsSocketTimeouts=eltTacacsSocketTimeouts, eltRadiusAuthServAverageResponseDelay=eltRadiusAuthServAverageResponseDelay, eltTacacsStatsTable=eltTacacsStatsTable, eltRadiusServerAcctPortNumber=eltRadiusServerAcctPortNumber, eltTacacsFailesConnAttemps=eltTacacsFailesConnAttemps, eltRadiusServerAddress=eltRadiusServerAddress, eltRadiusServerRemainDeadTime=eltRadiusServerRemainDeadTime, eltTacacsSocketErrors=eltTacacsSocketErrors, eltRadiusServerAddressType=eltRadiusServerAddressType, eltTacacsStatsEntry=eltTacacsStatsEntry, eltRadiusAccServTotalTimeouts=eltRadiusAccServTotalTimeouts, eltRadiusServerAuthClientTimeouts=eltRadiusServerAuthClientTimeouts, eltTacacsTotalPackageRecv=eltTacacsTotalPackageRecv, eltRadiusAuthServAccessRejects=eltRadiusAuthServAccessRejects, eltTacacsServerAddress=eltTacacsServerAddress, eltRadiusAuthServTotalPacketsDropped=eltRadiusAuthServTotalPacketsDropped, eltTacacsSocketCloses=eltTacacsSocketCloses, eltRadiusAuthServTotalMalformedAccessRequests=eltRadiusAuthServTotalMalformedAccessRequests, eltRadiusAccServMaximumResponseDelay=eltRadiusAccServMaximumResponseDelay, eltRadiusAuthServAccessChallenges=eltRadiusAuthServAccessChallenges, eltRadiusAccServMaximumBufferSize=eltRadiusAccServMaximumBufferSize)
