#
# PySNMP MIB module MOBANetClocksV2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MOBANetClocksV2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:03:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
TimeTicks, Counter32, Gauge32, NotificationType, Counter64, Bits, ModuleIdentity, Integer32, Unsigned32, ObjectIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "Gauge32", "NotificationType", "Counter64", "Bits", "ModuleIdentity", "Integer32", "Unsigned32", "ObjectIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "iso", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
mbnscMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 13842, 6, 100))
mbnscMIB.setRevisions(('2014-06-17 12:02',))
if mibBuilder.loadTexts: mbnscMIB.setLastUpdated('201406171202Z')
if mibBuilder.loadTexts: mbnscMIB.setOrganization('Moser-Baer AG')
class MOBAAlarm64(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1x1x1x1x.1x1x1x1x'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class MOBAFlags64(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1x1x1x1x.1x1x1x1x'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class MOBANetworkName(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 40)

mobatime = MibIdentifier((1, 3, 6, 1, 4, 1, 13842))
mobaNetClocks = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6))
mobaNetClocksV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2))
mbnscNet = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1))
mbnscNetGen = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 1))
mbnscNetGenMAC = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNetGenMAC.setStatus('current')
mbnscNetGenIPMode = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("both", 0), ("ipv4only", 1), ("ipv6only", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNetGenIPMode.setStatus('current')
mbnscNetGenIPNameserver = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNetGenIPNameserver.setStatus('current')
mbnscNetGenTZClientPort = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNetGenTZClientPort.setStatus('current')
mbnscNetGenConfigPort = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNetGenConfigPort.setStatus('current')
mbnscNetGenSnmpMode = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNetGenSnmpMode.setStatus('current')
mbnscNetGenMulticastMode = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNetGenMulticastMode.setStatus('current')
mbnscNetGenHostname = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNetGenHostname.setStatus('current')
mbnscNetGenCommMode = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNetGenCommMode.setStatus('current')
mbnscNetGenMCastGrpIP = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNetGenMCastGrpIP.setStatus('current')
mbnscNetGenConfigCmd = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 1, 100), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNetGenConfigCmd.setStatus('current')
mbnscNetGenConfigChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 1, 101), TimeTicks()).setUnits('Time ticks in 1/100th seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNetGenConfigChangedTime.setStatus('current')
mbnscNetIPv4 = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 2))
mbnscNetIPv4Addr = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 2, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNetIPv4Addr.setStatus('current')
mbnscNetIPv4Mask = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNetIPv4Mask.setStatus('current')
mbnscNetIPv4Gateway = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNetIPv4Gateway.setStatus('current')
mbnscNetIPv4DHCPMode = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 2, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNetIPv4DHCPMode.setStatus('current')
mbnscNetIPv4ConfigCmd = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 2, 100), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNetIPv4ConfigCmd.setStatus('current')
mbnscNetIPv4ConfigChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 2, 101), TimeTicks()).setUnits('Time ticks in 1/100th seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNetIPv4ConfigChangedTime.setStatus('current')
mbnscNetIPv6 = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 3))
mbnscNetIPv6AddrLocal = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNetIPv6AddrLocal.setStatus('current')
mbnscNetIPv6AddrAuto = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNetIPv6AddrAuto.setStatus('current')
mbnscNetIPv6AddrDHCP = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNetIPv6AddrDHCP.setStatus('current')
mbnscNetIPv6AddrFix = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 3, 4), MOBANetworkName().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNetIPv6AddrFix.setStatus('current')
mbnscNetIPv6Prefix = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 3, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNetIPv6Prefix.setStatus('current')
mbnscNetIPv6Gateway = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 3, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNetIPv6Gateway.setStatus('current')
mbnscNetIPv6Config = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("both", 0), ("autoonly", 1), ("dhcpv6only", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNetIPv6Config.setStatus('current')
mbnscNetIPv6ConfigCmd = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 3, 100), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNetIPv6ConfigCmd.setStatus('current')
mbnscNetIPv6ConfigChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 1, 3, 101), TimeTicks()).setUnits('Time ticks in 1/100th seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNetIPv6ConfigChangedTime.setStatus('current')
mbnscTime = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 2))
mbnscTimeNTP1 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscTimeNTP1.setStatus('current')
mbnscTimeNTP2 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscTimeNTP2.setStatus('current')
mbnscTimeNTP3 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscTimeNTP3.setStatus('current')
mbnscTimeNTP4 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscTimeNTP4.setStatus('current')
mbnscTimeNTPcurrent = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscTimeNTPcurrent.setStatus('current')
mbnscTimeNTPpollIntervall = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 2, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscTimeNTPpollIntervall.setStatus('current')
mbnscTimeDeviceTime = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 2, 7), Unsigned32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscTimeDeviceTime.setStatus('current')
mbnscTimeLocOffset = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-720, 720))).setUnits('minutes (min)').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscTimeLocOffset.setStatus('current')
mbnscTimeLastReception = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 2, 9), Unsigned32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscTimeLastReception.setStatus('current')
mbnscTimeConfigCmd = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 2, 100), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscTimeConfigCmd.setStatus('current')
mbnscTimeConfigChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 2, 101), TimeTicks()).setUnits('Time ticks in 1/100th seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscTimeConfigChangedTime.setStatus('current')
mbnscTimeZone = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 3))
mbnscTimeZoneVersion = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscTimeZoneVersion.setStatus('current')
mbnscTimeZoneNumber = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscTimeZoneNumber.setStatus('current')
mbnscTimeZoneEntry1 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 3, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(18, 18)).setFixedLength(18)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscTimeZoneEntry1.setStatus('current')
mbnscTimeZoneEntry2 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 3, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(18, 18)).setFixedLength(18)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscTimeZoneEntry2.setStatus('current')
mbnscTimeZoneEntry3 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 3, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(18, 18)).setFixedLength(18)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscTimeZoneEntry3.setStatus('current')
mbnscTimeZoneEntry4 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 3, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(18, 18)).setFixedLength(18)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscTimeZoneEntry4.setStatus('current')
mbnscTimeZoneEntry5 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 3, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(18, 18)).setFixedLength(18)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscTimeZoneEntry5.setStatus('current')
mbnscTimeZoneEntry6 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 3, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(18, 18)).setFixedLength(18)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscTimeZoneEntry6.setStatus('current')
mbnscTimeZoneEntry7 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 3, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(18, 18)).setFixedLength(18)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscTimeZoneEntry7.setStatus('current')
mbnscTimeZoneConfigCmd = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 3, 100), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscTimeZoneConfigCmd.setStatus('current')
mbnscTimeZoneConfigChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 3, 101), TimeTicks()).setUnits('Time ticks in 1/100th seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscTimeZoneConfigChangedTime.setStatus('current')
mbnscMode = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4))
mbnscModeSwitchInfo = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscModeSwitchInfo.setStatus('current')
mbnscModeDisplayBrightness = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscModeDisplayBrightness.setStatus('current')
mbnscModeDisplayFormat = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscModeDisplayFormat.setStatus('current')
mbnscModeDisplayAlternate = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscModeDisplayAlternate.setStatus('current')
mbnscModeNTP = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2)))
if mibBuilder.loadTexts: mbnscModeNTP.setStatus('obsolete')
mbnscModeIRlock = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscModeIRlock.setStatus('current')
mbnscModeTimeDispZeros = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscModeTimeDispZeros.setStatus('current')
mbnscModeDateDispZeros = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscModeDateDispZeros.setStatus('current')
mbnscModeTempUnit = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscModeTempUnit.setStatus('current')
mbnscModeClockOpMode = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscModeClockOpMode.setStatus('current')
mbnscModeNWParam = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2)))
if mibBuilder.loadTexts: mbnscModeNWParam.setStatus('obsolete')
mbnscModeDispDerating = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscModeDispDerating.setStatus('current')
mbnscModeLightCorr = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscModeLightCorr.setStatus('current')
mbnscAdditionalDigitalClockModes = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30))
mbnscSensors = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 1))
mbnscSensorsTempActivation = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscSensorsTempActivation.setStatus('current')
mbnscSensorsTemp1IPAddr = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscSensorsTemp1IPAddr.setStatus('current')
mbnscSensorsTemp2IPAddr = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscSensorsTemp2IPAddr.setStatus('current')
mbnscSensorsConfigCmd = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 1, 100), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscSensorsConfigCmd.setStatus('current')
mbnscSensorsConfigChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 1, 101), TimeTicks()).setUnits('Time ticks in 1/100th seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscSensorsConfigChangedTime.setStatus('current')
mbnscDA = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 2))
mbnscDASecondCircleDisplay = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDASecondCircleDisplay.setStatus('current')
mbnscDAConfigCmd = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 2, 100), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDAConfigCmd.setStatus('current')
mbnscDAConfigChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 2, 101), TimeTicks()).setUnits('Time ticks in 1/100th seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscDAConfigChangedTime.setStatus('current')
mbnscDK = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3))
mbnscDKFirstLanguage = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKFirstLanguage.setStatus('current')
mbnscDKSecondLanguage = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKSecondLanguage.setStatus('current')
mbnscDKThirdLanguage = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKThirdLanguage.setStatus('current')
mbnscDKTempUnitSecondLang = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKTempUnitSecondLang.setStatus('current')
mbnscDKTempUnitThirdLang = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKTempUnitThirdLang.setStatus('current')
mbnscDKAutoLangSwitchOver = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKAutoLangSwitchOver.setStatus('current')
mbnscDKNumOfCharsForWeekday = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKNumOfCharsForWeekday.setStatus('current')
mbnscDKNamesFormatDisplay = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKNamesFormatDisplay.setStatus('current')
mbnscDKTemp1DescriptEnable = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKTemp1DescriptEnable.setStatus('current')
mbnscDKTemp1Description = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKTemp1Description.setStatus('current')
mbnscDKTemp2DescriptEnable = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKTemp2DescriptEnable.setStatus('current')
mbnscDKTemp2Description = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKTemp2Description.setStatus('current')
mbnscDKWorldTimeZone1 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKWorldTimeZone1.setStatus('current')
mbnscDKWorldTimeZone1Description = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKWorldTimeZone1Description.setStatus('current')
mbnscDKWorldTimeZone2 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKWorldTimeZone2.setStatus('current')
mbnscDKWorldTimeZone2Description = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKWorldTimeZone2Description.setStatus('current')
mbnscDKWorldTimeZone3 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKWorldTimeZone3.setStatus('current')
mbnscDKWorldTimeZone3Description = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKWorldTimeZone3Description.setStatus('current')
mbnscDKWorldTimeZone4 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKWorldTimeZone4.setStatus('current')
mbnscDKWorldTimeZone4Description = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKWorldTimeZone4Description.setStatus('current')
mbnscDKWorldTimeZone5 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKWorldTimeZone5.setStatus('current')
mbnscDKWorldTimeZone5Description = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKWorldTimeZone5Description.setStatus('current')
mbnscDKAutoTimeZoneSwitchOver = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKAutoTimeZoneSwitchOver.setStatus('current')
mbnscDKConfigCmd = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 100), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscDKConfigCmd.setStatus('current')
mbnscDKConfigChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 30, 3, 101), TimeTicks()).setUnits('Time ticks in 1/100th seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscDKConfigChangedTime.setStatus('current')
mbnscModeConfigCmd = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 100), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscModeConfigCmd.setStatus('current')
mbnscModeConfigChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 101), TimeTicks()).setUnits('Time ticks in 1/100th seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscModeConfigChangedTime.setStatus('current')
mbnscAdditionalInterfaceModes = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40))
mbnscNMI = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1))
mbnscNMIDCFCurrentLoop = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNMIDCFCurrentLoop.setStatus('current')
mbnscNMILineDriver = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("mobaline", 1), ("activdcf", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNMILineDriver.setStatus('current')
mbnscNMIMOBALineMode = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("command12h", 1), ("clockidcommand", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNMIMOBALineMode.setStatus('current')
mbnscNMIMOBALineMinuteHandMode = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("minutestep", 0), ("halfminutestep", 1), ("continuous", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNMIMOBALineMinuteHandMode.setStatus('current')
mbnscNMIActiveDCFMode = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("mode1", 1), ("mode2", 2), ("mode3", 3), ("mode4", 4), ("mode5", 5), ("mode6", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNMIActiveDCFMode.setStatus('current')
mbnscNMIConfigCmd = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 100), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscNMIConfigCmd.setStatus('current')
mbnscNMIConfigChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 101), TimeTicks()).setUnits('Time ticks in 1/100th seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNMIConfigChangedTime.setStatus('current')
mbnscNMISideClockState = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 20))
mbnscNMISideClock1 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 5))).clone(namedValues=NamedValues(("notconfigured", 0), ("clockok", 3), ("clockerror", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNMISideClock1.setStatus('current')
mbnscNMISideClock2 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 20, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 5))).clone(namedValues=NamedValues(("notconfigured", 0), ("clockok", 3), ("clockerror", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNMISideClock2.setStatus('current')
mbnscNMISideClock3 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 20, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 5))).clone(namedValues=NamedValues(("notconfigured", 0), ("clockok", 3), ("clockerror", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNMISideClock3.setStatus('current')
mbnscNMISideClock4 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 20, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 5))).clone(namedValues=NamedValues(("notconfigured", 0), ("clockok", 3), ("clockerror", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNMISideClock4.setStatus('current')
mbnscNMISideClock5 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 20, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 5))).clone(namedValues=NamedValues(("notconfigured", 0), ("clockok", 3), ("clockerror", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNMISideClock5.setStatus('current')
mbnscNMISideClock6 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 20, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 5))).clone(namedValues=NamedValues(("notconfigured", 0), ("clockok", 3), ("clockerror", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNMISideClock6.setStatus('current')
mbnscNMISideClock7 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 20, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 5))).clone(namedValues=NamedValues(("notconfigured", 0), ("clockok", 3), ("clockerror", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNMISideClock7.setStatus('current')
mbnscNMISideClock8 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 20, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 5))).clone(namedValues=NamedValues(("notconfigured", 0), ("clockok", 3), ("clockerror", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNMISideClock8.setStatus('current')
mbnscNMISideClock9 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 20, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 5))).clone(namedValues=NamedValues(("notconfigured", 0), ("clockok", 3), ("clockerror", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNMISideClock9.setStatus('current')
mbnscNMISideClock10 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 20, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 5))).clone(namedValues=NamedValues(("notconfigured", 0), ("clockok", 3), ("clockerror", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNMISideClock10.setStatus('current')
mbnscNMISideClock11 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 20, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 5))).clone(namedValues=NamedValues(("notconfigured", 0), ("clockok", 3), ("clockerror", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNMISideClock11.setStatus('current')
mbnscNMISideClock12 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 4, 40, 1, 20, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 5))).clone(namedValues=NamedValues(("notconfigured", 0), ("clockok", 3), ("clockerror", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscNMISideClock12.setStatus('current')
mbnscGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 5))
mbnscGeneralType = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscGeneralType.setStatus('current')
mbnscGeneralName = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 5, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscGeneralName.setStatus('current')
mbnscGeneralFirmwareNumber = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 5, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscGeneralFirmwareNumber.setStatus('current')
mbnscGeneralFirmwareVer = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 5, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscGeneralFirmwareVer.setStatus('current')
mbnscGeneralStatus = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 5, 5), MOBAFlags64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscGeneralStatus.setStatus('current')
mbnscGeneralAlarms = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 5, 6), MOBAAlarm64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscGeneralAlarms.setStatus('current')
mbnscGeneralSlaveInfo1 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 5, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(26, 26)).setFixedLength(26)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscGeneralSlaveInfo1.setStatus('current')
mbnscGeneralSlaveInfo2 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 5, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(26, 26)).setFixedLength(26)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscGeneralSlaveInfo2.setStatus('current')
mbnscGeneralSlaveInfo3 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 5, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(26, 26)).setFixedLength(26)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscGeneralSlaveInfo3.setStatus('current')
mbnscGeneralConfigCmd = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 5, 100), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscGeneralConfigCmd.setStatus('current')
mbnscGeneralConfigChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 5, 101), TimeTicks()).setUnits('Time ticks in 1/100th seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscGeneralConfigChangedTime.setStatus('current')
mbnscSupervision = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 6))
mbnscSNMPManager1 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 6, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscSNMPManager1.setStatus('current')
mbnscSNMPManager2 = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 6, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscSNMPManager2.setStatus('current')
mbnscSNMPTrapAliveMsgInterval = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 6, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1440), ))).setUnits('minutes (min)').setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscSNMPTrapAliveMsgInterval.setStatus('current')
mbnscSNMPConfigCmd = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 6, 100), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscSNMPConfigCmd.setStatus('current')
mbnscSNMPConfigChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 6, 101), TimeTicks()).setUnits('Time ticks in 1/100th seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscSNMPConfigChangedTime.setStatus('current')
mbnscCommand = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 7))
mbnscCommand12Pos = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 7, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscCommand12Pos.setStatus('current')
mbnscCommandSWReset = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 7, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscCommandSWReset.setStatus('current')
mbnscCommandFactorySetting = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 7, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscCommandFactorySetting.setStatus('current')
mbnscCommandFirmwUpd = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 7, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscCommandFirmwUpd.setStatus('current')
mbnscCommandExtContact = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 7, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbnscCommandExtContact.setStatus('current')
mbnscCommandConfigCmd = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 7, 100), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbnscCommandConfigCmd.setStatus('current')
mbnscSnmpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 9))
mbnscSnmpCurrentAlarmInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 9, 1))
mbnscTrapAlMsgErrorNr = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: mbnscTrapAlMsgErrorNr.setStatus('current')
mbnscTrapAlMsgErrorState = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 9, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: mbnscTrapAlMsgErrorState.setStatus('current')
mbnscTrapAlMsgErrorTime = MibScalar((1, 3, 6, 1, 4, 1, 13842, 6, 2, 9, 1, 3), Unsigned32()).setUnits('Seconds').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: mbnscTrapAlMsgErrorTime.setStatus('current')
mbnscTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 2, 10))
mbnscTrapsAlarm = NotificationType((1, 3, 6, 1, 4, 1, 13842, 6, 2, 10, 1)).setObjects(("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorNr"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorState"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorTime"))
if mibBuilder.loadTexts: mbnscTrapsAlarm.setStatus('current')
mbnscTrapsAlive = NotificationType((1, 3, 6, 1, 4, 1, 13842, 6, 2, 10, 2)).setObjects(("MOBANetClocksV2-MIB", "mbnscGeneralStatus"), ("MOBANetClocksV2-MIB", "mbnscGeneralAlarms"))
if mibBuilder.loadTexts: mbnscTrapsAlive.setStatus('current')
mbnscMIBCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 100, 1))
mbnscMIBCompliances = ModuleCompliance((1, 3, 6, 1, 4, 1, 13842, 6, 100, 1, 1)).setObjects(("MOBANetClocksV2-MIB", "mbnscGrpNBU190"), ("MOBANetClocksV2-MIB", "mbnscGrpSEN40"), ("MOBANetClocksV2-MIB", "mbnscGrpDC"), ("MOBANetClocksV2-MIB", "mbnscGrpECODC"), ("MOBANetClocksV2-MIB", "mbnscGrpDA"), ("MOBANetClocksV2-MIB", "mbnscGrpDK"), ("MOBANetClocksV2-MIB", "mbnscGrpNMI"), ("MOBANetClocksV2-MIB", "mbnscGrpNotUsedParameters"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mbnscMIBCompliances = mbnscMIBCompliances.setStatus('current')
mbnscMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 13842, 6, 100, 2))
mbnscAllNotifications = NotificationGroup((1, 3, 6, 1, 4, 1, 13842, 6, 100, 2, 1)).setObjects(("MOBANetClocksV2-MIB", "mbnscTrapsAlarm"), ("MOBANetClocksV2-MIB", "mbnscTrapsAlive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mbnscAllNotifications = mbnscAllNotifications.setStatus('current')
mbnscGrpNBU190 = ObjectGroup((1, 3, 6, 1, 4, 1, 13842, 6, 100, 2, 2)).setObjects(("MOBANetClocksV2-MIB", "mbnscNetGenMAC"), ("MOBANetClocksV2-MIB", "mbnscNetGenIPMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenIPNameserver"), ("MOBANetClocksV2-MIB", "mbnscNetGenTZClientPort"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigPort"), ("MOBANetClocksV2-MIB", "mbnscNetGenSnmpMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenMulticastMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenHostname"), ("MOBANetClocksV2-MIB", "mbnscNetGenCommMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenMCastGrpIP"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Addr"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Mask"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Gateway"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4DHCPMode"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4ConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4ConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrLocal"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrAuto"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrDHCP"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrFix"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Prefix"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Gateway"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Config"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6ConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6ConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP1"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP2"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP3"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP4"), ("MOBANetClocksV2-MIB", "mbnscTimeNTPcurrent"), ("MOBANetClocksV2-MIB", "mbnscTimeNTPpollIntervall"), ("MOBANetClocksV2-MIB", "mbnscTimeDeviceTime"), ("MOBANetClocksV2-MIB", "mbnscTimeLocOffset"), ("MOBANetClocksV2-MIB", "mbnscTimeLastReception"), ("MOBANetClocksV2-MIB", "mbnscTimeConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTimeConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneVersion"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneNumber"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscModeConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscModeConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscGeneralType"), ("MOBANetClocksV2-MIB", "mbnscGeneralName"), ("MOBANetClocksV2-MIB", "mbnscGeneralFirmwareNumber"), ("MOBANetClocksV2-MIB", "mbnscGeneralFirmwareVer"), ("MOBANetClocksV2-MIB", "mbnscGeneralStatus"), ("MOBANetClocksV2-MIB", "mbnscGeneralAlarms"), ("MOBANetClocksV2-MIB", "mbnscGeneralSlaveInfo1"), ("MOBANetClocksV2-MIB", "mbnscGeneralSlaveInfo2"), ("MOBANetClocksV2-MIB", "mbnscGeneralSlaveInfo3"), ("MOBANetClocksV2-MIB", "mbnscGeneralConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscGeneralConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscSNMPManager1"), ("MOBANetClocksV2-MIB", "mbnscSNMPManager2"), ("MOBANetClocksV2-MIB", "mbnscSNMPTrapAliveMsgInterval"), ("MOBANetClocksV2-MIB", "mbnscSNMPConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscSNMPConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscCommand12Pos"), ("MOBANetClocksV2-MIB", "mbnscCommandSWReset"), ("MOBANetClocksV2-MIB", "mbnscCommandConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorNr"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorState"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mbnscGrpNBU190 = mbnscGrpNBU190.setStatus('current')
mbnscGrpSEN40 = ObjectGroup((1, 3, 6, 1, 4, 1, 13842, 6, 100, 2, 3)).setObjects(("MOBANetClocksV2-MIB", "mbnscNetGenMAC"), ("MOBANetClocksV2-MIB", "mbnscNetGenIPMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenIPNameserver"), ("MOBANetClocksV2-MIB", "mbnscNetGenTZClientPort"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigPort"), ("MOBANetClocksV2-MIB", "mbnscNetGenSnmpMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenMulticastMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenHostname"), ("MOBANetClocksV2-MIB", "mbnscNetGenCommMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenMCastGrpIP"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Addr"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Mask"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Gateway"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4DHCPMode"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4ConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4ConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrLocal"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrAuto"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrDHCP"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrFix"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Prefix"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Gateway"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Config"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6ConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6ConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP1"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP2"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP3"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP4"), ("MOBANetClocksV2-MIB", "mbnscTimeNTPcurrent"), ("MOBANetClocksV2-MIB", "mbnscTimeNTPpollIntervall"), ("MOBANetClocksV2-MIB", "mbnscTimeDeviceTime"), ("MOBANetClocksV2-MIB", "mbnscTimeLocOffset"), ("MOBANetClocksV2-MIB", "mbnscTimeLastReception"), ("MOBANetClocksV2-MIB", "mbnscTimeConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTimeConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneVersion"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneNumber"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscModeConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscModeConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscGeneralType"), ("MOBANetClocksV2-MIB", "mbnscGeneralName"), ("MOBANetClocksV2-MIB", "mbnscGeneralFirmwareNumber"), ("MOBANetClocksV2-MIB", "mbnscGeneralFirmwareVer"), ("MOBANetClocksV2-MIB", "mbnscGeneralStatus"), ("MOBANetClocksV2-MIB", "mbnscGeneralAlarms"), ("MOBANetClocksV2-MIB", "mbnscGeneralSlaveInfo1"), ("MOBANetClocksV2-MIB", "mbnscGeneralConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscGeneralConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscSNMPManager1"), ("MOBANetClocksV2-MIB", "mbnscSNMPManager2"), ("MOBANetClocksV2-MIB", "mbnscSNMPTrapAliveMsgInterval"), ("MOBANetClocksV2-MIB", "mbnscSNMPConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscSNMPConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscCommand12Pos"), ("MOBANetClocksV2-MIB", "mbnscCommandSWReset"), ("MOBANetClocksV2-MIB", "mbnscCommandConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorNr"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorState"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mbnscGrpSEN40 = mbnscGrpSEN40.setStatus('current')
mbnscGrpDC = ObjectGroup((1, 3, 6, 1, 4, 1, 13842, 6, 100, 2, 4)).setObjects(("MOBANetClocksV2-MIB", "mbnscNetGenMAC"), ("MOBANetClocksV2-MIB", "mbnscNetGenIPMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenIPNameserver"), ("MOBANetClocksV2-MIB", "mbnscNetGenTZClientPort"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigPort"), ("MOBANetClocksV2-MIB", "mbnscNetGenSnmpMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenMulticastMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenHostname"), ("MOBANetClocksV2-MIB", "mbnscNetGenCommMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenMCastGrpIP"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Addr"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Mask"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Gateway"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4DHCPMode"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4ConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4ConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrLocal"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrAuto"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrDHCP"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrFix"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Prefix"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Gateway"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Config"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6ConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6ConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP1"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP2"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP3"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP4"), ("MOBANetClocksV2-MIB", "mbnscTimeNTPcurrent"), ("MOBANetClocksV2-MIB", "mbnscTimeNTPpollIntervall"), ("MOBANetClocksV2-MIB", "mbnscTimeDeviceTime"), ("MOBANetClocksV2-MIB", "mbnscTimeLocOffset"), ("MOBANetClocksV2-MIB", "mbnscTimeLastReception"), ("MOBANetClocksV2-MIB", "mbnscTimeConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTimeConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneVersion"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneNumber"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscModeDisplayBrightness"), ("MOBANetClocksV2-MIB", "mbnscModeDisplayFormat"), ("MOBANetClocksV2-MIB", "mbnscModeDisplayAlternate"), ("MOBANetClocksV2-MIB", "mbnscModeIRlock"), ("MOBANetClocksV2-MIB", "mbnscModeTimeDispZeros"), ("MOBANetClocksV2-MIB", "mbnscModeDateDispZeros"), ("MOBANetClocksV2-MIB", "mbnscModeTempUnit"), ("MOBANetClocksV2-MIB", "mbnscModeClockOpMode"), ("MOBANetClocksV2-MIB", "mbnscModeDispDerating"), ("MOBANetClocksV2-MIB", "mbnscModeLightCorr"), ("MOBANetClocksV2-MIB", "mbnscModeConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscModeConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscSensorsTempActivation"), ("MOBANetClocksV2-MIB", "mbnscSensorsTemp1IPAddr"), ("MOBANetClocksV2-MIB", "mbnscSensorsTemp2IPAddr"), ("MOBANetClocksV2-MIB", "mbnscSensorsConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscSensorsConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscGeneralType"), ("MOBANetClocksV2-MIB", "mbnscGeneralName"), ("MOBANetClocksV2-MIB", "mbnscGeneralFirmwareNumber"), ("MOBANetClocksV2-MIB", "mbnscGeneralFirmwareVer"), ("MOBANetClocksV2-MIB", "mbnscGeneralStatus"), ("MOBANetClocksV2-MIB", "mbnscGeneralAlarms"), ("MOBANetClocksV2-MIB", "mbnscGeneralConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscGeneralConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscSNMPManager1"), ("MOBANetClocksV2-MIB", "mbnscSNMPManager2"), ("MOBANetClocksV2-MIB", "mbnscSNMPTrapAliveMsgInterval"), ("MOBANetClocksV2-MIB", "mbnscSNMPConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscSNMPConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscCommandSWReset"), ("MOBANetClocksV2-MIB", "mbnscCommandConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorNr"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorState"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mbnscGrpDC = mbnscGrpDC.setStatus('current')
mbnscGrpECODC = ObjectGroup((1, 3, 6, 1, 4, 1, 13842, 6, 100, 2, 5)).setObjects(("MOBANetClocksV2-MIB", "mbnscNetGenMAC"), ("MOBANetClocksV2-MIB", "mbnscNetGenIPMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenIPNameserver"), ("MOBANetClocksV2-MIB", "mbnscNetGenTZClientPort"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigPort"), ("MOBANetClocksV2-MIB", "mbnscNetGenSnmpMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenMulticastMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenHostname"), ("MOBANetClocksV2-MIB", "mbnscNetGenCommMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenMCastGrpIP"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Addr"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Mask"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Gateway"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4DHCPMode"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4ConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4ConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrLocal"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrAuto"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrDHCP"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrFix"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Prefix"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Gateway"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Config"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6ConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6ConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP1"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP2"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP3"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP4"), ("MOBANetClocksV2-MIB", "mbnscTimeNTPcurrent"), ("MOBANetClocksV2-MIB", "mbnscTimeNTPpollIntervall"), ("MOBANetClocksV2-MIB", "mbnscTimeDeviceTime"), ("MOBANetClocksV2-MIB", "mbnscTimeLocOffset"), ("MOBANetClocksV2-MIB", "mbnscTimeLastReception"), ("MOBANetClocksV2-MIB", "mbnscTimeConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTimeConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneVersion"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneNumber"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscModeDisplayBrightness"), ("MOBANetClocksV2-MIB", "mbnscModeDisplayFormat"), ("MOBANetClocksV2-MIB", "mbnscModeDisplayAlternate"), ("MOBANetClocksV2-MIB", "mbnscModeDispDerating"), ("MOBANetClocksV2-MIB", "mbnscModeLightCorr"), ("MOBANetClocksV2-MIB", "mbnscModeConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscModeConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscGeneralType"), ("MOBANetClocksV2-MIB", "mbnscGeneralName"), ("MOBANetClocksV2-MIB", "mbnscGeneralFirmwareNumber"), ("MOBANetClocksV2-MIB", "mbnscGeneralFirmwareVer"), ("MOBANetClocksV2-MIB", "mbnscGeneralStatus"), ("MOBANetClocksV2-MIB", "mbnscGeneralAlarms"), ("MOBANetClocksV2-MIB", "mbnscGeneralConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscGeneralConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscSNMPManager1"), ("MOBANetClocksV2-MIB", "mbnscSNMPManager2"), ("MOBANetClocksV2-MIB", "mbnscSNMPTrapAliveMsgInterval"), ("MOBANetClocksV2-MIB", "mbnscSNMPConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscSNMPConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscCommandSWReset"), ("MOBANetClocksV2-MIB", "mbnscCommandConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorNr"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorState"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mbnscGrpECODC = mbnscGrpECODC.setStatus('current')
mbnscGrpDA = ObjectGroup((1, 3, 6, 1, 4, 1, 13842, 6, 100, 2, 6)).setObjects(("MOBANetClocksV2-MIB", "mbnscNetGenMAC"), ("MOBANetClocksV2-MIB", "mbnscNetGenIPMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenIPNameserver"), ("MOBANetClocksV2-MIB", "mbnscNetGenTZClientPort"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigPort"), ("MOBANetClocksV2-MIB", "mbnscNetGenSnmpMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenMulticastMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenHostname"), ("MOBANetClocksV2-MIB", "mbnscNetGenCommMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenMCastGrpIP"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Addr"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Mask"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Gateway"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4DHCPMode"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4ConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4ConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrLocal"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrAuto"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrDHCP"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrFix"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Prefix"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Gateway"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Config"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6ConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6ConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP1"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP2"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP3"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP4"), ("MOBANetClocksV2-MIB", "mbnscTimeNTPcurrent"), ("MOBANetClocksV2-MIB", "mbnscTimeNTPpollIntervall"), ("MOBANetClocksV2-MIB", "mbnscTimeDeviceTime"), ("MOBANetClocksV2-MIB", "mbnscTimeLocOffset"), ("MOBANetClocksV2-MIB", "mbnscTimeLastReception"), ("MOBANetClocksV2-MIB", "mbnscTimeConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTimeConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneVersion"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneNumber"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscModeDisplayBrightness"), ("MOBANetClocksV2-MIB", "mbnscModeDisplayFormat"), ("MOBANetClocksV2-MIB", "mbnscModeDisplayAlternate"), ("MOBANetClocksV2-MIB", "mbnscModeIRlock"), ("MOBANetClocksV2-MIB", "mbnscModeTimeDispZeros"), ("MOBANetClocksV2-MIB", "mbnscModeDateDispZeros"), ("MOBANetClocksV2-MIB", "mbnscModeTempUnit"), ("MOBANetClocksV2-MIB", "mbnscModeClockOpMode"), ("MOBANetClocksV2-MIB", "mbnscModeDispDerating"), ("MOBANetClocksV2-MIB", "mbnscModeLightCorr"), ("MOBANetClocksV2-MIB", "mbnscModeConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscModeConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscSensorsTempActivation"), ("MOBANetClocksV2-MIB", "mbnscSensorsTemp1IPAddr"), ("MOBANetClocksV2-MIB", "mbnscSensorsTemp2IPAddr"), ("MOBANetClocksV2-MIB", "mbnscSensorsConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscSensorsConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscDASecondCircleDisplay"), ("MOBANetClocksV2-MIB", "mbnscDAConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscDAConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscGeneralType"), ("MOBANetClocksV2-MIB", "mbnscGeneralName"), ("MOBANetClocksV2-MIB", "mbnscGeneralFirmwareNumber"), ("MOBANetClocksV2-MIB", "mbnscGeneralFirmwareVer"), ("MOBANetClocksV2-MIB", "mbnscGeneralStatus"), ("MOBANetClocksV2-MIB", "mbnscGeneralAlarms"), ("MOBANetClocksV2-MIB", "mbnscGeneralConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscGeneralConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscSNMPManager1"), ("MOBANetClocksV2-MIB", "mbnscSNMPManager2"), ("MOBANetClocksV2-MIB", "mbnscSNMPTrapAliveMsgInterval"), ("MOBANetClocksV2-MIB", "mbnscSNMPConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscSNMPConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscCommandSWReset"), ("MOBANetClocksV2-MIB", "mbnscCommandConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorNr"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorState"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mbnscGrpDA = mbnscGrpDA.setStatus('current')
mbnscGrpDK = ObjectGroup((1, 3, 6, 1, 4, 1, 13842, 6, 100, 2, 7)).setObjects(("MOBANetClocksV2-MIB", "mbnscNetGenMAC"), ("MOBANetClocksV2-MIB", "mbnscNetGenIPMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenIPNameserver"), ("MOBANetClocksV2-MIB", "mbnscNetGenTZClientPort"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigPort"), ("MOBANetClocksV2-MIB", "mbnscNetGenSnmpMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenMulticastMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenHostname"), ("MOBANetClocksV2-MIB", "mbnscNetGenCommMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenMCastGrpIP"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Addr"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Mask"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Gateway"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4DHCPMode"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4ConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4ConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrLocal"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrAuto"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrDHCP"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrFix"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Prefix"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Gateway"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Config"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6ConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6ConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP1"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP2"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP3"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP4"), ("MOBANetClocksV2-MIB", "mbnscTimeNTPcurrent"), ("MOBANetClocksV2-MIB", "mbnscTimeNTPpollIntervall"), ("MOBANetClocksV2-MIB", "mbnscTimeDeviceTime"), ("MOBANetClocksV2-MIB", "mbnscTimeLocOffset"), ("MOBANetClocksV2-MIB", "mbnscTimeLastReception"), ("MOBANetClocksV2-MIB", "mbnscTimeConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTimeConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneVersion"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneNumber"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscModeDisplayBrightness"), ("MOBANetClocksV2-MIB", "mbnscModeDisplayFormat"), ("MOBANetClocksV2-MIB", "mbnscModeDisplayAlternate"), ("MOBANetClocksV2-MIB", "mbnscModeIRlock"), ("MOBANetClocksV2-MIB", "mbnscModeTimeDispZeros"), ("MOBANetClocksV2-MIB", "mbnscModeDateDispZeros"), ("MOBANetClocksV2-MIB", "mbnscModeTempUnit"), ("MOBANetClocksV2-MIB", "mbnscModeClockOpMode"), ("MOBANetClocksV2-MIB", "mbnscModeDispDerating"), ("MOBANetClocksV2-MIB", "mbnscModeLightCorr"), ("MOBANetClocksV2-MIB", "mbnscModeConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscModeConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscSensorsTempActivation"), ("MOBANetClocksV2-MIB", "mbnscSensorsTemp1IPAddr"), ("MOBANetClocksV2-MIB", "mbnscSensorsTemp2IPAddr"), ("MOBANetClocksV2-MIB", "mbnscSensorsConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscSensorsConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscDKFirstLanguage"), ("MOBANetClocksV2-MIB", "mbnscDKSecondLanguage"), ("MOBANetClocksV2-MIB", "mbnscDKThirdLanguage"), ("MOBANetClocksV2-MIB", "mbnscDKTempUnitSecondLang"), ("MOBANetClocksV2-MIB", "mbnscDKTempUnitThirdLang"), ("MOBANetClocksV2-MIB", "mbnscDKAutoLangSwitchOver"), ("MOBANetClocksV2-MIB", "mbnscDKNumOfCharsForWeekday"), ("MOBANetClocksV2-MIB", "mbnscDKNamesFormatDisplay"), ("MOBANetClocksV2-MIB", "mbnscDKTemp1DescriptEnable"), ("MOBANetClocksV2-MIB", "mbnscDKTemp1Description"), ("MOBANetClocksV2-MIB", "mbnscDKTemp2DescriptEnable"), ("MOBANetClocksV2-MIB", "mbnscDKTemp2Description"), ("MOBANetClocksV2-MIB", "mbnscDKWorldTimeZone1"), ("MOBANetClocksV2-MIB", "mbnscDKWorldTimeZone1Description"), ("MOBANetClocksV2-MIB", "mbnscDKWorldTimeZone2"), ("MOBANetClocksV2-MIB", "mbnscDKWorldTimeZone2Description"), ("MOBANetClocksV2-MIB", "mbnscDKWorldTimeZone3"), ("MOBANetClocksV2-MIB", "mbnscDKWorldTimeZone3Description"), ("MOBANetClocksV2-MIB", "mbnscDKWorldTimeZone4"), ("MOBANetClocksV2-MIB", "mbnscDKWorldTimeZone4Description"), ("MOBANetClocksV2-MIB", "mbnscDKWorldTimeZone5"), ("MOBANetClocksV2-MIB", "mbnscDKWorldTimeZone5Description"), ("MOBANetClocksV2-MIB", "mbnscDKAutoTimeZoneSwitchOver"), ("MOBANetClocksV2-MIB", "mbnscDKConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscDKConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscGeneralType"), ("MOBANetClocksV2-MIB", "mbnscGeneralName"), ("MOBANetClocksV2-MIB", "mbnscGeneralFirmwareNumber"), ("MOBANetClocksV2-MIB", "mbnscGeneralFirmwareVer"), ("MOBANetClocksV2-MIB", "mbnscGeneralStatus"), ("MOBANetClocksV2-MIB", "mbnscGeneralAlarms"), ("MOBANetClocksV2-MIB", "mbnscGeneralConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscGeneralConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscSNMPManager1"), ("MOBANetClocksV2-MIB", "mbnscSNMPManager2"), ("MOBANetClocksV2-MIB", "mbnscSNMPTrapAliveMsgInterval"), ("MOBANetClocksV2-MIB", "mbnscSNMPConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscSNMPConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscCommandSWReset"), ("MOBANetClocksV2-MIB", "mbnscCommandConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorNr"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorState"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mbnscGrpDK = mbnscGrpDK.setStatus('current')
mbnscGrpNMI = ObjectGroup((1, 3, 6, 1, 4, 1, 13842, 6, 100, 2, 8)).setObjects(("MOBANetClocksV2-MIB", "mbnscNetGenMAC"), ("MOBANetClocksV2-MIB", "mbnscNetGenIPMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenIPNameserver"), ("MOBANetClocksV2-MIB", "mbnscNetGenTZClientPort"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigPort"), ("MOBANetClocksV2-MIB", "mbnscNetGenSnmpMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenMulticastMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenHostname"), ("MOBANetClocksV2-MIB", "mbnscNetGenCommMode"), ("MOBANetClocksV2-MIB", "mbnscNetGenMCastGrpIP"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetGenConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Addr"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Mask"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4Gateway"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4DHCPMode"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4ConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetIPv4ConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrLocal"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrAuto"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrDHCP"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6AddrFix"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Prefix"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Gateway"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6Config"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6ConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNetIPv6ConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP1"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP2"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP3"), ("MOBANetClocksV2-MIB", "mbnscTimeNTP4"), ("MOBANetClocksV2-MIB", "mbnscTimeNTPcurrent"), ("MOBANetClocksV2-MIB", "mbnscTimeNTPpollIntervall"), ("MOBANetClocksV2-MIB", "mbnscTimeDeviceTime"), ("MOBANetClocksV2-MIB", "mbnscTimeLocOffset"), ("MOBANetClocksV2-MIB", "mbnscTimeLastReception"), ("MOBANetClocksV2-MIB", "mbnscTimeConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTimeConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneVersion"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneNumber"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscModeConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscModeConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscNMIDCFCurrentLoop"), ("MOBANetClocksV2-MIB", "mbnscNMILineDriver"), ("MOBANetClocksV2-MIB", "mbnscNMIMOBALineMode"), ("MOBANetClocksV2-MIB", "mbnscNMIMOBALineMinuteHandMode"), ("MOBANetClocksV2-MIB", "mbnscNMIActiveDCFMode"), ("MOBANetClocksV2-MIB", "mbnscNMIConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscNMIConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscNMISideClock1"), ("MOBANetClocksV2-MIB", "mbnscNMISideClock2"), ("MOBANetClocksV2-MIB", "mbnscNMISideClock3"), ("MOBANetClocksV2-MIB", "mbnscNMISideClock4"), ("MOBANetClocksV2-MIB", "mbnscNMISideClock5"), ("MOBANetClocksV2-MIB", "mbnscNMISideClock6"), ("MOBANetClocksV2-MIB", "mbnscNMISideClock7"), ("MOBANetClocksV2-MIB", "mbnscNMISideClock8"), ("MOBANetClocksV2-MIB", "mbnscNMISideClock9"), ("MOBANetClocksV2-MIB", "mbnscNMISideClock10"), ("MOBANetClocksV2-MIB", "mbnscNMISideClock11"), ("MOBANetClocksV2-MIB", "mbnscNMISideClock12"), ("MOBANetClocksV2-MIB", "mbnscGeneralType"), ("MOBANetClocksV2-MIB", "mbnscGeneralName"), ("MOBANetClocksV2-MIB", "mbnscGeneralFirmwareNumber"), ("MOBANetClocksV2-MIB", "mbnscGeneralFirmwareVer"), ("MOBANetClocksV2-MIB", "mbnscGeneralStatus"), ("MOBANetClocksV2-MIB", "mbnscGeneralAlarms"), ("MOBANetClocksV2-MIB", "mbnscGeneralConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscGeneralConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscSNMPManager1"), ("MOBANetClocksV2-MIB", "mbnscSNMPManager2"), ("MOBANetClocksV2-MIB", "mbnscSNMPTrapAliveMsgInterval"), ("MOBANetClocksV2-MIB", "mbnscSNMPConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscSNMPConfigChangedTime"), ("MOBANetClocksV2-MIB", "mbnscCommand12Pos"), ("MOBANetClocksV2-MIB", "mbnscCommandSWReset"), ("MOBANetClocksV2-MIB", "mbnscCommandConfigCmd"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorNr"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorState"), ("MOBANetClocksV2-MIB", "mbnscTrapAlMsgErrorTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mbnscGrpNMI = mbnscGrpNMI.setStatus('current')
mbnscGrpNotUsedParameters = ObjectGroup((1, 3, 6, 1, 4, 1, 13842, 6, 100, 2, 100)).setObjects(("MOBANetClocksV2-MIB", "mbnscTimeZoneEntry1"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneEntry2"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneEntry3"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneEntry4"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneEntry5"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneEntry6"), ("MOBANetClocksV2-MIB", "mbnscTimeZoneEntry7"), ("MOBANetClocksV2-MIB", "mbnscModeSwitchInfo"), ("MOBANetClocksV2-MIB", "mbnscCommandFactorySetting"), ("MOBANetClocksV2-MIB", "mbnscCommandFirmwUpd"), ("MOBANetClocksV2-MIB", "mbnscCommandExtContact"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mbnscGrpNotUsedParameters = mbnscGrpNotUsedParameters.setStatus('current')
mibBuilder.exportSymbols("MOBANetClocksV2-MIB", mbnscNetGenIPNameserver=mbnscNetGenIPNameserver, mbnscTimeDeviceTime=mbnscTimeDeviceTime, mobaNetClocks=mobaNetClocks, mbnscSNMPManager2=mbnscSNMPManager2, mbnscGeneralSlaveInfo2=mbnscGeneralSlaveInfo2, mbnscNetIPv6ConfigChangedTime=mbnscNetIPv6ConfigChangedTime, mbnscDKWorldTimeZone1=mbnscDKWorldTimeZone1, mbnscSupervision=mbnscSupervision, mbnscGrpDK=mbnscGrpDK, mbnscDKTempUnitSecondLang=mbnscDKTempUnitSecondLang, mbnscGeneralConfigChangedTime=mbnscGeneralConfigChangedTime, mbnscNMISideClock5=mbnscNMISideClock5, mbnscTimeNTPcurrent=mbnscTimeNTPcurrent, mbnscNetGenMAC=mbnscNetGenMAC, mbnscNetIPv4Mask=mbnscNetIPv4Mask, mbnscDKNumOfCharsForWeekday=mbnscDKNumOfCharsForWeekday, mbnscModeNTP=mbnscModeNTP, mbnscDKFirstLanguage=mbnscDKFirstLanguage, mbnscNetGenConfigPort=mbnscNetGenConfigPort, mbnscGeneralFirmwareNumber=mbnscGeneralFirmwareNumber, mbnscGrpNotUsedParameters=mbnscGrpNotUsedParameters, mbnscDKConfigCmd=mbnscDKConfigCmd, mbnscNMISideClock7=mbnscNMISideClock7, mbnscGeneralSlaveInfo1=mbnscGeneralSlaveInfo1, mbnscNMISideClock6=mbnscNMISideClock6, mbnscGeneralAlarms=mbnscGeneralAlarms, mbnscSNMPTrapAliveMsgInterval=mbnscSNMPTrapAliveMsgInterval, mbnscMode=mbnscMode, mbnscTimeZoneConfigChangedTime=mbnscTimeZoneConfigChangedTime, mbnscTimeLastReception=mbnscTimeLastReception, mbnscSNMPManager1=mbnscSNMPManager1, mbnscCommandFactorySetting=mbnscCommandFactorySetting, mbnscNetIPv6AddrAuto=mbnscNetIPv6AddrAuto, mbnscNMISideClock2=mbnscNMISideClock2, mbnscTimeZone=mbnscTimeZone, mbnscNMIActiveDCFMode=mbnscNMIActiveDCFMode, mbnscNetIPv6AddrFix=mbnscNetIPv6AddrFix, mbnscTimeNTP4=mbnscTimeNTP4, mbnscTimeZoneEntry5=mbnscTimeZoneEntry5, mbnscNMILineDriver=mbnscNMILineDriver, mbnscCommandExtContact=mbnscCommandExtContact, mbnscNetIPv6AddrDHCP=mbnscNetIPv6AddrDHCP, mbnscTimeZoneEntry2=mbnscTimeZoneEntry2, mbnscTimeZoneEntry7=mbnscTimeZoneEntry7, mbnscNetGenMulticastMode=mbnscNetGenMulticastMode, mbnscNetGenConfigCmd=mbnscNetGenConfigCmd, mbnscModeLightCorr=mbnscModeLightCorr, mbnscGeneralStatus=mbnscGeneralStatus, mbnscDA=mbnscDA, mbnscDKWorldTimeZone1Description=mbnscDKWorldTimeZone1Description, mbnscAdditionalInterfaceModes=mbnscAdditionalInterfaceModes, mbnscSensorsTemp1IPAddr=mbnscSensorsTemp1IPAddr, mbnscTrapAlMsgErrorTime=mbnscTrapAlMsgErrorTime, mbnscNetIPv4ConfigChangedTime=mbnscNetIPv4ConfigChangedTime, mobaNetClocksV2=mobaNetClocksV2, mbnscNetGenConfigChangedTime=mbnscNetGenConfigChangedTime, mbnscModeDisplayFormat=mbnscModeDisplayFormat, mbnscNMISideClock10=mbnscNMISideClock10, mbnscNMIMOBALineMinuteHandMode=mbnscNMIMOBALineMinuteHandMode, mbnscModeSwitchInfo=mbnscModeSwitchInfo, mbnscNetIPv6ConfigCmd=mbnscNetIPv6ConfigCmd, mbnscGeneralName=mbnscGeneralName, mbnscTrapsAlarm=mbnscTrapsAlarm, mbnscNetGenTZClientPort=mbnscNetGenTZClientPort, mbnscModeDisplayBrightness=mbnscModeDisplayBrightness, mbnscDKThirdLanguage=mbnscDKThirdLanguage, mbnscDKWorldTimeZone3Description=mbnscDKWorldTimeZone3Description, mbnscGrpECODC=mbnscGrpECODC, mbnscTimeLocOffset=mbnscTimeLocOffset, mbnscDAConfigCmd=mbnscDAConfigCmd, mbnscModeTimeDispZeros=mbnscModeTimeDispZeros, mbnscNetGen=mbnscNetGen, mbnscGeneralSlaveInfo3=mbnscGeneralSlaveInfo3, mobatime=mobatime, mbnscNMIConfigChangedTime=mbnscNMIConfigChangedTime, mbnscTrapAlMsgErrorNr=mbnscTrapAlMsgErrorNr, mbnscDKNamesFormatDisplay=mbnscDKNamesFormatDisplay, mbnscSensorsTempActivation=mbnscSensorsTempActivation, mbnscCommand12Pos=mbnscCommand12Pos, mbnscSNMPConfigCmd=mbnscSNMPConfigCmd, mbnscDKAutoTimeZoneSwitchOver=mbnscDKAutoTimeZoneSwitchOver, mbnscNetIPv4=mbnscNetIPv4, mbnscModeDateDispZeros=mbnscModeDateDispZeros, mbnscNetGenMCastGrpIP=mbnscNetGenMCastGrpIP, mbnscGrpSEN40=mbnscGrpSEN40, mbnscDKSecondLanguage=mbnscDKSecondLanguage, mbnscTimeZoneEntry3=mbnscTimeZoneEntry3, mbnscNMIMOBALineMode=mbnscNMIMOBALineMode, mbnscDKWorldTimeZone3=mbnscDKWorldTimeZone3, mbnscNMISideClock9=mbnscNMISideClock9, mbnscCommandConfigCmd=mbnscCommandConfigCmd, mbnscGrpNMI=mbnscGrpNMI, mbnscTimeZoneVersion=mbnscTimeZoneVersion, mbnscNMIConfigCmd=mbnscNMIConfigCmd, mbnscGrpDA=mbnscGrpDA, mbnscModeDisplayAlternate=mbnscModeDisplayAlternate, mbnscSensors=mbnscSensors, mbnscNetIPv6AddrLocal=mbnscNetIPv6AddrLocal, mbnscDKTemp2DescriptEnable=mbnscDKTemp2DescriptEnable, mbnscTimeZoneEntry6=mbnscTimeZoneEntry6, mbnscTimeNTPpollIntervall=mbnscTimeNTPpollIntervall, mbnscTrapAlMsgErrorState=mbnscTrapAlMsgErrorState, mbnscTimeConfigCmd=mbnscTimeConfigCmd, MOBANetworkName=MOBANetworkName, mbnscNetIPv6Prefix=mbnscNetIPv6Prefix, mbnscDKTemp2Description=mbnscDKTemp2Description, mbnscNMISideClock3=mbnscNMISideClock3, mbnscNetIPv4Gateway=mbnscNetIPv4Gateway, mbnscSNMPConfigChangedTime=mbnscSNMPConfigChangedTime, mbnscNMISideClock12=mbnscNMISideClock12, mbnscGeneral=mbnscGeneral, mbnscDKWorldTimeZone4Description=mbnscDKWorldTimeZone4Description, MOBAFlags64=MOBAFlags64, mbnscNMISideClockState=mbnscNMISideClockState, mbnscNMISideClock8=mbnscNMISideClock8, mbnscTrapsAlive=mbnscTrapsAlive, mbnscModeClockOpMode=mbnscModeClockOpMode, mbnscModeTempUnit=mbnscModeTempUnit, mbnscNetIPv4ConfigCmd=mbnscNetIPv4ConfigCmd, mbnscGrpDC=mbnscGrpDC, mbnscSnmpConfig=mbnscSnmpConfig, mbnscSensorsTemp2IPAddr=mbnscSensorsTemp2IPAddr, mbnscMIBCompliances=mbnscMIBCompliances, mbnscGrpNBU190=mbnscGrpNBU190, mbnscDKTemp1Description=mbnscDKTemp1Description, mbnscNMIDCFCurrentLoop=mbnscNMIDCFCurrentLoop, mbnscGeneralConfigCmd=mbnscGeneralConfigCmd, mbnscModeDispDerating=mbnscModeDispDerating, mbnscNetIPv6Config=mbnscNetIPv6Config, mbnscDKTempUnitThirdLang=mbnscDKTempUnitThirdLang, mbnscDK=mbnscDK, mbnscTimeConfigChangedTime=mbnscTimeConfigChangedTime, mbnscGeneralFirmwareVer=mbnscGeneralFirmwareVer, mbnscNet=mbnscNet, mbnscDAConfigChangedTime=mbnscDAConfigChangedTime, mbnscNetIPv6Gateway=mbnscNetIPv6Gateway, mbnscNMISideClock11=mbnscNMISideClock11, PYSNMP_MODULE_ID=mbnscMIB, mbnscMIBGroups=mbnscMIBGroups, mbnscModeIRlock=mbnscModeIRlock, mbnscTimeZoneEntry1=mbnscTimeZoneEntry1, mbnscTimeZoneEntry4=mbnscTimeZoneEntry4, mbnscTimeNTP2=mbnscTimeNTP2, mbnscCommandSWReset=mbnscCommandSWReset, mbnscDKWorldTimeZone2=mbnscDKWorldTimeZone2, mbnscDKTemp1DescriptEnable=mbnscDKTemp1DescriptEnable, mbnscNetGenSnmpMode=mbnscNetGenSnmpMode, mbnscAdditionalDigitalClockModes=mbnscAdditionalDigitalClockModes, mbnscTraps=mbnscTraps, mbnscDKWorldTimeZone5Description=mbnscDKWorldTimeZone5Description, mbnscTimeNTP3=mbnscTimeNTP3, mbnscSnmpCurrentAlarmInfo=mbnscSnmpCurrentAlarmInfo, mbnscTimeZoneNumber=mbnscTimeZoneNumber, mbnscNetIPv4DHCPMode=mbnscNetIPv4DHCPMode, mbnscTimeNTP1=mbnscTimeNTP1, mbnscNetIPv4Addr=mbnscNetIPv4Addr, mbnscNMISideClock4=mbnscNMISideClock4, mbnscTimeZoneConfigCmd=mbnscTimeZoneConfigCmd, mbnscDKAutoLangSwitchOver=mbnscDKAutoLangSwitchOver, mbnscCommandFirmwUpd=mbnscCommandFirmwUpd, mbnscMIBCompliance=mbnscMIBCompliance, mbnscNetIPv6=mbnscNetIPv6, MOBAAlarm64=MOBAAlarm64, mbnscSensorsConfigCmd=mbnscSensorsConfigCmd, mbnscGeneralType=mbnscGeneralType, mbnscNetGenCommMode=mbnscNetGenCommMode, mbnscDKWorldTimeZone4=mbnscDKWorldTimeZone4, mbnscDASecondCircleDisplay=mbnscDASecondCircleDisplay, mbnscNetGenIPMode=mbnscNetGenIPMode, mbnscDKWorldTimeZone2Description=mbnscDKWorldTimeZone2Description, mbnscModeConfigCmd=mbnscModeConfigCmd, mbnscCommand=mbnscCommand, mbnscTime=mbnscTime, mbnscSensorsConfigChangedTime=mbnscSensorsConfigChangedTime, mbnscDKWorldTimeZone5=mbnscDKWorldTimeZone5, mbnscNMISideClock1=mbnscNMISideClock1, mbnscModeConfigChangedTime=mbnscModeConfigChangedTime, mbnscNMI=mbnscNMI, mbnscAllNotifications=mbnscAllNotifications, mbnscNetGenHostname=mbnscNetGenHostname, mbnscMIB=mbnscMIB, mbnscModeNWParam=mbnscModeNWParam, mbnscDKConfigChangedTime=mbnscDKConfigChangedTime)
