#
# PySNMP MIB module PIM-STD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PIM-STD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:03:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
IANAipRouteProtocol, = mibBuilder.importSymbols("IANA-RTPROTO-MIB", "IANAipRouteProtocol")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
InetAddressType, InetVersion, InetAddressPrefixLength, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetVersion", "InetAddressPrefixLength", "InetAddress")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ModuleIdentity, Gauge32, TimeTicks, iso, MibIdentifier, Bits, Counter64, Counter32, ObjectIdentity, Unsigned32, mib_2 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ModuleIdentity", "Gauge32", "TimeTicks", "iso", "MibIdentifier", "Bits", "Counter64", "Counter32", "ObjectIdentity", "Unsigned32", "mib-2")
DisplayString, TextualConvention, StorageType, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "StorageType", "RowStatus", "TruthValue")
pimStdMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 157))
pimStdMIB.setRevisions(('2007-11-02 00:00',))
if mibBuilder.loadTexts: pimStdMIB.setLastUpdated('200711020000Z')
if mibBuilder.loadTexts: pimStdMIB.setOrganization('IETF Protocol Independent Multicast (PIM) Working Group')
class PimMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("none", 1), ("ssm", 2), ("asm", 3), ("bidir", 4), ("dm", 5), ("other", 6))

class PimGroupMappingOriginType(TextualConvention, Integer32):
    reference = 'RFC 3569, RFC 3956, and RFC 5059'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("fixed", 1), ("configRp", 2), ("configSsm", 3), ("bsr", 4), ("autoRP", 5), ("embedded", 6), ("other", 7))

pimNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 157, 0))
pim = MibIdentifier((1, 3, 6, 1, 2, 1, 157, 1))
pimKeepalivePeriod = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(210)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pimKeepalivePeriod.setStatus('current')
pimRegisterSuppressionTime = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pimRegisterSuppressionTime.setStatus('current')
pimStarGEntries = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGEntries.setStatus('current')
pimStarGIEntries = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGIEntries.setStatus('current')
pimSGEntries = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGEntries.setStatus('current')
pimSGIEntries = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGIEntries.setStatus('current')
pimSGRptEntries = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRptEntries.setStatus('current')
pimSGRptIEntries = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRptIEntries.setStatus('current')
pimOutAsserts = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimOutAsserts.setStatus('current')
pimInAsserts = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInAsserts.setStatus('current')
pimLastAssertInterface = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 24), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimLastAssertInterface.setStatus('current')
pimLastAssertGroupAddressType = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 25), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimLastAssertGroupAddressType.setStatus('current')
pimLastAssertGroupAddress = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 26), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimLastAssertGroupAddress.setStatus('current')
pimLastAssertSourceAddressType = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 27), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimLastAssertSourceAddressType.setStatus('current')
pimLastAssertSourceAddress = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 28), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimLastAssertSourceAddress.setStatus('current')
pimNeighborLossNotificationPeriod = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pimNeighborLossNotificationPeriod.setStatus('current')
pimNeighborLossCount = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimNeighborLossCount.setStatus('current')
pimInvalidRegisterNotificationPeriod = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 65535)).clone(65535)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pimInvalidRegisterNotificationPeriod.setStatus('current')
pimInvalidRegisterMsgsRcvd = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInvalidRegisterMsgsRcvd.setStatus('current')
pimInvalidRegisterAddressType = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 33), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInvalidRegisterAddressType.setStatus('current')
pimInvalidRegisterOrigin = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 34), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInvalidRegisterOrigin.setStatus('current')
pimInvalidRegisterGroup = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 35), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInvalidRegisterGroup.setStatus('current')
pimInvalidRegisterRp = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 36), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInvalidRegisterRp.setStatus('current')
pimInvalidJoinPruneNotificationPeriod = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 37), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 65535)).clone(65535)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pimInvalidJoinPruneNotificationPeriod.setStatus('current')
pimInvalidJoinPruneMsgsRcvd = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInvalidJoinPruneMsgsRcvd.setStatus('current')
pimInvalidJoinPruneAddressType = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 39), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInvalidJoinPruneAddressType.setStatus('current')
pimInvalidJoinPruneOrigin = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 40), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInvalidJoinPruneOrigin.setStatus('current')
pimInvalidJoinPruneGroup = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 41), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInvalidJoinPruneGroup.setStatus('current')
pimInvalidJoinPruneRp = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 42), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInvalidJoinPruneRp.setStatus('current')
pimRPMappingNotificationPeriod = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 43), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pimRPMappingNotificationPeriod.setStatus('current')
pimRPMappingChangeCount = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimRPMappingChangeCount.setStatus('current')
pimInterfaceElectionNotificationPeriod = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 45), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pimInterfaceElectionNotificationPeriod.setStatus('current')
pimInterfaceElectionWinCount = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInterfaceElectionWinCount.setStatus('current')
pimRefreshInterval = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 47), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pimRefreshInterval.setStatus('current')
pimDeviceConfigStorageType = MibScalar((1, 3, 6, 1, 2, 1, 157, 1, 48), StorageType().clone('nonVolatile')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pimDeviceConfigStorageType.setStatus('current')
pimInterfaceTable = MibTable((1, 3, 6, 1, 2, 1, 157, 1, 1), )
if mibBuilder.loadTexts: pimInterfaceTable.setStatus('current')
pimInterfaceEntry = MibTableRow((1, 3, 6, 1, 2, 1, 157, 1, 1, 1), ).setIndexNames((0, "PIM-STD-MIB", "pimInterfaceIfIndex"), (0, "PIM-STD-MIB", "pimInterfaceIPVersion"))
if mibBuilder.loadTexts: pimInterfaceEntry.setStatus('current')
pimInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: pimInterfaceIfIndex.setStatus('current')
pimInterfaceIPVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 2), InetVersion())
if mibBuilder.loadTexts: pimInterfaceIPVersion.setStatus('current')
pimInterfaceAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInterfaceAddressType.setStatus('current')
pimInterfaceAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInterfaceAddress.setStatus('current')
pimInterfaceGenerationIDValue = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInterfaceGenerationIDValue.setStatus('current')
pimInterfaceDR = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInterfaceDR.setStatus('current')
pimInterfaceDRPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 7), Unsigned32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimInterfaceDRPriority.setStatus('current')
pimInterfaceDRPriorityEnabled = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInterfaceDRPriorityEnabled.setStatus('current')
pimInterfaceHelloInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 18000)).clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimInterfaceHelloInterval.setStatus('current')
pimInterfaceTrigHelloInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimInterfaceTrigHelloInterval.setStatus('current')
pimInterfaceHelloHoldtime = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(105)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimInterfaceHelloHoldtime.setStatus('current')
pimInterfaceJoinPruneInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 18000)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimInterfaceJoinPruneInterval.setStatus('current')
pimInterfaceJoinPruneHoldtime = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(210)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimInterfaceJoinPruneHoldtime.setStatus('current')
pimInterfaceDFElectionRobustness = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 14), Unsigned32().clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimInterfaceDFElectionRobustness.setStatus('current')
pimInterfaceLanDelayEnabled = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInterfaceLanDelayEnabled.setStatus('current')
pimInterfacePropagationDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767)).clone(500)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimInterfacePropagationDelay.setStatus('current')
pimInterfaceOverrideInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(2500)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimInterfaceOverrideInterval.setStatus('current')
pimInterfaceEffectPropagDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInterfaceEffectPropagDelay.setStatus('current')
pimInterfaceEffectOverrideIvl = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInterfaceEffectOverrideIvl.setStatus('current')
pimInterfaceSuppressionEnabled = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInterfaceSuppressionEnabled.setStatus('current')
pimInterfaceBidirCapable = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInterfaceBidirCapable.setStatus('current')
pimInterfaceDomainBorder = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 22), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimInterfaceDomainBorder.setStatus('current')
pimInterfaceStubInterface = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 23), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimInterfaceStubInterface.setStatus('current')
pimInterfacePruneLimitInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimInterfacePruneLimitInterval.setStatus('current')
pimInterfaceGraftRetryInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(3)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimInterfaceGraftRetryInterval.setStatus('current')
pimInterfaceSRPriorityEnabled = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 26), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimInterfaceSRPriorityEnabled.setStatus('current')
pimInterfaceStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 27), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimInterfaceStatus.setStatus('current')
pimInterfaceStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 1, 1, 28), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimInterfaceStorageType.setStatus('current')
pimNeighborTable = MibTable((1, 3, 6, 1, 2, 1, 157, 1, 2), )
if mibBuilder.loadTexts: pimNeighborTable.setStatus('current')
pimNeighborEntry = MibTableRow((1, 3, 6, 1, 2, 1, 157, 1, 2, 1), ).setIndexNames((0, "PIM-STD-MIB", "pimNeighborIfIndex"), (0, "PIM-STD-MIB", "pimNeighborAddressType"), (0, "PIM-STD-MIB", "pimNeighborAddress"))
if mibBuilder.loadTexts: pimNeighborEntry.setStatus('current')
pimNeighborIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: pimNeighborIfIndex.setStatus('current')
pimNeighborAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 2, 1, 2), InetAddressType())
if mibBuilder.loadTexts: pimNeighborAddressType.setStatus('current')
pimNeighborAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 2, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: pimNeighborAddress.setStatus('current')
pimNeighborGenerationIDPresent = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimNeighborGenerationIDPresent.setStatus('current')
pimNeighborGenerationIDValue = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimNeighborGenerationIDValue.setStatus('current')
pimNeighborUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 2, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimNeighborUpTime.setStatus('current')
pimNeighborExpiryTime = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 2, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimNeighborExpiryTime.setStatus('current')
pimNeighborDRPriorityPresent = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimNeighborDRPriorityPresent.setStatus('current')
pimNeighborDRPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimNeighborDRPriority.setStatus('current')
pimNeighborLanPruneDelayPresent = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 2, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimNeighborLanPruneDelayPresent.setStatus('current')
pimNeighborTBit = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 2, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimNeighborTBit.setStatus('current')
pimNeighborPropagationDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimNeighborPropagationDelay.setStatus('current')
pimNeighborOverrideInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimNeighborOverrideInterval.setStatus('current')
pimNeighborBidirCapable = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 2, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimNeighborBidirCapable.setStatus('current')
pimNeighborSRCapable = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 2, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimNeighborSRCapable.setStatus('current')
pimNbrSecAddressTable = MibTable((1, 3, 6, 1, 2, 1, 157, 1, 3), )
if mibBuilder.loadTexts: pimNbrSecAddressTable.setStatus('current')
pimNbrSecAddressEntry = MibTableRow((1, 3, 6, 1, 2, 1, 157, 1, 3, 1), ).setIndexNames((0, "PIM-STD-MIB", "pimNbrSecAddressIfIndex"), (0, "PIM-STD-MIB", "pimNbrSecAddressType"), (0, "PIM-STD-MIB", "pimNbrSecAddressPrimary"), (0, "PIM-STD-MIB", "pimNbrSecAddress"))
if mibBuilder.loadTexts: pimNbrSecAddressEntry.setStatus('current')
pimNbrSecAddressIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: pimNbrSecAddressIfIndex.setStatus('current')
pimNbrSecAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 3, 1, 2), InetAddressType())
if mibBuilder.loadTexts: pimNbrSecAddressType.setStatus('current')
pimNbrSecAddressPrimary = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 3, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: pimNbrSecAddressPrimary.setStatus('current')
pimNbrSecAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 3, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimNbrSecAddress.setStatus('current')
pimStarGTable = MibTable((1, 3, 6, 1, 2, 1, 157, 1, 4), )
if mibBuilder.loadTexts: pimStarGTable.setStatus('current')
pimStarGEntry = MibTableRow((1, 3, 6, 1, 2, 1, 157, 1, 4, 1), ).setIndexNames((0, "PIM-STD-MIB", "pimStarGAddressType"), (0, "PIM-STD-MIB", "pimStarGGrpAddress"))
if mibBuilder.loadTexts: pimStarGEntry.setStatus('current')
pimStarGAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: pimStarGAddressType.setStatus('current')
pimStarGGrpAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: pimStarGGrpAddress.setStatus('current')
pimStarGUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGUpTime.setStatus('current')
pimStarGPimMode = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 4), PimMode().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4))).clone(namedValues=NamedValues(("asm", 3), ("bidir", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGPimMode.setStatus('current')
pimStarGRPAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGRPAddressType.setStatus('current')
pimStarGRPAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGRPAddress.setStatus('current')
pimStarGPimModeOrigin = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 7), PimGroupMappingOriginType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGPimModeOrigin.setStatus('current')
pimStarGRPIsLocal = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGRPIsLocal.setStatus('current')
pimStarGUpstreamJoinState = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notJoined", 1), ("joined", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGUpstreamJoinState.setStatus('current')
pimStarGUpstreamJoinTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGUpstreamJoinTimer.setStatus('current')
pimStarGUpstreamNeighborType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 11), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGUpstreamNeighborType.setStatus('current')
pimStarGUpstreamNeighbor = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 12), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGUpstreamNeighbor.setStatus('current')
pimStarGRPFIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 13), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGRPFIfIndex.setStatus('current')
pimStarGRPFNextHopType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 14), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGRPFNextHopType.setStatus('current')
pimStarGRPFNextHop = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 15), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGRPFNextHop.setStatus('current')
pimStarGRPFRouteProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 16), IANAipRouteProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGRPFRouteProtocol.setStatus('current')
pimStarGRPFRouteAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 17), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGRPFRouteAddress.setStatus('current')
pimStarGRPFRoutePrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 18), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGRPFRoutePrefixLength.setStatus('current')
pimStarGRPFRouteMetricPref = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGRPFRouteMetricPref.setStatus('current')
pimStarGRPFRouteMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 4, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGRPFRouteMetric.setStatus('current')
pimStarGITable = MibTable((1, 3, 6, 1, 2, 1, 157, 1, 5), )
if mibBuilder.loadTexts: pimStarGITable.setStatus('current')
pimStarGIEntry = MibTableRow((1, 3, 6, 1, 2, 1, 157, 1, 5, 1), ).setIndexNames((0, "PIM-STD-MIB", "pimStarGAddressType"), (0, "PIM-STD-MIB", "pimStarGGrpAddress"), (0, "PIM-STD-MIB", "pimStarGIIfIndex"))
if mibBuilder.loadTexts: pimStarGIEntry.setStatus('current')
pimStarGIIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: pimStarGIIfIndex.setStatus('current')
pimStarGIUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 5, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGIUpTime.setStatus('current')
pimStarGILocalMembership = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGILocalMembership.setStatus('current')
pimStarGIJoinPruneState = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noInfo", 1), ("join", 2), ("prunePending", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGIJoinPruneState.setStatus('current')
pimStarGIPrunePendingTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 5, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGIPrunePendingTimer.setStatus('current')
pimStarGIJoinExpiryTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 5, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGIJoinExpiryTimer.setStatus('current')
pimStarGIAssertState = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noInfo", 1), ("iAmAssertWinner", 2), ("iAmAssertLoser", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGIAssertState.setStatus('current')
pimStarGIAssertTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 5, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGIAssertTimer.setStatus('current')
pimStarGIAssertWinnerAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 5, 1, 9), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGIAssertWinnerAddressType.setStatus('current')
pimStarGIAssertWinnerAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 5, 1, 10), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGIAssertWinnerAddress.setStatus('current')
pimStarGIAssertWinnerMetricPref = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 5, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGIAssertWinnerMetricPref.setStatus('current')
pimStarGIAssertWinnerMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 5, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimStarGIAssertWinnerMetric.setStatus('current')
pimSGTable = MibTable((1, 3, 6, 1, 2, 1, 157, 1, 6), )
if mibBuilder.loadTexts: pimSGTable.setStatus('current')
pimSGEntry = MibTableRow((1, 3, 6, 1, 2, 1, 157, 1, 6, 1), ).setIndexNames((0, "PIM-STD-MIB", "pimSGAddressType"), (0, "PIM-STD-MIB", "pimSGGrpAddress"), (0, "PIM-STD-MIB", "pimSGSrcAddress"))
if mibBuilder.loadTexts: pimSGEntry.setStatus('current')
pimSGAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 1), InetAddressType())
if mibBuilder.loadTexts: pimSGAddressType.setStatus('current')
pimSGGrpAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: pimSGGrpAddress.setStatus('current')
pimSGSrcAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: pimSGSrcAddress.setStatus('current')
pimSGUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGUpTime.setStatus('current')
pimSGPimMode = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 5), PimMode().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("ssm", 2), ("asm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGPimMode.setStatus('current')
pimSGUpstreamJoinState = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notJoined", 1), ("joined", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGUpstreamJoinState.setStatus('current')
pimSGUpstreamJoinTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGUpstreamJoinTimer.setStatus('current')
pimSGUpstreamNeighbor = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 8), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGUpstreamNeighbor.setStatus('current')
pimSGRPFIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 9), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRPFIfIndex.setStatus('current')
pimSGRPFNextHopType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 10), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRPFNextHopType.setStatus('current')
pimSGRPFNextHop = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 11), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRPFNextHop.setStatus('current')
pimSGRPFRouteProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 12), IANAipRouteProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRPFRouteProtocol.setStatus('current')
pimSGRPFRouteAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 13), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRPFRouteAddress.setStatus('current')
pimSGRPFRoutePrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 14), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRPFRoutePrefixLength.setStatus('current')
pimSGRPFRouteMetricPref = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRPFRouteMetricPref.setStatus('current')
pimSGRPFRouteMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRPFRouteMetric.setStatus('current')
pimSGSPTBit = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGSPTBit.setStatus('current')
pimSGKeepaliveTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 18), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGKeepaliveTimer.setStatus('current')
pimSGDRRegisterState = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noInfo", 1), ("join", 2), ("joinPending", 3), ("prune", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGDRRegisterState.setStatus('current')
pimSGDRRegisterStopTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 20), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGDRRegisterStopTimer.setStatus('current')
pimSGRPRegisterPMBRAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 21), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRPRegisterPMBRAddressType.setStatus('current')
pimSGRPRegisterPMBRAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 22), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRPRegisterPMBRAddress.setStatus('current')
pimSGUpstreamPruneState = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forwarding", 1), ("ackpending", 2), ("pruned", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGUpstreamPruneState.setStatus('current')
pimSGUpstreamPruneLimitTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 24), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGUpstreamPruneLimitTimer.setStatus('current')
pimSGOriginatorState = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notOriginator", 1), ("originator", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGOriginatorState.setStatus('current')
pimSGSourceActiveTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 26), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGSourceActiveTimer.setStatus('current')
pimSGStateRefreshTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 6, 1, 27), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGStateRefreshTimer.setStatus('current')
pimSGITable = MibTable((1, 3, 6, 1, 2, 1, 157, 1, 7), )
if mibBuilder.loadTexts: pimSGITable.setStatus('current')
pimSGIEntry = MibTableRow((1, 3, 6, 1, 2, 1, 157, 1, 7, 1), ).setIndexNames((0, "PIM-STD-MIB", "pimSGAddressType"), (0, "PIM-STD-MIB", "pimSGGrpAddress"), (0, "PIM-STD-MIB", "pimSGSrcAddress"), (0, "PIM-STD-MIB", "pimSGIIfIndex"))
if mibBuilder.loadTexts: pimSGIEntry.setStatus('current')
pimSGIIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 7, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: pimSGIIfIndex.setStatus('current')
pimSGIUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 7, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGIUpTime.setStatus('current')
pimSGILocalMembership = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 7, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGILocalMembership.setStatus('current')
pimSGIJoinPruneState = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noInfo", 1), ("join", 2), ("prunePending", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGIJoinPruneState.setStatus('current')
pimSGIPrunePendingTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 7, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGIPrunePendingTimer.setStatus('current')
pimSGIJoinExpiryTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 7, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGIJoinExpiryTimer.setStatus('current')
pimSGIAssertState = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noInfo", 1), ("iAmAssertWinner", 2), ("iAmAssertLoser", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGIAssertState.setStatus('current')
pimSGIAssertTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 7, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGIAssertTimer.setStatus('current')
pimSGIAssertWinnerAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 7, 1, 9), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGIAssertWinnerAddressType.setStatus('current')
pimSGIAssertWinnerAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 7, 1, 10), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGIAssertWinnerAddress.setStatus('current')
pimSGIAssertWinnerMetricPref = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 7, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGIAssertWinnerMetricPref.setStatus('current')
pimSGIAssertWinnerMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 7, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGIAssertWinnerMetric.setStatus('current')
pimSGRptTable = MibTable((1, 3, 6, 1, 2, 1, 157, 1, 8), )
if mibBuilder.loadTexts: pimSGRptTable.setStatus('current')
pimSGRptEntry = MibTableRow((1, 3, 6, 1, 2, 1, 157, 1, 8, 1), ).setIndexNames((0, "PIM-STD-MIB", "pimStarGAddressType"), (0, "PIM-STD-MIB", "pimStarGGrpAddress"), (0, "PIM-STD-MIB", "pimSGRptSrcAddress"))
if mibBuilder.loadTexts: pimSGRptEntry.setStatus('current')
pimSGRptSrcAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 8, 1, 1), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: pimSGRptSrcAddress.setStatus('current')
pimSGRptUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 8, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRptUpTime.setStatus('current')
pimSGRptUpstreamPruneState = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rptNotJoined", 1), ("pruned", 2), ("notPruned", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRptUpstreamPruneState.setStatus('current')
pimSGRptUpstreamOverrideTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 8, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRptUpstreamOverrideTimer.setStatus('current')
pimSGRptITable = MibTable((1, 3, 6, 1, 2, 1, 157, 1, 9), )
if mibBuilder.loadTexts: pimSGRptITable.setStatus('current')
pimSGRptIEntry = MibTableRow((1, 3, 6, 1, 2, 1, 157, 1, 9, 1), ).setIndexNames((0, "PIM-STD-MIB", "pimStarGAddressType"), (0, "PIM-STD-MIB", "pimStarGGrpAddress"), (0, "PIM-STD-MIB", "pimSGRptSrcAddress"), (0, "PIM-STD-MIB", "pimSGRptIIfIndex"))
if mibBuilder.loadTexts: pimSGRptIEntry.setStatus('current')
pimSGRptIIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 9, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: pimSGRptIIfIndex.setStatus('current')
pimSGRptIUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 9, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRptIUpTime.setStatus('current')
pimSGRptILocalMembership = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 9, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRptILocalMembership.setStatus('current')
pimSGRptIJoinPruneState = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noInfo", 1), ("prune", 2), ("prunePending", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRptIJoinPruneState.setStatus('current')
pimSGRptIPrunePendingTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 9, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRptIPrunePendingTimer.setStatus('current')
pimSGRptIPruneExpiryTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 9, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimSGRptIPruneExpiryTimer.setStatus('current')
pimBidirDFElectionTable = MibTable((1, 3, 6, 1, 2, 1, 157, 1, 10), )
if mibBuilder.loadTexts: pimBidirDFElectionTable.setStatus('current')
pimBidirDFElectionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 157, 1, 10, 1), ).setIndexNames((0, "PIM-STD-MIB", "pimBidirDFElectionAddressType"), (0, "PIM-STD-MIB", "pimBidirDFElectionRPAddress"), (0, "PIM-STD-MIB", "pimBidirDFElectionIfIndex"))
if mibBuilder.loadTexts: pimBidirDFElectionEntry.setStatus('current')
pimBidirDFElectionAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 10, 1, 1), InetAddressType())
if mibBuilder.loadTexts: pimBidirDFElectionAddressType.setStatus('current')
pimBidirDFElectionRPAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 10, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: pimBidirDFElectionRPAddress.setStatus('current')
pimBidirDFElectionIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 10, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: pimBidirDFElectionIfIndex.setStatus('current')
pimBidirDFElectionWinnerAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 10, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBidirDFElectionWinnerAddressType.setStatus('current')
pimBidirDFElectionWinnerAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 10, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBidirDFElectionWinnerAddress.setStatus('current')
pimBidirDFElectionWinnerUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 10, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBidirDFElectionWinnerUpTime.setStatus('current')
pimBidirDFElectionWinnerMetricPref = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 10, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBidirDFElectionWinnerMetricPref.setStatus('current')
pimBidirDFElectionWinnerMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 10, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBidirDFElectionWinnerMetric.setStatus('current')
pimBidirDFElectionState = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dfOffer", 1), ("dfLose", 2), ("dfWinner", 3), ("dfBackoff", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBidirDFElectionState.setStatus('current')
pimBidirDFElectionStateTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 10, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBidirDFElectionStateTimer.setStatus('current')
pimStaticRPTable = MibTable((1, 3, 6, 1, 2, 1, 157, 1, 11), )
if mibBuilder.loadTexts: pimStaticRPTable.setStatus('current')
pimStaticRPEntry = MibTableRow((1, 3, 6, 1, 2, 1, 157, 1, 11, 1), ).setIndexNames((0, "PIM-STD-MIB", "pimStaticRPAddressType"), (0, "PIM-STD-MIB", "pimStaticRPGrpAddress"), (0, "PIM-STD-MIB", "pimStaticRPGrpPrefixLength"))
if mibBuilder.loadTexts: pimStaticRPEntry.setStatus('current')
pimStaticRPAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 11, 1, 1), InetAddressType())
if mibBuilder.loadTexts: pimStaticRPAddressType.setStatus('current')
pimStaticRPGrpAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 11, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: pimStaticRPGrpAddress.setStatus('current')
pimStaticRPGrpPrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 11, 1, 3), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(4, 128)))
if mibBuilder.loadTexts: pimStaticRPGrpPrefixLength.setStatus('current')
pimStaticRPRPAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 11, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimStaticRPRPAddress.setStatus('current')
pimStaticRPPimMode = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 11, 1, 5), PimMode().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("ssm", 2), ("asm", 3), ("bidir", 4))).clone('asm')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimStaticRPPimMode.setStatus('current')
pimStaticRPOverrideDynamic = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 11, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimStaticRPOverrideDynamic.setStatus('current')
pimStaticRPPrecedence = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 11, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimStaticRPPrecedence.setStatus('current')
pimStaticRPRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 11, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimStaticRPRowStatus.setStatus('current')
pimStaticRPStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 11, 1, 9), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimStaticRPStorageType.setStatus('current')
pimAnycastRPSetTable = MibTable((1, 3, 6, 1, 2, 1, 157, 1, 12), )
if mibBuilder.loadTexts: pimAnycastRPSetTable.setStatus('current')
pimAnycastRPSetEntry = MibTableRow((1, 3, 6, 1, 2, 1, 157, 1, 12, 1), ).setIndexNames((0, "PIM-STD-MIB", "pimAnycastRPSetAddressType"), (0, "PIM-STD-MIB", "pimAnycastRPSetAnycastAddress"), (0, "PIM-STD-MIB", "pimAnycastRPSetRouterAddress"))
if mibBuilder.loadTexts: pimAnycastRPSetEntry.setStatus('current')
pimAnycastRPSetAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 12, 1, 1), InetAddressType())
if mibBuilder.loadTexts: pimAnycastRPSetAddressType.setStatus('current')
pimAnycastRPSetAnycastAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 12, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: pimAnycastRPSetAnycastAddress.setStatus('current')
pimAnycastRPSetRouterAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 12, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: pimAnycastRPSetRouterAddress.setStatus('current')
pimAnycastRPSetLocalRouter = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 12, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimAnycastRPSetLocalRouter.setStatus('current')
pimAnycastRPSetRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 12, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimAnycastRPSetRowStatus.setStatus('current')
pimAnycastRPSetStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 12, 1, 6), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimAnycastRPSetStorageType.setStatus('current')
pimGroupMappingTable = MibTable((1, 3, 6, 1, 2, 1, 157, 1, 13), )
if mibBuilder.loadTexts: pimGroupMappingTable.setStatus('current')
pimGroupMappingEntry = MibTableRow((1, 3, 6, 1, 2, 1, 157, 1, 13, 1), ).setIndexNames((0, "PIM-STD-MIB", "pimGroupMappingOrigin"), (0, "PIM-STD-MIB", "pimGroupMappingAddressType"), (0, "PIM-STD-MIB", "pimGroupMappingGrpAddress"), (0, "PIM-STD-MIB", "pimGroupMappingGrpPrefixLength"), (0, "PIM-STD-MIB", "pimGroupMappingRPAddressType"), (0, "PIM-STD-MIB", "pimGroupMappingRPAddress"))
if mibBuilder.loadTexts: pimGroupMappingEntry.setStatus('current')
pimGroupMappingOrigin = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 13, 1, 1), PimGroupMappingOriginType())
if mibBuilder.loadTexts: pimGroupMappingOrigin.setStatus('current')
pimGroupMappingAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 13, 1, 2), InetAddressType())
if mibBuilder.loadTexts: pimGroupMappingAddressType.setStatus('current')
pimGroupMappingGrpAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 13, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: pimGroupMappingGrpAddress.setStatus('current')
pimGroupMappingGrpPrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 13, 1, 4), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(4, 128)))
if mibBuilder.loadTexts: pimGroupMappingGrpPrefixLength.setStatus('current')
pimGroupMappingRPAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 13, 1, 5), InetAddressType())
if mibBuilder.loadTexts: pimGroupMappingRPAddressType.setStatus('current')
pimGroupMappingRPAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 13, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: pimGroupMappingRPAddress.setStatus('current')
pimGroupMappingPimMode = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 13, 1, 7), PimMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimGroupMappingPimMode.setStatus('current')
pimGroupMappingPrecedence = MibTableColumn((1, 3, 6, 1, 2, 1, 157, 1, 13, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimGroupMappingPrecedence.setStatus('current')
pimNeighborLoss = NotificationType((1, 3, 6, 1, 2, 1, 157, 0, 1)).setObjects(("PIM-STD-MIB", "pimNeighborUpTime"))
if mibBuilder.loadTexts: pimNeighborLoss.setStatus('current')
pimInvalidRegister = NotificationType((1, 3, 6, 1, 2, 1, 157, 0, 2)).setObjects(("PIM-STD-MIB", "pimGroupMappingPimMode"), ("PIM-STD-MIB", "pimInvalidRegisterAddressType"), ("PIM-STD-MIB", "pimInvalidRegisterOrigin"), ("PIM-STD-MIB", "pimInvalidRegisterGroup"), ("PIM-STD-MIB", "pimInvalidRegisterRp"))
if mibBuilder.loadTexts: pimInvalidRegister.setStatus('current')
pimInvalidJoinPrune = NotificationType((1, 3, 6, 1, 2, 1, 157, 0, 3)).setObjects(("PIM-STD-MIB", "pimGroupMappingPimMode"), ("PIM-STD-MIB", "pimInvalidJoinPruneAddressType"), ("PIM-STD-MIB", "pimInvalidJoinPruneOrigin"), ("PIM-STD-MIB", "pimInvalidJoinPruneGroup"), ("PIM-STD-MIB", "pimInvalidJoinPruneRp"), ("PIM-STD-MIB", "pimNeighborUpTime"))
if mibBuilder.loadTexts: pimInvalidJoinPrune.setStatus('current')
pimRPMappingChange = NotificationType((1, 3, 6, 1, 2, 1, 157, 0, 4)).setObjects(("PIM-STD-MIB", "pimGroupMappingPimMode"), ("PIM-STD-MIB", "pimGroupMappingPrecedence"))
if mibBuilder.loadTexts: pimRPMappingChange.setStatus('current')
pimInterfaceElection = NotificationType((1, 3, 6, 1, 2, 1, 157, 0, 5)).setObjects(("PIM-STD-MIB", "pimInterfaceAddressType"), ("PIM-STD-MIB", "pimInterfaceAddress"))
if mibBuilder.loadTexts: pimInterfaceElection.setStatus('current')
pimMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 157, 2))
pimMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 157, 2, 1))
pimMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 157, 2, 2))
pimMIBComplianceAsm = ModuleCompliance((1, 3, 6, 1, 2, 1, 157, 2, 1, 1)).setObjects(("PIM-STD-MIB", "pimTopologyGroup"), ("PIM-STD-MIB", "pimSsmGroup"), ("PIM-STD-MIB", "pimRPConfigGroup"), ("PIM-STD-MIB", "pimSmGroup"), ("PIM-STD-MIB", "pimNotificationGroup"), ("PIM-STD-MIB", "pimTuningParametersGroup"), ("PIM-STD-MIB", "pimRouterStatisticsGroup"), ("PIM-STD-MIB", "pimAnycastRpGroup"), ("PIM-STD-MIB", "pimStaticRPPrecedenceGroup"), ("PIM-STD-MIB", "pimNetMgmtNotificationObjects"), ("PIM-STD-MIB", "pimNetMgmtNotificationGroup"), ("PIM-STD-MIB", "pimDiagnosticsGroup"), ("PIM-STD-MIB", "pimDeviceStorageGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimMIBComplianceAsm = pimMIBComplianceAsm.setStatus('current')
pimMIBComplianceBidir = ModuleCompliance((1, 3, 6, 1, 2, 1, 157, 2, 1, 2)).setObjects(("PIM-STD-MIB", "pimTopologyGroup"), ("PIM-STD-MIB", "pimRPConfigGroup"), ("PIM-STD-MIB", "pimSmGroup"), ("PIM-STD-MIB", "pimBidirGroup"), ("PIM-STD-MIB", "pimNotificationGroup"), ("PIM-STD-MIB", "pimTuningParametersGroup"), ("PIM-STD-MIB", "pimRouterStatisticsGroup"), ("PIM-STD-MIB", "pimAnycastRpGroup"), ("PIM-STD-MIB", "pimStaticRPPrecedenceGroup"), ("PIM-STD-MIB", "pimNetMgmtNotificationObjects"), ("PIM-STD-MIB", "pimNetMgmtNotificationGroup"), ("PIM-STD-MIB", "pimDiagnosticsGroup"), ("PIM-STD-MIB", "pimDeviceStorageGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimMIBComplianceBidir = pimMIBComplianceBidir.setStatus('current')
pimMIBComplianceSsm = ModuleCompliance((1, 3, 6, 1, 2, 1, 157, 2, 1, 3)).setObjects(("PIM-STD-MIB", "pimTopologyGroup"), ("PIM-STD-MIB", "pimSsmGroup"), ("PIM-STD-MIB", "pimNotificationGroup"), ("PIM-STD-MIB", "pimTuningParametersGroup"), ("PIM-STD-MIB", "pimRouterStatisticsGroup"), ("PIM-STD-MIB", "pimNetMgmtNotificationObjects"), ("PIM-STD-MIB", "pimNetMgmtNotificationGroup"), ("PIM-STD-MIB", "pimDiagnosticsGroup"), ("PIM-STD-MIB", "pimDeviceStorageGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimMIBComplianceSsm = pimMIBComplianceSsm.setStatus('current')
pimMIBComplianceDm = ModuleCompliance((1, 3, 6, 1, 2, 1, 157, 2, 1, 4)).setObjects(("PIM-STD-MIB", "pimTopologyGroup"), ("PIM-STD-MIB", "pimSsmGroup"), ("PIM-STD-MIB", "pimRPConfigGroup"), ("PIM-STD-MIB", "pimSmGroup"), ("PIM-STD-MIB", "pimDmGroup"), ("PIM-STD-MIB", "pimNotificationGroup"), ("PIM-STD-MIB", "pimTuningParametersGroup"), ("PIM-STD-MIB", "pimRouterStatisticsGroup"), ("PIM-STD-MIB", "pimAnycastRpGroup"), ("PIM-STD-MIB", "pimStaticRPPrecedenceGroup"), ("PIM-STD-MIB", "pimNetMgmtNotificationObjects"), ("PIM-STD-MIB", "pimNetMgmtNotificationGroup"), ("PIM-STD-MIB", "pimDiagnosticsGroup"), ("PIM-STD-MIB", "pimDeviceStorageGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimMIBComplianceDm = pimMIBComplianceDm.setStatus('current')
pimTopologyGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 157, 2, 2, 1)).setObjects(("PIM-STD-MIB", "pimInterfaceAddressType"), ("PIM-STD-MIB", "pimInterfaceAddress"), ("PIM-STD-MIB", "pimInterfaceGenerationIDValue"), ("PIM-STD-MIB", "pimInterfaceDR"), ("PIM-STD-MIB", "pimInterfaceDRPriorityEnabled"), ("PIM-STD-MIB", "pimInterfaceHelloHoldtime"), ("PIM-STD-MIB", "pimInterfaceJoinPruneHoldtime"), ("PIM-STD-MIB", "pimInterfaceLanDelayEnabled"), ("PIM-STD-MIB", "pimInterfaceEffectPropagDelay"), ("PIM-STD-MIB", "pimInterfaceEffectOverrideIvl"), ("PIM-STD-MIB", "pimInterfaceSuppressionEnabled"), ("PIM-STD-MIB", "pimInterfaceBidirCapable"), ("PIM-STD-MIB", "pimNeighborGenerationIDPresent"), ("PIM-STD-MIB", "pimNeighborGenerationIDValue"), ("PIM-STD-MIB", "pimNeighborUpTime"), ("PIM-STD-MIB", "pimNeighborExpiryTime"), ("PIM-STD-MIB", "pimNeighborDRPriorityPresent"), ("PIM-STD-MIB", "pimNeighborDRPriority"), ("PIM-STD-MIB", "pimNeighborLanPruneDelayPresent"), ("PIM-STD-MIB", "pimNeighborTBit"), ("PIM-STD-MIB", "pimNeighborPropagationDelay"), ("PIM-STD-MIB", "pimNeighborOverrideInterval"), ("PIM-STD-MIB", "pimNeighborBidirCapable"), ("PIM-STD-MIB", "pimNbrSecAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimTopologyGroup = pimTopologyGroup.setStatus('current')
pimNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 157, 2, 2, 2)).setObjects(("PIM-STD-MIB", "pimNeighborLoss"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimNotificationGroup = pimNotificationGroup.setStatus('current')
pimTuningParametersGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 157, 2, 2, 3)).setObjects(("PIM-STD-MIB", "pimKeepalivePeriod"), ("PIM-STD-MIB", "pimRegisterSuppressionTime"), ("PIM-STD-MIB", "pimInterfaceDRPriority"), ("PIM-STD-MIB", "pimInterfaceHelloInterval"), ("PIM-STD-MIB", "pimInterfaceTrigHelloInterval"), ("PIM-STD-MIB", "pimInterfaceJoinPruneInterval"), ("PIM-STD-MIB", "pimInterfacePropagationDelay"), ("PIM-STD-MIB", "pimInterfaceOverrideInterval"), ("PIM-STD-MIB", "pimInterfaceDomainBorder"), ("PIM-STD-MIB", "pimInterfaceStubInterface"), ("PIM-STD-MIB", "pimInterfaceStatus"), ("PIM-STD-MIB", "pimInterfaceStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimTuningParametersGroup = pimTuningParametersGroup.setStatus('current')
pimRouterStatisticsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 157, 2, 2, 4)).setObjects(("PIM-STD-MIB", "pimStarGEntries"), ("PIM-STD-MIB", "pimStarGIEntries"), ("PIM-STD-MIB", "pimSGEntries"), ("PIM-STD-MIB", "pimSGIEntries"), ("PIM-STD-MIB", "pimSGRptEntries"), ("PIM-STD-MIB", "pimSGRptIEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimRouterStatisticsGroup = pimRouterStatisticsGroup.setStatus('current')
pimSsmGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 157, 2, 2, 5)).setObjects(("PIM-STD-MIB", "pimSGUpTime"), ("PIM-STD-MIB", "pimSGPimMode"), ("PIM-STD-MIB", "pimSGUpstreamJoinState"), ("PIM-STD-MIB", "pimSGUpstreamJoinTimer"), ("PIM-STD-MIB", "pimSGUpstreamNeighbor"), ("PIM-STD-MIB", "pimSGRPFIfIndex"), ("PIM-STD-MIB", "pimSGRPFNextHopType"), ("PIM-STD-MIB", "pimSGRPFNextHop"), ("PIM-STD-MIB", "pimSGRPFRouteProtocol"), ("PIM-STD-MIB", "pimSGRPFRouteAddress"), ("PIM-STD-MIB", "pimSGRPFRoutePrefixLength"), ("PIM-STD-MIB", "pimSGRPFRouteMetricPref"), ("PIM-STD-MIB", "pimSGRPFRouteMetric"), ("PIM-STD-MIB", "pimSGSPTBit"), ("PIM-STD-MIB", "pimSGKeepaliveTimer"), ("PIM-STD-MIB", "pimSGDRRegisterState"), ("PIM-STD-MIB", "pimSGDRRegisterStopTimer"), ("PIM-STD-MIB", "pimSGRPRegisterPMBRAddressType"), ("PIM-STD-MIB", "pimSGRPRegisterPMBRAddress"), ("PIM-STD-MIB", "pimSGIUpTime"), ("PIM-STD-MIB", "pimSGILocalMembership"), ("PIM-STD-MIB", "pimSGIJoinPruneState"), ("PIM-STD-MIB", "pimSGIPrunePendingTimer"), ("PIM-STD-MIB", "pimSGIJoinExpiryTimer"), ("PIM-STD-MIB", "pimSGIAssertState"), ("PIM-STD-MIB", "pimSGIAssertTimer"), ("PIM-STD-MIB", "pimSGIAssertWinnerAddressType"), ("PIM-STD-MIB", "pimSGIAssertWinnerAddress"), ("PIM-STD-MIB", "pimSGIAssertWinnerMetricPref"), ("PIM-STD-MIB", "pimSGIAssertWinnerMetric"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimSsmGroup = pimSsmGroup.setStatus('current')
pimRPConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 157, 2, 2, 6)).setObjects(("PIM-STD-MIB", "pimStaticRPRPAddress"), ("PIM-STD-MIB", "pimStaticRPPimMode"), ("PIM-STD-MIB", "pimStaticRPOverrideDynamic"), ("PIM-STD-MIB", "pimStaticRPRowStatus"), ("PIM-STD-MIB", "pimStaticRPStorageType"), ("PIM-STD-MIB", "pimGroupMappingPimMode"), ("PIM-STD-MIB", "pimGroupMappingPrecedence"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimRPConfigGroup = pimRPConfigGroup.setStatus('current')
pimSmGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 157, 2, 2, 7)).setObjects(("PIM-STD-MIB", "pimStarGUpTime"), ("PIM-STD-MIB", "pimStarGPimMode"), ("PIM-STD-MIB", "pimStarGRPAddressType"), ("PIM-STD-MIB", "pimStarGRPAddress"), ("PIM-STD-MIB", "pimStarGPimModeOrigin"), ("PIM-STD-MIB", "pimStarGRPIsLocal"), ("PIM-STD-MIB", "pimStarGUpstreamJoinState"), ("PIM-STD-MIB", "pimStarGUpstreamJoinTimer"), ("PIM-STD-MIB", "pimStarGUpstreamNeighborType"), ("PIM-STD-MIB", "pimStarGUpstreamNeighbor"), ("PIM-STD-MIB", "pimStarGRPFIfIndex"), ("PIM-STD-MIB", "pimStarGRPFNextHopType"), ("PIM-STD-MIB", "pimStarGRPFNextHop"), ("PIM-STD-MIB", "pimStarGRPFRouteProtocol"), ("PIM-STD-MIB", "pimStarGRPFRouteAddress"), ("PIM-STD-MIB", "pimStarGRPFRoutePrefixLength"), ("PIM-STD-MIB", "pimStarGRPFRouteMetricPref"), ("PIM-STD-MIB", "pimStarGRPFRouteMetric"), ("PIM-STD-MIB", "pimStarGIUpTime"), ("PIM-STD-MIB", "pimStarGILocalMembership"), ("PIM-STD-MIB", "pimStarGIJoinPruneState"), ("PIM-STD-MIB", "pimStarGIPrunePendingTimer"), ("PIM-STD-MIB", "pimStarGIJoinExpiryTimer"), ("PIM-STD-MIB", "pimStarGIAssertState"), ("PIM-STD-MIB", "pimStarGIAssertTimer"), ("PIM-STD-MIB", "pimStarGIAssertWinnerAddressType"), ("PIM-STD-MIB", "pimStarGIAssertWinnerAddress"), ("PIM-STD-MIB", "pimStarGIAssertWinnerMetricPref"), ("PIM-STD-MIB", "pimStarGIAssertWinnerMetric"), ("PIM-STD-MIB", "pimSGRptUpTime"), ("PIM-STD-MIB", "pimSGRptUpstreamPruneState"), ("PIM-STD-MIB", "pimSGRptUpstreamOverrideTimer"), ("PIM-STD-MIB", "pimSGRptIUpTime"), ("PIM-STD-MIB", "pimSGRptILocalMembership"), ("PIM-STD-MIB", "pimSGRptIJoinPruneState"), ("PIM-STD-MIB", "pimSGRptIPrunePendingTimer"), ("PIM-STD-MIB", "pimSGRptIPruneExpiryTimer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimSmGroup = pimSmGroup.setStatus('current')
pimBidirGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 157, 2, 2, 8)).setObjects(("PIM-STD-MIB", "pimInterfaceDFElectionRobustness"), ("PIM-STD-MIB", "pimBidirDFElectionWinnerAddressType"), ("PIM-STD-MIB", "pimBidirDFElectionWinnerAddress"), ("PIM-STD-MIB", "pimBidirDFElectionWinnerUpTime"), ("PIM-STD-MIB", "pimBidirDFElectionWinnerMetricPref"), ("PIM-STD-MIB", "pimBidirDFElectionWinnerMetric"), ("PIM-STD-MIB", "pimBidirDFElectionState"), ("PIM-STD-MIB", "pimBidirDFElectionStateTimer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimBidirGroup = pimBidirGroup.setStatus('current')
pimAnycastRpGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 157, 2, 2, 9)).setObjects(("PIM-STD-MIB", "pimAnycastRPSetLocalRouter"), ("PIM-STD-MIB", "pimAnycastRPSetRowStatus"), ("PIM-STD-MIB", "pimAnycastRPSetStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimAnycastRpGroup = pimAnycastRpGroup.setStatus('current')
pimStaticRPPrecedenceGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 157, 2, 2, 10)).setObjects(("PIM-STD-MIB", "pimStaticRPPrecedence"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimStaticRPPrecedenceGroup = pimStaticRPPrecedenceGroup.setStatus('current')
pimNetMgmtNotificationObjects = ObjectGroup((1, 3, 6, 1, 2, 1, 157, 2, 2, 11)).setObjects(("PIM-STD-MIB", "pimInvalidRegisterNotificationPeriod"), ("PIM-STD-MIB", "pimInvalidRegisterMsgsRcvd"), ("PIM-STD-MIB", "pimInvalidRegisterAddressType"), ("PIM-STD-MIB", "pimInvalidRegisterOrigin"), ("PIM-STD-MIB", "pimInvalidRegisterGroup"), ("PIM-STD-MIB", "pimInvalidRegisterRp"), ("PIM-STD-MIB", "pimInvalidJoinPruneNotificationPeriod"), ("PIM-STD-MIB", "pimInvalidJoinPruneMsgsRcvd"), ("PIM-STD-MIB", "pimInvalidJoinPruneAddressType"), ("PIM-STD-MIB", "pimInvalidJoinPruneOrigin"), ("PIM-STD-MIB", "pimInvalidJoinPruneGroup"), ("PIM-STD-MIB", "pimInvalidJoinPruneRp"), ("PIM-STD-MIB", "pimRPMappingNotificationPeriod"), ("PIM-STD-MIB", "pimRPMappingChangeCount"), ("PIM-STD-MIB", "pimInterfaceElectionNotificationPeriod"), ("PIM-STD-MIB", "pimInterfaceElectionWinCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimNetMgmtNotificationObjects = pimNetMgmtNotificationObjects.setStatus('current')
pimNetMgmtNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 157, 2, 2, 12)).setObjects(("PIM-STD-MIB", "pimInvalidRegister"), ("PIM-STD-MIB", "pimInvalidJoinPrune"), ("PIM-STD-MIB", "pimRPMappingChange"), ("PIM-STD-MIB", "pimInterfaceElection"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimNetMgmtNotificationGroup = pimNetMgmtNotificationGroup.setStatus('current')
pimDiagnosticsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 157, 2, 2, 13)).setObjects(("PIM-STD-MIB", "pimInAsserts"), ("PIM-STD-MIB", "pimOutAsserts"), ("PIM-STD-MIB", "pimLastAssertInterface"), ("PIM-STD-MIB", "pimLastAssertGroupAddressType"), ("PIM-STD-MIB", "pimLastAssertGroupAddress"), ("PIM-STD-MIB", "pimLastAssertSourceAddressType"), ("PIM-STD-MIB", "pimLastAssertSourceAddress"), ("PIM-STD-MIB", "pimNeighborLossNotificationPeriod"), ("PIM-STD-MIB", "pimNeighborLossCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimDiagnosticsGroup = pimDiagnosticsGroup.setStatus('current')
pimDmGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 157, 2, 2, 14)).setObjects(("PIM-STD-MIB", "pimRefreshInterval"), ("PIM-STD-MIB", "pimInterfacePruneLimitInterval"), ("PIM-STD-MIB", "pimInterfaceGraftRetryInterval"), ("PIM-STD-MIB", "pimInterfaceSRPriorityEnabled"), ("PIM-STD-MIB", "pimNeighborSRCapable"), ("PIM-STD-MIB", "pimSGUpstreamPruneState"), ("PIM-STD-MIB", "pimSGUpstreamPruneLimitTimer"), ("PIM-STD-MIB", "pimSGOriginatorState"), ("PIM-STD-MIB", "pimSGSourceActiveTimer"), ("PIM-STD-MIB", "pimSGStateRefreshTimer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimDmGroup = pimDmGroup.setStatus('current')
pimDeviceStorageGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 157, 2, 2, 15)).setObjects(("PIM-STD-MIB", "pimDeviceConfigStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimDeviceStorageGroup = pimDeviceStorageGroup.setStatus('current')
mibBuilder.exportSymbols("PIM-STD-MIB", pimInterfaceGraftRetryInterval=pimInterfaceGraftRetryInterval, pimNeighborUpTime=pimNeighborUpTime, pimOutAsserts=pimOutAsserts, pimSGRptIEntries=pimSGRptIEntries, pimSGOriginatorState=pimSGOriginatorState, pimSGRPRegisterPMBRAddress=pimSGRPRegisterPMBRAddress, pimInterfaceElectionNotificationPeriod=pimInterfaceElectionNotificationPeriod, pimNeighborBidirCapable=pimNeighborBidirCapable, pimStarGIPrunePendingTimer=pimStarGIPrunePendingTimer, pimStarGRPFRouteAddress=pimStarGRPFRouteAddress, pimBidirDFElectionWinnerUpTime=pimBidirDFElectionWinnerUpTime, pimInterfaceDR=pimInterfaceDR, pimStarGUpstreamJoinState=pimStarGUpstreamJoinState, pimStaticRPPrecedence=pimStaticRPPrecedence, pimSGIAssertTimer=pimSGIAssertTimer, pimNeighborEntry=pimNeighborEntry, pimInvalidRegisterNotificationPeriod=pimInvalidRegisterNotificationPeriod, pimStarGIJoinExpiryTimer=pimStarGIJoinExpiryTimer, pimSGUpstreamJoinState=pimSGUpstreamJoinState, pimSGIAssertWinnerAddressType=pimSGIAssertWinnerAddressType, pimSGRPFRouteMetricPref=pimSGRPFRouteMetricPref, pimKeepalivePeriod=pimKeepalivePeriod, pimSGStateRefreshTimer=pimSGStateRefreshTimer, pimStarGPimMode=pimStarGPimMode, pimGroupMappingPrecedence=pimGroupMappingPrecedence, pimInterfaceSuppressionEnabled=pimInterfaceSuppressionEnabled, pimStarGIEntry=pimStarGIEntry, pimSGRPFRouteMetric=pimSGRPFRouteMetric, pimBidirDFElectionEntry=pimBidirDFElectionEntry, pimRPMappingChange=pimRPMappingChange, pimMIBComplianceSsm=pimMIBComplianceSsm, pimStarGRPFRouteMetricPref=pimStarGRPFRouteMetricPref, pimStarGRPFRoutePrefixLength=pimStarGRPFRoutePrefixLength, pimSGUpTime=pimSGUpTime, pimSGGrpAddress=pimSGGrpAddress, pimNotificationGroup=pimNotificationGroup, pimTuningParametersGroup=pimTuningParametersGroup, pimInvalidJoinPruneNotificationPeriod=pimInvalidJoinPruneNotificationPeriod, pimNeighborSRCapable=pimNeighborSRCapable, pimLastAssertGroupAddress=pimLastAssertGroupAddress, pimNeighborLossNotificationPeriod=pimNeighborLossNotificationPeriod, pimDeviceConfigStorageType=pimDeviceConfigStorageType, pimAnycastRPSetAnycastAddress=pimAnycastRPSetAnycastAddress, pimNeighborOverrideInterval=pimNeighborOverrideInterval, pimInvalidJoinPruneRp=pimInvalidJoinPruneRp, pimInterfaceAddress=pimInterfaceAddress, pimStarGIAssertWinnerMetricPref=pimStarGIAssertWinnerMetricPref, pimAnycastRPSetLocalRouter=pimAnycastRPSetLocalRouter, pimMIBComplianceBidir=pimMIBComplianceBidir, pimNetMgmtNotificationGroup=pimNetMgmtNotificationGroup, pimNbrSecAddressType=pimNbrSecAddressType, pimSGRptUpstreamPruneState=pimSGRptUpstreamPruneState, pimRPMappingNotificationPeriod=pimRPMappingNotificationPeriod, pimStarGUpstreamJoinTimer=pimStarGUpstreamJoinTimer, pimRPConfigGroup=pimRPConfigGroup, pimNbrSecAddressPrimary=pimNbrSecAddressPrimary, pimGroupMappingGrpPrefixLength=pimGroupMappingGrpPrefixLength, pimBidirDFElectionWinnerAddressType=pimBidirDFElectionWinnerAddressType, pimMIBGroups=pimMIBGroups, pimSmGroup=pimSmGroup, pimDmGroup=pimDmGroup, pimStarGILocalMembership=pimStarGILocalMembership, pimRouterStatisticsGroup=pimRouterStatisticsGroup, pimInvalidJoinPruneGroup=pimInvalidJoinPruneGroup, pimBidirDFElectionWinnerAddress=pimBidirDFElectionWinnerAddress, pimInterfaceHelloInterval=pimInterfaceHelloInterval, pimBidirGroup=pimBidirGroup, pimStarGGrpAddress=pimStarGGrpAddress, pimStarGIAssertWinnerAddressType=pimStarGIAssertWinnerAddressType, pimStarGIUpTime=pimStarGIUpTime, pimMIBCompliances=pimMIBCompliances, pimAnycastRpGroup=pimAnycastRpGroup, pimSGITable=pimSGITable, pimMIBConformance=pimMIBConformance, pimInterfacePropagationDelay=pimInterfacePropagationDelay, pimStaticRPEntry=pimStaticRPEntry, pimAnycastRPSetAddressType=pimAnycastRPSetAddressType, pimAnycastRPSetTable=pimAnycastRPSetTable, pimNeighborDRPriorityPresent=pimNeighborDRPriorityPresent, pimInterfaceDRPriorityEnabled=pimInterfaceDRPriorityEnabled, pimInterfaceDFElectionRobustness=pimInterfaceDFElectionRobustness, pimDiagnosticsGroup=pimDiagnosticsGroup, pimAnycastRPSetRowStatus=pimAnycastRPSetRowStatus, pimSGRptEntry=pimSGRptEntry, pimStarGRPFIfIndex=pimStarGRPFIfIndex, pimInterfaceTrigHelloInterval=pimInterfaceTrigHelloInterval, pimNeighborLossCount=pimNeighborLossCount, pimSGIUpTime=pimSGIUpTime, pimNeighborTBit=pimNeighborTBit, pimStarGRPFRouteProtocol=pimStarGRPFRouteProtocol, pimSGUpstreamPruneState=pimSGUpstreamPruneState, pimNeighborDRPriority=pimNeighborDRPriority, pimInterfaceTable=pimInterfaceTable, pimStarGPimModeOrigin=pimStarGPimModeOrigin, pimStarGRPFRouteMetric=pimStarGRPFRouteMetric, pimSGIJoinExpiryTimer=pimSGIJoinExpiryTimer, pimSGRPFRouteProtocol=pimSGRPFRouteProtocol, pimStarGRPIsLocal=pimStarGRPIsLocal, pimNbrSecAddressIfIndex=pimNbrSecAddressIfIndex, pimStarGUpTime=pimStarGUpTime, pimSGRptIPrunePendingTimer=pimSGRptIPrunePendingTimer, pimAnycastRPSetEntry=pimAnycastRPSetEntry, pimInterfaceEffectPropagDelay=pimInterfaceEffectPropagDelay, pimInterfaceBidirCapable=pimInterfaceBidirCapable, pimInterfaceAddressType=pimInterfaceAddressType, pimGroupMappingPimMode=pimGroupMappingPimMode, pimStarGIAssertState=pimStarGIAssertState, pimNeighborLoss=pimNeighborLoss, pimSGIAssertWinnerMetric=pimSGIAssertWinnerMetric, pimSGIEntry=pimSGIEntry, pimGroupMappingEntry=pimGroupMappingEntry, pimLastAssertSourceAddress=pimLastAssertSourceAddress, pimMIBComplianceAsm=pimMIBComplianceAsm, pimStarGIEntries=pimStarGIEntries, pimSGKeepaliveTimer=pimSGKeepaliveTimer, pimInterfaceStatus=pimInterfaceStatus, pimNeighborAddress=pimNeighborAddress, pimRefreshInterval=pimRefreshInterval, pimInvalidRegister=pimInvalidRegister, PimMode=PimMode, pimInterfacePruneLimitInterval=pimInterfacePruneLimitInterval, pimInterfaceEntry=pimInterfaceEntry, pimSGRptIUpTime=pimSGRptIUpTime, pimInterfaceJoinPruneHoldtime=pimInterfaceJoinPruneHoldtime, pimStarGIJoinPruneState=pimStarGIJoinPruneState, pimSGRPFRouteAddress=pimSGRPFRouteAddress, pimStarGTable=pimStarGTable, PYSNMP_MODULE_ID=pimStdMIB, pimBidirDFElectionWinnerMetric=pimBidirDFElectionWinnerMetric, pimSGIAssertWinnerMetricPref=pimSGIAssertWinnerMetricPref, pimStarGIAssertTimer=pimStarGIAssertTimer, pimStaticRPGrpAddress=pimStaticRPGrpAddress, pimMIBComplianceDm=pimMIBComplianceDm, pimSGRptILocalMembership=pimSGRptILocalMembership, pimSGIPrunePendingTimer=pimSGIPrunePendingTimer, pimAnycastRPSetStorageType=pimAnycastRPSetStorageType, pimGroupMappingRPAddress=pimGroupMappingRPAddress, pimStaticRPAddressType=pimStaticRPAddressType, pimNetMgmtNotificationObjects=pimNetMgmtNotificationObjects, pimInterfaceStorageType=pimInterfaceStorageType, pimStarGAddressType=pimStarGAddressType, pimStarGIAssertWinnerMetric=pimStarGIAssertWinnerMetric, pimSGILocalMembership=pimSGILocalMembership, pimGroupMappingAddressType=pimGroupMappingAddressType, pim=pim, pimNeighborGenerationIDValue=pimNeighborGenerationIDValue, pimNeighborTable=pimNeighborTable, pimStarGUpstreamNeighborType=pimStarGUpstreamNeighborType, pimInterfaceSRPriorityEnabled=pimInterfaceSRPriorityEnabled, pimTopologyGroup=pimTopologyGroup, pimInterfaceGenerationIDValue=pimInterfaceGenerationIDValue, pimSGRptTable=pimSGRptTable, pimAnycastRPSetRouterAddress=pimAnycastRPSetRouterAddress, pimStarGRPAddress=pimStarGRPAddress, pimNeighborExpiryTime=pimNeighborExpiryTime, pimStarGRPFNextHop=pimStarGRPFNextHop, pimNotifications=pimNotifications, pimStarGIIfIndex=pimStarGIIfIndex, pimStaticRPGrpPrefixLength=pimStaticRPGrpPrefixLength, pimInterfaceElection=pimInterfaceElection, pimInterfaceOverrideInterval=pimInterfaceOverrideInterval, pimBidirDFElectionWinnerMetricPref=pimBidirDFElectionWinnerMetricPref, pimSGPimMode=pimSGPimMode, pimBidirDFElectionStateTimer=pimBidirDFElectionStateTimer, pimStaticRPStorageType=pimStaticRPStorageType, pimGroupMappingOrigin=pimGroupMappingOrigin, pimSGIEntries=pimSGIEntries, pimSGTable=pimSGTable, pimSGIAssertState=pimSGIAssertState, pimSGRptIIfIndex=pimSGRptIIfIndex, pimNeighborLanPruneDelayPresent=pimNeighborLanPruneDelayPresent, pimRegisterSuppressionTime=pimRegisterSuppressionTime, pimSGSourceActiveTimer=pimSGSourceActiveTimer, pimRPMappingChangeCount=pimRPMappingChangeCount, pimInterfaceIPVersion=pimInterfaceIPVersion, pimSGUpstreamJoinTimer=pimSGUpstreamJoinTimer, pimStarGRPAddressType=pimStarGRPAddressType, pimSGIIfIndex=pimSGIIfIndex, pimSGRPFRoutePrefixLength=pimSGRPFRoutePrefixLength, pimInvalidRegisterRp=pimInvalidRegisterRp, pimBidirDFElectionTable=pimBidirDFElectionTable, pimSGRptSrcAddress=pimSGRptSrcAddress, pimSGRptIEntry=pimSGRptIEntry, pimNeighborIfIndex=pimNeighborIfIndex, pimSGRptIJoinPruneState=pimSGRptIJoinPruneState, pimInterfaceJoinPruneInterval=pimInterfaceJoinPruneInterval, pimSGIJoinPruneState=pimSGIJoinPruneState, pimStaticRPOverrideDynamic=pimStaticRPOverrideDynamic, pimNeighborGenerationIDPresent=pimNeighborGenerationIDPresent, pimStarGUpstreamNeighbor=pimStarGUpstreamNeighbor, pimSGDRRegisterState=pimSGDRRegisterState, pimBidirDFElectionAddressType=pimBidirDFElectionAddressType, pimStarGEntries=pimStarGEntries, pimLastAssertGroupAddressType=pimLastAssertGroupAddressType, pimInterfaceHelloHoldtime=pimInterfaceHelloHoldtime, pimLastAssertInterface=pimLastAssertInterface, pimNbrSecAddressTable=pimNbrSecAddressTable, pimGroupMappingGrpAddress=pimGroupMappingGrpAddress, pimGroupMappingTable=pimGroupMappingTable, pimDeviceStorageGroup=pimDeviceStorageGroup, pimInterfaceLanDelayEnabled=pimInterfaceLanDelayEnabled, pimInterfaceEffectOverrideIvl=pimInterfaceEffectOverrideIvl, pimStarGRPFNextHopType=pimStarGRPFNextHopType, pimSGSPTBit=pimSGSPTBit, pimStaticRPPimMode=pimStaticRPPimMode, pimInvalidRegisterOrigin=pimInvalidRegisterOrigin, pimSGEntry=pimSGEntry, pimInvalidRegisterAddressType=pimInvalidRegisterAddressType, pimInterfaceDomainBorder=pimInterfaceDomainBorder, pimSGRPFNextHop=pimSGRPFNextHop, pimSGSrcAddress=pimSGSrcAddress, pimInterfaceElectionWinCount=pimInterfaceElectionWinCount, pimSGUpstreamPruneLimitTimer=pimSGUpstreamPruneLimitTimer, pimStaticRPPrecedenceGroup=pimStaticRPPrecedenceGroup, pimSGRptUpstreamOverrideTimer=pimSGRptUpstreamOverrideTimer, pimNbrSecAddress=pimNbrSecAddress, pimSGIAssertWinnerAddress=pimSGIAssertWinnerAddress, pimSGRPFNextHopType=pimSGRPFNextHopType, pimLastAssertSourceAddressType=pimLastAssertSourceAddressType, pimInvalidRegisterGroup=pimInvalidRegisterGroup, pimNeighborPropagationDelay=pimNeighborPropagationDelay, pimInAsserts=pimInAsserts, pimGroupMappingRPAddressType=pimGroupMappingRPAddressType, pimInvalidJoinPruneOrigin=pimInvalidJoinPruneOrigin, PimGroupMappingOriginType=PimGroupMappingOriginType, pimBidirDFElectionRPAddress=pimBidirDFElectionRPAddress, pimSGRPRegisterPMBRAddressType=pimSGRPRegisterPMBRAddressType, pimStaticRPTable=pimStaticRPTable, pimInvalidJoinPruneMsgsRcvd=pimInvalidJoinPruneMsgsRcvd, pimInvalidRegisterMsgsRcvd=pimInvalidRegisterMsgsRcvd, pimNeighborAddressType=pimNeighborAddressType, pimSGRptITable=pimSGRptITable, pimStarGITable=pimStarGITable, pimStaticRPRowStatus=pimStaticRPRowStatus, pimSGDRRegisterStopTimer=pimSGDRRegisterStopTimer, pimStarGIAssertWinnerAddress=pimStarGIAssertWinnerAddress, pimStaticRPRPAddress=pimStaticRPRPAddress, pimSGRptIPruneExpiryTimer=pimSGRptIPruneExpiryTimer, pimInvalidJoinPrune=pimInvalidJoinPrune, pimBidirDFElectionIfIndex=pimBidirDFElectionIfIndex, pimSGAddressType=pimSGAddressType, pimSsmGroup=pimSsmGroup, pimSGRptEntries=pimSGRptEntries, pimInterfaceIfIndex=pimInterfaceIfIndex, pimNbrSecAddressEntry=pimNbrSecAddressEntry, pimSGRptUpTime=pimSGRptUpTime, pimSGEntries=pimSGEntries, pimInterfaceDRPriority=pimInterfaceDRPriority, pimStarGEntry=pimStarGEntry, pimInterfaceStubInterface=pimInterfaceStubInterface, pimBidirDFElectionState=pimBidirDFElectionState, pimInvalidJoinPruneAddressType=pimInvalidJoinPruneAddressType, pimStdMIB=pimStdMIB, pimSGRPFIfIndex=pimSGRPFIfIndex)
mibBuilder.exportSymbols("PIM-STD-MIB", pimSGUpstreamNeighbor=pimSGUpstreamNeighbor)
