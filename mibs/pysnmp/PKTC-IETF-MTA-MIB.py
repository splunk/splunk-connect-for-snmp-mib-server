#
# PySNMP MIB module PKTC-IETF-MTA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PKTC-IETF-MTA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:31:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
docsDevSoftwareGroupV2, = mibBuilder.importSymbols("DOCS-CABLE-DEVICE-MIB", "docsDevSoftwareGroupV2")
docsBpi2CodeDownloadGroup, DocsX509ASN1DEREncodedCertificate = mibBuilder.importSymbols("DOCS-IETF-BPI2-MIB", "docsBpi2CodeDownloadGroup", "DocsX509ASN1DEREncodedCertificate")
ifPhysAddress, = mibBuilder.importSymbols("IF-MIB", "ifPhysAddress")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
sysDescr, = mibBuilder.importSymbols("SNMPv2-MIB", "sysDescr")
Integer32, IpAddress, ObjectIdentity, Counter64, MibIdentifier, Gauge32, ModuleIdentity, iso, mib_2, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "ObjectIdentity", "Counter64", "MibIdentifier", "Gauge32", "ModuleIdentity", "iso", "mib-2", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "NotificationType")
TextualConvention, RowStatus, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "TruthValue")
LongUtf8String, = mibBuilder.importSymbols("SYSAPPL-MIB", "LongUtf8String")
pktcIetfMtaMib = ModuleIdentity((1, 3, 6, 1, 2, 1, 140))
pktcIetfMtaMib.setRevisions(('2006-09-18 00:00',))
if mibBuilder.loadTexts: pktcIetfMtaMib.setLastUpdated('200609180000Z')
if mibBuilder.loadTexts: pktcIetfMtaMib.setOrganization('IETF IP over Cable Data Network Working Group')
class PktcMtaDevProvEncryptAlg(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("none", 0), ("des64CbcMode", 1), ("t3Des192CbcMode", 2), ("aes128CbcMode", 3), ("aes256CbcMode", 4))

pktcMtaNotification = MibIdentifier((1, 3, 6, 1, 2, 1, 140, 0))
pktcMtaMibObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 140, 1))
pktcMtaDevBase = MibIdentifier((1, 3, 6, 1, 2, 1, 140, 1, 1))
pktcMtaDevServer = MibIdentifier((1, 3, 6, 1, 2, 1, 140, 1, 2))
pktcMtaDevSecurity = MibIdentifier((1, 3, 6, 1, 2, 1, 140, 1, 3))
pktcMtaDevErrors = MibIdentifier((1, 3, 6, 1, 2, 1, 140, 1, 4))
pktcMtaConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 140, 2))
pktcMtaDevResetNow = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevResetNow.setStatus('current')
pktcMtaDevSerialNumber = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevSerialNumber.setStatus('current')
pktcMtaDevSwCurrentVers = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevSwCurrentVers.setStatus('current')
pktcMtaDevFQDN = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevFQDN.setStatus('current')
pktcMtaDevEndPntCount = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevEndPntCount.setStatus('current')
pktcMtaDevEnabled = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevEnabled.setStatus('current')
pktcMtaDevTypeIdentifier = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevTypeIdentifier.setStatus('current')
pktcMtaDevProvisioningState = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("pass", 1), ("inProgress", 2), ("failConfigFileError", 3), ("passWithWarnings", 4), ("passWithIncompleteParsing", 5), ("failureInternalError", 6), ("failureOtherReason", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevProvisioningState.setStatus('current')
pktcMtaDevHttpAccess = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevHttpAccess.setStatus('current')
pktcMtaDevProvisioningTimer = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30)).clone(10)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevProvisioningTimer.setStatus('current')
pktcMtaDevProvisioningCounter = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevProvisioningCounter.setStatus('current')
pktcMtaDevErrorOidsTable = MibTable((1, 3, 6, 1, 2, 1, 140, 1, 1, 12), )
if mibBuilder.loadTexts: pktcMtaDevErrorOidsTable.setStatus('current')
pktcMtaDevErrorOidsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 140, 1, 1, 12, 1), ).setIndexNames((0, "PKTC-IETF-MTA-MIB", "pktcMtaDevErrorOidIndex"))
if mibBuilder.loadTexts: pktcMtaDevErrorOidsEntry.setStatus('current')
pktcMtaDevErrorOidIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 1, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)))
if mibBuilder.loadTexts: pktcMtaDevErrorOidIndex.setStatus('current')
pktcMtaDevErrorOid = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 1, 12, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevErrorOid.setStatus('current')
pktcMtaDevErrorValue = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 1, 12, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevErrorValue.setStatus('current')
pktcMtaDevErrorReason = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 1, 12, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevErrorReason.setStatus('current')
pktcMtaDevDhcpServerAddressType = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 1), InetAddressType().clone('ipv4')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevDhcpServerAddressType.setStatus('current')
pktcMtaDevServerDhcp1 = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevServerDhcp1.setStatus('current')
pktcMtaDevServerDhcp2 = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevServerDhcp2.setStatus('current')
pktcMtaDevDnsServerAddressType = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 4), InetAddressType().clone('ipv4')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevDnsServerAddressType.setStatus('current')
pktcMtaDevServerDns1 = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 5), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevServerDns1.setStatus('current')
pktcMtaDevServerDns2 = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 6), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevServerDns2.setStatus('current')
pktcMtaDevTimeServerAddressType = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 7), InetAddressType().clone('ipv4')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevTimeServerAddressType.setStatus('current')
pktcMtaDevTimeServer = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 8), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevTimeServer.setStatus('current')
pktcMtaDevConfigFile = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 9), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevConfigFile.setStatus('current')
pktcMtaDevSnmpEntity = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevSnmpEntity.setStatus('current')
pktcMtaDevProvConfigHash = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevProvConfigHash.setStatus('current')
pktcMtaDevProvConfigKey = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevProvConfigKey.setStatus('current')
pktcMtaDevProvConfigEncryptAlg = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 13), PktcMtaDevProvEncryptAlg().clone('des64CbcMode')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevProvConfigEncryptAlg.setStatus('current')
pktcMtaDevProvSolicitedKeyTimeout = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 180)).clone(3)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevProvSolicitedKeyTimeout.setStatus('current')
pktcMtaDevProvUnsolicitedKeyMaxTimeout = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600)).clone(600)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevProvUnsolicitedKeyMaxTimeout.setStatus('current')
pktcMtaDevProvUnsolicitedKeyNomTimeout = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600)).clone(3)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevProvUnsolicitedKeyNomTimeout.setStatus('current')
pktcMtaDevProvUnsolicitedKeyMaxRetries = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)).clone(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevProvUnsolicitedKeyMaxRetries.setStatus('current')
pktcMtaDevProvKerbRealmName = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 18), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevProvKerbRealmName.setStatus('current')
pktcMtaDevProvState = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 2, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("operational", 1), ("waitingForSnmpSetInfo", 2), ("waitingForTftpAddrResponse", 3), ("waitingForConfigFile", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevProvState.setStatus('current')
pktcMtaDevManufacturerCertificate = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 3, 1), DocsX509ASN1DEREncodedCertificate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevManufacturerCertificate.setStatus('current')
pktcMtaDevCertificate = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 3, 2), DocsX509ASN1DEREncodedCertificate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevCertificate.setStatus('current')
pktcMtaDevCorrelationId = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 3, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevCorrelationId.setStatus('current')
pktcMtaDevTelephonyRootCertificate = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 3, 4), DocsX509ASN1DEREncodedCertificate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevTelephonyRootCertificate.setStatus('current')
pktcMtaDevRealmAvailSlot = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 3, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevRealmAvailSlot.setStatus('current')
pktcMtaDevRealmTable = MibTable((1, 3, 6, 1, 2, 1, 140, 1, 3, 6), )
if mibBuilder.loadTexts: pktcMtaDevRealmTable.setStatus('current')
pktcMtaDevRealmEntry = MibTableRow((1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1), ).setIndexNames((0, "PKTC-IETF-MTA-MIB", "pktcMtaDevRealmIndex"))
if mibBuilder.loadTexts: pktcMtaDevRealmEntry.setStatus('current')
pktcMtaDevRealmIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: pktcMtaDevRealmIndex.setStatus('current')
pktcMtaDevRealmName = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevRealmName.setStatus('current')
pktcMtaDevRealmPkinitGracePeriod = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(15, 600)).clone(15)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevRealmPkinitGracePeriod.setStatus('current')
pktcMtaDevRealmTgsGracePeriod = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(10)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevRealmTgsGracePeriod.setStatus('current')
pktcMtaDevRealmOrgName = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 5), LongUtf8String()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevRealmOrgName.setStatus('current')
pktcMtaDevRealmUnsolicitedKeyMaxTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(100)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevRealmUnsolicitedKeyMaxTimeout.setStatus('current')
pktcMtaDevRealmUnsolicitedKeyNomTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 600000)).clone(3000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevRealmUnsolicitedKeyNomTimeout.setStatus('current')
pktcMtaDevRealmUnsolicitedKeyMaxRetries = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevRealmUnsolicitedKeyMaxRetries.setStatus('current')
pktcMtaDevRealmStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 6, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevRealmStatus.setStatus('current')
pktcMtaDevCmsAvailSlot = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 3, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevCmsAvailSlot.setStatus('current')
pktcMtaDevCmsTable = MibTable((1, 3, 6, 1, 2, 1, 140, 1, 3, 8), )
if mibBuilder.loadTexts: pktcMtaDevCmsTable.setStatus('current')
pktcMtaDevCmsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1), ).setIndexNames((0, "PKTC-IETF-MTA-MIB", "pktcMtaDevCmsIndex"))
if mibBuilder.loadTexts: pktcMtaDevCmsEntry.setStatus('current')
pktcMtaDevCmsIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: pktcMtaDevCmsIndex.setStatus('current')
pktcMtaDevCmsFqdn = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevCmsFqdn.setStatus('current')
pktcMtaDevCmsKerbRealmName = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevCmsKerbRealmName.setStatus('current')
pktcMtaDevCmsMaxClockSkew = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1800)).clone(300)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevCmsMaxClockSkew.setStatus('current')
pktcMtaDevCmsSolicitedKeyTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 30000)).clone(1000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevCmsSolicitedKeyTimeout.setStatus('current')
pktcMtaDevCmsUnsolicitedKeyMaxTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevCmsUnsolicitedKeyMaxTimeout.setStatus('current')
pktcMtaDevCmsUnsolicitedKeyNomTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 30000)).clone(500)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevCmsUnsolicitedKeyNomTimeout.setStatus('current')
pktcMtaDevCmsUnsolicitedKeyMaxRetries = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevCmsUnsolicitedKeyMaxRetries.setStatus('current')
pktcMtaDevCmsIpsecCtrl = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 9), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevCmsIpsecCtrl.setStatus('current')
pktcMtaDevCmsStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 140, 1, 3, 8, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevCmsStatus.setStatus('current')
pktcMtaDevResetKrbTickets = MibScalar((1, 3, 6, 1, 2, 1, 140, 1, 3, 9), Bits().clone(namedValues=NamedValues(("invalidateProvOnReboot", 0), ("invalidateAllCmsOnReboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevResetKrbTickets.setStatus('current')
pktcMtaDevErrorsTooManyErrors = ObjectIdentity((1, 3, 6, 1, 2, 1, 140, 1, 4, 1))
if mibBuilder.loadTexts: pktcMtaDevErrorsTooManyErrors.setStatus('current')
pktcMtaDevProvisioningEnrollment = NotificationType((1, 3, 6, 1, 2, 1, 140, 0, 1)).setObjects(("SNMPv2-MIB", "sysDescr"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevSwCurrentVers"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevTypeIdentifier"), ("IF-MIB", "ifPhysAddress"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevCorrelationId"))
if mibBuilder.loadTexts: pktcMtaDevProvisioningEnrollment.setStatus('current')
pktcMtaDevProvisioningStatus = NotificationType((1, 3, 6, 1, 2, 1, 140, 0, 2)).setObjects(("IF-MIB", "ifPhysAddress"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevCorrelationId"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevProvisioningState"))
if mibBuilder.loadTexts: pktcMtaDevProvisioningStatus.setStatus('current')
pktcMtaCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 140, 2, 1))
pktcMtaGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 140, 2, 2))
pktcMtaBasicCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 140, 2, 1, 1)).setObjects(("PKTC-IETF-MTA-MIB", "pktcMtaGroup"), ("PKTC-IETF-MTA-MIB", "pktcMtaNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcMtaBasicCompliance = pktcMtaBasicCompliance.setStatus('current')
pktcMtaGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 140, 2, 2, 1)).setObjects(("PKTC-IETF-MTA-MIB", "pktcMtaDevResetNow"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevSerialNumber"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevSwCurrentVers"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevFQDN"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevEndPntCount"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevEnabled"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevProvisioningCounter"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevErrorOid"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevErrorValue"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevErrorReason"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevTypeIdentifier"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevProvisioningState"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevHttpAccess"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevCertificate"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevCorrelationId"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevManufacturerCertificate"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevDhcpServerAddressType"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevDnsServerAddressType"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevTimeServerAddressType"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevProvConfigEncryptAlg"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevServerDhcp1"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevServerDhcp2"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevServerDns1"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevServerDns2"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevTimeServer"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevConfigFile"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevSnmpEntity"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevRealmPkinitGracePeriod"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevRealmTgsGracePeriod"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevRealmAvailSlot"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevRealmName"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevRealmOrgName"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevRealmUnsolicitedKeyMaxTimeout"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevRealmUnsolicitedKeyNomTimeout"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevRealmUnsolicitedKeyMaxRetries"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevRealmStatus"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevCmsAvailSlot"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevCmsFqdn"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevCmsKerbRealmName"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevCmsUnsolicitedKeyMaxTimeout"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevCmsUnsolicitedKeyNomTimeout"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevCmsUnsolicitedKeyMaxRetries"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevCmsSolicitedKeyTimeout"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevCmsMaxClockSkew"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevCmsIpsecCtrl"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevCmsStatus"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevResetKrbTickets"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevProvUnsolicitedKeyMaxTimeout"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevProvUnsolicitedKeyNomTimeout"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevProvUnsolicitedKeyMaxRetries"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevProvKerbRealmName"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevProvSolicitedKeyTimeout"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevProvConfigHash"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevProvConfigKey"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevProvState"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevProvisioningTimer"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevTelephonyRootCertificate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcMtaGroup = pktcMtaGroup.setStatus('current')
pktcMtaNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 140, 2, 2, 2)).setObjects(("PKTC-IETF-MTA-MIB", "pktcMtaDevProvisioningStatus"), ("PKTC-IETF-MTA-MIB", "pktcMtaDevProvisioningEnrollment"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcMtaNotificationGroup = pktcMtaNotificationGroup.setStatus('current')
pktcMtaBasicSmtaCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 140, 2, 1, 2)).setObjects(("PKTC-IETF-MTA-MIB", "pktcMtaGroup"), ("PKTC-IETF-MTA-MIB", "pktcMtaNotificationGroup"), ("DOCS-CABLE-DEVICE-MIB", "docsDevSoftwareGroupV2"), ("DOCS-IETF-BPI2-MIB", "docsBpi2CodeDownloadGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcMtaBasicSmtaCompliance = pktcMtaBasicSmtaCompliance.setStatus('current')
mibBuilder.exportSymbols("PKTC-IETF-MTA-MIB", pktcMtaDevBase=pktcMtaDevBase, pktcMtaDevErrorsTooManyErrors=pktcMtaDevErrorsTooManyErrors, pktcMtaNotification=pktcMtaNotification, pktcMtaDevProvConfigHash=pktcMtaDevProvConfigHash, pktcMtaDevCertificate=pktcMtaDevCertificate, pktcMtaGroup=pktcMtaGroup, pktcMtaDevProvConfigEncryptAlg=pktcMtaDevProvConfigEncryptAlg, pktcMtaDevServerDhcp2=pktcMtaDevServerDhcp2, pktcMtaDevRealmPkinitGracePeriod=pktcMtaDevRealmPkinitGracePeriod, pktcMtaDevProvUnsolicitedKeyMaxRetries=pktcMtaDevProvUnsolicitedKeyMaxRetries, pktcMtaDevCmsUnsolicitedKeyNomTimeout=pktcMtaDevCmsUnsolicitedKeyNomTimeout, pktcMtaDevErrorOid=pktcMtaDevErrorOid, pktcMtaDevErrorOidsTable=pktcMtaDevErrorOidsTable, pktcMtaCompliances=pktcMtaCompliances, pktcMtaDevResetKrbTickets=pktcMtaDevResetKrbTickets, pktcMtaDevTelephonyRootCertificate=pktcMtaDevTelephonyRootCertificate, pktcIetfMtaMib=pktcIetfMtaMib, pktcMtaDevCmsUnsolicitedKeyMaxRetries=pktcMtaDevCmsUnsolicitedKeyMaxRetries, pktcMtaDevCmsStatus=pktcMtaDevCmsStatus, pktcMtaDevEnabled=pktcMtaDevEnabled, pktcMtaDevProvisioningTimer=pktcMtaDevProvisioningTimer, pktcMtaDevEndPntCount=pktcMtaDevEndPntCount, pktcMtaDevErrorOidIndex=pktcMtaDevErrorOidIndex, pktcMtaDevErrorOidsEntry=pktcMtaDevErrorOidsEntry, pktcMtaDevTimeServer=pktcMtaDevTimeServer, pktcMtaDevRealmIndex=pktcMtaDevRealmIndex, pktcMtaDevErrorReason=pktcMtaDevErrorReason, pktcMtaDevRealmStatus=pktcMtaDevRealmStatus, pktcMtaDevProvisioningEnrollment=pktcMtaDevProvisioningEnrollment, pktcMtaDevRealmTgsGracePeriod=pktcMtaDevRealmTgsGracePeriod, pktcMtaDevManufacturerCertificate=pktcMtaDevManufacturerCertificate, pktcMtaDevRealmTable=pktcMtaDevRealmTable, pktcMtaDevHttpAccess=pktcMtaDevHttpAccess, pktcMtaDevCmsEntry=pktcMtaDevCmsEntry, pktcMtaDevProvUnsolicitedKeyNomTimeout=pktcMtaDevProvUnsolicitedKeyNomTimeout, pktcMtaDevRealmAvailSlot=pktcMtaDevRealmAvailSlot, pktcMtaDevResetNow=pktcMtaDevResetNow, pktcMtaDevProvisioningCounter=pktcMtaDevProvisioningCounter, pktcMtaDevSnmpEntity=pktcMtaDevSnmpEntity, pktcMtaDevCmsSolicitedKeyTimeout=pktcMtaDevCmsSolicitedKeyTimeout, pktcMtaDevProvisioningStatus=pktcMtaDevProvisioningStatus, pktcMtaDevRealmOrgName=pktcMtaDevRealmOrgName, pktcMtaDevSecurity=pktcMtaDevSecurity, pktcMtaDevCmsTable=pktcMtaDevCmsTable, pktcMtaDevCmsUnsolicitedKeyMaxTimeout=pktcMtaDevCmsUnsolicitedKeyMaxTimeout, pktcMtaDevServerDns1=pktcMtaDevServerDns1, pktcMtaDevTimeServerAddressType=pktcMtaDevTimeServerAddressType, pktcMtaDevErrors=pktcMtaDevErrors, pktcMtaDevProvKerbRealmName=pktcMtaDevProvKerbRealmName, pktcMtaDevRealmName=pktcMtaDevRealmName, pktcMtaDevRealmEntry=pktcMtaDevRealmEntry, pktcMtaDevCmsFqdn=pktcMtaDevCmsFqdn, pktcMtaDevSerialNumber=pktcMtaDevSerialNumber, pktcMtaDevRealmUnsolicitedKeyMaxRetries=pktcMtaDevRealmUnsolicitedKeyMaxRetries, pktcMtaDevErrorValue=pktcMtaDevErrorValue, pktcMtaDevRealmUnsolicitedKeyMaxTimeout=pktcMtaDevRealmUnsolicitedKeyMaxTimeout, pktcMtaDevServerDhcp1=pktcMtaDevServerDhcp1, pktcMtaDevProvSolicitedKeyTimeout=pktcMtaDevProvSolicitedKeyTimeout, pktcMtaMibObjects=pktcMtaMibObjects, PYSNMP_MODULE_ID=pktcIetfMtaMib, pktcMtaDevServerDns2=pktcMtaDevServerDns2, pktcMtaDevTypeIdentifier=pktcMtaDevTypeIdentifier, PktcMtaDevProvEncryptAlg=PktcMtaDevProvEncryptAlg, pktcMtaDevDhcpServerAddressType=pktcMtaDevDhcpServerAddressType, pktcMtaDevCmsAvailSlot=pktcMtaDevCmsAvailSlot, pktcMtaDevSwCurrentVers=pktcMtaDevSwCurrentVers, pktcMtaDevCmsKerbRealmName=pktcMtaDevCmsKerbRealmName, pktcMtaDevCmsMaxClockSkew=pktcMtaDevCmsMaxClockSkew, pktcMtaDevProvUnsolicitedKeyMaxTimeout=pktcMtaDevProvUnsolicitedKeyMaxTimeout, pktcMtaDevProvisioningState=pktcMtaDevProvisioningState, pktcMtaBasicSmtaCompliance=pktcMtaBasicSmtaCompliance, pktcMtaDevRealmUnsolicitedKeyNomTimeout=pktcMtaDevRealmUnsolicitedKeyNomTimeout, pktcMtaDevProvConfigKey=pktcMtaDevProvConfigKey, pktcMtaDevProvState=pktcMtaDevProvState, pktcMtaConformance=pktcMtaConformance, pktcMtaDevFQDN=pktcMtaDevFQDN, pktcMtaDevCorrelationId=pktcMtaDevCorrelationId, pktcMtaDevConfigFile=pktcMtaDevConfigFile, pktcMtaBasicCompliance=pktcMtaBasicCompliance, pktcMtaGroups=pktcMtaGroups, pktcMtaNotificationGroup=pktcMtaNotificationGroup, pktcMtaDevCmsIndex=pktcMtaDevCmsIndex, pktcMtaDevCmsIpsecCtrl=pktcMtaDevCmsIpsecCtrl, pktcMtaDevServer=pktcMtaDevServer, pktcMtaDevDnsServerAddressType=pktcMtaDevDnsServerAddressType)
