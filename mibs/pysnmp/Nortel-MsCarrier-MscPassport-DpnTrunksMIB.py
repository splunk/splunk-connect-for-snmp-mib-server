#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-DpnTrunksMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-DpnTrunksMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:20:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
Counter32, DisplayString, Gauge32, RowStatus, Integer32, InterfaceIndex, Unsigned32, StorageType = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Counter32", "DisplayString", "Gauge32", "RowStatus", "Integer32", "InterfaceIndex", "Unsigned32", "StorageType")
FixedPoint1, AsciiString, NonReplicated, PassportCounter64 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "FixedPoint1", "AsciiString", "NonReplicated", "PassportCounter64")
mscComponents, mscPassportMIBs = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscComponents", "mscPassportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, IpAddress, ModuleIdentity, TimeTicks, Gauge32, ObjectIdentity, iso, Integer32, NotificationType, MibIdentifier, Unsigned32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "ModuleIdentity", "TimeTicks", "Gauge32", "ObjectIdentity", "iso", "Integer32", "NotificationType", "MibIdentifier", "Unsigned32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
dpnTrunksMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 40))
mscDpnGate = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61))
mscDpnGateRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 1), )
if mibBuilder.loadTexts: mscDpnGateRowStatusTable.setStatus('mandatory')
mscDpnGateRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-DpnTrunksMIB", "mscDpnGateIndex"))
if mibBuilder.loadTexts: mscDpnGateRowStatusEntry.setStatus('mandatory')
mscDpnGateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscDpnGateRowStatus.setStatus('mandatory')
mscDpnGateComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateComponentName.setStatus('mandatory')
mscDpnGateStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateStorageType.setStatus('mandatory')
mscDpnGateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscDpnGateIndex.setStatus('mandatory')
mscDpnGateIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 100), )
if mibBuilder.loadTexts: mscDpnGateIfEntryTable.setStatus('mandatory')
mscDpnGateIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-DpnTrunksMIB", "mscDpnGateIndex"))
if mibBuilder.loadTexts: mscDpnGateIfEntryEntry.setStatus('mandatory')
mscDpnGateIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 100, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscDpnGateIfAdminStatus.setStatus('mandatory')
mscDpnGateIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 100, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateIfIndex.setStatus('mandatory')
mscDpnGateProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 101), )
if mibBuilder.loadTexts: mscDpnGateProvTable.setStatus('mandatory')
mscDpnGateProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 101, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-DpnTrunksMIB", "mscDpnGateIndex"))
if mibBuilder.loadTexts: mscDpnGateProvEntry.setStatus('mandatory')
mscDpnGateExpectedRemoteNamsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 101, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscDpnGateExpectedRemoteNamsId.setStatus('mandatory')
mscDpnGateRemoteValidationAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 101, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("continue", 0), ("disable", 1))).clone('continue')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscDpnGateRemoteValidationAction.setStatus('mandatory')
mscDpnGateLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 101, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3))).clone(namedValues=NamedValues(("dedicated", 0), ("dialIn", 3))).clone('dedicated')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscDpnGateLinkType.setStatus('mandatory')
mscDpnGateOverridesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 102), )
if mibBuilder.loadTexts: mscDpnGateOverridesTable.setStatus('mandatory')
mscDpnGateOverridesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 102, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-DpnTrunksMIB", "mscDpnGateIndex"))
if mibBuilder.loadTexts: mscDpnGateOverridesEntry.setStatus('mandatory')
mscDpnGateOverrideTransmitSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 102, 1, 1), Gauge32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1000, 4294967295), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscDpnGateOverrideTransmitSpeed.setStatus('mandatory')
mscDpnGateOldOverrideRoundTripDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 102, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscDpnGateOldOverrideRoundTripDelay.setStatus('obsolete')
mscDpnGateOverrideRoundTripUsec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 102, 1, 3), FixedPoint1().subtype(subtypeSpec=ValueRangeConstraint(0, 15000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscDpnGateOverrideRoundTripUsec.setStatus('mandatory')
mscDpnGateStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 103), )
if mibBuilder.loadTexts: mscDpnGateStateTable.setStatus('mandatory')
mscDpnGateStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 103, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-DpnTrunksMIB", "mscDpnGateIndex"))
if mibBuilder.loadTexts: mscDpnGateStateEntry.setStatus('mandatory')
mscDpnGateAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 103, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateAdminState.setStatus('mandatory')
mscDpnGateOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 103, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateOperationalState.setStatus('mandatory')
mscDpnGateUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 103, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateUsageState.setStatus('mandatory')
mscDpnGateAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 103, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateAvailabilityStatus.setStatus('mandatory')
mscDpnGateProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 103, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateProceduralStatus.setStatus('mandatory')
mscDpnGateControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 103, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateControlStatus.setStatus('mandatory')
mscDpnGateAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 103, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateAlarmStatus.setStatus('mandatory')
mscDpnGateStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 103, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateStandbyStatus.setStatus('mandatory')
mscDpnGateUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 103, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateUnknownStatus.setStatus('mandatory')
mscDpnGateOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 104), )
if mibBuilder.loadTexts: mscDpnGateOperStatusTable.setStatus('mandatory')
mscDpnGateOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 104, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-DpnTrunksMIB", "mscDpnGateIndex"))
if mibBuilder.loadTexts: mscDpnGateOperStatusEntry.setStatus('mandatory')
mscDpnGateSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 104, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateSnmpOperStatus.setStatus('mandatory')
mscDpnGateOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 105), )
if mibBuilder.loadTexts: mscDpnGateOperTable.setStatus('mandatory')
mscDpnGateOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 105, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-DpnTrunksMIB", "mscDpnGateIndex"))
if mibBuilder.loadTexts: mscDpnGateOperEntry.setStatus('mandatory')
mscDpnGateRemoteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 105, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 26))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateRemoteComponentName.setStatus('mandatory')
mscDpnGateRemoteNamsMnemonic = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 105, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateRemoteNamsMnemonic.setStatus('mandatory')
mscDpnGateLinkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 105, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("trunk", 0), ("networkLink", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateLinkMode.setStatus('mandatory')
mscDpnGateActivateReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 105, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 5, 15))).clone(namedValues=NamedValues(("dedicated", 0), ("dnl", 1), ("dbnl", 2), ("dialIn", 3), ("bwod", 5), ("unknown", 15))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateActivateReason.setStatus('mandatory')
mscDpnGateTransportTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 106), )
if mibBuilder.loadTexts: mscDpnGateTransportTable.setStatus('mandatory')
mscDpnGateTransportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 106, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-DpnTrunksMIB", "mscDpnGateIndex"))
if mibBuilder.loadTexts: mscDpnGateTransportEntry.setStatus('mandatory')
mscDpnGateMeasuredSpeedToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 106, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateMeasuredSpeedToIf.setStatus('mandatory')
mscDpnGateMeasuredRoundTripDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 106, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateMeasuredRoundTripDelay.setStatus('obsolete')
mscDpnGateMaxTxUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 106, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateMaxTxUnit.setStatus('mandatory')
mscDpnGateMeasuredRoundTripDelayUsec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 106, 1, 4), FixedPoint1().subtype(subtypeSpec=ValueRangeConstraint(0, 15000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateMeasuredRoundTripDelayUsec.setStatus('mandatory')
mscDpnGateStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 107), )
if mibBuilder.loadTexts: mscDpnGateStatsTable.setStatus('mandatory')
mscDpnGateStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 107, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-DpnTrunksMIB", "mscDpnGateIndex"))
if mibBuilder.loadTexts: mscDpnGateStatsEntry.setStatus('mandatory')
mscDpnGatePktFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 107, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGatePktFromIf.setStatus('mandatory')
mscDpnGateTrunkPktFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 107, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateTrunkPktFromIf.setStatus('mandatory')
mscDpnGateTrunkPktToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 107, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateTrunkPktToIf.setStatus('mandatory')
mscDpnGateDiscardUnforward = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 107, 1, 4), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateDiscardUnforward.setStatus('mandatory')
mscDpnGateDiscardTrunkPktFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 107, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateDiscardTrunkPktFromIf.setStatus('mandatory')
mscDpnGateStagingAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 107, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateStagingAttempts.setStatus('mandatory')
mscDpnGateDiscardTrunkPktToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 107, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateDiscardTrunkPktToIf.setStatus('mandatory')
mscDpnGateFwdStats = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 3))
mscDpnGateFwdStatsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 3, 1), )
if mibBuilder.loadTexts: mscDpnGateFwdStatsRowStatusTable.setStatus('mandatory')
mscDpnGateFwdStatsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-DpnTrunksMIB", "mscDpnGateIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnTrunksMIB", "mscDpnGateFwdStatsIndex"))
if mibBuilder.loadTexts: mscDpnGateFwdStatsRowStatusEntry.setStatus('mandatory')
mscDpnGateFwdStatsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateFwdStatsRowStatus.setStatus('mandatory')
mscDpnGateFwdStatsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateFwdStatsComponentName.setStatus('mandatory')
mscDpnGateFwdStatsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateFwdStatsStorageType.setStatus('mandatory')
mscDpnGateFwdStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscDpnGateFwdStatsIndex.setStatus('mandatory')
mscDpnGateFwdStatsOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 3, 10), )
if mibBuilder.loadTexts: mscDpnGateFwdStatsOperTable.setStatus('mandatory')
mscDpnGateFwdStatsOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-DpnTrunksMIB", "mscDpnGateIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnTrunksMIB", "mscDpnGateFwdStatsIndex"))
if mibBuilder.loadTexts: mscDpnGateFwdStatsOperEntry.setStatus('mandatory')
mscDpnGateFwdStatsFwdPktFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 3, 10, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateFwdStatsFwdPktFromIf.setStatus('mandatory')
mscDpnGateFwdStatsFwdDiscUnforwardFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 3, 10, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateFwdStatsFwdDiscUnforwardFromIf.setStatus('mandatory')
mscDpnGateFwdStatsFwdOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 61, 3, 10, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscDpnGateFwdStatsFwdOctetFromIf.setStatus('mandatory')
dpnTrunksGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 40, 1))
dpnTrunksGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 40, 1, 1))
dpnTrunksGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 40, 1, 1, 3))
dpnTrunksGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 40, 1, 1, 3, 2))
dpnTrunksCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 40, 3))
dpnTrunksCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 40, 3, 1))
dpnTrunksCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 40, 3, 1, 3))
dpnTrunksCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 40, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-DpnTrunksMIB", mscDpnGateStandbyStatus=mscDpnGateStandbyStatus, mscDpnGateDiscardTrunkPktToIf=mscDpnGateDiscardTrunkPktToIf, mscDpnGateOldOverrideRoundTripDelay=mscDpnGateOldOverrideRoundTripDelay, mscDpnGateExpectedRemoteNamsId=mscDpnGateExpectedRemoteNamsId, dpnTrunksMIB=dpnTrunksMIB, mscDpnGateIfAdminStatus=mscDpnGateIfAdminStatus, mscDpnGateStateEntry=mscDpnGateStateEntry, mscDpnGateMeasuredSpeedToIf=mscDpnGateMeasuredSpeedToIf, mscDpnGateRemoteNamsMnemonic=mscDpnGateRemoteNamsMnemonic, mscDpnGateOperationalState=mscDpnGateOperationalState, mscDpnGateAlarmStatus=mscDpnGateAlarmStatus, mscDpnGateTransportTable=mscDpnGateTransportTable, mscDpnGateUnknownStatus=mscDpnGateUnknownStatus, mscDpnGateFwdStatsComponentName=mscDpnGateFwdStatsComponentName, mscDpnGateOverridesEntry=mscDpnGateOverridesEntry, mscDpnGateFwdStatsFwdPktFromIf=mscDpnGateFwdStatsFwdPktFromIf, mscDpnGateIndex=mscDpnGateIndex, mscDpnGateOperEntry=mscDpnGateOperEntry, mscDpnGateOverridesTable=mscDpnGateOverridesTable, mscDpnGateRemoteComponentName=mscDpnGateRemoteComponentName, mscDpnGateSnmpOperStatus=mscDpnGateSnmpOperStatus, mscDpnGateFwdStatsStorageType=mscDpnGateFwdStatsStorageType, mscDpnGateStateTable=mscDpnGateStateTable, mscDpnGateMeasuredRoundTripDelayUsec=mscDpnGateMeasuredRoundTripDelayUsec, mscDpnGateAvailabilityStatus=mscDpnGateAvailabilityStatus, mscDpnGateControlStatus=mscDpnGateControlStatus, mscDpnGateAdminState=mscDpnGateAdminState, mscDpnGateDiscardUnforward=mscDpnGateDiscardUnforward, mscDpnGateOverrideRoundTripUsec=mscDpnGateOverrideRoundTripUsec, mscDpnGateComponentName=mscDpnGateComponentName, mscDpnGateFwdStatsOperEntry=mscDpnGateFwdStatsOperEntry, dpnTrunksCapabilitiesCA02A=dpnTrunksCapabilitiesCA02A, dpnTrunksGroupCA02=dpnTrunksGroupCA02, dpnTrunksCapabilities=dpnTrunksCapabilities, mscDpnGateFwdStats=mscDpnGateFwdStats, mscDpnGateStatsEntry=mscDpnGateStatsEntry, mscDpnGateLinkType=mscDpnGateLinkType, dpnTrunksGroup=dpnTrunksGroup, mscDpnGateUsageState=mscDpnGateUsageState, mscDpnGateFwdStatsIndex=mscDpnGateFwdStatsIndex, mscDpnGatePktFromIf=mscDpnGatePktFromIf, mscDpnGateTrunkPktFromIf=mscDpnGateTrunkPktFromIf, mscDpnGateProvEntry=mscDpnGateProvEntry, mscDpnGateIfIndex=mscDpnGateIfIndex, mscDpnGateFwdStatsRowStatusEntry=mscDpnGateFwdStatsRowStatusEntry, mscDpnGateRowStatus=mscDpnGateRowStatus, mscDpnGateRowStatusTable=mscDpnGateRowStatusTable, mscDpnGateOperStatusTable=mscDpnGateOperStatusTable, mscDpnGateActivateReason=mscDpnGateActivateReason, mscDpnGateFwdStatsRowStatusTable=mscDpnGateFwdStatsRowStatusTable, mscDpnGateProceduralStatus=mscDpnGateProceduralStatus, dpnTrunksGroupCA02A=dpnTrunksGroupCA02A, mscDpnGateDiscardTrunkPktFromIf=mscDpnGateDiscardTrunkPktFromIf, mscDpnGateRowStatusEntry=mscDpnGateRowStatusEntry, mscDpnGateTransportEntry=mscDpnGateTransportEntry, mscDpnGateProvTable=mscDpnGateProvTable, mscDpnGateIfEntryEntry=mscDpnGateIfEntryEntry, mscDpnGateFwdStatsOperTable=mscDpnGateFwdStatsOperTable, mscDpnGateOperStatusEntry=mscDpnGateOperStatusEntry, mscDpnGateIfEntryTable=mscDpnGateIfEntryTable, mscDpnGateOverrideTransmitSpeed=mscDpnGateOverrideTransmitSpeed, dpnTrunksCapabilitiesCA02=dpnTrunksCapabilitiesCA02, mscDpnGate=mscDpnGate, mscDpnGateStatsTable=mscDpnGateStatsTable, mscDpnGateStorageType=mscDpnGateStorageType, mscDpnGateRemoteValidationAction=mscDpnGateRemoteValidationAction, mscDpnGateTrunkPktToIf=mscDpnGateTrunkPktToIf, dpnTrunksCapabilitiesCA=dpnTrunksCapabilitiesCA, mscDpnGateOperTable=mscDpnGateOperTable, mscDpnGateStagingAttempts=mscDpnGateStagingAttempts, mscDpnGateMeasuredRoundTripDelay=mscDpnGateMeasuredRoundTripDelay, mscDpnGateFwdStatsRowStatus=mscDpnGateFwdStatsRowStatus, mscDpnGateMaxTxUnit=mscDpnGateMaxTxUnit, mscDpnGateLinkMode=mscDpnGateLinkMode, mscDpnGateFwdStatsFwdOctetFromIf=mscDpnGateFwdStatsFwdOctetFromIf, dpnTrunksGroupCA=dpnTrunksGroupCA, mscDpnGateFwdStatsFwdDiscUnforwardFromIf=mscDpnGateFwdStatsFwdDiscUnforwardFromIf)
