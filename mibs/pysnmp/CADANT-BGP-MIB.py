#
# PySNMP MIB module CADANT-BGP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CADANT-BGP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:26:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
cadLayer3, = mibBuilder.importSymbols("CADANT-PRODUCTS-MIB", "cadLayer3")
bgpRmEntIndex, bgpRouteMapIndex, BgpIpMatchType, bgpRouteMapNumber = mibBuilder.importSymbols("DC-BGP-MIB", "bgpRmEntIndex", "bgpRouteMapIndex", "BgpIpMatchType", "bgpRouteMapNumber")
FteIndex, = mibBuilder.importSymbols("DC-RTM-MIB", "FteIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, ModuleIdentity, TimeTicks, Integer32, ObjectIdentity, Unsigned32, Counter64, Gauge32, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, iso, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ModuleIdentity", "TimeTicks", "Integer32", "ObjectIdentity", "Unsigned32", "Counter64", "Gauge32", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "iso", "NotificationType")
RowStatus, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TruthValue", "DisplayString")
cadBgpMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 9))
cadBgpMib.setRevisions(('2004-06-08 00:00',))
if mibBuilder.loadTexts: cadBgpMib.setLastUpdated('200406080000Z')
if mibBuilder.loadTexts: cadBgpMib.setOrganization('Arris Inc')
cadBgpRouteMapAuxTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 9, 17), )
if mibBuilder.loadTexts: cadBgpRouteMapAuxTable.setStatus('current')
cadBgpRouteMapAuxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 9, 17, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpRouteMapIndex"), (0, "DC-BGP-MIB", "bgpRouteMapNumber"))
if mibBuilder.loadTexts: cadBgpRouteMapAuxEntry.setStatus('current')
cadBgpRouteMapAuxRouteMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 9, 17, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadBgpRouteMapAuxRouteMapName.setStatus('current')
cadBgpRouteMapAuxPrefixListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 9, 17, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadBgpRouteMapAuxPrefixListName.setStatus('obsolete')
cadBgpRouteMapAuxPreMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 9, 17, 1, 3), BgpIpMatchType())
if mibBuilder.loadTexts: cadBgpRouteMapAuxPreMatch.setStatus('obsolete')
cadBgpRouteMapAuxMaAddrName = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 9, 17, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadBgpRouteMapAuxMaAddrName.setStatus('current')
cadBgpRouteMapAuxMaNextName = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 9, 17, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadBgpRouteMapAuxMaNextName.setStatus('current')
cadBgpRouteMapAuxMaSourceName = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 9, 17, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadBgpRouteMapAuxMaSourceName.setStatus('current')
cadRtmRedistAuxTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 9, 18), )
if mibBuilder.loadTexts: cadRtmRedistAuxTable.setStatus('current')
cadRtmRedistAuxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 9, 18, 1), ).setIndexNames((0, "CADANT-BGP-MIB", "rtmRedistFteIndex"), (0, "CADANT-BGP-MIB", "rtmRedistEntryId"))
if mibBuilder.loadTexts: cadRtmRedistAuxEntry.setStatus('current')
rtmRedistFteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 9, 18, 1, 1), FteIndex())
if mibBuilder.loadTexts: rtmRedistFteIndex.setStatus('current')
rtmRedistEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 9, 18, 1, 2), Unsigned32())
if mibBuilder.loadTexts: rtmRedistEntryId.setStatus('current')
cadRtmRedistAuxRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 9, 18, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRtmRedistAuxRowStatus.setStatus('current')
cadRtmRedistAuxRouteMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 9, 18, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRtmRedistAuxRouteMapIndex.setStatus('current')
cadRtmRedistAuxCommandLineMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 9, 18, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRtmRedistAuxCommandLineMetric.setStatus('current')
mibBuilder.exportSymbols("CADANT-BGP-MIB", cadBgpRouteMapAuxMaAddrName=cadBgpRouteMapAuxMaAddrName, cadBgpRouteMapAuxRouteMapName=cadBgpRouteMapAuxRouteMapName, cadBgpRouteMapAuxMaNextName=cadBgpRouteMapAuxMaNextName, cadBgpRouteMapAuxPreMatch=cadBgpRouteMapAuxPreMatch, cadRtmRedistAuxTable=cadRtmRedistAuxTable, cadRtmRedistAuxRowStatus=cadRtmRedistAuxRowStatus, cadRtmRedistAuxCommandLineMetric=cadRtmRedistAuxCommandLineMetric, cadBgpRouteMapAuxTable=cadBgpRouteMapAuxTable, cadRtmRedistAuxEntry=cadRtmRedistAuxEntry, cadBgpMib=cadBgpMib, cadRtmRedistAuxRouteMapIndex=cadRtmRedistAuxRouteMapIndex, cadBgpRouteMapAuxEntry=cadBgpRouteMapAuxEntry, PYSNMP_MODULE_ID=cadBgpMib, rtmRedistEntryId=rtmRedistEntryId, cadBgpRouteMapAuxPrefixListName=cadBgpRouteMapAuxPrefixListName, rtmRedistFteIndex=rtmRedistFteIndex, cadBgpRouteMapAuxMaSourceName=cadBgpRouteMapAuxMaSourceName)
