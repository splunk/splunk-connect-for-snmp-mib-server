#
# PySNMP MIB module CISCO-IPSEC-PROVISIONING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IPSEC-PROVISIONING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:45:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
CIPsecTunnelIdleTime, CIPsecNumCryptoMaps, CIPsecSecuritySuite, CIPsecEncapMode, CIPsecCryptomapType, CIPsecDiffHellmanGrp, CIPsecLifetime, CIPsecLifesize, CIPsecTransform = mibBuilder.importSymbols("CISCO-IPSEC-TC", "CIPsecTunnelIdleTime", "CIPsecNumCryptoMaps", "CIPsecSecuritySuite", "CIPsecEncapMode", "CIPsecCryptomapType", "CIPsecDiffHellmanGrp", "CIPsecLifetime", "CIPsecLifesize", "CIPsecTransform")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, TimeTicks, MibIdentifier, ObjectIdentity, IpAddress, ModuleIdentity, Integer32, Gauge32, Unsigned32, iso, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "TimeTicks", "MibIdentifier", "ObjectIdentity", "IpAddress", "ModuleIdentity", "Integer32", "Gauge32", "Unsigned32", "iso", "Bits", "Counter32")
DisplayString, TextualConvention, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus", "TruthValue")
ciscoIPsecProvisioningMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 431))
ciscoIPsecProvisioningMIB.setRevisions(('2005-11-02 00:00', '2005-01-25 00:00', '2004-10-01 00:00',))
if mibBuilder.loadTexts: ciscoIPsecProvisioningMIB.setLastUpdated('200511020000Z')
if mibBuilder.loadTexts: ciscoIPsecProvisioningMIB.setOrganization('Cisco Systems, Inc.')
ciscoIPsecProvisioningMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 431, 0))
ciscoIPsecProvisioningMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 431, 1))
ciscoIPsecProvisioningMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 431, 2))
cipsIPsecGlobals = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 1))
cipsIPsecTransforms = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 2))
cipsCryptoMapGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 3))
cipsCryptoMaps = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4))
cipsNotificationCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 5))
cipsTunnelLifetime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 1, 1), CIPsecLifetime().clone(3600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipsTunnelLifetime.setStatus('current')
cipsTunnelLifesize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 1, 2), CIPsecLifesize().clone(4608000)).setUnits('KBytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipsTunnelLifesize.setStatus('current')
cipsTunnelIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 1, 3), CIPsecTunnelIdleTime()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipsTunnelIdleTimeout.setStatus('current')
cipsIPsecXformSetTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 2, 1), )
if mibBuilder.loadTexts: cipsIPsecXformSetTable.setStatus('current')
cipsIPsecXformSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-IPSEC-PROVISIONING-MIB", "cipsXformSetName"))
if mibBuilder.loadTexts: cipsIPsecXformSetEntry.setStatus('current')
cipsXformSetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 2, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: cipsXformSetName.setStatus('current')
cipsXformSetId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 2, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipsXformSetId.setStatus('current')
cipsXformSetSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 2, 1, 1, 3), CIPsecSecuritySuite()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsXformSetSuite.setStatus('current')
cipsXformSetEncryptionXform = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 2, 1, 1, 4), CIPsecTransform().clone('xformNONE')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsXformSetEncryptionXform.setStatus('current')
cipsXformSetIntegrityXformEsp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 2, 1, 1, 5), CIPsecTransform().clone('xformNONE')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsXformSetIntegrityXformEsp.setStatus('current')
cipsXformSetIntegrityXformAh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 2, 1, 1, 6), CIPsecTransform().clone('xformNONE')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsXformSetIntegrityXformAh.setStatus('current')
cipsXformSetCompressionXform = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 2, 1, 1, 7), CIPsecTransform().clone('xformNONE')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsXformSetCompressionXform.setStatus('current')
cipsXformSetMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 2, 1, 1, 8), CIPsecEncapMode().clone('encapTunnel')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsXformSetMode.setStatus('current')
cipsXformSetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 2, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsXformSetStatus.setStatus('current')
cipsNumStaticCryptomapSets = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 3, 1), CIPsecNumCryptoMaps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipsNumStaticCryptomapSets.setStatus('current')
cipsNumDynamicCryptomapSets = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 3, 2), CIPsecNumCryptoMaps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipsNumDynamicCryptomapSets.setStatus('current')
cipsNumTEDCryptomapSets = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 3, 3), CIPsecNumCryptoMaps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipsNumTEDCryptomapSets.setStatus('current')
cipsStaticCryptomapSetTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 1), )
if mibBuilder.loadTexts: cipsStaticCryptomapSetTable.setStatus('current')
cipsStaticCryptomapSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapSetName"))
if mibBuilder.loadTexts: cipsStaticCryptomapSetEntry.setStatus('current')
cipsStaticCryptomapSetSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipsStaticCryptomapSetSize.setStatus('current')
cipsStaticCryptomapSetNumIsakmp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipsStaticCryptomapSetNumIsakmp.setStatus('current')
cipsStaticCryptomapSetNumManual = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipsStaticCryptomapSetNumManual.setStatus('current')
cipsStaticCryptomapSetNumDynamic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipsStaticCryptomapSetNumDynamic.setStatus('current')
cipsStaticCryptomapSetNumTED = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipsStaticCryptomapSetNumTED.setStatus('current')
cipsStaticCryptomapSetNumSAs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipsStaticCryptomapSetNumSAs.setStatus('current')
cipsStaticCryptomapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3), )
if mibBuilder.loadTexts: cipsStaticCryptomapTable.setStatus('current')
cipsStaticCryptomapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1), ).setIndexNames((0, "CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapSetName"), (0, "CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapPriority"))
if mibBuilder.loadTexts: cipsStaticCryptomapEntry.setStatus('current')
cipsStaticCryptomapSetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: cipsStaticCryptomapSetName.setStatus('current')
cipsStaticCryptomapPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cipsStaticCryptomapPriority.setStatus('current')
cipsStaticCryptomapType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1, 3), CIPsecCryptomapType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsStaticCryptomapType.setStatus('current')
cipsStaticCryptomapDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipsStaticCryptomapDescr.setStatus('current')
cipsStaticCryptomapIpFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsStaticCryptomapIpFilter.setStatus('current')
cipsStaticCryptomapXformSetList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsStaticCryptomapXformSetList.setStatus('current')
cipsStaticCryptomapNumPeers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipsStaticCryptomapNumPeers.setStatus('current')
cipsStaticCryotomapNextPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipsStaticCryotomapNextPIndex.setStatus('current')
cipsStaticCryptomapCurPAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1, 9), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipsStaticCryptomapCurPAddrType.setStatus('current')
cipsStaticCryptomapCurPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1, 10), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipsStaticCryptomapCurPAddr.setStatus('current')
cipsStaticCryptomapPfs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1, 11), CIPsecDiffHellmanGrp()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsStaticCryptomapPfs.setStatus('current')
cipsStaticCryptomapLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1, 12), CIPsecLifetime()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsStaticCryptomapLifetime.setStatus('current')
cipsStaticCryptomapLifesize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1, 13), CIPsecLifesize()).setUnits('KBytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsStaticCryptomapLifesize.setStatus('current')
cipsStaticCryptomapLevelHost = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1, 14), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsStaticCryptomapLevelHost.setStatus('current')
cipsStaticCryptomapIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1, 15), CIPsecTunnelIdleTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsStaticCryptomapIdleTimeout.setStatus('current')
cipsStaticCryptomapAutoPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1, 16), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsStaticCryptomapAutoPeer.setStatus('current')
cipsStaticCryptomapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 3, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsStaticCryptomapStatus.setStatus('current')
cipsIPsecCryMapPeerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 4), )
if mibBuilder.loadTexts: cipsIPsecCryMapPeerTable.setStatus('current')
cipsIPsecCryMapPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 4, 1), ).setIndexNames((0, "CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapSetName"), (0, "CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapPriority"), (0, "CISCO-IPSEC-PROVISIONING-MIB", "cipsCryMapPeerIndex"))
if mibBuilder.loadTexts: cipsIPsecCryMapPeerEntry.setStatus('current')
cipsCryMapPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cipsCryMapPeerIndex.setStatus('current')
cipsCryMapPeerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 4, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsCryMapPeerAddrType.setStatus('current')
cipsCryMapPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 4, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsCryMapPeerAddr.setStatus('current')
cipsCryMapPeerOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipsCryMapPeerOrder.setStatus('current')
cipsCryMapPeerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsCryMapPeerStatus.setStatus('current')
cipsCryptomapSetIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 5), )
if mibBuilder.loadTexts: cipsCryptomapSetIfTable.setStatus('current')
cipsCryptomapSetIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 5, 1), ).setIndexNames((0, "CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapSetName"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cipsCryptomapSetIfEntry.setStatus('current')
cipsCryptomapSetIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 5, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipsCryptomapSetIfStatus.setStatus('current')
cipsIfCryptomapSetInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 6), )
if mibBuilder.loadTexts: cipsIfCryptomapSetInfoTable.setStatus('current')
cipsIfCryptomapSetInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cipsIfCryptomapSetInfoEntry.setStatus('current')
cipsIfStaticCryptomapSetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 4, 6, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipsIfStaticCryptomapSetName.setStatus('current')
cipsCntlAllNotifs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 5, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipsCntlAllNotifs.setStatus('current')
cipsCntlCryptomapAdded = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 5, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipsCntlCryptomapAdded.setStatus('current')
cipsCntlCryptomapDeleted = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 5, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipsCntlCryptomapDeleted.setStatus('current')
cipsCntlCryptomapSetAttached = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 5, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipsCntlCryptomapSetAttached.setStatus('current')
cipsCntlCryptomapSetDetached = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 431, 1, 5, 5), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipsCntlCryptomapSetDetached.setStatus('current')
ciscoIPsecProvCryptomapAdded = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 431, 0, 1)).setObjects(("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapType"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapSetSize"))
if mibBuilder.loadTexts: ciscoIPsecProvCryptomapAdded.setStatus('current')
ciscoIPsecProvCryptomapDeleted = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 431, 0, 2)).setObjects(("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapSetSize"))
if mibBuilder.loadTexts: ciscoIPsecProvCryptomapDeleted.setStatus('current')
ciscoIPsecProvCryptomapAttached = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 431, 0, 3)).setObjects(("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapSetSize"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapSetNumIsakmp"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapSetNumDynamic"))
if mibBuilder.loadTexts: ciscoIPsecProvCryptomapAttached.setStatus('current')
ciscoIPsecProvCryptomapDetached = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 431, 0, 4)).setObjects(("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapSetSize"))
if mibBuilder.loadTexts: ciscoIPsecProvCryptomapDetached.setStatus('current')
ciscoIPsecProvMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 431, 2, 1))
ciscoIPsecProvMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 431, 2, 2))
ciscoIPsecProvMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 431, 2, 1, 1)).setObjects(("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvGlobalsGroup"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvXformsGroup"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvStCryptomapGroup"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecCryptomapPeerGroup"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvNotifCntlGroup"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvDynCryptomapGroup"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvTedCryptomapGroup"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIPsecProvMIBCompliance = ciscoIPsecProvMIBCompliance.setStatus('deprecated')
ciscoIPsecProvMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 431, 2, 1, 2)).setObjects(("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvGlobalsGroup"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvXformsGroup"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvStCryptomapGroup"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecCryptomapPeerGroup"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvNotifCntlGroup"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvInfoGroup"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvDynCryptomapGroup"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvTedCryptomapGroup"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIPsecProvMIBComplianceRev1 = ciscoIPsecProvMIBComplianceRev1.setStatus('current')
ciscoIPsecProvGlobalsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 431, 2, 2, 1)).setObjects(("CISCO-IPSEC-PROVISIONING-MIB", "cipsTunnelLifetime"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsTunnelLifesize"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsTunnelIdleTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIPsecProvGlobalsGroup = ciscoIPsecProvGlobalsGroup.setStatus('current')
ciscoIPsecProvXformsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 431, 2, 2, 2)).setObjects(("CISCO-IPSEC-PROVISIONING-MIB", "cipsXformSetId"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsXformSetMode"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsXformSetSuite"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsXformSetEncryptionXform"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsXformSetIntegrityXformEsp"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsXformSetIntegrityXformAh"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsXformSetCompressionXform"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsXformSetStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIPsecProvXformsGroup = ciscoIPsecProvXformsGroup.setStatus('current')
ciscoIPsecProvStCryptomapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 431, 2, 2, 3)).setObjects(("CISCO-IPSEC-PROVISIONING-MIB", "cipsNumStaticCryptomapSets"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapSetSize"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapSetNumIsakmp"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapSetNumManual"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapSetNumDynamic"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapSetNumTED"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapSetNumSAs"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapType"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapDescr"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapIpFilter"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapXformSetList"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapNumPeers"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryotomapNextPIndex"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapCurPAddrType"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapCurPAddr"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapPfs"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapLifetime"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapLifesize"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapLevelHost"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapIdleTimeout"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapStatus"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsStaticCryptomapAutoPeer"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsCryMapPeerStatus"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsCryptomapSetIfStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIPsecProvStCryptomapGroup = ciscoIPsecProvStCryptomapGroup.setStatus('current')
ciscoIPsecProvDynCryptomapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 431, 2, 2, 4)).setObjects(("CISCO-IPSEC-PROVISIONING-MIB", "cipsNumDynamicCryptomapSets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIPsecProvDynCryptomapGroup = ciscoIPsecProvDynCryptomapGroup.setStatus('current')
ciscoIPsecProvTedCryptomapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 431, 2, 2, 5)).setObjects(("CISCO-IPSEC-PROVISIONING-MIB", "cipsNumTEDCryptomapSets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIPsecProvTedCryptomapGroup = ciscoIPsecProvTedCryptomapGroup.setStatus('current')
ciscoIPsecCryptomapPeerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 431, 2, 2, 6)).setObjects(("CISCO-IPSEC-PROVISIONING-MIB", "cipsCryMapPeerAddrType"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsCryMapPeerAddr"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsCryMapPeerOrder"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIPsecCryptomapPeerGroup = ciscoIPsecCryptomapPeerGroup.setStatus('current')
ciscoIPsecProvNotifCntlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 431, 2, 2, 7)).setObjects(("CISCO-IPSEC-PROVISIONING-MIB", "cipsCntlAllNotifs"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsCntlCryptomapAdded"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsCntlCryptomapDeleted"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsCntlCryptomapSetAttached"), ("CISCO-IPSEC-PROVISIONING-MIB", "cipsCntlCryptomapSetDetached"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIPsecProvNotifCntlGroup = ciscoIPsecProvNotifCntlGroup.setStatus('current')
ciscoIPsecProvNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 431, 2, 2, 8)).setObjects(("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvCryptomapDetached"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvCryptomapAttached"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvCryptomapDeleted"), ("CISCO-IPSEC-PROVISIONING-MIB", "ciscoIPsecProvCryptomapAdded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIPsecProvNotifGroup = ciscoIPsecProvNotifGroup.setStatus('current')
ciscoIPsecProvInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 431, 2, 2, 9)).setObjects(("CISCO-IPSEC-PROVISIONING-MIB", "cipsIfStaticCryptomapSetName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIPsecProvInfoGroup = ciscoIPsecProvInfoGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-IPSEC-PROVISIONING-MIB", cipsCryMapPeerAddrType=cipsCryMapPeerAddrType, cipsXformSetIntegrityXformEsp=cipsXformSetIntegrityXformEsp, cipsXformSetEncryptionXform=cipsXformSetEncryptionXform, ciscoIPsecProvInfoGroup=ciscoIPsecProvInfoGroup, cipsIfCryptomapSetInfoTable=cipsIfCryptomapSetInfoTable, cipsStaticCryptomapAutoPeer=cipsStaticCryptomapAutoPeer, cipsStaticCryptomapSetSize=cipsStaticCryptomapSetSize, cipsXformSetIntegrityXformAh=cipsXformSetIntegrityXformAh, cipsIfCryptomapSetInfoEntry=cipsIfCryptomapSetInfoEntry, cipsXformSetCompressionXform=cipsXformSetCompressionXform, cipsStaticCryotomapNextPIndex=cipsStaticCryotomapNextPIndex, cipsCryMapPeerStatus=cipsCryMapPeerStatus, cipsStaticCryptomapLifetime=cipsStaticCryptomapLifetime, ciscoIPsecCryptomapPeerGroup=ciscoIPsecCryptomapPeerGroup, cipsCntlCryptomapAdded=cipsCntlCryptomapAdded, ciscoIPsecProvXformsGroup=ciscoIPsecProvXformsGroup, cipsNotificationCntl=cipsNotificationCntl, ciscoIPsecProvisioningMIBNotifs=ciscoIPsecProvisioningMIBNotifs, cipsXformSetMode=cipsXformSetMode, cipsStaticCryptomapPriority=cipsStaticCryptomapPriority, ciscoIPsecProvisioningMIB=ciscoIPsecProvisioningMIB, cipsXformSetSuite=cipsXformSetSuite, cipsStaticCryptomapSetNumDynamic=cipsStaticCryptomapSetNumDynamic, cipsStaticCryptomapTable=cipsStaticCryptomapTable, cipsTunnelLifetime=cipsTunnelLifetime, cipsStaticCryptomapXformSetList=cipsStaticCryptomapXformSetList, cipsStaticCryptomapDescr=cipsStaticCryptomapDescr, cipsStaticCryptomapSetName=cipsStaticCryptomapSetName, cipsNumTEDCryptomapSets=cipsNumTEDCryptomapSets, cipsCryptoMapGeneral=cipsCryptoMapGeneral, cipsStaticCryptomapEntry=cipsStaticCryptomapEntry, cipsStaticCryptomapLifesize=cipsStaticCryptomapLifesize, cipsCntlCryptomapDeleted=cipsCntlCryptomapDeleted, ciscoIPsecProvisioningMIBConform=ciscoIPsecProvisioningMIBConform, ciscoIPsecProvGlobalsGroup=ciscoIPsecProvGlobalsGroup, cipsStaticCryptomapNumPeers=cipsStaticCryptomapNumPeers, ciscoIPsecProvMIBCompliances=ciscoIPsecProvMIBCompliances, ciscoIPsecProvNotifCntlGroup=ciscoIPsecProvNotifCntlGroup, cipsIPsecTransforms=cipsIPsecTransforms, ciscoIPsecProvMIBCompliance=ciscoIPsecProvMIBCompliance, ciscoIPsecProvCryptomapAttached=ciscoIPsecProvCryptomapAttached, ciscoIPsecProvCryptomapDetached=ciscoIPsecProvCryptomapDetached, ciscoIPsecProvMIBGroups=ciscoIPsecProvMIBGroups, cipsStaticCryptomapSetNumTED=cipsStaticCryptomapSetNumTED, cipsCryptomapSetIfStatus=cipsCryptomapSetIfStatus, cipsCntlAllNotifs=cipsCntlAllNotifs, cipsCryptoMaps=cipsCryptoMaps, cipsCntlCryptomapSetDetached=cipsCntlCryptomapSetDetached, ciscoIPsecProvCryptomapDeleted=ciscoIPsecProvCryptomapDeleted, cipsStaticCryptomapSetEntry=cipsStaticCryptomapSetEntry, cipsStaticCryptomapSetNumManual=cipsStaticCryptomapSetNumManual, cipsXformSetId=cipsXformSetId, cipsStaticCryptomapCurPAddrType=cipsStaticCryptomapCurPAddrType, cipsCryptomapSetIfEntry=cipsCryptomapSetIfEntry, cipsXformSetName=cipsXformSetName, cipsStaticCryptomapSetTable=cipsStaticCryptomapSetTable, cipsNumStaticCryptomapSets=cipsNumStaticCryptomapSets, cipsIfStaticCryptomapSetName=cipsIfStaticCryptomapSetName, cipsIPsecXformSetTable=cipsIPsecXformSetTable, ciscoIPsecProvMIBComplianceRev1=ciscoIPsecProvMIBComplianceRev1, cipsIPsecXformSetEntry=cipsIPsecXformSetEntry, ciscoIPsecProvNotifGroup=ciscoIPsecProvNotifGroup, ciscoIPsecProvDynCryptomapGroup=ciscoIPsecProvDynCryptomapGroup, cipsStaticCryptomapType=cipsStaticCryptomapType, cipsStaticCryptomapCurPAddr=cipsStaticCryptomapCurPAddr, cipsCryMapPeerIndex=cipsCryMapPeerIndex, cipsCryMapPeerOrder=cipsCryMapPeerOrder, cipsCntlCryptomapSetAttached=cipsCntlCryptomapSetAttached, ciscoIPsecProvCryptomapAdded=ciscoIPsecProvCryptomapAdded, ciscoIPsecProvisioningMIBObjects=ciscoIPsecProvisioningMIBObjects, cipsCryMapPeerAddr=cipsCryMapPeerAddr, cipsStaticCryptomapSetNumIsakmp=cipsStaticCryptomapSetNumIsakmp, ciscoIPsecProvStCryptomapGroup=ciscoIPsecProvStCryptomapGroup, cipsStaticCryptomapIdleTimeout=cipsStaticCryptomapIdleTimeout, cipsTunnelIdleTimeout=cipsTunnelIdleTimeout, cipsStaticCryptomapIpFilter=cipsStaticCryptomapIpFilter, cipsStaticCryptomapSetNumSAs=cipsStaticCryptomapSetNumSAs, cipsIPsecCryMapPeerTable=cipsIPsecCryMapPeerTable, cipsIPsecGlobals=cipsIPsecGlobals, cipsStaticCryptomapLevelHost=cipsStaticCryptomapLevelHost, cipsIPsecCryMapPeerEntry=cipsIPsecCryMapPeerEntry, cipsNumDynamicCryptomapSets=cipsNumDynamicCryptomapSets, cipsXformSetStatus=cipsXformSetStatus, ciscoIPsecProvTedCryptomapGroup=ciscoIPsecProvTedCryptomapGroup, cipsStaticCryptomapStatus=cipsStaticCryptomapStatus, PYSNMP_MODULE_ID=ciscoIPsecProvisioningMIB, cipsTunnelLifesize=cipsTunnelLifesize, cipsStaticCryptomapPfs=cipsStaticCryptomapPfs, cipsCryptomapSetIfTable=cipsCryptomapSetIfTable)
