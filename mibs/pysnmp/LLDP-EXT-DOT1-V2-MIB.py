#
# PySNMP MIB module LLDP-EXT-DOT1-V2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LLDP-EXT-DOT1-V2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:01:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
IEEE8021PriorityValue, = mibBuilder.importSymbols("IEEE8021-TC-MIB", "IEEE8021PriorityValue")
ifGeneralInformationGroup, = mibBuilder.importSymbols("IF-MIB", "ifGeneralInformationGroup")
lldpV2LocPortIfIndex, lldpV2RemTimeMark, lldpV2PortConfigEntry, lldpV2Extensions, lldpV2RemLocalDestMACAddress, lldpV2RemLocalIfIndex, lldpV2RemIndex = mibBuilder.importSymbols("LLDP-V2-MIB", "lldpV2LocPortIfIndex", "lldpV2RemTimeMark", "lldpV2PortConfigEntry", "lldpV2Extensions", "lldpV2RemLocalDestMACAddress", "lldpV2RemLocalIfIndex", "lldpV2RemIndex")
LldpV2LinkAggStatusMap, = mibBuilder.importSymbols("LLDP-V2-TC-MIB", "LldpV2LinkAggStatusMap")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Bits, ModuleIdentity, TimeTicks, Counter64, Unsigned32, Counter32, NotificationType, ObjectIdentity, Gauge32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Bits", "ModuleIdentity", "TimeTicks", "Counter64", "Unsigned32", "Counter32", "NotificationType", "ObjectIdentity", "Gauge32", "iso")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
lldpV2Xdot1MIB = ModuleIdentity((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962))
lldpV2Xdot1MIB.setRevisions(('2015-02-16 00:00', '2014-12-15 00:00', '2011-03-25 00:00', '2011-03-23 00:00', '2009-06-08 00:00',))
if mibBuilder.loadTexts: lldpV2Xdot1MIB.setLastUpdated('201502160000Z')
if mibBuilder.loadTexts: lldpV2Xdot1MIB.setOrganization('IEEE 802.1 Working Group')
lldpV2Xdot1Objects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1))
lldpV2Xdot1Config = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1))
lldpV2Xdot1LocalData = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2))
lldpV2Xdot1RemoteData = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3))
lldpV2Xdot1ConfigPortVlanTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 1), )
if mibBuilder.loadTexts: lldpV2Xdot1ConfigPortVlanTable.setStatus('current')
lldpV2Xdot1ConfigPortVlanEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 1, 1), )
lldpV2PortConfigEntry.registerAugmentions(("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1ConfigPortVlanEntry"))
lldpV2Xdot1ConfigPortVlanEntry.setIndexNames(*lldpV2PortConfigEntry.getIndexNames())
if mibBuilder.loadTexts: lldpV2Xdot1ConfigPortVlanEntry.setStatus('current')
lldpV2Xdot1ConfigPortVlanTxEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpV2Xdot1ConfigPortVlanTxEnable.setStatus('current')
lldpV2Xdot1ConfigVlanNameTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 2), )
if mibBuilder.loadTexts: lldpV2Xdot1ConfigVlanNameTable.setStatus('current')
lldpV2Xdot1ConfigVlanNameTxEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 2, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpV2Xdot1ConfigVlanNameTxEnable.setStatus('current')
lldpV2Xdot1ConfigProtoVlanTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 3), )
if mibBuilder.loadTexts: lldpV2Xdot1ConfigProtoVlanTable.setStatus('current')
lldpV2Xdot1ConfigProtoVlanTxEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 3, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpV2Xdot1ConfigProtoVlanTxEnable.setStatus('current')
lldpV2Xdot1ConfigProtocolTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 4), )
if mibBuilder.loadTexts: lldpV2Xdot1ConfigProtocolTable.setStatus('current')
lldpV2Xdot1ConfigProtocolTxEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 4, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpV2Xdot1ConfigProtocolTxEnable.setStatus('current')
lldpV2Xdot1ConfigVidUsageDigestTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 5), )
if mibBuilder.loadTexts: lldpV2Xdot1ConfigVidUsageDigestTable.setStatus('current')
lldpV2Xdot1ConfigVidUsageDigestTxEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 5, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpV2Xdot1ConfigVidUsageDigestTxEnable.setStatus('current')
lldpV2Xdot1ConfigManVidTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 6), )
if mibBuilder.loadTexts: lldpV2Xdot1ConfigManVidTable.setStatus('current')
lldpV2Xdot1ConfigManVidTxEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 6, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpV2Xdot1ConfigManVidTxEnable.setStatus('current')
lldpV2Xdot1LocTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 1), )
if mibBuilder.loadTexts: lldpV2Xdot1LocTable.setStatus('current')
lldpV2Xdot1LocEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpV2Xdot1LocEntry.setStatus('current')
lldpV2Xdot1LocPortVlanId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1LocPortVlanId.setStatus('current')
lldpV2Xdot1LocProtoVlanTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 2), )
if mibBuilder.loadTexts: lldpV2Xdot1LocProtoVlanTable.setStatus('current')
lldpV2Xdot1LocProtoVlanEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 2, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1LocProtoVlanId"))
if mibBuilder.loadTexts: lldpV2Xdot1LocProtoVlanEntry.setStatus('current')
lldpV2Xdot1ConfigProtoVlanEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 3, 1), )
lldpV2Xdot1LocProtoVlanEntry.registerAugmentions(("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1ConfigProtoVlanEntry"))
lldpV2Xdot1ConfigProtoVlanEntry.setIndexNames(*lldpV2Xdot1LocProtoVlanEntry.getIndexNames())
if mibBuilder.loadTexts: lldpV2Xdot1ConfigProtoVlanEntry.setStatus('current')
lldpV2Xdot1LocProtoVlanId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), )))
if mibBuilder.loadTexts: lldpV2Xdot1LocProtoVlanId.setStatus('current')
lldpV2Xdot1LocProtoVlanSupported = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1LocProtoVlanSupported.setStatus('current')
lldpV2Xdot1LocProtoVlanEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1LocProtoVlanEnabled.setStatus('current')
lldpV2Xdot1LocVlanNameTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 3), )
if mibBuilder.loadTexts: lldpV2Xdot1LocVlanNameTable.setStatus('current')
lldpV2Xdot1LocVlanNameEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 3, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1LocVlanId"))
if mibBuilder.loadTexts: lldpV2Xdot1LocVlanNameEntry.setStatus('current')
lldpV2Xdot1ConfigVlanNameEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 2, 1), )
lldpV2Xdot1LocVlanNameEntry.registerAugmentions(("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1ConfigVlanNameEntry"))
lldpV2Xdot1ConfigVlanNameEntry.setIndexNames(*lldpV2Xdot1LocVlanNameEntry.getIndexNames())
if mibBuilder.loadTexts: lldpV2Xdot1ConfigVlanNameEntry.setStatus('current')
lldpV2Xdot1LocVlanId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 3, 1, 1), VlanId())
if mibBuilder.loadTexts: lldpV2Xdot1LocVlanId.setStatus('current')
lldpV2Xdot1LocVlanName = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1LocVlanName.setStatus('current')
lldpV2Xdot1LocProtocolTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 4), )
if mibBuilder.loadTexts: lldpV2Xdot1LocProtocolTable.setStatus('current')
lldpV2Xdot1LocProtocolEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 4, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1LocProtocolIndex"))
if mibBuilder.loadTexts: lldpV2Xdot1LocProtocolEntry.setStatus('current')
lldpV2Xdot1ConfigProtocolEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 4, 1), )
lldpV2Xdot1LocProtocolEntry.registerAugmentions(("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1ConfigProtocolEntry"))
lldpV2Xdot1ConfigProtocolEntry.setIndexNames(*lldpV2Xdot1LocProtocolEntry.getIndexNames())
if mibBuilder.loadTexts: lldpV2Xdot1ConfigProtocolEntry.setStatus('current')
lldpV2Xdot1LocProtocolIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: lldpV2Xdot1LocProtocolIndex.setStatus('current')
lldpV2Xdot1LocProtocolId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1LocProtocolId.setStatus('current')
lldpV2Xdot1LocVidUsageDigestTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 5), )
if mibBuilder.loadTexts: lldpV2Xdot1LocVidUsageDigestTable.setStatus('current')
lldpV2Xdot1LocVidUsageDigestEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 5, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpV2Xdot1LocVidUsageDigestEntry.setStatus('current')
lldpV2Xdot1ConfigVidUsageDigestEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 5, 1), )
lldpV2Xdot1LocVidUsageDigestEntry.registerAugmentions(("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1ConfigVidUsageDigestEntry"))
lldpV2Xdot1ConfigVidUsageDigestEntry.setIndexNames(*lldpV2Xdot1LocVidUsageDigestEntry.getIndexNames())
if mibBuilder.loadTexts: lldpV2Xdot1ConfigVidUsageDigestEntry.setStatus('current')
lldpV2Xdot1LocVidUsageDigest = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1LocVidUsageDigest.setStatus('current')
lldpV2Xdot1LocManVidTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 6), )
if mibBuilder.loadTexts: lldpV2Xdot1LocManVidTable.setStatus('current')
lldpV2Xdot1LocManVidEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 6, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpV2Xdot1LocManVidEntry.setStatus('current')
lldpV2Xdot1ConfigManVidEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 1, 6, 1), )
lldpV2Xdot1LocManVidEntry.registerAugmentions(("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1ConfigManVidEntry"))
lldpV2Xdot1ConfigManVidEntry.setIndexNames(*lldpV2Xdot1LocManVidEntry.getIndexNames())
if mibBuilder.loadTexts: lldpV2Xdot1ConfigManVidEntry.setStatus('current')
lldpV2Xdot1LocManVid = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1LocManVid.setStatus('current')
lldpV2Xdot1LocLinkAggTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 7), )
if mibBuilder.loadTexts: lldpV2Xdot1LocLinkAggTable.setStatus('current')
lldpV2Xdot1LocLinkAggEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 7, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpV2Xdot1LocLinkAggEntry.setStatus('current')
lldpV2Xdot1LocLinkAggStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 7, 1, 1), LldpV2LinkAggStatusMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1LocLinkAggStatus.setStatus('current')
lldpV2Xdot1LocLinkAggPortId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 2, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 2147483647), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1LocLinkAggPortId.setStatus('current')
lldpV2Xdot1RemTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 1), )
if mibBuilder.loadTexts: lldpV2Xdot1RemTable.setStatus('current')
lldpV2Xdot1RemEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"))
if mibBuilder.loadTexts: lldpV2Xdot1RemEntry.setStatus('current')
lldpV2Xdot1RemPortVlanId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1RemPortVlanId.setStatus('current')
lldpV2Xdot1RemProtoVlanTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 2), )
if mibBuilder.loadTexts: lldpV2Xdot1RemProtoVlanTable.setStatus('current')
lldpV2Xdot1RemProtoVlanEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 2, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemProtoVlanId"))
if mibBuilder.loadTexts: lldpV2Xdot1RemProtoVlanEntry.setStatus('current')
lldpV2Xdot1RemProtoVlanId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), )))
if mibBuilder.loadTexts: lldpV2Xdot1RemProtoVlanId.setStatus('current')
lldpV2Xdot1RemProtoVlanSupported = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1RemProtoVlanSupported.setStatus('current')
lldpV2Xdot1RemProtoVlanEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1RemProtoVlanEnabled.setStatus('current')
lldpV2Xdot1RemVlanNameTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 3), )
if mibBuilder.loadTexts: lldpV2Xdot1RemVlanNameTable.setStatus('current')
lldpV2Xdot1RemVlanNameEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 3, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemVlanId"))
if mibBuilder.loadTexts: lldpV2Xdot1RemVlanNameEntry.setStatus('current')
lldpV2Xdot1RemVlanId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 3, 1, 1), VlanId())
if mibBuilder.loadTexts: lldpV2Xdot1RemVlanId.setStatus('current')
lldpV2Xdot1RemVlanName = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1RemVlanName.setStatus('current')
lldpV2Xdot1RemProtocolTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 4), )
if mibBuilder.loadTexts: lldpV2Xdot1RemProtocolTable.setStatus('current')
lldpV2Xdot1RemProtocolEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 4, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemProtocolIndex"))
if mibBuilder.loadTexts: lldpV2Xdot1RemProtocolEntry.setStatus('current')
lldpV2Xdot1RemProtocolIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: lldpV2Xdot1RemProtocolIndex.setStatus('current')
lldpV2Xdot1RemProtocolId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1RemProtocolId.setStatus('current')
lldpV2Xdot1RemVidUsageDigestTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 5), )
if mibBuilder.loadTexts: lldpV2Xdot1RemVidUsageDigestTable.setStatus('deprecated')
lldpV2Xdot1RemVidUsageDigestEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 5, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"))
if mibBuilder.loadTexts: lldpV2Xdot1RemVidUsageDigestEntry.setStatus('deprecated')
lldpV2Xdot1RemVidUsageDigest = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1RemVidUsageDigest.setStatus('deprecated')
lldpV2Xdot1RemManVidTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 6), )
if mibBuilder.loadTexts: lldpV2Xdot1RemManVidTable.setStatus('deprecated')
lldpV2Xdot1RemManVidEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 6, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"))
if mibBuilder.loadTexts: lldpV2Xdot1RemManVidEntry.setStatus('deprecated')
lldpV2Xdot1RemManVid = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1RemManVid.setStatus('deprecated')
lldpV2Xdot1RemVidUsageDigestV2Table = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 8), )
if mibBuilder.loadTexts: lldpV2Xdot1RemVidUsageDigestV2Table.setStatus('current')
lldpV2Xdot1RemVidUsageDigestV2Entry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 8, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"))
if mibBuilder.loadTexts: lldpV2Xdot1RemVidUsageDigestV2Entry.setStatus('current')
lldpV2Xdot1RemVidUsageDigestV2 = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 8, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1RemVidUsageDigestV2.setStatus('current')
lldpV2Xdot1RemManVidV2Table = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 9), )
if mibBuilder.loadTexts: lldpV2Xdot1RemManVidV2Table.setStatus('current')
lldpV2Xdot1RemManVidV2Entry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 9, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"))
if mibBuilder.loadTexts: lldpV2Xdot1RemManVidV2Entry.setStatus('current')
lldpV2Xdot1RemManVidV2 = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1RemManVidV2.setStatus('current')
lldpV2Xdot1RemLinkAggTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 7), )
if mibBuilder.loadTexts: lldpV2Xdot1RemLinkAggTable.setStatus('current')
lldpV2Xdot1RemLinkAggEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 7, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"))
if mibBuilder.loadTexts: lldpV2Xdot1RemLinkAggEntry.setStatus('current')
lldpV2Xdot1RemLinkAggStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 7, 1, 1), LldpV2LinkAggStatusMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1RemLinkAggStatus.setStatus('current')
lldpV2Xdot1RemLinkAggPortId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 1, 3, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 2147483647), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1RemLinkAggPortId.setStatus('current')
lldpV2Xdot1Conformance = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 2))
lldpV2Xdot1Compliances = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 2, 1))
lldpV2Xdot1Groups = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 2, 2))
lldpV2Xdot1TxRxCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 2, 1, 1)).setObjects(("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1ConfigGroup"), ("LLDP-EXT-DOT1-V2-MIB", "ifGeneralInformationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot1TxRxCompliance = lldpV2Xdot1TxRxCompliance.setStatus('current')
lldpV2Xdot1TxCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 2, 1, 2)).setObjects(("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1LocSysGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot1TxCompliance = lldpV2Xdot1TxCompliance.setStatus('current')
lldpV2Xdot1RxCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 2, 1, 3)).setObjects(("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemSysGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot1RxCompliance = lldpV2Xdot1RxCompliance.setStatus('deprecated')
lldpV2Xdot1RxComplianceV2 = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 2, 1, 4)).setObjects(("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemSysV2Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot1RxComplianceV2 = lldpV2Xdot1RxComplianceV2.setStatus('current')
lldpV2Xdot1ConfigGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 2, 2, 1)).setObjects(("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1ConfigPortVlanTxEnable"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1ConfigVlanNameTxEnable"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1ConfigProtoVlanTxEnable"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1ConfigProtocolTxEnable"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1ConfigVidUsageDigestTxEnable"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1ConfigManVidTxEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot1ConfigGroup = lldpV2Xdot1ConfigGroup.setStatus('current')
lldpV2Xdot1LocSysGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 2, 2, 2)).setObjects(("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1LocPortVlanId"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1LocProtoVlanSupported"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1LocProtoVlanEnabled"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1LocVlanName"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1LocProtocolId"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1LocVidUsageDigest"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1LocManVid"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1LocLinkAggStatus"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1LocLinkAggPortId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot1LocSysGroup = lldpV2Xdot1LocSysGroup.setStatus('current')
lldpV2Xdot1RemSysGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 2, 2, 3)).setObjects(("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemPortVlanId"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemProtoVlanSupported"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemProtoVlanEnabled"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemVlanName"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemProtocolId"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemVidUsageDigest"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemManVid"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemLinkAggStatus"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemLinkAggPortId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot1RemSysGroup = lldpV2Xdot1RemSysGroup.setStatus('deprecated')
lldpV2Xdot1RemSysV2Group = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 2, 2, 3)).setObjects(("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemPortVlanId"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemProtoVlanSupported"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemProtoVlanEnabled"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemVlanName"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemProtocolId"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemVidUsageDigestV2"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemManVidV2"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemLinkAggStatus"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemLinkAggPortId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot1RemSysV2Group = lldpV2Xdot1RemSysV2Group.setStatus('current')
lldpXdot1CnMIB = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 3))
lldpXdot1CnObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 3, 1))
lldpXdot1CnConfig = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 3, 1, 1))
lldpXdot1CnLocalData = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 3, 1, 2))
lldpXdot1CnRemoteData = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 3, 1, 3))
class LldpV2CnBitVector(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("pri0status", 0), ("pri1status", 1), ("pri2status", 2), ("pri3status", 3), ("pri4status", 4), ("pri5status", 5), ("pri6status", 6), ("pri7status", 7))

lldpXdot1CnConfigCnTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 3, 1, 1, 1), )
if mibBuilder.loadTexts: lldpXdot1CnConfigCnTable.setStatus('current')
lldpXdot1CnConfigCnEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 3, 1, 1, 1, 1), )
lldpV2PortConfigEntry.registerAugmentions(("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1CnConfigCnEntry"))
lldpXdot1CnConfigCnEntry.setIndexNames(*lldpV2PortConfigEntry.getIndexNames())
if mibBuilder.loadTexts: lldpXdot1CnConfigCnEntry.setStatus('current')
lldpXdot1CnConfigCnTxEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 3, 1, 1, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1CnConfigCnTxEnable.setStatus('current')
lldpV2Xdot1LocCnTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 3, 1, 2, 1), )
if mibBuilder.loadTexts: lldpV2Xdot1LocCnTable.setStatus('current')
lldpV2Xdot1LocCnEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 3, 1, 2, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpV2Xdot1LocCnEntry.setStatus('current')
lldpV2Xdot1LocCNPVIndicators = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 3, 1, 2, 1, 1, 1), LldpV2CnBitVector()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1LocCNPVIndicators.setStatus('current')
lldpV2Xdot1LocReadyIndicators = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 3, 1, 2, 1, 1, 2), LldpV2CnBitVector()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1LocReadyIndicators.setStatus('current')
lldpV2Xdot1RemCnTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 3, 1, 3, 1), )
if mibBuilder.loadTexts: lldpV2Xdot1RemCnTable.setStatus('current')
lldpV2Xdot1RemCnEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 3, 1, 3, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"))
if mibBuilder.loadTexts: lldpV2Xdot1RemCnEntry.setStatus('current')
lldpV2Xdot1RemCNPVIndicators = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 3, 1, 3, 1, 1, 1), LldpV2CnBitVector()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1RemCNPVIndicators.setStatus('current')
lldpV2Xdot1RemReadyIndicators = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 3, 1, 3, 1, 1, 2), LldpV2CnBitVector()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1RemReadyIndicators.setStatus('current')
lldpXdot1CnConformance = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 4))
lldpXdot1CnCompliances = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 4, 1))
lldpXdot1CnGroups = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 4, 2))
lldpXdot1CnCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 4, 1, 1)).setObjects(("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1CnGroup"), ("LLDP-EXT-DOT1-V2-MIB", "ifGeneralInformationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXdot1CnCompliance = lldpXdot1CnCompliance.setStatus('current')
lldpXdot1CnGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 4, 2, 1)).setObjects(("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1CnConfigCnTxEnable"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1LocCNPVIndicators"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1LocReadyIndicators"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemCNPVIndicators"), ("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1RemReadyIndicators"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXdot1CnGroup = lldpXdot1CnGroup.setStatus('current')
lldpXdot1dcbxMIB = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5))
lldpXdot1dcbxObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1))
lldpXdot1dcbxConfig = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 1))
lldpXdot1dcbxLocalData = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2))
lldpXdot1dcbxRemoteData = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3))
lldpXdot1dcbxAdminData = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4))
class LldpXdot1dcbxTrafficClassValue(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 7)

class LldpXdot1dcbxTrafficClassBandwidthValue(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 100)

class LldpXdot1dcbxAppSelector(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("asEthertype", 1), ("asTCPPortNumber", 2), ("asUDPPortNumber", 3), ("asTCPUDPPortNumber", 4), ("asDSCPValue", 5))

class LldpXdot1dcbxAppProtocol(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class LldpXdot1dcbxSupportedCapacity(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 8)

class LldpXdot1dcbxTrafficSelectionAlgorithm(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))
    namedValues = NamedValues(("tsaStrictPriority", 0), ("tsaCreditBasedShaper", 1), ("tsaEnhancedTransmission", 2), ("tsaVendorSpecific", 255))

lldpXdot1dcbxConfigETSConfigurationTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 1, 1), )
if mibBuilder.loadTexts: lldpXdot1dcbxConfigETSConfigurationTable.setStatus('current')
lldpXdot1dcbxConfigETSConfigurationEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 1, 1, 1), )
lldpV2PortConfigEntry.registerAugmentions(("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxConfigETSConfigurationEntry"))
lldpXdot1dcbxConfigETSConfigurationEntry.setIndexNames(*lldpV2PortConfigEntry.getIndexNames())
if mibBuilder.loadTexts: lldpXdot1dcbxConfigETSConfigurationEntry.setStatus('current')
lldpXdot1dcbxConfigETSConfigurationTxEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 1, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1dcbxConfigETSConfigurationTxEnable.setStatus('current')
lldpXdot1dcbxConfigETSRecommendationTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 1, 2), )
if mibBuilder.loadTexts: lldpXdot1dcbxConfigETSRecommendationTable.setStatus('current')
lldpXdot1dcbxConfigETSRecommendationEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 1, 2, 1), )
lldpV2PortConfigEntry.registerAugmentions(("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxConfigETSRecommendationEntry"))
lldpXdot1dcbxConfigETSRecommendationEntry.setIndexNames(*lldpV2PortConfigEntry.getIndexNames())
if mibBuilder.loadTexts: lldpXdot1dcbxConfigETSRecommendationEntry.setStatus('current')
lldpXdot1dcbxConfigETSRecommendationTxEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 1, 2, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1dcbxConfigETSRecommendationTxEnable.setStatus('current')
lldpXdot1dcbxConfigPFCTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 1, 3), )
if mibBuilder.loadTexts: lldpXdot1dcbxConfigPFCTable.setStatus('current')
lldpXdot1dcbxConfigPFCEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 1, 3, 1), )
lldpV2PortConfigEntry.registerAugmentions(("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxConfigPFCEntry"))
lldpXdot1dcbxConfigPFCEntry.setIndexNames(*lldpV2PortConfigEntry.getIndexNames())
if mibBuilder.loadTexts: lldpXdot1dcbxConfigPFCEntry.setStatus('current')
lldpXdot1dcbxConfigPFCTxEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 1, 3, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1dcbxConfigPFCTxEnable.setStatus('current')
lldpXdot1dcbxConfigApplicationPriorityTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 1, 4), )
if mibBuilder.loadTexts: lldpXdot1dcbxConfigApplicationPriorityTable.setStatus('current')
lldpXdot1dcbxConfigApplicationPriorityEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 1, 4, 1), )
lldpV2PortConfigEntry.registerAugmentions(("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxConfigApplicationPriorityEntry"))
lldpXdot1dcbxConfigApplicationPriorityEntry.setIndexNames(*lldpV2PortConfigEntry.getIndexNames())
if mibBuilder.loadTexts: lldpXdot1dcbxConfigApplicationPriorityEntry.setStatus('current')
lldpXdot1dcbxConfigApplicationPriorityTxEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 1, 4, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1dcbxConfigApplicationPriorityTxEnable.setStatus('current')
lldpXdot1dcbxConfigApplicationVlanTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 1, 5), )
if mibBuilder.loadTexts: lldpXdot1dcbxConfigApplicationVlanTable.setStatus('current')
lldpXdot1dcbxConfigApplicationVlanEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 1, 5, 1), )
lldpV2PortConfigEntry.registerAugmentions(("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxConfigApplicationVlanEntry"))
lldpXdot1dcbxConfigApplicationVlanEntry.setIndexNames(*lldpV2PortConfigEntry.getIndexNames())
if mibBuilder.loadTexts: lldpXdot1dcbxConfigApplicationVlanEntry.setStatus('current')
lldpXdot1dcbxConfigApplicationVlanTxEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 1, 5, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1dcbxConfigApplicationVlanTxEnable.setStatus('current')
lldpXdot1dcbxLocETSConfiguration = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1))
lldpXdot1dcbxLocETSBasicConfigurationTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1, 1), )
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSBasicConfigurationTable.setStatus('current')
lldpXdot1dcbxLocETSBasicConfigurationEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSBasicConfigurationEntry.setStatus('current')
lldpXdot1dcbxLocETSConCreditBasedShaperSupport = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSConCreditBasedShaperSupport.setStatus('current')
lldpXdot1dcbxLocETSConTrafficClassesSupported = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1, 1, 1, 2), LldpXdot1dcbxSupportedCapacity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSConTrafficClassesSupported.setStatus('current')
lldpXdot1dcbxLocETSConWilling = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSConWilling.setStatus('current')
lldpXdot1dcbxLocETSConPriorityAssignmentTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1, 2), )
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSConPriorityAssignmentTable.setStatus('current')
lldpXdot1dcbxLocETSConPriorityAssignmentEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1, 2, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocETSConPriority"))
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSConPriorityAssignmentEntry.setStatus('current')
lldpXdot1dcbxLocETSConPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1, 2, 1, 1), IEEE8021PriorityValue())
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSConPriority.setStatus('current')
lldpXdot1dcbxLocETSConPriTrafficClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1, 2, 1, 2), LldpXdot1dcbxTrafficClassValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSConPriTrafficClass.setStatus('current')
lldpXdot1dcbxLocETSConTrafficClassBandwidthTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1, 3), )
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSConTrafficClassBandwidthTable.setStatus('current')
lldpXdot1dcbxLocETSConTrafficClassBandwidthEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1, 3, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocETSConTrafficClass"))
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSConTrafficClassBandwidthEntry.setStatus('current')
lldpXdot1dcbxLocETSConTrafficClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1, 3, 1, 1), LldpXdot1dcbxTrafficClassValue())
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSConTrafficClass.setStatus('current')
lldpXdot1dcbxLocETSConTrafficClassBandwidth = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1, 3, 1, 2), LldpXdot1dcbxTrafficClassBandwidthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSConTrafficClassBandwidth.setStatus('current')
lldpXdot1dcbxLocETSConTrafficSelectionAlgorithmTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1, 4), )
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSConTrafficSelectionAlgorithmTable.setStatus('current')
lldpXdot1dcbxLocETSConTrafficSelectionAlgorithmEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1, 4, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocETSConTSATrafficClass"))
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSConTrafficSelectionAlgorithmEntry.setStatus('current')
lldpXdot1dcbxLocETSConTSATrafficClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1, 4, 1, 1), LldpXdot1dcbxTrafficClassValue())
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSConTSATrafficClass.setStatus('current')
lldpXdot1dcbxLocETSConTrafficSelectionAlgorithm = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 1, 4, 1, 2), LldpXdot1dcbxTrafficSelectionAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSConTrafficSelectionAlgorithm.setStatus('current')
lldpXdot1dcbxLocETSReco = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 2))
lldpXdot1dcbxLocETSRecoTrafficClassBandwidthTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 2, 1), )
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSRecoTrafficClassBandwidthTable.setStatus('current')
lldpXdot1dcbxLocETSRecoTrafficClassBandwidthEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 2, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocETSRecoTrafficClass"))
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSRecoTrafficClassBandwidthEntry.setStatus('current')
lldpXdot1dcbxLocETSRecoTrafficClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 2, 1, 1, 1), LldpXdot1dcbxTrafficClassValue())
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSRecoTrafficClass.setStatus('current')
lldpXdot1dcbxLocETSRecoTrafficClassBandwidth = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 2, 1, 1, 2), LldpXdot1dcbxTrafficClassBandwidthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSRecoTrafficClassBandwidth.setStatus('current')
lldpXdot1dcbxLocETSRecoTrafficSelectionAlgorithmTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 2, 2), )
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSRecoTrafficSelectionAlgorithmTable.setStatus('current')
lldpXdot1dcbxLocETSRecoTrafficSelectionAlgorithmEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 2, 2, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocETSRecoTSATrafficClass"))
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSRecoTrafficSelectionAlgorithmEntry.setStatus('current')
lldpXdot1dcbxLocETSRecoTSATrafficClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 2, 2, 1, 1), LldpXdot1dcbxTrafficClassValue())
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSRecoTSATrafficClass.setStatus('current')
lldpXdot1dcbxLocETSRecoTrafficSelectionAlgorithm = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 2, 2, 1, 2), LldpXdot1dcbxTrafficSelectionAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxLocETSRecoTrafficSelectionAlgorithm.setStatus('current')
lldpXdot1dcbxLocPFC = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 3))
lldpXdot1dcbxLocPFCBasicTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 3, 1), )
if mibBuilder.loadTexts: lldpXdot1dcbxLocPFCBasicTable.setStatus('current')
lldpXdot1dcbxLocPFCBasicEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 3, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpXdot1dcbxLocPFCBasicEntry.setStatus('current')
lldpXdot1dcbxLocPFCWilling = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 3, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxLocPFCWilling.setStatus('current')
lldpXdot1dcbxLocPFCMBC = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 3, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxLocPFCMBC.setStatus('current')
lldpXdot1dcbxLocPFCCap = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 3, 1, 1, 3), LldpXdot1dcbxSupportedCapacity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxLocPFCCap.setStatus('current')
lldpXdot1dcbxLocPFCEnableTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 3, 2), )
if mibBuilder.loadTexts: lldpXdot1dcbxLocPFCEnableTable.setStatus('current')
lldpXdot1dcbxLocPFCEnableEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 3, 2, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocPFCEnablePriority"))
if mibBuilder.loadTexts: lldpXdot1dcbxLocPFCEnableEntry.setStatus('current')
lldpXdot1dcbxLocPFCEnablePriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 3, 2, 1, 1), IEEE8021PriorityValue())
if mibBuilder.loadTexts: lldpXdot1dcbxLocPFCEnablePriority.setStatus('current')
lldpXdot1dcbxLocPFCEnableEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 3, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxLocPFCEnableEnabled.setStatus('current')
lldpXdot1dcbxLocApplicationPriorityAppTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 4), )
if mibBuilder.loadTexts: lldpXdot1dcbxLocApplicationPriorityAppTable.setStatus('current')
lldpXdot1dcbxLocApplicationPriorityAppEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 4, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocApplicationPriorityAESelector"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocApplicationPriorityAEProtocol"))
if mibBuilder.loadTexts: lldpXdot1dcbxLocApplicationPriorityAppEntry.setStatus('current')
lldpXdot1dcbxLocApplicationPriorityAESelector = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 4, 1, 1), LldpXdot1dcbxAppSelector())
if mibBuilder.loadTexts: lldpXdot1dcbxLocApplicationPriorityAESelector.setStatus('current')
lldpXdot1dcbxLocApplicationPriorityAEProtocol = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 4, 1, 2), LldpXdot1dcbxAppProtocol())
if mibBuilder.loadTexts: lldpXdot1dcbxLocApplicationPriorityAEProtocol.setStatus('current')
lldpXdot1dcbxLocApplicationPriorityAEPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 4, 1, 3), IEEE8021PriorityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxLocApplicationPriorityAEPriority.setStatus('current')
lldpXdot1dcbxLocApplicationVlanAppTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 5), )
if mibBuilder.loadTexts: lldpXdot1dcbxLocApplicationVlanAppTable.setStatus('current')
lldpXdot1dcbxLocApplicationVlanAppEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 5, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocApplicationVlanAESelector"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocApplicationVlanAEProtocol"))
if mibBuilder.loadTexts: lldpXdot1dcbxLocApplicationVlanAppEntry.setStatus('current')
lldpXdot1dcbxLocApplicationVlanAESelector = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 5, 1, 1), LldpXdot1dcbxAppSelector())
if mibBuilder.loadTexts: lldpXdot1dcbxLocApplicationVlanAESelector.setStatus('current')
lldpXdot1dcbxLocApplicationVlanAEProtocol = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 5, 1, 2), LldpXdot1dcbxAppProtocol())
if mibBuilder.loadTexts: lldpXdot1dcbxLocApplicationVlanAEProtocol.setStatus('current')
lldpXdot1dcbxLocApplicationVlanAEVlanId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 2, 5, 1, 3), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxLocApplicationVlanAEVlanId.setStatus('current')
lldpXdot1dcbxRemETSConfiguration = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1))
lldpXdot1dcbxRemETSBasicConfigurationTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1, 1), )
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSBasicConfigurationTable.setStatus('current')
lldpXdot1dcbxRemETSBasicConfigurationEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"))
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSBasicConfigurationEntry.setStatus('current')
lldpXdot1dcbxRemETSConCreditBasedShaperSupport = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSConCreditBasedShaperSupport.setStatus('current')
lldpXdot1dcbxRemETSConTrafficClassesSupported = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1, 1, 1, 2), LldpXdot1dcbxSupportedCapacity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSConTrafficClassesSupported.setStatus('current')
lldpXdot1dcbxRemETSConWilling = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSConWilling.setStatus('current')
lldpXdot1dcbxRemETSConPriorityAssignmentTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1, 2), )
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSConPriorityAssignmentTable.setStatus('current')
lldpXdot1dcbxRemETSConPriorityAssignmentEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1, 2, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemETSConPriority"))
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSConPriorityAssignmentEntry.setStatus('current')
lldpXdot1dcbxRemETSConPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1, 2, 1, 1), IEEE8021PriorityValue())
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSConPriority.setStatus('current')
lldpXdot1dcbxRemETSConPriTrafficClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1, 2, 1, 2), LldpXdot1dcbxTrafficClassValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSConPriTrafficClass.setStatus('current')
lldpXdot1dcbxRemETSConTrafficClassBandwidthTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1, 3), )
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSConTrafficClassBandwidthTable.setStatus('current')
lldpXdot1dcbxRemETSConTrafficClassBandwidthEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1, 3, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemETSConTrafficClass"))
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSConTrafficClassBandwidthEntry.setStatus('current')
lldpXdot1dcbxRemETSConTrafficClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1, 3, 1, 1), LldpXdot1dcbxTrafficClassValue())
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSConTrafficClass.setStatus('current')
lldpXdot1dcbxRemETSConTrafficClassBandwidth = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1, 3, 1, 2), LldpXdot1dcbxTrafficClassBandwidthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSConTrafficClassBandwidth.setStatus('current')
lldpXdot1dcbxRemETSConTrafficSelectionAlgorithmTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1, 4), )
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSConTrafficSelectionAlgorithmTable.setStatus('current')
lldpXdot1dcbxRemETSConTrafficSelectionAlgorithmEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1, 4, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemETSConTSATrafficClass"))
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSConTrafficSelectionAlgorithmEntry.setStatus('current')
lldpXdot1dcbxRemETSConTSATrafficClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1, 4, 1, 1), LldpXdot1dcbxTrafficClassValue())
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSConTSATrafficClass.setStatus('current')
lldpXdot1dcbxRemETSConTrafficSelectionAlgorithm = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 1, 4, 1, 2), LldpXdot1dcbxTrafficSelectionAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSConTrafficSelectionAlgorithm.setStatus('current')
lldpXdot1dcbxRemETSReco = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 2))
lldpXdot1dcbxRemETSRecoTrafficClassBandwidthTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 2, 1), )
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSRecoTrafficClassBandwidthTable.setStatus('current')
lldpXdot1dcbxRemETSRecoTrafficClassBandwidthEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 2, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemETSRecoTrafficClass"))
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSRecoTrafficClassBandwidthEntry.setStatus('current')
lldpXdot1dcbxRemETSRecoTrafficClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 2, 1, 1, 1), LldpXdot1dcbxTrafficClassValue())
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSRecoTrafficClass.setStatus('current')
lldpXdot1dcbxRemETSRecoTrafficClassBandwidth = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 2, 1, 1, 2), LldpXdot1dcbxTrafficClassBandwidthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSRecoTrafficClassBandwidth.setStatus('current')
lldpXdot1dcbxRemETSRecoTrafficSelectionAlgorithmTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 2, 2), )
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSRecoTrafficSelectionAlgorithmTable.setStatus('current')
lldpXdot1dcbxRemETSRecoTrafficSelectionAlgorithmEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 2, 2, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemETSRecoTSATrafficClass"))
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSRecoTrafficSelectionAlgorithmEntry.setStatus('current')
lldpXdot1dcbxRemETSRecoTSATrafficClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 2, 2, 1, 1), LldpXdot1dcbxTrafficClassValue())
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSRecoTSATrafficClass.setStatus('current')
lldpXdot1dcbxRemETSRecoTrafficSelectionAlgorithm = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 2, 2, 1, 2), LldpXdot1dcbxTrafficSelectionAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxRemETSRecoTrafficSelectionAlgorithm.setStatus('current')
lldpXdot1dcbxRemPFC = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 3))
lldpXdot1dcbxRemPFCBasicTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 3, 1), )
if mibBuilder.loadTexts: lldpXdot1dcbxRemPFCBasicTable.setStatus('current')
lldpXdot1dcbxRemPFCBasicEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 3, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"))
if mibBuilder.loadTexts: lldpXdot1dcbxRemPFCBasicEntry.setStatus('current')
lldpXdot1dcbxRemPFCWilling = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 3, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxRemPFCWilling.setStatus('current')
lldpXdot1dcbxRemPFCMBC = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 3, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxRemPFCMBC.setStatus('current')
lldpXdot1dcbxRemPFCCap = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 3, 1, 1, 3), LldpXdot1dcbxSupportedCapacity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxRemPFCCap.setStatus('current')
lldpXdot1dcbxRemPFCEnableTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 3, 2), )
if mibBuilder.loadTexts: lldpXdot1dcbxRemPFCEnableTable.setStatus('current')
lldpXdot1dcbxRemPFCEnableEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 3, 2, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemPFCEnablePriority"))
if mibBuilder.loadTexts: lldpXdot1dcbxRemPFCEnableEntry.setStatus('current')
lldpXdot1dcbxRemPFCEnablePriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 3, 2, 1, 1), IEEE8021PriorityValue())
if mibBuilder.loadTexts: lldpXdot1dcbxRemPFCEnablePriority.setStatus('current')
lldpXdot1dcbxRemPFCEnableEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 3, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxRemPFCEnableEnabled.setStatus('current')
lldpXdot1dcbxRemApplicationPriorityAppTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 4), )
if mibBuilder.loadTexts: lldpXdot1dcbxRemApplicationPriorityAppTable.setStatus('current')
lldpXdot1dcbxRemApplicationPriorityAppEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 4, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemApplicationPriorityAESelector"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemApplicationPriorityAEProtocol"))
if mibBuilder.loadTexts: lldpXdot1dcbxRemApplicationPriorityAppEntry.setStatus('current')
lldpXdot1dcbxRemApplicationPriorityAESelector = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 4, 1, 1), LldpXdot1dcbxAppSelector())
if mibBuilder.loadTexts: lldpXdot1dcbxRemApplicationPriorityAESelector.setStatus('current')
lldpXdot1dcbxRemApplicationPriorityAEProtocol = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 4, 1, 2), LldpXdot1dcbxAppProtocol())
if mibBuilder.loadTexts: lldpXdot1dcbxRemApplicationPriorityAEProtocol.setStatus('current')
lldpXdot1dcbxRemApplicationPriorityAEPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 4, 1, 3), IEEE8021PriorityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxRemApplicationPriorityAEPriority.setStatus('current')
lldpXdot1dcbxRemApplicationVlanAppTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 5), )
if mibBuilder.loadTexts: lldpXdot1dcbxRemApplicationVlanAppTable.setStatus('current')
lldpXdot1dcbxRemApplicationVlanAppEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 5, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemApplicationVlanAESelector"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemApplicationVlanAEProtocol"))
if mibBuilder.loadTexts: lldpXdot1dcbxRemApplicationVlanAppEntry.setStatus('current')
lldpXdot1dcbxRemApplicationVlanAESelector = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 5, 1, 1), LldpXdot1dcbxAppSelector())
if mibBuilder.loadTexts: lldpXdot1dcbxRemApplicationVlanAESelector.setStatus('current')
lldpXdot1dcbxRemApplicationVlanAEProtocol = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 5, 1, 2), LldpXdot1dcbxAppProtocol())
if mibBuilder.loadTexts: lldpXdot1dcbxRemApplicationVlanAEProtocol.setStatus('current')
lldpXdot1dcbxRemApplicationVlanAEVlanId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 3, 5, 1, 3), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxRemApplicationVlanAEVlanId.setStatus('current')
lldpXdot1dcbxAdminETSConfiguration = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1))
lldpXdot1dcbxAdminETSBasicConfigurationTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1, 1), )
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSBasicConfigurationTable.setStatus('current')
lldpXdot1dcbxAdminETSBasicConfigurationEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSBasicConfigurationEntry.setStatus('current')
lldpXdot1dcbxAdminETSConCreditBasedShaperSupport = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSConCreditBasedShaperSupport.setStatus('current')
lldpXdot1dcbxAdminETSConTrafficClassesSupported = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1, 1, 1, 2), LldpXdot1dcbxSupportedCapacity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSConTrafficClassesSupported.setStatus('current')
lldpXdot1dcbxAdminETSConWilling = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSConWilling.setStatus('current')
lldpXdot1dcbxAdminETSConPriorityAssignmentTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1, 2), )
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSConPriorityAssignmentTable.setStatus('current')
lldpXdot1dcbxAdminETSConPriorityAssignmentEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1, 2, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminETSConPriority"))
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSConPriorityAssignmentEntry.setStatus('current')
lldpXdot1dcbxAdminETSConPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1, 2, 1, 1), IEEE8021PriorityValue())
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSConPriority.setStatus('current')
lldpXdot1dcbxAdminETSConPriTrafficClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1, 2, 1, 2), LldpXdot1dcbxTrafficClassValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSConPriTrafficClass.setStatus('current')
lldpXdot1dcbxAdminETSConTrafficClassBandwidthTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1, 3), )
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSConTrafficClassBandwidthTable.setStatus('current')
lldpXdot1dcbxAdminETSConTrafficClassBandwidthEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1, 3, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminETSConTrafficClass"))
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSConTrafficClassBandwidthEntry.setStatus('current')
lldpXdot1dcbxAdminETSConTrafficClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1, 3, 1, 1), LldpXdot1dcbxTrafficClassValue())
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSConTrafficClass.setStatus('current')
lldpXdot1dcbxAdminETSConTrafficClassBandwidth = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1, 3, 1, 2), LldpXdot1dcbxTrafficClassBandwidthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSConTrafficClassBandwidth.setStatus('current')
lldpXdot1dcbxAdminETSConTrafficSelectionAlgorithmTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1, 4), )
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSConTrafficSelectionAlgorithmTable.setStatus('current')
lldpXdot1dcbxAdminETSConTrafficSelectionAlgorithmEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1, 4, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminETSConTSATrafficClass"))
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSConTrafficSelectionAlgorithmEntry.setStatus('current')
lldpXdot1dcbxAdminETSConTSATrafficClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1, 4, 1, 1), LldpXdot1dcbxTrafficClassValue())
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSConTSATrafficClass.setStatus('current')
lldpXdot1dcbxAdminETSConTrafficSelectionAlgorithm = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 1, 4, 1, 2), LldpXdot1dcbxTrafficSelectionAlgorithm()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSConTrafficSelectionAlgorithm.setStatus('current')
lldpXdot1dcbxAdminETSReco = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 2))
lldpXdot1dcbxAdminETSRecoTrafficClassBandwidthTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 2, 1), )
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSRecoTrafficClassBandwidthTable.setStatus('current')
lldpXdot1dcbxAdminETSRecoTrafficClassBandwidthEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 2, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminETSRecoTrafficClass"))
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSRecoTrafficClassBandwidthEntry.setStatus('current')
lldpXdot1dcbxAdminETSRecoTrafficClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 2, 1, 1, 1), LldpXdot1dcbxTrafficClassValue())
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSRecoTrafficClass.setStatus('current')
lldpXdot1dcbxAdminETSRecoTrafficClassBandwidth = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 2, 1, 1, 2), LldpXdot1dcbxTrafficClassBandwidthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSRecoTrafficClassBandwidth.setStatus('current')
lldpXdot1dcbxAdminETSRecoTrafficSelectionAlgorithmTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 2, 2), )
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSRecoTrafficSelectionAlgorithmTable.setStatus('current')
lldpXdot1dcbxAdminETSRecoTrafficSelectionAlgorithmEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 2, 2, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminETSRecoTSATrafficClass"))
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSRecoTrafficSelectionAlgorithmEntry.setStatus('current')
lldpXdot1dcbxAdminETSRecoTSATrafficClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 2, 2, 1, 1), LldpXdot1dcbxTrafficClassValue())
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSRecoTSATrafficClass.setStatus('current')
lldpXdot1dcbxAdminETSRecoTrafficSelectionAlgorithm = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 2, 2, 1, 2), LldpXdot1dcbxTrafficSelectionAlgorithm()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1dcbxAdminETSRecoTrafficSelectionAlgorithm.setStatus('current')
lldpXdot1dcbxAdminPFC = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 3))
lldpXdot1dcbxAdminPFCBasicTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 3, 1), )
if mibBuilder.loadTexts: lldpXdot1dcbxAdminPFCBasicTable.setStatus('current')
lldpXdot1dcbxAdminPFCBasicEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 3, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpXdot1dcbxAdminPFCBasicEntry.setStatus('current')
lldpXdot1dcbxAdminPFCWilling = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 3, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1dcbxAdminPFCWilling.setStatus('current')
lldpXdot1dcbxAdminPFCMBC = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 3, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxAdminPFCMBC.setStatus('current')
lldpXdot1dcbxAdminPFCCap = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 3, 1, 1, 3), LldpXdot1dcbxSupportedCapacity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1dcbxAdminPFCCap.setStatus('current')
lldpXdot1dcbxAdminPFCEnableTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 3, 2), )
if mibBuilder.loadTexts: lldpXdot1dcbxAdminPFCEnableTable.setStatus('current')
lldpXdot1dcbxAdminPFCEnableEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 3, 2, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminPFCEnablePriority"))
if mibBuilder.loadTexts: lldpXdot1dcbxAdminPFCEnableEntry.setStatus('current')
lldpXdot1dcbxAdminPFCEnablePriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 3, 2, 1, 1), IEEE8021PriorityValue())
if mibBuilder.loadTexts: lldpXdot1dcbxAdminPFCEnablePriority.setStatus('current')
lldpXdot1dcbxAdminPFCEnableEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 3, 2, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1dcbxAdminPFCEnableEnabled.setStatus('current')
lldpXdot1dcbxAdminApplicationPriorityAppTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 4), )
if mibBuilder.loadTexts: lldpXdot1dcbxAdminApplicationPriorityAppTable.setStatus('current')
lldpXdot1dcbxAdminApplicationPriorityAppEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 4, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminApplicationPriorityAESelector"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminApplicationPriorityAEProtocol"))
if mibBuilder.loadTexts: lldpXdot1dcbxAdminApplicationPriorityAppEntry.setStatus('current')
lldpXdot1dcbxAdminApplicationPriorityAESelector = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 4, 1, 1), LldpXdot1dcbxAppSelector())
if mibBuilder.loadTexts: lldpXdot1dcbxAdminApplicationPriorityAESelector.setStatus('current')
lldpXdot1dcbxAdminApplicationPriorityAEProtocol = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 4, 1, 2), LldpXdot1dcbxAppProtocol())
if mibBuilder.loadTexts: lldpXdot1dcbxAdminApplicationPriorityAEProtocol.setStatus('current')
lldpXdot1dcbxAdminApplicationPriorityAEPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 4, 1, 3), IEEE8021PriorityValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lldpXdot1dcbxAdminApplicationPriorityAEPriority.setStatus('current')
lldpXdot1dcbxAdminApplicationVlanAppTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 5), )
if mibBuilder.loadTexts: lldpXdot1dcbxAdminApplicationVlanAppTable.setStatus('current')
lldpXdot1dcbxAdminApplicationVlanAppEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 5, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminApplicationVlanAESelector"), (0, "LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminApplicationVlanAEProtocol"))
if mibBuilder.loadTexts: lldpXdot1dcbxAdminApplicationVlanAppEntry.setStatus('current')
lldpXdot1dcbxAdminApplicationVlanAESelector = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 5, 1, 1), LldpXdot1dcbxAppSelector())
if mibBuilder.loadTexts: lldpXdot1dcbxAdminApplicationVlanAESelector.setStatus('current')
lldpXdot1dcbxAdminApplicationVlanAEProtocol = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 5, 1, 2), LldpXdot1dcbxAppProtocol())
if mibBuilder.loadTexts: lldpXdot1dcbxAdminApplicationVlanAEProtocol.setStatus('current')
lldpXdot1dcbxAdminApplicationVlanAEVlanId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 5, 1, 4, 5, 1, 3), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lldpXdot1dcbxAdminApplicationVlanAEVlanId.setStatus('current')
lldpXdot1dcbxConformance = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 6))
lldpXdot1dcbxCompliances = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 6, 1))
lldpXdot1dcbxGroups = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 6, 2))
lldpXdot1dcbxCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 6, 1, 1)).setObjects(("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxETSGroup"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxPFCGroup"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxApplicationPriorityGroup"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxApplicationVlanGroup"), ("LLDP-EXT-DOT1-V2-MIB", "ifGeneralInformationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXdot1dcbxCompliance = lldpXdot1dcbxCompliance.setStatus('current')
lldpXdot1dcbxETSGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 6, 2, 1)).setObjects(("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxConfigETSConfigurationTxEnable"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxConfigETSRecommendationTxEnable"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocETSConCreditBasedShaperSupport"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocETSConTrafficClassesSupported"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocETSConWilling"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocETSConPriTrafficClass"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocETSConTrafficClassBandwidth"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocETSConTrafficSelectionAlgorithm"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocETSRecoTrafficClassBandwidth"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocETSRecoTrafficSelectionAlgorithm"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemETSConCreditBasedShaperSupport"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemETSConTrafficClassesSupported"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemETSConWilling"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemETSConPriTrafficClass"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemETSConTrafficClassBandwidth"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemETSConTrafficSelectionAlgorithm"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemETSRecoTrafficClassBandwidth"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemETSRecoTrafficSelectionAlgorithm"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminETSConCreditBasedShaperSupport"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminETSConTrafficClassesSupported"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminETSConWilling"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminETSConPriTrafficClass"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminETSConTrafficClassBandwidth"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminETSConTrafficSelectionAlgorithm"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminETSRecoTrafficClassBandwidth"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminETSRecoTrafficSelectionAlgorithm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXdot1dcbxETSGroup = lldpXdot1dcbxETSGroup.setStatus('current')
lldpXdot1dcbxPFCGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 6, 2, 2)).setObjects(("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxConfigPFCTxEnable"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocPFCWilling"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocPFCMBC"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocPFCCap"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocPFCEnableEnabled"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemPFCWilling"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemPFCMBC"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemPFCCap"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemPFCEnableEnabled"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminPFCWilling"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminPFCMBC"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminPFCCap"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminPFCEnableEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXdot1dcbxPFCGroup = lldpXdot1dcbxPFCGroup.setStatus('current')
lldpXdot1dcbxApplicationPriorityGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 6, 2, 3)).setObjects(("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxConfigApplicationPriorityTxEnable"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocApplicationPriorityAEPriority"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemApplicationPriorityAEPriority"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminApplicationPriorityAEPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXdot1dcbxApplicationPriorityGroup = lldpXdot1dcbxApplicationPriorityGroup.setStatus('current')
lldpXdot1dcbxApplicationVlanGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 6, 2, 4)).setObjects(("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxConfigApplicationVlanTxEnable"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxLocApplicationVlanAEVlanId"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxRemApplicationVlanAEVlanId"), ("LLDP-EXT-DOT1-V2-MIB", "lldpXdot1dcbxAdminApplicationVlanAEVlanId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXdot1dcbxApplicationVlanGroup = lldpXdot1dcbxApplicationVlanGroup.setStatus('current')
mibBuilder.exportSymbols("LLDP-EXT-DOT1-V2-MIB", lldpXdot1dcbxConfigApplicationPriorityTable=lldpXdot1dcbxConfigApplicationPriorityTable, lldpV2Xdot1ConfigProtoVlanTable=lldpV2Xdot1ConfigProtoVlanTable, lldpV2Xdot1RemVidUsageDigestV2Entry=lldpV2Xdot1RemVidUsageDigestV2Entry, lldpXdot1CnGroup=lldpXdot1CnGroup, lldpXdot1dcbxAdminETSConTrafficClass=lldpXdot1dcbxAdminETSConTrafficClass, lldpXdot1dcbxGroups=lldpXdot1dcbxGroups, lldpV2Xdot1RemVlanId=lldpV2Xdot1RemVlanId, lldpXdot1dcbxRemPFCEnableEntry=lldpXdot1dcbxRemPFCEnableEntry, lldpXdot1CnConfigCnEntry=lldpXdot1CnConfigCnEntry, lldpV2Xdot1RemManVidEntry=lldpV2Xdot1RemManVidEntry, lldpV2Xdot1ConfigProtocolEntry=lldpV2Xdot1ConfigProtocolEntry, lldpXdot1dcbxRemETSReco=lldpXdot1dcbxRemETSReco, lldpXdot1dcbxAdminApplicationVlanAppTable=lldpXdot1dcbxAdminApplicationVlanAppTable, lldpV2Xdot1RemManVidV2Table=lldpV2Xdot1RemManVidV2Table, lldpV2Xdot1LocManVidTable=lldpV2Xdot1LocManVidTable, lldpXdot1dcbxAdminETSConWilling=lldpXdot1dcbxAdminETSConWilling, lldpV2Xdot1RemSysV2Group=lldpV2Xdot1RemSysV2Group, lldpXdot1dcbxAdminPFC=lldpXdot1dcbxAdminPFC, lldpXdot1dcbxRemApplicationVlanAESelector=lldpXdot1dcbxRemApplicationVlanAESelector, lldpV2Xdot1LocPortVlanId=lldpV2Xdot1LocPortVlanId, lldpV2Xdot1RemProtoVlanTable=lldpV2Xdot1RemProtoVlanTable, lldpXdot1dcbxConfigApplicationVlanEntry=lldpXdot1dcbxConfigApplicationVlanEntry, lldpXdot1dcbxLocApplicationPriorityAEProtocol=lldpXdot1dcbxLocApplicationPriorityAEProtocol, LldpXdot1dcbxTrafficClassValue=LldpXdot1dcbxTrafficClassValue, lldpXdot1dcbxRemETSConTrafficSelectionAlgorithm=lldpXdot1dcbxRemETSConTrafficSelectionAlgorithm, lldpXdot1dcbxLocApplicationVlanAESelector=lldpXdot1dcbxLocApplicationVlanAESelector, lldpXdot1dcbxLocPFCWilling=lldpXdot1dcbxLocPFCWilling, lldpXdot1dcbxLocETSRecoTrafficSelectionAlgorithm=lldpXdot1dcbxLocETSRecoTrafficSelectionAlgorithm, lldpXdot1dcbxLocPFCBasicTable=lldpXdot1dcbxLocPFCBasicTable, lldpXdot1dcbxConfigETSConfigurationTable=lldpXdot1dcbxConfigETSConfigurationTable, lldpXdot1dcbxLocETSConCreditBasedShaperSupport=lldpXdot1dcbxLocETSConCreditBasedShaperSupport, lldpXdot1dcbxRemETSBasicConfigurationTable=lldpXdot1dcbxRemETSBasicConfigurationTable, lldpXdot1dcbxCompliance=lldpXdot1dcbxCompliance, lldpV2Xdot1LocEntry=lldpV2Xdot1LocEntry, lldpV2Xdot1RemVlanNameEntry=lldpV2Xdot1RemVlanNameEntry, lldpXdot1dcbxConfigPFCTable=lldpXdot1dcbxConfigPFCTable, lldpXdot1dcbxApplicationPriorityGroup=lldpXdot1dcbxApplicationPriorityGroup, lldpV2Xdot1RemVlanName=lldpV2Xdot1RemVlanName, lldpXdot1dcbxLocPFCEnableEntry=lldpXdot1dcbxLocPFCEnableEntry, lldpV2Xdot1LocProtoVlanTable=lldpV2Xdot1LocProtoVlanTable, lldpXdot1dcbxRemETSBasicConfigurationEntry=lldpXdot1dcbxRemETSBasicConfigurationEntry, lldpXdot1dcbxRemPFCEnableTable=lldpXdot1dcbxRemPFCEnableTable, lldpV2Xdot1RemVidUsageDigestTable=lldpV2Xdot1RemVidUsageDigestTable, lldpXdot1dcbxLocETSConTrafficSelectionAlgorithmEntry=lldpXdot1dcbxLocETSConTrafficSelectionAlgorithmEntry, lldpV2Xdot1TxRxCompliance=lldpV2Xdot1TxRxCompliance, lldpXdot1dcbxAdminETSRecoTrafficClassBandwidthEntry=lldpXdot1dcbxAdminETSRecoTrafficClassBandwidthEntry, lldpV2Xdot1RemoteData=lldpV2Xdot1RemoteData, lldpXdot1dcbxRemApplicationPriorityAEPriority=lldpXdot1dcbxRemApplicationPriorityAEPriority, lldpV2Xdot1RemVidUsageDigest=lldpV2Xdot1RemVidUsageDigest, lldpXdot1dcbxRemETSConTrafficSelectionAlgorithmEntry=lldpXdot1dcbxRemETSConTrafficSelectionAlgorithmEntry, lldpV2Xdot1RemProtoVlanEnabled=lldpV2Xdot1RemProtoVlanEnabled, lldpXdot1dcbxRemETSConPriority=lldpXdot1dcbxRemETSConPriority, lldpV2Xdot1LocVidUsageDigestEntry=lldpV2Xdot1LocVidUsageDigestEntry, LldpXdot1dcbxTrafficClassBandwidthValue=LldpXdot1dcbxTrafficClassBandwidthValue, lldpXdot1dcbxLocETSBasicConfigurationEntry=lldpXdot1dcbxLocETSBasicConfigurationEntry, lldpV2Xdot1RemLinkAggEntry=lldpV2Xdot1RemLinkAggEntry, lldpXdot1dcbxAdminPFCEnableEnabled=lldpXdot1dcbxAdminPFCEnableEnabled, lldpXdot1dcbxLocETSConWilling=lldpXdot1dcbxLocETSConWilling, lldpV2Xdot1RemProtoVlanId=lldpV2Xdot1RemProtoVlanId, lldpXdot1dcbxLocApplicationPriorityAEPriority=lldpXdot1dcbxLocApplicationPriorityAEPriority, lldpV2Xdot1ConfigProtocolTxEnable=lldpV2Xdot1ConfigProtocolTxEnable, PYSNMP_MODULE_ID=lldpV2Xdot1MIB, lldpXdot1dcbxLocETSRecoTrafficClassBandwidth=lldpXdot1dcbxLocETSRecoTrafficClassBandwidth, lldpXdot1dcbxRemETSConTrafficClassesSupported=lldpXdot1dcbxRemETSConTrafficClassesSupported, lldpXdot1dcbxAdminETSRecoTrafficClass=lldpXdot1dcbxAdminETSRecoTrafficClass, lldpXdot1dcbxRemETSRecoTSATrafficClass=lldpXdot1dcbxRemETSRecoTSATrafficClass, lldpXdot1dcbxLocETSConTrafficClassBandwidthTable=lldpXdot1dcbxLocETSConTrafficClassBandwidthTable, lldpV2Xdot1Compliances=lldpV2Xdot1Compliances, lldpXdot1CnMIB=lldpXdot1CnMIB, lldpXdot1dcbxAdminETSRecoTrafficClassBandwidth=lldpXdot1dcbxAdminETSRecoTrafficClassBandwidth, lldpV2Xdot1RemVidUsageDigestV2Table=lldpV2Xdot1RemVidUsageDigestV2Table, lldpV2Xdot1RemReadyIndicators=lldpV2Xdot1RemReadyIndicators, lldpXdot1dcbxLocETSConPriorityAssignmentTable=lldpXdot1dcbxLocETSConPriorityAssignmentTable, lldpV2Xdot1ConfigPortVlanTable=lldpV2Xdot1ConfigPortVlanTable, lldpV2Xdot1LocProtocolId=lldpV2Xdot1LocProtocolId, lldpXdot1dcbxAdminETSReco=lldpXdot1dcbxAdminETSReco, lldpXdot1dcbxRemETSConCreditBasedShaperSupport=lldpXdot1dcbxRemETSConCreditBasedShaperSupport, lldpV2Xdot1LocProtoVlanId=lldpV2Xdot1LocProtoVlanId, lldpXdot1dcbxConfig=lldpXdot1dcbxConfig, lldpXdot1dcbxLocApplicationVlanAEProtocol=lldpXdot1dcbxLocApplicationVlanAEProtocol, lldpV2Xdot1RemEntry=lldpV2Xdot1RemEntry, lldpXdot1dcbxLocETSConPriTrafficClass=lldpXdot1dcbxLocETSConPriTrafficClass, lldpXdot1dcbxAdminPFCEnableEntry=lldpXdot1dcbxAdminPFCEnableEntry, lldpV2Xdot1ConfigProtoVlanTxEnable=lldpV2Xdot1ConfigProtoVlanTxEnable, lldpV2Xdot1RemManVidV2Entry=lldpV2Xdot1RemManVidV2Entry, lldpXdot1dcbxAdminETSConTSATrafficClass=lldpXdot1dcbxAdminETSConTSATrafficClass, lldpXdot1dcbxRemoteData=lldpXdot1dcbxRemoteData, lldpV2Xdot1Conformance=lldpV2Xdot1Conformance, lldpXdot1dcbxAdminETSConTrafficSelectionAlgorithmEntry=lldpXdot1dcbxAdminETSConTrafficSelectionAlgorithmEntry, LldpXdot1dcbxAppProtocol=LldpXdot1dcbxAppProtocol, lldpV2Xdot1LocalData=lldpV2Xdot1LocalData, lldpV2Xdot1LocCnEntry=lldpV2Xdot1LocCnEntry, lldpV2Xdot1RemProtoVlanEntry=lldpV2Xdot1RemProtoVlanEntry, lldpXdot1dcbxConfigETSRecommendationTable=lldpXdot1dcbxConfigETSRecommendationTable, lldpV2Xdot1RxComplianceV2=lldpV2Xdot1RxComplianceV2, lldpXdot1dcbxAdminPFCBasicEntry=lldpXdot1dcbxAdminPFCBasicEntry, lldpXdot1dcbxAdminApplicationVlanAppEntry=lldpXdot1dcbxAdminApplicationVlanAppEntry, lldpXdot1dcbxRemPFCWilling=lldpXdot1dcbxRemPFCWilling, lldpV2Xdot1ConfigVlanNameTable=lldpV2Xdot1ConfigVlanNameTable, lldpV2Xdot1LocVlanNameTable=lldpV2Xdot1LocVlanNameTable, lldpV2Xdot1RemCnTable=lldpV2Xdot1RemCnTable, lldpXdot1CnCompliance=lldpXdot1CnCompliance, lldpXdot1dcbxConfigPFCTxEnable=lldpXdot1dcbxConfigPFCTxEnable, lldpXdot1dcbxAdminPFCWilling=lldpXdot1dcbxAdminPFCWilling, lldpXdot1dcbxLocPFCEnablePriority=lldpXdot1dcbxLocPFCEnablePriority, lldpXdot1dcbxObjects=lldpXdot1dcbxObjects, lldpV2Xdot1RemProtocolIndex=lldpV2Xdot1RemProtocolIndex, lldpV2Xdot1LocVlanId=lldpV2Xdot1LocVlanId, lldpV2Xdot1TxCompliance=lldpV2Xdot1TxCompliance, lldpXdot1dcbxConfigApplicationVlanTable=lldpXdot1dcbxConfigApplicationVlanTable, lldpXdot1dcbxLocApplicationVlanAppEntry=lldpXdot1dcbxLocApplicationVlanAppEntry, lldpV2Xdot1RemSysGroup=lldpV2Xdot1RemSysGroup, lldpXdot1dcbxAdminPFCCap=lldpXdot1dcbxAdminPFCCap, lldpXdot1dcbxLocETSConTrafficSelectionAlgorithmTable=lldpXdot1dcbxLocETSConTrafficSelectionAlgorithmTable, LldpXdot1dcbxSupportedCapacity=LldpXdot1dcbxSupportedCapacity, lldpXdot1dcbxRemETSConWilling=lldpXdot1dcbxRemETSConWilling, lldpXdot1dcbxRemApplicationPriorityAppEntry=lldpXdot1dcbxRemApplicationPriorityAppEntry, lldpV2Xdot1ConfigPortVlanEntry=lldpV2Xdot1ConfigPortVlanEntry, lldpV2Xdot1RemManVidTable=lldpV2Xdot1RemManVidTable, lldpXdot1dcbxConformance=lldpXdot1dcbxConformance, lldpXdot1dcbxConfigApplicationPriorityTxEnable=lldpXdot1dcbxConfigApplicationPriorityTxEnable, lldpXdot1CnConfigCnTxEnable=lldpXdot1CnConfigCnTxEnable, lldpXdot1dcbxRemETSRecoTrafficClass=lldpXdot1dcbxRemETSRecoTrafficClass, lldpXdot1dcbxAdminETSRecoTSATrafficClass=lldpXdot1dcbxAdminETSRecoTSATrafficClass, lldpV2Xdot1ConfigProtocolTable=lldpV2Xdot1ConfigProtocolTable, lldpV2Xdot1RemLinkAggPortId=lldpV2Xdot1RemLinkAggPortId, lldpXdot1dcbxRemETSConPriorityAssignmentTable=lldpXdot1dcbxRemETSConPriorityAssignmentTable, lldpXdot1CnObjects=lldpXdot1CnObjects, lldpV2Xdot1LocLinkAggPortId=lldpV2Xdot1LocLinkAggPortId, lldpV2Xdot1LocProtoVlanEntry=lldpV2Xdot1LocProtoVlanEntry, lldpXdot1dcbxAdminETSConfiguration=lldpXdot1dcbxAdminETSConfiguration, lldpXdot1dcbxAdminApplicationPriorityAEPriority=lldpXdot1dcbxAdminApplicationPriorityAEPriority, lldpXdot1dcbxRemETSRecoTrafficClassBandwidthEntry=lldpXdot1dcbxRemETSRecoTrafficClassBandwidthEntry, lldpV2Xdot1RemProtocolEntry=lldpV2Xdot1RemProtocolEntry, lldpXdot1dcbxLocPFC=lldpXdot1dcbxLocPFC, lldpV2Xdot1LocProtocolIndex=lldpV2Xdot1LocProtocolIndex, lldpXdot1dcbxRemApplicationPriorityAESelector=lldpXdot1dcbxRemApplicationPriorityAESelector, lldpXdot1dcbxAdminETSConTrafficClassBandwidthEntry=lldpXdot1dcbxAdminETSConTrafficClassBandwidthEntry, lldpV2Xdot1LocVlanNameEntry=lldpV2Xdot1LocVlanNameEntry, lldpXdot1dcbxAdminETSConTrafficClassBandwidth=lldpXdot1dcbxAdminETSConTrafficClassBandwidth, lldpXdot1CnConfig=lldpXdot1CnConfig, lldpV2Xdot1RemManVidV2=lldpV2Xdot1RemManVidV2, lldpXdot1CnCompliances=lldpXdot1CnCompliances, lldpXdot1dcbxLocPFCEnableEnabled=lldpXdot1dcbxLocPFCEnableEnabled, lldpV2Xdot1LocManVid=lldpV2Xdot1LocManVid, lldpXdot1dcbxLocPFCBasicEntry=lldpXdot1dcbxLocPFCBasicEntry, lldpXdot1dcbxAdminPFCEnableTable=lldpXdot1dcbxAdminPFCEnableTable, lldpXdot1dcbxAdminETSRecoTrafficClassBandwidthTable=lldpXdot1dcbxAdminETSRecoTrafficClassBandwidthTable, lldpV2Xdot1LocTable=lldpV2Xdot1LocTable, lldpXdot1dcbxLocApplicationVlanAEVlanId=lldpXdot1dcbxLocApplicationVlanAEVlanId, lldpXdot1CnGroups=lldpXdot1CnGroups, lldpXdot1dcbxConfigETSRecommendationEntry=lldpXdot1dcbxConfigETSRecommendationEntry, lldpXdot1dcbxLocETSRecoTSATrafficClass=lldpXdot1dcbxLocETSRecoTSATrafficClass, lldpXdot1dcbxAdminETSConTrafficClassesSupported=lldpXdot1dcbxAdminETSConTrafficClassesSupported, lldpXdot1dcbxAdminPFCMBC=lldpXdot1dcbxAdminPFCMBC, lldpV2Xdot1LocCnTable=lldpV2Xdot1LocCnTable, lldpXdot1dcbxRemApplicationVlanAppTable=lldpXdot1dcbxRemApplicationVlanAppTable, lldpXdot1dcbxAdminETSConTrafficClassBandwidthTable=lldpXdot1dcbxAdminETSConTrafficClassBandwidthTable, lldpXdot1dcbxLocApplicationPriorityAppEntry=lldpXdot1dcbxLocApplicationPriorityAppEntry, lldpXdot1dcbxLocApplicationPriorityAESelector=lldpXdot1dcbxLocApplicationPriorityAESelector, lldpXdot1dcbxLocETSConTSATrafficClass=lldpXdot1dcbxLocETSConTSATrafficClass, lldpV2Xdot1RemVidUsageDigestEntry=lldpV2Xdot1RemVidUsageDigestEntry, lldpXdot1dcbxRemETSConfiguration=lldpXdot1dcbxRemETSConfiguration, lldpXdot1dcbxAdminApplicationVlanAESelector=lldpXdot1dcbxAdminApplicationVlanAESelector, lldpV2Xdot1LocCNPVIndicators=lldpV2Xdot1LocCNPVIndicators, lldpV2Xdot1RemLinkAggStatus=lldpV2Xdot1RemLinkAggStatus, lldpXdot1dcbxAdminApplicationVlanAEProtocol=lldpXdot1dcbxAdminApplicationVlanAEProtocol, lldpV2Xdot1RemTable=lldpV2Xdot1RemTable, lldpXdot1dcbxRemPFC=lldpXdot1dcbxRemPFC, lldpV2Xdot1RxCompliance=lldpV2Xdot1RxCompliance, LldpXdot1dcbxTrafficSelectionAlgorithm=LldpXdot1dcbxTrafficSelectionAlgorithm, lldpV2Xdot1ConfigVidUsageDigestTable=lldpV2Xdot1ConfigVidUsageDigestTable, lldpXdot1dcbxLocETSBasicConfigurationTable=lldpXdot1dcbxLocETSBasicConfigurationTable, lldpXdot1dcbxRemETSConPriorityAssignmentEntry=lldpXdot1dcbxRemETSConPriorityAssignmentEntry, lldpXdot1dcbxAdminApplicationPriorityAEProtocol=lldpXdot1dcbxAdminApplicationPriorityAEProtocol, lldpV2Xdot1ConfigVlanNameTxEnable=lldpV2Xdot1ConfigVlanNameTxEnable, LldpV2CnBitVector=LldpV2CnBitVector, lldpXdot1dcbxRemPFCEnablePriority=lldpXdot1dcbxRemPFCEnablePriority, lldpXdot1dcbxRemETSRecoTrafficSelectionAlgorithm=lldpXdot1dcbxRemETSRecoTrafficSelectionAlgorithm, lldpXdot1dcbxRemPFCEnableEnabled=lldpXdot1dcbxRemPFCEnableEnabled, lldpXdot1dcbxETSGroup=lldpXdot1dcbxETSGroup, lldpXdot1dcbxLocApplicationPriorityAppTable=lldpXdot1dcbxLocApplicationPriorityAppTable, lldpXdot1dcbxRemETSConTSATrafficClass=lldpXdot1dcbxRemETSConTSATrafficClass, lldpXdot1dcbxRemPFCBasicTable=lldpXdot1dcbxRemPFCBasicTable, lldpXdot1dcbxLocETSConTrafficClassBandwidth=lldpXdot1dcbxLocETSConTrafficClassBandwidth, lldpV2Xdot1Groups=lldpV2Xdot1Groups, lldpV2Xdot1ConfigManVidTxEnable=lldpV2Xdot1ConfigManVidTxEnable, lldpXdot1dcbxLocPFCCap=lldpXdot1dcbxLocPFCCap, lldpXdot1dcbxRemApplicationVlanAEProtocol=lldpXdot1dcbxRemApplicationVlanAEProtocol, lldpV2Xdot1ConfigVidUsageDigestEntry=lldpV2Xdot1ConfigVidUsageDigestEntry, lldpV2Xdot1Config=lldpV2Xdot1Config, lldpV2Xdot1RemVidUsageDigestV2=lldpV2Xdot1RemVidUsageDigestV2, lldpXdot1dcbxConfigApplicationPriorityEntry=lldpXdot1dcbxConfigApplicationPriorityEntry, lldpXdot1dcbxAdminETSConTrafficSelectionAlgorithmTable=lldpXdot1dcbxAdminETSConTrafficSelectionAlgorithmTable, lldpXdot1dcbxRemETSConTrafficSelectionAlgorithmTable=lldpXdot1dcbxRemETSConTrafficSelectionAlgorithmTable, lldpXdot1dcbxRemPFCMBC=lldpXdot1dcbxRemPFCMBC, lldpXdot1dcbxApplicationVlanGroup=lldpXdot1dcbxApplicationVlanGroup, LldpXdot1dcbxAppSelector=LldpXdot1dcbxAppSelector, lldpV2Xdot1LocProtoVlanSupported=lldpV2Xdot1LocProtoVlanSupported, lldpXdot1dcbxLocPFCEnableTable=lldpXdot1dcbxLocPFCEnableTable, lldpXdot1dcbxPFCGroup=lldpXdot1dcbxPFCGroup, lldpXdot1dcbxAdminETSConTrafficSelectionAlgorithm=lldpXdot1dcbxAdminETSConTrafficSelectionAlgorithm, lldpXdot1dcbxRemETSConTrafficClass=lldpXdot1dcbxRemETSConTrafficClass, lldpV2Xdot1LocLinkAggTable=lldpV2Xdot1LocLinkAggTable, lldpXdot1dcbxAdminApplicationPriorityAESelector=lldpXdot1dcbxAdminApplicationPriorityAESelector, lldpXdot1dcbxCompliances=lldpXdot1dcbxCompliances, lldpXdot1dcbxLocApplicationVlanAppTable=lldpXdot1dcbxLocApplicationVlanAppTable, lldpXdot1dcbxRemApplicationPriorityAEProtocol=lldpXdot1dcbxRemApplicationPriorityAEProtocol, lldpXdot1dcbxAdminETSConPriorityAssignmentEntry=lldpXdot1dcbxAdminETSConPriorityAssignmentEntry, lldpXdot1dcbxRemApplicationPriorityAppTable=lldpXdot1dcbxRemApplicationPriorityAppTable, lldpXdot1dcbxConfigETSRecommendationTxEnable=lldpXdot1dcbxConfigETSRecommendationTxEnable, lldpXdot1dcbxConfigETSConfigurationEntry=lldpXdot1dcbxConfigETSConfigurationEntry, lldpXdot1dcbxLocETSConTrafficClass=lldpXdot1dcbxLocETSConTrafficClass, lldpV2Xdot1LocProtocolTable=lldpV2Xdot1LocProtocolTable, lldpV2Xdot1RemCNPVIndicators=lldpV2Xdot1RemCNPVIndicators, lldpXdot1dcbxRemETSConTrafficClassBandwidthTable=lldpXdot1dcbxRemETSConTrafficClassBandwidthTable, lldpV2Xdot1LocLinkAggStatus=lldpV2Xdot1LocLinkAggStatus, lldpV2Xdot1RemCnEntry=lldpV2Xdot1RemCnEntry, lldpXdot1dcbxLocETSRecoTrafficClass=lldpXdot1dcbxLocETSRecoTrafficClass, lldpXdot1dcbxRemETSConTrafficClassBandwidthEntry=lldpXdot1dcbxRemETSConTrafficClassBandwidthEntry, lldpXdot1dcbxAdminETSConCreditBasedShaperSupport=lldpXdot1dcbxAdminETSConCreditBasedShaperSupport, lldpXdot1dcbxAdminETSConPriority=lldpXdot1dcbxAdminETSConPriority, lldpV2Xdot1RemLinkAggTable=lldpV2Xdot1RemLinkAggTable, lldpXdot1dcbxLocETSReco=lldpXdot1dcbxLocETSReco, lldpV2Xdot1ConfigVlanNameEntry=lldpV2Xdot1ConfigVlanNameEntry, lldpXdot1dcbxAdminApplicationPriorityAppTable=lldpXdot1dcbxAdminApplicationPriorityAppTable, lldpV2Xdot1LocSysGroup=lldpV2Xdot1LocSysGroup, lldpV2Xdot1LocProtoVlanEnabled=lldpV2Xdot1LocProtoVlanEnabled, lldpV2Xdot1LocVidUsageDigest=lldpV2Xdot1LocVidUsageDigest, lldpXdot1CnConformance=lldpXdot1CnConformance, lldpXdot1dcbxLocETSConfiguration=lldpXdot1dcbxLocETSConfiguration, lldpXdot1dcbxLocETSRecoTrafficSelectionAlgorithmEntry=lldpXdot1dcbxLocETSRecoTrafficSelectionAlgorithmEntry, lldpXdot1dcbxRemETSRecoTrafficClassBandwidthTable=lldpXdot1dcbxRemETSRecoTrafficClassBandwidthTable, lldpXdot1dcbxAdminETSRecoTrafficSelectionAlgorithmTable=lldpXdot1dcbxAdminETSRecoTrafficSelectionAlgorithmTable, lldpV2Xdot1ConfigManVidTable=lldpV2Xdot1ConfigManVidTable, lldpXdot1dcbxAdminETSConPriorityAssignmentTable=lldpXdot1dcbxAdminETSConPriorityAssignmentTable, lldpXdot1dcbxAdminETSConPriTrafficClass=lldpXdot1dcbxAdminETSConPriTrafficClass, lldpV2Xdot1MIB=lldpV2Xdot1MIB, lldpV2Xdot1LocManVidEntry=lldpV2Xdot1LocManVidEntry, lldpXdot1dcbxLocETSRecoTrafficClassBandwidthEntry=lldpXdot1dcbxLocETSRecoTrafficClassBandwidthEntry, lldpV2Xdot1LocReadyIndicators=lldpV2Xdot1LocReadyIndicators, lldpV2Xdot1RemProtocolTable=lldpV2Xdot1RemProtocolTable, lldpXdot1dcbxLocPFCMBC=lldpXdot1dcbxLocPFCMBC, lldpXdot1dcbxRemETSRecoTrafficSelectionAlgorithmEntry=lldpXdot1dcbxRemETSRecoTrafficSelectionAlgorithmEntry, lldpXdot1dcbxAdminETSBasicConfigurationEntry=lldpXdot1dcbxAdminETSBasicConfigurationEntry, lldpXdot1dcbxAdminApplicationVlanAEVlanId=lldpXdot1dcbxAdminApplicationVlanAEVlanId, lldpV2Xdot1ConfigProtoVlanEntry=lldpV2Xdot1ConfigProtoVlanEntry, lldpV2Xdot1LocLinkAggEntry=lldpV2Xdot1LocLinkAggEntry, lldpXdot1dcbxRemETSConPriTrafficClass=lldpXdot1dcbxRemETSConPriTrafficClass, lldpV2Xdot1ConfigPortVlanTxEnable=lldpV2Xdot1ConfigPortVlanTxEnable, lldpV2Xdot1RemVlanNameTable=lldpV2Xdot1RemVlanNameTable, lldpV2Xdot1ConfigGroup=lldpV2Xdot1ConfigGroup, lldpXdot1dcbxMIB=lldpXdot1dcbxMIB, lldpXdot1CnConfigCnTable=lldpXdot1CnConfigCnTable)
mibBuilder.exportSymbols("LLDP-EXT-DOT1-V2-MIB", lldpXdot1dcbxAdminData=lldpXdot1dcbxAdminData, lldpXdot1dcbxAdminETSBasicConfigurationTable=lldpXdot1dcbxAdminETSBasicConfigurationTable, lldpV2Xdot1LocVidUsageDigestTable=lldpV2Xdot1LocVidUsageDigestTable, lldpV2Xdot1RemPortVlanId=lldpV2Xdot1RemPortVlanId, lldpXdot1dcbxLocETSConPriority=lldpXdot1dcbxLocETSConPriority, lldpV2Xdot1ConfigVidUsageDigestTxEnable=lldpV2Xdot1ConfigVidUsageDigestTxEnable, lldpXdot1dcbxLocETSRecoTrafficSelectionAlgorithmTable=lldpXdot1dcbxLocETSRecoTrafficSelectionAlgorithmTable, lldpXdot1dcbxRemETSConTrafficClassBandwidth=lldpXdot1dcbxRemETSConTrafficClassBandwidth, lldpXdot1dcbxRemApplicationVlanAppEntry=lldpXdot1dcbxRemApplicationVlanAppEntry, lldpXdot1dcbxLocETSConPriorityAssignmentEntry=lldpXdot1dcbxLocETSConPriorityAssignmentEntry, lldpXdot1dcbxLocETSRecoTrafficClassBandwidthTable=lldpXdot1dcbxLocETSRecoTrafficClassBandwidthTable, lldpV2Xdot1ConfigManVidEntry=lldpV2Xdot1ConfigManVidEntry, lldpXdot1dcbxLocETSConTrafficSelectionAlgorithm=lldpXdot1dcbxLocETSConTrafficSelectionAlgorithm, lldpV2Xdot1LocProtocolEntry=lldpV2Xdot1LocProtocolEntry, lldpXdot1dcbxAdminPFCBasicTable=lldpXdot1dcbxAdminPFCBasicTable, lldpV2Xdot1RemManVid=lldpV2Xdot1RemManVid, lldpV2Xdot1RemProtoVlanSupported=lldpV2Xdot1RemProtoVlanSupported, lldpXdot1dcbxLocETSConTrafficClassesSupported=lldpXdot1dcbxLocETSConTrafficClassesSupported, lldpXdot1dcbxAdminETSRecoTrafficSelectionAlgorithmEntry=lldpXdot1dcbxAdminETSRecoTrafficSelectionAlgorithmEntry, lldpXdot1CnRemoteData=lldpXdot1CnRemoteData, lldpXdot1dcbxRemETSRecoTrafficClassBandwidth=lldpXdot1dcbxRemETSRecoTrafficClassBandwidth, lldpV2Xdot1Objects=lldpV2Xdot1Objects, lldpXdot1dcbxAdminETSRecoTrafficSelectionAlgorithm=lldpXdot1dcbxAdminETSRecoTrafficSelectionAlgorithm, lldpXdot1dcbxLocalData=lldpXdot1dcbxLocalData, lldpXdot1dcbxRemETSRecoTrafficSelectionAlgorithmTable=lldpXdot1dcbxRemETSRecoTrafficSelectionAlgorithmTable, lldpXdot1CnLocalData=lldpXdot1CnLocalData, lldpXdot1dcbxAdminApplicationPriorityAppEntry=lldpXdot1dcbxAdminApplicationPriorityAppEntry, lldpXdot1dcbxRemPFCCap=lldpXdot1dcbxRemPFCCap, lldpXdot1dcbxRemApplicationVlanAEVlanId=lldpXdot1dcbxRemApplicationVlanAEVlanId, lldpXdot1dcbxLocETSConTrafficClassBandwidthEntry=lldpXdot1dcbxLocETSConTrafficClassBandwidthEntry, lldpXdot1dcbxAdminPFCEnablePriority=lldpXdot1dcbxAdminPFCEnablePriority, lldpXdot1dcbxRemPFCBasicEntry=lldpXdot1dcbxRemPFCBasicEntry, lldpV2Xdot1LocVlanName=lldpV2Xdot1LocVlanName, lldpXdot1dcbxConfigETSConfigurationTxEnable=lldpXdot1dcbxConfigETSConfigurationTxEnable, lldpXdot1dcbxConfigPFCEntry=lldpXdot1dcbxConfigPFCEntry, lldpXdot1dcbxConfigApplicationVlanTxEnable=lldpXdot1dcbxConfigApplicationVlanTxEnable, lldpV2Xdot1RemProtocolId=lldpV2Xdot1RemProtocolId)
