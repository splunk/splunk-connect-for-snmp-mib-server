#
# PySNMP MIB module ASCEND-MIBPORT1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBPORT1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:12:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Gauge32, Counter32, NotificationType, Counter64, ObjectIdentity, ModuleIdentity, MibIdentifier, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Unsigned32, Integer32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Gauge32", "Counter32", "NotificationType", "Counter64", "ObjectIdentity", "ModuleIdentity", "MibIdentifier", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Unsigned32", "Integer32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

mibportProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 102))
mibportProfileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 102, 1), )
if mibBuilder.loadTexts: mibportProfileTable.setStatus('mandatory')
mibportProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1), ).setIndexNames((0, "ASCEND-MIBPORT1-MIB", "portProfile-Shelf-o"), (0, "ASCEND-MIBPORT1-MIB", "portProfile-Slot-o"), (0, "ASCEND-MIBPORT1-MIB", "portProfile-Item-o"))
if mibBuilder.loadTexts: mibportProfileEntry.setStatus('mandatory')
portProfile_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 1), Integer32()).setLabel("portProfile-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: portProfile_Shelf_o.setStatus('mandatory')
portProfile_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 2), Integer32()).setLabel("portProfile-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: portProfile_Slot_o.setStatus('mandatory')
portProfile_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 3), Integer32()).setLabel("portProfile-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: portProfile_Item_o.setStatus('mandatory')
portProfile_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("portProfile-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_PhysicalAddress_Shelf.setStatus('mandatory')
portProfile_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("portProfile-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_PhysicalAddress_Slot.setStatus('mandatory')
portProfile_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 6), Integer32()).setLabel("portProfile-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_PhysicalAddress_ItemNumber.setStatus('mandatory')
portProfile_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 7), DisplayString()).setLabel("portProfile-Name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_Name.setStatus('mandatory')
portProfile_LastModificationTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 8), Integer32()).setLabel("portProfile-LastModificationTime").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_LastModificationTime.setStatus('mandatory')
portProfile_PortAnswerNumber1 = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 9), DisplayString()).setLabel("portProfile-PortAnswerNumber1").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_PortAnswerNumber1.setStatus('mandatory')
portProfile_PortAnswerNumber2 = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 10), DisplayString()).setLabel("portProfile-PortAnswerNumber2").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_PortAnswerNumber2.setStatus('mandatory')
portProfile_PortAnswerNumber3 = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 11), DisplayString()).setLabel("portProfile-PortAnswerNumber3").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_PortAnswerNumber3.setStatus('mandatory')
portProfile_PortAnswerNumber4 = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 12), DisplayString()).setLabel("portProfile-PortAnswerNumber4").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_PortAnswerNumber4.setStatus('mandatory')
portProfile_oIdle = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("call", 2)))).setLabel("portProfile-oIdle").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_oIdle.setStatus('mandatory')
portProfile_oDial = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("portDialTerminal", 1), ("portDialDtr", 2), ("portDialRs366", 3), ("portDialRs366x", 4), ("portDialV25bis", 5), ("portDialV25bisC", 6), ("portDialX21", 7), ("portDialX21x", 8), ("portDialX21Ptel", 9), ("numberOfPortDial", 10)))).setLabel("portProfile-oDial").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_oDial.setStatus('mandatory')
portProfile_PortAnswer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("portAnswerAuto", 1), ("portAnswerDtr", 2), ("portAnswerDtrRing", 3), ("portAnswerV25bis", 4), ("portAnswerV25bisC", 5), ("portAnswerTerminal", 6), ("portAnswerNone", 7), ("portAnswerX21", 8), ("portAnswerAutoManual", 9), ("numberOfPortAnswer", 10)))).setLabel("portProfile-PortAnswer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_PortAnswer.setStatus('mandatory')
portProfile_oClear = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("dtrActive", 1), ("dtrInactive", 2), ("rtsActive", 3), ("rtsInactive", 4), ("terminal", 5)))).setLabel("portProfile-oClear").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_oClear.setStatus('mandatory')
portProfile_PortMinPriBw = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 17), Integer32()).setLabel("portProfile-PortMinPriBw").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_PortMinPriBw.setStatus('mandatory')
portProfile_PortTerminalTiming = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("portProfile-PortTerminalTiming").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_PortTerminalTiming.setStatus('mandatory')
portProfile_oRS366Esc = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("star", 1), ("pound", 2), ("n-5", 3), ("n-6", 4), ("n-7", 5), ("n-9", 6), ("n-0", 7), ("n-00", 8), ("numberEsc366", 9)))).setLabel("portProfile-oRS366Esc").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_oRS366Esc.setStatus('mandatory')
portProfile_oEarlyCD = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("answer", 2), ("originate", 3), ("both", 4)))).setLabel("portProfile-oEarlyCD").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_oEarlyCD.setStatus('mandatory')
portProfile_PortDs0MinReset = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("daily", 2), ("monthly", 3)))).setLabel("portProfile-PortDs0MinReset").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_PortDs0MinReset.setStatus('mandatory')
portProfile_MaxPortDs0Mins = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 22), Integer32()).setLabel("portProfile-MaxPortDs0Mins").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_MaxPortDs0Mins.setStatus('mandatory')
portProfile_MaxCallDurationTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 23), Integer32()).setLabel("portProfile-MaxCallDurationTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_MaxCallDurationTimer.setStatus('mandatory')
portProfile_DialPlan = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 24), Integer32()).setLabel("portProfile-DialPlan").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_DialPlan.setStatus('mandatory')
portProfile_TrunkGroupsNa = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("portProfile-TrunkGroupsNa").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_TrunkGroupsNa.setStatus('mandatory')
portProfile_PortPassword = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 26), DisplayString()).setLabel("portProfile-PortPassword").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_PortPassword.setStatus('mandatory')
portProfile_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 102, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("portProfile-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: portProfile_Action_o.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-MIBPORT1-MIB", portProfile_Action_o=portProfile_Action_o, portProfile_PortTerminalTiming=portProfile_PortTerminalTiming, portProfile_oDial=portProfile_oDial, mibportProfileTable=mibportProfileTable, mibportProfile=mibportProfile, portProfile_PortAnswerNumber4=portProfile_PortAnswerNumber4, portProfile_Shelf_o=portProfile_Shelf_o, portProfile_PortDs0MinReset=portProfile_PortDs0MinReset, portProfile_MaxCallDurationTimer=portProfile_MaxCallDurationTimer, portProfile_TrunkGroupsNa=portProfile_TrunkGroupsNa, portProfile_PortAnswerNumber1=portProfile_PortAnswerNumber1, portProfile_Name=portProfile_Name, portProfile_oIdle=portProfile_oIdle, portProfile_PhysicalAddress_Shelf=portProfile_PhysicalAddress_Shelf, portProfile_PortAnswerNumber2=portProfile_PortAnswerNumber2, portProfile_PhysicalAddress_ItemNumber=portProfile_PhysicalAddress_ItemNumber, portProfile_PortAnswer=portProfile_PortAnswer, DisplayString=DisplayString, portProfile_DialPlan=portProfile_DialPlan, portProfile_oRS366Esc=portProfile_oRS366Esc, portProfile_PhysicalAddress_Slot=portProfile_PhysicalAddress_Slot, portProfile_PortPassword=portProfile_PortPassword, portProfile_LastModificationTime=portProfile_LastModificationTime, portProfile_oClear=portProfile_oClear, portProfile_Item_o=portProfile_Item_o, portProfile_MaxPortDs0Mins=portProfile_MaxPortDs0Mins, mibportProfileEntry=mibportProfileEntry, portProfile_Slot_o=portProfile_Slot_o, portProfile_oEarlyCD=portProfile_oEarlyCD, portProfile_PortAnswerNumber3=portProfile_PortAnswerNumber3, portProfile_PortMinPriBw=portProfile_PortMinPriBw)
