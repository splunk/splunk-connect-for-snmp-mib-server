#
# PySNMP MIB module TNMS-NBI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TNMS-NBI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:16:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Counter64, Integer32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, enterprises, Gauge32, IpAddress, MibIdentifier, Bits, ModuleIdentity, ObjectIdentity, NotificationType, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "Integer32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "enterprises", "Gauge32", "IpAddress", "MibIdentifier", "Bits", "ModuleIdentity", "ObjectIdentity", "NotificationType", "iso")
TimeStamp, VariablePointer, RowStatus, DateAndTime, DisplayString, TruthValue, TextualConvention, AutonomousType = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "VariablePointer", "RowStatus", "DateAndTime", "DisplayString", "TruthValue", "TextualConvention", "AutonomousType")
coriant = MibIdentifier((1, 3, 6, 1, 4, 1, 42229))
svsProductMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6))
svsProxEnms = ModuleIdentity((1, 3, 6, 1, 4, 1, 42229, 6, 22))
svsProxEnms.setRevisions(('2016-10-28 00:00', '2016-10-28 00:00', '2016-03-15 00:00', '2015-07-24 00:00', '2015-04-30 00:00', '2014-10-04 00:00', '2014-09-29 00:00', '2014-06-23 00:00',))
if mibBuilder.loadTexts: svsProxEnms.setLastUpdated('201610280000Z')
if mibBuilder.loadTexts: svsProxEnms.setOrganization('Coriant')
class DisplayString(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255t'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class Boolean(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("false", 0), ("true", 1))

class TrapFilter(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("sendTrapsOn", 1), ("sendTrapsOff", 2))

class EnmsTimeStamp(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class InfoString(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class TPIndex(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class UniqueId(TextualConvention, Unsigned32):
    status = 'current'

class NEId(UniqueId):
    status = 'current'

class ModuleId(UniqueId):
    status = 'current'

class PortId(UniqueId):
    status = 'current'

class TPId(UniqueId):
    status = 'current'

class PortConnId(UniqueId):
    status = 'current'

class SNCId(UniqueId):
    status = 'current'

class EthernetPathId(UniqueId):
    status = 'current'

class CCId(UniqueId):
    status = 'current'

class SubscriberId(UniqueId):
    status = 'current'

class ServiceId(UniqueId):
    status = 'current'

class VpcId(UniqueId):
    status = 'current'

class VccId(UniqueId):
    status = 'current'

class Bandwidth(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class PerceivedSeverity(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("cleared", 0), ("warning", 1), ("minor", 2), ("major", 3), ("critical", 4), ("indeterminate", 5), ("nonExistent", 6), ("nonAlarmed", 7), ("notAlarmed", 8))

class AlarmClass(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("unknown", 0), ("communication", 1), ("quality", 2), ("processing", 3), ("equipment", 4), ("environment", 5), ("system", 6), ("threshold", 7), ("security", 8))

class AlarmState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("noAlarm", 1), ("acknowledged", 2), ("unAcknowledged", 3))

class OperationalState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("unknown", 1), ("enabled", 2), ("disabled", 3), ("partiallyEnabled", 4))

class OperatingMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("operation", 1), ("maintenance", 2))

class AdministrativeState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("unknown", 0), ("locked", 1), ("unlocked", 2), ("shuttingDown", 3), ("starting", 4))

class ProvisioningState(TextualConvention, Integer32):
    status = 'obsolete'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("provisioned", 1), ("unprovisioned", 2))

class UsageState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("idle", 1), ("active", 2), ("busy", 3))

class ProtectionState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("non", 0), ("working", 1), ("protecting", 2))

class EntityType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("other", 0), ("proxy", 1), ("module", 2), ("ne", 3), ("port", 4), ("tp", 5), ("portConn", 6), ("subNetworkConn", 7), ("subscriber", 8), ("service", 9), ("ems", 10), ("ethernetPath", 11), ("pmRequest", 12), ("opmRequest", 13))

class ProbableCause(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254), SingleValueConstraint(255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509), SingleValueConstraint(510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 564, 565, 568, 590, 591, 592, 593, 615, 616, 617, 618, 619, 620, 621, 622, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826), SingleValueConstraint(827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1005, 1006, 1007, 1008, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116), SingleValueConstraint(1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371), SingleValueConstraint(1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626), SingleValueConstraint(1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881), SingleValueConstraint(1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2200, 2201, 2202, 2203), SingleValueConstraint(2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2500, 2501, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3139, 3140, 3141, 3142, 3143, 3144, 3145), SingleValueConstraint(3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 3203, 3228, 3229, 3230, 3232, 3233, 3234, 3235, 3236, 3238, 3239, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293, 3294, 3295, 3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3323, 3324, 3325, 3326, 3327, 3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3398, 3399, 3400, 3401, 3402, 3403, 3404, 3405, 3406, 3407, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3415, 3416, 3417, 3418, 3419, 3420, 3421, 3422, 3423, 3424, 3425, 3426, 3427, 3428), SingleValueConstraint(3429, 3430, 3431, 3432, 3433, 3434, 3435, 3436, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3449, 3450, 3451, 3452, 3453, 3454, 3455, 3456, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487, 3488, 3489, 3490, 3491, 3492, 3493, 3494, 3495, 3496, 3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504, 3505, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 3513, 3514, 3515, 3516, 3517, 3518, 3519, 3520, 3521, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3529, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539, 3540, 3541, 3543, 3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551, 3552, 3553, 3554, 3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 3569, 3570, 3571, 3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579, 3580, 3581, 3582, 3583, 3584, 3585, 3586, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3655, 3656, 3657, 3658, 3659, 3660, 3661, 3662, 3663, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671, 3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679, 3680, 3681, 3682, 3683, 3684), SingleValueConstraint(3685, 3686, 3687, 3688, 3689, 3690, 3691, 3692, 3850, 3851, 3852, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3869, 3870, 3871, 3872, 3873, 3874, 3875, 3876, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 3885, 3886, 3887, 3888, 3889, 3890, 3891, 3892, 3893, 3894, 3895, 3896, 3900, 3901, 3902, 3903, 3904, 3905, 3906, 3907, 3908, 3909, 3910, 3911, 3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3920, 3921, 3922, 3923, 3924, 3925, 3926, 3927, 3928, 3929, 3930, 3931, 3932, 3933, 3934, 3935, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3950, 3951, 3952, 3953, 3954, 3955, 3956, 3957, 3958, 3959, 3960, 3961, 3962, 3963, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3973, 3974, 3975, 3976, 3977, 3978, 3979, 3980, 3981, 3982, 3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 3992, 3993, 3994, 3995, 3996, 3997, 3998, 3999, 4000, 4001, 4500, 4501, 4502, 4503, 4504, 4505, 4506, 4507, 4508, 4509, 4510, 4511, 4512, 4513, 4514, 4515, 4516, 4517, 4518, 4519, 4520, 4521, 4522, 4523, 4524, 4525, 4526, 4527, 4528, 4529, 4530, 4531, 4532, 4533, 4534, 4535, 4536, 4537, 4538, 4539, 4540, 4541, 4542, 4543, 4544, 4545, 4546, 4547, 4548, 4549, 4550, 4551, 4552, 4553, 4554, 4555, 4556, 4557, 4558, 4559, 4560, 4800, 4801, 4802, 4803, 4804, 4805, 4806, 4807, 4808, 4809, 4810, 4811, 4812, 4813, 4814, 4815, 4816, 4817, 4818, 4819, 4820, 4821, 4822, 4823, 4824, 4825, 4826, 4827, 4828, 4829, 4830, 4831, 4832, 4833, 4834, 4835, 4836), SingleValueConstraint(4837, 4838, 4839, 4840, 4841, 4842, 4843, 4844, 4845, 4846, 4847, 5510, 5511, 5512, 5513, 5514, 5515, 5516, 5517, 5518, 5519, 5520, 5521, 5522, 5523, 5524, 5525, 5526, 5527, 5528, 5529, 5530, 5531, 5532, 5533, 5534, 5535, 5536, 5537, 5538, 5539, 5540, 5541, 5542, 5543, 5544, 5545, 5546, 5547, 5548, 5549, 5550, 5551, 5552, 5553, 5554, 5555, 5556, 5557, 6000, 6001, 6002, 6003, 6004, 6005, 6006, 6007, 6008, 6009, 6010, 6011, 6012, 6013, 6014, 6015, 6016, 6017, 6018, 6019, 6020, 6021, 6022, 6023, 6024, 6025, 6026, 6027, 6028, 6029, 6030, 6031, 6032, 6033, 6034, 6035, 6036, 6037, 6038, 6039, 6040, 6041, 6042, 6043, 6044, 6045, 6046, 6047, 6048, 6049, 6050, 6051, 6052, 6053, 6054, 6055, 6056, 6057, 6058, 6059, 6060, 6061, 6062, 6063, 6064, 6065, 6066, 6067, 6068, 6069, 6070, 6072, 6073, 6074, 6075, 6076, 6077, 6078, 6079, 6080, 6081, 6082, 6083, 6084, 6085, 6086, 6087, 6088, 6089, 6090, 6091, 6092, 6093, 6094, 6095, 6096, 6097, 6098, 6099, 6100, 6101, 6102, 6103, 6104, 6105, 6106, 6107, 6108, 6109, 6110, 6111, 6112, 6113, 6114, 6115, 6116, 6117, 6118, 6119, 6120, 6121, 6122, 6123, 6124, 6125, 6126, 6127, 6128, 6129, 6130, 6131, 6132, 6133, 6134, 6135, 6136, 6137, 6138, 6139, 6140, 6141, 6142, 6143, 6144, 6145, 6146, 6147, 6148, 6149, 6150, 6151, 6152, 6153, 6154, 6155, 6156, 6157, 6158, 6159, 6160, 6161, 6162, 6163, 6164, 6165, 6166, 6167, 6168, 6169, 6170, 6171, 6172, 6173, 6174, 6175, 6176, 6177, 6178, 6179, 6180, 6181, 6182, 6183, 6184, 6185, 6186, 6187, 6188, 6189, 6190, 6191, 6192, 6193, 6194, 6195, 6196), SingleValueConstraint(6197, 6198, 6199, 6200, 6201, 6202, 6203, 6204, 6205, 6206, 6207, 6208, 6209, 6210, 6211, 6212, 6213, 6214, 6215, 6216, 6217, 6218, 6219, 6220, 6221, 6222, 6223, 6224, 6225, 6226, 6227, 6228, 6229, 6230, 6231, 6232, 6233, 6234, 6235, 6236, 6237, 6238, 6239, 6240, 6241, 6242, 6243, 6244, 6245, 6246, 6247, 6248, 6249, 6250, 6251, 6252, 6253, 6254, 6255, 6256, 6257, 6258, 6259, 6260, 6261, 6262, 6263, 6264, 6265, 6266, 6267, 6268, 6269, 6270, 6271, 6272, 6273, 6274, 6275, 6276, 6277, 6278, 6279, 6280, 6281, 6282, 6283, 6284, 6285, 6286, 6287, 6288, 6289, 6290, 6291, 6292, 6293, 6294, 6295, 6296, 6297, 6298, 6299, 6300, 6301, 6302, 6303, 6304, 6305, 6306, 6307, 6308, 6309, 6310, 6311, 6312, 6313, 6314, 6315, 6316, 6317, 6318, 6319, 6320, 6321, 6322, 6323, 6324, 6325, 6326, 6327, 6328, 6329, 6330, 6331, 6332, 6333, 6334, 6335, 6336, 6337, 6338, 6339, 6340, 6341, 6342, 6343, 6344, 6345, 6346, 6347, 6348, 6349, 6350, 6351, 6352, 6353, 6354, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 6362, 6363, 6364, 6365, 6366, 6367, 6368, 6369, 6370, 6371, 6372, 6373, 6374, 6375, 6376, 6377, 6378, 6379, 6380, 6381, 6382, 6383, 6384, 6385, 6386, 6387, 6388, 6389, 6390, 6391, 6392, 6393, 6394, 6395, 6396, 6397, 6398, 6399, 6400, 6401, 6402, 6403, 6404, 6405, 6406, 6407, 6408, 6409, 6410, 6411, 6412, 6413, 6414, 6415, 6416, 6417, 6418, 6419, 6420, 6421, 6422, 6423, 6424, 6425, 6426, 6427, 6428, 6429, 6430, 6431, 6432, 6433, 6434, 6435, 6436, 6437, 6438, 6439, 6440, 6441, 6442, 6443, 6444, 6445, 6446, 6447, 6448, 6449, 6450, 6451), SingleValueConstraint(6452, 6453, 6454, 6455, 6456, 6457, 6458, 6459, 6460, 6461, 6462, 6463, 6464, 6465, 6466, 6467, 6468, 6469, 6470, 6471, 6472, 6473, 6474, 6475, 6476, 6477, 6478, 6479, 6480, 6481, 6482, 6483, 6484, 6485, 6486, 6487, 6488, 6489, 6490, 6491, 6492, 6493, 6494, 6495, 6496, 6497, 6498, 6499, 6500, 6501, 6502, 6503, 6504, 6505, 6506, 6507, 6508, 6509, 6510, 6511, 6512, 6513, 6514, 6515, 6516, 6517, 6518, 6519, 6520, 6521, 6522, 6523, 6524, 6525, 6526, 6527, 6528, 6529, 6530, 6531, 6532, 6533, 6534, 6535, 6536, 6537, 6538, 6539, 6540, 6541, 6542, 6543, 6544, 6545, 6546, 6547, 6548, 6549, 6550, 6551, 6552, 6553, 6554, 6555, 6556, 6557, 6558, 6559, 6560, 6561, 6562, 6563, 6564, 6565, 6566, 6567, 6568, 6569, 6570, 6571, 6572, 6573, 6574, 6575, 6576, 6577, 6578, 6579, 6580, 6581, 6582, 6583, 6584, 6585, 6586, 6587, 6588, 6589, 6590, 6591, 6592, 6593, 6594, 6595, 6596, 6597, 6598, 6599, 6600, 6601, 6602, 6603, 6604, 6605, 6606, 6607, 6608, 6609, 6610, 6611, 6612, 6613, 6614, 6615, 6616, 6617, 6618, 6619, 6620, 6621, 6622, 6623, 6624, 6625, 6626, 6627, 6628, 6629, 6630, 6631, 6632, 6633, 6634, 6635, 6636, 6637, 6638, 6639, 6640, 6641, 6642, 6643, 6644, 6645, 6646, 6647, 6648, 6649, 6650, 6651, 6652, 6653, 6654, 6655, 6656, 6657, 6658, 6659, 6660, 6661, 6662, 6663, 6664, 6665, 6666, 6667, 6668, 6669, 6670, 6671, 6672, 6673, 6674, 6675, 6676, 6677, 6678, 6679, 6680, 6681, 6682, 6683, 6684, 6685, 6686, 6687, 6688, 6689, 6690, 6691, 6692, 6693, 6694, 6695, 6696, 6697, 6698, 6699, 6700, 6701, 6702, 6703, 6704, 6705, 6706), SingleValueConstraint(6707, 6708, 6709, 6710, 6711, 6712, 6713, 6714, 6715, 6716, 6717, 6718, 6719, 6720, 6721, 6722, 6723, 6724, 6725, 6726, 6727, 6728, 6729, 6730, 6731, 6732, 6733, 6734, 6735, 6736, 6737, 6738, 6739, 6740, 6741, 6742, 6743, 6744, 6745, 6746, 6747, 6748, 6749, 6750, 6751, 6752, 6753, 6754, 6755, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 6764, 6765, 6766, 6767, 6768, 6769, 6770, 6771, 6772, 6773, 6774, 6775, 6776, 6777, 6778, 6779, 6780, 6781, 6782, 6783, 6784, 6785, 6786, 6787, 6788, 6789, 6790, 6791, 6792, 6793, 6794, 6795, 6796, 6797, 6798, 6799, 6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6808, 6809, 6810, 6811, 6812, 6813, 6814, 6815, 6816, 6817, 6818, 6819, 6820, 6821, 6822, 6823, 6824, 6825, 6826, 6827, 6828, 6829, 6830, 6831, 6832, 6833, 6834, 6835, 6836, 6837, 6838, 6839, 6840, 6841, 6842, 6843, 6844, 6845, 6846, 6847, 6848, 6849, 6850, 6851, 6852, 6853, 6854, 6855, 6856, 6857, 6858, 6859, 6860, 6861, 6862, 6863, 6864, 6865, 6866, 6867, 6868, 6869, 6870, 6871, 6872, 6873, 6874, 6875, 6876, 6877, 6878, 6879, 6880, 6881, 6882, 6883, 6884, 6885, 6886, 6887, 6888, 6889, 6890, 6891, 6892, 6893, 6894, 6895, 6896, 6897, 6898, 6899, 6900, 6901, 6902, 6903, 6904, 6905, 6906, 6907, 6908, 6909, 6910, 6911, 6912, 6913, 6914, 6915, 6916, 6917, 6918, 6919, 6920, 6921, 6922, 6923, 6924, 6925, 6926, 6927, 6928, 6929, 6930, 6931, 6932, 6933, 6934, 6935, 6936, 6937, 6938, 6939, 6940, 6941, 6942, 6943, 6944, 6945, 6946, 6947, 6948, 6949, 6950, 6951, 6952, 6953, 6954, 6955, 6956, 6957, 6958, 6959, 6960, 6961), SingleValueConstraint(6962, 6963, 6964, 6965, 6966, 6967, 6968, 6969, 6970, 6971, 6972, 6973, 6974, 6975, 6976, 6977, 6978, 6979, 6980, 6981, 6982, 6983, 6984, 6985, 6986, 6987, 6988, 6989, 6990, 6991, 7200, 7201, 7202, 7220, 7221, 7222, 7223, 7224, 7225, 7226, 7227, 7228, 7229, 7230, 7231, 7232, 7233, 7234, 7235, 7236, 7237, 7238, 7239, 7240, 7241, 7242, 7243, 7244, 7245, 7246, 7247, 7248, 7249, 7250, 7251, 7252, 7253, 7254, 7255, 7256, 7257, 7258, 7259, 7260, 7261, 7262, 7263, 7264, 7265, 7266, 7267, 7268, 7269, 7270, 7271, 7272, 7273, 7274, 7275, 7276, 7277, 7278, 7279, 7280, 7281, 7282, 7283, 7284, 7285, 7286, 7287, 7288, 7289, 7290, 7291, 7292, 7293, 7294, 7295, 7296, 7297, 7298, 7299, 7300, 7301, 7302, 7303, 7304, 7305, 7306, 7307, 7308, 7309, 7310, 7311, 7312, 7313, 7314, 7315, 7316, 7317, 7318, 7319, 7320, 7321, 7322, 7323, 7324, 7325, 7326, 7327, 7328, 7329, 7330, 7331, 7332, 7333, 7334, 7335, 7336, 7337, 7338, 7339, 7340, 7341, 7342, 7343, 7344, 7345, 7346, 7347, 7348, 7349, 7350, 7351, 7352, 7353, 7354, 7355, 7356, 7357, 7358, 7359, 7360, 7361, 7362, 7363, 7364, 7365, 7366, 7367, 7368, 7369, 7370, 7371, 7372, 7373, 7374, 7375, 7376, 7377, 7378, 7379, 7380, 7381, 7382, 7383, 7384, 7385, 7386, 7387, 7388, 7389, 7390, 7391, 7392, 7393, 7394, 7395, 7396, 7397, 7398, 7399, 7400, 7401, 7402, 7403, 7404, 7405, 7406, 7407, 7408, 7409, 7410, 7411, 7412, 7413, 7414, 7415, 7416, 7417, 7418, 7419, 7420, 7421, 7422, 7423, 7424, 7425, 7426, 7427, 7428, 7429, 7430, 7431, 7432, 7433, 7434, 7435, 7436, 7437, 7438, 7439, 7440, 7441), SingleValueConstraint(7442, 7443, 7444, 7445, 7446, 7447, 7448, 7449, 7450, 7451, 7452, 7453, 7454, 7455, 7456, 7457, 7458, 7459, 7460, 7461, 7462, 7463, 7464, 7465, 7466, 7467, 7468, 7469, 7470, 7471, 7472, 7473, 7474, 7475, 7476, 7477, 7478, 7479, 7480, 7481, 7482, 7483, 7484, 7485, 7486, 7487, 7488, 7489, 7490, 7491, 7492, 7493, 7494, 7495, 7496, 7497, 7498, 7499, 7500, 7501, 7502, 7503, 7504, 7505, 7506, 7507, 7508, 7509, 7510, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520, 7521, 7522, 7523, 7524, 7525, 7526, 7527, 7528, 7529, 7530, 7531, 7532, 7533, 7534, 7535, 7536, 7537, 7538, 7539, 7540, 7541, 7542, 7543, 7544, 7546, 7547, 7548, 7549, 7550, 7551, 7552, 7553, 7554, 7555, 7556, 7557, 7558, 7559, 7560, 7561, 7562, 7563, 7564, 7565, 7566, 7567, 7568, 7569, 7570, 7571, 7572, 7573, 7574, 7575, 7576, 7577, 7578, 7579, 7580, 7581, 7582, 7583, 7584, 7585, 7586, 7587, 7588, 7589, 7590, 7591, 7592, 7593, 7594, 7595, 7596, 7597, 7598, 7599, 7601, 7602, 7603, 7604, 7605, 7606, 7607, 7608, 7609, 7610, 7611, 7612, 7613, 7614, 7615, 7616, 7617, 7618, 7619, 7620, 7621, 7622, 7623, 7624, 7625, 7626, 7627, 7628, 7629, 7630, 7631, 7632, 7633, 7634, 7635, 7636, 7637, 7638, 7639, 7640, 7641, 7642, 7643, 7644, 7645, 7646, 7647, 7648, 7649, 7650, 7651, 7652, 7653, 7654, 7655, 7656, 7657, 7658, 7659, 7660, 7661, 7662, 7663, 7664, 7665, 7666, 7667, 7668, 7669, 7670, 7671, 7672, 7673, 7674, 7675, 7676, 7677, 7678, 7679, 7680, 7681, 7682, 7683, 7684, 7685, 7686, 7687, 7688, 7689, 7690, 7691, 7692, 7693, 7694, 7695, 7696, 7697, 7698), SingleValueConstraint(7699, 7700, 7701, 7702, 7703, 7704, 7705, 7706, 7707, 7708, 7709, 7710, 7711, 7712, 7713, 7714, 7715, 7716, 7717, 7719, 7720, 7721, 7722, 7723, 7724, 7725, 7726, 7727, 7728, 7729, 7730, 7731, 7732, 7733, 7734, 7735, 7736, 7737, 7738, 7739, 7740, 7741, 7742, 7743, 7744, 7746, 7747, 7748, 7749, 7750, 7751, 7753, 7754, 7755, 7756, 7757, 7758, 7759, 7760, 7761, 7762, 7763, 7764, 7765, 7766, 7767, 7768, 7769, 7770, 7771, 7772, 7773, 7775, 7776, 7777, 7778, 7779, 7780, 7781, 7782, 7783, 7784, 7785, 7786, 7787, 7788, 7789, 7799, 7800, 7801, 7802, 7803, 7804, 7805, 7806, 7807, 7808, 7809, 7810, 7811, 7812, 7813, 7814, 7815, 7816, 7817, 7818, 7819, 7820, 7821, 7822, 7823, 7824, 7825, 7826, 7827, 7828, 7829, 7830, 7831, 7832, 7833, 7834, 7835, 7836, 7837, 7838, 7839, 7840, 7841, 7842, 7843, 7844, 7845, 7846, 7847, 7848, 7849, 7850, 7851, 7852, 7853, 7854, 7855, 7856, 7857, 7858, 7859, 7860, 7861, 7862, 7863, 7864, 7865, 7866, 7867, 7868, 7869, 7870, 7871, 7872, 7873, 7874, 7875, 7876, 7877, 7878, 7879, 7880, 7881, 7882, 7883, 7884, 7885, 7886, 7887, 7888, 7889, 7890, 7891, 7892, 7893, 7894, 7895, 7896, 7897, 7898, 7899, 7900, 7901, 7902, 7903, 7904, 8000, 8001, 8002, 8003, 8004, 8005, 8006, 8007, 8008, 8009, 8010, 8011, 8012, 8013, 8014, 8015, 8016, 8017, 8018, 8019, 8020, 8021, 8022, 8023, 8024, 8025, 8026, 8027, 8028, 8029, 8030, 8031, 8032, 8033, 8034, 8035, 8036, 8037, 8038, 8039, 8040, 8041, 8042, 8043, 8044, 8045, 8046, 8047, 8048, 8049, 8050, 8051, 8052, 8053, 8054, 8055, 8056, 8057, 8058, 8059, 8060, 8061), SingleValueConstraint(8062, 8063, 8064, 8065, 8066, 8067, 8068, 8069, 8070, 8071, 8072, 8073, 8074, 8075, 8076, 8077, 8078, 8079, 8080, 8081, 8082, 8083, 8084, 8085, 8086, 8087, 8088, 8089, 8090, 8091, 8092, 8093, 8094, 8095, 8096, 8097, 8098, 8099, 8100, 8101, 8102, 8103, 8104, 8105, 8106, 8107, 8108, 8109, 8110, 8111, 8112, 8113, 8114, 8115, 8116, 8117, 8118, 8119, 8120, 8121, 8122, 8123, 8124, 8125, 8126, 8127, 8128, 8129, 8130, 8131, 8132, 8133, 8134, 8135, 8136, 8137, 8138, 8139, 8140, 8141, 8142, 8143, 8144, 8145, 8146, 8147, 8148, 8149, 8150, 8151, 8152, 8153, 8154, 8155, 8156, 8157, 8158, 8159, 8160, 8161, 8162, 8163, 8164, 8165, 8166, 8167, 8168, 8169, 8170, 8171, 8172, 8173, 8174, 8175, 8176, 8177, 8178, 8179, 8180, 8181, 8182, 8183, 8184, 8185, 8186, 8187, 8188, 8189, 8190, 8191, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, 8212, 8213, 8214, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8223, 8224, 8225, 8226, 8227, 8228, 8229, 8230, 8231, 8232, 8233, 8234, 8235, 8236, 8237, 8238, 8239, 8240, 8241, 8242, 8243, 8244, 8245, 8246, 8247, 8248, 8249, 8250, 8251, 8252, 8253, 8254, 8255, 8256, 8257, 8258, 8259, 8260, 8261, 8262, 8263, 8264, 8265, 8266, 8267, 8268, 8269, 8270, 8271, 8272, 8273, 8274, 8275, 8276, 8277, 8278, 8279, 8280, 8281, 8282, 8283, 8284, 8285, 8286, 8287, 8288, 8289, 8290, 8291, 8292, 8293, 8294, 8295, 8296, 8297, 8298, 8299, 8300, 8301, 8302, 8303, 8304, 8305, 8306, 8307, 8308, 8309, 8310, 8311, 8312, 8313, 8314, 8315, 8316), SingleValueConstraint(8317, 8318, 8319, 8320, 8321, 8322, 8323, 8324, 8325, 8326, 8327, 8328, 8329, 8330, 8331, 8332, 8333, 8334, 8335, 8336, 8337, 8338, 8339, 8340, 8341, 8342, 8343, 8344, 8345, 8346, 8347, 8348, 8349, 8350, 8351, 8352, 8353, 8354, 8355, 8356, 8357, 8358, 8359, 8360, 8361, 8362, 8363, 8364, 8365, 8366, 8367, 8368, 8369, 8371, 8372, 8374, 8375, 8376, 8377, 8378, 8379, 8380, 8381, 8382, 8383, 8384, 8385, 8386, 8387, 8388, 8389, 8390, 8391, 8392, 8393, 8394, 8395, 8396, 8397, 8700, 8701, 8702, 8703, 8704, 8705, 8706, 8707, 8708, 8709, 8710, 8711, 8712, 8713, 8714, 8715, 8716, 8717, 8718, 8719, 8720, 8721, 8722, 8723, 8724, 8725, 8726, 8727, 8728, 8729, 8730, 8731, 8732, 8733, 8734, 8735, 8736, 8737, 8738, 8739, 8740, 8741, 8742, 8743, 8744, 8745, 8746, 8747, 8748, 8749, 8750, 8751, 8752, 8753, 8754, 8755, 8756, 8757, 8758, 8759, 8760, 8761, 8762, 8763, 8764, 8765, 8766, 8767, 8768, 8769, 8770, 8771, 8772, 8773, 8774, 8775, 8776, 8777, 8778, 8779, 8780, 8781, 8782, 8783, 8784, 8785, 8786, 8787, 8788, 8789, 8790, 8791, 8792, 8793, 8794, 9000, 9001, 9002, 9003, 9004, 9005, 9006, 9007, 9008, 9009, 9010, 9011, 9012, 9013, 9014, 9015, 9016, 9017, 9018, 9019, 9020, 9021, 9022, 9023, 9024, 9025, 9026, 9027, 9028, 9100, 9101, 9102, 9103, 9104, 9105, 9106, 9107, 9108, 9109, 9110, 9111, 9112, 9113, 9114, 9115, 9116, 9117, 9118, 9119, 9120, 9121, 9122, 9123, 9124, 9200, 9201, 9202, 9203, 9204, 9205, 9206, 9207, 9208, 9209, 9210, 9211, 9212, 9213, 9214, 9215, 9216, 9217, 9218, 9219, 9220, 9221, 9222, 9223, 9224, 9225, 9226), SingleValueConstraint(9227, 9228, 9229, 9230, 9231, 9232, 9233, 9234, 9235, 9236, 9237, 9238, 9239, 9240, 9241, 9242, 9243, 9244, 9245, 9246, 9247, 9248, 9249, 9250, 9251, 9252, 9253, 9254, 9255, 9256, 9257, 9258, 9259, 9260, 9261, 9262, 9263, 9264, 9265, 9266, 9267, 9268, 9269, 9270, 9271, 9272, 9273, 9274, 9275, 9276, 9277, 9278, 9279, 9280, 9281, 9282, 9283, 9284, 9285, 9286, 9287, 9288, 9289, 9290, 9291, 9292, 9293, 9294, 9295, 9296, 9297, 9298, 9299, 9300, 9301, 9302, 9303, 9304, 9305, 9306, 9307, 9308, 9309, 9310, 9311, 9312, 9313, 9314, 9315, 9316, 9317, 9318, 9319, 9320, 9321, 9322, 9323, 9324, 9325, 9326, 9327, 9328, 9329, 9330, 9331, 9332, 9333, 9334, 9335, 9336, 9337, 9338, 9339, 9340, 9341, 9342, 9343, 9344, 9345, 9346, 9347, 9348, 9349, 9350, 9351, 9352, 9353, 9354, 9355, 9356, 9357, 9358, 9359, 9360, 9361, 9362, 9363, 9364, 9365, 9366, 9367, 9368, 9369, 9370, 9371, 9372, 9373, 9374, 9375, 9376, 9377, 9378, 9379, 9380, 9381, 9382, 9383, 9384, 9385, 9386, 9387, 9388, 9389, 9390, 9391, 9392, 9393, 9394, 9395, 9396, 9397, 9398, 9399, 9400, 9401, 9402, 9403, 9404, 9405, 9406, 9407, 9408, 9409, 9410, 9411, 9412, 9413, 9414, 9415, 9416, 9417, 9418, 9419, 9420, 9421, 9422, 9423, 9424, 9425, 9426, 9427, 9428, 9429, 9430, 9431, 9432, 9433, 9434, 9435, 9436, 9437, 9438, 9439, 9440, 9441, 9442, 9443, 9444, 9445, 9446, 9447, 9448, 9449, 9450, 9451, 9452, 9453, 9454, 9455, 9456, 9457, 9458, 9459, 9460, 9461, 9462, 9463, 9464, 9465, 9466, 9467, 9468, 9469, 9470, 9471, 9472, 9473, 9475, 9476, 9477, 9478, 9479, 9480, 9481, 9482), SingleValueConstraint(9483, 9484, 9485, 9486, 9487, 9488, 9489, 9490, 9491, 9492, 9493, 9494, 9495, 9496, 9497, 9498, 9499, 9500, 9501, 9502, 9503, 9504, 9505, 9506, 9507, 9508, 9509, 9510, 9511, 9512, 9513, 9514, 9515, 9516, 9517, 9518, 9519, 9520, 9521, 9522, 9523, 9524, 9525, 9526, 9527, 9528, 9529, 9530, 9531, 9532, 9533, 9534, 9535, 9536, 9537, 9538, 9539, 9540, 9541, 9542, 9543, 9544, 9545, 9546, 9547, 9548, 9549, 9550, 9551, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9581, 9582, 9583, 9584, 9585, 9586, 9587, 9588, 9589, 9590, 9591, 9592, 9593, 9594, 9595, 9596, 9597, 9598, 9599, 9600, 9601, 9602, 9603, 9604, 9605, 9606, 9607, 9608, 9609, 9610, 9611, 9612, 9613, 9614, 9615, 9616, 9617, 9618, 9619, 9620, 9621, 9622, 9667, 9668, 9669, 9671, 9672, 9673, 9674, 9675, 9676, 9677, 9678, 9679, 9680, 9681, 9682, 9683, 9684, 9685, 9686, 9687, 9688, 9689, 9690, 9691, 9692, 9693, 9694, 9695, 9696, 9697, 9698, 9699, 9700, 9701, 9702, 9703, 9704, 9705, 9706, 9707, 9708, 9709, 9710, 9711, 9712, 9713, 9714, 9715, 9716, 9717, 9718, 9719, 9720, 9721, 9722, 9723, 9724, 9725, 9726, 9727, 9728, 9729, 9730, 9731, 9732, 9733, 9734, 9735, 9736, 9737, 9738, 9739, 9740, 9741, 9742, 9743, 9744, 9745, 9746, 9747, 9748, 9749, 9750, 9751, 9752, 9753, 9754, 9755, 9756, 9757, 9758, 9759, 9760, 9761, 9762, 9763, 9764, 9765, 9766, 9767, 9768, 9769, 9770, 9771, 9772, 9773, 9774, 9775, 9776, 9777, 9778, 9779, 9780, 9781, 9782), SingleValueConstraint(9783, 9784, 9785, 9786, 9787, 9788, 9789, 9790, 9791, 9792, 9793, 9794, 9795, 9796, 9797, 9798, 9799, 9800, 9801, 9802, 9803, 9804, 9805, 9806, 9807, 9808, 9809, 9810, 9811, 9812, 9813, 9814, 9815, 9816, 9817, 9818, 9819, 9820, 9821, 9822, 9823, 9824, 9825, 9826, 9827, 9828, 9829, 9830, 9831, 9832, 9833, 9834, 9835, 9836, 9837, 9838, 9839, 9840, 9841, 9842, 9843, 9844, 9845, 9846, 9847, 9848, 9849, 9850, 9851, 9852, 9853, 9854, 9855, 9856, 9857, 9858, 9859, 9860, 9861, 9862, 9863, 9864, 9865, 9866, 9867, 9868, 9869, 9870, 9871, 9872, 9873, 9874, 9875, 9876, 9877, 9878, 9879, 9880, 9881, 9882, 9883, 9884, 9885, 9886, 9887, 9888, 9889, 9890, 9891, 9892, 9893, 9894, 9895, 9896, 9897, 9898, 9899, 9900, 9901, 9902, 9903, 9904, 9905, 9906, 9907, 9908, 9909, 9910, 9911, 9912, 9913, 9914, 9915, 9916, 9917, 9918, 9919, 9920, 9921, 9922, 9923, 9924, 9925, 9926, 9927, 9928, 9929, 9930, 9931, 9932, 9933, 9934, 9935, 9936, 9937, 9938, 9939, 9940, 9941, 9942, 9943, 9944, 9945, 9946, 9947, 9948, 9949, 9950, 9951, 9952, 9953, 9954, 9955, 9956, 9957, 9958, 9959, 9960, 9961, 9962, 9963, 9964, 9965, 9966, 9967, 9968, 9969, 9970, 9971, 9972, 9973, 9974, 9975, 9976, 9977, 9978, 9979, 9980, 9981, 9982, 9983, 9984, 9985, 9986, 9987, 9988, 9989, 9990, 9991, 9992, 9993, 9994, 9995, 9996, 9997, 9998, 9999, 10000, 10001, 10002, 10003, 10004, 10005, 10006, 10007, 10008, 10009, 10010, 10011, 10012, 10013, 10014, 10015, 10016, 10017, 10018, 10019, 10020, 10021, 10022, 10023, 10024, 10051, 10052, 10053, 10054, 10055, 10056, 10057, 10058, 10059, 10060, 10061))
    namedValues = NamedValues(("unknown", 0), ("acd", 1), ("acmT0", 2), ("adapterError", 3), ("adapterError2", 4), ("adapterError3", 5), ("airCompressorFailure", 6), ("airConditioningFailure", 7), ("airDryerFailure", 8), ("ais", 9), ("aisA1", 10), ("aisB1", 11), ("aisSsf", 12), ("aisuk2", 13), ("apf", 14), ("asf", 15), ("aw", 16), ("backplaneFailure", 17), ("battDischarge", 18), ("battery", 19), ("batteryDischarging", 20), ("batteryFailure", 21), ("batteryLow", 22), ("ber3", 23), ("ber56", 24), ("buffer", 25), ("cableProblem", 26), ("cableReference", 27), ("cardBreakdown", 28), ("cardDisabled", 29), ("cardFailure", 30), ("cardInUnconfiguredSlot", 31), ("cardProblem", 32), ("cfgFile", 33), ("chargeCurrent", 34), ("clk", 35), ("clock", 36), ("cni", 37), ("commercialPowerFailure", 38), ("commsLinkFail", 39), ("conf", 40), ("confEquip", 41), ("coolingFanFailure", 42), ("crcmismatch", 43), ("critical", 44), ("dbit", 45), ("dccBus", 46), ("deepDischarge", 47), ("dm", 48), ("dte", 49), ("ebsl", 50), ("enclosureDoorOpen", 51), ("engineFailure", 52), ("eni", 53), ("equipmentIdentifierDuplication", 54), ("esw", 55), ("ethernetFail", 56), ("excessiveBER", 57), ("explosiveGas", 58), ("fanUnit1", 59), ("fanUnit2", 60), ("fca", 61), ("fileError", 62), ("fire", 63), ("fireDetectorFailure", 64), ("flash1Cfg", 65), ("flash2Cfg", 66), ("flashCfg", 67), ("flashMemory", 68), ("flood", 69), ("foc", 70), ("fop", 71), ("frequencyDriftHighDegrade", 72), ("frequencyDriftLowDegrade", 73), ("frequencyHighDegrade", 74), ("frequencyHighFailure", 75), ("frequencyLowDegrade", 76), ("frequencyLowFailure", 77), ("fspfext", 78), ("fuseFailure", 79), ("generatorFailure", 80), ("genericEnv1", 81), ("genericEnv2", 82), ("genericEnv3", 83), ("genericEnv4", 84), ("genericEnv5", 85), ("genericEnv6", 86), ("genericEnv7", 87), ("genericEnv8", 88), ("genericEnv9", 89), ("hardDisk", 90), ("highHumidity", 91), ("highTemperature", 92), ("highWind", 93), ("iceBuildUp", 94), ("icn", 95), ("indeterminate", 96), ("inp", 97), ("inputSignalLow", 98), ("intA", 99), ("intB", 100), ("internalComError", 101), ("internalCommunicationProblem", 102), ("internalCommunicationProblem2", 103), ("internalCommunicationProblem3", 104), ("internalControlBusX", 105), ("internalControlBusXY", 106), ("internalControlBusY", 107), ("intHWFail", 108), ("intrusionDetection", 109), ("intZ", 110), ("its", 111), ("kP", 112), ("krs", 113), ("ksd", 114), ("kss", 115), ("kzd", 116), ("lanaddr", 117), ("laserCurrent", 118), ("laserPowerHigh", 119), ("laserPowerLow", 120), ("laserTemperatureOutOfRange", 121), ("lcndcn", 122), ("lContFail", 123), ("lnkInt", 124), ("loa", 125), ("loc", 126), ("lof", 127), ("lom", 128), ("lomFarEnd", 129), ("loopNT1", 130), ("lop", 131), ("los", 132), ("losa", 133), ("losA1", 134), ("losA2", 135), ("losb", 136), ("losB1", 137), ("losB2", 138), ("losS2M", 139), ("loss48V", 140), ("lossAC", 141), ("lossOfActivity", 142), ("lossOfCarrier", 143), ("lossOfD2an", 144), ("lossOfInternalTiming", 145), ("lossOfLockT0", 146), ("lossOfLockT4", 147), ("lossOfTiming", 148), ("lossOfTimingReference", 149), ("lossOfTimingT1", 150), ("lossOfTimingT11", 151), ("lossOfTimingT1121", 152), ("lossOfTimingT12", 153), ("lossOfTimingT1222", 154), ("lossOfTimingT13", 155), ("lossOfTimingT14", 156), ("lossOfTimingT2", 157), ("lossOfTimingT21", 158), ("lossOfTimingT22", 159), ("lossOfTimingT3", 160), ("lossOfTimingT31", 161), ("lossOfTimingT32", 162), ("lossOfTimingT4", 163), ("losUK2", 164), ("lowCablePressure", 165), ("lowerCoolingFanFail", 166), ("lowFuel", 167), ("lowHumidity", 168), ("lowTemperature", 169), ("lowWater", 170), ("lsa", 171), ("lTan", 172), ("ltiT0", 173), ("ltiT4", 174), ("ltuFailure", 175), ("ltuMissing", 176), ("ltuTypeMismatch", 177), ("major", 178), ("mibDiscrepancy", 179), ("mibEmNotValid", 180), ("mibFlashFail", 181), ("mibFlashMissing", 182), ("mibNeNotValid", 183), ("minor", 184), ("powerProblem13", 185), ("mod", 186), ("moduleCurrent", 187), ("multiframeCableProblem", 188), ("nas", 189), ("nbit", 190), ("ncm", 191), ("neBreakdown", 192), ("neFailure", 193), ("neProblem", 194), ("nk", 195), ("no2MbitMode", 196), ("noValidT3Signal", 197), ("npd", 198), ("npd2", 199), ("npf", 200), ("nr", 201), ("oA", 202), ("oCH", 203), ("ohBus", 204), ("optBoosterTemperature", 205), ("opticPowerReceiveTooLow", 206), ("optPreampTemperature", 207), ("oSCLaserFail", 208), ("ows", 209), ("pathTraceMismatch", 210), ("pcbBusFail", 211), ("pilot", 212), ("pnvmod", 213), ("powerDriftHighDegrade", 214), ("powerDriftLowDegrade", 215), ("powerProblem1", 216), ("powerProblem12", 217), ("powerProblem2", 218), ("powerProblem3", 219), ("powerProblem34", 220), ("powerProblem4", 221), ("powerTooHighDegrade", 222), ("powerTooHighFailure", 223), ("powerTooLowDegrade", 224), ("powerTooLowFailure", 225), ("preemphasisFailure", 226), ("pri", 227), ("processProblem", 228), ("protectionBusX", 229), ("protectionBusXY", 230), ("protectionBusY", 231), ("psUfab", 232), ("psUfan", 233), ("psutp", 234), ("pumpLow", 235), ("pumpTemperature", 236), ("pwr", 237), ("pwrmod", 238), ("qA", 239), ("rdi", 240), ("receiverFailBooster", 241), ("rectifierFailure", 242), ("rectifierHighVoltageFailure", 243), ("rectifierLowVoltageFailure", 244), ("redundantPwr", 245), ("cardMissing", 246), ("cardMismatch", 247), ("ringFailure", 248), ("ringProblem", 249), ("rsa", 250), ("rxa", 251), ("rxb", 252), ("rxDegrade", 253), ("rxFail", 254)) + NamedValues(("rxlineal", 255), ("sa4", 256), ("ser", 257), ("serverSignalFail", 258), ("sfwrProblem", 259), ("sfwrProblemMajor", 260), ("signalDegraded", 261), ("signalLableMismatch", 262), ("signalToNoiseDegrade", 263), ("signalToNoiseDriftLowDegrade", 264), ("signalToNoiseFailure", 265), ("smoke", 266), ("snp", 267), ("sqm", 268), ("ssfEast", 269), ("ssfEastExtra", 270), ("ssfExtra", 271), ("ssfWest", 272), ("ssfWestExtra", 273), ("ssfWestWorking", 274), ("ssfWorking", 275), ("storageCapacity", 276), ("storageCapacityProblem", 277), ("sumAlarm", 278), ("swAbnormallyTerminated", 279), ("swEnvProblem", 280), ("switch", 281), ("swProgramError", 282), ("synchronizationSourceMismatch", 283), ("t0BusX", 284), ("t0BusY", 285), ("t0Quality", 286), ("telemetryInterface1", 287), ("telemetryInterface10", 288), ("telemetryInterface11", 289), ("telemetryInterface12", 290), ("telemetryInterface13", 291), ("telemetryInterface14", 292), ("telemetryInterface15", 293), ("telemetryInterface16", 294), ("telemetryInterface17", 295), ("telemetryInterface18", 296), ("telemetryInterface19", 297), ("telemetryInterface2", 298), ("telemetryInterface20", 299), ("telemetryInterface21", 300), ("telemetryInterface22", 301), ("telemetryInterface23", 302), ("telemetryInterface24", 303), ("telemetryInterface25", 304), ("telemetryInterface26", 305), ("telemetryInterface27", 306), ("telemetryInterface28", 307), ("telemetryInterface29", 308), ("telemetryInterface3", 309), ("telemetryInterface30", 310), ("telemetryInterface31", 311), ("telemetryInterface32", 312), ("telemetryInterface4", 313), ("telemetryInterface5", 314), ("telemetryInterface6", 315), ("telemetryInterface7", 316), ("telemetryInterface8", 317), ("telemetryInterface9", 318), ("temperatureHigh", 319), ("test", 320), ("thresholdBbe15", 321), ("thresholdBbe15FarEnd", 322), ("thresholdBbe24", 323), ("thresholdBbe24FarEnd", 324), ("thresholdCv15", 325), ("thresholdCv24", 326), ("thresholdEs15", 327), ("thresholdEs15FarEnd", 328), ("thresholdEs24", 329), ("thresholdEs24FarEnd", 330), ("thresholdOfs15", 331), ("thresholdOfs24", 332), ("thresholdPjePlus15", 333), ("thresholdPjePlus24", 334), ("thresholdPjeMinus15", 335), ("thresholdPjeMinus24", 336), ("thresholdSefs15", 337), ("thresholdSefs24", 338), ("thresholdSes15", 339), ("thresholdSes15FarEnd", 340), ("thresholdSes24", 341), ("thresholdSes24FarEnd", 342), ("thresholdUas15", 343), ("thresholdUas15FarEnd", 344), ("thresholdUas24", 345), ("thresholdUas24FarEnd", 346), ("thresholdUat", 347), ("thresholdUatFarEnd", 348), ("timeTickProblem", 349), ("timing", 350), ("timingProblem", 351), ("tma1", 352), ("tma2", 353), ("toxicGas", 354), ("transmitDegradeBooster1", 355), ("transmitDegradeBooster2", 356), ("transmitDegradePreamp1", 357), ("transmitDegradePreamp2", 358), ("transmitFailPreamp", 359), ("tsb", 360), ("txa", 361), ("txAis", 362), ("txb", 363), ("txDegrade", 364), ("txFail", 365), ("txlineal", 366), ("typeMismatch", 367), ("uat", 368), ("uLedFail", 369), ("undef", 370), ("unequipped", 371), ("unitUnknown", 372), ("upperCoolingFanFail", 373), ("ventilationSystemFailure", 374), ("versionMismatch", 375), ("voaProblem", 376), ("wAN", 377), ("warning", 378), ("wrongCardVersion", 379), ("wrongSW", 380), ("fanExtendedClimateClass", 381), ("fanNormalClimateClass", 382), ("voaProblem1", 383), ("voaProblem2", 384), ("voaProblem3", 385), ("voaProblem4", 386), ("remotePumpFailure", 387), ("transmitDegradePreamp3", 388), ("transmitDegradePreamp4", 389), ("noASEDetected", 390), ("noOscDuringStartup", 391), ("oalLaserDegrade", 392), ("powerProblem24", 393), ("thresholdPsw", 394), ("oalLoopFail", 395), ("oalActivationInProgress", 396), ("laserTemperatureRingFail", 397), ("laserTemperatureClientFail", 398), ("apdTemperatureRingTooHigh", 399), ("apdTemperatureClientTooHigh", 400), ("protectionLogicProblem", 401), ("protectionLogicInconsistency", 402), ("pllSyncFailureRing", 403), ("pllSyncFailureClient", 404), ("internalLossOfSignal", 405), ("internalPowerTooHighFailure", 406), ("internalTransmitDegraded", 407), ("internalTransmitFailureSON", 408), ("opticalFilterTemperatureFailure", 409), ("opticalAmplifierGainFailure", 410), ("fportAttack", 411), ("opticalAmplifierTransmitDegrade", 412), ("ip2OsiConfig", 413), ("internalPowerTooLowFailure", 414), ("ber", 415), ("sectionTraceMismatch", 416), ("powerBusFail", 417), ("outgoingDefectIndication", 418), ("subAddressBoardFailure", 419), ("optReflection", 420), ("osaFail", 421), ("transmitDegradePump1", 422), ("transmitFailPump1", 423), ("transmitDegradePump2", 424), ("transmitFailPump2", 425), ("transmitDegradePump3", 426), ("transmitFailPump3", 427), ("transmitDegradePump4", 428), ("transmitFailPump4", 429), ("transmitDegradePump5", 430), ("transmitFailPump5", 431), ("receiverFailPreamp", 432), ("temperatureProblem", 433), ("tiltControlFailure", 434), ("transmitFailBooster", 435), ("switchProblemUpgradePath", 436), ("switchProblem2", 437), ("switchProblem1", 438), ("voaProblem5", 439), ("voaProblem6", 440), ("voaProblem7", 441), ("voaProblem8", 442), ("voaProblem9", 443), ("voaProblem10", 444), ("voaProblem11", 445), ("voaProblem18", 446), ("voaProblem14", 447), ("voaProblem15", 448), ("voaProblem16", 449), ("voaProblem17", 450), ("voaProblem20", 451), ("voaProblem19", 452), ("voaProblem12", 453), ("voaProblem13", 454), ("osaPowerFail", 455), ("transmitDegradeOSC1", 456), ("transmitDegradeOSC2", 457), ("cardTemperatureProblem", 458), ("lossOfTimingInput", 459), ("lossOfTandemConnection", 460), ("canBusFailure", 461), ("remote", 462), ("laserTemperatureProblem", 463), ("temperatureTooHigh", 464), ("bdi", 465), ("thresholdCbes15", 466), ("thresholdCbes24", 467), ("opticalAmplifierReceiveFailure", 468), ("np", 469), ("osi2IpConfig", 470), ("clockFail", 471), ("loop", 472), ("fanFailure", 473), ("busFailure", 474), ("interstageLossProblem", 475), ("thresholdCv15FarEnd", 476), ("thresholdCv24FarEnd", 477), ("thresholdSefs15FarEnd", 478), ("thresholdSefs24FarEnd", 479), ("portDisabled", 480), ("portNotPartitioned", 481), ("temperatureTooLow", 482), ("portNotLinked", 483), ("temperatureFail", 484), ("incomingAis", 485), ("intQc", 486), ("intSra", 487), ("intSraA", 488), ("intSraB", 489), ("alternateModulationSignal", 490), ("equipmentProblem", 491), ("intQcA", 492), ("intQcB", 493), ("intSmfA", 494), ("intSmfB", 495), ("noData", 496), ("laserBiasEoL", 497), ("laserTecEoL", 498), ("laserTempOoR", 499), ("lossOfOip", 500), ("lossOfOop", 501), ("oipTooHigh", 502), ("oopTooLow", 503), ("subModTempOoR", 504), ("lossOfLinkPulse", 505), ("clockFailTx", 506), ("laserDegrade", 507), ("elasticStoreOverflowRx", 508), ("elasticStoreOverflowTx", 509)) + NamedValues(("fanFailure1", 510), ("fanFailure2", 511), ("fanFailure3", 512), ("fanPowerFail1", 513), ("fanPowerFail2", 514), ("powerFail", 515), ("fuseFail1", 516), ("fuseFail2", 517), ("voltageTooHigh", 518), ("voltageTooLow", 519), ("pathTraceInconsistency", 520), ("iNNCDown", 521), ("interfaceDown", 522), ("emsSystemAlarm", 523), ("configurationError", 524), ("internalError", 525), ("securityViolation", 526), ("remoteOutgoingDefectIndication", 527), ("tcRdi", 528), ("tandemConnectionSignalDegraded", 529), ("tcPathTraceMismatch", 530), ("tcUnequipped", 531), ("unprotectedCardProblem", 532), ("btbCardMissing", 533), ("subrackCoolingProblem", 534), ("thresholdLowestCurrent", 535), ("thresholdLowCurrent", 536), ("thresholdHighCurrent", 537), ("thresholdHighestCurrent", 538), ("thresholdLowestOIP", 539), ("thresholdLowOIP", 540), ("thresholdHighestOIP", 541), ("thresholdHighOIP", 542), ("thresholdLowestOOP", 543), ("thresholdLowOOP", 544), ("thresholdHighestOOP", 545), ("thresholdHighOOP", 546), ("switchError", 547), ("thresholdLowestTemp", 548), ("thresholdLowTemp", 549), ("thresholdHighestTemp", 550), ("thresholdHighTemp", 551), ("thresholdLowestVolt", 552), ("thresholdLowVolt", 553), ("thresholdHighestVolt", 554), ("thresholdHighVolt", 555), ("linkDown", 564), ("dcnLinkDown", 565), ("lossOfSynch", 568), ("invalidLaserFrequency", 590), ("invalidLaserAttenuation", 591), ("dbFullBackupFailed", 592), ("dbBackupFailed", 593), ("vpAis", 615), ("batteryFailure2", 616), ("criAlrExtUnmangedNE", 617), ("majAlrExtUnmangedNE", 618), ("minAlrExtUnmangedNE", 619), ("warAlrExtUnmangedNE", 620), ("genAlrExtUnmangedNE", 621), ("mIIConnectorProblem", 622), ("telemetryInterface1-4", 630), ("telemetryInterface1-5", 631), ("telemetryInterface1-6", 632), ("telemetryInterface1-7", 633), ("telemetryInterface1-8", 634), ("telemetryInterface1-9", 635), ("telemetryInterface1-3", 636), ("telemetryInterface1-2", 637), ("telemetryInterface1-1", 638), ("telemetryInterface1-10", 639), ("telemetryInterface1-11", 640), ("telemetryInterface1-12", 641), ("telemetryInterface1-13", 642), ("telemetryInterface1-14", 643), ("telemetryInterface1-15", 644), ("telemetryInterface1-16", 646), ("telemetryInterface2-4", 647), ("telemetryInterface2-5", 648), ("telemetryInterface2-6", 649), ("telemetryInterface2-7", 650), ("telemetryInterface2-8", 651), ("telemetryInterface2-9", 652), ("telemetryInterface2-3", 653), ("telemetryInterface2-2", 654), ("telemetryInterface2-1", 655), ("telemetryInterface2-10", 656), ("telemetryInterface2-11", 657), ("telemetryInterface2-12", 658), ("telemetryInterface2-13", 659), ("telemetryInterface2-14", 660), ("telemetryInterface2-15", 661), ("telemetryInterface2-16", 662), ("telemetryInterface3-4", 663), ("telemetryInterface3-5", 664), ("telemetryInterface3-6", 665), ("telemetryInterface3-7", 666), ("telemetryInterface3-8", 667), ("telemetryInterface3-9", 668), ("telemetryInterface3-3", 669), ("telemetryInterface3-2", 670), ("telemetryInterface3-1", 671), ("telemetryInterface3-10", 672), ("telemetryInterface3-11", 673), ("telemetryInterface3-12", 674), ("telemetryInterface3-13", 675), ("telemetryInterface3-14", 676), ("telemetryInterface3-15", 677), ("telemetryInterface3-16", 678), ("telemetryInterface4-4", 679), ("telemetryInterface4-5", 680), ("telemetryInterface4-6", 681), ("telemetryInterface4-7", 682), ("telemetryInterface4-8", 683), ("telemetryInterface4-9", 684), ("telemetryInterface4-3", 685), ("telemetryInterface4-2", 686), ("telemetryInterface4-1", 687), ("telemetryInterface4-10", 688), ("telemetryInterface4-11", 689), ("telemetryInterface4-12", 690), ("telemetryInterface4-13", 691), ("telemetryInterface4-14", 692), ("telemetryInterface4-15", 693), ("telemetryInterface4-16", 694), ("telemetryInterface5-4", 695), ("telemetryInterface5-5", 696), ("telemetryInterface5-6", 697), ("telemetryInterface5-7", 698), ("telemetryInterface5-8", 699), ("telemetryInterface5-9", 700), ("telemetryInterface5-3", 701), ("telemetryInterface5-2", 702), ("telemetryInterface5-1", 703), ("telemetryInterface5-10", 704), ("telemetryInterface5-11", 705), ("telemetryInterface5-12", 706), ("telemetryInterface5-13", 707), ("telemetryInterface5-14", 708), ("telemetryInterface5-15", 709), ("telemetryInterface5-16", 710), ("telemetryInterface6-4", 711), ("telemetryInterface6-5", 712), ("telemetryInterface6-6", 713), ("telemetryInterface6-7", 714), ("telemetryInterface6-8", 715), ("telemetryInterface6-9", 716), ("telemetryInterface6-3", 717), ("telemetryInterface6-2", 718), ("telemetryInterface6-1", 719), ("telemetryInterface6-10", 720), ("telemetryInterface6-11", 721), ("telemetryInterface6-12", 722), ("telemetryInterface6-13", 723), ("telemetryInterface6-14", 724), ("telemetryInterface6-15", 725), ("telemetryInterface6-16", 726), ("telemetryInterface7-4", 727), ("telemetryInterface7-5", 728), ("telemetryInterface7-6", 729), ("telemetryInterface7-7", 730), ("telemetryInterface7-8", 731), ("telemetryInterface7-9", 732), ("telemetryInterface7-3", 733), ("telemetryInterface7-2", 734), ("telemetryInterface7-1", 735), ("telemetryInterface7-10", 736), ("telemetryInterface7-11", 737), ("telemetryInterface7-12", 738), ("telemetryInterface7-13", 739), ("telemetryInterface7-14", 740), ("telemetryInterface7-15", 741), ("telemetryInterface7-16", 742), ("bandwithMismatch", 743), ("rpr3oClockSpainFail", 744), ("rpr9oClockSpainFail", 745), ("fanIsNecessary", 746), ("lossOfLock", 747), ("frequencyMismatch", 748), ("thresholdMaxBer15", 750), ("thresholdMaxBer24", 751), ("lofOtu", 752), ("externalFanFail", 753), ("multipleFanFail", 754), ("oscmBranchError", 756), ("ber6", 757), ("bandwithNotAvailable", 758), ("equipmentAlarm", 759), ("losd", 760), ("underCurrent12", 761), ("underCurrent1", 762), ("underCurrent2", 763), ("overload", 764), ("unsymmetricLoad", 765), ("defect", 766), ("remoteTerminalAlarm", 767), ("remotePowerFailAll", 768), ("laserAging", 769), ("remotePowerFail", 770), ("thresholdAttenuation", 771), ("thresholdSNR", 772), ("fanPowerFail", 773), ("voltageOoR", 774), ("ifModuleTempOoR", 775), ("partitioned", 776), ("halfPartialOperation", 777), ("fullPartialOperation", 778), ("unbalancedSignal", 779), ("internalUnbalancedSignal", 780), ("lossOfSignalT", 781), ("attAtROOR", 782), ("attAtTOOR", 783), ("linkRemoteFault", 784), ("linkNotAvailable", 785), ("neInRealignment", 786), ("anotherUserInWriteAccess", 787), ("lctUserInWriteAccess", 788), ("mibDownloadRunning", 789), ("alarmNotOk", 790), ("gbESFPMissing", 791), ("attenuationProblem", 792), ("airFilterExchangeRequired", 793), ("gtmModuleProblem", 794), ("muxDemuxProblem", 795), ("osaCalibrationDateExpired", 796), ("osaModuleProblem", 797), ("powerDriftLowFailure", 798), ("pqmModulemProblem", 799), ("temperatureProblem1", 800), ("temperatureProblem2", 801), ("temperatureProblem3", 802), ("temperatureProblem4", 803), ("subbandLoss", 804), ("switchProblem3", 805), ("switchProblem4", 806), ("targetValueNotReached", 807), ("temperaturRegulationRunning", 808), ("statusOfModuleToModuleCommunication", 809), ("inputReferenceAvailableStatus", 810), ("frequencyModeDegration", 811), ("frequencyControlParameterWithinSpecification", 812), ("outputFrequencyStatusWithinSpecification", 813), ("clockModuleUsableAsTheOutputReference", 814), ("statusOfTheNumericallyCntrlOscillPhaseLockLoop", 815), ("statusOfTheLocalOscillatorPhaseLockLoop", 816), ("statusOfTheRubidiumInternalPhaseLockLoop", 817), ("hwConfigurationFault", 818), ("statusPowerA", 819), ("statusPowerB", 820), ("statusOfSpiHw", 821), ("clockPllNotLocked", 822), ("inputPllNotLocked", 823), ("bipolarViolationSignalFault", 824), ("crcErrorFaultStatus", 825), ("mtieLimit1Exceeded", 826)) + NamedValues(("mtieLimit2Exceeded", 827), ("receivedPqlBelowProvisionPqlStatus", 828), ("noSsmStatus", 829), ("moduleBootProblem", 830), ("phaseMeasurementHwFault", 831), ("frequencyMeasurementRangeExceeded", 832), ("indicationOfOutputControllerMastership", 833), ("clockPllStatusFault", 834), ("phaseHwFault", 835), ("manufacturingItemNumberFault", 836), ("positionUnknownFault", 837), ("engineSystemFault", 838), ("gpsEngineHwFault", 839), ("antennaConditionFault", 840), ("antennaConnectionStatus", 841), ("gpsEngineTrackingStatus", 842), ("systemSwFault", 843), ("configurationStatus", 844), ("clockBelowMinimumClockLevel", 845), ("lossOfClockSourceC", 846), ("mismatchedModules", 848), ("lossOfClockSourceA", 849), ("lossOfClockSourceB", 850), ("clockNotSelectedForOutput", 851), ("redundantModuleStatus", 852), ("vcxoStatus", 853), ("outputPllStatus", 854), ("lossOfClockSourceD", 855), ("outputPortFault", 856), ("internalPortFault", 857), ("externalPortFault", 858), ("powerA", 859), ("powerB", 860), ("payloadMismatch", 861), ("lockedDefect", 862), ("lofLom", 863), ("lossOfFrameDelineation", 880), ("lsuMissing", 881), ("t0", 882), ("t0X", 883), ("t0Y", 884), ("swIncomplete", 885), ("portAbsent", 886), ("portMismatch", 887), ("utif", 888), ("utifX", 889), ("utifY", 890), ("istm", 891), ("istmX", 892), ("istmY", 893), ("lossOfTimingT15", 894), ("lossOfTimingT16", 895), ("lossOfTimingT17", 896), ("lossOfTimingT18", 897), ("lossOfMultiframeT31", 898), ("lossOfMultiframeT32", 899), ("lossOfFrameT31", 900), ("lossOfFrameT32", 901), ("primaryPower", 902), ("redundantPower", 903), ("linkLoss", 904), ("feLinkDown", 905), ("provisionError", 906), ("lsu1Missing", 907), ("lsu2Missing", 908), ("lowerCoolingFanMissing", 909), ("upperCoolingFanMissing", 910), ("lossOfActivityTx", 911), ("lossOfActivityRx", 912), ("optPort1", 913), ("optPort2", 914), ("optPort3", 915), ("optPort4", 916), ("dccLinkDown", 917), ("rxSignalOverload", 918), ("plugInMissing", 919), ("plugInMismatch", 920), ("plugInNotApproved", 921), ("gfpLOF", 922), ("gfpPLM", 923), ("gfpLOClientSig", 924), ("gfpLOCharSync", 925), ("gfptClientSignalFailure", 926), ("lossOfAddSignal", 927), ("mwbModuleProblem", 928), ("mwbCommunicationProblem", 929), ("connectionLossToNE", 930), ("subSystemMissing", 931), ("subSystemFailure", 932), ("fanUnit", 933), ("dcnOverload", 934), ("eowUnavailable", 935), ("connectionIdMismatch", 936), ("iLinkFailure", 937), ("laserCurrentTooHigh", 938), ("dataRateMismatch", 939), ("laserCurrentTooLow", 940), ("oipTooLow", 941), ("oopTooHigh", 942), ("attAtRTooHigh", 943), ("attAtRTooLow", 944), ("attAtTTooLow", 945), ("attAtTTooHigh", 946), ("intrusionAtR", 947), ("intrusionAtT", 948), ("attRxMonLow", 949), ("attRxMonHigh", 950), ("attTxMonLow", 951), ("attTxMonHigh", 952), ("unsuccessfulLoginsExceeded", 953), ("passwordExpired", 954), ("powerDriftFailure", 955), ("measurementFailure", 956), ("couplerDropLoss", 957), ("gainProblem", 958), ("spanLossLow", 959), ("spanLossHigh", 960), ("channelUpgradeOrderViolation1", 961), ("channelUpgradeOrderViolation2", 962), ("channelUpgradeOrderViolation3", 963), ("channelUpgradeOrderViolation4", 964), ("lossOfSignalPQM", 965), ("powerDifferentialAlarm", 966), ("lossOfSyncCommPartner", 967), ("testloop4b", 968), ("pathProtectionNotAvailable", 969), ("continuous0", 970), ("nip", 971), ("lpt", 972), ("switchProblem", 973), ("oliConnectionCableFail", 974), ("iLANFailed", 975), ("activeLoop", 976), ("connectionLossToGne", 977), ("invalidGatewayAddress", 978), ("noLightDetectedC1", 979), ("noLightDetectedC2", 980), ("passwordWillExpireSoon", 981), ("equipmentAlarmNoFeedback", 982), ("noLightDetectedC3", 983), ("noLightDetectedC4", 984), ("channelCountMismatchC1", 985), ("channelCountMismatchC2", 986), ("channelCountMismatchC3", 987), ("channelCountMismatchC4", 988), ("linkControlSequenceFail1", 989), ("linkControlSequenceFail2", 990), ("linkControlSequenceFail3", 991), ("linkControlSequenceFail4", 992), ("noTimingMaster", 993), ("twoTimingMasters", 994), ("oscVersionMismatch", 995), ("eOpenConnectionIndication", 996), ("openConnectionIndication", 997), ("lossOfTCM", 998), ("syncFail", 999), ("requestInProgress", 1000), ("automaticPowerReductionMode", 1002), ("channelPowerMismatch1", 1005), ("channelPowerMismatch2", 1006), ("channelPowerMismatch3", 1007), ("channelPowerMismatch4", 1008), ("secondSyncMasterDetected", 1015), ("trapComLost", 1016), ("requestComLost", 1017), ("notInSynch", 1018), ("sfcHwFault", 1019), ("powerSourceA-Fault", 1020), ("powerSourceB-Fault", 1021), ("powerSupplyA-DcFault", 1022), ("powerSupplyB-DcFault", 1023), ("powerSupplyA-AcFault", 1024), ("powerSupplyB-AcFault", 1025), ("powerSupplyA-Missing", 1026), ("powerSupplyB-Missing", 1027), ("discrete1Fault", 1028), ("discrete2Fault", 1029), ("unidirectTestFailure", 1030), ("testFailure", 1031), ("unreachedRmNode", 1032), ("multipleRmNode", 1033), ("ftmMissing", 1034), ("sfpMissing", 1035), ("macsLimitReached", 1036), ("efmOamFault", 1037), ("swUpgradeHault", 1038), ("swUpgradeFault", 1039), ("psuFault", 1040), ("netSfpAMismatch", 1041), ("netOptBFault", 1042), ("netOptAFault", 1043), ("netBMisConfig", 1044), ("netAMisConfig", 1045), ("accOptFault", 1046), ("accSfpMismatch", 1047), ("accMisConfig", 1048), ("tIFActivatedAlarm", 1049), ("thresholdCvAsap", 1050), ("thresholdEsAsap", 1051), ("thresholdSesAsap", 1052), ("thresholdSefsAsap", 1053), ("thresholdCbesAsap", 1054), ("thresholdUasAsap", 1055), ("thresholdEsFarEndAsap", 1056), ("thresholdSesFarEndAsap", 1057), ("thresholdCvOutAsap", 1058), ("thresholdCvFarEndAsap", 1059), ("thresholdUasFarEndAsap", 1060), ("thresholdEsOutAsap", 1061), ("thresholdSesOutAsap", 1062), ("thresholdUasOutAsap", 1063), ("thresholdSefsOutAsap", 1064), ("thresholdMaxBerAsap", 1065), ("thresholdBbeAsap", 1066), ("thresholdBbeFarEndAsap", 1067), ("thresholdBbeOutAsap", 1068), ("transmitDegradeTSCh1", 1069), ("transmitDegradeTSCh2", 1070), ("transmitDegradeTSCh3", 1071), ("transmitDegradeTSCh4", 1072), ("temperatureProblemTSCh1", 1073), ("temperatureProblemTSCh2", 1074), ("temperatureProblemTSCh3", 1075), ("temperatureProblemTSCh4", 1076), ("transmitFailTSCh1", 1077), ("transmitFailTSCh2", 1078), ("transmitFailTSCh3", 1079), ("transmitFailTSCh4", 1080), ("shelfAddressChanged", 1081), ("downgradeChannelsInProgress", 1082), ("allChannelsDownloaded", 1083), ("inputLossOfLight1", 1093), ("inputLossOfLight2", 1094), ("inputLossOfLight3", 1095), ("temperatureProblemVOA", 1096), ("dspProblem", 1097), ("controlOrCablingProblem", 1098), ("multiplexStructIndicationMism", 1099), ("telemetryInterface180-1", 1100), ("telemetryInterface180-10", 1101), ("telemetryInterface180-11", 1102), ("telemetryInterface180-12", 1103), ("telemetryInterface180-13", 1104), ("telemetryInterface180-14", 1105), ("telemetryInterface180-15", 1106), ("telemetryInterface180-16", 1107), ("telemetryInterface180-2", 1108), ("telemetryInterface180-3", 1109), ("telemetryInterface180-4", 1110), ("telemetryInterface180-5", 1111), ("telemetryInterface180-6", 1112), ("telemetryInterface180-7", 1113), ("telemetryInterface180-8", 1114), ("telemetryInterface180-9", 1115), ("telemetryInterface181-1", 1116)) + NamedValues(("telemetryInterface181-10", 1117), ("telemetryInterface181-11", 1118), ("telemetryInterface181-12", 1119), ("telemetryInterface181-13", 1120), ("telemetryInterface181-14", 1121), ("telemetryInterface181-15", 1122), ("telemetryInterface181-16", 1123), ("telemetryInterface181-2", 1124), ("telemetryInterface181-3", 1125), ("telemetryInterface181-4", 1126), ("telemetryInterface181-5", 1127), ("telemetryInterface181-6", 1128), ("telemetryInterface181-7", 1129), ("telemetryInterface181-8", 1130), ("telemetryInterface181-9", 1131), ("telemetryInterface182-1", 1132), ("telemetryInterface182-10", 1133), ("telemetryInterface182-11", 1134), ("telemetryInterface182-12", 1135), ("telemetryInterface182-13", 1136), ("telemetryInterface182-14", 1137), ("telemetryInterface182-15", 1138), ("telemetryInterface182-16", 1139), ("telemetryInterface182-2", 1140), ("telemetryInterface182-3", 1141), ("telemetryInterface182-4", 1142), ("telemetryInterface182-5", 1143), ("telemetryInterface182-6", 1144), ("telemetryInterface182-7", 1145), ("telemetryInterface182-8", 1146), ("telemetryInterface182-9", 1147), ("telemetryInterface183-1", 1148), ("telemetryInterface183-10", 1149), ("telemetryInterface183-11", 1150), ("telemetryInterface183-12", 1151), ("telemetryInterface183-13", 1152), ("telemetryInterface183-14", 1153), ("telemetryInterface183-15", 1154), ("telemetryInterface183-16", 1155), ("telemetryInterface183-2", 1156), ("telemetryInterface183-3", 1157), ("telemetryInterface183-4", 1158), ("telemetryInterface183-5", 1159), ("telemetryInterface183-6", 1160), ("telemetryInterface183-7", 1161), ("telemetryInterface183-8", 1162), ("telemetryInterface183-9", 1163), ("telemetryInterface184-1", 1164), ("telemetryInterface184-10", 1165), ("telemetryInterface184-11", 1166), ("telemetryInterface184-12", 1167), ("telemetryInterface184-13", 1168), ("telemetryInterface184-14", 1169), ("telemetryInterface184-15", 1170), ("telemetryInterface184-16", 1171), ("telemetryInterface184-2", 1172), ("telemetryInterface184-3", 1173), ("telemetryInterface184-4", 1174), ("telemetryInterface184-5", 1175), ("telemetryInterface184-6", 1176), ("telemetryInterface184-7", 1177), ("telemetryInterface184-8", 1178), ("telemetryInterface184-9", 1179), ("telemetryInterface185-1", 1180), ("telemetryInterface185-10", 1181), ("telemetryInterface185-11", 1182), ("telemetryInterface185-12", 1183), ("telemetryInterface185-13", 1184), ("telemetryInterface185-14", 1185), ("telemetryInterface185-15", 1186), ("telemetryInterface185-16", 1187), ("telemetryInterface185-2", 1188), ("telemetryInterface185-3", 1189), ("telemetryInterface185-4", 1190), ("telemetryInterface185-5", 1191), ("telemetryInterface185-6", 1192), ("telemetryInterface185-7", 1193), ("telemetryInterface185-8", 1194), ("telemetryInterface185-9", 1195), ("telemetryInterface186-1", 1196), ("telemetryInterface186-10", 1197), ("telemetryInterface186-11", 1198), ("telemetryInterface186-12", 1199), ("telemetryInterface186-13", 1200), ("telemetryInterface186-14", 1201), ("telemetryInterface186-15", 1202), ("telemetryInterface186-16", 1203), ("telemetryInterface186-2", 1204), ("telemetryInterface186-3", 1205), ("telemetryInterface186-4", 1206), ("telemetryInterface186-5", 1207), ("telemetryInterface186-6", 1208), ("telemetryInterface186-7", 1209), ("telemetryInterface186-8", 1210), ("telemetryInterface186-9", 1211), ("telemetryInterface187-1", 1212), ("telemetryInterface187-10", 1213), ("telemetryInterface187-11", 1214), ("telemetryInterface187-12", 1215), ("telemetryInterface187-13", 1216), ("telemetryInterface187-14", 1217), ("telemetryInterface187-15", 1218), ("telemetryInterface187-16", 1219), ("telemetryInterface187-2", 1220), ("telemetryInterface187-3", 1221), ("telemetryInterface187-4", 1222), ("telemetryInterface187-5", 1223), ("telemetryInterface187-6", 1224), ("telemetryInterface187-7", 1225), ("telemetryInterface187-8", 1226), ("telemetryInterface187-9", 1227), ("telemetryInterface200-1", 1228), ("telemetryInterface200-10", 1229), ("telemetryInterface200-11", 1230), ("telemetryInterface200-12", 1231), ("telemetryInterface200-13", 1232), ("telemetryInterface200-14", 1233), ("telemetryInterface200-15", 1234), ("telemetryInterface200-16", 1235), ("telemetryInterface200-2", 1236), ("telemetryInterface200-3", 1237), ("telemetryInterface200-4", 1238), ("telemetryInterface200-5", 1239), ("telemetryInterface200-6", 1240), ("telemetryInterface200-7", 1241), ("telemetryInterface200-8", 1242), ("telemetryInterface200-9", 1243), ("telemetryInterface201-1", 1244), ("telemetryInterface201-10", 1245), ("telemetryInterface201-11", 1246), ("telemetryInterface201-12", 1247), ("telemetryInterface201-13", 1248), ("telemetryInterface201-14", 1249), ("telemetryInterface201-15", 1250), ("telemetryInterface201-16", 1251), ("telemetryInterface201-2", 1252), ("telemetryInterface201-3", 1253), ("telemetryInterface201-4", 1254), ("telemetryInterface201-5", 1255), ("telemetryInterface201-6", 1256), ("telemetryInterface201-7", 1257), ("telemetryInterface201-8", 1258), ("telemetryInterface201-9", 1259), ("telemetryInterface202-1", 1260), ("telemetryInterface202-10", 1261), ("telemetryInterface202-11", 1262), ("telemetryInterface202-12", 1263), ("telemetryInterface202-13", 1264), ("telemetryInterface202-14", 1265), ("telemetryInterface202-15", 1266), ("telemetryInterface202-16", 1267), ("telemetryInterface202-2", 1268), ("telemetryInterface202-3", 1269), ("telemetryInterface202-4", 1270), ("telemetryInterface202-5", 1271), ("telemetryInterface202-6", 1272), ("telemetryInterface202-7", 1273), ("telemetryInterface202-8", 1274), ("telemetryInterface202-9", 1275), ("telemetryInterface203-1", 1276), ("telemetryInterface203-10", 1277), ("telemetryInterface203-11", 1278), ("telemetryInterface203-12", 1279), ("telemetryInterface203-13", 1280), ("telemetryInterface203-14", 1281), ("telemetryInterface203-15", 1282), ("telemetryInterface203-16", 1283), ("telemetryInterface203-2", 1284), ("telemetryInterface203-3", 1285), ("telemetryInterface203-4", 1286), ("telemetryInterface203-5", 1287), ("telemetryInterface203-6", 1288), ("telemetryInterface203-7", 1289), ("telemetryInterface203-8", 1290), ("telemetryInterface203-9", 1291), ("telemetryInterface204-1", 1292), ("telemetryInterface204-10", 1293), ("telemetryInterface204-11", 1294), ("telemetryInterface204-12", 1295), ("telemetryInterface204-13", 1296), ("telemetryInterface204-14", 1297), ("telemetryInterface204-15", 1298), ("telemetryInterface204-16", 1299), ("telemetryInterface204-2", 1300), ("telemetryInterface204-3", 1301), ("telemetryInterface204-4", 1302), ("telemetryInterface204-5", 1303), ("telemetryInterface204-6", 1304), ("telemetryInterface204-7", 1305), ("telemetryInterface204-8", 1306), ("telemetryInterface204-9", 1307), ("telemetryInterface205-1", 1308), ("telemetryInterface205-10", 1309), ("telemetryInterface205-11", 1310), ("telemetryInterface205-12", 1311), ("telemetryInterface205-13", 1312), ("telemetryInterface205-14", 1313), ("telemetryInterface205-15", 1314), ("telemetryInterface205-16", 1315), ("telemetryInterface205-2", 1316), ("telemetryInterface205-3", 1317), ("telemetryInterface205-4", 1318), ("telemetryInterface205-5", 1319), ("telemetryInterface205-6", 1320), ("telemetryInterface205-7", 1321), ("telemetryInterface205-8", 1322), ("telemetryInterface205-9", 1323), ("telemetryInterface206-1", 1324), ("telemetryInterface206-10", 1325), ("telemetryInterface206-11", 1326), ("telemetryInterface206-12", 1327), ("telemetryInterface206-13", 1328), ("telemetryInterface206-14", 1329), ("telemetryInterface206-15", 1330), ("telemetryInterface206-16", 1331), ("telemetryInterface206-2", 1332), ("telemetryInterface206-3", 1333), ("telemetryInterface206-4", 1334), ("telemetryInterface206-5", 1335), ("telemetryInterface206-6", 1336), ("telemetryInterface206-7", 1337), ("telemetryInterface206-8", 1338), ("telemetryInterface206-9", 1339), ("telemetryInterface207-1", 1340), ("telemetryInterface207-10", 1341), ("telemetryInterface207-11", 1342), ("telemetryInterface207-12", 1343), ("telemetryInterface207-13", 1344), ("telemetryInterface207-14", 1345), ("telemetryInterface207-15", 1346), ("telemetryInterface207-16", 1347), ("telemetryInterface207-2", 1348), ("telemetryInterface207-3", 1349), ("telemetryInterface207-4", 1350), ("telemetryInterface207-5", 1351), ("telemetryInterface207-6", 1352), ("telemetryInterface207-7", 1353), ("telemetryInterface207-8", 1354), ("telemetryInterface207-9", 1355), ("telemetryInterface210-1", 1356), ("telemetryInterface210-10", 1357), ("telemetryInterface210-11", 1358), ("telemetryInterface210-12", 1359), ("telemetryInterface210-13", 1360), ("telemetryInterface210-14", 1361), ("telemetryInterface210-15", 1362), ("telemetryInterface210-16", 1363), ("telemetryInterface210-2", 1364), ("telemetryInterface210-3", 1365), ("telemetryInterface210-4", 1366), ("telemetryInterface210-5", 1367), ("telemetryInterface210-6", 1368), ("telemetryInterface210-7", 1369), ("telemetryInterface210-8", 1370), ("telemetryInterface210-9", 1371)) + NamedValues(("telemetryInterface211-1", 1372), ("telemetryInterface211-10", 1373), ("telemetryInterface211-11", 1374), ("telemetryInterface211-12", 1375), ("telemetryInterface211-13", 1376), ("telemetryInterface211-14", 1377), ("telemetryInterface211-15", 1378), ("telemetryInterface211-16", 1379), ("telemetryInterface211-2", 1380), ("telemetryInterface211-3", 1381), ("telemetryInterface211-4", 1382), ("telemetryInterface211-5", 1383), ("telemetryInterface211-6", 1384), ("telemetryInterface211-7", 1385), ("telemetryInterface211-8", 1386), ("telemetryInterface211-9", 1387), ("telemetryInterface212-1", 1388), ("telemetryInterface212-10", 1389), ("telemetryInterface212-11", 1390), ("telemetryInterface212-12", 1391), ("telemetryInterface212-13", 1392), ("telemetryInterface212-14", 1393), ("telemetryInterface212-15", 1394), ("telemetryInterface212-16", 1395), ("telemetryInterface212-2", 1396), ("telemetryInterface212-3", 1397), ("telemetryInterface212-4", 1398), ("telemetryInterface212-5", 1399), ("telemetryInterface212-6", 1400), ("telemetryInterface212-7", 1401), ("telemetryInterface212-8", 1402), ("telemetryInterface212-9", 1403), ("telemetryInterface213-1", 1404), ("telemetryInterface213-10", 1405), ("telemetryInterface213-11", 1406), ("telemetryInterface213-12", 1407), ("telemetryInterface213-13", 1408), ("telemetryInterface213-14", 1409), ("telemetryInterface213-15", 1410), ("telemetryInterface213-16", 1411), ("telemetryInterface213-2", 1412), ("telemetryInterface213-3", 1413), ("telemetryInterface213-4", 1414), ("telemetryInterface213-5", 1415), ("telemetryInterface213-6", 1416), ("telemetryInterface213-7", 1417), ("telemetryInterface213-8", 1418), ("telemetryInterface213-9", 1419), ("telemetryInterface214-1", 1420), ("telemetryInterface214-10", 1421), ("telemetryInterface214-11", 1422), ("telemetryInterface214-12", 1423), ("telemetryInterface214-13", 1424), ("telemetryInterface214-14", 1425), ("telemetryInterface214-15", 1426), ("telemetryInterface214-16", 1427), ("telemetryInterface214-2", 1428), ("telemetryInterface214-3", 1429), ("telemetryInterface214-4", 1430), ("telemetryInterface214-5", 1431), ("telemetryInterface214-6", 1432), ("telemetryInterface214-7", 1433), ("telemetryInterface214-8", 1434), ("telemetryInterface214-9", 1435), ("telemetryInterface215-1", 1436), ("telemetryInterface215-10", 1437), ("telemetryInterface215-11", 1438), ("telemetryInterface215-12", 1439), ("telemetryInterface215-13", 1440), ("telemetryInterface215-14", 1441), ("telemetryInterface215-15", 1442), ("telemetryInterface215-16", 1443), ("telemetryInterface215-2", 1444), ("telemetryInterface215-3", 1445), ("telemetryInterface215-4", 1446), ("telemetryInterface215-5", 1447), ("telemetryInterface215-6", 1448), ("telemetryInterface215-7", 1449), ("telemetryInterface215-8", 1450), ("telemetryInterface215-9", 1451), ("telemetryInterface216-1", 1452), ("telemetryInterface216-10", 1453), ("telemetryInterface216-11", 1454), ("telemetryInterface216-12", 1455), ("telemetryInterface216-13", 1456), ("telemetryInterface216-14", 1457), ("telemetryInterface216-15", 1458), ("telemetryInterface216-16", 1459), ("telemetryInterface216-2", 1460), ("telemetryInterface216-3", 1461), ("telemetryInterface216-4", 1462), ("telemetryInterface216-5", 1463), ("telemetryInterface216-6", 1464), ("telemetryInterface216-7", 1465), ("telemetryInterface216-8", 1466), ("telemetryInterface216-9", 1467), ("telemetryInterface217-1", 1468), ("telemetryInterface217-10", 1469), ("telemetryInterface217-11", 1470), ("telemetryInterface217-12", 1471), ("telemetryInterface217-13", 1472), ("telemetryInterface217-14", 1473), ("telemetryInterface217-15", 1474), ("telemetryInterface217-16", 1475), ("telemetryInterface217-2", 1476), ("telemetryInterface217-3", 1477), ("telemetryInterface217-4", 1478), ("telemetryInterface217-5", 1479), ("telemetryInterface217-6", 1480), ("telemetryInterface217-7", 1481), ("telemetryInterface217-8", 1482), ("telemetryInterface217-9", 1483), ("telemetryInterface300-1", 1484), ("telemetryInterface300-10", 1485), ("telemetryInterface300-11", 1486), ("telemetryInterface300-12", 1487), ("telemetryInterface300-13", 1488), ("telemetryInterface300-14", 1489), ("telemetryInterface300-15", 1490), ("telemetryInterface300-16", 1491), ("telemetryInterface300-2", 1492), ("telemetryInterface300-3", 1493), ("telemetryInterface300-4", 1494), ("telemetryInterface300-5", 1495), ("telemetryInterface300-6", 1496), ("telemetryInterface300-7", 1497), ("telemetryInterface300-8", 1498), ("telemetryInterface300-9", 1499), ("telemetryInterface301-1", 1500), ("telemetryInterface301-10", 1501), ("telemetryInterface301-11", 1502), ("telemetryInterface301-12", 1503), ("telemetryInterface301-13", 1504), ("telemetryInterface301-14", 1505), ("telemetryInterface301-15", 1506), ("telemetryInterface301-16", 1507), ("telemetryInterface301-2", 1508), ("telemetryInterface301-3", 1509), ("telemetryInterface301-4", 1510), ("telemetryInterface301-5", 1511), ("telemetryInterface301-6", 1512), ("telemetryInterface301-7", 1513), ("telemetryInterface301-8", 1514), ("telemetryInterface301-9", 1515), ("telemetryInterface302-1", 1516), ("telemetryInterface302-10", 1517), ("telemetryInterface302-11", 1518), ("telemetryInterface302-12", 1519), ("telemetryInterface302-13", 1520), ("telemetryInterface302-14", 1521), ("telemetryInterface302-15", 1522), ("telemetryInterface302-16", 1523), ("telemetryInterface302-2", 1524), ("telemetryInterface302-3", 1525), ("telemetryInterface302-4", 1526), ("telemetryInterface302-5", 1527), ("telemetryInterface302-6", 1528), ("telemetryInterface302-7", 1529), ("telemetryInterface302-8", 1530), ("telemetryInterface302-9", 1531), ("telemetryInterface303-1", 1532), ("telemetryInterface303-10", 1533), ("telemetryInterface303-11", 1534), ("telemetryInterface303-12", 1535), ("telemetryInterface303-13", 1536), ("telemetryInterface303-14", 1537), ("telemetryInterface303-15", 1538), ("telemetryInterface303-16", 1539), ("telemetryInterface303-2", 1540), ("telemetryInterface303-3", 1541), ("telemetryInterface303-4", 1542), ("telemetryInterface303-5", 1543), ("telemetryInterface303-6", 1544), ("telemetryInterface303-7", 1545), ("telemetryInterface303-8", 1546), ("telemetryInterface303-9", 1547), ("telemetryInterface304-1", 1548), ("telemetryInterface304-10", 1549), ("telemetryInterface304-11", 1550), ("telemetryInterface304-12", 1551), ("telemetryInterface304-13", 1552), ("telemetryInterface304-14", 1553), ("telemetryInterface304-15", 1554), ("telemetryInterface304-16", 1555), ("telemetryInterface304-2", 1556), ("telemetryInterface304-3", 1557), ("telemetryInterface304-4", 1558), ("telemetryInterface304-5", 1559), ("telemetryInterface304-6", 1560), ("telemetryInterface304-7", 1561), ("telemetryInterface304-8", 1562), ("telemetryInterface304-9", 1563), ("telemetryInterface305-1", 1564), ("telemetryInterface305-10", 1565), ("telemetryInterface305-11", 1566), ("telemetryInterface305-12", 1567), ("telemetryInterface305-13", 1568), ("telemetryInterface305-14", 1569), ("telemetryInterface305-15", 1570), ("telemetryInterface305-16", 1571), ("telemetryInterface305-2", 1572), ("telemetryInterface305-3", 1573), ("telemetryInterface305-4", 1574), ("telemetryInterface305-5", 1575), ("telemetryInterface305-6", 1576), ("telemetryInterface305-7", 1577), ("telemetryInterface305-8", 1578), ("telemetryInterface305-9", 1579), ("telemetryInterface306-1", 1580), ("telemetryInterface306-10", 1581), ("telemetryInterface306-11", 1582), ("telemetryInterface306-12", 1583), ("telemetryInterface306-13", 1584), ("telemetryInterface306-14", 1585), ("telemetryInterface306-15", 1586), ("telemetryInterface306-16", 1587), ("telemetryInterface306-2", 1588), ("telemetryInterface306-3", 1589), ("telemetryInterface306-4", 1590), ("telemetryInterface306-5", 1591), ("telemetryInterface306-6", 1592), ("telemetryInterface306-7", 1593), ("telemetryInterface306-8", 1594), ("telemetryInterface306-9", 1595), ("telemetryInterface307-1", 1596), ("telemetryInterface307-10", 1597), ("telemetryInterface307-11", 1598), ("telemetryInterface307-12", 1599), ("telemetryInterface307-13", 1600), ("telemetryInterface307-14", 1601), ("telemetryInterface307-15", 1602), ("telemetryInterface307-16", 1603), ("telemetryInterface307-2", 1604), ("telemetryInterface307-3", 1605), ("telemetryInterface307-4", 1606), ("telemetryInterface307-5", 1607), ("telemetryInterface307-6", 1608), ("telemetryInterface307-7", 1609), ("telemetryInterface307-8", 1610), ("telemetryInterface307-9", 1611), ("telemetryInterface310-1", 1612), ("telemetryInterface310-10", 1613), ("telemetryInterface310-11", 1614), ("telemetryInterface310-12", 1615), ("telemetryInterface310-13", 1616), ("telemetryInterface310-14", 1617), ("telemetryInterface310-15", 1618), ("telemetryInterface310-16", 1619), ("telemetryInterface310-2", 1620), ("telemetryInterface310-3", 1621), ("telemetryInterface310-4", 1622), ("telemetryInterface310-5", 1623), ("telemetryInterface310-6", 1624), ("telemetryInterface310-7", 1625), ("telemetryInterface310-8", 1626)) + NamedValues(("telemetryInterface310-9", 1627), ("telemetryInterface311-1", 1628), ("telemetryInterface311-10", 1629), ("telemetryInterface311-11", 1630), ("telemetryInterface311-12", 1631), ("telemetryInterface311-13", 1632), ("telemetryInterface311-14", 1633), ("telemetryInterface311-15", 1634), ("telemetryInterface311-16", 1635), ("telemetryInterface311-2", 1636), ("telemetryInterface311-3", 1637), ("telemetryInterface311-4", 1638), ("telemetryInterface311-5", 1639), ("telemetryInterface311-6", 1640), ("telemetryInterface311-7", 1641), ("telemetryInterface311-8", 1642), ("telemetryInterface311-9", 1643), ("telemetryInterface312-1", 1644), ("telemetryInterface312-10", 1645), ("telemetryInterface312-11", 1646), ("telemetryInterface312-12", 1647), ("telemetryInterface312-13", 1648), ("telemetryInterface312-14", 1649), ("telemetryInterface312-15", 1650), ("telemetryInterface312-16", 1651), ("telemetryInterface312-2", 1652), ("telemetryInterface312-3", 1653), ("telemetryInterface312-4", 1654), ("telemetryInterface312-5", 1655), ("telemetryInterface312-6", 1656), ("telemetryInterface312-7", 1657), ("telemetryInterface312-8", 1658), ("telemetryInterface312-9", 1659), ("telemetryInterface313-1", 1660), ("telemetryInterface313-10", 1661), ("telemetryInterface313-11", 1662), ("telemetryInterface313-12", 1663), ("telemetryInterface313-13", 1664), ("telemetryInterface313-14", 1665), ("telemetryInterface313-15", 1666), ("telemetryInterface313-16", 1667), ("telemetryInterface313-2", 1668), ("telemetryInterface313-3", 1669), ("telemetryInterface313-4", 1670), ("telemetryInterface313-5", 1671), ("telemetryInterface313-6", 1672), ("telemetryInterface313-7", 1673), ("telemetryInterface313-8", 1674), ("telemetryInterface313-9", 1675), ("telemetryInterface314-1", 1676), ("telemetryInterface314-10", 1677), ("telemetryInterface314-11", 1678), ("telemetryInterface314-12", 1679), ("telemetryInterface314-13", 1680), ("telemetryInterface314-14", 1681), ("telemetryInterface314-15", 1682), ("telemetryInterface314-16", 1683), ("telemetryInterface314-2", 1684), ("telemetryInterface314-3", 1685), ("telemetryInterface314-4", 1686), ("telemetryInterface314-5", 1687), ("telemetryInterface314-6", 1688), ("telemetryInterface314-7", 1689), ("telemetryInterface314-8", 1690), ("telemetryInterface314-9", 1691), ("telemetryInterface315-1", 1692), ("telemetryInterface315-10", 1693), ("telemetryInterface315-11", 1694), ("telemetryInterface315-12", 1695), ("telemetryInterface315-13", 1696), ("telemetryInterface315-14", 1697), ("telemetryInterface315-15", 1698), ("telemetryInterface315-16", 1699), ("telemetryInterface315-2", 1700), ("telemetryInterface315-3", 1701), ("telemetryInterface315-4", 1702), ("telemetryInterface315-5", 1703), ("telemetryInterface315-6", 1704), ("telemetryInterface315-7", 1705), ("telemetryInterface315-8", 1706), ("telemetryInterface315-9", 1707), ("telemetryInterface316-1", 1708), ("telemetryInterface316-10", 1709), ("telemetryInterface316-11", 1710), ("telemetryInterface316-12", 1711), ("telemetryInterface316-13", 1712), ("telemetryInterface316-14", 1713), ("telemetryInterface316-15", 1714), ("telemetryInterface316-16", 1715), ("telemetryInterface316-2", 1716), ("telemetryInterface316-3", 1717), ("telemetryInterface316-4", 1718), ("telemetryInterface316-5", 1719), ("telemetryInterface316-6", 1720), ("telemetryInterface316-7", 1721), ("telemetryInterface316-8", 1722), ("telemetryInterface316-9", 1723), ("telemetryInterface317-1", 1724), ("telemetryInterface317-10", 1725), ("telemetryInterface317-11", 1726), ("telemetryInterface317-12", 1727), ("telemetryInterface317-13", 1728), ("telemetryInterface317-14", 1729), ("telemetryInterface317-15", 1730), ("telemetryInterface317-16", 1731), ("telemetryInterface317-2", 1732), ("telemetryInterface317-3", 1733), ("telemetryInterface317-4", 1734), ("telemetryInterface317-5", 1735), ("telemetryInterface317-6", 1736), ("telemetryInterface317-7", 1737), ("telemetryInterface317-8", 1738), ("telemetryInterface317-9", 1739), ("telemetryInterface501-1", 1740), ("telemetryInterface501-2", 1741), ("telemetryInterface511-1", 1742), ("telemetryInterface511-2", 1743), ("telemetryInterface521-1", 1744), ("telemetryInterface521-2", 1745), ("telemetryInterface531-1", 1746), ("telemetryInterface531-2", 1747), ("telemetryInterface541-1", 1748), ("telemetryInterface541-2", 1749), ("telemetryInterface551-1", 1750), ("telemetryInterface551-2", 1751), ("telemetryInterface561-1", 1752), ("telemetryInterface561-2", 1753), ("telemetryInterface571-1", 1754), ("telemetryInterface571-2", 1755), ("telemetryInterface581-1", 1756), ("telemetryInterface581-2", 1757), ("telemetryInterface591-1", 1758), ("telemetryInterface591-2", 1759), ("telemetryInterface601-1", 1760), ("telemetryInterface601-2", 1761), ("telemetryInterface611-1", 1762), ("telemetryInterface611-2", 1763), ("telemetryInterface621-1", 1764), ("telemetryInterface621-2", 1765), ("telemetryInterface631-1", 1766), ("telemetryInterface631-2", 1767), ("telemetryInterface641-1", 1768), ("telemetryInterface641-2", 1769), ("telemetryInterface651-1", 1770), ("telemetryInterface651-2", 1771), ("telemetryInterface661-1", 1772), ("telemetryInterface661-2", 1773), ("telemetryInterface671-1", 1774), ("telemetryInterface671-2", 1775), ("telemetryInterface681-1", 1776), ("telemetryInterface681-2", 1777), ("telemetryInterface691-1", 1778), ("telemetryInterface691-2", 1779), ("mnd", 1780), ("fopr", 1781), ("plct", 1782), ("plcr", 1783), ("tlct", 1784), ("tlcr", 1785), ("noInputPower", 1786), ("protshelf", 1787), ("ac1", 1788), ("ac2", 1789), ("qlink", 1790), ("laserFail", 1791), ("receiverfailure", 1792), ("pumplaserfail", 1793), ("equipmentnotaccepted", 1794), ("equipmentmismatch", 1795), ("equipmentnotapproved", 1796), ("fot", 1797), ("pccfail1", 1798), ("pccfail2", 1799), ("pccfail3", 1800), ("pecloss", 1801), ("lscloss1", 1802), ("lscloss2", 1803), ("lscmismatch1", 1804), ("lscmismatch2", 1805), ("utifp", 1806), ("felne", 1807), ("txFailure", 1808), ("logOccupancyThresholdReached", 1809), ("logIsFull", 1810), ("cpuFailure", 1811), ("notEnoughProcesses", 1812), ("processDown", 1813), ("outOfSpace", 1814), ("excessiveError", 1815), ("dcf", 1816), ("remoteFailureIndication", 1817), ("timingReferenceFailure", 1818), ("systemClockHoldoverLonger", 1819), ("lossOfTimingOutput", 1820), ("syncSignalMessageMismatch", 1821), ("clockFailure", 1822), ("miscDiscInput1", 1823), ("miscDiscInput2", 1824), ("miscDiscInput3", 1825), ("miscDiscInput4", 1826), ("envOH", 1827), ("unitFailed", 1828), ("unitRemoval", 1829), ("unitTypeMismatch", 1830), ("oaInputLos", 1831), ("oaOutputLos", 1832), ("oaPowerFailure", 1833), ("oaPumpBiasOutRange", 1834), ("oaTemperatureOutOfRange", 1835), ("positiveSlip", 1836), ("negativeSlip", 1837), ("abnormalCondition", 1838), ("powerConsumptionOverload", 1839), ("authenticationFailed", 1840), ("resourceAccessDenied", 1841), ("telemetryInterface380-1", 1842), ("rei", 1843), ("thresholdBSPlus15", 1844), ("thresholdBSPlus24", 1845), ("thresholdBSMinus15", 1846), ("thresholdBSMinus24", 1847), ("abnormalConditionEquip", 1848), ("lossOfHeartbeat", 1849), ("ethernetSwitchFail", 1850), ("preemphaseFail", 1851), ("channelUpgradeOrderViolation", 1852), ("remoteMsi", 1853), ("ltiT0-minor", 1854), ("ltiT4-minor", 1855), ("gainTiltProblem", 1856), ("ethernetLinkFault", 1857), ("remoteEthernetLinkFault", 1858), ("highPowerReceiveFailure", 1859), ("highPowerReceiveDetected", 1860), ("voltageProblem", 1861), ("voltageProblemLine", 1862), ("voltageProblemTrib1", 1863), ("voltageProblemTrib2", 1864), ("voltageProblemTrib3", 1865), ("voltageProblemTrib4", 1866), ("temperatureTooHighLine", 1867), ("temperatureTooHighTrib1", 1868), ("temperatureTooHighTrib2", 1869), ("temperatureTooHighTrib3", 1870), ("temperatureTooHighTrib4", 1871), ("calibrationFailure", 1872), ("calibrationFailureLine", 1873), ("calibrationFailureTrib1", 1874), ("calibrationFailureTrib2", 1875), ("calibrationFailureTrib3", 1876), ("calibrationFailureTrib4", 1877), ("redundantControllerFailed", 1878), ("flashCapacityProblem", 1879), ("inputLossOfLight", 1880), ("outputLossOfLight", 1881)) + NamedValues(("feedbackAbsent", 1882), ("feedbackDegraded", 1883), ("missingOpticalModule1", 1884), ("missingOpticalModule2", 1885), ("missingOpticalModule3", 1886), ("missingOpticalModule4", 1887), ("unqualifiedOpticalModule1", 1888), ("unqualifiedOpticalModule2", 1889), ("unqualifiedOpticalModule3", 1890), ("unqualifiedOpticalModule4", 1891), ("coolingFan1Failure", 1892), ("coolingFan2Failure", 1893), ("coolingFan3Failure", 1894), ("coolingFan1Missing", 1895), ("coolingFan2Missing", 1896), ("coolingFan3Missing", 1897), ("swDownloadInOcu40Failed", 1898), ("noConnectionToOCU40", 1899), ("swapPreparationFailure", 1900), ("noVCDBMigrationPossible", 1901), ("apsBackupRunning", 1902), ("channelCountMismatch", 1903), ("btbm", 1904), ("oscDirectionMismatch", 1905), ("regeneratorPairUnavailable", 1906), ("unspecifiedCriticalAlarm1", 1907), ("unspecifiedCriticalAlarm2", 1908), ("unspecifiedMajorAlarm1", 1909), ("unspecifiedMajorAlarm2", 1910), ("unspecifiedMinorAlarm1", 1911), ("unspecifiedMinorAlarm2", 1912), ("rxConnectedCardMismatch", 1913), ("lineCardFreqNotSupported", 1914), ("performanceLogThresholdReached", 1915), ("connectionLossToLocalNE", 1916), ("connectionLossToRemoteNE", 1917), ("communicationLossToOTS", 1918), ("communicationProblemToOTS", 1919), ("syncInProgress", 1920), ("storageFailure", 1921), ("criticalGeneralAlarm", 1922), ("noSyncMaster", 1923), ("alarmOn", 1924), ("overCurrent", 1925), ("lossOfMultiChannelSynchronisation", 1926), ("lossOfSynchronizationWord", 1927), ("noSlavePresent", 1928), ("partialLossOfMultiChannelSynchronisation", 1929), ("maximumInformationRate", 1930), ("firmwareMismatch", 1931), ("rpsConfigurationMismatch", 1932), ("measurementFailureFSU", 1933), ("lossOfSignalInput1", 1934), ("lossOfSignalInput2", 1935), ("lossOfSignalInput3", 1936), ("lossOfSignalInput4", 1937), ("wssModuleProblem", 1938), ("cardCommunicationFailure", 1939), ("fanMajor", 1940), ("fanMinor", 1941), ("missingOpticalModuleLine1", 1942), ("unqualifiedOpticalModuleLine1", 1943), ("sfpMissingP1", 1944), ("sfpMissingP2", 1945), ("sfpMissingP3", 1946), ("sfpMissingP4", 1947), ("sfpMissingLine1", 1948), ("sfpMissingLine2", 1949), ("sfpUnqualified1", 1950), ("sfpUnqualified2", 1951), ("sfpUnqualified3", 1952), ("sfpUnqualified4", 1953), ("sfpUnqualifiedLine1", 1954), ("sfpUnqualifiedLine2", 1955), ("lossOfFrameDelineationGFP", 1956), ("extensionHeaderMismatchGFP", 1957), ("userPayloadMismatchGFP", 1958), ("degradedSignal", 1959), ("clientSignalFailGFP", 1960), ("h73ApsMissing", 1961), ("otsApsMissing", 1962), ("mtxApsMissing", 1963), ("compactFlashFail", 1964), ("apsMismatchHiT75", 1965), ("notificationQueueOverflowHiT75", 1966), ("temperatureTooHighCritical", 1967), ("coolingFan11Failure", 1968), ("coolingFan12Failure", 1969), ("coolingFan21Failure", 1970), ("coolingFan22Failure", 1971), ("coolingFan31Failure", 1972), ("coolingFan32Failure", 1973), ("multipleFansFailure", 1974), ("mismatchOpticalModule1", 1975), ("communicationLossToH73", 1976), ("communicationProblemToH73", 1977), ("subsystemMismatchH73", 1978), ("coolingFan1CommFailure", 1979), ("coolingFan2CommFailure", 1980), ("coolingFan3CommFailure", 1981), ("alarmPanelFailure", 1982), ("alarmPanelMissing", 1983), ("powerControlSuspicious", 1984), ("ntpServerAccessFailed", 1985), ("probeLOSAsap", 1986), ("partnerSubagentMissing", 1987), ("powerEqualizationFail", 1988), ("sfpMissingP5", 1989), ("sfpMissingP6", 1990), ("sfpMissingP7", 1991), ("sfpMissingP8", 1992), ("sfpUnqualified5", 1993), ("sfpUnqualified6", 1994), ("sfpUnqualified7", 1995), ("sfpUnqualified8", 1996), ("lineRefClockProblem", 1997), ("fifoFlowProblem", 1998), ("noResponseReceived", 2000), ("necUploadOrResynchFailed", 2001), ("loopback", 2002), ("remotechassismismatch", 2003), ("remotechassismissing", 2004), ("localChassisConfiguring", 2005), ("localchassismismatch", 2006), ("localchassismissing", 2007), ("remoteChassisConfiguring", 2008), ("remoteEquipmentMismatch", 2009), ("localEquipmentMismatch", 2010), ("localConf", 2011), ("remoteConf", 2012), ("localVoltageTooLow", 2013), ("remoteVoltageTooLow", 2014), ("localVoltageTooHigh", 2015), ("remoteVoltageTooHigh", 2016), ("localTemperatureTooHigh", 2017), ("remoteTemperatureTooHigh", 2018), ("localPowerFail", 2019), ("localFanFailure", 2021), ("remoteFanFailure", 2022), ("protectionGroupProtectionFail", 2023), ("protectionGroupProtectionMismatch", 2024), ("laserTempTooHigh", 2025), ("laserTempTooLow", 2026), ("oopOoR", 2027), ("tempSafetyShutdown", 2028), ("shelfRemoved", 2029), ("shelfInserted", 2030), ("moduleInsert", 2031), ("moduleRemoved", 2032), ("plugRemoved", 2033), ("plugInserted", 2034), ("initConfignotAccepted", 2035), ("badBytesReceived", 2036), ("badPacketsReceived", 2037), ("gcccConnectionroblem", 2039), ("sfpmismatchport1", 2040), ("sfpmismatchport2", 2041), ("sfpmismatchport3", 2042), ("sfpmismatchport4", 2043), ("sfpmissingport1", 2044), ("sfpmissingport2", 2045), ("sfpmissingport3", 2046), ("sfpmissingport4", 2047), ("apsbackupfailed", 2048), ("mibs256required", 2049), ("lossofsequencesynchronization", 2050), ("t11BadSSM", 2051), ("t12BadSSM", 2052), ("t13BadSSM", 2053), ("t14BadSSM", 2054), ("t15BadSSM", 2055), ("t16BadSSM", 2056), ("t17BadSSM", 2057), ("t18BadSSM", 2058), ("dcf1", 2059), ("dcf2", 2060), ("rprMaxStationsExceeded", 2061), ("rprProtectionMisconfiguration", 2062), ("rprTopologyInconsistent", 2063), ("rprTopologyUnstable", 2064), ("rprRinglet0A0Exceeding", 2065), ("rprRinglet1A0Exceeding", 2066), ("rprMiscablingEast", 2067), ("rprMiscablingWest", 2068), ("rprLinkFailureEast", 2069), ("rprLinkFailureWest", 2070), ("sfpFailure", 2071), ("sfpMismatch", 2072), ("timingReferenceDegrade", 2073), ("memoryCardFailure", 2074), ("lineOrderError", 2075), ("sCCFModuleFailure", 2076), ("sCCFModuleAbsentAlarm", 2077), ("sfpmismatchport5", 2100), ("sfpmismatchport6", 2101), ("sfpmismatchport7", 2102), ("sfpmismatchport8", 2103), ("pathTraceMismatchAsap", 2104), ("onboardFlashFail", 2105), ("h73RecoverMode", 2106), ("mismatchOpticalModule2", 2107), ("mismatchOpticalModule3", 2108), ("mismatchOpticalModule4", 2109), ("hdsApsMissing", 2110), ("communicationLossToHDS", 2111), ("communicationProblemToHDS", 2112), ("subsystemMismatchHDS", 2113), ("hdsRecoverMode", 2114), ("inputOpticalPowerTooLow", 2115), ("lossofsequencesynchronizationCom", 2116), ("radiusServerUnavailable", 2117), ("omdModuleProblem", 2118), ("overPowerRx", 2119), ("lossOfLight", 2120), ("overPowerTx", 2121), ("multiTransponderPowerFail", 2122), ("missingOpticalModule", 2123), ("mismatchOpticalModule", 2124), ("unqualifiedOpticalModule", 2125), ("reduceNotificationOverload", 2126), ("outputPortProblem", 2127), ("apsMissing", 2128), ("softwareManagementFailure", 2129), ("swapPreparationFailureProc", 2130), ("tIFActivatedAlarm1", 2131), ("tIFActivatedAlarm2", 2132), ("tIFActivatedAlarm3", 2133), ("tIFActivatedAlarm4", 2134), ("powerLossSuspicious", 2135), ("connectionEstablished", 2136), ("opticalPowerTransmittedTooLow", 2137), ("opticalPowerReceivedTooLow", 2138), ("problemOpticalModule", 2139), ("lossOfSignalGFP", 2140), ("dataRateMism", 2141), ("cltSignalFail", 2142), ("fwdDefectIndication", 2143), ("rmtDefectIndication", 2144), ("fanInsufficient", 2145), ("fanMismatch", 2146), ("coolingFan4Failure", 2147), ("coolingFan4Missing", 2148), ("powerOverLimit100G", 2149), ("uniMcuMissing", 2150), ("backupApsMissing", 2151), ("lossOfLaneAlign", 2152), ("lossOfMultiframeOPU", 2153), ("fanFilterMiss", 2154), ("eepromF", 2155), ("cltSignalFailGFP", 2156), ("tempProblemMajor", 2157), ("jnxOpticsLOS", 2200), ("jnxOpticsWavelenthLockErr", 2201), ("jnxOpticsPowerHighAlarm", 2202), ("jnxOpticsPowerLowAlarm", 2203)) + NamedValues(("jnxOpticsBiasCurrentHighAlarm", 2204), ("jnxOpticsBiasCurrentLowAlarm", 2205), ("jnxOpticsTemperatureHighAlarm", 2206), ("jnxOpticsTemperaturelowAlarm", 2207), ("jnxOpticsTxPLLLockAlarm", 2208), ("jnxOpticsRxPLLLockAlarm", 2209), ("jnxOpticsAvgPowerAlarm", 2210), ("jnxOpticsRxLossAvgPowerAlarm", 2211), ("jnxOpticsLossofACPowerAlarm", 2212), ("jnxOpticsTxPowerHighThreshAlert", 2213), ("jnxOpticsTxPowerLowThreshAlert", 2214), ("jnxOpticsRxPowerHighThreshAlert", 2215), ("jnxOpticsRxPowerLowThreshAlert", 2216), ("jnxOpticsModuleTempHighThreshAlert", 2217), ("jnxOpticsModuleTempLowThreshAlert", 2218), ("jnxOpticsRxCarrierFreqHighThreshAlert", 2219), ("jnxOpticsRxCarrierFreqLowThreshAlert", 2220), ("jnxoptIfOtnLosAlarm", 2221), ("jnxoptIfOtnLofAlarm", 2222), ("jnxoptIfOtnLomAlarm", 2223), ("jnxoptIfOtuSsfAlarm", 2224), ("jnxoptIfOtuBdiAlarm", 2225), ("jnxoptIfOtuTimAlarm", 2226), ("jnxoptIfOtuIaeAlarm", 2227), ("jnxoptIfOtuBiaeAlarm", 2228), ("jnxoptIfOtuTsfAlarm", 2229), ("jnxoptIfOtuDegAlarm", 2230), ("jnxoptIfOtuFecExcessiveErrsAlarm", 2231), ("jnxoptIfOdukTcmOciAlarm", 2232), ("jnxoptIfOdukTcmLckAlarm", 2233), ("jnxoptIfOdukTcmBdiAlarm", 2234), ("jnxoptIfOdukTcmTimAlarm", 2235), ("jnxoptIfOdukTcmDegAlarm", 2236), ("jnxoptIfOdukTcmIaeAlarm", 2237), ("jnxoptIfOdukTcmCSfAlarm", 2238), ("jnxoptIfOdukTcmSSfAlarm", 2239), ("jnxoptIfOdukTcmTSfAlarm", 2240), ("jnxOverTemperature", 2241), ("jnxFruFailed", 2242), ("jnxFruNotifMismatch", 2243), ("jnxFruRemoval", 2244), ("jnxFruPowerOff", 2245), ("jnxFanFailure", 2246), ("jnxPowerSupplyFailure", 2247), ("sOEsysalmcorttxerr", 2248), ("alarmMSSF", 2249), ("alarmMSB1BIP", 2250), ("alarmMSREITCA", 2251), ("alarmMSRSB1BIPTCA", 2252), ("alarmMSRSB2BIPTCA", 2253), ("alarmHPSD", 2254), ("alarmHPSF", 2255), ("alarmHPRDIP", 2256), ("alarmHPRDIS", 2257), ("alarmHPRDIC", 2258), ("alarmHPB3BIP", 2259), ("alarmHPREITCA", 2260), ("alarmHPB3BIPTCA", 2261), ("alarmLPSD", 2262), ("alarmLPSF", 2263), ("alarmLPRDIP", 2264), ("alarmLPRDIS", 2265), ("alarmLPRDIC", 2266), ("alarmLPREIB3", 2267), ("alarmLPREIV5", 2268), ("alarmLPB3BIP", 2269), ("alarmLPV5BIP", 2270), ("alarmLPREIB3TCA", 2271), ("alarmLPREIV5TCA", 2272), ("alarmLPB3BIPTCA", 2273), ("alarmLPV5BIPTCA", 2274), ("signalfailure", 2275), ("alarmB1BIPS", 2276), ("alarmB2BIPL", 2277), ("alarmREILTCA", 2278), ("alarmB1BIPSTCA", 2279), ("alarmB2BIPLTCA", 2280), ("ssignalFailHigherOrderPath", 2281), ("alarmTIMHigherOrderPath", 2282), ("alarmRDIPPHigherOrderPath", 2283), ("alarmRDISPHigherOrderPath", 2284), ("alarmRDICPHigherOrderPath", 2285), ("alarmREIPHigherOrderPath", 2286), ("alarmB3BIPPHigherOrderPath", 2287), ("alarmREIPTCAHigherOrderPath", 2288), ("alarmB3BIPPTCAHigherOrderPath", 2289), ("alarmLOPVvirtualtributarypath", 2290), ("alarmAISVvirtualtributarypath", 2291), ("alarmSDVvirtualtributarypath", 2292), ("alarmSFVvirtualtributarypath", 2293), ("alarmUNEQVvirtualtributarypath", 2294), ("alarmPLMVvirtualtributarypath", 2295), ("alarmTIMVvirtualtributarypath", 2296), ("alarmRDIPVvirtualtributarypath", 2297), ("alarmRDISVvirtualtributarypath", 2298), ("alarmRDICVvirtualtributarypath", 2299), ("alarmB3REIVvirtualtributarypath", 2300), ("alarmV5REIVvirtualtributarypath", 2301), ("alarmB3BIPVvirtualtributarypath", 2302), ("alarmV5BIPVvirtualtributarypath", 2303), ("alarmB3REIVTCAvirtualtributarypath", 2304), ("alarmV5REIVTCAvirtualtributarypath", 2305), ("alarmB3BIPVTCAvirtualtributarypath", 2306), ("alarmV5BIPVTCAvirtualtributarypath", 2307), ("alarmENETFCEERROR", 2308), ("alarmENETDROPFRTCA", 2309), ("alarmaisM13", 2310), ("alarmE3T3LINEPCBITS", 2311), ("syslogAuthenticationFailure", 2500), ("syslogConnectionFailure", 2501), ("alarmShelfMismatch", 3000), ("alarmHwFailure", 3001), ("alarmPowerMissing", 3002), ("alarmCurrentTooLow", 3003), ("alarmCurrentTooHigh", 3004), ("alarmTransmittedDisabledIdle", 3005), ("alarmTransmittedDisabledAis", 3006), ("alarmCardRemoved", 3007), ("alarmSwitchFailed", 3008), ("alarmPowerSupplyUnitFailure", 3009), ("alarmInputVoltageFailure", 3010), ("alarmAlsPulsesReceived", 3011), ("alarmIdleSignalReceived", 3012), ("alarmLossOfReceiverClockRecovery", 3013), ("alarmOpticalInputPwrReceivedTooLow", 3014), ("alarmOpticalInputPwrReceivedTooHigh", 3015), ("alarmOpticalOutputPwrTransmittedTooHigh", 3016), ("alarmOpticalOutputPwrTransmittedTooLow", 3017), ("alarmSectionTraceInconsistency", 3018), ("alarmIndicationSignalOdu", 3019), ("alarmIndicationSignalOtu", 3020), ("alarmLossOfMultiFrameOtu", 3021), ("alarmAutomaticShutdownByAisOtu", 3022), ("alarmTraceIdentifierMismatchOtu", 3023), ("alarmSignalDegradeOtu", 3024), ("alarmBackwardDefectIndicationOtu", 3025), ("alarmAutomaticShutdownByAisOdu", 3026), ("alarmLOFLOMODU", 3027), ("alarmOpenConnectionIndicationOdu", 3028), ("alarmLockedDefectOdu", 3029), ("alarmTraceIdentifierMismatchOdu", 3030), ("alarmSignalDegradeOdu", 3031), ("alarmBackwardDefectIndicationOdu", 3032), ("alarmMultiplexStructureIdentifierMismatchOPU", 3033), ("alarmAPSCONF", 3034), ("alarmAutomaticShutdownbyEPC", 3035), ("alarmFacilityDataRateNotSupported", 3036), ("alarmApsProtocolFailure", 3037), ("alarmPeerLink", 3038), ("alarmPayloadMismatchOPU", 3039), ("alarmAttOnReceiverFiberLowerThanMonitor", 3040), ("alarmAttOnReceiverFiberHigherThanMonitor", 3041), ("alarmSignalDegradeOlm", 3042), ("alarmLossOfFrameMux", 3043), ("alarmLossOfFrameMuxFarEnd", 3044), ("alarmThres15MinExceededPhysConvCV", 3045), ("alarmThres15MinExceededPhysConvDE", 3046), ("alarmThres15MinExceededPhysConvES", 3047), ("alarmTSUBTEMPFHT", 3048), ("alarmSignalDegradationonLinkVector", 3049), ("alarmSignalFailureonLinkVector", 3050), ("alarmThres15MinExceededOtuES", 3051), ("alarmThres15MinExceededOtuSES", 3052), ("alarmThres15MinExceededOtuUAS", 3053), ("alarmThres15MinExceededOduES", 3054), ("alarmThres15MinExceededOduSES", 3055), ("alarmThres15MinExceededOduUAS", 3056), ("alarmAlarmIndicationSignalOduTcmA", 3057), ("alarmAlarmIndicationSignalOduTcmB", 3058), ("alarmOpenConnectionIndicationOduTcmA", 3059), ("alarmOpenConnectionIndicationOduTcmB", 3060), ("alarmTraceIdentifierMismatchOduTcmA", 3061), ("alarmTraceIdentifierMismatchOduTcmB", 3062), ("alarmLockedDefectOduTcmA", 3063), ("alarmLockedDefectOduTcmB", 3064), ("alarmLossofTandemConnectionOduTcmB", 3065), ("alarmLossofTandemConnectionOduTcmA", 3066), ("alarmSignalDegradeOduTcmB", 3067), ("alarmSignalDegradeOduTcmA", 3068), ("alarmBackwardDefectIndicationOduTcmA", 3069), ("alarmBackwardDefectIndicationOduTcmB", 3070), ("alarmThres15MinExceededOduTcmAES", 3071), ("alarmThres15MinExceededOduTcmBES", 3072), ("alarmThres15MinExceededOduTcmASES", 3073), ("alarmThres15MinExceededOduTcmBSES", 3074), ("alarmThres15MinExceededOduTcmAUAS", 3075), ("alarmThres15MinExceededOduTcmBUAS", 3076), ("alarmThres15MinExceededOduTcmABbe", 3077), ("alarmThres15MinExceededOduTcmBBbe", 3078), ("alarmThres15MinExceededOtuBbe", 3079), ("alarmThres15MinExceededOduBbe", 3080), ("alarmEquipmentNotSupportedByPhysicalLayer", 3081), ("autoShutdownLaserOffDueToHighTemp", 3082), ("autoShutdownLaserOffDueToHighTxPwr", 3083), ("laserEndOfLife", 3084), ("midstageFault", 3085), ("laserBiasCurrAbnormal", 3086), ("opticalPowerTxLOS", 3087), ("farEndIpAddressUnknown", 3088), ("topologyDataCalculationInProgres", 3089), ("topologyDataInvalid", 3090), ("ntpServer1Unreachable", 3091), ("ntpServer2Unreachable", 3092), ("ntpServer3Unreachable", 3093), ("autoShutdownLaserOffDueToErrFwd", 3094), ("autoShutdown", 3095), ("autoShutdownAlS", 3096), ("autoShutdownSendingIdle", 3097), ("autoShutdownSendingAisLine", 3098), ("alarmOosManagement", 3099), ("alarmOosMaintenance", 3100), ("alarmOosDisabled", 3101), ("alarmLossOfCharSyncFromFarEnd", 3102), ("alarmLossofMultiframeHigherOrderPath", 3103), ("alarmLossofSequenceHigherOrderPath", 3104), ("alarmIndicationSignalHigherOrderPath", 3105), ("alarmLossOfPointerHigherOrderPath", 3106), ("alarmUnequippedHigherOrderPath", 3107), ("alarmPayloadMismatchHigherOrderPath", 3108), ("alarmRemoteDefectIndicationHigherOrderPath", 3109), ("alarmTerminalLoopback", 3110), ("alarmFacilityLoopback", 3111), ("alarmFacilityForcedOn", 3112), ("alarmReceiverDisabled", 3113), ("alarmTransmitterDisabledOff", 3114), ("alarmAutoShutdownLaserOffDueToErrFwd", 3115), ("alarmLaserBiasCurrAbnormal", 3116), ("alarmSwitchtoProtectionInhibited", 3117), ("alarmSwitchtoWorkingInhibited", 3118), ("alarmIndicationSignalLine", 3119), ("alarmRemoteDefectIndicationLine", 3120), ("alarmSignalDegradeLine", 3121), ("alarmLossofMultiframeLowerOrderPath", 3122), ("alarmLossofSequenceLowerOrderPath", 3123), ("alarmIndicationSignalLowerOrderPath", 3124), ("alarmLossOfPointerLowerOrderPath", 3125), ("alarmUnequippedLowerOrderPath", 3126), ("alarmRemoteDefectIndicationLowerOrderPath", 3127), ("alarmPayloadMismatchLowOrderPath", 3128), ("alarmlossOfTransmitterClockRecovery", 3129), ("alarmelasticStoreOverflowTransmitter", 3130), ("alarmthermoElectricCoolerEndOfLife", 3131), ("alarmlossOfSignalTransmitter", 3132), ("alarmattOnTransmitterFiberLowerThanMonitor", 3133), ("alarmsectionSignalFailure", 3134), ("alarmsignalDegradeHigherOrderPath", 3135), ("alarmlossOfMultiframeVCG", 3136), ("alarmlossOfSequenceVCG", 3137), ("alarmlossofAlignmentVCG", 3139), ("alarmremoved", 3140), ("alarmthres15MinExceededPhysConvCVDE", 3141), ("alarmoTDRMeasuringinProgress", 3142), ("alarmprotectionNotAvailable", 3143), ("alarmembeddedOperationsChannelFailure", 3144), ("alarmsignalDegradeSection", 3145)) + NamedValues(("alarmapdLowVoltage", 3146), ("alarmapdHighVoltage", 3147), ("alarmlinkControlProtocolFailure", 3148), ("alarmthermoElectricCoolerCurrentTooLow", 3149), ("alarmthermoElectricCoolerCurrentTooHigh", 3150), ("alarmreceiverOverloadProtection", 3151), ("alarmautoShutdownSendingAisOpu", 3152), ("alarmalarmIndicationSignalOpu", 3153), ("alarmattOnTransmitterFiberHigherThanMonitor", 3154), ("alarmOosAins", 3155), ("alarmSubModuleTempTooHigh", 3156), ("alarmAlarmIndicationSignalOduTcmC", 3157), ("alarmOpenConnectionIndicationOduTcmC", 3158), ("alarmLockedDefectOduTcmC", 3159), ("alarmLossofTandemConnectionOduTcmC", 3160), ("alarmSignalDegradeOduTcmC", 3161), ("alarmBackwardDefectIndicationOduTcmC", 3162), ("alarmIntrusionRx", 3163), ("alarmIntrusionTx", 3164), ("alarmLaserBiasCurrentNormalizedtooHigh", 3165), ("alarmThirdPartyPlug", 3166), ("loopbackError", 3167), ("traceIdentifierMismatchOtu", 3168), ("traceIdentifierMismatchOdu", 3169), ("traceIdentifierMismatchOduTcmA", 3170), ("traceIdentifierMismatchOduTcmB", 3171), ("traceIdentifierMismatchOduTcmC", 3172), ("peerConfigMismatch", 3173), ("alarmMismatch", 3174), ("alarmEquipmentNotAccepted", 3175), ("alarmEquipmentNotApproved", 3176), ("alarmEquipmentMismatch", 3177), ("alarmTemperatureTooHigh", 3178), ("alarmTemperatureTooLow", 3179), ("alarmLaserTemperatureTooLow", 3180), ("alarmLaserTemperatureTooHi", 3181), ("alarmLossOfFrameOtu", 3182), ("alarmMultiplexStructureIdentifierMismatchOPU1", 3183), ("alarmLossOfFrame", 3184), ("alarmLossOfGfpFrame", 3185), ("alarmPayloadMismatchGfp", 3186), ("alarmGfpLossOfClientSig", 3187), ("alarmMultipleFanFailure", 3188), ("alarmSingleFanFailure", 3189), ("alarmExternalLinkFailure", 3190), ("alarmLossOfCharSync", 3191), ("alarmSectionTraceMismatch", 3192), ("alarmOIPtooHigh", 3193), ("alarmOOPtooLow", 3194), ("alarmRxLineAttenuationOoR", 3195), ("alarmTxLineAttenuationOoR", 3196), ("alarmOIPtooLow", 3197), ("alarmOOPtooHigh", 3198), ("alarmOOPOoR", 3199), ("alarmIfModTempOoR", 3200), ("alarmLaserTempOoR", 3201), ("alarmLossofOOP", 3202), ("alarmLossofSignalonTxport", 3203), ("alarmPlannedModuleMismatch", 3228), ("alarmRxLossofClock", 3229), ("alarmOtuFecLossofFrame", 3230), ("alarmLineAIS", 3232), ("alarmLineANotAvailable", 3233), ("alarmLineBNotAvailable", 3234), ("alarmLineRDI", 3235), ("alarmLossofOIP", 3236), ("alarmNoFeedback", 3238), ("alarmRxSignalOverload", 3239), ("alarmPathAIS", 3242), ("alarmPathPLM", 3243), ("alarmPathRDI", 3244), ("alarmPathSignalDegrade", 3245), ("alarmPathUNEQ", 3246), ("alarmPlannedModuleMissing", 3247), ("alarmProtectionGroupFailure", 3248), ("alarmSectionSignalDegrade", 3249), ("alarmSectionTraceInconsistency1", 3250), ("alarmSectionTraceMismatch1", 3251), ("alarmSubModuleTempOoR", 3252), ("alarmSwitchPositionError", 3253), ("alarmExternalInput1", 3254), ("alarmExternalInput10", 3255), ("alarmExternalInput11", 3256), ("alarmExternalInput12", 3257), ("alarmExternalInput2", 3258), ("alarmExternalInput3", 3259), ("alarmExternalInput4", 3260), ("alarmExternalInput5", 3261), ("alarmExternalInput6", 3262), ("alarmExternalInput7", 3263), ("alarmExternalInput8", 3264), ("alarmExternalInput9", 3265), ("alarmSectionCV15Minutes", 3266), ("alarmPathCV15Minutes", 3267), ("alarmSectionCV24Hours", 3268), ("alarmPathCV24Hours", 3269), ("alarmSectionES15Minutes", 3270), ("alarmPathES15Minutes", 3271), ("alarmPathES24Hours", 3272), ("alarmHighCurrentThresholdCrossed", 3273), ("alarmHighestCurrentThresholdCrossed", 3274), ("alarmHighestOIPThresholdCrossed", 3275), ("alarmHighestOOPThresholdCrossed", 3276), ("alarmHighestTemperatureThresholdCrossed", 3277), ("alarmHighestVoltageThresholdCrossed", 3278), ("alarmHighOIPThresholdCrossed", 3279), ("alarmHighOOPThresholdCrossed", 3280), ("alarmHighTemperatureThresholdCrossed", 3281), ("alarmHighVoltageThresholdCrossed", 3282), ("alarmLowCurrentThresholdCrossed", 3283), ("alarmLowestCurrentThresholdCrossed", 3284), ("alarmLowestOIPThresholdCrossed", 3285), ("alarmLowestOOPThresholdCrossed", 3286), ("alarmLowestTemperatureThresholdCrossed", 3287), ("alarmLowestVoltageThresholdCrossed", 3288), ("alarmLowOIPThresholdCrossed", 3289), ("alarmLowOOPThresholdCrossed", 3290), ("alarmLowTemperatureThresholdCrossed", 3291), ("alarmLowVoltageThresholdCrossed", 3292), ("alarmSectionSEFS15Minutes", 3293), ("alarmSectionSEFS24Hours", 3294), ("alarmSectionSES15Minutes", 3295), ("alarmPathSES15Minutes", 3296), ("alarmPathSES24Hours", 3297), ("alarmPathUAS15Minutes", 3298), ("alarmPathUAS24Hours", 3299), ("alarmFanPowerSupply1Failure", 3300), ("alarmFanPowerSupply2Failure", 3301), ("alarmPowerSupplyFailure", 3302), ("alarmGFPLOF", 3303), ("alarmGFPPLM", 3304), ("alarmGFPLossofClientSignal", 3305), ("alarmGFPLossofCharacterSync", 3306), ("alarmGFPTClientSignalFailure", 3307), ("alarmRSTIM", 3308), ("alarmAIS", 3309), ("alarmLinkDown", 3310), ("alarmAUAIS", 3311), ("alarmAULOP", 3312), ("alarmHPRDI", 3313), ("alarmHPPLM", 3314), ("alarmHPUNEQ", 3315), ("alarmTUAIS", 3316), ("alarmTULOP", 3317), ("alarmLPRDI", 3318), ("alarmLPPLM", 3319), ("alarmLPUNEQ", 3320), ("alarmTULOM", 3321), ("alarmMSAIS", 3322), ("alarmMSRDI", 3323), ("alarmMSSD", 3324), ("alarmPowerFail", 3325), ("alarmInternalHWFailure", 3326), ("fwpMismatchDownloadServiceAffecting", 3327), ("fwpMismatchDownloadNotServiceAffecting", 3328), ("transmitterDisabledEpc", 3329), ("linefailure", 3330), ("thres15MinExceededFecCE", 3331), ("thres15MinExceededFecUBE", 3332), ("thres15MinExceededFecES", 3333), ("thres15MinExceededFecSES", 3334), ("thres15MinExceededMuxES", 3335), ("thres15MinExceededMuxSES", 3336), ("thres15MinExceededGfpCHEC", 3337), ("thres15MinExceededGfpTHEC", 3338), ("thres15MinExceededGfpTHecDisc", 3339), ("thres15MinExceededGfpTsuperblockDisc", 3340), ("databaseMismatch", 3341), ("databaseNcuMismatch", 3342), ("serverSignalFailureSectionRS", 3343), ("databaseVersionMismatch", 3344), ("dcnCommunicationFail", 3345), ("clientFailForwarding", 3346), ("virtualChannelAis", 3347), ("serverSignalFailureVf", 3348), ("signalFailureOnLink", 3349), ("serverSignalFailureGfp", 3350), ("serverSignalFailurePath", 3351), ("gainTiltNotSettable", 3352), ("txPowerLimited", 3353), ("equalizationProgress", 3354), ("uPortFailure", 3355), ("autoShutdownBlock", 3356), ("serverSignalFailTx", 3357), ("pLMVF", 3358), ("voaControlFail", 3359), ("provisioningLocked", 3360), ("mansw", 3361), ("wtrTimerRunning", 3362), ("pcsSignalDegrade", 3363), ("alarmInputTIF", 3364), ("thres15MinExceededSonetSectES", 3365), ("thres15MinExceededSonetSectSES", 3366), ("thres15MinExceededSonetSectSEFS", 3367), ("thres15MinExceededSonetSectCV", 3368), ("thres15MinExceededSonetLineES", 3369), ("thres15MinExceededSonetLineSES", 3370), ("thres15MinExceededSonetLineCV", 3371), ("thres15MinExceededSonetLineUAS", 3372), ("thres15MinExceededOduTcmAES", 3373), ("thres15MinExceededOduTcmASES", 3374), ("thres15MinExceededOduTcmAUAS", 3375), ("thres15MinExceededOduTcmABBE", 3376), ("thres15MinExceededOduTcmBES", 3377), ("thres15MinExceededOduTcmBSES", 3378), ("thres15MinExceededOduTcmBUAS", 3379), ("thres15MinExceededOduTcmBBBE", 3380), ("thres15MinExceededOduTcmCES", 3381), ("thres15MinExceededOduTcmCSES", 3382), ("thres15MinExceededOduTcmCUAS", 3383), ("thres15MinExceededOduTcmCBBE", 3384), ("thres15MinExceededOtuES", 3385), ("thres15MinExceededOtuSES", 3386), ("thres15MinExceededOtuUAS", 3387), ("thres15MinExceededOtuBBE", 3388), ("thres15MinExceededOduES", 3389), ("thres15MinExceededOduSES", 3390), ("thres15MinExceededOduUAS", 3391), ("thres15MinExceededOduBBE", 3392), ("thresOptPowerCtrlFailureLow", 3393), ("thresOptPowerCtrlFailureHigh", 3394), ("dcnServerSignalFailure", 3395), ("maxPowerConsEquipModulesToHigh", 3396), ("maxPowerConsProvModulesToHigh", 3397), ("equipmentMismatchAllow", 3398), ("oosPrePostSig", 3399), ("linkFailureNOSReceiveState", 3400), ("linkFailureNOSTransmitState", 3401), ("linkFailureNOSReceiveStateEgress", 3402), ("linkFailureNOSTransmitStateEgress", 3403), ("linkFailureCount15", 3404), ("linkFailureCount24", 3405), ("lossOfSynchronizationCount15", 3406), ("lossOfSynchronizationCount24", 3407), ("lossOfSignalCount15", 3408), ("lossOfSignalCount24", 3409), ("gfpExtHeaderMismatch", 3410), ("gfpUserPayloadMismatch", 3411), ("linkStateMismatch", 3412), ("connectionCableFail", 3413), ("temperatureProblemMinor", 3414), ("wrongLaserSafetyBusCabling", 3415), ("multiplexStructureIdentifierMismatch", 3416), ("lossOfFrameAndMultiframe", 3417), ("temperatureProblemMajor", 3418), ("onboardFlashFailure", 3419), ("noLightDetected", 3420), ("internalTraceIdentifierMismatch", 3421), ("channelMismatch", 3422), ("preemphasisSectionFail", 3423), ("degradedSignalDeg", 3424), ("ssfProtection", 3425), ("syncFailure", 3426), ("moduleTypeMismatch", 3427), ("boosterStageTransmitFail", 3428)) + NamedValues(("preamplifierStageTransmitFail", 3429), ("boosterStageReceiveFail", 3430), ("oscTransmitDegrade", 3431), ("pump1TransmitDegrade", 3432), ("pump1TransmitFail", 3433), ("pump2TransmitDegrade", 3434), ("pump2TransmitFail", 3435), ("pump3TransmitDegrade", 3436), ("pump3TransmitFail", 3437), ("pump4TransmitDegrade", 3438), ("pump4TransmitFail", 3439), ("slotLSBMismatch", 3440), ("gfpAlarmIndicationSignal", 3441), ("gfpClientSignalFailLossOfCharacterSynchronisation", 3442), ("gfpClientSignalFailLossOfSignal", 3443), ("gfpNoFramesReceived", 3444), ("gfpOutOfSequence", 3445), ("gfpUnexpectedChannelID", 3446), ("gfpDataRateMismatch", 3447), ("degreeOfPolarization", 3448), ("inputPowerLow", 3449), ("overPower1M", 3450), ("outputPowerLow", 3451), ("subBandLossOfSignal", 3452), ("lowCFSUFlow", 3453), ("measurementFailed", 3454), ("clientModeMismatch", 3455), ("moduleProblem", 3456), ("powerOutOfRange", 3457), ("functionNotSupported", 3458), ("lossOfPRBSLock", 3459), ("filterExpired", 3460), ("opticalPreamplifierReceiveFailure", 3461), ("shelfMissing", 3462), ("dopFail", 3463), ("tdcControlLoopLimit", 3464), ("pmdFail", 3465), ("pumpDegrade", 3466), ("pumpFail", 3467), ("wrongShelfType", 3468), ("lossOfClockLock", 3469), ("rAMFull", 3470), ("mIBFullMinor", 3471), ("mIBFullMajor", 3472), ("compactFlashFull", 3473), ("lossOfTimeReference", 3474), ("fanFilterMissing", 3475), ("overflow", 3476), ("lnkDown", 3477), ("duplicatedDHCPServer", 3478), ("tl1NotificationQueueOverflow", 3479), ("vpnConnectionFail", 3480), ("iLANFail", 3481), ("ramanGainDegraded", 3482), ("ramanGainFail", 3483), ("subsysMissing", 3484), ("pwrControlSuspicious", 3485), ("pwrEqualizationFail", 3486), ("pwrLossSuspicious", 3487), ("preemphasisFail", 3488), ("clientSignalFail", 3489), ("forwardDefectIndication", 3490), ("remoteDefectIndication", 3491), ("eEPROMFail", 3492), ("thresholdMaxInputSpanLoss15", 3493), ("thresholdMaxInputSpanLoss24", 3494), ("compactFlashInsufficientSize", 3495), ("controllerInterfaceFail", 3496), ("lOpen", 3497), ("compactFlashMissing", 3498), ("pLLUn", 3499), ("oosPrePostSigInSetUpProcess", 3500), ("oosPrePostSigInTearDownProcess", 3501), ("cpTunnelModificationInProgress", 3502), ("capabilityLevelMismatch", 3503), ("oosPrePostSigEstablishFailed", 3504), ("oosPrePostSigAfterPrecompFailed", 3505), ("cpTunnelEstablishFailed", 3506), ("cpTunnelPrecompFailed", 3507), ("localFault", 3508), ("oscPwrTooHigh", 3509), ("oscPwrTooLow", 3510), ("aseTableBuild", 3511), ("aseTableNotAvailable", 3512), ("automaticPowerReduction", 3513), ("highBer", 3514), ("pumpLaser1TempTooHigh", 3515), ("pumpLaser1TempTooLow", 3516), ("pumpLaser2TempTooHigh", 3517), ("pumpLaser2TempTooLow", 3518), ("ospfIpServerNotAvailable", 3519), ("lossOsc", 3520), ("brPwrRxTooHigh", 3521), ("aseTableGenFailSignalInput", 3522), ("aseTableGenFailOscMissing", 3523), ("aseTableGenFailHighBackreflection", 3524), ("ramanPumpPwrTooHigh", 3525), ("ramanPumpPwrTooLow", 3526), ("autoPowerShutdown", 3527), ("aseTableGenFailLow", 3528), ("aseLow", 3529), ("configurableOpticalOutputPowerTransmittedTooHigh", 3530), ("configurableOpticalOutputPowerTransmittedTooLow", 3531), ("lossAttProgress", 3532), ("aseTableGenProcess", 3533), ("faultOnOpm", 3534), ("optSignalFailure", 3535), ("opmAbnormalCondition", 3536), ("hwOprReachedHT", 3537), ("disabledChannelPowerTooHigh", 3538), ("lossOfSignalCPort", 3539), ("serverSignalFailureODU", 3540), ("signalFailureOPU", 3541), ("serverSignalReduced", 3543), ("dispersionCompensationTooLow", 3544), ("dispersionCompensationTooHigh", 3545), ("farEndCommFailure", 3546), ("alarmTurnupCondition", 3547), ("alarmTurnupFailed", 3548), ("alarmDispertionTunningCondition", 3549), ("linkAttenuationTooLow", 3550), ("linkAttenuationTooHigh", 3551), ("entityOutageIndication", 3552), ("fiberConnectionMissing", 3553), ("farEndInformationMismatch", 3554), ("automaticPowerReductionForEyeSafety", 3555), ("lossOfPilotSignal", 3556), ("pumpLaser3TempTooHigh", 3557), ("pumpLaser3TempTooLow", 3558), ("pilotReceiveLevelHigh", 3559), ("autoShutdownStbyProtection", 3560), ("databaseFailure", 3561), ("latencyTooHigh", 3562), ("latencyTooLow", 3563), ("thres15MinExceededFecBERCE", 3564), ("alarmMepNotPresentL2", 3565), ("alarmPriVidNotEqualExtVidL2", 3566), ("alarmInputTIF1", 3567), ("alarmInputTIF2", 3568), ("alarmInputTIF3", 3569), ("alarmInputTIF4", 3570), ("alarmInputTIF5", 3571), ("alarmInputTIF6", 3572), ("alarmInputTIF7", 3573), ("alarmInputTIF8", 3574), ("alarmInputTIF9", 3575), ("alarmInputTIF10", 3576), ("alarmInputTIF11", 3577), ("alarmInputTIF12", 3578), ("alarmInputTIF13", 3579), ("alarmInputTIF14", 3580), ("alarmInputTIF15", 3581), ("alarmInputTIF16", 3582), ("alarmOutputTIF1", 3583), ("alarmOutputTIF2", 3584), ("alarmOutputTIF3", 3585), ("alarmOutputTIF4", 3586), ("schedEqlzNeedsNTP", 3587), ("autoShutdownODU-CLK", 3588), ("alarmNTPnotSynchronized", 3589), ("tamperEvent", 3590), ("cryptoOfficerPWmissing", 3591), ("alarmCRY-PWcannotBeEntered", 3592), ("authPWmissing", 3593), ("maxKeyexchDegrade", 3594), ("maxKeyExchFail", 3595), ("encryptionSwitchedOff", 3596), ("keyExchangedForced", 3597), ("routeTripDelayTooHigh", 3598), ("routeTripDelayTooLow", 3599), ("airDustFilterClogged", 3600), ("alarmOSC-Opt-CTRL-Fail-High", 3601), ("alarmOSC-Opt-CTRL-Fail-Low", 3602), ("amplifierAbnormal", 3603), ("alarmASE-tab-gen-failed-PILOT", 3604), ("laser-4-TempTooHigh", 3605), ("laser-4-TempTooLow", 3606), ("alarmFWD-ASE-PIL-Force-Fail", 3607), ("force-FWD-ASE-Pilot-ON", 3608), ("inputVoltageFailure-1", 3609), ("inputVoltageFailure-2", 3610), ("xfpDecisionThresSetFailed", 3611), ("thres15MinExceededPhysConvSE", 3612), ("thres15MinExceededPhysConvESTX", 3613), ("thres15MinExceededPhysConvCVTX", 3614), ("thres15MinExceededPhysConvSETX", 3615), ("prbsRcvActivated", 3616), ("prbsTrmtActivated", 3617), ("prbsLossOfSeqSynch", 3618), ("clientSignalFailOpu", 3619), ("lossOfTestSeqSynchOpu", 3620), ("autoShutdownOpuClientSignalFail", 3621), ("localOscTemperatureTooLow", 3622), ("localOscTemperatureTooHigh", 3623), ("differentialGroupDelayTooLow", 3624), ("differentialGroupDelayTooHigh", 3625), ("chromaticDispersionTooLow", 3626), ("chromaticDispersionTooHigh", 3627), ("signalToNoiseRatioTooLow", 3628), ("localOscLevelAbnormal", 3629), ("carrierFreqOffsetTooLow", 3630), ("carrierFreqOffsetTooHigh", 3631), ("lossOfLane", 3632), ("alarmSfCfmLevel0L2", 3633), ("alarmSfCfmLevel1L2", 3634), ("alarmSfCfmLevel2L2", 3635), ("alarmSfCfmLevel3L2", 3636), ("alarmSfCfmLevel4L2", 3637), ("alarmSfCfmLevel5L2", 3638), ("alarmSfCfmLevel6L2", 3639), ("alarmSfCfmLevel7L2", 3640), ("alarmSwitchtoWorkingInhibitedL2", 3641), ("cfmRemoteDefectIndication", 3642), ("cfmCcmMacStatus", 3643), ("cfmCcmError", 3644), ("cfmCcmLost", 3645), ("cfmCcmXConn", 3646), ("messageLossSpeq", 3647), ("oscFiberMissingSpeq", 3648), ("optLowSpeq", 3649), ("ppcOutOfRangeSpeq", 3650), ("gainTooHighSpeq", 3651), ("gainTooLowSpeq", 3652), ("gainAdoptFailedSpeq", 3653), ("alarmSwitchtoProtectionInhibitedL2", 3654), ("laserOnDelay", 3655), ("serverSignalFailureODUcrs", 3656), ("autoShutdownSendingOciOdu", 3657), ("oduTribMsiMismatch", 3658), ("meaChannelMismatch", 3659), ("alarmAutoShutdownTxRxLasersDueToHighTemp", 3660), ("alarmEncryptionModuleFwpUpdateEnabled", 3661), ("alarmEncryptionModuleSelfTestStarted", 3662), ("alarmEncryptionModuleSelfTestFail", 3663), ("alarmEncryptionModuleSelfTestFailCritical", 3664), ("alarmEncryptionPortEncryptionSwitchOffEnabled", 3665), ("encryptionPortKeyInitExchgMissed", 3666), ("eqlzAdjust", 3667), ("hwDegrade", 3668), ("hwInitializing", 3669), ("ampFailure", 3670), ("autoAmpShutdown", 3671), ("fiberConnLos", 3672), ("fiberConnOptFault", 3673), ("fiberConnInvalid", 3674), ("fiberConnMismatch", 3675), ("fiberConnCommError", 3676), ("fiberConnProtocolFailure", 3677), ("fiberConnDataFailure", 3678), ("fiberAttenuationHigh", 3679), ("fiberConnInvalidTx", 3680), ("fiberConnMismatchTx", 3681), ("fiberAttenuationHighTx", 3682), ("switchToDuplexInhibited", 3683), ("meaSwRevision", 3684)) + NamedValues(("dbReplicationIncompleted", 3685), ("backupNotResponding", 3686), ("backupForcedToHalt", 3687), ("duplexLinkFailure", 3688), ("provPayloadMismatch", 3689), ("autoShutdownOpuFlxCSF", 3690), ("ogicalLanesSkewTooHigh", 3691), ("fiberAttenuationCond", 3692), ("advaplct", 3850), ("advatlct", 3851), ("advaplcr", 3852), ("advatlcr", 3853), ("advareil", 3854), ("advaexcl", 3855), ("advadegl", 3856), ("advatims", 3857), ("advaaisp", 3858), ("advalopp", 3859), ("advatimp", 3860), ("advauneqp", 3861), ("advaplmp", 3862), ("advalomp", 3863), ("advaexcp", 3864), ("advadegp", 3865), ("advareip", 3866), ("advarfip", 3867), ("lcascrc", 3868), ("advasqm", 3869), ("gidmismatch", 3870), ("advamnd", 3871), ("advaaisv", 3872), ("advalopv", 3873), ("advatimv", 3874), ("advauneqv", 3875), ("advaplmv", 3876), ("advaexcv", 3877), ("advadegv", 3878), ("advareiv", 3879), ("advarfiv", 3880), ("rmtinitlpbk", 3881), ("advarai", 3882), ("advarei", 3883), ("advaidle", 3884), ("advacsf", 3885), ("gfplfd", 3886), ("gfpuplmismatch", 3887), ("gfpexhmismatch", 3888), ("vcatlom", 3889), ("fragileecc", 3890), ("pwrlofs", 3891), ("pwlof", 3892), ("pwlatefrm", 3893), ("pwjbovrn", 3894), ("unresolvedsatop", 3895), ("hwcfginconsistent", 3896), ("advaais", 3900), ("allsyncref", 3901), ("autonegunknown", 3902), ("avghldovrfrqnotrdy", 3903), ("bckupntpsvrFailed", 3904), ("bwexceedednegspeed", 3905), ("crossconnectccm", 3906), ("ctneqpt", 3907), ("efmfail", 3908), ("efmrce", 3909), ("efmrld", 3910), ("efmrls", 3911), ("erroneousccm", 3912), ("esmcfail", 3913), ("forced", 3914), ("freqoff", 3915), ("frngsync", 3916), ("fstsync", 3917), ("hldovrsync", 3918), ("ipaddrconflict", 3919), ("lcpfail", 3920), ("lcploopback", 3921), ("lnkdeactivated", 3922), ("lnkdn", 3923), ("lnkdownautonegfailed", 3924), ("lnkdowncablefault", 3925), ("lnkdowncableremoved", 3926), ("lnkdownlpbkfault", 3927), ("lnkdownmasterslavecfg", 3928), ("lnkdownunisolated", 3929), ("lockout", 3930), ("advalof", 3931), ("advalos", 3932), ("losloc", 3933), ("primntpsvrFailed", 3934), ("qlinvalid", 3935), ("qlmismatch", 3936), ("qlsqlch", 3937), ("advarfi", 3938), ("rmtefmlpbkfail", 3939), ("rxjabber", 3940), ("shaperbtd", 3941), ("somemacstatus", 3942), ("somerdi", 3943), ("someremotemepccm", 3944), ("syncnotready", 3945), ("syncref", 3946), ("syncreffrc", 3947), ("syncreflck", 3948), ("syncrefman", 3949), ("syncrefwtr", 3950), ("dyinggasp", 3951), ("eqptflt", 3952), ("eqptremoved", 3953), ("intctneqpt", 3954), ("mismatch", 3955), ("overtemp", 3956), ("overvoltage", 3957), ("pwrnoinputunitfault", 3958), ("advasfpinserted", 3959), ("advasfpmismatch", 3960), ("advasfpnonqualified", 3961), ("advasfpremoved", 3962), ("advasfptxfault", 3963), ("snmpdghostresourcesbusy", 3964), ("snmpdghostunresolved", 3965), ("undertemp", 3966), ("undervoltage", 3967), ("dbftfail", 3968), ("dbftip", 3969), ("dbdowngradeip", 3970), ("genfilexferip", 3971), ("genoperip", 3972), ("swdlactip", 3973), ("swdlftip", 3974), ("swdlinstip", 3975), ("swdlvalip", 3976), ("testalarm", 3977), ("advaxfptxfault", 3978), ("advaxfpmismatch", 3979), ("advaxfpnonqualified", 3980), ("advaxfpremoved", 3981), ("acoopr", 3982), ("trafficfail", 3983), ("advaclockfail", 3984), ("rdncyswvermismatch", 3985), ("rdncyoutofsync", 3986), ("rdncylockout", 3987), ("rdncymaintenance", 3988), ("lagmbrfail", 3989), ("swdlproip", 3990), ("dbproip", 3991), ("swdlrvtip", 3992), ("dbcorruption", 3993), ("bpmismatch", 3994), ("vcgfail", 3995), ("advaloa", 3996), ("sqnc", 3997), ("advaaisl", 3998), ("advarfil", 3999), ("lossAtApplicationInterface", 4000), ("underCurrent", 4001), ("sCCommunicationFailure", 4500), ("switchFabricWithoutProtection", 4501), ("switchFabricNotEnough", 4502), ("lossOfLaneAlignment", 4503), ("thresholdCrossed", 4504), ("neNameMismatch", 4505), ("apcdFail", 4506), ("gainTiltProb", 4507), ("lossOfOPUMultiframeIndicator", 4508), ("failureOfProtocolProvisioningMismatch", 4509), ("failureOfProtocolNoResponse", 4510), ("lossTimingInput", 4511), ("thresholdMaxDM15", 4512), ("thresholdMaxDM24", 4513), ("protectionRoleMismatch", 4514), ("gfpClientSignalFail", 4515), ("apsVersionMismatch", 4516), ("fanInsuf", 4517), ("opuClientSignalFail", 4518), ("passwordExpiresSoon", 4519), ("maximumNumberOfUnsuccessfulLogins", 4520), ("poolBaseMismatch", 4521), ("poolPortBaseMismatch", 4522), ("fanMism", 4523), ("applicationCodeMismatch", 4524), ("cardVariantMismatch", 4525), ("mateCardClockFailure", 4526), ("iLANRingBroken", 4527), ("sLANRingBroken", 4528), ("thresholdFCSErrorsRx15", 4529), ("thresholdFCSErrorsRx24", 4530), ("thresholdFCSErrorsTx15", 4531), ("thresholdFCSErrorsTx24", 4532), ("testFailed", 4533), ("switchingFabricLinkCommunicationFailure", 4534), ("aPSLinkCommunicationFailure", 4535), ("cardClockFailure", 4536), ("powerModuleFailure", 4537), ("recurringLicenseExpired", 4538), ("transmitDegradeAdd", 4539), ("transmitDegradeDrop", 4540), ("transmitFailAdd", 4541), ("transmitFailDrop", 4542), ("poolAddressError", 4543), ("recoverMode", 4544), ("channelLicenseNotAvailable", 4545), ("pumpsManuallyDisabled", 4546), ("neConfigurationBackupFailed", 4547), ("compactFlashFailure0", 4548), ("compactFlashFailure1", 4549), ("compactFlashInsufficientSize0", 4550), ("compactFlashInsufficientSize1", 4551), ("fileSynchronizationFail", 4552), ("linkManuallyShutDown", 4553), ("bitRateError", 4554), ("backPlaneLossOfSignal", 4555), ("cpaMismatch", 4556), ("backPlaneLossOfSignal1", 4557), ("backPlaneLossOfSignal2", 4558), ("backPlaneLossOfSignal3", 4559), ("backPlaneLossOfSignal4", 4560), ("thresholdBbe15IngressNearEnd", 4800), ("thresholdBbe15IngressFarEnd", 4801), ("thresholdBbe15EgressNearEnd", 4802), ("thresholdBbe15EgressFarEnd", 4803), ("thresholdBbe24IngressNearEnd", 4804), ("thresholdBbe24IngressFarEnd", 4805), ("thresholdBbe24EgressNearEnd", 4806), ("thresholdBbe24EgressFarEnd", 4807), ("thresholdEs15IngressNearEnd", 4808), ("thresholdEs15IngressFarEnd", 4809), ("thresholdEs15EgressNearEnd", 4810), ("thresholdEs15EgressFarEnd", 4811), ("thresholdEs24IngressNearEnd", 4812), ("thresholdEs24IngressFarEnd", 4813), ("thresholdEs24EgressNearEnd", 4814), ("thresholdEs24EgressFarEnd", 4815), ("thresholdSes15IngressNearEnd", 4816), ("thresholdSes15IngressFarEnd", 4817), ("thresholdSes15EgressNearEnd", 4818), ("thresholdSes15EgressFarEnd", 4819), ("thresholdSes24IngressNearEnd", 4820), ("thresholdSes24IngressFarEnd", 4821), ("thresholdSes24EgressNearEnd", 4822), ("thresholdSes24EgressFarEnd", 4823), ("thresholdUas15IngressNearEnd", 4824), ("thresholdUas15IngressFarEnd", 4825), ("thresholdUas15EgressNearEnd", 4826), ("thresholdUas15EgressFarEnd", 4827), ("thresholdUas24IngressNearEnd", 4828), ("thresholdUas24IngressFarEnd", 4829), ("thresholdUas24EgressNearEnd", 4830), ("thresholdUas24EgressFarEnd", 4831), ("sflcf", 4832), ("mibFileMismatch", 4833), ("lossOfStationTimingInput", 4834), ("bdiEgress", 4835), ("signalDegradedEgress", 4836)) + NamedValues(("lockedDefectEgress", 4837), ("openConnectionIndicationEgress", 4838), ("lossOfTandemConnectionEgress", 4839), ("failureOfProtocolProvisioningMismatchEgress", 4840), ("failureOfProtocolNoResponseEgress", 4841), ("alarmIndicationSig", 4842), ("ethLossOfPointer", 4843), ("pathLabelMismatch", 4844), ("lossOfCodeGroupDelineation", 4845), ("sc1plus1SyncFailure", 4846), ("debugInterfaceActive", 4847), ("ceLAGInterfaceFailureNotif", 5510), ("ceLAGInterfacePROTNANotif", 5511), ("ceMACLOSNotif", 5512), ("ceMACLOSYNCNotif", 5513), ("ceMACTRDIENotif", 5514), ("ceMACANFNotif", 5515), ("ceMACSFNotif", 5516), ("ceMACSDNotif", 5517), ("ceMACPortLinkFlappingNotif", 5518), ("ceMACPortDyingGaspNotif", 5519), ("ceMSTGlobalErrTrap", 5520), ("ceMSTUnExpMSTPPDUReceivedTrap", 5521), ("ceRSTGlobalErrTrap", 5522), ("ceMIEcfmdot1agRDICCMNotif", 5523), ("ceMIEcfmdot1agMACstatusNotif", 5524), ("ceMIEcfmdot1agRemoteMepCCMNotif", 5525), ("ceMIEcfmdot1agErrorCCMNotif", 5526), ("ceMIEcfmdot1agXconCCMNotif", 5527), ("ceMIEcfmY1731AISNotif", 5528), ("ceEqFreeRunningSyncModeNotif", 5529), ("ceEqHoldOverSyncModeNotif", 5530), ("ceEqMEANotif", 5531), ("ceEqMEAHWVMNotif", 5532), ("ceEqPROTNANotif", 5533), ("ceEqPowerFeedANotif", 5534), ("ceEqPowerFeedBNotif", 5535), ("ceEqReplUnitMissingNotif", 5536), ("ceEqReplUnitDegradeNotif", 5537), ("ceEqReplUnitFailedNotif", 5538), ("ceEqSWDownLoadFailureNotif", 5539), ("ceEqThermalNotif", 5540), ("ceEnvNotif", 5541), ("ceSntpPrimarySNTPServerUnreachable", 5542), ("ceSntpSecondarySNTPServerUnreachable", 5543), ("ceElpsProtectionTypeMismatchNotif", 5544), ("ceElpsConfigurationMismatchNotif", 5545), ("ceElpsLackOfResponseNotif", 5546), ("ceElpsProtectionNotAvailableNotif", 5547), ("ceElpsProtectionGroupFailedNotif", 5548), ("ceElpsFailureOfProtocolNotif", 5549), ("ceSyncERefFailureNotif", 5550), ("ceErpsProvisioningMismatchNotif", 5551), ("ceErpsFailureOfProtectionNotif", 5552), ("ceErpsAPSMNotReceivedNotif", 5553), ("ceErpsProtectedVlanFailureNotif", 5554), ("ceErpsRingProtectionNotAvailNotif", 5555), ("ceErpsVlanProtectionNotAvailNotif", 5556), ("ceExtStatusNotif", 5557), ("conv2Synth", 6000), ("agc", 6001), ("acgPrealarm", 6002), ("ais10Inserted", 6003), ("ais11Inserted", 6004), ("ais12Inserted", 6005), ("ais13Inserted", 6006), ("ais14Inserted", 6007), ("ais15Inserted", 6008), ("ais16Inserted", 6009), ("ais1Inserted", 6010), ("ais2Inserted", 6011), ("ais3Inserted", 6012), ("ais4Inserted", 6013), ("ais5Inserted", 6014), ("ais6Inserted", 6015), ("ais7Inserted", 6016), ("ais8Inserted", 6017), ("ais9Inserted", 6018), ("aisInsertedOnAllTribs", 6019), ("aisInsertedUserSide", 6020), ("alignBankStatus", 6021), ("allChannelsInService", 6022), ("atpc", 6023), ("b0AlarmDem", 6024), ("b0AlarmInterfaceUnit", 6025), ("b0AlarmTrib1", 6026), ("b0AlarmTrib2", 6027), ("b0AlarmTrib3", 6028), ("b0AlarmTrib4", 6029), ("b1SD", 6030), ("b2SD", 6031), ("backplaneEepromFailure", 6032), ("bypassCardFailure", 6033), ("ch1", 6034), ("ch2", 6035), ("channelForced", 6036), ("channelForcedViaExtSwitch", 6037), ("channelOnStandby", 6038), ("ckSyncDem", 6039), ("ckSyncInterfaceUnit", 6040), ("ckSyncModule", 6041), ("ckSyncTrib1", 6042), ("ckSyncTrib2", 6043), ("ckSyncTrib3", 6044), ("ckSyncTrib4", 6045), ("ckSyncTribOcc", 6046), ("coChannelXpic", 6047), ("cpuAlarm", 6048), ("dChannelDropLossOfAlignment", 6049), ("dChannelInsertionLossOfAlignment", 6050), ("dataExpCableFault", 6051), ("dataExpCableMissing", 6052), ("dem1SyncSourceOn", 6053), ("dem2SyncSourceOn", 6054), ("demCardFailure", 6055), ("demStandbyOccSyncSourceOn", 6056), ("demSideFail", 6057), ("demSwitch", 6058), ("demSyncLos", 6059), ("demSyncOn", 6060), ("demSyncSourceOn", 6061), ("divCardFailure", 6062), ("downloadStatus", 6063), ("dataTransitionMissingDccm", 6064), ("dataTransitionMissingF1", 6065), ("dataTransitionMissingK11", 6066), ("dataTransitionMissingK12", 6067), ("dataTransitionMissingK4", 6068), ("dataTransitionMissingK7", 6069), ("eepromFailure2", 6070), ("ew", 6072), ("externalAlarmInput", 6073), ("externalSyncSource1On", 6074), ("externalSyncSource2On", 6075), ("externalSyncSourceEnabled", 6076), ("externalSyncSourceNotPresent", 6077), ("f1Los", 6078), ("fanAlarm", 6079), ("fan1Alarm", 6080), ("fan2Alarm", 6081), ("fan1Unit", 6082), ("fan2Unit", 6083), ("farEndBlockError", 6084), ("farEndRemoteFailure", 6085), ("frequencyPlan16ComplianceTestAlarm", 6086), ("frequencyPlan2ComplianceTestAlarm", 6087), ("frequencyPlan4ComplianceTestAlarm", 6088), ("frequencyPlan8ComplianceTestAlarm", 6089), ("hber", 6090), ("heaterFail1", 6091), ("heaterFail2", 6092), ("highEarlyWarning", 6093), ("highFastBer", 6094), ("hitlessSwitchLossOfAlignment", 6095), ("hopTraceIdMismatch", 6096), ("inputDataDem", 6097), ("inputDataTrib1", 6098), ("inputDataTrib2", 6099), ("inputDataTrib3", 6100), ("inputDataTribOcc", 6101), ("iduBoardDemodParityAlarm", 6102), ("iduBoardLaserTxFail", 6103), ("iduBoardModulatorFpgaKo", 6104), ("iduBoardModulatorParityAlarm", 6105), ("iduBoardMtiSdhLocal", 6106), ("iduBoardMtiSdhRx", 6107), ("iduBoardOpticalTxRxAgeing", 6108), ("iduBoardSdhTribRxPllLock", 6109), ("iduBoardSdhTribTxPllLock", 6110), ("iduHardwareMismatch", 6111), ("iduOduIfFskLof", 6112), ("interfaceFailure", 6113), ("iduOduIfCable", 6114), ("iduOduIfLosRx", 6115), ("iduSoftwareMismatch", 6116), ("ifBoard", 6117), ("ifDemAlarm", 6118), ("incomingAis2", 6119), ("internalCardFailure", 6120), ("k5LosSide1", 6121), ("k5LosSide2", 6122), ("k5LosSide3", 6123), ("k5LosSide4", 6124), ("k5LosSide5", 6125), ("k5LosSide6", 6126), ("k5LosSide7", 6127), ("k6LosSide1", 6128), ("k6LosSide2", 6129), ("k6LosSide3", 6130), ("k6LosSide4", 6131), ("k6LosSide5", 6132), ("k6LosSide6", 6133), ("k6LosSide7", 6134), ("k7LosSide2", 6135), ("k7LosSide3", 6136), ("k7LosSide4", 6137), ("k7LosSide5", 6138), ("k7LosSide6", 6139), ("k7LosSide7", 6140), ("k7LosSide8", 6141), ("k7LosSideStdby", 6142), ("k8LosSide2", 6143), ("k8LosSide3", 6144), ("k8LosSide4", 6145), ("k8LosSide5", 6146), ("k8LosSide6", 6147), ("k8LosSide7", 6148), ("k8LosSide8", 6149), ("k8LosSideStdby", 6150), ("line1Dccm", 6151), ("line1Dccr", 6152), ("line1EDccr", 6153), ("line1RxClockLos", 6154), ("line1TxClockLos", 6155), ("line1WDccr", 6156), ("line2Dccm", 6157), ("line2Dccr", 6158), ("line2EDccr", 6159), ("line2RxClockLos", 6160), ("line2TxClockLos", 6161), ("line2WDccr", 6162), ("laser", 6163), ("laserStatus", 6164), ("lowEarlyWarning", 6165), ("lowFastBer", 6166), ("linkIdentificationCodeError", 6167), ("localOscill", 6168), ("lofRfcoh", 6169), ("lofTrib", 6170), ("losK21", 6171), ("losK22", 6172), ("losK5", 6173), ("losK6", 6174), ("losK7", 6175), ("losK8", 6176), ("mainMasterOscSyncLos", 6177), ("mainTribSyncLos", 6178), ("manualOperation", 6179), ("mainBattery", 6180), ("modulatorAlarm", 6181), ("modemBoard", 6182), ("modSideFail", 6183), ("modSyncOn", 6184), ("masterOscSyncLos", 6185), ("masterOscSyncOn", 6186), ("msAis", 6187), ("msRdi", 6188), ("oduHardwareMismatch", 6189), ("oduLine1RxClockLos", 6190), ("oduLine1TxClockLos", 6191), ("oduLine2TxClockLos", 6192), ("oduLine2RxClockLos", 6193), ("oduSwitch", 6194), ("oduSwitchMismatch", 6195), ("ohBusRxFailureSideA", 6196)) + NamedValues(("ohBusRxFailureSideB", 6197), ("ohBusRxFailureSide1", 6198), ("ohBusRxFailureSide2", 6199), ("ohBusRxFailureSide3", 6200), ("ohBusRxFailureSide4", 6201), ("ohBusRxFailureSide5", 6202), ("ohBusRxFailureSide6", 6203), ("ohBusRxFailureSide7", 6204), ("ohBusRxFailureSide8", 6205), ("ohBusRxSideA", 6206), ("ohBusRxSideB12", 6207), ("ohBusRxSideB13", 6208), ("ohBusRxSideB", 6209), ("ohBusRxSideB24", 6210), ("ohBusRxSideBStdby3", 6211), ("ohBusRxSideStdby", 6212), ("ohBusTxFailSideA", 6213), ("ohBusTxFailSideB", 6214), ("ohBusTxFailSide1", 6215), ("ohBusTxFailSide2", 6216), ("ohBusTxFailSide3", 6217), ("ohBusTxFailSide4", 6218), ("ohBusTxFailSide5", 6219), ("ohBusTxFailSide6", 6220), ("ohBusTxFailSide7", 6221), ("ohBusTxFailSide8", 6222), ("ohBusTxSideA", 6223), ("ohBusTxSideB", 6224), ("ohBusTxSideB12", 6225), ("ohBusTxSideB13", 6226), ("ohBusTxSideB24", 6227), ("ohBusTxSideBStdby3", 6228), ("ohBusTxSideStdby", 6229), ("ohBusRxSide1", 6230), ("ohBusRxSide2", 6231), ("ohBusTxSide1", 6232), ("ohBusTxSide2", 6233), ("outputPower", 6234), ("phaseShifter", 6235), ("protectionBypassCardFailure", 6236), ("protMasterOscSync", 6237), ("protMasterOscSyncLos", 6238), ("protTribSyncLos", 6239), ("psu1", 6240), ("psu2", 6241), ("powerSupplyFailure2", 6242), ("psFilterAndDistributorPreAlarm", 6243), ("qInterfaceFault", 6244), ("ready", 6245), ("receiverFailure", 6246), ("refusedSwitchingChannel1", 6247), ("refusedSwitchingChannel2", 6248), ("refusedSwitchingChannel3", 6249), ("refusedSwitchingChannel4", 6250), ("refusedSwitchingChannel5", 6251), ("refusedSwitchingChannel6", 6252), ("refusedSwitchingChannel7", 6253), ("remoteLoopBackActivation", 6254), ("rfDiversity", 6255), ("rfLos", 6256), ("rfMain", 6257), ("rfSwitchAlarm", 6258), ("rpsLocked", 6259), ("rsTim", 6260), ("routingTableDccConfMismatchBank1", 6261), ("routingTableDccConfMismatchBank2", 6262), ("routingTableIntegrityFailureBank1", 6263), ("routingTableIntegrityFailureBank2", 6264), ("rtmUnitForced", 6265), ("routingTableNsapMismatchBank1", 6266), ("routingTableNsapMismatchBank2", 6267), ("rx1ewPowerSupply", 6268), ("rx1wePowerSupply", 6269), ("rx2ewPowerSupply", 6270), ("rx2wePowerSupply", 6271), ("rx3ewPowerSupply", 6272), ("rx3wePowerSupply", 6273), ("rx4ewPowerSupply", 6274), ("rx4wePowerSupply", 6275), ("rx5ewPowerSupply", 6276), ("rx5wePowerSupply", 6277), ("rx6ewPowerSupply", 6278), ("rx6wePowerSupply", 6279), ("rx7ewPowerSupply", 6280), ("rx7wePowerSupply", 6281), ("rx8ewPowerSupply", 6282), ("rx8wePowerSupply", 6283), ("rxAisInserted", 6284), ("rxAlignment", 6285), ("rxAuAis1", 6286), ("rxAuAis2", 6287), ("rxAuAisP", 6288), ("rxAuAisW", 6289), ("rxAuLop1", 6290), ("rxAuLop2", 6291), ("rxAuLopP", 6292), ("rxAuLopW", 6293), ("rxB1SD", 6294), ("rxSideCardFailure", 6295), ("rxCodeSide1", 6296), ("rxCodeSide2", 6297), ("rxCodeSideA", 6298), ("rxCodeSideB", 6299), ("rxCodeSideStdby", 6300), ("rxDem1PowerSupply", 6301), ("rxDem2PowerSupply", 6302), ("rxDem3PowerSupply", 6303), ("rxDem4PowerSupply", 6304), ("rxDem5PowerSupply", 6305), ("rxDem6PowerSupply", 6306), ("rxDem7PowerSupply", 6307), ("rxDem8PowerSupply", 6308), ("rxDemStdbyPowerSupply", 6309), ("rxInput1", 6310), ("rxInput2", 6311), ("rxInputP", 6312), ("rxInputW", 6313), ("exLof", 6314), ("rxManualOperation", 6315), ("rxMgc", 6316), ("rxOduFailure", 6317), ("rxOnLineChannelFailure", 6318), ("rxOscillator", 6319), ("rxPowerFailure", 6320), ("rxSynthFailure", 6321), ("scs1", 6322), ("scs2", 6323), ("selectedDataInput", 6324), ("selfTestFail", 6325), ("selectedInput", 6326), ("sharedData", 6327), ("side1", 6328), ("side1Sd", 6329), ("side2", 6330), ("side2Sd", 6331), ("sideA", 6332), ("sideA12", 6333), ("sideA12Sd", 6334), ("sideA13", 6335), ("sideA13Sd", 6336), ("sideASd", 6337), ("sideB", 6338), ("sideB12", 6339), ("sideB24", 6340), ("sideB3", 6341), ("sideBsd", 6342), ("stm1B1SdExp", 6343), ("stm1B1SdMain", 6344), ("stm1FailExp", 6345), ("stm1FailMain", 6346), ("swIntegrityFailureBank1", 6347), ("swIntegrityFailureBank2", 6348), ("switchingAlarmChannel1", 6349), ("switchingAlarmChannel2", 6350), ("switchingAlarmChannel3", 6351), ("switchingAlarmChannel4", 6352), ("switchingAlarmChannel5", 6353), ("switchingAlarmChannel6", 6354), ("switchingAlarmChannel7", 6355), ("switchHsbyFailure", 6356), ("switchingTestFailureStdbyChannel1", 6357), ("switchingTestFailureStdbyChannel2", 6358), ("switchingTestFailureStdbyChannel3", 6359), ("switchingTestFailureStdbyChannel4", 6360), ("switchingTestFailureStdbyChannel5", 6361), ("switchingTestFailureStdbyChannel6", 6362), ("switchingTestFailureStdbyChannel7", 6363), ("switchingTestFailureStdby", 6364), ("syncFailureMain", 6365), ("syncOn", 6366), ("synthetizer", 6367), ("systemBackupKey", 6368), ("systemBackupKeyNotInserted", 6369), ("systemForced1Plus0MasterConfig", 6370), ("systemSwitchesFrozen", 6371), ("timRf", 6372), ("timTributary", 6373), ("tributary10Hdb3ViolationDetection", 6374), ("tributary10InputFailure", 6375), ("tributary10OutputFailure", 6376), ("tributary11Hdb3ViolationDetection", 6377), ("tributary11InputFailure", 6378), ("tributary11OutputFailure", 6379), ("tributary12Hdb3ViolationDetection", 6380), ("tributary12InputFailure", 6381), ("tributary12OutputFailure", 6382), ("tributary13Hdb3ViolationDetection", 6383), ("tributary13InputFailure", 6384), ("tributary13OutputFailure", 6385), ("tributary14Hdb3ViolationDetection", 6386), ("tributary14InputFailure", 6387), ("tributary14OutputFailure", 6388), ("tributary15Hdb3ViolationDetection", 6389), ("tributary15InputFailure", 6390), ("tributary15OutputFailure", 6391), ("tributary16Hdb3ViolationDetection", 6392), ("tributary16InputFailure", 6393), ("tributary16OutputFailure", 6394), ("tributary1Dccr", 6395), ("tributary1Hdb3ViolationDetection", 6396), ("tributary1InputFailure", 6397), ("tributary1OutputFailure", 6398), ("tributary1SyncSourceOn", 6399), ("tributary2Dccr", 6400), ("tributary2Hdb3ViolationDetection", 6401), ("tributary2InputFailure", 6402), ("tributary2OutputFailure", 6403), ("tributary2SyncSourceOn", 6404), ("tributary3Dccr", 6405), ("tributary3Hdb3ViolationDetection", 6406), ("tributary3InputFailure", 6407), ("tributary3OutputFailure", 6408), ("tributary3SyncSourceOn", 6409), ("tributary4SyncSourceOn", 6410), ("tributary4Dccr", 6411), ("tributary4Hdb3ViolationDetection", 6412), ("tributary4InputFailure", 6413), ("tributary4OutputFailure", 6414), ("tributary5Hdb3ViolationDetection", 6415), ("tributary5InputFailure", 6416), ("tributary5OutputFailure", 6417), ("tributary6Hdb3ViolationDetection", 6418), ("tributary6InputFailure", 6419), ("tributary6OutputFailure", 6420), ("tributary7Hdb3ViolationDetection", 6421), ("tributary7InputFailure", 6422), ("tributary7OutputFailure", 6423), ("tributary8Hdb3ViolationDetection", 6424), ("tributary8InputFailure", 6425), ("tributary8OutputFailure", 6426), ("tributary9Hdb3ViolationDetection", 6427), ("tributary9InputFailure", 6428), ("tributary9OutputFailure", 6429), ("tributaryADccr", 6430), ("tributaryAisInserted", 6431), ("tributaryBDccr", 6432), ("tributaryCDccr", 6433), ("tributaryConfiguration", 6434), ("tributaryDccm", 6435), ("tributaryDccr", 6436), ("tributaryDDccr", 6437), ("tributaryOccDccr", 6438), ("tributaryOccSyncSourceOn", 6439), ("tributarySwitch", 6440), ("tributarySyncLos", 6441), ("tributarySyncSourceOn", 6442), ("tx1ewPowerSupply", 6443), ("tx1PowerSupply", 6444), ("tx1wePowerSupply", 6445), ("tx2ewPowerSupply", 6446), ("tx2PowerSupply", 6447), ("tx2wePowerSupply", 6448), ("tx3ewPowerSupply", 6449), ("tx3PowerSupply", 6450), ("tx3wePowerSupply", 6451)) + NamedValues(("tx4ewPowerSupply", 6452), ("tx4PowerSupply", 6453), ("tx4wePowerSupply", 6454), ("tx5ewPowerSupply", 6455), ("tx5PowerSupply", 6456), ("tx5wePowerSupply", 6457), ("tx6ewPowerSupply", 6458), ("tx6PowerSupply", 6459), ("tx6wePowerSupply", 6460), ("tx7ewPowerSupply", 6461), ("tx7PowerSupply", 6462), ("tx7wePowerSupply", 6463), ("tx8ewPowerSupply", 6464), ("tx8PowerSupply", 6465), ("tx8wePowerSupply", 6466), ("txAmplifier", 6467), ("txAuAis", 6468), ("txAuLop", 6469), ("txB1Sd", 6470), ("txB2Eber", 6471), ("txB2Sd", 6472), ("txSideCardFailure", 6473), ("txCkSync1", 6474), ("txCkSync2", 6475), ("txCkSyncP", 6476), ("txCkSyncW", 6477), ("txIfLos", 6478), ("txLos", 6479), ("txManualOperation", 6480), ("txMsAis", 6481), ("txMsRdi", 6482), ("txOduFailure", 6483), ("txOnLineChannelFailure", 6484), ("txOscillator", 6485), ("txPowerWrong", 6486), ("txSquelchOn", 6487), ("txSynth", 6488), ("txStdbyPowerSupply", 6489), ("unitFailure", 6490), ("userChBoard", 6491), ("vcoFrequencyDeviation", 6492), ("wsAisInserted", 6493), ("wsChBoard", 6494), ("wsLos", 6495), ("xpicFail", 6496), ("xpicIfInput", 6497), ("aisReceived", 6498), ("consecutiveSesProtection", 6499), ("dccFailure", 6500), ("demBlockFailure", 6501), ("eberB2", 6502), ("eberRp", 6503), ("es15Min", 6504), ("es24h", 6505), ("fading", 6506), ("fanFailureR", 6507), ("ferFailure", 6508), ("frameAlignmentLoss", 6509), ("holdoverStateEntered", 6510), ("hopFerFailure", 6511), ("hopUnequipped", 6512), ("internalClockStateEntered", 6513), ("laserBiasOutOfLimits", 6514), ("logMemoryThresholdCrossed", 6515), ("lossOfClockSignal6Mhz", 6516), ("los2Mbps", 6517), ("los2Mhz", 6518), ("losInDem", 6519), ("losInMod", 6520), ("losInRx", 6521), ("losInSTM", 6522), ("losInTx", 6523), ("losInXpic", 6524), ("lossOfProtectionSignal", 6525), ("mainRxReceivedLevelDown", 6526), ("modBlockFailure", 6527), ("mspArchitectureMatchFailure", 6528), ("mspChannelMatchFailure", 6529), ("mspCpu1Failure", 6530), ("mspCpu2Failure", 6531), ("mspCpu3Failure", 6532), ("mspCpu4Failure", 6533), ("mspDirectionMatchFailure", 6534), ("networkReferenceClockQualityDown", 6535), ("opticalTransmitPowerOutOfRange", 6536), ("opticalTransmitPowerDegraded", 6537), ("pathTraceIdMismatch", 6538), ("priorityChannelMismatch", 6539), ("psFailure", 6540), ("radioRouteIdMismatch", 6541), ("remoteAlarmIndication", 6542), ("rxBlockFailure", 6543), ("signalDegradeB2", 6544), ("sdRxReceivedLevelDown", 6545), ("sectionTraceIdMismatch", 6546), ("serialInterfaceFailure", 6547), ("ses15Min", 6548), ("ses24h", 6549), ("signalLabelMismatch", 6550), ("svBackupSubunitFailure", 6551), ("switchFailureInBsw", 6552), ("switchFailureInUsw", 6553), ("swVersionMismatch2", 6554), ("transactionLogMemoryThresholdCrossed", 6555), ("txBlockFailure", 6556), ("unavailableStateB1", 6557), ("unavailableStateB2", 6558), ("unavailableStateB3", 6559), ("unavailableStateFebe", 6560), ("unavailableStateRp", 6561), ("swDownloadFailure", 6562), ("freqPlanFail", 6563), ("badConfigSlaveUnits", 6564), ("swNotAligned", 6565), ("systemBackupKeyNotAligned", 6566), ("psu3", 6567), ("psu4", 6568), ("bb1Bb2DataInterfaceFailure", 6569), ("uPAlarm", 6570), ("stationAlarm1", 6571), ("stationAlarm2", 6572), ("stationAlarm3", 6573), ("stationAlarm4", 6574), ("stationAlarm5", 6575), ("stationAlarm6", 6576), ("stationAlarm7", 6577), ("stationAlarm8", 6578), ("stationAlarm9", 6579), ("stationAlarm10", 6580), ("stationAlarm11", 6581), ("stationAlarm12", 6582), ("stationAlarm13", 6583), ("stationAlarm14", 6584), ("stationAlarm15", 6585), ("stationAlarm16", 6586), ("stationAlarm17", 6587), ("stationAlarm18", 6588), ("stationAlarm19", 6589), ("stationAlarm20", 6590), ("stationAlarm21", 6591), ("stationAlarm22", 6592), ("stationAlarm23", 6593), ("stationAlarm24", 6594), ("stationAlarm25", 6595), ("stationAlarm26", 6596), ("stationAlarm27", 6597), ("stationAlarm28", 6598), ("stationAlarm29", 6599), ("stationAlarm30", 6600), ("stationAlarm31", 6601), ("stationAlarm32", 6602), ("aisProtSide", 6603), ("berSdProtSide", 6604), ("signalDegradeHighProtSide", 6605), ("signalDegradeLowProtSide", 6606), ("xpicFailProtSide", 6607), ("ber10Em3ProtSide", 6608), ("demBlockFailureProtSide", 6609), ("hberProtSide", 6610), ("rxODUFailureProtSide", 6611), ("freqPlanFailProtSide", 6612), ("freqPlan16ComplTestAlarmProtSide", 6613), ("freqPlan2ComplTestAlarmProtSide", 6614), ("freqPlan4ComplTestAlarmProtSide", 6615), ("freqPlan8ComplTestAlarmProtSide", 6616), ("inputSignalDisabledTribProtSide", 6617), ("txOnLineChanFailProtSide", 6618), ("lofProtSide", 6619), ("txLOSProtSide", 6620), ("losInXPICProtSide", 6621), ("coChannelXPICProtSide", 6622), ("farEndBlockErrorProtSide", 6623), ("farEndRemoteFailureProtSide", 6624), ("rdiProtSide", 6625), ("ssfProtSide", 6626), ("radioRouteIdMismatchProtSide", 6627), ("atpcFailureProtSide", 6628), ("agcFailureProtSide", 6629), ("modBlockFailureProtSide", 6630), ("txFailProtSide", 6631), ("systemInitInProgress", 6632), ("ethernetPortDown", 6633), ("accPortLinkLayerDown", 6634), ("accPortLoopDetected", 6635), ("accPortPhysLayerDown", 6636), ("circuitDown", 6637), ("circuitIntrusiveTest", 6638), ("circuitUnprotected", 6639), ("lapdDown", 6640), ("manReversionRequired", 6641), ("pathSelectorMismatch", 6642), ("primaryPathDown", 6643), ("reversionFailed", 6644), ("busDown", 6645), ("cardTypeMisMatch", 6646), ("optRoutingParamNok", 6647), ("trunkDown", 6648), ("virtualTrunkDegradation", 6649), ("virtualTrunkDown", 6650), ("virtualTrunkSessionDown", 6651), ("allFansHaveFailed", 6652), ("fanFailed", 6653), ("fanLossOfRedundancy", 6654), ("fanRemoved", 6655), ("mspAutoSwitchSd", 6656), ("mspAutoSwitchSdFar", 6657), ("mspAutoSwitchSf", 6658), ("mspAutoSwitchSfFar", 6659), ("mspChannelMismatch", 6660), ("mspFarEndProtectFail", 6661), ("mspForcedSwiToProt", 6662), ("mspForcedSwiToProtFar", 6663), ("mspForcedSwiToWork", 6664), ("mspForcedSwiToWorkFar", 6665), ("mspLockoutProtection", 6666), ("mspLockoutProtectionFar", 6667), ("mspManualSwitchProt", 6668), ("mspManualSwitchProtFar", 6669), ("mspModeMismatch", 6670), ("mspProtSwitchByteFail", 6671), ("mspProtSwitchDenial", 6672), ("mspSwitchToProtDnr", 6673), ("mspSwitchToProtDnrFar", 6674), ("mspSwitchToProtWtr", 6675), ("mspSwitchToProtWtrFar", 6676), ("auditTrailLogFullThreshold", 6677), ("autoLaserShutdown", 6678), ("checksumConfigFileNok", 6679), ("badConfigFile", 6680), ("cardHwMaintenance", 6681), ("configFileNotFound", 6682), ("configNotApproved", 6683), ("defaultKBytes", 6684), ("eastExtraTrafficPreemp", 6685), ("eepromFailure", 6686), ("errorReadingIdprom", 6687), ("errorReadingCleiCode", 6688), ("errorReadingFanIdprom", 6689), ("fileSystemAlmostFull", 6690), ("forceSwitchRingEastK1", 6691), ("forceSwitchRingWestK1", 6692), ("forceSwitchRingEast", 6693), ("forceSwitchRingWest", 6694), ("forceSwitchSpanEastK1", 6695), ("forceSwitchSpanWestK1", 6696), ("forceSwitchSpanEast", 6697), ("forceSwitchSpanWest", 6698), ("foreignConfig", 6699), ("hardwareFailure", 6700), ("improperApsCodes", 6701), ("invalidCard", 6702), ("invalidProductCodeOrRev", 6703), ("invalidShelf", 6704), ("lapdConfigMismatch", 6705), ("laserBiasCurrentHigh", 6706)) + NamedValues(("laserDisabled", 6707), ("laserFailure", 6708), ("laserPowerOutOfLock", 6709), ("laserShutdown", 6710), ("laserTempOutOfRange", 6711), ("laserWaveOutOfLock", 6712), ("lockoutEastWorkRing", 6713), ("lockoutEastWorkSpan", 6714), ("lockoutProtAllSpans", 6715), ("lockoutProtEast", 6716), ("lockoutProtFromEastK1", 6717), ("lockoutProtFromWestK1", 6718), ("lockoutProtWest", 6719), ("lockoutWestWorkRing", 6720), ("lockoutWestWorkSpan", 6721), ("logWriteFail", 6722), ("manSwitchRingEastK1", 6723), ("manSwitchRingWestK1", 6724), ("manSwitchRingEast", 6725), ("manSwitchRingWest", 6726), ("manSwitchSpanEastK1", 6727), ("manSwitchSpanWestK1", 6728), ("manSwitchSpanEast", 6729), ("manSwitchSpanWest", 6730), ("modulatorOutOfLock", 6731), ("noConfigFileLoaded", 6732), ("nodeIdMismatch", 6733), ("pathProtSelectorAlarm", 6734), ("portInLoopbackMode", 6735), ("receivePowerOutOfRange", 6736), ("redundantPairCommFail", 6737), ("shelfDcFilterFailure", 6738), ("softwareDownloadFailed", 6739), ("softwareUnpackFailed", 6740), ("squelchEastWorkTraffic", 6741), ("squelchWestWorkTraffic", 6742), ("swVersionMismatch", 6743), ("transmitPowerOutRange", 6744), ("voaFailure", 6745), ("wavelengthItuMismatch", 6746), ("westExtraTrafficPreemp", 6747), ("circuitXcLoopback", 6748), ("autoSwitchRingSDEastK1", 6749), ("autoSwitchRingSDWestK1", 6750), ("autoSwitchRingSFEastK1", 6751), ("autoSwitchRingSFWestK1", 6752), ("autoSwitchRingSDEast", 6753), ("autoSwitchRingSFEast", 6754), ("autoSwitchRingSDWest", 6755), ("autoSwitchRingSFWest", 6756), ("autoSwitchSpanSDEastK1", 6757), ("autoSwitchSpanSDWestK1", 6758), ("autoSwitchSpanSFEastK1", 6759), ("autoSwitchSpanSFWestK1", 6760), ("autoSwitchSpanSDEast", 6761), ("autoSwitchSpanSFEast", 6762), ("autoSwitchSpanSDWest", 6763), ("autoSwitchSpanSFWest", 6764), ("autoSquelchNoMatchID", 6765), ("invalidPortConfiguration", 6766), ("protPassThroughXcUnres", 6767), ("switchExerciseRingFailed", 6768), ("switchExerciseSpanFailed", 6769), ("waitToRestore", 6770), ("serverNotReachable", 6771), ("serverNotInSynch", 6772), ("forcedSwitchOverInEffect", 6773), ("forcedSwitchOverFailed", 6774), ("powerSupplyFailure", 6775), ("cardMissing2", 6776), ("shelfDcFilterRemoved", 6777), ("configDownload", 6778), ("softwareDownloading", 6779), ("backplaneInternalLinkFault", 6780), ("lossOfTimingSource", 6781), ("bitsPll0OutOfLock", 6782), ("bitsPll1OutOfLock", 6783), ("insuffLockTimeForHoStab", 6784), ("monitorPortAInputRefBad", 6785), ("monitorPortBInputRefBad", 6786), ("port1BothTimingLinkDown", 6787), ("port1TimingLinkDown", 6788), ("port2BothTimingLinkDown", 6789), ("port2TimingLinkDown", 6790), ("port3BothTimingLinkDown", 6791), ("port3TimingLinkDown", 6792), ("port4BothTimingLinkDown", 6793), ("port4TimingLinkDown", 6794), ("port5BothTimingLinkDown", 6795), ("port5TimingLinkDown", 6796), ("timingClockNotEnabled", 6797), ("timingControllerFreeRun", 6798), ("timingControllerHoldover", 6799), ("timingModuleLossOfLock", 6800), ("tuningVoltageLevelClock", 6801), ("cardTimingSubsysFault", 6802), ("bothPrimSecTrcOutService", 6803), ("bothReferencesBad", 6804), ("aisInBitsPrimaryReference", 6805), ("losInBitsPrimaryReference", 6806), ("lossOfHigherBitsTimeSrc", 6807), ("noClockEdgeInBitsPrimRef", 6808), ("aisInBitsSecondaryRef", 6809), ("losInBitsSecondaryRef", 6810), ("lossOfLowerBitsTimingSrc", 6811), ("noClockEdgeInBitsSecRef", 6812), ("intrusiveTestAccess", 6813), ("thresholdHighestBbe15", 6814), ("thresholdHighestBbe15FarEnd", 6815), ("thresholdHighestBbe24", 6816), ("thresholdHighestBbe24FarEnd", 6817), ("thresholdHighestEs15", 6818), ("thresholdHighestEs15FarEnd", 6819), ("thresholdHighestEs24", 6820), ("thresholdHighestEs24FarEnd", 6821), ("thresholdHighestSes15", 6822), ("thresholdHighestSes15FarEnd", 6823), ("thresholdHighestSes24", 6824), ("thresholdHighestSes24FarEnd", 6825), ("thresholdHighestUas15", 6826), ("thresholdHighestUas15FarEnd", 6827), ("thresholdHighestUas24", 6828), ("thresholdHighestUas24FarEnd", 6829), ("thresholdHighestCv15", 6830), ("thresholdHighestCv15FarEnd", 6831), ("thresholdHighestCv24", 6832), ("thresholdHighestCv24FarEnd", 6833), ("thresholdHighestSefs15", 6834), ("thresholdHighestSefs15FarEnd", 6835), ("thresholdHighestSefs24", 6836), ("thresholdHighestSefs24FarEnd", 6837), ("radioDataTransMissA", 6838), ("radioDTMTrib1", 6839), ("radioDTMTrib2", 6840), ("radioHPSyncLoss", 6841), ("radioLOFHWP", 6842), ("radioSyncFromModT1", 6843), ("radioSyncFromModT2", 6844), ("radioSyncFromMod12", 6845), ("radioCKSyncDem1", 6846), ("radioCKSyncDem2", 6847), ("radioMod1PSfail", 6848), ("radioMod2PSfail", 6849), ("radioModSyncLoss", 6850), ("radioAGCPREALMHSBY", 6851), ("radioPSHstbyFail", 6852), ("radioEOWRC1", 6853), ("radioEOWRC2", 6854), ("radioRXSection", 6855), ("radioTrib1ConfAlm", 6856), ("radioTrib2ConfAlm", 6857), ("radioTrib3ConfAlm", 6858), ("radioTrib4ConfAlm", 6859), ("radioTrib5ConfAlm", 6860), ("radioTrib6ConfAlm", 6861), ("radioTrib7ConfAlm", 6862), ("radioTrib8ConfAlm", 6863), ("radioTrib9ConfAlm", 6864), ("radioTrib10ConfAlm", 6865), ("radioTrib11ConfAlm", 6866), ("radioTrib12ConfAlm", 6867), ("radioTrib13ConfAlm", 6868), ("radioTrib14ConfAlm", 6869), ("radioTrib15ConfAlm", 6870), ("radioTrib16ConfAlm", 6871), ("radioTrib1LOS", 6872), ("radioTrib2LOS", 6873), ("radioTrib3LOS", 6874), ("radioTrib4LOS", 6875), ("radioTrib5LOS", 6876), ("radioTrib6LOS", 6877), ("radioTrib7LOS", 6878), ("radioTrib8LOS", 6879), ("radioTrib9LOS", 6880), ("radioTrib10LOS", 6881), ("radioTrib11LOS", 6882), ("radioTrib12LOS", 6883), ("radioTrib13LOS", 6884), ("radioTrib14LOS", 6885), ("radioTrib15LOS", 6886), ("radioTrib16LOS", 6887), ("radioTrib1AISIN", 6888), ("radioTrib2AISIN", 6889), ("radioTrib3AISIN", 6890), ("radioTrib4AISIN", 6891), ("radioTrib5AISIN", 6892), ("radioTrib6AISIN", 6893), ("radioTrib7AISIN", 6894), ("radioTrib8AISIN", 6895), ("radioTrib9AISIN", 6896), ("radioTrib10AISIN", 6897), ("radioTrib11AISIN", 6898), ("radioTrib12AISIN", 6899), ("radioTrib13AISIN", 6900), ("radioTrib14AISIN", 6901), ("radioTrib15AISIN", 6902), ("radioTrib16AISIN", 6903), ("radioTrib1Code", 6904), ("radioTrib2Code", 6905), ("radioTrib3Code", 6906), ("radioTrib4Code", 6907), ("radioTrib5Code", 6908), ("radioTrib6Code", 6909), ("radioTrib7Code", 6910), ("radioTrib8Code", 6911), ("radioTrib9Code", 6912), ("radioTrib10Code", 6913), ("radioTrib11Code", 6914), ("radioTrib12Code", 6915), ("radioTrib13Code", 6916), ("radioTrib14Code", 6917), ("radioTrib15Code", 6918), ("radioTrib16Code", 6919), ("radioTrib1ConfAlmHWP", 6920), ("radioTrib2ConfAlmHWP", 6921), ("radioTrib3ConfAlmHWP", 6922), ("radioTrib4ConfAlmHWP", 6923), ("radioTrib5ConfAlmHWP", 6924), ("radioTrib6ConfAlmHWP", 6925), ("radioTrib7ConfAlmHWP", 6926), ("radioTrib8ConfAlmHWP", 6927), ("radioTrib9ConfAlmHWP", 6928), ("radioTrib10ConfAlmHWP", 6929), ("radioTrib11ConfAlmHWP", 6930), ("radioTrib12ConfAlmHWP", 6931), ("radioTrib13ConfAlmHWP", 6932), ("radioTrib14ConfAlmHWP", 6933), ("radioTrib15ConfAlmHWP", 6934), ("radioTrib16ConfAlmHWP", 6935), ("radioTrib1LOSHWP", 6936), ("radioTrib2LOSHWP", 6937), ("radioTrib3LOSHWP", 6938), ("radioTrib4LOSHWP", 6939), ("radioTrib5LOSHWP", 6940), ("radioTrib6LOSHWP", 6941), ("radioTrib7LOSHWP", 6942), ("radioTrib8LOSHWP", 6943), ("radioTrib9LOSHWP", 6944), ("radioTrib10LOSHWP", 6945), ("radioTrib11LOSHWP", 6946), ("radioTrib12LOSHWP", 6947), ("radioTrib13LOSHWP", 6948), ("radioTrib14LOSHWP", 6949), ("radioTrib15LOSHWP", 6950), ("radioTrib16LOSHWP", 6951), ("radioTrib1AISINHWP", 6952), ("radioTrib2AISINHWP", 6953), ("radioTrib3AISINHWP", 6954), ("radioTrib4AISINHWP", 6955), ("radioTrib5AISINHWP", 6956), ("radioTrib6AISINHWP", 6957), ("radioTrib7AISINHWP", 6958), ("radioTrib8AISINHWP", 6959), ("radioTrib9AISINHWP", 6960), ("radioTrib10AISINHWP", 6961)) + NamedValues(("radioTrib11AISINHWP", 6962), ("radioTrib12AISINHWP", 6963), ("radioTrib13AISINHWP", 6964), ("radioTrib14AISINHWP", 6965), ("radioTrib15AISINHWP", 6966), ("radioTrib16AISINHWP", 6967), ("radioTrib1CodeHWP", 6968), ("radioTrib2CodeHWP", 6969), ("radioTrib3CodeHWP", 6970), ("radioTrib4CodeHWP", 6971), ("radioTrib5CodeHWP", 6972), ("radioTrib6CodeHWP", 6973), ("radioTrib7CodeHWP", 6974), ("radioTrib8CodeHWP", 6975), ("radioTrib9CodeHWP", 6976), ("radioTrib10CodeHWP", 6977), ("radioTrib11CodeHWP", 6978), ("radioTrib12CodeHWP", 6979), ("radioTrib13CodeHWP", 6980), ("radioTrib14CodeHWP", 6981), ("radioTrib15CodeHWP", 6982), ("radioTrib16CodeHWP", 6983), ("radioFif", 6984), ("radioRCh", 6985), ("radioR1Ch", 6986), ("radioR2Ch", 6987), ("radioD1Ch", 6988), ("radioD2Ch", 6989), ("radioLOPHWP", 6990), ("radioG703Los", 6991), ("pam", 7200), ("scm", 7201), ("otm", 7202), ("radioAISRXBHWP", 7220), ("radioAISTXHWP", 7221), ("radioB1BerHWP", 7222), ("radioB2BERSFHWP", 7223), ("radiobackupKeyMism", 7224), ("radioCCPairWrongCfg", 7225), ("radioCFP", 7226), ("radioCPUExpIf", 7227), ("radioDataTransMissB", 7228), ("radioDChanFail", 7229), ("radioDoubleKey", 7230), ("radioExpSyncSource", 7231), ("radioExtEOW", 7232), ("radioLaserDeg", 7233), ("radioLine1", 7234), ("radioLine10", 7235), ("radioLine11", 7236), ("radioLine12", 7237), ("radioLine13", 7238), ("radioLine14", 7239), ("radioLine15", 7240), ("radioLine16", 7241), ("radioLine17", 7242), ("radioLine18", 7243), ("radioLine19", 7244), ("radioLine2", 7245), ("radioLine20", 7246), ("radioLine21", 7247), ("radioLine3", 7248), ("radioLine4", 7249), ("radioLine5", 7250), ("radioLine6", 7251), ("radioLine7", 7252), ("radioLine8", 7253), ("radioLine9", 7254), ("radioLOPBXHWP", 7255), ("radioLOPTXHWP", 7256), ("radioLOPWXHWP", 7257), ("radioLOSStby", 7258), ("radioLOSStby1", 7259), ("radioLSIf", 7260), ("radioMemCk", 7261), ("radioMMOLos", 7262), ("radioModFail", 7263), ("radioPRPSLocked", 7264), ("radioPSProtectionLost", 7265), ("radioRFSearch", 7266), ("radioRSCLOF", 7267), ("radioRUCLOS", 7268), ("radioRxDistExtr", 7269), ("radioRxDistPS", 7270), ("radioSbusLink", 7271), ("radioStandbySwitchMismatch", 7272), ("radioTIMHWP", 7273), ("radioTunFail1", 7274), ("radioTunFail10", 7275), ("radioTunFail11", 7276), ("radioTunFail12", 7277), ("radioTunFail13", 7278), ("radioTunFail14", 7279), ("radioTunFail15", 7280), ("radioTunFail16", 7281), ("radioTunFail2", 7282), ("radioTunFail3", 7283), ("radioTunFail4", 7284), ("radioTunFail5", 7285), ("radioTunFail6", 7286), ("radioTunFail7", 7287), ("radioTunFail8", 7288), ("radioTunFail9", 7289), ("radioTxDistExtr", 7290), ("radioTxDistPS", 7291), ("radioInAisProt", 7292), ("radioOverTemp", 7293), ("radioXPICOff", 7294), ("radioStbyEEprom", 7295), ("radioB2BerProt", 7296), ("radioB2Ber3Prot", 7297), ("radioConfMism", 7298), ("radioMismFailAct", 7299), ("silvxBLSRLaserShutdown", 7300), ("silvxSectionTraceIdMismatch", 7301), ("silvxBLSRPeerCommDown", 7302), ("silvxTrcPullinCfgMismatch", 7303), ("silvxTrcPullinCapCfgMismatch", 7304), ("silvxLimHwConfigInvalid", 7305), ("silvxLimInvalid", 7306), ("silvxLimHardwareFailure", 7307), ("silvxLimEepromFailure", 7308), ("silvxLimFpgaFailure", 7309), ("silvxLimFpgaVersionMismatch", 7310), ("silvxLimTemp", 7311), ("silvxPortMismatch", 7312), ("silvxPortInvalid", 7313), ("silvxPortMissing", 7314), ("silvxPortEepromFailure", 7315), ("silvxPortHardwareFailure", 7316), ("silvxBridgeAndRollInProgress", 7317), ("silvxRollToPathDown", 7318), ("silvxEthernetServiceDown", 7319), ("silvxEthernetServiceDegraded", 7320), ("silvxCGDown", 7321), ("silvxCGDegraded", 7322), ("silvxCGDiffDelayExceeded", 7323), ("silvxCGSequenceError", 7324), ("silvxCGLossAlignment", 7325), ("silvxCGLossMultiframe", 7326), ("silvxPeerDiscLostContact", 7327), ("silvxPPGLockoutProtection", 7328), ("silvxPPGForceToWorking", 7329), ("silvxPPGForceToProtection", 7330), ("silvxPPGAutoSwitchToProtSF", 7331), ("silvxPPGAutoSwitchToProtWARM", 7332), ("silvxPPGAutoSwitchToProtSFBER", 7333), ("silvxPPGAutoSwitchToProtPDI", 7334), ("silvxPPGAutoSwitchToProtTIM", 7335), ("silvxPPGAutoSwitchToProtSD", 7336), ("silvxPPGMsToProt", 7337), ("silvxPPGAutoSwitchToProtWTR", 7338), ("silvxNoSystemTimingSrcProv", 7339), ("silvxTimingModuleStablizing", 7340), ("silvxEthernetServiceLocalCLF", 7341), ("silvxEthernetServiceRemoteCLF", 7342), ("silvxNetworkConnectionProblem", 7343), ("silvxMismatchedConfigRemoteCLF", 7344), ("silvxSoftwareActivation", 7345), ("silvxLIMSoftwareFailure", 7346), ("silvxLIMHwMaintenanceRequired", 7347), ("silvxLicenseInvalid", 7348), ("silvxLicenseExceeded", 7349), ("silvxLicenseExpired", 7350), ("silvxCleiLIMError", 7351), ("silvxCleiPortError", 7352), ("radioTXPLL19E", 7353), ("radioRXPLL6E", 7354), ("radioTXPLL6E", 7355), ("radioAISRXAHWP", 7356), ("radioAutGC", 7357), ("radioB2BerHWP", 7358), ("radioCErrTrib", 7359), ("radioEthIFault", 7360), ("radioBBExpCF", 7361), ("radioBBExpCM", 7362), ("radioBBExpIf", 7363), ("radioExtSync1", 7364), ("radioExtSync2", 7365), ("radioIDUHWMis", 7366), ("radioLine1DCCM", 7367), ("radioLine1DCCR", 7368), ("radioLine1EDCCR", 7369), ("radioLine1WDCCR", 7370), ("radioLine2DCCM", 7371), ("radioLine2DCCR", 7372), ("radioLine2EDCCR", 7373), ("radioLine2WDCCR", 7374), ("radioLOS8Cl", 7375), ("radioLOFGP1X", 7376), ("radioLOFGP1Y", 7377), ("radioLOFGP2X", 7378), ("radioLOFGP2Y", 7379), ("radioLOSUCh1", 7380), ("radioLOSUCh2", 7381), ("radioLOSSF", 7382), ("radioOHRXFail1", 7383), ("radioOHRXFail2", 7384), ("radioOHTXFail1", 7385), ("radioOHTXFail2", 7386), ("radioPChMGP1", 7387), ("radioPChMGP2", 7388), ("radioRTB1M", 7389), ("radioRTB2M", 7390), ("radioRTIB1", 7391), ("radioRTIB2", 7392), ("radioRTNSAPMB1", 7393), ("radioRTNSAPMB2", 7394), ("radioRXCardF", 7395), ("radioSCS1F", 7396), ("radioSCS2F", 7397), ("radioSelfTestF", 7398), ("radioSIFB1", 7399), ("radioSIFB2", 7400), ("radioSoftwM", 7401), ("radioSHSBYF", 7402), ("radioSTFStby", 7403), ("radioSTFStby1", 7404), ("radioSTFStby2", 7405), ("radioSTFStby3", 7406), ("radioSLOSDem1", 7407), ("radioSLOSDem2", 7408), ("radioSLOSMod1", 7409), ("radioSLOSMod2", 7410), ("radioSLOSRXDem1", 7411), ("radioSLOSRXDem2", 7412), ("radioSLOSTXMod1", 7413), ("radioTrib1DCCM", 7414), ("radioTX1PSF", 7415), ("radioTX2PSF", 7416), ("radioTXAmp", 7417), ("radioUPAl", 7418), ("radioVCOFreqDev", 7419), ("radioWCCCPair", 7420), ("silvxSysTimFreeRun", 7421), ("silvxSysTimLowSrc", 7422), ("silvxSysTimORef", 7423), ("silvxCardAdmDwn", 7424), ("silvxPortAdmDwn", 7425), ("silvxCardBoot", 7426), ("silvxCardPendRm", 7427), ("silvxSigIPPMFail", 7428), ("silvxPathAlFail", 7429), ("silvxTRCPMCProb", 7430), ("silvxCardTRCInit", 7431), ("silvxPathLbMism", 7432), ("silvxNodeLampTE", 7433), ("silvxShelfLampTE", 7434), ("silvxCardLampTE", 7435), ("silvxPortMiss", 7436), ("silvxCCRefMism", 7437), ("silvxRxFifoOverfl", 7438), ("radioAccessHWF", 7439), ("radioAISHWProt", 7440), ("radioAsicAl", 7441)) + NamedValues(("radioE2promF", 7442), ("radioCableCF", 7443), ("radioCableCOutoRg", 7444), ("radioClStatSl6", 7445), ("radioClStatSl7", 7446), ("radioCodeErrTrib", 7447), ("radioDateLIdErr", 7448), ("radioDChanDroplos", 7449), ("radioDChanInslos", 7450), ("radioDeMapper", 7451), ("radioDEmbMismConf", 7452), ("radioE1LocOsc", 7453), ("radioE1T1P1Ais", 7454), ("radioE1T1P1Lcd", 7455), ("radioE1T1P1Lif", 7456), ("radioE1T1P1Lods", 7457), ("radioE1T1P1Lof", 7458), ("radioE1T1P1Los", 7459), ("radioE1T1P1Rfi", 7460), ("radioE1T1P2Ais", 7461), ("radioE1T1P2Lcd", 7462), ("radioE1T1P2Lif", 7463), ("radioE1T1P2Lods", 7464), ("radioE1T1P2Lof", 7465), ("radioE1T1P2Los", 7466), ("radioE1T1P2Rfi", 7467), ("radioE1T1P3Ais", 7468), ("radioE1T1P3Lcd", 7469), ("radioE1T1P3Lif", 7470), ("radioE1T1P3Lods", 7471), ("radioE1T1P3Lof", 7472), ("radioE1T1P3Los", 7473), ("radioE1T1P3Rfi", 7474), ("radioE1T1P4Ais", 7475), ("radioE1T1P4Lcd", 7476), ("radioE1T1P4Lif", 7477), ("radioE1T1P4Lods", 7478), ("radioE1T1P4Lof", 7479), ("radioE1T1P4Los", 7480), ("radioE1T1P4Rfi", 7481), ("radioE1T1P5Ais", 7482), ("radioE1T1P5Lcd", 7483), ("radioE1T1P5Lif", 7484), ("radioE1T1P5Lods", 7485), ("radioE1T1P5Lof", 7486), ("radioE1T1P5Los", 7487), ("radioE1T1P5Rfi", 7488), ("radioE1T1P6Ais", 7489), ("radioE1T1P6Lcd", 7490), ("radioE1T1P6Lif", 7491), ("radioE1T1P6Lods", 7492), ("radioE1T1P6Lof", 7493), ("radioE1T1P6Los", 7494), ("radioE1T1P6Rfi", 7495), ("radioE1T1P7Ais", 7496), ("radioE1T1P7Lcd", 7497), ("radioE1T1P7Lif", 7498), ("radioE1T1P7Lods", 7499), ("radioE1T1P7Lof", 7500), ("radioE1T1P7Los", 7501), ("radioE1T1P7Rfi", 7502), ("radioE1T1P8Ais", 7503), ("radioE1T1P8Lcd", 7504), ("radioE1T1P8Lif", 7505), ("radioE1T1P8ods", 7506), ("radioE1T1P8Lof", 7507), ("radioE1T1P8Los", 7508), ("radioE1T1P8Rfi", 7509), ("radioEthLocOsc", 7510), ("radioTSProcT", 7511), ("radioTSProcTODU", 7512), ("radioFPGAMism", 7513), ("radioHitlessProtReq", 7514), ("radioHitlessSwitLoss", 7515), ("radioHWProtReq", 7516), ("radioIFMgmt", 7517), ("radioI2CDev", 7518), ("radioI2CIf", 7519), ("radioIduOduOvVol", 7520), ("radioIduOduEber", 7521), ("radioIduOduFerf", 7522), ("radioIduOduLof", 7523), ("radioIduOduOpCable", 7524), ("radioIfRxSynth", 7525), ("radioIfTxSynth", 7526), ("radioIMAGr1FE", 7527), ("radioIMAGr1NE", 7528), ("radioIMAGr2FE", 7529), ("radioIMAGr2NE", 7530), ("radioInp1AlStat", 7531), ("radioInp2AlStat", 7532), ("radioInp3AlStat", 7533), ("radioInp4AlStat", 7534), ("radioInp5AlStat", 7535), ("radioInp6AlStat", 7536), ("radioLinkFault", 7537), ("radioLnkDwnP1", 7538), ("radioLnkDwnP2", 7539), ("radioLnkDwnP3", 7540), ("radioLnkDwnP4", 7541), ("radioLocAlmLgOR", 7542), ("radioLossCap", 7543), ("radioLossPartCap", 7544), ("radioMemKeyFail", 7546), ("radioMismIduOdu", 7547), ("radioModIfCabF", 7548), ("radioModFailHSBY", 7549), ("radioOduCabRg", 7550), ("radioOduPowFail", 7551), ("radioOpStat", 7552), ("radioOpStatP1", 7553), ("radioOpStatP2", 7554), ("radioOpStatP3", 7555), ("radioOpStatP4", 7556), ("radioOpStatP5", 7557), ("radioOpStatP6", 7558), ("radioOpStatP7", 7559), ("radioOpStatP8", 7560), ("radioParDetFP1", 7561), ("radioParDetFP2", 7562), ("radioParDetFP3", 7563), ("radioParDetFP4", 7564), ("radioPowAl", 7565), ("radioPSAdmStat", 7566), ("radioPSCMism", 7567), ("radioR1IfAl", 7568), ("radioChainNR", 7569), ("radioTribE1ProtSide", 7570), ("radioRedundOpStat", 7571), ("radioRFRxSynth", 7572), ("radioRFTxSynth", 7573), ("radioRXAl", 7574), ("radioSCModIF", 7575), ("radioSfwrHwMism", 7576), ("radioSlEquipMod", 7577), ("radioSlEquipOdu", 7578), ("radioSlEquipSec", 7579), ("radioSrcAStatSl6", 7580), ("radioSrcAStatSl7", 7581), ("radioSrcBStatSl6", 7582), ("radioSrcBStatSl7", 7583), ("radioSPIDev", 7584), ("radioSPIIf", 7585), ("radioSumLicense", 7586), ("radioSwitchFail", 7587), ("radioTelemChan", 7588), ("radioTransPwBias", 7589), ("radioTransPwDet", 7590), ("radioTXAl", 7591), ("radioTXBiasAl", 7592), ("radioUnkSystT", 7593), ("radioLoRF", 7594), ("radioRS", 7595), ("radioLOFfHSBY", 7596), ("radioAlignFPS", 7597), ("radioLinkError", 7598), ("radioSeqAl", 7599), ("radioDluFlowAl1", 7601), ("radioDluFlowAl2", 7602), ("radioDluFlowAl3", 7603), ("radioDluFlowAl4", 7604), ("radioDluFlowAl5", 7605), ("radioDluFlowAl6", 7606), ("radioDluFlowAl", 7607), ("radioDluFlowAl8", 7608), ("radioDluFlowAl9", 7609), ("radioDluFlowAl10", 7610), ("radioDluFlowAl11", 7611), ("radioDluFlowAl12", 7612), ("radioDluFlowAl13", 7613), ("radioDluFlowAl14", 7614), ("radioDluFlowAl15", 7615), ("radioDluFlowAl16", 7616), ("radioDluFlowAl17", 7617), ("radioDluFlowAl18", 7618), ("radioDluFlowAl19", 7619), ("radioDluFlowAl20", 7620), ("radioDluFlowAl21", 7621), ("radioDluFlowAl22", 7622), ("radioDluFlowAl23", 7623), ("radioDluFlowAl24", 7624), ("radioDluFlowAl25", 7625), ("radioDluFlowAl26", 7626), ("radioDluFlowAl27", 7627), ("radioDluFlowAl28", 7628), ("radioDluFlowAl29", 7629), ("radioDluFlowAl30", 7630), ("radioDluFlowAl31", 7631), ("radioDluFlowAl32", 7632), ("radioDluFlowAl33", 7633), ("radioDluFlowAl34", 7634), ("radioDluFlowAl35", 7635), ("radioDluFlowAl36", 7636), ("radioDluFlowAl37", 7637), ("radioDluFlowAl38", 7638), ("radioDluFlowAl39", 7639), ("radioDluFlowAl40", 7640), ("radioDluFlowAl41", 7641), ("radioDluFlowAl42", 7642), ("radioDluFlowAl43", 7643), ("radioDluFlowAl44", 7644), ("radioDluFlowAl45", 7645), ("radioDluFlowAl46", 7646), ("radioDluFlowAl47", 7647), ("radioDluFlowAl48", 7648), ("radioDluFlowAl49", 7649), ("radioDluFlowAl50", 7650), ("radioDluFlowAl51", 7651), ("radioDluFlowAl52", 7652), ("radioDluFlowAl53", 7653), ("radioDluFlowAl54", 7654), ("radioDluFlowAl55", 7655), ("radioDluFlowAl56", 7656), ("radioDluFlowAl57", 7657), ("radioDluFlowAl58", 7658), ("radioDluFlowAl59", 7659), ("radioDluFlowAl60", 7660), ("radioDluFlowAl61", 7661), ("radioDluFlowAl62", 7662), ("radioDluFlowAl63", 7663), ("radioDluFlowAl64", 7664), ("radioDluFlowAl65", 7665), ("radioUloFlowAl1", 7666), ("radioUloFlowAl2", 7667), ("radioUloFlowAl3", 7668), ("radioUloFlowAl4", 7669), ("radioUloFlowAl5", 7670), ("radioUloFlowAl6", 7671), ("radioUloFlowAl7", 7672), ("radioUloFlowAl8", 7673), ("radioUloFlowAl9", 7674), ("radioUloFlowAl10", 7675), ("radioUloFlowAl11", 7676), ("radioUloFlowAl12", 7677), ("radioUloFlowAl13", 7678), ("radioUloFlowAl14", 7679), ("radioUloFlowAl15", 7680), ("radioUloFlowAl16", 7681), ("radioUloFlowAl17", 7682), ("radioUloFlowAl18", 7683), ("radioUloFlowAl19", 7684), ("radioUloFlowAl20", 7685), ("radioUloFlowAl21", 7686), ("radioUloFlowAl22", 7687), ("radioUloFlowAl23", 7688), ("radioUloFlowAl24", 7689), ("radioUloFlowAl25", 7690), ("radioUloFlowAl26", 7691), ("radioUloFlowAl27", 7692), ("radioUloFlowAl28", 7693), ("radioUloFlowAl29", 7694), ("radioUloFlowAl30", 7695), ("radioUloFlowAl31", 7696), ("radioUloFlowAl32", 7697), ("radioInAlTst", 7698)) + NamedValues(("radioInAlWarn", 7699), ("radioInAlMin", 7700), ("radioInAlMaj", 7701), ("radioInAlCrit", 7702), ("radioAIS", 7703), ("radioAISlocalIns", 7704), ("radioAISlocalInsA", 7705), ("radioAISlocalInsAP", 7706), ("radioAISlocalInsB", 7707), ("radioAISlocalInsBP", 7708), ("radioAISOut", 7709), ("radioAlignmentFailure1", 7710), ("radioAlignmentFailure2", 7711), ("radioB1BERexc", 7712), ("radioBERexc", 7713), ("radioBERexcHSBY", 7714), ("radioCardFail", 7715), ("radioD2mismatch", 7716), ("radioDluFlow", 7717), ("radioIDUCF", 7719), ("radioIFSF", 7720), ("radioLine1HWp", 7721), ("radioLine10HWp", 7722), ("radioLine11HWp", 7723), ("radioLine12HWp", 7724), ("radioLine13HWp", 7725), ("radioLine14HWp", 7726), ("radioLine15HWp", 7727), ("radioLine16HWp", 7728), ("radioLine17HWp", 7729), ("radioLine18HWp", 7730), ("radioLine19HWp", 7731), ("radioLine2HWp", 7732), ("radioLine20HWp", 7733), ("radioLine21HWp", 7734), ("radioLine3HWp", 7735), ("radioLine4HWp", 7736), ("radioLine5HWp", 7737), ("radioLine6HWp", 7738), ("radioLine7HWp", 7739), ("radioLine8HWp", 7740), ("radioLine9HWp", 7741), ("radioLOF", 7742), ("radioLOFHSBY", 7743), ("radioLOS", 7744), ("radioR2IF", 7746), ("radioRefSwCh", 7747), ("radioRS1", 7748), ("radioRS2", 7749), ("radioRS3", 7750), ("radioRS4", 7751), ("radioRXHSBY", 7753), ("radioSWM", 7754), ("radioFECSDH", 7755), ("radioFECSDHHSBY", 7756), ("radioFECSDL", 7757), ("radioFECSDLHSBY", 7758), ("radioUHF", 7759), ("radioUloFlow", 7760), ("radioWSLOSTx", 7761), ("radioADMSideFail", 7762), ("radioPPMissing", 7763), ("radioOutBufFail", 7764), ("radioTUG31", 7765), ("radioTUG32", 7766), ("radioTUG33", 7767), ("radioIFFailure", 7768), ("radioClockLoSync", 7769), ("radioClockFail", 7770), ("radioVCXOFail", 7771), ("radioRxTxCF", 7772), ("radioSynthFail", 7773), ("radioIduOduIFLOS", 7775), ("radioIduOduIFLOSfHSBY", 7776), ("radioCardOp", 7777), ("radioMCFEthStatus", 7778), ("radioMCFQxIFFail", 7779), ("lossOfSignalPayload", 7780), ("gfpExtensionHeaderMismatch", 7781), ("powerSupply1Problem", 7782), ("powerSupply2Problem", 7783), ("powerSupply3Problem", 7784), ("powerSupply4Problem", 7785), ("voaThresholdCrossed", 7786), ("cardOverequipped", 7787), ("oscLossOfLock", 7788), ("moduleMissing", 7789), ("moduleNotCertified", 7799), ("lossOfSignalOSC", 7800), ("lossOfFrameOSC", 7801), ("excessiveBitErrorRatioOSC", 7802), ("degradedSignalOSC", 7803), ("serverSignalFailPayload", 7804), ("subrackOverequipped", 7805), ("subrackMissing", 7806), ("fanMajorProblem", 7807), ("fanMinorProblem", 7808), ("targetNEFailure", 7809), ("dedicatedPrimaryGatewayFailure", 7810), ("dedicatedSecondaryGatewayFailure", 7811), ("notificationQueueOverflow", 7812), ("requestQueueOverflow", 7813), ("lofEgress", 7814), ("serverSignalFailEgress", 7815), ("syncFailEgress", 7816), ("mibFailure", 7817), ("apsMismatch", 7818), ("serverSignalFailOSC", 7819), ("pathTraceMismatchEgress", 7820), ("radioCPSCardFail", 7821), ("radioBBSPIIntFail", 7822), ("radioBBI2CIntFail", 7823), ("radioACCESSSPIIntFail", 7824), ("radioMatDownloadFailure", 7825), ("radioMatSwNotAligned", 7826), ("radioMatSWMismatch", 7827), ("radioNoActiveCSU", 7828), ("radioCSUSyncFailed", 7829), ("radioCUEthernetSwicthFail", 7830), ("radioCsu1ClockFail", 7831), ("radioCsu2ClockFail", 7832), ("radioCsu1GPSClockFail", 7833), ("radioCsu2GPSClockFail", 7834), ("radioConfigFail", 7835), ("radioClockSourceFail", 7836), ("radioConfigCardStatus", 7837), ("radioConfigDbError", 7838), ("radioServiceFlowsNotAlignedWithProfiles", 7839), ("radioServiceFlowsAlignmentAlrm", 7840), ("radioExceedingProvisionedServiceFlows", 7841), ("radioCUProtectionLost", 7842), ("radioLossOfCarrier", 7843), ("laserSafetyBusFailure", 7844), ("compactFlashFailure", 7845), ("tifSensorActive", 7846), ("thresholdCVDE15", 7847), ("thresholdCVDE15FarEnd", 7848), ("thresholdCVDE24", 7849), ("thresholdCVDE24FarEnd", 7850), ("thresholdBadFramesRx15", 7851), ("thresholdBadFramesRx15FarEnd", 7852), ("thresholdBadFramesRx24", 7853), ("thresholdBadFramesRx24FarEnd", 7854), ("thresholdBadFramesTx15", 7855), ("thresholdBadFramesTx15FarEnd", 7856), ("thresholdBadFramesTx24", 7857), ("thresholdBadFramesTx24FarEnd", 7858), ("thresholdGoodFramesRx15", 7859), ("thresholdGoodFramesRx15FarEnd", 7860), ("thresholdGoodFramesRx24", 7861), ("thresholdGoodFramesRx24FarEnd", 7862), ("thresholdGoodFramesTx15", 7863), ("thresholdGoodFramesTx15FarEnd", 7864), ("thresholdGoodFramesTx24", 7865), ("thresholdGoodFramesTx24FarEnd", 7866), ("thresholdGoodOctetsRx15", 7867), ("thresholdGoodOctetsRx15FarEnd", 7868), ("thresholdGoodOctetsRx24", 7869), ("thresholdGoodOctetsRx24FarEnd", 7870), ("thresholdGoodOctetsTx15", 7871), ("thresholdGoodOctetsTx15FarEnd", 7872), ("thresholdGoodOctetsTx24", 7873), ("thresholdGoodOctetsTx24FarEnd", 7874), ("thresholdBadGFPSuperblocks15", 7875), ("thresholdBadGFPSuperblocks15FarEnd", 7876), ("thresholdBadGFPSuperblocks24", 7877), ("thresholdBadGFPSuperblocks24FarEnd", 7878), ("thresholdDiscardedGFPframes15", 7879), ("thresholdDiscardedGFPframes15FarEnd", 7880), ("thresholdDiscardedGFPframes24", 7881), ("thresholdDiscardedGFPframes24FarEnd", 7882), ("thresholdBERavg15", 7883), ("thresholdBERavg15FarEnd", 7884), ("thresholdBERavg24", 7885), ("thresholdBERavg24FarEnd", 7886), ("thresholdMaxBER15FarEnd", 7887), ("thresholdMaxBER24FarEnd", 7888), ("thresholdPLavg15", 7889), ("thresholdPLavg15FarEnd", 7890), ("thresholdPLavg24", 7891), ("thresholdPLavg24FarEnd", 7892), ("thresholdPLmax15", 7893), ("thresholdPLmax15FarEnd", 7894), ("thresholdPLmax24", 7895), ("thresholdPLmax24FarEnd", 7896), ("thresholdPLmin15", 7897), ("thresholdPLmin15FarEnd", 7898), ("thresholdPLmin24", 7899), ("thresholdPLmin24FarEnd", 7900), ("frequencyMismatchEQPT", 7901), ("oSCLaserTxFail", 7902), ("txDegradeEQPT", 7903), ("txFailEQPT", 7904), ("alarmIndicationSignal", 8000), ("lineAlarmIndicationSignal", 8001), ("msAlarmIndicationSignal", 8002), ("pathAlarmIndicationSignal", 8003), ("servicePathAlarmIndicationSignal", 8004), ("tuAlarmIndicationSignal", 8005), ("auAlarmIndicationSignal", 8006), ("plannedCardMismatch", 8007), ("plannedCardMissing", 8008), ("rxLossOfClock", 8009), ("txClockFailure", 8010), ("dccLinkDown2", 8011), ("rxElasticStoreOverflow", 8012), ("txElasticStoreOverflow", 8013), ("externalFanFailure", 8014), ("fanfailure", 8015), ("fanfailure1", 8016), ("fanfailure2", 8017), ("fanfailure3", 8018), ("fanPowerSupplyFail1", 8019), ("fanPowerSupplyFail2", 8020), ("felinkDown", 8021), ("fusefail1", 8022), ("fusefail2", 8023), ("gfpLossOfCharacterSync", 8024), ("gfpLossofClientSignal", 8025), ("gfpLossOfFrameDelimiter", 8026), ("gfpPayloadTypeMismatch", 8027), ("gfptclientSignalFailure", 8028), ("internalHWFailure", 8029), ("laserBiasEndOfLife", 8030), ("laserdegrade", 8031), ("laserTecEndOfLife", 8032), ("lasertempOutOfRange", 8033), ("lossOfFrame", 8034), ("servicePathLossOfFrame", 8035), ("lossOfFrameAtOtu", 8036), ("lossOfMultiframe", 8037), ("tuLossOfMultiframe", 8038), ("auLossOfPointer", 8039), ("lossOfPointer", 8040), ("tuLossOfPointer", 8041), ("lossOfSignal", 8042), ("lossofLinkPulse", 8043), ("lossOfOpticalInputPower", 8044), ("lossOfOpticalOutputPower", 8045), ("lossOfSynchronization", 8046), ("multipleFanFailure", 8047), ("opticalInputPowerTooHigh", 8048), ("opticalInputPowerTooLow", 8049), ("sectionTraceInconsistency", 8050), ("rsTraceMismatch", 8051), ("sectiontraceMismatch", 8052), ("plugInSfpMismatch", 8053), ("plugInSfpMissing", 8054), ("plugInSfpNotAdvaApproved", 8055), ("powersupplyFailure", 8056), ("protectionGroupProtectionFailure", 8057), ("protectionGroupprotectionMismatch", 8058), ("provisionerror", 8059), ("hpRemoteDefetcIndication", 8060), ("lineRemoteDefetcIndication", 8061)) + NamedValues(("lpRemoteDefectIndication", 8062), ("msRemoteDefectIndication", 8063), ("pathRemoteDefectIndication", 8064), ("servicePathRemoteDefectIndication", 8065), ("rxsignalOverload", 8066), ("msSignalDegraded", 8067), ("pathSignalDegraded", 8068), ("sectionSignalDegraded", 8069), ("hpPayloadMismatch", 8070), ("lpPayloadMismatch", 8071), ("pathPayloadMismatch", 8072), ("servicePathPayloadMismatch", 8073), ("lossOfSequence", 8074), ("subModuleTempOutOfRange", 8075), ("switcherror", 8076), ("externalInput1", 8077), ("externalInput2", 8078), ("externalInput3", 8079), ("externalInput4", 8080), ("externalInput5", 8081), ("cv15minThresholdCrossed", 8082), ("cv24hThresholdCrossed", 8083), ("es15minThresholdCrossed", 8084), ("es24hThresholdCrossed", 8085), ("highCurrentThresholdCrossed", 8086), ("highestCurrentThresholdCrossed", 8087), ("highestOipThresholdCrossed", 8088), ("highestOopThresholdCrossed", 8089), ("highestTempThresholdCrossed", 8090), ("highestVoltageThresholdCrossed", 8091), ("highOipThresholdCrossed", 8092), ("highOopThresholdCrossed", 8093), ("highTempThresholdCrossed", 8094), ("highVoltageThresholdCrossed", 8095), ("lowCurrentThresholdCrossed", 8096), ("lowestCurrentThresholdCrossed", 8097), ("lowestOipThresholdCrossed", 8098), ("lowestOopThresholdCrossed", 8099), ("lowestTempThresholdCrossed", 8100), ("lowestVoltageThresholdCrossed", 8101), ("lowOipThresholdCrossed", 8102), ("lowOopThresholdCrossed", 8103), ("lowTempThresholdCrossed", 8104), ("lowVoltageThresholdCrossed", 8105), ("sefs15minThresholdCrossed", 8106), ("sefs24hThresholdCrossed", 8107), ("ses15minThresholdCrossed", 8108), ("ses24hThresholdCrossed", 8109), ("uas15minThresholdCrossed", 8110), ("uas24hThresholdCrossed", 8111), ("txLaserFailure", 8112), ("hpUnequipped", 8113), ("lpUnequipped", 8114), ("pathUnequipped", 8115), ("servicePathUnequipped", 8116), ("radioTimeServerMissing", 8117), ("radioPrioritySessionGranted", 8118), ("radioEndofCableCompensation", 8119), ("radioNOIF140", 8120), ("radioFPGAIncompatibility", 8121), ("radioDownloadRequest", 8122), ("radioStandbySwitch", 8123), ("radioIfRx", 8124), ("radioOduIf", 8125), ("radioClock1LoSync", 8126), ("radioClock2LoSync", 8127), ("radioIduOduFerfHWProt", 8128), ("lossofCommExtShelf", 8129), ("linkFailure", 8130), ("sfpAbsent", 8131), ("imaGrpGrtMismatch", 8132), ("imaGrpCfgAbt", 8133), ("imaGrpInsufLnks", 8134), ("imaGrpStartupFe", 8135), ("imaGrpCfgAbtFe", 8136), ("imaGrpInsufLnksFe", 8137), ("imaGrpBlkFe", 8138), ("imaLnkLcd", 8139), ("imaLnkLif", 8140), ("imaLnkLods", 8141), ("imaLnkRdi", 8142), ("imaLnkTxmc", 8143), ("imaLnkRxmc", 8144), ("imaLnkTxuuFe", 8145), ("imaLnkRxuuFe", 8146), ("sCSWVersionMismatch", 8147), ("radioAGCOFFinActiveCondition", 8148), ("radioALCOFFinActiveCondition", 8149), ("radioBipolarSwitchRequest", 8150), ("radioBSWForcedSwitch", 8151), ("radioBSWLockout", 8152), ("radioBSWManualSwitch", 8153), ("radioBSWTraffictoProtection", 8154), ("radioCarrierWaveinActiveCondition", 8155), ("radioCNCTLossofClockSignal6MHz", 8156), ("radioCNCTLossOfProtectionSignal", 8157), ("radioEcuUnitRemoved", 8158), ("radioEPSOFFinActiveCondition", 8159), ("radioExternalReferenceClockCutoff", 8160), ("radioForcedSwitch", 8161), ("radioFrequencyMeasurement", 8162), ("radioLoopback", 8163), ("radioManualSwitch", 8164), ("radioManualSwitchState", 8165), ("radioNetworkReferenceClockQualityDown", 8166), ("radioRemoteCardIdentifier", 8167), ("radioRSPIUnavailableStateRP", 8168), ("radioRXLocalInternalClock", 8169), ("radioSDDADEinActiveCondition", 8170), ("radioSynchStatusChanged", 8171), ("radioUASFarEndBlockError", 8172), ("radioUnavailableStateB1", 8173), ("radioUnavailableStateB2", 8174), ("radioUnipolarSwitchRequest", 8175), ("radioUserChannelLossofSignal", 8176), ("radioUSWForcedSwitch", 8177), ("radioUSWLockout", 8178), ("radioUSWManualSwitch", 8179), ("radioUSWTraffictoProtection", 8180), ("radioWaySideRFCOHLOS", 8181), ("radioWaySideSOHLOS", 8182), ("radioWorkingEquipSwitchedToProtection", 8183), ("radioFanRequired", 8184), ("radioLocalSync", 8185), ("communicationFailure", 8186), ("unauthorizedAccessAttempt", 8187), ("pllUnlock", 8188), ("radioODUUnsupportedDynamicModulation", 8189), ("radioModeAlign", 8190), ("radioBoostOnlevel1", 8191), ("radioBoostOnlevel2", 8192), ("radioBoostOnlevel3", 8193), ("radioBoostOnlevel4", 8194), ("radioBoostOnlevel5", 8195), ("radioLocalAISInsertionOnHalfPayload", 8196), ("radioTxONforProtectingODUAlarm", 8197), ("noFreeLowOrderCapacity", 8198), ("lowOrderCapacityMismatch", 8199), ("radioOperationalStatusQ0", 8200), ("radioOperationalStatusQ1", 8201), ("radioOperationalStatusF", 8202), ("radioOperationalStatusVbus", 8203), ("radioOperationalStatusOSI1", 8204), ("radioOperationalStatusOSI2", 8205), ("radioOperationalStatusOSI3", 8206), ("radioOperationalStatusOSI4", 8207), ("radioOperationalStatusOSI5", 8208), ("radioOperationalStatusOSI6", 8209), ("radioOperationalStatusOSI7", 8210), ("radioOperationalStatusOSI8", 8211), ("radioOperationalStatusOSI9", 8212), ("radioOperationalStatusOSI10", 8213), ("radioOperationalStatusOSI11", 8214), ("radioOperationalStatusOSI12", 8215), ("radioOperationalStatusOSI13", 8216), ("radioOperationalStatusOSI14", 8217), ("radioOperationalStatusOSI15", 8218), ("radioOperationalStatusOSI16", 8219), ("radioSNMPAuthenticationFailure", 8220), ("radioSFPMissing", 8221), ("radioUnsupportedSFPType", 8222), ("radioEthSwitchGbEthPortLOS", 8223), ("radioSFPTxFault", 8224), ("radioEthSwitchLAN1PortLinkNotPresent", 8225), ("radioEthSwitchLAN2PortLinkNotPresent", 8226), ("radioEthSwitchLAN3PortLinkNotPresent", 8227), ("radioEthSwitchGbEthPortLinkNotPresent", 8228), ("radioLastTemporizedOperationFail", 8229), ("radioEthSwitchTrunk1CapacityMismatch", 8230), ("radioEthSwitchTrunk2CapacityMismatch", 8231), ("radioExpectedSVRMismatch", 8232), ("radioBER4", 8233), ("radioBER5", 8234), ("radioBER6", 8235), ("radioBER7", 8236), ("radioFaultinEquipment", 8237), ("radioForcedControlOn", 8238), ("radioFaultinInstallationofEquipment", 8239), ("radioFaultinChangeOverFunction", 8240), ("radioEquipmentDoorOpen", 8241), ("radio15minG826ESThresholdCrossed", 8242), ("radio15minG826SESThresholdCrossed", 8243), ("radio15minG826BBEThresholdCrossed", 8244), ("radioUnavailability", 8245), ("radioTestModeActive", 8246), ("radioTestGeneratorOn", 8247), ("radioFaultInOscillator", 8248), ("radioOperatingError", 8249), ("radioRealTimeLostFault", 8250), ("radioConfigurationError", 8251), ("radioLicenceExpired", 8252), ("radioLicenceWillExpireinNearFuture", 8253), ("radioLicenceforFeatureIsNotAvailable", 8254), ("radioFarEndAlarm", 8255), ("radioBufferOverflow", 8256), ("radioFaultinUnit", 8257), ("radioActiveAlarmPoint", 8258), ("radioNoFreeChannel", 8259), ("radioIncomingSignalLevelIncorrect", 8260), ("radioNoIncomingRadioSignal", 8261), ("radioCorruptData", 8262), ("radioNoOutgoingRadioSignal", 8263), ("radioCommFailure", 8264), ("radioCardRemoved", 8265), ("radioCardInstalled", 8266), ("radioUnlock", 8267), ("radioRSLLow", 8268), ("radioSynthesizerUnlock", 8269), ("radioSNRLow", 8270), ("radioLowBatteryVoltage", 8271), ("radioRemotefaultEast", 8272), ("radioPowerUp", 8273), ("radioReboot", 8274), ("radioNTPUpdate", 8275), ("radioE1Disconnected", 8276), ("radioRemoteFaultWest", 8277), ("radioEncryptionFailure", 8278), ("radioEncryptionOneway", 8279), ("radioExternalAlarm1", 8280), ("radioExternalAlarm2", 8281), ("radioExternalAlarm3", 8282), ("radioExternalAlarm4", 8283), ("radioRemoteIDUAlarm", 8284), ("radioRemoteIDUExternalAlarm1", 8285), ("radioRemoteIDUExternalAlarm2", 8286), ("radioRemoteIDUExternalAlarm3", 8287), ("radioRemoteIDUExternalAlarm4", 8288), ("radioBERTLbTestMode", 8289), ("radioProtectionSwitchFailure", 8290), ("radioATPCTxatMaxPower", 8291), ("radioE1TestMode", 8292), ("radioTestMode", 8293), ("radioLossOfClock", 8294), ("radioRSB1Defect", 8295), ("radioRSLossOfFrame", 8296), ("radioRSOutOfFrame", 8297), ("radioMSRemoteError", 8298), ("radioMSRemoteDefect", 8299), ("radioMSB2Defect", 8300), ("radioAUAIS", 8301), ("radioAULossOfPointer", 8302), ("radioHPUnequipped", 8303), ("radioHPTraceIdentifierMismatch", 8304), ("radioHPRemoteError", 8305), ("radioHPRemoteDefect", 8306), ("radioHPPathLabelMismatch", 8307), ("radioHPB3Defect", 8308), ("radioTULossOfMultiframe", 8309), ("radioTUAIS", 8310), ("radioTULossOfPointer", 8311), ("radioLPUnequipped", 8312), ("radioLPTraceIdentifierMismatch", 8313), ("radioLPRemoteError", 8314), ("radioLPRemoteDefect", 8315), ("radioLPPathLabelMismatch", 8316)) + NamedValues(("radioLPRemoteFault", 8317), ("radioLPBIP2Defect", 8318), ("radioLinkReconfigurationFailure", 8319), ("radioFPGAProgrammingFailure", 8320), ("radioReceiveProtectionSwitchFailure", 8321), ("radioPDHProtectionSwitch", 8322), ("radioSFPModuleInstalled", 8323), ("radioSFPModuleRemoved", 8324), ("radioSFPModuleTxFault", 8325), ("radioSFPPayloadDisconnected", 8326), ("radioEthernetDisconnected", 8327), ("radioODUModeNotAuthorized", 8328), ("radioIDUModeNotAuthorized", 8329), ("radioOpticalAlarm1", 8330), ("radioOpticalAlarm2", 8331), ("radioOpticalAlarm3", 8332), ("radioOpticalAlarm4", 8333), ("radioGbEthAlarm1", 8334), ("radioGbEthAlarm2", 8335), ("radioGbEthAlarm3", 8336), ("radioGbEthAlarm4", 8337), ("radioACMSwitchUpper", 8338), ("radioACMSwitchLower", 8339), ("radioOvercurrentUndercurrentODUPSCondition", 8340), ("radioSerialNumberMemoryKeywithmismatchingcontent", 8341), ("radioSystemTypeMemoryKeywithmismatchingcontent", 8342), ("radioPowerSupplytoODUFailure", 8343), ("radioUNIShutdownCCMDisabled", 8344), ("radioIDUsmisconfiguration", 8345), ("radioProtectionManualOperation", 8346), ("radioProtectionSystemFailure", 8347), ("radioProtectionSelfTestFailure", 8348), ("radioProtectionSoftwareSwitchNotAllowed", 8349), ("radioPortSpeedUnderLimiter", 8350), ("radioPortSpeedUnderCIRSum", 8351), ("radioServiceStatusDown", 8352), ("radioServiceCCMLoss", 8353), ("radioUNIShutdown", 8354), ("radioPWOperationalStatusDown", 8355), ("radioPWRemotePacketLoss", 8356), ("radioELPSProtectionPathFailure", 8357), ("radioELPSWorkingPathFailure", 8358), ("radioELPSAPSSwitchFailed", 8359), ("radioELPSMismatch", 8360), ("radioIUOUCableE1NumberOverflow", 8361), ("radioCardAbsent", 8362), ("radioCCMforUNIShutdownDisabled", 8363), ("radioTxRxE1NumberMismatch", 8364), ("radioMemoryKeyExtracted", 8365), ("radioNEOverheating", 8366), ("radioOpticalSFPLossOfSignal", 8367), ("radioOpticalSFPTXFault", 8368), ("radioPortFailure", 8369), ("radioSourceClockDeteriorate", 8371), ("radioSignalDegrade", 8372), ("radioJ2TraceIdentifierMismatch", 8374), ("radioLoopProtectionE1AIS", 8375), ("radioTXPowerAlarm", 8376), ("radioProtectionHSBYConfigurationError", 8377), ("radioProtectionModeMismatchinColocatedODU", 8378), ("radioIDUContinuityCheckLoss", 8379), ("radioColocatedMEPState", 8380), ("radioOneSynchSourceDown", 8381), ("radioSSMMissing", 8382), ("radioCableInterfaceNotHybridIDU", 8383), ("radioCableInterfacePacketDischarging", 8384), ("radioCableInterfacePortMauStatusDown", 8385), ("radioODUODUPortMauStatusDown", 8386), ("radioODUODUPortOperationalstatusdown", 8387), ("radioATPCautodisabled", 8388), ("radioHighBER", 8389), ("radioConfigurationNotSupported", 8390), ("radioWrongRoleorPriorityConfiginPairedODUGroup", 8391), ("radioSystemTypeMismatchinPairedODUGroup", 8392), ("radioFragmentationOperationalStatus", 8393), ("radioDCCFailure", 8394), ("radioB2computedBERthreshold", 8395), ("radioLossofPointerTX", 8396), ("radioAISTX", 8397), ("rmtLOS", 8700), ("rmtLOF", 8701), ("rmtOOF", 8702), ("rmtRSTIM", 8703), ("rmtRSEXC", 8704), ("rmtRSDEG", 8705), ("rmtMSAIS", 8706), ("rmtMSRDI", 8707), ("rmtMSEXC", 8708), ("rmtMSDEG", 8709), ("rmtAUAIS", 8710), ("rmtAULOP", 8711), ("rmtHPTIM", 8712), ("rmtHPUNEQ", 8713), ("rmtHPPLM", 8714), ("rmtHPRDI", 8715), ("rmtHPEXC", 8716), ("rmtHPDEG", 8717), ("rmtTULOP", 8718), ("rmtTULOM", 8719), ("rmtTUAIS", 8720), ("rmtLPTIM", 8721), ("rmtLPUNEQ", 8722), ("rmtLPPLM", 8723), ("rmtLPRDI", 8724), ("rmtLPEXC", 8725), ("rmtLPDEG", 8726), ("rmtKByteMismatch", 8727), ("rmtPAIS", 8728), ("rmtLsrMisMatch", 8729), ("rmtLsrOffLine", 8730), ("rmtPKGFAIL", 8731), ("rmtPKGTYPE", 8732), ("rmtPKGREMOVED", 8733), ("rmtSYSLTI", 8734), ("rmtSYSLTO", 8735), ("rmtSYNCLOS", 8736), ("rmtSYNCLOF", 8737), ("rmtSYNCAIS", 8738), ("rmtSYNCBAD", 8739), ("rmtSYNCSSMMismatch", 8740), ("rmtPTPLOT", 8741), ("rmtPTPLOS", 8742), ("rmtPowerFail", 8743), ("rmtHighTemp", 8744), ("rmtLowTemp", 8745), ("rmtFANFAIL", 8746), ("rmtELinkFail", 8747), ("rmtSWPKG-MISMATCH", 8748), ("rmtHighSysMem", 8749), ("rmtHighRootfs", 8750), ("rmtHighAppdisk", 8751), ("rmtAIS", 8752), ("rmtRDI", 8753), ("rmtLOC", 8754), ("rmtLCK", 8755), ("rmtMismerge", 8756), ("rmtUnexpMep", 8757), ("rmtUnexpPrd", 8758), ("rmtUnexpMel", 8759), ("rmtCSF", 8760), ("rmtAPSMismatch", 8761), ("rmtLOPS", 8762), ("rmtTSF", 8763), ("rmtSlotConfigError", 8764), ("rmtPKGNOTREADY", 8765), ("rmtCES-RDI", 8766), ("rmtCES-AIS", 8767), ("rmtBUSERROR", 8768), ("rmtOUTSIDEALM1", 8769), ("rmtOUTSIDEALM2", 8770), ("rmtOUTSIDEALM3", 8771), ("rmtOUTSIDEALM4", 8772), ("rmtOUTSIDEALM5", 8773), ("rmtOUTSIDEALM6", 8774), ("rmtOUTSIDEALM7", 8775), ("rmtOUTSIDEALM8", 8776), ("rmtARP-REACH-MAX", 8777), ("rmtSD", 8778), ("rmtSF", 8779), ("rmtONU-MISMATCH", 8780), ("rmtXCON", 8781), ("rmtERROR-CCM", 8782), ("rmtSomeRDI", 8783), ("rmtSomeRmepCCM", 8784), ("rmtPTSF-lossSync", 8785), ("rmtPTSF-lossAnnounce", 8786), ("rmtTOD-MonitorAlarm", 8787), ("rmtAppdiskErr", 8788), ("rmtSSF", 8789), ("rmtSSD", 8790), ("rmtSYNC-Low-QL", 8791), ("rmtEthLpb", 8792), ("rmtTNL-SD", 8793), ("rmtTNL-SF", 8794), ("otnLosAlarm", 9000), ("otnLofAlarm", 9001), ("otnLomAlarm", 9002), ("otnWavelengthlockAlarm", 9003), ("otnOtuAisAlarm", 9004), ("otnOtuBdiAlarm", 9005), ("otnOtuTtimAlarm", 9006), ("otnOtuIaeAlarm", 9007), ("otnOtuSdAlarm", 9008), ("otnOtuSfAlarm", 9009), ("otnOtuFecExcessiveErrsAlarm", 9010), ("otnOtuFecDegradedErrsAlarm", 9011), ("otnOtuBbeThreholdAlarm", 9012), ("otnOtuEsThreholdAlarm", 9013), ("otnOtuSesThreholdAlarm", 9014), ("otnOtuUasThreholdAlarm", 9015), ("otnOduAisAlarm", 9016), ("otnOduOciAlarm", 9017), ("otnOduLckAlarm", 9018), ("otnOduBdiAlarm", 9019), ("otnOduTtimAlarm", 9020), ("otnOduSdAlarm", 9021), ("otnOduSfAlarm", 9022), ("otnOduRxApsChange", 9023), ("otnOduBbeThreholdAlarm", 9024), ("otnOduEsThreholdAlarm", 9025), ("otnOduSesThreholdAlarm", 9026), ("otnOduUasThreholdAlarm", 9027), ("otnOpuPMTAlarm", 9028), ("sFWU", 9100), ("sFWAZW", 9101), ("sFWZAW", 9102), ("sFWAZP", 9103), ("sFWZAP", 9104), ("sFPU", 9105), ("sFPAZW", 9106), ("sFPZAW", 9107), ("sFPAZP", 9108), ("sFPZAP", 9109), ("sMWU", 9110), ("sMWAZW", 9111), ("sMWZAW", 9112), ("sMWAZP", 9113), ("sMWZAP", 9114), ("sMPU", 9115), ("sMPAZW", 9116), ("sMPZAW", 9117), ("sMPAZP", 9118), ("sMPZAP", 9119), ("sCU", 9120), ("sCAZW", 9121), ("sCZAW", 9122), ("sCAZP", 9123), ("sCZAP", 9124), ("airCompressorFail", 9200), ("airConditioningFail", 9201), ("airDryerFail", 9202), ("bampFail1", 9203), ("bampFail2", 9204), ("bampFail3", 9205), ("bampFail4", 9206), ("bampWarn1", 9207), ("bampWarn2", 9208), ("bampWarn3", 9209), ("bampWarn4", 9210), ("batteryDischarg", 9211), ("batteryFail", 9212), ("coolingFanFail", 9213), ("centralizedPowerMajor", 9214), ("centralizedPowerMinor", 9215), ("craFail1", 9216), ("craFail2", 9217), ("craFail3", 9218), ("craFail4", 9219), ("craWarn1", 9220), ("craWarn2", 9221), ("craWarn3", 9222), ("craWarn4", 9223), ("engineFail", 9224), ("engineOperating", 9225), ("standbyEngineTransfer", 9226)) + NamedValues(("expGas", 9227), ("fireDetectorFail", 9228), ("tlFire", 9229), ("tlFlood", 9230), ("fuelLeak", 9231), ("fuseFail", 9232), ("gasAlarm", 9233), ("generatorFail", 9234), ("cEVHatchFail", 9235), ("highAirflow", 9236), ("highHumid", 9237), ("highTemp", 9238), ("tlHighWater", 9239), ("intruder", 9240), ("secADSLVoltageDisc", 9241), ("lowBatteryVoltage", 9242), ("tlLowFuel", 9243), ("lowHumid", 9244), ("tlLowCablePressure", 9245), ("lowTemp", 9246), ("tlLowWater", 9247), ("miscellaneous", 9248), ("nirFail1", 9249), ("nirFail2", 9250), ("nirFail3", 9251), ("nirFail4", 9252), ("nirWarn1", 9253), ("nirWarn2", 9254), ("nirWarn3", 9255), ("nirWarn4", 9256), ("openDoor", 9257), ("comPowerFailure", 9258), ("powerSupplyMajor", 9259), ("powerSupplyMinor", 9260), ("pumpFailure", 9261), ("rectifierFail", 9262), ("rectifierHighVoltage", 9263), ("rectifierLowVoltage", 9264), ("rectifierPowerFailADSL", 9265), ("rectifierPowerFailTrans", 9266), ("rectifierPowerFailDCL", 9267), ("commACFail", 9268), ("acPowerLoss", 9269), ("retrieveStdbyEng", 9270), ("tlSmoke", 9271), ("highLowTemperature", 9272), ("tlToxicGas", 9273), ("tRepeater", 9274), ("ventSystemFailure", 9275), ("thresholdBCPKT15", 9276), ("thresholdBCPKT24", 9277), ("thresholdBEFEC15", 9278), ("thresholdBEFEC24", 9279), ("thresholdBERFEC15", 9280), ("thresholdBERFEC24", 9281), ("thresholdCRCAE15", 9282), ("thresholdCRCAE24", 9283), ("thresholdCVOTU15", 9284), ("thresholdCVOTU24", 9285), ("thresholdCVS15", 9286), ("thresholdCVS24", 9287), ("thresholdDELAYODUHT15", 9288), ("thresholdDELAYODUHT24", 9289), ("thresholdDELAYODULT15", 9290), ("thresholdDELAYODULT24", 9291), ("thresholdDELAYODUTHT15", 9292), ("thresholdDELAYODUTHT24", 9293), ("thresholdDELAYODUTLT15", 9294), ("thresholdDELAYODUTLT24", 9295), ("thresholdDGDHT15", 9296), ("thresholdDGDHT24", 9297), ("thresholdDROP15", 9298), ("thresholdDROP24", 9299), ("thresholdEBODU15", 9300), ("thresholdEBODU24", 9301), ("thresholdEBODUT15", 9302), ("thresholdEBODUT24", 9303), ("thresholdEBOTU15", 9304), ("thresholdEBOTU24", 9305), ("thresholdESODU15", 9306), ("thresholdESODU24", 9307), ("thresholdESODUT15", 9308), ("thresholdESODUT24", 9309), ("thresholdESOTU15", 9310), ("thresholdESOTU24", 9311), ("thresholdESS15", 9312), ("thresholdESS24", 9313), ("thresholdFRAG15", 9314), ("thresholdFRAG24", 9315), ("thresholdJABR15", 9316), ("thresholdJABR24", 9317), ("thresholdLOSS15", 9318), ("thresholdLOSS24", 9319), ("thresholdMCPKT15", 9320), ("thresholdMCPKT24", 9321), ("thresholdOPRHT15", 9322), ("thresholdOPRHT24", 9323), ("thresholdOPRLT15", 9324), ("thresholdOPRLT24", 9325), ("thresholdOSPKT15", 9326), ("thresholdOSPKT24", 9327), ("thresholdPKT15", 9328), ("thresholdPKT24", 9329), ("thresholdSE15", 9330), ("thresholdSE24", 9331), ("thresholdSEFSS15", 9332), ("thresholdSEFSS24", 9333), ("thresholdSESODU15", 9334), ("thresholdSESODU24", 9335), ("thresholdSESODUT15", 9336), ("thresholdSESODUT24", 9337), ("thresholdSESOTU15", 9338), ("thresholdSESOTU24", 9339), ("thresholdSESS15", 9340), ("thresholdSESS24", 9341), ("thresholdUASODU15", 9342), ("thresholdUASODU24", 9343), ("thresholdUASODUT15", 9344), ("thresholdUASODUT24", 9345), ("thresholdUASOTU15", 9346), ("thresholdUASOTU24", 9347), ("thresholdUBEFEC15", 9348), ("thresholdUBEFEC24", 9349), ("thresholdUSPKT15", 9350), ("thresholdUSPKT24", 9351), ("thresholdUTILHT15", 9352), ("thresholdUTILHT24", 9353), ("thresholdBBERS15", 9354), ("thresholdBBERS24", 9355), ("thresholdESRS15", 9356), ("thresholdESRS24", 9357), ("thresholdOFSRS15", 9358), ("thresholdOFSRS24", 9359), ("thresholdSESRS15", 9360), ("thresholdSESRS24", 9361), ("thresholdBBEMS15", 9362), ("thresholdBBEMS24", 9363), ("thresholdCVL15", 9364), ("thresholdCVL24", 9365), ("thresholdESL15", 9366), ("thresholdESL24", 9367), ("thresholdESMS15", 9368), ("thresholdESMS24", 9369), ("thresholdFCL15", 9370), ("thresholdFCL24", 9371), ("thresholdFCMS15", 9372), ("thresholdFCMS24", 9373), ("thresholdLBCHT15", 9374), ("thresholdLBCHT24", 9375), ("thresholdLBCLT15", 9376), ("thresholdLBCLT24", 9377), ("thresholdLTHT15", 9378), ("thresholdLTHT24", 9379), ("thresholdLTLT15", 9380), ("thresholdLTLT24", 9381), ("thresholdSESMS15", 9382), ("thresholdSESMS24", 9383), ("thresholdUASL15", 9384), ("thresholdUASL24", 9385), ("thresholdUASMS15", 9386), ("thresholdUASMS24", 9387), ("thresholdSESL15", 9388), ("thresholdSESL24", 9389), ("remoteLinkFailure", 9390), ("tellabsLayer2ResLow", 9391), ("tellabsLayer2ResUnavail", 9392), ("tellabsAdminUnitLossOfPointer", 9393), ("tellabsAdminUnitAlarmIndicationSignal", 9394), ("tellabsHOPathBersd", 9395), ("tellabsHOPathBersf", 9396), ("tellabsHOPathPlm", 9397), ("tellabsHOPathRfi", 9398), ("tellabsHOPathUneq", 9399), ("tellabsEthernetBersd", 9400), ("tellabsEthernetBersf", 9401), ("tellabsEthernetLinkFlap", 9402), ("tellabsEthernetRdi", 9403), ("failureOfProtocolReceive", 9404), ("memberNotDeskewable", 9405), ("tellabsEthernetRcvPlc", 9406), ("tellabsEthernetRcvTlc", 9407), ("tellabsEvcLoop", 9408), ("thresholdBBEHP15", 9409), ("thresholdBBEHP24", 9410), ("thresholdESHP15", 9411), ("thresholdESHP24", 9412), ("thresholdSESHP15", 9413), ("thresholdSESHP24", 9414), ("thresholdFCHP15", 9415), ("thresholdFCHP24", 9416), ("thresholdUASHP15", 9417), ("thresholdPJCDIFFP15", 9418), ("thresholdPJCDIFFP24", 9419), ("thresholdPJCSPDET15", 9420), ("thresholdPJCSPDET24", 9421), ("thresholdPJCSPGEN15", 9422), ("thresholdPJCSPGEN24", 9423), ("tellabsPowerFuseProblemA", 9424), ("tellabsPowerFuseProblemB", 9425), ("tellabsShNumberIncorrect", 9426), ("tellabsHighSpeedFan", 9427), ("tellabsInhAlm", 9428), ("tellabsThermalProblemUSS", 9429), ("tellabsThermalProblemNano", 9430), ("tellabsAISPath", 9431), ("tellabsBersdPath", 9432), ("tellabsBersfPath", 9433), ("tellabsLopPath", 9434), ("tellabsPlmPath", 9435), ("tellabsRfiPath", 9436), ("tellabsUnequippedPath", 9437), ("thresholdCVP15", 9438), ("thresholdCVP24", 9439), ("thresholdESP15", 9440), ("thresholdESP24", 9441), ("thresholdSESP15", 9442), ("thresholdSESP24", 9443), ("thresholdFCP15", 9444), ("thresholdFCP24", 9445), ("thresholdUASP15", 9446), ("thresholdUASP24", 9447), ("snmpEngineConnFailure", 9448), ("checkHECgfpFailure", 9449), ("payloadLengthIndicatorGfp", 9450), ("tellabsRemoteLinkFailure", 9451), ("sequenceMismatch", 9452), ("autoNegFail", 9453), ("tellabsThermalProblemPico", 9454), ("snmpTrapRegisterFailure", 9455), ("swUpgradeCommit", 9456), ("softwareExecPartial", 9457), ("softwareAbortProgress", 9458), ("softwareAbortFail", 9459), ("softwareAbortCompleted", 9460), ("thresholdCDLT15", 9461), ("thresholdCDHT15", 9462), ("thresholdCDLT24", 9463), ("thresholdCDHT24", 9464), ("thresholdOSNRLT15", 9465), ("thresholdOSNRLT24", 9466), ("tlabMACPortLinkFlappingNotif", 9467), ("tlabMACSDNotif", 9468), ("tlabMACSFNotif", 9469), ("tlabLAGInterfaceFailureNotif", 9470), ("tlabMACTRDIENotif", 9471), ("tlabMACLOSSYNCNotif", 9472), ("tlabMACLOSNotif", 9473), ("tlabMIEcfmdot1agRDICCMNotif", 9475), ("tlabMIEcfmdot1agRemoteMepCCMNotif", 9476), ("tlabMIEcfmdot1agErrorCCMNotif", 9477), ("tlabMIEcfmdot1agXconCCMNotif", 9478), ("fabCapacityDeficiency", 9479), ("tlabElpsProtectionTypeMismatchNotif", 9480), ("tlabElpsConfigurationMismatchNotif", 9481), ("tlabElpsLackOfResponseNotif", 9482)) + NamedValues(("tlabElpsProtectionGroupFailedNotif", 9483), ("tlabElpsFailureOfProtocolNotif", 9484), ("lossOfFrameDelineationGfp", 9485), ("payloadLabelMismatchGFP", 9486), ("fopNoResponse", 9487), ("fopProvisioningMismatch", 9488), ("linkAggregationControlProtocolFailure", 9489), ("backwardInLos", 9490), ("forwardInLos", 9491), ("forwardOscDitherLos", 9492), ("backwardOscDitherLos", 9493), ("lowEdfaInputPower", 9494), ("highBackReflectionPower", 9495), ("highLineOutputPower", 9496), ("lowLineOutputPower", 9497), ("shutdownAmbientTemperature", 9498), ("warningAmbientTemperature", 9499), ("oduPlm", 9500), ("oduMsim", 9501), ("otuLof", 9502), ("otuLom", 9503), ("otuTim", 9504), ("otuBdi", 9505), ("otuDeg", 9506), ("oduLofLom", 9507), ("oduAis", 9508), ("oduLck", 9509), ("oduOci", 9510), ("oduTim", 9511), ("oduBdi", 9512), ("oduDeg", 9513), ("lossOip", 9514), ("oopFail", 9515), ("ldFail", 9516), ("wControl", 9517), ("dcn2mLos", 9518), ("cardInitializationInProgress", 9519), ("dataRateMismatchGFP", 9520), ("unexpectedChannelIDGFP", 9521), ("outOfSequenceGFP", 9522), ("clientSignalFailLossOfCharacterSynchronisationGFP", 9523), ("noFramesReceivedGFP", 9524), ("latchOpen", 9525), ("sEF", 9526), ("accountExpiredDisabled", 9527), ("callFailure", 9528), ("otsRecoverMode", 9529), ("ramanGainProblem", 9530), ("ramanGainCritical", 9531), ("fanUnit1Failure", 9532), ("fanUnit2Failure", 9533), ("fanUnit3Failure", 9534), ("fanUnit4Failure", 9535), ("fanUnit5Failure", 9536), ("fanUnit6Failure", 9537), ("fanUnit7Failure", 9538), ("fanUnit8Failure", 9539), ("excessiveTempVariation", 9540), ("thresholdFcse15", 9541), ("thresholdFcse24", 9542), ("thresholdDf15", 9543), ("thresholdDf24", 9544), ("thresholdFcseAsap", 9545), ("thresholdDfAsap", 9546), ("thresholdDm", 9547), ("thresholdMaxDm", 9548), ("thresholdDmAsap", 9549), ("thresholdMaxDmAsap", 9550), ("reduceLogOverload", 9551), ("gfptClientSignalFailureSec", 9552), ("lossOfFrameDelineationSec", 9553), ("hcoc9Dcf", 9554), ("hcoc27Dcf", 9555), ("systemClockUnlock", 9556), ("xfpMismatch", 9557), ("xfpWavOffset", 9558), ("xfpWavSetError", 9559), ("portinLoopback", 9560), ("xconCCMdefect", 9561), ("errorCCMdefect", 9562), ("someRMEPCCMdefect", 9563), ("someRDIdefect", 9564), ("callSurvivabilityDegrade", 9565), ("neighborUnreachable", 9566), ("atmLcd", 9567), ("atmCcloc", 9568), ("atmVpais", 9569), ("atmVprdi", 9570), ("atmVploc", 9571), ("atmVcais", 9572), ("atmVcrdi", 9573), ("atmVcloc", 9574), ("atmLif", 9575), ("atmLods", 9576), ("atmRdiIma", 9577), ("atmTxMisConnected", 9578), ("atmRxMisConnected", 9579), ("atmTxUnusableFe", 9580), ("atmRxUnusableFe", 9581), ("atmStartupFe", 9582), ("atmConfigAborted", 9583), ("atmConfigAbortedFe", 9584), ("atmInsufficientLinks", 9585), ("atmInsufficientLinksFe", 9586), ("atmBlockedFe", 9587), ("atmGrTimingMismatch", 9588), ("sc-mib-sync", 9589), ("ospf-auth-key-exp", 9590), ("xfp-crossing-threshold", 9591), ("hocc-asic-failure", 9592), ("pumpsEol", 9593), ("pumpsShutdownTemperature", 9594), ("pumpsWarningTemperature", 9595), ("pwrSupplyFailure", 9596), ("aprShd", 9597), ("fiberDeteriorate", 9598), ("builtInTestFailed", 9599), ("oSCbandLos", 9600), ("powerSupplyFailure1U", 9601), ("fanFailure1U", 9602), ("powerAMissing", 9603), ("powerBMissing", 9604), ("constituentAttributeMismatch", 9605), ("partialLossOfCapacity", 9606), ("totalLossOfCapacity", 9607), ("tlabPktTpOamMepLDINotif", 9608), ("tlabPktTpOamMepLOCNotif", 9609), ("tlabPktTpOamMepMCNotif", 9610), ("tlabPktTpOamMepRDINotif", 9611), ("tlabPktTpOamMepUNPNotif", 9612), ("lAGprotectionNotAvailable", 9613), ("eLPSAPSMessageNotReceived", 9614), ("eLPSProtectionNotAvailable", 9615), ("eRPSvLANProtectionNotAvailable", 9616), ("failedRestorePacketDB", 9617), ("autoNegotiationFail", 9618), ("lossOfSignalInGFP", 9619), ("lossOfSyncInGFP", 9620), ("fabricConfigurationIsInvalid", 9621), ("softwareUpgradeActionRequired", 9622), ("radioNearendLOF", 9667), ("radioNearendLossOfSignal", 9668), ("radioNearendsendingLOFIndication", 9669), ("radioFarendsendingAIS", 9671), ("radioFarEndSendingTS16LOMF", 9672), ("radioNearEnddetectsatestcode", 9673), ("radioNearEndinUnavailableSignalState", 9674), ("radioNearendsendingAIS", 9675), ("radioNearEndSendingTS16LOMF", 9676), ("radioOperationalstatusDown", 9677), ("radioPrimaryclocksourcefailed", 9678), ("radioLossofinputsignal", 9679), ("radioLPG701OperationalstatusDown", 9680), ("radioLPG702OperationalstatusDown", 9681), ("radioLPG703OperationalstatusDown", 9682), ("radioLPG704OperationalstatusDown", 9683), ("radioLPG705OperationalstatusDown", 9684), ("radioLPG706OperationalstatusDown", 9685), ("radioLPG707OperationalstatusDown", 9686), ("radioLPG708OperationalstatusDown", 9687), ("radioLPG709OperationalstatusDown", 9688), ("radioLPG710OperationalstatusDown", 9689), ("radioLPG711OperationalstatusDown", 9690), ("radioLPG712OperationalstatusDown", 9691), ("radioLPG713OperationalstatusDown", 9692), ("radioLPG714OperationalstatusDown", 9693), ("radioLPG715OperationalstatusDown", 9694), ("radioIDUMEPOperationalStatus", 9695), ("radioProtectionMEPOperationalStatus", 9696), ("radioIDUMEPRemoteDefectIndication", 9697), ("radioProtectionMEPRemoteDefectIndication", 9698), ("radioProtectionMEPContinuityCheckLoss", 9699), ("radioLPGFailure", 9700), ("radioIDUMEPConfigurationError", 9701), ("radioProtectionMEPConfigurationError", 9702), ("radioLossofairflowfailure", 9703), ("radioFantraypulledout", 9704), ("radioModuleInsertedincorrectly", 9705), ("radioPowerSupplyOverheat", 9706), ("radioDeviceoverheat", 9707), ("radioDeviceunderheat", 9708), ("radioProbleminallpowersupplies", 9709), ("radioTXPowerSupplyFail", 9710), ("radioFan1failure", 9711), ("radioFan2failure", 9712), ("radioFan3failure", 9713), ("radioFan4failure", 9714), ("radioPower1InVoltageoutofrange", 9715), ("radioPower1OutProbleminPSoutput", 9716), ("radioModuleInsertedbutnotenabled", 9717), ("radioDryContactInput1", 9718), ("radioDryContactInput2", 9719), ("radioRxopticalpowerabovemaxthreshold", 9720), ("radioRxopticalpowerbelowminthreshold", 9721), ("radioAutonegspeedmismatchallocatedBWonport", 9722), ("radioCarrierEquipmentOutofService", 9723), ("radioPower2InVoltageoutofrange", 9724), ("radioPower2OutProbleminPSoutput", 9725), ("radioDryContactInput3", 9726), ("radioDryContactInput4", 9727), ("radioSoftwareSwitchNotAllowed", 9728), ("radioConfigdirectoryoversizelimit", 9729), ("radioCLIsecurityalert", 9730), ("radioIDUMEPContinuityCheckLoss", 9731), ("radioLPGConfigurationError", 9732), ("radioFarendLOF", 9733), ("radioFailure", 9734), ("radioLossofCableFrame", 9735), ("radioSignalLevelUnderThreshold", 9736), ("radioNotHybridIDU", 9737), ("radioColocatedODUCommunicationFailure", 9738), ("radioPacketsfromIDUDischargedbyODU", 9739), ("radioWrongRole-PriorityConfiguration", 9740), ("radioSystemTypeMismatchonColocatedODU", 9741), ("radioIDUCCMContinuityCheckLoss1plus1", 9742), ("radioProtectionCCMContinuityCheckLoss", 9743), ("radioIDUCCMPeerMEPStateDown", 9744), ("radioProtectionCCMPeerMEPStateDown", 9745), ("radioIDUCCMCfgError1plus1", 9746), ("radioProtectionCCMCfgError", 9747), ("radioIDUCCMRDIbitinthelastreceivedCCM", 9748), ("radioProtectionCCMRDIbitinthelastreceivedCCM", 9749), ("radioScheduledActionFailure", 9750), ("radiohybrid-packetmismatch", 9751), ("radioSystemEthernetPort", 9752), ("radioHSBYConfigurationError", 9753), ("radioMasterA-CCMLoss", 9754), ("radioSlaveA-CCMLoss", 9755), ("radioE-CCMLoss", 9756), ("radioMasterA-CCMConfigurationError", 9757), ("radioSlaveA-CCMConfigurationError", 9758), ("radioMasterRDIreceivedinthelastA-CCM", 9759), ("radioSlaveRDIreceivedinthelastA-CCM", 9760), ("radioRDIreceivedinthelastE-CCM", 9761), ("radioPWoperationalstatuswaschangedfromstoup", 9762), ("radioStationAlarmOn", 9763), ("radioStationAlarmOff", 9764), ("radioPowerSupplyFailuretoODU", 9765), ("radioOperationalstatuswaschangedfromuptos", 9766), ("radioODUStatusfailed", 9767), ("radioODUStatusabsent", 9768), ("radioIU-OULOFAlarm", 9769), ("radioIU-OUCablemultiframeLoss", 9770), ("radioOUIU-OUMacAddressMismatch", 9771), ("radioIU-OURxE1NumberMismatch", 9772), ("radioIU-OUTxE1NumberMismatch", 9773), ("radioIU-OUEthernetpacketsdroppedbyFCSerror", 9774), ("radioradioLinkStatusDown", 9775), ("radio1731AIS", 9776), ("radioJ0TraceIdentifierMismatch", 9777), ("radioRSDegrade", 9778), ("radioMSDegrade", 9779), ("radioJ1TraceIdentifierMismatch", 9780), ("radioLPTULossOfPointer", 9781), ("radioLPTUAlarmIndicationSignal", 9782)) + NamedValues(("radioLPDegrade", 9783), ("radioLPJ2TraceIdentifierMismatch", 9784), ("radioHPDegrade", 9785), ("radioHPExcessiveError", 9786), ("radioMSExcessiveError", 9787), ("radioDebugModeOn", 9788), ("radioDebugModeOff", 9789), ("radioManualOperationOn", 9790), ("radioManualOperationOff", 9791), ("radioSynchronization", 9792), ("radioOAMRDI", 9793), ("radioRemoteIDUCCMMEPState", 9794), ("radioRemoteProtectionCCMMEPState", 9795), ("radioE-CCMCfgError", 9796), ("radioradioRfRXsignal", 9797), ("radioIDUContinuityCheckLoss1plus0", 9798), ("radioAccessModule1insertedbutnotenabled", 9799), ("radioAccessModule1insertedincorrectly", 9800), ("radioPS-1HighTemperatureAlarm", 9801), ("radioPS-2HighTemperatureAlarm", 9802), ("radioDeviceHighTemperatureAlarm", 9803), ("radioDeviceLowTemperatureAlarm", 9804), ("radioTransceiverTempHighAlarm", 9805), ("radioTransceiverTempLowAlarm", 9806), ("radioLAGmemberstateunknown", 9807), ("radioAccessModule2insertedbutnotenabled", 9808), ("radioAccessModule2insertedincorrectly", 9809), ("radioLPRemoteFailure", 9810), ("radioB1error", 9811), ("radioB2error", 9812), ("radioB3error", 9813), ("radioBIP-2error", 9814), ("radioLossofSequence", 9815), ("radioAlarmIndicationSignalAISIn", 9816), ("radioMaintenanceLoopback", 9817), ("radioPWFail", 9818), ("radioMemoryKeyNotPresent", 9819), ("radioMemoryKeyforWrongNEType", 9820), ("radioMemoryKeywithmismatchingcontent", 9821), ("radioCCMContinuityCheckLoss", 9822), ("radioOAMMAConfigurationError", 9823), ("radioSynchQualityLevelDegraded", 9824), ("radioSynchUnlockedPLL", 9825), ("radioPWFunctionAlarm", 9826), ("radioSpeedValuelowerthantheLimiteronthatinterface", 9827), ("radioSpeedValuelowerthanthesumofallCIR", 9828), ("radioServiceDownorServicePartial", 9829), ("radioAutonegotiationmismatch", 9830), ("radioRemoteFaultIndication", 9831), ("radioOvercurrent-undercurrentFPR", 9832), ("radioRemotePacketLoss", 9833), ("radioCCMPeerMEPStateDown", 9834), ("radioSynchMissingSSM", 9835), ("radioSynchConfigurationError", 9836), ("radioSynchOneSourceDown", 9837), ("radioSynchAllSourcesDown", 9838), ("radioAccountLogisfilledtothefirstthreshold", 9839), ("radioAccountLogisfilledtothesecondthreshold", 9840), ("radioSystemFailure", 9841), ("defect-id-vcxo-failure", 9842), ("tod-traceable-status", 9843), ("linkPortAStatus", 9844), ("linkPortBStatus", 9845), ("linkPortMStatus", 9846), ("fpgaStatus", 9847), ("peerTime", 9848), ("excessTraffic", 9849), ("excessClientLimit", 9850), ("squelchStatus", 9851), ("dcfMs", 9852), ("dcfRs", 9853), ("radioSFPmismatch", 9854), ("radioG8031ProtectionGroupFailed", 9855), ("radioSFPTemperatureAbnormal", 9856), ("radioSFPBIASCurrentAbnormal", 9857), ("radioSFPTxPowerAbnormal", 9858), ("radioSFPRxPowerAbnormal", 9859), ("eqp-critical-vcxo-failure", 9860), ("eqp-minor-vcxo-failure", 9861), ("eqp-critical-ocxo-failure", 9862), ("eqp-minor-ocxo-failure", 9863), ("lossOfSignalNPort", 9864), ("outputPowerFault", 9865), ("egptProvMismatch", 9866), ("autoShutdownAmpAps", 9867), ("processLockedOutSpeq", 9868), ("ppcLimitExceededSpeq", 9869), ("lossOfLaneOtu", 9870), ("lossOfMfiOpu", 9871), ("oosDisabledLckOduTrmt", 9872), ("configurationMismatch", 9873), ("oduAutoShutdownRxAIS", 9874), ("oduAutoShutdownTxAIS", 9875), ("oosDisabledLckOduRx", 9876), ("thres15MinExceededBbePcs", 9877), ("autoShutdownGAis", 9878), ("thres15MinExceededBbePcsRzs", 9879), ("alarmEquipmentMismatchAllowRzs", 9880), ("alarmWarmUpRzs", 9881), ("tellabsAlarmIndicationPanel", 9882), ("tellabsAGCoutOfGain", 9883), ("tellabsControlBusFailureJTAG", 9884), ("tellabsControlBusFailureIDSPI", 9885), ("tellabsControlBusFailureBCKPLNSPI", 9886), ("tellabsControlBusFailureTDM", 9887), ("tellabsControlBusFailureAIPSPI", 9888), ("tellabsControlandTimCommFail", 9889), ("tellabsLossSynchBetweenSpms", 9890), ("tellabsFansRunningHighSpeed", 9891), ("tellabsHoldoverSynchMode", 9892), ("tellabsIDPromFailure", 9893), ("tellabsMismatchofEquipment", 9894), ("tellabsMismatchofEquipmentHwVerMismatch", 9895), ("tellabsNetEquipmentInterconnectionFail", 9896), ("tellabsPowerFeedAProblem", 9897), ("tellabsPowerFeedA1Problem", 9898), ("tellabsPowerFeedBProblem", 9899), ("tellabsPowerFeedB1Problem", 9900), ("tellabsPowerORFilterProblem", 9901), ("tellabsReplaceableUnitMissing", 9902), ("tellabsReplaceableUnitProblemDeg", 9903), ("tellabsReplaceableUnitProblemFail", 9904), ("tellabsSwBootAbnormal", 9905), ("tellabsThermalProblem", 9906), ("ochOci", 9907), ("otuFecTypeMismatch", 9908), ("tellabsOpticalPowerTargetUnreachable", 9909), ("tellabsOpticalPowerOverload", 9910), ("msBersd", 9911), ("msBersf", 9912), ("msRfi", 9913), ("tellabsAggOutputPowerExceeded", 9914), ("tellabsAutoPowerMgmtProgress", 9915), ("overheadBdi", 9916), ("payloadBdi", 9917), ("oduBersd", 9918), ("otuBersd", 9919), ("tellabsCablePLos", 9920), ("tellabsCablePLosDwdmInterface", 9921), ("tellabsCablePLosExpressInterface", 9922), ("tellabsCablePLosMidStageAccess", 9923), ("tellabsCablePLosPortInterface", 9924), ("overheadFdi", 9925), ("payloadFdi", 9926), ("tellabsFiberMismatch", 9927), ("tellabsFacilityNotSupported", 9928), ("tellabsLosExpressInterface", 9929), ("tellabsFacilityLoopback", 9930), ("tellabsTerminalLoopback", 9931), ("payloadMissingIndication", 9932), ("tellabsProtectionNotAvailable", 9933), ("synchronizationReferenceFailure", 9934), ("tellabsProprietaryAis", 9935), ("freeRunningSynchMode", 9936), ("tellabsNoAirFilter", 9937), ("tellabsPowerFeedA2Problem", 9938), ("tellabsPowerFeedA3Problem", 9939), ("tellabsPowerFeedB2Problem", 9940), ("tellabsPowerFeedB3Problem", 9941), ("gfpClientSignalFailFdi", 9942), ("gfpClientSignalFailRdi", 9943), ("remoteFault", 9944), ("tellabsFabricDegrade", 9945), ("tellabsFabricFailure", 9946), ("cSFOPU", 9947), ("aISL", 9948), ("bERSDL", 9949), ("bERSFL", 9950), ("rFIL", 9951), ("tIMR", 9952), ("mgmtEthLinkDown", 9953), ("alarmIndSig", 9954), ("freqOff", 9955), ("adjacencyLost", 9956), ("cableLosPrevious", 9957), ("cableLosNext", 9958), ("confFail", 9959), ("degrade", 9960), ("failure", 9961), ("gtwyUnreachable", 9962), ("mgmtRestricted", 9963), ("misWired", 9964), ("misMatched", 9965), ("dhcpNoIPAddr", 9966), ("dhcpOutOfIPAddr", 9967), ("dupIPAddr", 9968), ("dupIPAddrNet", 9969), ("ntpPeerUnreachable", 9970), ("progflt", 9971), ("cabs", 9972), ("swPatch", 9973), ("swUpgrade", 9974), ("swUpgradeWait", 9975), ("dccerr", 9976), ("dhcpRelayFail", 9977), ("dlCEFCompleted", 9978), ("patchDwCompleted", 9979), ("installCEFCompleted", 9980), ("installCEFFail", 9981), ("installCEFProgress", 9982), ("patchApplyProgress", 9983), ("patchApplyFail", 9984), ("patchApplyCompleted", 9985), ("securityLogRollOver", 9986), ("softwareDownloadCompleted", 9987), ("softwareInstallProgress", 9988), ("softwareInstallFail", 9989), ("softwareInstallCompleted", 9990), ("softwareExecProgress", 9991), ("softwareExecFail", 9992), ("softwareExecCompleted", 9993), ("softwarePatchAbort", 9994), ("softwareUpgradeAbort", 9995), ("inactive", 9996), ("intrusion", 9997), ("userlock", 9998), ("genericAIS", 9999), ("sdCardMissing", 10000), ("sdCardFailure", 10001), ("thresholdOCTETS15", 10002), ("thresholdOCTETS24", 10003), ("thresholdOPTHT15", 10004), ("thresholdOPTHT24", 10005), ("thresholdOPTLT15", 10006), ("thresholdOPTLT24", 10007), ("thresholdPDLHT15", 10008), ("thresholdPDLHT24", 10009), ("thresholdPKTS1024TO1518OCTETS15", 10010), ("thresholdPKTS1024TO1518OCTETS24", 10011), ("thresholdPKTS128TO255OCTETS15", 10012), ("thresholdPKTS128TO255OCTETS24", 10013), ("thresholdPKTS256TO511OCTETS15", 10014), ("thresholdPKTS256TO511OCTETS24", 10015), ("thresholdPKTS512TO1023OCTETS15", 10016), ("thresholdPKTS512TO1023OCTETS24", 10017), ("thresholdPKTS64OCTETS15", 10018), ("thresholdPKTS64OCTETS24", 10019), ("thresholdPKTS65TO127OCTETS15", 10020), ("thresholdPKTS65TO127OCTETS24", 10021), ("thresholdQFACTORLT15", 10022), ("thresholdQFACTORLT24", 10023), ("latchTriggered", 10024), ("thresholdOFTHT15", 10051), ("thresholdOFTHT24", 10052), ("thresholdOFTLT15", 10053), ("thresholdOFTLT24", 10054), ("thresholdOFRHT15", 10055), ("thresholdOFRHT24", 10056), ("thresholdOFRLT15", 10057), ("thresholdOFRLT24", 10058), ("pumpsOff", 10059), ("aSELos", 10060), ("aRPPause", 10061))

class TrafficDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("unknown", 0), ("none", 1), ("inbound", 2), ("outbound", 3), ("both", 4), ("outboundClientToLine", 5), ("outboundLineToClient", 6))

class Directionality(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("unknown", 1), ("unidirectional", 2), ("bidirectional", 3))

class NEClass(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("singleNode", 1), ("repeaterNode", 2), ("managementNode", 3), ("masterRingNode", 4), ("slaveRingNode", 5))

class PTTechnology(TextualConvention, Integer32):
    status = 'current'

class PTServiceType(TextualConvention, Integer32):
    status = 'current'

class PTInterfaceType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("unknown", 0), ("optical", 1), ("electrical", 2), ("radio", 3))

class PTProtectionType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
    namedValues = NamedValues(("unprotected", 0), ("msLtpWorking", 1), ("msLtpWorkingExtra", 2), ("msLtpProtecting", 3), ("msLtpProtectingExtra", 4), ("bshr2East", 5), ("bshr2EastExtra", 6), ("bshr2West", 7), ("bshr2WestExtra", 8), ("bshr4EastWorking", 9), ("bshr4EastProtecting", 10), ("bshr4WestWorking", 11), ("bshr4WestProtecting", 12), ("bshr4TransoceanicEastWorking", 13), ("bshr4TransoceanicEastProtecting", 14), ("bshr4TransoceanicWestWorking", 15), ("bshr4TransoceanicWestProtecting", 16))

class TPType(TextualConvention, Integer32):
    status = 'obsolete'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("unknown", 1), ("variable", 2), ("fixed", 3))

class TPTerminationType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("connection", 1), ("trail", 2))

class TPReliability(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("preEmptive", 1), ("unprotected", 2), ("protected", 3))

class SVProtection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("unprotected", 1), ("prEnd2End", 2), ("prInSubnetworks", 3), ("prInAndBetweenSubnetworks", 4))

class SNCProtectionInfo(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("unprotected", 1), ("simpleProtectionInfo", 2), ("extendedProtectionInfo", 3))

class EthernetPathProtectionInfo(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("unknown", 0), ("unprotected", 1), ("oneToOne", 2), ("lspOneToOne", 3), ("ring", 4))

class EthernetPathType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("pointToPoint", 1), ("multipointToMultipoint", 2), ("rootedMultipoint", 3))

class TPEndPointType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("sourceTP", 1), ("destinationTP", 2))

class TPTimeSlotHierarchy(TextualConvention, OctetString):
    status = 'obsolete'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(13, 29)

class CharacteristicInfo(TextualConvention, Integer32):
    status = 'obsolete'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("unknown", 1))

class NotificationType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("other", 0), ("objectCreation", 1), ("objectDeletion", 2), ("stateChange", 3), ("attributeValueChange", 4), ("alarm", 5), ("relationshipChange", 6))

class LayerSet(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class FilterType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("unknown", 0), ("tpObject", 1), ("portObject", 2), ("neObject", 3), ("sncObject", 4), ("ethernetPathObject", 5))

class PerfMonRequestId(UniqueId):
    status = 'current'

class PerfMonRequestState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("unknown", 0), ("created", 1), ("pending", 2), ("started", 3), ("finished", 4), ("failed", 5), ("cancelling", 6), ("cancelled", 7), ("deleting", 8))

class PerfMonType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("unknown", 0), ("pmHistory", 1), ("pmCurrent", 2), ("pmPoints", 3))

class PerfMonGranularity(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unknown", 0), ("minutes15", 1), ("hours24", 2))

class PerfMonLocation(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unknown", 0), ("nearEnd", 1), ("farEnd", 2))

class PerfMonDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("unknown", 0), ("none", 1), ("incoming", 2), ("outgoing", 3), ("both", 4))

class PerfMonStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("unknown", 0), ("valid", 1), ("invalid", 2), ("incomplete", 3))

class PerfMonThresholdType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("unknown", 0), ("lowest", 1), ("low", 2), ("high", 3), ("highest", 4))

class OptPowerMonRequestId(UniqueId):
    status = 'current'

class OptPowerMonRequestState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("unknown", 0), ("created", 1), ("pending", 2), ("started", 3), ("finished", 4), ("failed", 5), ("cancelling", 6), ("cancelled", 7), ("deleting", 8))

enmsNetworkSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1))
enmsService = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2))
enmsAlarmTables = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3))
enmsProxy = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4))
enmsTrapGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5))
enmsPerfMon = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6))
enmsOptPowerMon = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7))
enmsCounter = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 1))
enmsControl = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 2))
enmsTrapHist = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 1))
enmsTrapVariable = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 2))
enmsTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3))
enmsTrapFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4))
enmsNETable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1), )
if mibBuilder.loadTexts: enmsNETable.setStatus('current')
enmsNEEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsNeNEId"))
if mibBuilder.loadTexts: enmsNEEntry.setStatus('current')
enmsNeNEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1, 1), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeNEId.setStatus('current')
enmsNeType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeType.setStatus('current')
enmsNeName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeName.setStatus('current')
enmsNeLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeLocation.setStatus('current')
enmsNeAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1, 5), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeAlarmSeverity.setStatus('current')
enmsNeOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1, 6), OperatingMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeOperatingMode.setStatus('current')
enmsNeOpState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1, 7), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeOpState.setStatus('current')
enmsNeCanBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1, 8), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeCanBroadcast.setStatus('current')
enmsNeCanPathProtection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1, 9), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeCanPathProtection.setStatus('current')
enmsNeClass = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1, 10), NEClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeClass.setStatus('current')
enmsNeExternalNEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1, 11), InfoString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeExternalNEId.setStatus('obsolete')
enmsNeIsPseudoNE = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1, 12), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeIsPseudoNE.setStatus('current')
enmsNeIdName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeIdName.setStatus('current')
enmsNeCommunicationState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1, 14), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeCommunicationState.setStatus('current')
enmsNeDCNLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeDCNLocation.setStatus('current')
enmsNeSystemContainer = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeSystemContainer.setStatus('current')
enmsNeUserText = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 1, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeUserText.setStatus('current')
enmsModuleTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 2), )
if mibBuilder.loadTexts: enmsModuleTable.setStatus('current')
enmsModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 2, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsMoNEId"), (0, "TNMS-NBI-MIB", "enmsMoModuleId"))
if mibBuilder.loadTexts: enmsModuleEntry.setStatus('current')
enmsMoNEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 2, 1, 1), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsMoNEId.setStatus('current')
enmsMoModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 2, 1, 2), ModuleId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsMoModuleId.setStatus('current')
enmsMoType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsMoType.setStatus('obsolete')
enmsMoName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsMoName.setStatus('current')
enmsMoOpState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 2, 1, 5), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsMoOpState.setStatus('current')
enmsMoShelf = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsMoShelf.setStatus('current')
enmsMoSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsMoSlot.setStatus('current')
enmsMoObjectType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsMoObjectType.setStatus('current')
enmsPortTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3), )
if mibBuilder.loadTexts: enmsPortTable.setStatus('current')
enmsPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsPtNEId"), (0, "TNMS-NBI-MIB", "enmsPtPortId"))
if mibBuilder.loadTexts: enmsPortEntry.setStatus('current')
enmsPtNEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 1), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtNEId.setStatus('current')
enmsPtPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 2), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtPortId.setStatus('current')
enmsPtName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtName.setStatus('current')
enmsPtModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 4), ModuleId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtModuleId.setStatus('obsolete')
enmsPtTechnology = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 5), PTTechnology()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtTechnology.setStatus('current')
enmsPtServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 6), PTServiceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtServiceType.setStatus('current')
enmsPtInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 7), PTInterfaceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtInterfaceType.setStatus('current')
enmsPtBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 8), Bandwidth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtBandwidth.setStatus('current')
enmsPtOpState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 9), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtOpState.setStatus('obsolete')
enmsPtOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 10), OperatingMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtOperatingMode.setStatus('obsolete')
enmsPtDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 11), Directionality()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtDirection.setStatus('current')
enmsPtCanBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 12), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtCanBroadcast.setStatus('current')
enmsPtCanPathProtection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 13), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtCanPathProtection.setStatus('current')
enmsPtAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 14), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtAlarmSeverity.setStatus('current')
enmsPtAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 15), AdministrativeState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtAdminState.setStatus('obsolete')
enmsPtOpStateTX = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 16), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtOpStateTX.setStatus('current')
enmsPtOpStateRX = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 17), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtOpStateRX.setStatus('current')
enmsPtModuleIdTX = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 18), ModuleId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtModuleIdTX.setStatus('current')
enmsPtModuleIdRX = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 19), ModuleId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtModuleIdRX.setStatus('current')
enmsPtLayerSet = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 20), LayerSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtLayerSet.setStatus('current')
enmsPtProtectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 21), PTProtectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtProtectionType.setStatus('current')
enmsPtObjectType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 3, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPtObjectType.setStatus('current')
enmsTPTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4), )
if mibBuilder.loadTexts: enmsTPTable.setStatus('current')
enmsTPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsTpNEId"), (0, "TNMS-NBI-MIB", "enmsTpPortId"), (0, "TNMS-NBI-MIB", "enmsTpTPIdH"), (0, "TNMS-NBI-MIB", "enmsTpTPIdL"))
if mibBuilder.loadTexts: enmsTPEntry.setStatus('current')
enmsTpNEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 1), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpNEId.setStatus('current')
enmsTpPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 2), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpPortId.setStatus('current')
enmsTpTPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 3), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpTPIdH.setStatus('current')
enmsTpTPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 4), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpTPIdL.setStatus('current')
enmsTpTPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 5), TPIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpTPIndex.setStatus('current')
enmsTpNxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpNxCount.setStatus('current')
enmsTpName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpName.setStatus('current')
enmsTpBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 8), Bandwidth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpBandwidth.setStatus('current')
enmsTpTPType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 9), TPType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpTPType.setStatus('obsolete')
enmsTpTerminType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 10), TPTerminationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpTerminType.setStatus('current')
enmsTpDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 11), Directionality()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpDirection.setStatus('current')
enmsTpOpStateTX = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 12), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpOpStateTX.setStatus('current')
enmsTpOpStateRX = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 13), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpOpStateRX.setStatus('current')
enmsTpAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 14), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpAlarmSeverity.setStatus('current')
enmsTpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 15), AdministrativeState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpAdminState.setStatus('obsolete')
enmsTpUsageCountTX = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpUsageCountTX.setStatus('current')
enmsTpUsageCountRX = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpUsageCountRX.setStatus('current')
enmsTpUsageStateTX = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 18), UsageState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpUsageStateTX.setStatus('current')
enmsTpUsageStateRX = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 19), UsageState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpUsageStateRX.setStatus('current')
enmsTpReliability = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 20), TPReliability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpReliability.setStatus('obsolete')
enmsTpLayerSet = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 21), LayerSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpLayerSet.setStatus('current')
enmsTpBandwidthTX = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 22), Bandwidth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpBandwidthTX.setStatus('current')
enmsTpBandwidthRX = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 23), Bandwidth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpBandwidthRX.setStatus('current')
enmsTpParentPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 24), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpParentPortId.setStatus('current')
enmsTpParentTPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 25), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpParentTPIdH.setStatus('current')
enmsTpParentTPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 26), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpParentTPIdL.setStatus('current')
enmsTpFragmentLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 27), LayerSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpFragmentLayer.setStatus('current')
enmsTpObjectType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpObjectType.setStatus('current')
enmsTpMuxPartnerTPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 29), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpMuxPartnerTPIdH.setStatus('current')
enmsTpMuxPartnerTPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 4, 1, 30), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTpMuxPartnerTPIdL.setStatus('current')
enmsPortConnTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 5), )
if mibBuilder.loadTexts: enmsPortConnTable.setStatus('current')
enmsPortConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 5, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsPcPortConnId"))
if mibBuilder.loadTexts: enmsPortConnEntry.setStatus('current')
enmsPcPortConnId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 5, 1, 1), PortConnId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPcPortConnId.setStatus('current')
enmsPcSrcNEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 5, 1, 2), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPcSrcNEId.setStatus('current')
enmsPcSrcPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 5, 1, 3), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPcSrcPortId.setStatus('current')
enmsPcDstNEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 5, 1, 4), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPcDstNEId.setStatus('current')
enmsPcDstPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 5, 1, 5), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPcDstPortId.setStatus('current')
enmsPcName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 5, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPcName.setStatus('current')
enmsPcSrcAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 5, 1, 7), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPcSrcAlarmSeverity.setStatus('current')
enmsPcDstAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 5, 1, 8), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPcDstAlarmSeverity.setStatus('current')
enmsPcBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 5, 1, 9), Bandwidth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPcBandwidth.setStatus('current')
enmsPcDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 5, 1, 10), Directionality()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPcDirection.setStatus('current')
enmsPcLayerSet = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 5, 1, 11), LayerSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPcLayerSet.setStatus('current')
enmsSNCTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6), )
if mibBuilder.loadTexts: enmsSNCTable.setStatus('current')
enmsSNCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsScSNCId"))
if mibBuilder.loadTexts: enmsSNCEntry.setStatus('current')
enmsScSNCId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 1), SNCId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScSNCId.setStatus('current')
enmsScSrcNEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 2), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScSrcNEId.setStatus('current')
enmsScSrcPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 3), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScSrcPortId.setStatus('current')
enmsScSrcTPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 4), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScSrcTPIdH.setStatus('current')
enmsScSrcTPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 5), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScSrcTPIdL.setStatus('current')
enmsScDestNEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 6), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScDestNEId.setStatus('current')
enmsScDestPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 7), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScDestPortId.setStatus('current')
enmsScDestTPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 8), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScDestTPIdH.setStatus('current')
enmsScDestTPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 9), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScDestTPIdL.setStatus('current')
enmsScSrc2NEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 10), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScSrc2NEId.setStatus('current')
enmsScSrc2PortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 11), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScSrc2PortId.setStatus('current')
enmsScSrc2TPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 12), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScSrc2TPIdH.setStatus('current')
enmsScSrc2TPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 13), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScSrc2TPIdL.setStatus('current')
enmsScDest2NEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 14), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScDest2NEId.setStatus('current')
enmsScDest2PortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 15), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScDest2PortId.setStatus('current')
enmsScDest2TPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 16), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScDest2TPIdH.setStatus('current')
enmsScDest2TPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 17), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScDest2TPIdL.setStatus('current')
enmsScServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 18), ServiceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScServiceId.setStatus('current')
enmsScName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScName.setStatus('current')
enmsScOpState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 20), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScOpState.setStatus('current')
enmsScAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 21), AdministrativeState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScAdminState.setStatus('current')
enmsScAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 22), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScAlarmSeverity.setStatus('current')
enmsScBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 23), Bandwidth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScBandwidth.setStatus('current')
enmsScDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 24), Directionality()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScDirection.setStatus('current')
enmsScProtectionFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 25), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScProtectionFlag.setStatus('obsolete')
enmsScProtectionInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 26), SNCProtectionInfo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScProtectionInfo.setStatus('current')
enmsScNxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScNxCount.setStatus('current')
enmsScSNCOwnerId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 28), SNCId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScSNCOwnerId.setStatus('current')
enmsScLayerSet = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 29), LayerSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScLayerSet.setStatus('current')
enmsScFragmentLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 30), LayerSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScFragmentLayer.setStatus('current')
enmsScMinBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 31), Bandwidth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScMinBandwidth.setStatus('current')
enmsScRequiredBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 6, 1, 32), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsScRequiredBandwidth.setStatus('current')
enmsSNCTPTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 7), )
if mibBuilder.loadTexts: enmsSNCTPTable.setStatus('current')
enmsSNCTPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 7, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsStSNCId"), (0, "TNMS-NBI-MIB", "enmsStTPNumber"))
if mibBuilder.loadTexts: enmsSNCTPEntry.setStatus('current')
enmsStSNCId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 7, 1, 1), SNCId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsStSNCId.setStatus('current')
enmsStTPNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 7, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsStTPNumber.setStatus('current')
enmsStNEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 7, 1, 3), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsStNEId.setStatus('current')
enmsStPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 7, 1, 4), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsStPortId.setStatus('current')
enmsStTPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 7, 1, 5), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsStTPIdH.setStatus('current')
enmsStTPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 7, 1, 6), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsStTPIdL.setStatus('current')
enmsStIsWorkingTP = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 7, 1, 7), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsStIsWorkingTP.setStatus('obsolete')
enmsStEndPointType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 7, 1, 8), TPEndPointType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsStEndPointType.setStatus('current')
enmsStTimeSlotHry = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 7, 1, 9), TPTimeSlotHierarchy()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsStTimeSlotHry.setStatus('obsolete')
enmsSNCTHTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 8), )
if mibBuilder.loadTexts: enmsSNCTHTable.setStatus('obsolete')
enmsSNCTHEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 8, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsThSNCId"), (0, "TNMS-NBI-MIB", "enmsThTPNumber"), (0, "TNMS-NBI-MIB", "enmsThTPHierId"))
if mibBuilder.loadTexts: enmsSNCTHEntry.setStatus('obsolete')
enmsThSNCId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 8, 1, 1), SNCId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsThSNCId.setStatus('obsolete')
enmsThTPNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 8, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsThTPNumber.setStatus('obsolete')
enmsThTPHierId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 8, 1, 3), CharacteristicInfo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsThTPHierId.setStatus('obsolete')
enmsThChannelNo = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 8, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsThChannelNo.setStatus('obsolete')
enmsCCTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9), )
if mibBuilder.loadTexts: enmsCCTable.setStatus('current')
enmsCCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsCcNEId"), (0, "TNMS-NBI-MIB", "enmsCcCCId"))
if mibBuilder.loadTexts: enmsCCEntry.setStatus('current')
enmsCcNEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 1), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcNEId.setStatus('current')
enmsCcCCId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 2), CCId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcCCId.setStatus('current')
enmsCcSrcNEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 3), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcSrcNEId.setStatus('current')
enmsCcSrcPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 4), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcSrcPortId.setStatus('current')
enmsCcSrcTPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 5), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcSrcTPIdH.setStatus('current')
enmsCcSrcTPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 6), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcSrcTPIdL.setStatus('current')
enmsCcDestNEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 7), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcDestNEId.setStatus('current')
enmsCcDestPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 8), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcDestPortId.setStatus('current')
enmsCcDestTPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 9), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcDestTPIdH.setStatus('current')
enmsCcDestTPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 10), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcDestTPIdL.setStatus('current')
enmsCcSrc2NEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 11), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcSrc2NEId.setStatus('current')
enmsCcSrc2PortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 12), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcSrc2PortId.setStatus('current')
enmsCcSrc2TPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 13), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcSrc2TPIdH.setStatus('current')
enmsCcSrc2TPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 14), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcSrc2TPIdL.setStatus('current')
enmsCcDest2NEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 15), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcDest2NEId.setStatus('current')
enmsCcDest2PortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 16), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcDest2PortId.setStatus('current')
enmsCcDest2TPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 17), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcDest2TPIdH.setStatus('current')
enmsCcDest2TPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 18), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcDest2TPIdL.setStatus('current')
enmsCcOpState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 19), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcOpState.setStatus('current')
enmsCcDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 20), Directionality()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcDirection.setStatus('current')
enmsCcProtectionFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 21), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcProtectionFlag.setStatus('current')
enmsCcProtectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 22), ProtectionState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcProtectionState.setStatus('current')
enmsCcNxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 9, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsCcNxCount.setStatus('current')
enmsSNCSNCTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 10), )
if mibBuilder.loadTexts: enmsSNCSNCTable.setStatus('current')
enmsSNCSNCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 10, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsSsSNCId"), (0, "TNMS-NBI-MIB", "enmsSsServerSNCId"))
if mibBuilder.loadTexts: enmsSNCSNCEntry.setStatus('current')
enmsSsSNCId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 10, 1, 1), SNCId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSsSNCId.setStatus('current')
enmsSsServerSNCId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 10, 1, 2), SNCId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSsServerSNCId.setStatus('current')
enmsSNCCCTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 11), )
if mibBuilder.loadTexts: enmsSNCCCTable.setStatus('current')
enmsSNCCCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 11, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsSNCCCSNCId"), (0, "TNMS-NBI-MIB", "enmsSNCCCCCId"))
if mibBuilder.loadTexts: enmsSNCCCEntry.setStatus('current')
enmsSNCCCSNCId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 11, 1, 1), SNCId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSNCCCSNCId.setStatus('current')
enmsSNCCCCCId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 11, 1, 2), CCId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSNCCCCCId.setStatus('current')
enmsNeSNCTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12), )
if mibBuilder.loadTexts: enmsNeSNCTable.setStatus('current')
enmsNeSNCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsNeScNeId"), (0, "TNMS-NBI-MIB", "enmsNeScSNCId"))
if mibBuilder.loadTexts: enmsNeSNCEntry.setStatus('current')
enmsNeScNeId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 1), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScNeId.setStatus('current')
enmsNeScSNCId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 2), SNCId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScSNCId.setStatus('current')
enmsNeScSrcNEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 3), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScSrcNEId.setStatus('current')
enmsNeScSrcPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 4), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScSrcPortId.setStatus('current')
enmsNeScSrcTPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 5), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScSrcTPIdH.setStatus('current')
enmsNeScSrcTPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 6), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScSrcTPIdL.setStatus('current')
enmsNeScDestNEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 7), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScDestNEId.setStatus('current')
enmsNeScDestPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 8), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScDestPortId.setStatus('current')
enmsNeScDestTPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 9), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScDestTPIdH.setStatus('current')
enmsNeScDestTPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 10), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScDestTPIdL.setStatus('current')
enmsNeScSrc2NEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 11), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScSrc2NEId.setStatus('current')
enmsNeScSrc2PortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 12), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScSrc2PortId.setStatus('current')
enmsNeScSrc2TPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 13), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScSrc2TPIdH.setStatus('current')
enmsNeScSrc2TPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 14), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScSrc2TPIdL.setStatus('current')
enmsNeScDest2NEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 15), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScDest2NEId.setStatus('current')
enmsNeScDest2PortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 16), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScDest2PortId.setStatus('current')
enmsNeScDest2TPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 17), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScDest2TPIdH.setStatus('current')
enmsNeScDest2TPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 18), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScDest2TPIdL.setStatus('current')
enmsNeScServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 19), ServiceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScServiceId.setStatus('current')
enmsNeScName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScName.setStatus('current')
enmsNeScOpState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 21), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScOpState.setStatus('current')
enmsNeScAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 22), AdministrativeState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScAdminState.setStatus('current')
enmsNeScAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 23), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScAlarmSeverity.setStatus('current')
enmsNeScBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 24), Bandwidth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScBandwidth.setStatus('current')
enmsNeScDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 25), Directionality()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScDirection.setStatus('current')
enmsNeScProtectionFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 26), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScProtectionFlag.setStatus('obsolete')
enmsNeScProtectionInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 27), SNCProtectionInfo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScProtectionInfo.setStatus('current')
enmsNeScNxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScNxCount.setStatus('current')
enmsNeScSNCOwnerId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 29), SNCId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScSNCOwnerId.setStatus('current')
enmsNeScLayerSet = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 30), LayerSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScLayerSet.setStatus('current')
enmsNeScFragmentLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 31), LayerSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScFragmentLayer.setStatus('current')
enmsNeScMinBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 32), Bandwidth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScMinBandwidth.setStatus('current')
enmsNeScRequiredBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 12, 1, 33), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNeScRequiredBandwidth.setStatus('current')
enmsEthernetPathTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 13), )
if mibBuilder.loadTexts: enmsEthernetPathTable.setStatus('current')
enmsEthernetPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 13, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsEvcEthernetPathId"))
if mibBuilder.loadTexts: enmsEthernetPathEntry.setStatus('current')
enmsEvcEthernetPathId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 13, 1, 1), EthernetPathId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsEvcEthernetPathId.setStatus('current')
enmsEvcName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 13, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsEvcName.setStatus('current')
enmsEvcSVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 13, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsEvcSVlanId.setStatus('current')
enmsEvcType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 13, 1, 4), EthernetPathType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsEvcType.setStatus('current')
enmsEvcServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 13, 1, 5), ServiceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsEvcServiceId.setStatus('current')
enmsEvcOpState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 13, 1, 6), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsEvcOpState.setStatus('current')
enmsEvcAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 13, 1, 7), AdministrativeState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsEvcAdminState.setStatus('current')
enmsEvcAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 1, 13, 1, 8), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsEvcAlarmSeverity.setStatus('current')
enmsSubscriberTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 1), )
if mibBuilder.loadTexts: enmsSubscriberTable.setStatus('current')
enmsSubscriberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 1, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsSbSubscriberId"))
if mibBuilder.loadTexts: enmsSubscriberEntry.setStatus('current')
enmsSbSubscriberId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 1, 1, 1), SubscriberId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSbSubscriberId.setStatus('current')
enmsSbName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSbName.setStatus('current')
enmsSbOrganisation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSbOrganisation.setStatus('current')
enmsSbContactPerson = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSbContactPerson.setStatus('current')
enmsSbAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSbAddress.setStatus('current')
enmsSbPhone = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSbPhone.setStatus('current')
enmsSbFax = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSbFax.setStatus('current')
enmsSbEMail = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSbEMail.setStatus('current')
enmsSbURL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSbURL.setStatus('current')
enmsSbExternalReference = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSbExternalReference.setStatus('current')
enmsServiceTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 2), )
if mibBuilder.loadTexts: enmsServiceTable.setStatus('current')
enmsServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 2, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsSvServiceId"))
if mibBuilder.loadTexts: enmsServiceEntry.setStatus('current')
enmsSvServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 2, 1, 1), ServiceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSvServiceId.setStatus('current')
enmsSvSubscriberId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 2, 1, 2), SubscriberId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSvSubscriberId.setStatus('current')
enmsSvLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSvLabel.setStatus('current')
enmsSvOpState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 2, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSvOpState.setStatus('current')
enmsSvAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 2, 1, 5), AdministrativeState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSvAdminState.setStatus('current')
enmsSvDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 2, 1, 6), Directionality()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSvDirection.setStatus('obsolete')
enmsSvProtectionFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 2, 1, 7), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSvProtectionFlag.setStatus('obsolete')
enmsSvWriteProtected = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 2, 1, 8), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSvWriteProtected.setStatus('obsolete')
enmsSvServiceOwnerId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 2, 2, 1, 9), ServiceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSvServiceOwnerId.setStatus('current')
enmsAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1), )
if mibBuilder.loadTexts: enmsAlarmTable.setStatus('current')
enmsAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsAlAlarmNumber"))
if mibBuilder.loadTexts: enmsAlarmEntry.setStatus('current')
enmsAlAlarmNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlAlarmNumber.setStatus('current')
enmsAlSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 2), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlSeverity.setStatus('current')
enmsAlProbableCause = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 3), ProbableCause()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlProbableCause.setStatus('current')
enmsAlClass = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 4), AlarmClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlClass.setStatus('current')
enmsAlServiceAffect = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 5), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlServiceAffect.setStatus('current')
enmsAlState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 6), AlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlState.setStatus('current')
enmsAlTimeStampFromNE = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 7), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlTimeStampFromNE.setStatus('current')
enmsAlTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 8), EnmsTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlTimeStamp.setStatus('current')
enmsAlEntityString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlEntityString.setStatus('current')
enmsAlEntityType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 10), EntityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlEntityType.setStatus('current')
enmsAlNEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 11), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlNEId.setStatus('current')
enmsAlPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 12), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlPortId.setStatus('current')
enmsAlTPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 13), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlTPIdH.setStatus('current')
enmsAlTPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 14), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlTPIdL.setStatus('current')
enmsAlTPName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlTPName.setStatus('current')
enmsAlModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 16), ModuleId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlModuleId.setStatus('current')
enmsAlProbableCauseString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlProbableCauseString.setStatus('current')
enmsAlNELocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlNELocation.setStatus('current')
enmsAlAffectedLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlAffectedLocation.setStatus('current')
enmsAlTrafficDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 20), TrafficDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlTrafficDirection.setStatus('current')
enmsAlAdditionalInformation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlAdditionalInformation.setStatus('current')
enmsAlNeSystemContainer = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 1, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsAlNeSystemContainer.setStatus('current')
enmsAlarmsForNETable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2), )
if mibBuilder.loadTexts: enmsAlarmsForNETable.setStatus('current')
enmsAlarmsForNEEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsA2NEId"), (0, "TNMS-NBI-MIB", "enmsA2Severity"), (0, "TNMS-NBI-MIB", "enmsA2AlarmNumber"))
if mibBuilder.loadTexts: enmsAlarmsForNEEntry.setStatus('current')
enmsA2NEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 1), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2NEId.setStatus('current')
enmsA2Severity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 2), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2Severity.setStatus('current')
enmsA2AlarmNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2AlarmNumber.setStatus('current')
enmsA2ProbableCause = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 4), ProbableCause()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2ProbableCause.setStatus('current')
enmsA2Class = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 5), AlarmClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2Class.setStatus('current')
enmsA2ServiceAffect = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 6), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2ServiceAffect.setStatus('current')
enmsA2State = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 7), AlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2State.setStatus('current')
enmsA2TimeStampFromNE = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 8), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2TimeStampFromNE.setStatus('current')
enmsA2TimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 9), EnmsTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2TimeStamp.setStatus('current')
enmsA2EntityString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2EntityString.setStatus('current')
enmsA2EntityType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 11), EntityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2EntityType.setStatus('current')
enmsA2PortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 12), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2PortId.setStatus('current')
enmsA2TPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 13), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2TPIdH.setStatus('current')
enmsA2TPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 14), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2TPIdL.setStatus('current')
enmsA2TPName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2TPName.setStatus('current')
enmsA2ModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 16), ModuleId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2ModuleId.setStatus('current')
enmsA2ProbableCauseString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2ProbableCauseString.setStatus('current')
enmsA2NELocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2NELocation.setStatus('current')
enmsA2AffectedLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2AffectedLocation.setStatus('current')
enmsA2TrafficDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 20), TrafficDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2TrafficDirection.setStatus('current')
enmsA2AdditionalInformation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2AdditionalInformation.setStatus('current')
enmsA2NeSystemContainer = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 2, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA2NeSystemContainer.setStatus('current')
enmsAlarmsForPortTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3), )
if mibBuilder.loadTexts: enmsAlarmsForPortTable.setStatus('current')
enmsAlarmsForPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsA3NEId"), (0, "TNMS-NBI-MIB", "enmsA3PortId"), (0, "TNMS-NBI-MIB", "enmsA3Severity"), (0, "TNMS-NBI-MIB", "enmsA3AlarmNumber"))
if mibBuilder.loadTexts: enmsAlarmsForPortEntry.setStatus('current')
enmsA3NEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 1), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3NEId.setStatus('current')
enmsA3PortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 2), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3PortId.setStatus('current')
enmsA3Severity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 3), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3Severity.setStatus('current')
enmsA3AlarmNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3AlarmNumber.setStatus('current')
enmsA3ProbableCause = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 5), ProbableCause()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3ProbableCause.setStatus('current')
enmsA3Class = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 6), AlarmClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3Class.setStatus('current')
enmsA3ServiceAffect = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 7), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3ServiceAffect.setStatus('current')
enmsA3State = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 8), AlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3State.setStatus('current')
enmsA3TimeStampFromNE = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 9), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3TimeStampFromNE.setStatus('current')
enmsA3TimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 10), EnmsTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3TimeStamp.setStatus('current')
enmsA3EntityString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3EntityString.setStatus('current')
enmsA3EntityType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 12), EntityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3EntityType.setStatus('current')
enmsA3TPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 13), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3TPIdH.setStatus('current')
enmsA3TPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 14), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3TPIdL.setStatus('current')
enmsA3TPName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3TPName.setStatus('current')
enmsA3ProbableCauseString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3ProbableCauseString.setStatus('current')
enmsA3NELocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3NELocation.setStatus('current')
enmsA3AffectedLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3AffectedLocation.setStatus('current')
enmsA3TrafficDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 19), TrafficDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3TrafficDirection.setStatus('current')
enmsA3AdditionalInformation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3AdditionalInformation.setStatus('current')
enmsA3NeSystemContainer = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 3, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA3NeSystemContainer.setStatus('current')
enmsAlarmsForTPTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4), )
if mibBuilder.loadTexts: enmsAlarmsForTPTable.setStatus('current')
enmsAlarmsForTPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsA4NEId"), (0, "TNMS-NBI-MIB", "enmsA4PortId"), (0, "TNMS-NBI-MIB", "enmsA4TPIdH"), (0, "TNMS-NBI-MIB", "enmsA4TPIdL"), (0, "TNMS-NBI-MIB", "enmsA4Severity"), (0, "TNMS-NBI-MIB", "enmsA4AlarmNumber"))
if mibBuilder.loadTexts: enmsAlarmsForTPEntry.setStatus('current')
enmsA4NEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 1), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4NEId.setStatus('current')
enmsA4PortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 2), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4PortId.setStatus('current')
enmsA4TPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 3), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4TPIdH.setStatus('current')
enmsA4TPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 4), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4TPIdL.setStatus('current')
enmsA4Severity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 5), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4Severity.setStatus('current')
enmsA4AlarmNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4AlarmNumber.setStatus('current')
enmsA4ProbableCause = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 7), ProbableCause()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4ProbableCause.setStatus('current')
enmsA4Class = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 8), AlarmClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4Class.setStatus('current')
enmsA4ServiceAffect = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 9), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4ServiceAffect.setStatus('current')
enmsA4State = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 10), AlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4State.setStatus('current')
enmsA4TimeStampFromNE = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 11), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4TimeStampFromNE.setStatus('current')
enmsA4TimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 12), EnmsTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4TimeStamp.setStatus('current')
enmsA4EntityString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4EntityString.setStatus('current')
enmsA4EntityType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 14), EntityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4EntityType.setStatus('current')
enmsA4TPName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4TPName.setStatus('current')
enmsA4ProbableCauseString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4ProbableCauseString.setStatus('current')
enmsA4NELocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4NELocation.setStatus('current')
enmsA4AffectedLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4AffectedLocation.setStatus('current')
enmsA4TrafficDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 19), TrafficDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4TrafficDirection.setStatus('current')
enmsA4AdditionalInformation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4AdditionalInformation.setStatus('current')
enmsA4NeSystemContainer = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 4, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA4NeSystemContainer.setStatus('current')
enmsAlarmsForPortConnTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5), )
if mibBuilder.loadTexts: enmsAlarmsForPortConnTable.setStatus('current')
enmsAlarmsForPortConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsA5PortConnId"), (0, "TNMS-NBI-MIB", "enmsA5Severity"), (0, "TNMS-NBI-MIB", "enmsA5AlarmNumber"))
if mibBuilder.loadTexts: enmsAlarmsForPortConnEntry.setStatus('current')
enmsA5PortConnId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 1), PortConnId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5PortConnId.setStatus('current')
enmsA5Severity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 2), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5Severity.setStatus('current')
enmsA5AlarmNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5AlarmNumber.setStatus('current')
enmsA5ProbableCause = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 4), ProbableCause()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5ProbableCause.setStatus('current')
enmsA5Class = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 5), AlarmClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5Class.setStatus('current')
enmsA5ServiceAffect = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 6), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5ServiceAffect.setStatus('current')
enmsA5State = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 7), AlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5State.setStatus('current')
enmsA5TimeStampFromNE = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 8), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5TimeStampFromNE.setStatus('current')
enmsA5TimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 9), EnmsTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5TimeStamp.setStatus('current')
enmsA5EntityString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5EntityString.setStatus('current')
enmsA5EntityType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 11), EntityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5EntityType.setStatus('current')
enmsA5NEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 12), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5NEId.setStatus('current')
enmsA5PortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 13), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5PortId.setStatus('current')
enmsA5TPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 14), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5TPIdH.setStatus('obsolete')
enmsA5TPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 15), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5TPIdL.setStatus('obsolete')
enmsA5TPName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5TPName.setStatus('obsolete')
enmsA5ModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 17), ModuleId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5ModuleId.setStatus('current')
enmsA5ProbableCauseString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5ProbableCauseString.setStatus('current')
enmsA5NELocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5NELocation.setStatus('current')
enmsA5AffectedLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5AffectedLocation.setStatus('current')
enmsA5TrafficDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 21), TrafficDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5TrafficDirection.setStatus('current')
enmsA5AdditionalInformation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 5, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA5AdditionalInformation.setStatus('current')
enmsAlarmsForSNCTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6), )
if mibBuilder.loadTexts: enmsAlarmsForSNCTable.setStatus('current')
enmsAlarmsForSNCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsA6SNCId"), (0, "TNMS-NBI-MIB", "enmsA6Severity"), (0, "TNMS-NBI-MIB", "enmsA6AlarmNumber"))
if mibBuilder.loadTexts: enmsAlarmsForSNCEntry.setStatus('current')
enmsA6SNCId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 1), SNCId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6SNCId.setStatus('current')
enmsA6Severity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 2), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6Severity.setStatus('current')
enmsA6AlarmNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6AlarmNumber.setStatus('current')
enmsA6ProbableCause = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 4), ProbableCause()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6ProbableCause.setStatus('current')
enmsA6Class = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 5), AlarmClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6Class.setStatus('current')
enmsA6ServiceAffect = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 6), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6ServiceAffect.setStatus('current')
enmsA6State = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 7), AlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6State.setStatus('current')
enmsA6TimeStampFromNE = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 8), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6TimeStampFromNE.setStatus('current')
enmsA6TimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 9), EnmsTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6TimeStamp.setStatus('current')
enmsA6EntityString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6EntityString.setStatus('current')
enmsA6EntityType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 11), EntityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6EntityType.setStatus('current')
enmsA6NEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 12), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6NEId.setStatus('current')
enmsA6PortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 13), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6PortId.setStatus('current')
enmsA6TPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 14), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6TPIdH.setStatus('current')
enmsA6TPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 15), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6TPIdL.setStatus('current')
enmsA6TPName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6TPName.setStatus('current')
enmsA6ModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 17), ModuleId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6ModuleId.setStatus('current')
enmsA6ProbableCauseString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6ProbableCauseString.setStatus('current')
enmsA6NELocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6NELocation.setStatus('current')
enmsA6AffectedLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6AffectedLocation.setStatus('current')
enmsA6TrafficDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 21), TrafficDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6TrafficDirection.setStatus('current')
enmsA6AdditionalInformation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 6, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA6AdditionalInformation.setStatus('current')
enmsAlarmsForServiceTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7), )
if mibBuilder.loadTexts: enmsAlarmsForServiceTable.setStatus('current')
enmsAlarmsForServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsA7ServiceId"), (0, "TNMS-NBI-MIB", "enmsA7Severity"), (0, "TNMS-NBI-MIB", "enmsA7AlarmNumber"))
if mibBuilder.loadTexts: enmsAlarmsForServiceEntry.setStatus('current')
enmsA7ServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 1), ServiceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7ServiceId.setStatus('current')
enmsA7Severity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 2), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7Severity.setStatus('current')
enmsA7AlarmNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7AlarmNumber.setStatus('current')
enmsA7ProbableCause = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 4), ProbableCause()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7ProbableCause.setStatus('current')
enmsA7Class = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 5), AlarmClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7Class.setStatus('current')
enmsA7ServiceAffect = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 6), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7ServiceAffect.setStatus('current')
enmsA7State = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 7), AlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7State.setStatus('current')
enmsA7TimeStampFromNE = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 8), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7TimeStampFromNE.setStatus('current')
enmsA7TimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 9), EnmsTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7TimeStamp.setStatus('current')
enmsA7EntityString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7EntityString.setStatus('current')
enmsA7EntityType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 11), EntityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7EntityType.setStatus('current')
enmsA7NEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 12), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7NEId.setStatus('current')
enmsA7PortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 13), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7PortId.setStatus('current')
enmsA7TPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 14), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7TPIdH.setStatus('current')
enmsA7TPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 15), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7TPIdL.setStatus('current')
enmsA7TPName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7TPName.setStatus('current')
enmsA7ModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 17), ModuleId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7ModuleId.setStatus('current')
enmsA7ProbableCauseString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7ProbableCauseString.setStatus('current')
enmsA7NELocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7NELocation.setStatus('current')
enmsA7AffectedLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7AffectedLocation.setStatus('current')
enmsA7TrafficDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 21), TrafficDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7TrafficDirection.setStatus('current')
enmsA7AdditionalInformation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 7, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA7AdditionalInformation.setStatus('current')
enmsAlarmsForModuleTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8), )
if mibBuilder.loadTexts: enmsAlarmsForModuleTable.setStatus('current')
enmsAlarmsForModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsA8NEId"), (0, "TNMS-NBI-MIB", "enmsA8ModuleId"), (0, "TNMS-NBI-MIB", "enmsA8Severity"), (0, "TNMS-NBI-MIB", "enmsA8AlarmNumber"))
if mibBuilder.loadTexts: enmsAlarmsForModuleEntry.setStatus('current')
enmsA8NEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 1), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8NEId.setStatus('current')
enmsA8ModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 2), ModuleId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8ModuleId.setStatus('current')
enmsA8Severity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 3), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8Severity.setStatus('current')
enmsA8AlarmNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8AlarmNumber.setStatus('current')
enmsA8ProbableCause = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 5), ProbableCause()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8ProbableCause.setStatus('current')
enmsA8Class = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 6), AlarmClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8Class.setStatus('current')
enmsA8ServiceAffect = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 7), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8ServiceAffect.setStatus('current')
enmsA8State = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 8), AlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8State.setStatus('current')
enmsA8TimeStampFromNE = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 9), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8TimeStampFromNE.setStatus('current')
enmsA8TimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 10), EnmsTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8TimeStamp.setStatus('current')
enmsA8EntityString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8EntityString.setStatus('current')
enmsA8EntityType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 12), EntityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8EntityType.setStatus('current')
enmsA8PortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 13), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8PortId.setStatus('obsolete')
enmsA8TPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 14), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8TPIdH.setStatus('obsolete')
enmsA8TPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 15), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8TPIdL.setStatus('obsolete')
enmsA8TPName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8TPName.setStatus('obsolete')
enmsA8ProbableCauseString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8ProbableCauseString.setStatus('current')
enmsA8NELocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8NELocation.setStatus('current')
enmsA8AffectedLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8AffectedLocation.setStatus('current')
enmsA8TrafficDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 20), TrafficDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8TrafficDirection.setStatus('current')
enmsA8AdditionalInformation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8AdditionalInformation.setStatus('current')
enmsA8NeSystemContainer = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 8, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA8NeSystemContainer.setStatus('current')
enmsAlarmsForEthernetPathTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9), )
if mibBuilder.loadTexts: enmsAlarmsForEthernetPathTable.setStatus('current')
enmsAlarmsForEthernetPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsA9EthernetPathId"), (0, "TNMS-NBI-MIB", "enmsA9Severity"), (0, "TNMS-NBI-MIB", "enmsA9AlarmNumber"))
if mibBuilder.loadTexts: enmsAlarmsForEthernetPathEntry.setStatus('current')
enmsA9EthernetPathId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 1), EthernetPathId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9EthernetPathId.setStatus('current')
enmsA9Severity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 2), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9Severity.setStatus('current')
enmsA9AlarmNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9AlarmNumber.setStatus('current')
enmsA9ProbableCause = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 4), ProbableCause()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9ProbableCause.setStatus('current')
enmsA9Class = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 5), AlarmClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9Class.setStatus('current')
enmsA9ServiceAffect = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 6), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9ServiceAffect.setStatus('current')
enmsA9State = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 7), AlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9State.setStatus('current')
enmsA9TimeStampFromNE = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 8), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9TimeStampFromNE.setStatus('current')
enmsA9TimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 9), EnmsTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9TimeStamp.setStatus('current')
enmsA9EntityString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9EntityString.setStatus('current')
enmsA9EntityType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 11), EntityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9EntityType.setStatus('current')
enmsA9NEId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 12), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9NEId.setStatus('current')
enmsA9PortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 13), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9PortId.setStatus('current')
enmsA9TPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 14), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9TPIdH.setStatus('current')
enmsA9TPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 15), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9TPIdL.setStatus('current')
enmsA9TPName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9TPName.setStatus('current')
enmsA9ModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 17), ModuleId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9ModuleId.setStatus('current')
enmsA9ProbableCauseString = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9ProbableCauseString.setStatus('current')
enmsA9NELocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9NELocation.setStatus('current')
enmsA9AffectedLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9AffectedLocation.setStatus('current')
enmsA9TrafficDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 21), TrafficDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9TrafficDirection.setStatus('current')
enmsA9AdditionalInformation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 3, 9, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsA9AdditionalInformation.setStatus('current')
enmsSNMPTrapCnt = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSNMPTrapCnt.setStatus('obsolete')
enmsSNMPGetCnt = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSNMPGetCnt.setStatus('obsolete')
enmsSNMPGetNextCnt = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSNMPGetNextCnt.setStatus('obsolete')
enmsSNMPSetCnt = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsSNMPSetCnt.setStatus('obsolete')
enmsProxyName = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsProxyName.setStatus('current')
enmsProxyOpState = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 2, 2), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsProxyOpState.setStatus('current')
enmsNetworkName = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsNetworkName.setStatus('current')
enmsTrapHistoryTableLength = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsTrapHistoryTableLength.setStatus('current')
enmsTrapCounter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTrapCounter.setStatus('current')
enmsProxyPSTAMP = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 2, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsProxyPSTAMP.setStatus('current')
enmsEnterpriseId = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 2, 7), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsEnterpriseId.setStatus('current')
enmsMIBVersion = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 2, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsMIBVersion.setStatus('current')
enmsEMSVersion = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 2, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsEMSVersion.setStatus('current')
enmsTimeStampFormat = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 2, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTimeStampFormat.setStatus('current')
enmsHeartbeatInterval = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 2, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsHeartbeatInterval.setStatus('current')
enmsHeartbeatOpState = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 2, 12), OperationalState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsHeartbeatOpState.setStatus('current')
enmsInformTimeout = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 2, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsInformTimeout.setStatus('current')
enmsInformMaxTries = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 4, 2, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsInformMaxTries.setStatus('current')
enmsTrapHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 1, 1), )
if mibBuilder.loadTexts: enmsTrapHistoryTable.setStatus('current')
enmsTrapHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 1, 1, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsHiTrapNumber"))
if mibBuilder.loadTexts: enmsTrapHistoryEntry.setStatus('current')
enmsHiTrapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsHiTrapNumber.setStatus('current')
enmsHiTrapEntityType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 1, 1, 1, 2), EntityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsHiTrapEntityType.setStatus('current')
enmsHiTrapFirstId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 1, 1, 1, 3), UniqueId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsHiTrapFirstId.setStatus('current')
enmsHiTrapSecondId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 1, 1, 1, 4), UniqueId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsHiTrapSecondId.setStatus('current')
enmsHiTrapTPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 1, 1, 1, 5), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsHiTrapTPIdH.setStatus('current')
enmsHiTrapTPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 1, 1, 1, 6), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsHiTrapTPIdL.setStatus('current')
enmsHiTrapNfyType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 1, 1, 1, 7), NotificationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsHiTrapNfyType.setStatus('current')
enmsHiTrapCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsHiTrapCounter.setStatus('current')
enmsTrapTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 2, 1), EnmsTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTrapTimeStamp.setStatus('current')
enmsTrapEventSeverity = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 2, 2), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTrapEventSeverity.setStatus('current')
enmsTrapEventDetails = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTrapEventDetails.setStatus('current')
enmsTrapEventProbableCause = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 2, 4), ProbableCause()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTrapEventProbableCause.setStatus('current')
enmsTrapStateName = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("opState", 1), ("adminState", 2), ("usageStateTX", 3), ("usageStateRX", 4), ("opStateTX", 5), ("opStateRX", 6), ("actualCreationState", 7), ("requiredCreationState", 8), ("protectionState", 9), ("communicationState", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTrapStateName.setStatus('current')
enmsTrapStateOldValue = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTrapStateOldValue.setStatus('current')
enmsTrapStateNewValue = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTrapStateNewValue.setStatus('current')
enmsTrapAttributeName = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54))).clone(namedValues=NamedValues(("type", 1), ("name", 2), ("location", 3), ("alarmSeverity", 4), ("operatingMode", 5), ("canBroadcast", 6), ("canPathProtection", 7), ("neClass", 8), ("technology", 9), ("serviceType", 10), ("interfaceType", 11), ("bandwidth", 12), ("direction", 13), ("tpIndex", 14), ("nxCount", 15), ("terminType", 16), ("moduleId", 17), ("reliability", 18), ("label", 19), ("protectionFlag", 20), ("writeProtected", 21), ("organisation", 22), ("contactPerson", 23), ("address", 24), ("phone", 25), ("fax", 26), ("email", 27), ("srcAlarmSeverity", 28), ("dstAlarmSeverity", 29), ("provisioningState", 30), ("alarmState", 31), ("accessState", 32), ("emAccessState", 33), ("neState", 34), ("subscriberId", 35), ("usageCountTX", 36), ("usageCountRX", 37), ("hasPortconnection", 38), ("ownerId", 39), ("neIdName", 40), ("protectionType", 41), ("bandwidthSource", 45), ("bandwidthSink", 46), ("bandwidthRequired", 47), ("objectType", 48), ("neDCNLocation", 49), ("systemContainer", 50), ("vLanId", 51), ("ethernetPathType", 52), ("serviceId", 53), ("enmsNeUserText", 54)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTrapAttributeName.setStatus('current')
enmsTrapAttributeOldValue = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 2, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTrapAttributeOldValue.setStatus('current')
enmsTrapAttributeNewValue = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 2, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTrapAttributeNewValue.setStatus('current')
enmsTrapEventProbableCauseString = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 2, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTrapEventProbableCauseString.setStatus('current')
enmsTrapNeIdName = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 2, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTrapNeIdName.setStatus('current')
enmsTrapNeLocationLct = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 2, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTrapNeLocationLct.setStatus('current')
enmsTrapAffectedLocation = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 2, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTrapAffectedLocation.setStatus('current')
enmsTrapEventTrafficDirection = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 2, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsTrapEventTrafficDirection.setStatus('current')
enmsCommonTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 1))
enmsNETraps = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 2))
enmsModuleTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 3))
enmsPortTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 4))
enmsTPTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 5))
enmsPortConnTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 6))
enmsSNCTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 7))
enmsSubscriberTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 8))
enmsServiceTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 9))
enmsEMSTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 10))
enmsMonitorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 11))
enmsEthernetPathTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 12))
enmsPerfMonTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 13))
enmsOptPowerMonTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 14))
enmsProxyStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 1, 1)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsProxyName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsProxyOpState"))
if mibBuilder.loadTexts: enmsProxyStateChangeTrap.setStatus('current')
enmsNEObjectCreationTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 2, 1)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsNeNEId"), ("TNMS-NBI-MIB", "enmsNeName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapNeIdName"), ("TNMS-NBI-MIB", "enmsNeSystemContainer"), ("TNMS-NBI-MIB", "enmsNeUserText"))
if mibBuilder.loadTexts: enmsNEObjectCreationTrap.setStatus('current')
enmsNEObjectDeletionTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 2, 2)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsNeNEId"), ("TNMS-NBI-MIB", "enmsNeName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapNeIdName"), ("TNMS-NBI-MIB", "enmsNeSystemContainer"), ("TNMS-NBI-MIB", "enmsNeUserText"))
if mibBuilder.loadTexts: enmsNEObjectDeletionTrap.setStatus('current')
enmsNEStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 2, 3)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsNeNEId"), ("TNMS-NBI-MIB", "enmsNeName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsTrapStateName"), ("TNMS-NBI-MIB", "enmsTrapStateOldValue"), ("TNMS-NBI-MIB", "enmsTrapStateNewValue"), ("TNMS-NBI-MIB", "enmsTrapNeIdName"), ("TNMS-NBI-MIB", "enmsNeSystemContainer"), ("TNMS-NBI-MIB", "enmsNeUserText"))
if mibBuilder.loadTexts: enmsNEStateChangeTrap.setStatus('current')
enmsNEAttributeChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 2, 4)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsNeNEId"), ("TNMS-NBI-MIB", "enmsNeName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsTrapAttributeName"), ("TNMS-NBI-MIB", "enmsTrapAttributeOldValue"), ("TNMS-NBI-MIB", "enmsTrapAttributeNewValue"), ("TNMS-NBI-MIB", "enmsTrapNeIdName"), ("TNMS-NBI-MIB", "enmsNeSystemContainer"), ("TNMS-NBI-MIB", "enmsNeUserText"))
if mibBuilder.loadTexts: enmsNEAttributeChangeTrap.setStatus('current')
enmsNEAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 2, 5)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsNeNEId"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsAlClass"), ("TNMS-NBI-MIB", "enmsAlState"), ("TNMS-NBI-MIB", "enmsAlTimeStamp"), ("TNMS-NBI-MIB", "enmsAlEntityString"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCauseString"), ("TNMS-NBI-MIB", "enmsNeName"), ("TNMS-NBI-MIB", "enmsTrapNeLocationLct"), ("TNMS-NBI-MIB", "enmsTrapNeIdName"), ("TNMS-NBI-MIB", "enmsTrapAffectedLocation"), ("TNMS-NBI-MIB", "enmsTrapEventTrafficDirection"), ("TNMS-NBI-MIB", "enmsAlServiceAffect"), ("TNMS-NBI-MIB", "enmsAlAdditionalInformation"), ("TNMS-NBI-MIB", "enmsAlNeSystemContainer"))
if mibBuilder.loadTexts: enmsNEAlarmTrap.setStatus('current')
enmsModuleObjectCreationTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 3, 1)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsMoNEId"), ("TNMS-NBI-MIB", "enmsMoModuleId"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"))
if mibBuilder.loadTexts: enmsModuleObjectCreationTrap.setStatus('current')
enmsModuleObjectDeletionTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 3, 2)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsMoNEId"), ("TNMS-NBI-MIB", "enmsMoModuleId"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"))
if mibBuilder.loadTexts: enmsModuleObjectDeletionTrap.setStatus('current')
enmsModuleStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 3, 3)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsMoNEId"), ("TNMS-NBI-MIB", "enmsMoModuleId"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsTrapStateName"), ("TNMS-NBI-MIB", "enmsTrapStateOldValue"), ("TNMS-NBI-MIB", "enmsTrapStateNewValue"))
if mibBuilder.loadTexts: enmsModuleStateChangeTrap.setStatus('current')
enmsModuleAttributeChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 3, 4)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsMoNEId"), ("TNMS-NBI-MIB", "enmsMoModuleId"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsTrapAttributeName"), ("TNMS-NBI-MIB", "enmsTrapAttributeOldValue"), ("TNMS-NBI-MIB", "enmsTrapAttributeNewValue"))
if mibBuilder.loadTexts: enmsModuleAttributeChangeTrap.setStatus('current')
enmsModuleAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 3, 5)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsMoNEId"), ("TNMS-NBI-MIB", "enmsMoModuleId"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsAlClass"), ("TNMS-NBI-MIB", "enmsAlState"), ("TNMS-NBI-MIB", "enmsAlTimeStamp"), ("TNMS-NBI-MIB", "enmsAlEntityString"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCauseString"), ("TNMS-NBI-MIB", "enmsNeName"), ("TNMS-NBI-MIB", "enmsTrapNeLocationLct"), ("TNMS-NBI-MIB", "enmsTrapNeIdName"), ("TNMS-NBI-MIB", "enmsTrapAffectedLocation"), ("TNMS-NBI-MIB", "enmsTrapEventTrafficDirection"), ("TNMS-NBI-MIB", "enmsAlServiceAffect"), ("TNMS-NBI-MIB", "enmsAlAdditionalInformation"), ("TNMS-NBI-MIB", "enmsAlNeSystemContainer"))
if mibBuilder.loadTexts: enmsModuleAlarmTrap.setStatus('current')
enmsPortObjectCreationTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 4, 1)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsPtNEId"), ("TNMS-NBI-MIB", "enmsPtPortId"), ("TNMS-NBI-MIB", "enmsPtName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"))
if mibBuilder.loadTexts: enmsPortObjectCreationTrap.setStatus('current')
enmsPortObjectDeletionTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 4, 2)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsPtNEId"), ("TNMS-NBI-MIB", "enmsPtPortId"), ("TNMS-NBI-MIB", "enmsPtName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"))
if mibBuilder.loadTexts: enmsPortObjectDeletionTrap.setStatus('current')
enmsPortStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 4, 3)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsPtNEId"), ("TNMS-NBI-MIB", "enmsPtPortId"), ("TNMS-NBI-MIB", "enmsPtName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsTrapStateName"), ("TNMS-NBI-MIB", "enmsTrapStateOldValue"), ("TNMS-NBI-MIB", "enmsTrapStateNewValue"))
if mibBuilder.loadTexts: enmsPortStateChangeTrap.setStatus('current')
enmsPortAttributeChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 4, 4)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsPtNEId"), ("TNMS-NBI-MIB", "enmsPtPortId"), ("TNMS-NBI-MIB", "enmsPtName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsTrapAttributeName"), ("TNMS-NBI-MIB", "enmsTrapAttributeOldValue"), ("TNMS-NBI-MIB", "enmsTrapAttributeNewValue"))
if mibBuilder.loadTexts: enmsPortAttributeChangeTrap.setStatus('current')
enmsPortAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 4, 5)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsPtNEId"), ("TNMS-NBI-MIB", "enmsPtPortId"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsAlClass"), ("TNMS-NBI-MIB", "enmsAlState"), ("TNMS-NBI-MIB", "enmsAlTimeStamp"), ("TNMS-NBI-MIB", "enmsAlEntityString"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCauseString"), ("TNMS-NBI-MIB", "enmsNeName"), ("TNMS-NBI-MIB", "enmsTrapNeLocationLct"), ("TNMS-NBI-MIB", "enmsTrapNeIdName"), ("TNMS-NBI-MIB", "enmsTrapAffectedLocation"), ("TNMS-NBI-MIB", "enmsTrapEventTrafficDirection"), ("TNMS-NBI-MIB", "enmsAlServiceAffect"), ("TNMS-NBI-MIB", "enmsAlAdditionalInformation"), ("TNMS-NBI-MIB", "enmsAlNeSystemContainer"))
if mibBuilder.loadTexts: enmsPortAlarmTrap.setStatus('current')
enmsTPObjectCreationTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 5, 1)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsTpNEId"), ("TNMS-NBI-MIB", "enmsTpPortId"), ("TNMS-NBI-MIB", "enmsTpTPIdH"), ("TNMS-NBI-MIB", "enmsTpTPIdL"), ("TNMS-NBI-MIB", "enmsTpName"), ("TNMS-NBI-MIB", "enmsTpTPType"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"))
if mibBuilder.loadTexts: enmsTPObjectCreationTrap.setStatus('current')
enmsTPObjectDeletionTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 5, 2)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsTpNEId"), ("TNMS-NBI-MIB", "enmsTpPortId"), ("TNMS-NBI-MIB", "enmsTpTPIdH"), ("TNMS-NBI-MIB", "enmsTpTPIdL"), ("TNMS-NBI-MIB", "enmsTpName"), ("TNMS-NBI-MIB", "enmsTpTPType"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"))
if mibBuilder.loadTexts: enmsTPObjectDeletionTrap.setStatus('current')
enmsTPStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 5, 3)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsTpNEId"), ("TNMS-NBI-MIB", "enmsTpPortId"), ("TNMS-NBI-MIB", "enmsTpTPIdH"), ("TNMS-NBI-MIB", "enmsTpTPIdL"), ("TNMS-NBI-MIB", "enmsTpName"), ("TNMS-NBI-MIB", "enmsTpTPType"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsTrapStateName"), ("TNMS-NBI-MIB", "enmsTrapStateOldValue"), ("TNMS-NBI-MIB", "enmsTrapStateNewValue"))
if mibBuilder.loadTexts: enmsTPStateChangeTrap.setStatus('current')
enmsTPAttributeChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 5, 4)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsTpNEId"), ("TNMS-NBI-MIB", "enmsTpPortId"), ("TNMS-NBI-MIB", "enmsTpTPIdH"), ("TNMS-NBI-MIB", "enmsTpTPIdL"), ("TNMS-NBI-MIB", "enmsTpName"), ("TNMS-NBI-MIB", "enmsTpTPType"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsTrapAttributeName"), ("TNMS-NBI-MIB", "enmsTrapAttributeOldValue"), ("TNMS-NBI-MIB", "enmsTrapAttributeNewValue"))
if mibBuilder.loadTexts: enmsTPAttributeChangeTrap.setStatus('current')
enmsTPAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 5, 5)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsTpNEId"), ("TNMS-NBI-MIB", "enmsTpPortId"), ("TNMS-NBI-MIB", "enmsTpTPIdH"), ("TNMS-NBI-MIB", "enmsTpTPIdL"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsAlClass"), ("TNMS-NBI-MIB", "enmsAlState"), ("TNMS-NBI-MIB", "enmsAlTimeStamp"), ("TNMS-NBI-MIB", "enmsAlEntityString"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCauseString"), ("TNMS-NBI-MIB", "enmsNeName"), ("TNMS-NBI-MIB", "enmsTrapNeLocationLct"), ("TNMS-NBI-MIB", "enmsTrapNeIdName"), ("TNMS-NBI-MIB", "enmsTrapAffectedLocation"), ("TNMS-NBI-MIB", "enmsTrapEventTrafficDirection"), ("TNMS-NBI-MIB", "enmsAlServiceAffect"), ("TNMS-NBI-MIB", "enmsAlAdditionalInformation"), ("TNMS-NBI-MIB", "enmsAlNeSystemContainer"))
if mibBuilder.loadTexts: enmsTPAlarmTrap.setStatus('current')
enmsPortConnObjectCreationTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 6, 1)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsPcPortConnId"), ("TNMS-NBI-MIB", "enmsPcName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"))
if mibBuilder.loadTexts: enmsPortConnObjectCreationTrap.setStatus('current')
enmsPortConnObjectDeletionTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 6, 2)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsPcPortConnId"), ("TNMS-NBI-MIB", "enmsPcName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"))
if mibBuilder.loadTexts: enmsPortConnObjectDeletionTrap.setStatus('current')
enmsPortConnAttributeChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 6, 3)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsPcPortConnId"), ("TNMS-NBI-MIB", "enmsPcName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsTrapAttributeName"), ("TNMS-NBI-MIB", "enmsTrapAttributeOldValue"), ("TNMS-NBI-MIB", "enmsTrapAttributeNewValue"))
if mibBuilder.loadTexts: enmsPortConnAttributeChangeTrap.setStatus('current')
enmsSNCObjectCreationTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 7, 1)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsScSNCId"), ("TNMS-NBI-MIB", "enmsScName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"))
if mibBuilder.loadTexts: enmsSNCObjectCreationTrap.setStatus('current')
enmsSNCObjectDeletionTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 7, 2)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsScSNCId"), ("TNMS-NBI-MIB", "enmsScName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"))
if mibBuilder.loadTexts: enmsSNCObjectDeletionTrap.setStatus('current')
enmsSNCStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 7, 3)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsScSNCId"), ("TNMS-NBI-MIB", "enmsScName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsTrapStateName"), ("TNMS-NBI-MIB", "enmsTrapStateOldValue"), ("TNMS-NBI-MIB", "enmsTrapStateNewValue"))
if mibBuilder.loadTexts: enmsSNCStateChangeTrap.setStatus('current')
enmsSNCAttributeChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 7, 4)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsScSNCId"), ("TNMS-NBI-MIB", "enmsScName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsTrapAttributeName"), ("TNMS-NBI-MIB", "enmsTrapAttributeOldValue"), ("TNMS-NBI-MIB", "enmsTrapAttributeNewValue"))
if mibBuilder.loadTexts: enmsSNCAttributeChangeTrap.setStatus('current')
enmsSNCTPRelationshipChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 7, 5)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsScSNCId"), ("TNMS-NBI-MIB", "enmsScName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"))
if mibBuilder.loadTexts: enmsSNCTPRelationshipChangeTrap.setStatus('current')
enmsSubscriberObjectCreationTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 8, 1)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsSbSubscriberId"), ("TNMS-NBI-MIB", "enmsSbName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"))
if mibBuilder.loadTexts: enmsSubscriberObjectCreationTrap.setStatus('current')
enmsSubscriberObjectDeletionTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 8, 2)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsSbSubscriberId"), ("TNMS-NBI-MIB", "enmsSbName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"))
if mibBuilder.loadTexts: enmsSubscriberObjectDeletionTrap.setStatus('current')
enmsSubscriberAttributeChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 8, 3)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsSbSubscriberId"), ("TNMS-NBI-MIB", "enmsSbName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsTrapAttributeName"), ("TNMS-NBI-MIB", "enmsTrapAttributeOldValue"), ("TNMS-NBI-MIB", "enmsTrapAttributeNewValue"))
if mibBuilder.loadTexts: enmsSubscriberAttributeChangeTrap.setStatus('current')
enmsServiceObjectCreationTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 9, 1)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsSvServiceId"), ("TNMS-NBI-MIB", "enmsSvLabel"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"))
if mibBuilder.loadTexts: enmsServiceObjectCreationTrap.setStatus('current')
enmsServiceObjectDeletionTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 9, 2)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsSvServiceId"), ("TNMS-NBI-MIB", "enmsSvLabel"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"))
if mibBuilder.loadTexts: enmsServiceObjectDeletionTrap.setStatus('current')
enmsServiceStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 9, 3)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsSvServiceId"), ("TNMS-NBI-MIB", "enmsSvLabel"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsTrapStateName"), ("TNMS-NBI-MIB", "enmsTrapStateOldValue"), ("TNMS-NBI-MIB", "enmsTrapStateNewValue"))
if mibBuilder.loadTexts: enmsServiceStateChangeTrap.setStatus('current')
enmsServiceAttributeChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 9, 4)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsSvServiceId"), ("TNMS-NBI-MIB", "enmsSvLabel"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsTrapAttributeName"), ("TNMS-NBI-MIB", "enmsTrapAttributeOldValue"), ("TNMS-NBI-MIB", "enmsTrapAttributeNewValue"))
if mibBuilder.loadTexts: enmsServiceAttributeChangeTrap.setStatus('current')
enmsEMSAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 10, 1)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsAlClass"), ("TNMS-NBI-MIB", "enmsAlState"), ("TNMS-NBI-MIB", "enmsAlTimeStamp"), ("TNMS-NBI-MIB", "enmsAlEntityString"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCauseString"), ("TNMS-NBI-MIB", "enmsAlAdditionalInformation"))
if mibBuilder.loadTexts: enmsEMSAlarmTrap.setStatus('current')
enmsHeartbeatTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 11, 1)).setObjects(("TNMS-NBI-MIB", "enmsProxyName"))
if mibBuilder.loadTexts: enmsHeartbeatTrap.setStatus('current')
enmsEthernetPathObjectCreationTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 12, 1)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsEvcEthernetPathId"), ("TNMS-NBI-MIB", "enmsEvcName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"))
if mibBuilder.loadTexts: enmsEthernetPathObjectCreationTrap.setStatus('current')
enmsEthernetPathObjectDeletionTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 12, 2)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsEvcEthernetPathId"), ("TNMS-NBI-MIB", "enmsEvcName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"))
if mibBuilder.loadTexts: enmsEthernetPathObjectDeletionTrap.setStatus('current')
enmsEthernetPathStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 12, 3)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsEvcEthernetPathId"), ("TNMS-NBI-MIB", "enmsEvcName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsTrapStateName"), ("TNMS-NBI-MIB", "enmsTrapStateOldValue"), ("TNMS-NBI-MIB", "enmsTrapStateNewValue"))
if mibBuilder.loadTexts: enmsEthernetPathStateChangeTrap.setStatus('current')
enmsEthernetPathAttributeChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 12, 4)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsEvcEthernetPathId"), ("TNMS-NBI-MIB", "enmsEvcName"), ("TNMS-NBI-MIB", "enmsTrapEventDetails"), ("TNMS-NBI-MIB", "enmsTrapEventSeverity"), ("TNMS-NBI-MIB", "enmsTrapEventProbableCause"), ("TNMS-NBI-MIB", "enmsTrapAttributeName"), ("TNMS-NBI-MIB", "enmsTrapAttributeOldValue"), ("TNMS-NBI-MIB", "enmsTrapAttributeNewValue"))
if mibBuilder.loadTexts: enmsEthernetPathAttributeChangeTrap.setStatus('current')
enmsPerfMonRequestStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 13, 1)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsPmRequestId"), ("TNMS-NBI-MIB", "enmsPmRequestName"), ("TNMS-NBI-MIB", "enmsPmRequestState"), ("TNMS-NBI-MIB", "enmsPmRequestInfo"))
if mibBuilder.loadTexts: enmsPerfMonRequestStateChangeTrap.setStatus('current')
enmsOptPowerMonRequestStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 3, 14, 1)).setObjects(("TNMS-NBI-MIB", "enmsTrapCounter"), ("TNMS-NBI-MIB", "enmsOpmRequestId"), ("TNMS-NBI-MIB", "enmsOpmRequestName"), ("TNMS-NBI-MIB", "enmsOpmRequestState"), ("TNMS-NBI-MIB", "enmsOpmRequestInfo"))
if mibBuilder.loadTexts: enmsOptPowerMonRequestStateChangeTrap.setStatus('current')
enmsCommonTrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 1), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsCommonTrapFilter.setStatus('current')
enmsNETrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 2), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsNETrapFilter.setStatus('current')
enmsModuleTrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 3), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsModuleTrapFilter.setStatus('current')
enmsPortTrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 4), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsPortTrapFilter.setStatus('current')
enmsTPTrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 5), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsTPTrapFilter.setStatus('current')
enmsPortConnTrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 6), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsPortConnTrapFilter.setStatus('current')
enmsSNCTrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 7), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsSNCTrapFilter.setStatus('current')
enmsSubscriberTrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 8), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsSubscriberTrapFilter.setStatus('current')
enmsServiceTrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 9), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsServiceTrapFilter.setStatus('current')
enmsNEAlarmTrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 10), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsNEAlarmTrapFilter.setStatus('current')
enmsModuleAlarmTrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 11), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsModuleAlarmTrapFilter.setStatus('current')
enmsPortAlarmTrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 12), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsPortAlarmTrapFilter.setStatus('current')
enmsTPAlarmTrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 13), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsTPAlarmTrapFilter.setStatus('current')
enmsEMSAlarmTrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 14), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsEMSAlarmTrapFilter.setStatus('current')
enmsNeIdNameFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 15), TrapFilter())
if mibBuilder.loadTexts: enmsNeIdNameFilter.setStatus('current')
enmsMonitorTrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 16), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsMonitorTrapFilter.setStatus('current')
enmsEthernetPathTrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 17), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsEthernetPathTrapFilter.setStatus('current')
enmsPerfMonTrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 18), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsPerfMonTrapFilter.setStatus('current')
enmsOptPowerMonTrapFilter = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 5, 4, 19), TrapFilter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enmsOptPowerMonTrapFilter.setStatus('current')
enmsPmRequestNextId = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 1), PerfMonRequestId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmRequestNextId.setStatus('current')
enmsPerfMonRequestTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 2), )
if mibBuilder.loadTexts: enmsPerfMonRequestTable.setStatus('current')
enmsPerfMonRequestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 2, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsPmRequestId"))
if mibBuilder.loadTexts: enmsPerfMonRequestEntry.setStatus('current')
enmsPmRequestId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 2, 1, 1), PerfMonRequestId())
if mibBuilder.loadTexts: enmsPmRequestId.setStatus('current')
enmsPmRequestName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 2, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsPmRequestName.setStatus('current')
enmsPmRequestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsPmRequestRowStatus.setStatus('current')
enmsPmRequestLastUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 2, 1, 4), EnmsTimeStamp()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsPmRequestLastUpdate.setStatus('current')
enmsPmRequestInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 2, 1, 5), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsPmRequestInfo.setStatus('current')
enmsPmRequestState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 2, 1, 6), PerfMonRequestState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsPmRequestState.setStatus('current')
enmsPmRequestType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 2, 1, 7), PerfMonType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsPmRequestType.setStatus('current')
enmsPmRequestStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 2, 1, 8), EnmsTimeStamp()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsPmRequestStartTime.setStatus('current')
enmsPmRequestEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 2, 1, 9), EnmsTimeStamp()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsPmRequestEndTime.setStatus('current')
enmsPmRequestGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 2, 1, 10), PerfMonGranularity()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsPmRequestGranularity.setStatus('current')
enmsPmRequestFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 2, 1, 11), FilterType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsPmRequestFilterType.setStatus('current')
enmsPmRequestFilterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 2, 1, 12), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsPmRequestFilterValue.setStatus('current')
enmsPerfMonResultPmpTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3), )
if mibBuilder.loadTexts: enmsPerfMonResultPmpTable.setStatus('current')
enmsPerfMonResultPmpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsPmResultPmpReqId"), (0, "TNMS-NBI-MIB", "enmsPmResultPmpPmpNumber"))
if mibBuilder.loadTexts: enmsPerfMonResultPmpEntry.setStatus('current')
enmsPmResultPmpReqId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 1), PerfMonRequestId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpReqId.setStatus('current')
enmsPmResultPmpPmpNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpPmpNumber.setStatus('current')
enmsPmResultPmpNeId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 3), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpNeId.setStatus('current')
enmsPmResultPmpPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 4), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpPortId.setStatus('current')
enmsPmResultPmpTPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 5), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpTPIdH.setStatus('current')
enmsPmResultPmpTPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 6), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpTPIdL.setStatus('current')
enmsPmResultPmpNeIdName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpNeIdName.setStatus('current')
enmsPmResultPmpObjLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpObjLocation.setStatus('current')
enmsPmResultPmpName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpName.setStatus('current')
enmsPmResultPmpLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 10), PerfMonLocation()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpLocation.setStatus('current')
enmsPmResultPmpDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 11), PerfMonDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpDirection.setStatus('current')
enmsPmResultPmpRetrievalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 12), EnmsTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpRetrievalTime.setStatus('current')
enmsPmResultPmpPeriodEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 13), EnmsTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpPeriodEndTime.setStatus('current')
enmsPmResultPmpMonitoredTime = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpMonitoredTime.setStatus('current')
enmsPmResultPmpNumValues = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpNumValues.setStatus('current')
enmsPmResultPmpRelatedPaths = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpRelatedPaths.setStatus('current')
enmsPmResultPmpRelatedServices = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpRelatedServices.setStatus('current')
enmsPmResultPmpRelatedSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 3, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultPmpRelatedSubscribers.setStatus('current')
enmsPerfMonResultValueTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 4), )
if mibBuilder.loadTexts: enmsPerfMonResultValueTable.setStatus('current')
enmsPerfMonResultValueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 4, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsPmResultValReqId"), (0, "TNMS-NBI-MIB", "enmsPmResultValPmpNumber"), (0, "TNMS-NBI-MIB", "enmsPmResultValNumber"))
if mibBuilder.loadTexts: enmsPerfMonResultValueEntry.setStatus('current')
enmsPmResultValReqId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 4, 1, 1), PerfMonRequestId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultValReqId.setStatus('current')
enmsPmResultValPmpNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultValPmpNumber.setStatus('current')
enmsPmResultValNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultValNumber.setStatus('current')
enmsPmResultValParam = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultValParam.setStatus('current')
enmsPmResultValValue = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultValValue.setStatus('current')
enmsPmResultValUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultValUnit.setStatus('current')
enmsPmResultValStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 4, 1, 7), PerfMonStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultValStatus.setStatus('current')
enmsPerfMonResultThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 5), )
if mibBuilder.loadTexts: enmsPerfMonResultThresholdTable.setStatus('current')
enmsPerfMonResultThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 5, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsPmResultValReqId"), (0, "TNMS-NBI-MIB", "enmsPmResultValPmpNumber"), (0, "TNMS-NBI-MIB", "enmsPmResultValNumber"))
if mibBuilder.loadTexts: enmsPerfMonResultThresholdEntry.setStatus('current')
enmsPmResultThresholdReqId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 5, 1, 1), PerfMonRequestId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultThresholdReqId.setStatus('current')
enmsPmResultThresholdPmpNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultThresholdPmpNumber.setStatus('current')
enmsPmResultThresholdNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultThresholdNumber.setStatus('current')
enmsPmResultThresholdParam = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 5, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultThresholdParam.setStatus('current')
enmsPmResultThresholdType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 5, 1, 5), PerfMonThresholdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultThresholdType.setStatus('current')
enmsPmResultThresholdTriggerFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 5, 1, 6), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultThresholdTriggerFlag.setStatus('current')
enmsPmResultThresholdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 5, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultThresholdValue.setStatus('current')
enmsPmResultThresholdUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 6, 5, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsPmResultThresholdUnit.setStatus('current')
enmsOpmRequestNextId = MibScalar((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 1), OptPowerMonRequestId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsOpmRequestNextId.setStatus('current')
enmsOptPowerMonRequestTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 2), )
if mibBuilder.loadTexts: enmsOptPowerMonRequestTable.setStatus('current')
enmsOptPowerMonRequestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 2, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsOpmRequestId"))
if mibBuilder.loadTexts: enmsOptPowerMonRequestEntry.setStatus('current')
enmsOpmRequestId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 2, 1, 1), OptPowerMonRequestId())
if mibBuilder.loadTexts: enmsOpmRequestId.setStatus('current')
enmsOpmRequestName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 2, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsOpmRequestName.setStatus('current')
enmsOpmRequestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsOpmRequestRowStatus.setStatus('current')
enmsOpmRequestLastUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 2, 1, 4), EnmsTimeStamp()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsOpmRequestLastUpdate.setStatus('current')
enmsOpmRequestInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 2, 1, 5), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsOpmRequestInfo.setStatus('current')
enmsOpmRequestState = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 2, 1, 6), OptPowerMonRequestState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsOpmRequestState.setStatus('current')
enmsOpmRequestFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 2, 1, 7), FilterType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsOpmRequestFilterType.setStatus('current')
enmsOpmRequestFilterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 2, 1, 8), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: enmsOpmRequestFilterValue.setStatus('current')
enmsOptPowerMonResultValueTable = MibTable((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 3), )
if mibBuilder.loadTexts: enmsOptPowerMonResultValueTable.setStatus('current')
enmsOptPowerMonResultValueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 3, 1), ).setIndexNames((0, "TNMS-NBI-MIB", "enmsOpmResultValReqId"), (0, "TNMS-NBI-MIB", "enmsOpmResultValNumber"))
if mibBuilder.loadTexts: enmsOptPowerMonResultValueEntry.setStatus('current')
enmsOpmResultValReqId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 3, 1, 1), OptPowerMonRequestId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsOpmResultValReqId.setStatus('current')
enmsOpmResultValNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsOpmResultValNumber.setStatus('current')
enmsOpmResultValNeId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 3, 1, 3), NEId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsOpmResultValNeId.setStatus('current')
enmsOpmResultValPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 3, 1, 4), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsOpmResultValPortId.setStatus('current')
enmsOpmResultValTPIdH = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 3, 1, 5), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsOpmResultValTPIdH.setStatus('current')
enmsOpmResultValTPIdL = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 3, 1, 6), TPId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsOpmResultValTPIdL.setStatus('current')
enmsOpmResultValNeIdName = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsOpmResultValNeIdName.setStatus('current')
enmsOpmResultValObjLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 3, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsOpmResultValObjLocation.setStatus('current')
enmsOpmResultValLane = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsOpmResultValLane.setStatus('current')
enmsOpmResultValLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 3, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsOpmResultValLayer.setStatus('current')
enmsOpmResultValParam = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 3, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsOpmResultValParam.setStatus('current')
enmsOpmResultValValue = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 3, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsOpmResultValValue.setStatus('current')
enmsOpmResultValUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 42229, 6, 22, 7, 3, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enmsOpmResultValUnit.setStatus('current')
mibBuilder.exportSymbols("TNMS-NBI-MIB", enmsSbFax=enmsSbFax, enmsNETrapFilter=enmsNETrapFilter, enmsAlAlarmNumber=enmsAlAlarmNumber, enmsMoShelf=enmsMoShelf, enmsScDestTPIdL=enmsScDestTPIdL, enmsSbAddress=enmsSbAddress, enmsNeClass=enmsNeClass, enmsA8TrafficDirection=enmsA8TrafficDirection, enmsA9TPIdL=enmsA9TPIdL, enmsPmResultThresholdPmpNumber=enmsPmResultThresholdPmpNumber, enmsPtAlarmSeverity=enmsPtAlarmSeverity, enmsAlEntityString=enmsAlEntityString, enmsPmRequestState=enmsPmRequestState, enmsTrapEventTrafficDirection=enmsTrapEventTrafficDirection, ProbableCause=ProbableCause, enmsOpmRequestId=enmsOpmRequestId, enmsPortTable=enmsPortTable, enmsHiTrapTPIdL=enmsHiTrapTPIdL, enmsA3TPIdL=enmsA3TPIdL, enmsNetworkName=enmsNetworkName, enmsTrapCounter=enmsTrapCounter, enmsA8Class=enmsA8Class, enmsA4NeSystemContainer=enmsA4NeSystemContainer, enmsA7ProbableCause=enmsA7ProbableCause, enmsA9ServiceAffect=enmsA9ServiceAffect, enmsNeScDestPortId=enmsNeScDestPortId, enmsTimeStampFormat=enmsTimeStampFormat, enmsProxyOpState=enmsProxyOpState, enmsServiceTrapFilter=enmsServiceTrapFilter, enmsA4TrafficDirection=enmsA4TrafficDirection, enmsAlarmsForPortConnEntry=enmsAlarmsForPortConnEntry, Directionality=Directionality, enmsAlarmsForPortTable=enmsAlarmsForPortTable, enmsHeartbeatInterval=enmsHeartbeatInterval, enmsEvcEthernetPathId=enmsEvcEthernetPathId, enmsNeScSrcPortId=enmsNeScSrcPortId, enmsTpTerminType=enmsTpTerminType, enmsEMSAlarmTrap=enmsEMSAlarmTrap, enmsA3PortId=enmsA3PortId, enmsA8PortId=enmsA8PortId, enmsOpmResultValObjLocation=enmsOpmResultValObjLocation, enmsNEObjectDeletionTrap=enmsNEObjectDeletionTrap, enmsTpTPIdL=enmsTpTPIdL, enmsA6TimeStampFromNE=enmsA6TimeStampFromNE, enmsNETraps=enmsNETraps, enmsMIBVersion=enmsMIBVersion, EntityType=EntityType, enmsSNCTPEntry=enmsSNCTPEntry, enmsAlarmEntry=enmsAlarmEntry, enmsPmRequestFilterValue=enmsPmRequestFilterValue, enmsOptPowerMonResultValueEntry=enmsOptPowerMonResultValueEntry, enmsOpmResultValParam=enmsOpmResultValParam, enmsSvProtectionFlag=enmsSvProtectionFlag, enmsEthernetPathStateChangeTrap=enmsEthernetPathStateChangeTrap, enmsA9Severity=enmsA9Severity, enmsCcSrcPortId=enmsCcSrcPortId, enmsNeScServiceId=enmsNeScServiceId, enmsSvWriteProtected=enmsSvWriteProtected, enmsServiceObjectCreationTrap=enmsServiceObjectCreationTrap, enmsAlarmsForPortConnTable=enmsAlarmsForPortConnTable, enmsA7TPIdH=enmsA7TPIdH, enmsNeScSrcTPIdH=enmsNeScSrcTPIdH, enmsScLayerSet=enmsScLayerSet, enmsNeScDest2PortId=enmsNeScDest2PortId, enmsCcDirection=enmsCcDirection, enmsNeScAdminState=enmsNeScAdminState, enmsPtOpState=enmsPtOpState, enmsA6TrafficDirection=enmsA6TrafficDirection, enmsPmRequestId=enmsPmRequestId, enmsPerfMonResultThresholdEntry=enmsPerfMonResultThresholdEntry, enmsAlClass=enmsAlClass, enmsA3NEId=enmsA3NEId, PerfMonLocation=PerfMonLocation, enmsPortAlarmTrapFilter=enmsPortAlarmTrapFilter, enmsScDestTPIdH=enmsScDestTPIdH, enmsScSrcNEId=enmsScSrcNEId, enmsAlEntityType=enmsAlEntityType, enmsA7TimeStamp=enmsA7TimeStamp, enmsA2Severity=enmsA2Severity, enmsNeSNCEntry=enmsNeSNCEntry, enmsStSNCId=enmsStSNCId, enmsTrapNeIdName=enmsTrapNeIdName, enmsA6EntityType=enmsA6EntityType, AlarmClass=AlarmClass, enmsAlNeSystemContainer=enmsAlNeSystemContainer, enmsTpParentPortId=enmsTpParentPortId, enmsA4EntityString=enmsA4EntityString, enmsA9PortId=enmsA9PortId, enmsTpAlarmSeverity=enmsTpAlarmSeverity, enmsA5Class=enmsA5Class, enmsOpmRequestRowStatus=enmsOpmRequestRowStatus, enmsA7AdditionalInformation=enmsA7AdditionalInformation, enmsNeScProtectionInfo=enmsNeScProtectionInfo, enmsScName=enmsScName, enmsA9ModuleId=enmsA9ModuleId, enmsPtPortId=enmsPtPortId, enmsA8EntityString=enmsA8EntityString, enmsHiTrapTPIdH=enmsHiTrapTPIdH, enmsOpmResultValNeIdName=enmsOpmResultValNeIdName, enmsA6AlarmNumber=enmsA6AlarmNumber, enmsScOpState=enmsScOpState, enmsEthernetPathEntry=enmsEthernetPathEntry, enmsSNMPGetCnt=enmsSNMPGetCnt, enmsAlAdditionalInformation=enmsAlAdditionalInformation, enmsA8AlarmNumber=enmsA8AlarmNumber, enmsA2ProbableCause=enmsA2ProbableCause, enmsMoName=enmsMoName, enmsAlPortId=enmsAlPortId, PTProtectionType=PTProtectionType, PerfMonStatus=PerfMonStatus, enmsPmResultPmpRelatedSubscribers=enmsPmResultPmpRelatedSubscribers, enmsCcDest2TPIdH=enmsCcDest2TPIdH, enmsA5State=enmsA5State, enmsModuleTable=enmsModuleTable, enmsAlNELocation=enmsAlNELocation, enmsSNCAttributeChangeTrap=enmsSNCAttributeChangeTrap, VccId=VccId, enmsSNCSNCTable=enmsSNCSNCTable, enmsA8NELocation=enmsA8NELocation, PTServiceType=PTServiceType, enmsA7TPIdL=enmsA7TPIdL, PerfMonGranularity=PerfMonGranularity, enmsNEAlarmTrapFilter=enmsNEAlarmTrapFilter, enmsCommonTraps=enmsCommonTraps, enmsA7Class=enmsA7Class, enmsA7TrafficDirection=enmsA7TrafficDirection, enmsPcDirection=enmsPcDirection, enmsPcDstPortId=enmsPcDstPortId, enmsScAlarmSeverity=enmsScAlarmSeverity, enmsScSrcTPIdL=enmsScSrcTPIdL, enmsA4EntityType=enmsA4EntityType, enmsNeLocation=enmsNeLocation, enmsA5AlarmNumber=enmsA5AlarmNumber, enmsTPObjectCreationTrap=enmsTPObjectCreationTrap, enmsOpmRequestInfo=enmsOpmRequestInfo, enmsPortAttributeChangeTrap=enmsPortAttributeChangeTrap, TPReliability=TPReliability, enmsPmRequestNextId=enmsPmRequestNextId, enmsAlarmsForTPEntry=enmsAlarmsForTPEntry, enmsA8TPIdL=enmsA8TPIdL, enmsScServiceId=enmsScServiceId, enmsScSrcTPIdH=enmsScSrcTPIdH, enmsA4TimeStampFromNE=enmsA4TimeStampFromNE, enmsA3ProbableCause=enmsA3ProbableCause, enmsA4AdditionalInformation=enmsA4AdditionalInformation, enmsOptPowerMonTrapFilter=enmsOptPowerMonTrapFilter, enmsPmResultPmpPeriodEndTime=enmsPmResultPmpPeriodEndTime, enmsA8TPName=enmsA8TPName, enmsOpmResultValTPIdH=enmsOpmResultValTPIdH, enmsThTPNumber=enmsThTPNumber, CCId=CCId, enmsServiceEntry=enmsServiceEntry, enmsAlNEId=enmsAlNEId, enmsPortConnEntry=enmsPortConnEntry, enmsA6TPName=enmsA6TPName, enmsA7AlarmNumber=enmsA7AlarmNumber, enmsSubscriberTable=enmsSubscriberTable, PerfMonType=PerfMonType, enmsA3NeSystemContainer=enmsA3NeSystemContainer, enmsA8NeSystemContainer=enmsA8NeSystemContainer, enmsOpmResultValUnit=enmsOpmResultValUnit, OptPowerMonRequestId=OptPowerMonRequestId, enmsA9TrafficDirection=enmsA9TrafficDirection, enmsSNMPSetCnt=enmsSNMPSetCnt, enmsPortTraps=enmsPortTraps, enmsTpBandwidthTX=enmsTpBandwidthTX, TrapFilter=TrapFilter, enmsA5TPIdL=enmsA5TPIdL, enmsScMinBandwidth=enmsScMinBandwidth, SVProtection=SVProtection, enmsOpmRequestNextId=enmsOpmRequestNextId, enmsSNCSNCEntry=enmsSNCSNCEntry, enmsSbURL=enmsSbURL, enmsTrapVariable=enmsTrapVariable, enmsEvcSVlanId=enmsEvcSVlanId, enmsPmResultPmpTPIdH=enmsPmResultPmpTPIdH, enmsA3TrafficDirection=enmsA3TrafficDirection, enmsCcSrc2NEId=enmsCcSrc2NEId, enmsA6EntityString=enmsA6EntityString, enmsSvOpState=enmsSvOpState, enmsModuleAlarmTrap=enmsModuleAlarmTrap, enmsAlModuleId=enmsAlModuleId, enmsNeAlarmSeverity=enmsNeAlarmSeverity, enmsA7NELocation=enmsA7NELocation, enmsServiceAttributeChangeTrap=enmsServiceAttributeChangeTrap, enmsThSNCId=enmsThSNCId, enmsNeScSrc2PortId=enmsNeScSrc2PortId, enmsA3TPIdH=enmsA3TPIdH, enmsA7ProbableCauseString=enmsA7ProbableCauseString, enmsPmRequestInfo=enmsPmRequestInfo, enmsPmResultPmpNumValues=enmsPmResultPmpNumValues, enmsPmResultValValue=enmsPmResultValValue, Boolean=Boolean, enmsA3TimeStampFromNE=enmsA3TimeStampFromNE, enmsPmRequestLastUpdate=enmsPmRequestLastUpdate, enmsHiTrapSecondId=enmsHiTrapSecondId, enmsScAdminState=enmsScAdminState, PerceivedSeverity=PerceivedSeverity, enmsA5AffectedLocation=enmsA5AffectedLocation, enmsCcDestPortId=enmsCcDestPortId, CharacteristicInfo=CharacteristicInfo, enmsA2ProbableCauseString=enmsA2ProbableCauseString, enmsOpmResultValValue=enmsOpmResultValValue, enmsPtDirection=enmsPtDirection, enmsCcDestTPIdH=enmsCcDestTPIdH, enmsSbContactPerson=enmsSbContactPerson, enmsPerfMonResultPmpTable=enmsPerfMonResultPmpTable, enmsA6NEId=enmsA6NEId, enmsA7PortId=enmsA7PortId, enmsStTPIdH=enmsStTPIdH, enmsScDestNEId=enmsScDestNEId, enmsA6ProbableCause=enmsA6ProbableCause, enmsMoOpState=enmsMoOpState, enmsPcLayerSet=enmsPcLayerSet, enmsSbPhone=enmsSbPhone, InfoString=InfoString, enmsTrapEventProbableCause=enmsTrapEventProbableCause, enmsA8ModuleId=enmsA8ModuleId, enmsCounter=enmsCounter, enmsPtCanPathProtection=enmsPtCanPathProtection, enmsAlarmsForSNCTable=enmsAlarmsForSNCTable, enmsTpUsageStateTX=enmsTpUsageStateTX, enmsPmResultValUnit=enmsPmResultValUnit, enmsCcDest2TPIdL=enmsCcDest2TPIdL, PTTechnology=PTTechnology, enmsEthernetPathTable=enmsEthernetPathTable, enmsCCTable=enmsCCTable, enmsA5EntityString=enmsA5EntityString, enmsPtProtectionType=enmsPtProtectionType, TPType=TPType, TPEndPointType=TPEndPointType, OperatingMode=OperatingMode, enmsNeNEId=enmsNeNEId, enmsA4State=enmsA4State, NotificationType=NotificationType, PerfMonRequestId=PerfMonRequestId, enmsA8ProbableCauseString=enmsA8ProbableCauseString, enmsScRequiredBandwidth=enmsScRequiredBandwidth, enmsA5TimeStamp=enmsA5TimeStamp, enmsCcDestNEId=enmsCcDestNEId, enmsInformMaxTries=enmsInformMaxTries, enmsTpPortId=enmsTpPortId, enmsTpFragmentLayer=enmsTpFragmentLayer, enmsScSNCOwnerId=enmsScSNCOwnerId, enmsA2TPIdH=enmsA2TPIdH, enmsTrapStateName=enmsTrapStateName, enmsPerfMonTraps=enmsPerfMonTraps, enmsPmRequestFilterType=enmsPmRequestFilterType, enmsNeScSrcTPIdL=enmsNeScSrcTPIdL, enmsNeScDest2NEId=enmsNeScDest2NEId, enmsCcDest2PortId=enmsCcDest2PortId, enmsPtLayerSet=enmsPtLayerSet, enmsA8TimeStamp=enmsA8TimeStamp, OptPowerMonRequestState=OptPowerMonRequestState)
mibBuilder.exportSymbols("TNMS-NBI-MIB", enmsTrapAttributeNewValue=enmsTrapAttributeNewValue, enmsNEAlarmTrap=enmsNEAlarmTrap, enmsPerfMonRequestStateChangeTrap=enmsPerfMonRequestStateChangeTrap, enmsTpTPType=enmsTpTPType, enmsPortAlarmTrap=enmsPortAlarmTrap, SubscriberId=SubscriberId, enmsA2State=enmsA2State, enmsScDest2TPIdH=enmsScDest2TPIdH, enmsPtNEId=enmsPtNEId, enmsNeScLayerSet=enmsNeScLayerSet, enmsTrapAttributeName=enmsTrapAttributeName, enmsPtOperatingMode=enmsPtOperatingMode, enmsScDest2NEId=enmsScDest2NEId, enmsTpObjectType=enmsTpObjectType, enmsPcName=enmsPcName, enmsMoSlot=enmsMoSlot, enmsA3ProbableCauseString=enmsA3ProbableCauseString, enmsCcSrc2PortId=enmsCcSrc2PortId, enmsSNCTPTable=enmsSNCTPTable, enmsA7ServiceId=enmsA7ServiceId, UniqueId=UniqueId, enmsTpParentTPIdL=enmsTpParentTPIdL, enmsCommonTrapFilter=enmsCommonTrapFilter, enmsHeartbeatOpState=enmsHeartbeatOpState, enmsOptPowerMonRequestStateChangeTrap=enmsOptPowerMonRequestStateChangeTrap, enmsPmRequestStartTime=enmsPmRequestStartTime, enmsA6TimeStamp=enmsA6TimeStamp, enmsA2ModuleId=enmsA2ModuleId, enmsAlarmsForEthernetPathEntry=enmsAlarmsForEthernetPathEntry, enmsAlTPIdL=enmsAlTPIdL, enmsMoNEId=enmsMoNEId, enmsTpUsageStateRX=enmsTpUsageStateRX, enmsOpmResultValLane=enmsOpmResultValLane, enmsTpUsageCountTX=enmsTpUsageCountTX, enmsSvSubscriberId=enmsSvSubscriberId, enmsAlTPName=enmsAlTPName, enmsA3TimeStamp=enmsA3TimeStamp, enmsTpLayerSet=enmsTpLayerSet, enmsA6ModuleId=enmsA6ModuleId, enmsNeScName=enmsNeScName, enmsA6SNCId=enmsA6SNCId, enmsCcSrcNEId=enmsCcSrcNEId, enmsSbExternalReference=enmsSbExternalReference, enmsModuleAttributeChangeTrap=enmsModuleAttributeChangeTrap, enmsCcSrcTPIdL=enmsCcSrcTPIdL, enmsNETable=enmsNETable, enmsA2TimeStampFromNE=enmsA2TimeStampFromNE, enmsA4PortId=enmsA4PortId, enmsA2NEId=enmsA2NEId, enmsPmResultPmpRelatedServices=enmsPmResultPmpRelatedServices, enmsTpName=enmsTpName, enmsSvAdminState=enmsSvAdminState, enmsA2NELocation=enmsA2NELocation, enmsAlSeverity=enmsAlSeverity, enmsHiTrapFirstId=enmsHiTrapFirstId, enmsPmResultThresholdNumber=enmsPmResultThresholdNumber, enmsAlTPIdH=enmsAlTPIdH, enmsPtName=enmsPtName, enmsOpmRequestLastUpdate=enmsOpmRequestLastUpdate, enmsNeScDirection=enmsNeScDirection, TPId=TPId, enmsModuleObjectCreationTrap=enmsModuleObjectCreationTrap, enmsPortObjectDeletionTrap=enmsPortObjectDeletionTrap, enmsNeScNeId=enmsNeScNeId, enmsPmRequestType=enmsPmRequestType, enmsPmResultThresholdUnit=enmsPmResultThresholdUnit, enmsAlarmsForServiceTable=enmsAlarmsForServiceTable, ProtectionState=ProtectionState, enmsOpmResultValLayer=enmsOpmResultValLayer, enmsNeSNCTable=enmsNeSNCTable, UsageState=UsageState, enmsPortConnObjectDeletionTrap=enmsPortConnObjectDeletionTrap, enmsA6AdditionalInformation=enmsA6AdditionalInformation, enmsA9EthernetPathId=enmsA9EthernetPathId, EthernetPathType=EthernetPathType, enmsPmResultValPmpNumber=enmsPmResultValPmpNumber, enmsSNCTrapFilter=enmsSNCTrapFilter, enmsA8TimeStampFromNE=enmsA8TimeStampFromNE, enmsOpmResultValPortId=enmsOpmResultValPortId, enmsSNCCCCCId=enmsSNCCCCCId, EnmsTimeStamp=EnmsTimeStamp, enmsA5PortId=enmsA5PortId, enmsA7TimeStampFromNE=enmsA7TimeStampFromNE, DisplayString=DisplayString, enmsModuleObjectDeletionTrap=enmsModuleObjectDeletionTrap, enmsAlarmTable=enmsAlarmTable, enmsSubscriberEntry=enmsSubscriberEntry, enmsPmResultPmpReqId=enmsPmResultPmpReqId, enmsSubscriberTraps=enmsSubscriberTraps, enmsPtBandwidth=enmsPtBandwidth, Bandwidth=Bandwidth, enmsA7EntityType=enmsA7EntityType, enmsA3Severity=enmsA3Severity, enmsPtObjectType=enmsPtObjectType, enmsNeCanPathProtection=enmsNeCanPathProtection, enmsA5Severity=enmsA5Severity, enmsTrapAffectedLocation=enmsTrapAffectedLocation, enmsPmResultValNumber=enmsPmResultValNumber, enmsNeScProtectionFlag=enmsNeScProtectionFlag, enmsA5TrafficDirection=enmsA5TrafficDirection, enmsA7AffectedLocation=enmsA7AffectedLocation, enmsNeOpState=enmsNeOpState, enmsTPEntry=enmsTPEntry, enmsA5ServiceAffect=enmsA5ServiceAffect, enmsA6ProbableCauseString=enmsA6ProbableCauseString, enmsSNMPTrapCnt=enmsSNMPTrapCnt, enmsA7ModuleId=enmsA7ModuleId, enmsTrapTimeStamp=enmsTrapTimeStamp, enmsTrapEventSeverity=enmsTrapEventSeverity, enmsNeScDestNEId=enmsNeScDestNEId, enmsNeUserText=enmsNeUserText, enmsTPAlarmTrap=enmsTPAlarmTrap, enmsPortConnTrapFilter=enmsPortConnTrapFilter, enmsServiceTable=enmsServiceTable, enmsScSNCId=enmsScSNCId, enmsA3AdditionalInformation=enmsA3AdditionalInformation, enmsA8AdditionalInformation=enmsA8AdditionalInformation, enmsPmResultPmpNeId=enmsPmResultPmpNeId, enmsCcCCId=enmsCcCCId, enmsSbOrganisation=enmsSbOrganisation, enmsPmResultPmpPortId=enmsPmResultPmpPortId, enmsNeScDestTPIdH=enmsNeScDestTPIdH, enmsTrapFilter=enmsTrapFilter, enmsOptPowerMonTraps=enmsOptPowerMonTraps, enmsOpmRequestFilterType=enmsOpmRequestFilterType, enmsMoType=enmsMoType, enmsA9State=enmsA9State, enmsA2AdditionalInformation=enmsA2AdditionalInformation, AdministrativeState=AdministrativeState, enmsControl=enmsControl, enmsA9AdditionalInformation=enmsA9AdditionalInformation, enmsSNCTHTable=enmsSNCTHTable, enmsCcSrc2TPIdH=enmsCcSrc2TPIdH, enmsA3ServiceAffect=enmsA3ServiceAffect, enmsTpOpStateRX=enmsTpOpStateRX, PerfMonDirection=PerfMonDirection, enmsAlarmsForNEEntry=enmsAlarmsForNEEntry, enmsTrapEventDetails=enmsTrapEventDetails, svsProxEnms=svsProxEnms, enmsCcNxCount=enmsCcNxCount, enmsAlarmsForTPTable=enmsAlarmsForTPTable, enmsTPAttributeChangeTrap=enmsTPAttributeChangeTrap, enmsTpReliability=enmsTpReliability, enmsPtServiceType=enmsPtServiceType, enmsA2TPName=enmsA2TPName, enmsA6TPIdH=enmsA6TPIdH, enmsNeName=enmsNeName, enmsNeScNxCount=enmsNeScNxCount, enmsTpNEId=enmsTpNEId, enmsAlTimeStampFromNE=enmsAlTimeStampFromNE, SNCProtectionInfo=SNCProtectionInfo, ModuleId=ModuleId, enmsMonitorTraps=enmsMonitorTraps, enmsNeScSrc2TPIdL=enmsNeScSrc2TPIdL, enmsA5TPName=enmsA5TPName, enmsA7EntityString=enmsA7EntityString, PTInterfaceType=PTInterfaceType, enmsA2ServiceAffect=enmsA2ServiceAffect, enmsA7ServiceAffect=enmsA7ServiceAffect, enmsScSrc2NEId=enmsScSrc2NEId, enmsNeIdNameFilter=enmsNeIdNameFilter, enmsA9TPIdH=enmsA9TPIdH, TPIndex=TPIndex, enmsA4AlarmNumber=enmsA4AlarmNumber, enmsA7NEId=enmsA7NEId, enmsA9TimeStamp=enmsA9TimeStamp, enmsPtCanBroadcast=enmsPtCanBroadcast, enmsEvcOpState=enmsEvcOpState, enmsNeScAlarmSeverity=enmsNeScAlarmSeverity, enmsA6Class=enmsA6Class, enmsSNMPGetNextCnt=enmsSNMPGetNextCnt, enmsNeScSNCOwnerId=enmsNeScSNCOwnerId, enmsA9EntityType=enmsA9EntityType, enmsPmResultPmpName=enmsPmResultPmpName, TrafficDirection=TrafficDirection, enmsPerfMonRequestTable=enmsPerfMonRequestTable, enmsTpMuxPartnerTPIdL=enmsTpMuxPartnerTPIdL, enmsPerfMon=enmsPerfMon, enmsEthernetPathObjectCreationTrap=enmsEthernetPathObjectCreationTrap, enmsPcSrcAlarmSeverity=enmsPcSrcAlarmSeverity, enmsMoModuleId=enmsMoModuleId, enmsPerfMonTrapFilter=enmsPerfMonTrapFilter, enmsA9NEId=enmsA9NEId, AlarmState=AlarmState, enmsA8ProbableCause=enmsA8ProbableCause, enmsPmResultPmpDirection=enmsPmResultPmpDirection, enmsSbName=enmsSbName, enmsTpDirection=enmsTpDirection, enmsSvDirection=enmsSvDirection, enmsStTPNumber=enmsStTPNumber, enmsNeCanBroadcast=enmsNeCanBroadcast, enmsPmResultPmpObjLocation=enmsPmResultPmpObjLocation, enmsA2AlarmNumber=enmsA2AlarmNumber, enmsA9NELocation=enmsA9NELocation, enmsTpAdminState=enmsTpAdminState, enmsA6AffectedLocation=enmsA6AffectedLocation, enmsHiTrapNumber=enmsHiTrapNumber, enmsSvServiceId=enmsSvServiceId, enmsTpOpStateTX=enmsTpOpStateTX, enmsCcDest2NEId=enmsCcDest2NEId, enmsSubscriberObjectCreationTrap=enmsSubscriberObjectCreationTrap, enmsNeScSrc2TPIdH=enmsNeScSrc2TPIdH, enmsPerfMonResultValueTable=enmsPerfMonResultValueTable, enmsPcSrcNEId=enmsPcSrcNEId, enmsPmRequestName=enmsPmRequestName, enmsPmResultValParam=enmsPmResultValParam, enmsA2TimeStamp=enmsA2TimeStamp, enmsPtModuleIdTX=enmsPtModuleIdTX, EthernetPathProtectionInfo=EthernetPathProtectionInfo, enmsA3AlarmNumber=enmsA3AlarmNumber, enmsPmResultThresholdReqId=enmsPmResultThresholdReqId, enmsTpTPIndex=enmsTpTPIndex, enmsHiTrapCounter=enmsHiTrapCounter, enmsA8Severity=enmsA8Severity, enmsStNEId=enmsStNEId, enmsScProtectionFlag=enmsScProtectionFlag, enmsTrapHistoryTableLength=enmsTrapHistoryTableLength, enmsOpmResultValTPIdL=enmsOpmResultValTPIdL, enmsPtTechnology=enmsPtTechnology, enmsPmResultPmpRetrievalTime=enmsPmResultPmpRetrievalTime, enmsTPTable=enmsTPTable, PYSNMP_MODULE_ID=svsProxEnms, LayerSet=LayerSet, enmsA8NEId=enmsA8NEId, VpcId=VpcId, enmsStTimeSlotHry=enmsStTimeSlotHry, enmsA9AffectedLocation=enmsA9AffectedLocation, coriant=coriant, enmsTpParentTPIdH=enmsTpParentTPIdH, enmsNEObjectCreationTrap=enmsNEObjectCreationTrap, enmsOptPowerMonResultValueTable=enmsOptPowerMonResultValueTable, enmsA9Class=enmsA9Class, enmsA5TimeStampFromNE=enmsA5TimeStampFromNE, TPTerminationType=TPTerminationType, enmsA6State=enmsA6State, enmsTrapHistoryEntry=enmsTrapHistoryEntry, enmsA3EntityType=enmsA3EntityType, enmsService=enmsService, enmsEnterpriseId=enmsEnterpriseId, OperationalState=OperationalState, enmsScBandwidth=enmsScBandwidth, enmsServiceObjectDeletionTrap=enmsServiceObjectDeletionTrap, enmsA2TrafficDirection=enmsA2TrafficDirection, enmsAlarmsForSNCEntry=enmsAlarmsForSNCEntry, enmsA7Severity=enmsA7Severity, enmsStIsWorkingTP=enmsStIsWorkingTP, enmsScDestPortId=enmsScDestPortId, enmsA5ModuleId=enmsA5ModuleId, enmsPmResultThresholdValue=enmsPmResultThresholdValue, enmsA3AffectedLocation=enmsA3AffectedLocation, enmsAlTimeStamp=enmsAlTimeStamp, enmsA8State=enmsA8State, enmsPmResultValReqId=enmsPmResultValReqId, enmsSsServerSNCId=enmsSsServerSNCId)
mibBuilder.exportSymbols("TNMS-NBI-MIB", enmsA4TPIdL=enmsA4TPIdL, enmsNeCommunicationState=enmsNeCommunicationState, enmsSNCEntry=enmsSNCEntry, enmsPerfMonResultThresholdTable=enmsPerfMonResultThresholdTable, enmsTpUsageCountRX=enmsTpUsageCountRX, TPTimeSlotHierarchy=TPTimeSlotHierarchy, enmsTpNxCount=enmsTpNxCount, enmsA9ProbableCauseString=enmsA9ProbableCauseString, enmsSNCStateChangeTrap=enmsSNCStateChangeTrap, enmsPmResultPmpNeIdName=enmsPmResultPmpNeIdName, enmsPmResultThresholdType=enmsPmResultThresholdType, enmsTPStateChangeTrap=enmsTPStateChangeTrap, enmsHiTrapEntityType=enmsHiTrapEntityType, PerfMonThresholdType=PerfMonThresholdType, FilterType=FilterType, enmsScSrc2PortId=enmsScSrc2PortId, enmsA2EntityString=enmsA2EntityString, enmsSvLabel=enmsSvLabel, enmsAlProbableCauseString=enmsAlProbableCauseString, enmsA2PortId=enmsA2PortId, enmsAlProbableCause=enmsAlProbableCause, enmsOptPowerMonRequestTable=enmsOptPowerMonRequestTable, enmsPmRequestGranularity=enmsPmRequestGranularity, enmsCcDestTPIdL=enmsCcDestTPIdL, enmsOptPowerMon=enmsOptPowerMon, enmsThTPHierId=enmsThTPHierId, enmsPcPortConnId=enmsPcPortConnId, enmsNeScBandwidth=enmsNeScBandwidth, enmsTrapHistoryTable=enmsTrapHistoryTable, enmsTrapEventProbableCauseString=enmsTrapEventProbableCauseString, enmsA6Severity=enmsA6Severity, enmsPcDstAlarmSeverity=enmsPcDstAlarmSeverity, enmsEvcType=enmsEvcType, NEId=NEId, enmsTrapStateNewValue=enmsTrapStateNewValue, enmsPmRequestEndTime=enmsPmRequestEndTime, enmsScDest2PortId=enmsScDest2PortId, enmsA9TPName=enmsA9TPName, enmsEthernetPathTraps=enmsEthernetPathTraps, enmsNeScMinBandwidth=enmsNeScMinBandwidth, enmsNeScOpState=enmsNeScOpState, enmsEvcAlarmSeverity=enmsEvcAlarmSeverity, enmsPerfMonResultPmpEntry=enmsPerfMonResultPmpEntry, enmsNeType=enmsNeType, enmsPcSrcPortId=enmsPcSrcPortId, ServiceId=ServiceId, enmsA6PortId=enmsA6PortId, enmsTPObjectDeletionTrap=enmsTPObjectDeletionTrap, enmsA3EntityString=enmsA3EntityString, enmsAlServiceAffect=enmsAlServiceAffect, enmsPerfMonRequestEntry=enmsPerfMonRequestEntry, enmsPortEntry=enmsPortEntry, enmsA4NEId=enmsA4NEId, enmsSvServiceOwnerId=enmsSvServiceOwnerId, enmsNetworkSetup=enmsNetworkSetup, enmsTrapGroup=enmsTrapGroup, enmsTrapNeLocationLct=enmsTrapNeLocationLct, enmsA4ServiceAffect=enmsA4ServiceAffect, enmsA7State=enmsA7State, enmsA4TPName=enmsA4TPName, enmsNeScFragmentLayer=enmsNeScFragmentLayer, enmsA2TPIdL=enmsA2TPIdL, enmsTrapStateOldValue=enmsTrapStateOldValue, enmsStTPIdL=enmsStTPIdL, enmsAlarmsForModuleTable=enmsAlarmsForModuleTable, enmsPtOpStateTX=enmsPtOpStateTX, enmsNeScRequiredBandwidth=enmsNeScRequiredBandwidth, enmsEvcName=enmsEvcName, enmsTrapAttributeOldValue=enmsTrapAttributeOldValue, enmsA4ProbableCauseString=enmsA4ProbableCauseString, enmsA8AffectedLocation=enmsA8AffectedLocation, enmsTPAlarmTrapFilter=enmsTPAlarmTrapFilter, enmsA8ServiceAffect=enmsA8ServiceAffect, enmsA4Class=enmsA4Class, enmsEvcServiceId=enmsEvcServiceId, enmsNeSystemContainer=enmsNeSystemContainer, enmsSbEMail=enmsSbEMail, enmsNeScSrc2NEId=enmsNeScSrc2NEId, enmsA2AffectedLocation=enmsA2AffectedLocation, enmsA5NEId=enmsA5NEId, enmsOpmRequestName=enmsOpmRequestName, enmsStPortId=enmsStPortId, enmsSNCCCSNCId=enmsSNCCCSNCId, enmsSNCObjectCreationTrap=enmsSNCObjectCreationTrap, enmsAlarmsForModuleEntry=enmsAlarmsForModuleEntry, enmsEthernetPathObjectDeletionTrap=enmsEthernetPathObjectDeletionTrap, enmsNeScSNCId=enmsNeScSNCId, enmsOpmResultValNumber=enmsOpmResultValNumber, enmsA2Class=enmsA2Class, enmsNeScDest2TPIdL=enmsNeScDest2TPIdL, enmsPmResultPmpTPIdL=enmsPmResultPmpTPIdL, enmsCCEntry=enmsCCEntry, enmsNeScDest2TPIdH=enmsNeScDest2TPIdH, enmsCcProtectionState=enmsCcProtectionState, enmsPmResultThresholdTriggerFlag=enmsPmResultThresholdTriggerFlag, enmsNeExternalNEId=enmsNeExternalNEId, enmsPortConnTraps=enmsPortConnTraps, enmsPtOpStateRX=enmsPtOpStateRX, enmsTpBandwidthRX=enmsTpBandwidthRX, enmsModuleStateChangeTrap=enmsModuleStateChangeTrap, svsProductMibs=svsProductMibs, enmsNEEntry=enmsNEEntry, enmsSNCCCEntry=enmsSNCCCEntry, enmsProxyStateChangeTrap=enmsProxyStateChangeTrap, enmsServiceTraps=enmsServiceTraps, enmsNeIsPseudoNE=enmsNeIsPseudoNE, enmsA9AlarmNumber=enmsA9AlarmNumber, enmsNEAttributeChangeTrap=enmsNEAttributeChangeTrap, enmsEthernetPathAttributeChangeTrap=enmsEthernetPathAttributeChangeTrap, enmsTpMuxPartnerTPIdH=enmsTpMuxPartnerTPIdH, enmsPmResultPmpRelatedPaths=enmsPmResultPmpRelatedPaths, enmsA5ProbableCause=enmsA5ProbableCause, enmsAlState=enmsAlState, enmsA2NeSystemContainer=enmsA2NeSystemContainer, enmsA4ProbableCause=enmsA4ProbableCause, enmsA5ProbableCauseString=enmsA5ProbableCauseString, enmsA6NELocation=enmsA6NELocation, enmsPmResultThresholdParam=enmsPmResultThresholdParam, enmsA3NELocation=enmsA3NELocation, enmsNeIdName=enmsNeIdName, enmsPmRequestRowStatus=enmsPmRequestRowStatus, enmsAlarmsForServiceEntry=enmsAlarmsForServiceEntry, enmsEvcAdminState=enmsEvcAdminState, enmsTPTrapFilter=enmsTPTrapFilter, enmsSNCObjectDeletionTrap=enmsSNCObjectDeletionTrap, enmsOpmRequestFilterValue=enmsOpmRequestFilterValue, enmsCcProtectionFlag=enmsCcProtectionFlag, enmsTpBandwidth=enmsTpBandwidth, enmsSbSubscriberId=enmsSbSubscriberId, enmsPortConnObjectCreationTrap=enmsPortConnObjectCreationTrap, enmsPtAdminState=enmsPtAdminState, enmsA4TimeStamp=enmsA4TimeStamp, enmsAlarmsForNETable=enmsAlarmsForNETable, enmsPerfMonResultValueEntry=enmsPerfMonResultValueEntry, enmsPortConnTable=enmsPortConnTable, enmsStEndPointType=enmsStEndPointType, enmsNeScSrcNEId=enmsNeScSrcNEId, enmsOpmResultValNeId=enmsOpmResultValNeId, enmsSNCTPRelationshipChangeTrap=enmsSNCTPRelationshipChangeTrap, enmsScSrcPortId=enmsScSrcPortId, enmsSsSNCId=enmsSsSNCId, enmsA5AdditionalInformation=enmsA5AdditionalInformation, enmsA3TPName=enmsA3TPName, enmsA8TPIdH=enmsA8TPIdH, SNCId=SNCId, PerfMonRequestState=PerfMonRequestState, enmsA9TimeStampFromNE=enmsA9TimeStampFromNE, enmsA9ProbableCause=enmsA9ProbableCause, enmsSubscriberTrapFilter=enmsSubscriberTrapFilter, enmsModuleEntry=enmsModuleEntry, enmsEMSAlarmTrapFilter=enmsEMSAlarmTrapFilter, enmsCcSrc2TPIdL=enmsCcSrc2TPIdL, enmsPcDstNEId=enmsPcDstNEId, enmsMoObjectType=enmsMoObjectType, enmsAlarmTables=enmsAlarmTables, enmsInformTimeout=enmsInformTimeout, enmsTraps=enmsTraps, enmsA5EntityType=enmsA5EntityType, enmsNEStateChangeTrap=enmsNEStateChangeTrap, enmsA4TPIdH=enmsA4TPIdH, enmsPmResultPmpLocation=enmsPmResultPmpLocation, enmsScDirection=enmsScDirection, enmsPtModuleId=enmsPtModuleId, enmsA8EntityType=enmsA8EntityType, enmsPmResultValStatus=enmsPmResultValStatus, enmsCcSrcTPIdH=enmsCcSrcTPIdH, PortConnId=PortConnId, enmsServiceStateChangeTrap=enmsServiceStateChangeTrap, enmsTpTPIdH=enmsTpTPIdH, enmsTPTraps=enmsTPTraps, enmsPtModuleIdRX=enmsPtModuleIdRX, enmsOpmResultValReqId=enmsOpmResultValReqId, enmsA4AffectedLocation=enmsA4AffectedLocation, ProvisioningState=ProvisioningState, enmsCcOpState=enmsCcOpState, enmsA5TPIdH=enmsA5TPIdH, enmsAlTrafficDirection=enmsAlTrafficDirection, enmsA3State=enmsA3State, enmsNeScDestTPIdL=enmsNeScDestTPIdL, enmsA7TPName=enmsA7TPName, enmsSubscriberObjectDeletionTrap=enmsSubscriberObjectDeletionTrap, enmsA6ServiceAffect=enmsA6ServiceAffect, enmsPortStateChangeTrap=enmsPortStateChangeTrap, enmsPmResultPmpMonitoredTime=enmsPmResultPmpMonitoredTime, enmsScNxCount=enmsScNxCount, enmsA6TPIdL=enmsA6TPIdL, enmsCcNEId=enmsCcNEId, enmsAlarmsForPortEntry=enmsAlarmsForPortEntry, enmsNeDCNLocation=enmsNeDCNLocation, enmsScSrc2TPIdL=enmsScSrc2TPIdL, enmsProxyName=enmsProxyName, enmsProxyPSTAMP=enmsProxyPSTAMP, enmsPmResultPmpPmpNumber=enmsPmResultPmpPmpNumber, enmsPcBandwidth=enmsPcBandwidth, enmsSNCTable=enmsSNCTable, enmsProxy=enmsProxy, enmsPortConnAttributeChangeTrap=enmsPortConnAttributeChangeTrap, enmsSNCTHEntry=enmsSNCTHEntry, enmsA5NELocation=enmsA5NELocation, enmsPortObjectCreationTrap=enmsPortObjectCreationTrap, enmsHeartbeatTrap=enmsHeartbeatTrap, enmsEthernetPathTrapFilter=enmsEthernetPathTrapFilter, enmsThChannelNo=enmsThChannelNo, enmsModuleTrapFilter=enmsModuleTrapFilter, enmsMonitorTrapFilter=enmsMonitorTrapFilter, enmsAlAffectedLocation=enmsAlAffectedLocation, enmsScFragmentLayer=enmsScFragmentLayer, enmsModuleAlarmTrapFilter=enmsModuleAlarmTrapFilter, enmsScSrc2TPIdH=enmsScSrc2TPIdH, enmsPortTrapFilter=enmsPortTrapFilter, enmsAlarmsForEthernetPathTable=enmsAlarmsForEthernetPathTable, enmsA5PortConnId=enmsA5PortConnId, EthernetPathId=EthernetPathId, NEClass=NEClass, enmsA3Class=enmsA3Class, enmsHiTrapNfyType=enmsHiTrapNfyType, enmsSNCCCTable=enmsSNCCCTable, enmsOptPowerMonRequestEntry=enmsOptPowerMonRequestEntry, enmsSubscriberAttributeChangeTrap=enmsSubscriberAttributeChangeTrap, enmsOpmRequestState=enmsOpmRequestState, enmsA9EntityString=enmsA9EntityString, enmsScDest2TPIdL=enmsScDest2TPIdL, enmsA2EntityType=enmsA2EntityType, enmsSNCTraps=enmsSNCTraps, enmsEMSTraps=enmsEMSTraps, enmsEMSVersion=enmsEMSVersion, enmsA4NELocation=enmsA4NELocation, enmsPtInterfaceType=enmsPtInterfaceType, enmsModuleTraps=enmsModuleTraps, enmsTrapHist=enmsTrapHist, PortId=PortId, enmsScProtectionInfo=enmsScProtectionInfo, enmsNeOperatingMode=enmsNeOperatingMode, enmsA4Severity=enmsA4Severity)
