#
# PySNMP MIB module FASTPATH-ROUTING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FASTPATH-ROUTING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:58:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
fastPath, = mibBuilder.importSymbols("BROADCOM-REF-MIB", "fastPath")
ifIndex, InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndexOrZero", "InterfaceIndex")
ospfAreaEntry, ospfIfEntry, RouterID, ospfVirtIfEntry = mibBuilder.importSymbols("OSPF-MIB", "ospfAreaEntry", "ospfIfEntry", "RouterID", "ospfVirtIfEntry")
rip2IfConfEntry, = mibBuilder.importSymbols("RIPv2-MIB", "rip2IfConfEntry")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Gauge32, Unsigned32, iso, Counter64, ObjectIdentity, TimeTicks, Integer32, Bits, Counter32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Gauge32", "Unsigned32", "iso", "Counter64", "ObjectIdentity", "TimeTicks", "Integer32", "Bits", "Counter32", "ModuleIdentity")
TruthValue, DisplayString, PhysAddress, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "PhysAddress", "TextualConvention", "RowStatus")
vrrpOperVrId, = mibBuilder.importSymbols("VRRP-MIB", "vrrpOperVrId")
fastPathRouting = ModuleIdentity((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2))
fastPathRouting.setRevisions(('2007-05-23 00:00', '2003-11-21 00:00', '2003-04-02 17:00',))
if mibBuilder.loadTexts: fastPathRouting.setLastUpdated('200705230000Z')
if mibBuilder.loadTexts: fastPathRouting.setOrganization('Broadcom Corporation')
class SpfTimerRange(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class AutoCostRefBw(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967)

agentSwitchArpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1))
agentSwitchArpAgeoutTime = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15, 21600)).clone(1200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchArpAgeoutTime.setStatus('current')
agentSwitchArpResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchArpResponseTime.setStatus('current')
agentSwitchArpMaxRetries = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchArpMaxRetries.setStatus('current')
agentSwitchArpCacheSize = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchArpCacheSize.setStatus('current')
agentSwitchArpDynamicRenew = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchArpDynamicRenew.setStatus('current')
agentSwitchArpTotalEntryCountCurrent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchArpTotalEntryCountCurrent.setStatus('current')
agentSwitchArpTotalEntryCountPeak = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchArpTotalEntryCountPeak.setStatus('current')
agentSwitchArpStaticEntryCountCurrent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchArpStaticEntryCountCurrent.setStatus('current')
agentSwitchArpStaticEntryCountMax = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchArpStaticEntryCountMax.setStatus('current')
agentSwitchArpTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 10), )
if mibBuilder.loadTexts: agentSwitchArpTable.setStatus('obsolete')
agentSwitchArpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 10, 1), ).setIndexNames((0, "FASTPATH-ROUTING-MIB", "agentSwitchArpIpAddress"))
if mibBuilder.loadTexts: agentSwitchArpEntry.setStatus('obsolete')
agentSwitchArpAge = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 10, 1, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchArpAge.setStatus('obsolete')
agentSwitchArpIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 10, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchArpIpAddress.setStatus('obsolete')
agentSwitchArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 10, 1, 3), PhysAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchArpMacAddress.setStatus('obsolete')
agentSwitchArpInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 10, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchArpInterface.setStatus('obsolete')
agentSwitchArpType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("local", 1), ("gateway", 2), ("static", 3), ("dynamic", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchArpType.setStatus('obsolete')
agentSwitchArpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 10, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchArpStatus.setStatus('obsolete')
agentSwitchLocalProxyArpTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 11), )
if mibBuilder.loadTexts: agentSwitchLocalProxyArpTable.setStatus('current')
agentSwitchLocalProxyArpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 11, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentSwitchLocalProxyArpEntry.setStatus('current')
agentSwitchLocalProxyArpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchLocalProxyArpMode.setStatus('current')
agentSwitchIntfArpTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 12), )
if mibBuilder.loadTexts: agentSwitchIntfArpTable.setStatus('current')
agentSwitchIntfArpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 12, 1), ).setIndexNames((0, "FASTPATH-ROUTING-MIB", "agentSwitchIntfArpIpAddress"), (0, "FASTPATH-ROUTING-MIB", "agentSwitchIntfArpIfIndex"))
if mibBuilder.loadTexts: agentSwitchIntfArpEntry.setStatus('current')
agentSwitchIntfArpIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 12, 1, 1), IpAddress())
if mibBuilder.loadTexts: agentSwitchIntfArpIpAddress.setStatus('current')
agentSwitchIntfArpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 12, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: agentSwitchIntfArpIfIndex.setStatus('current')
agentSwitchIntfArpAge = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 12, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchIntfArpAge.setStatus('current')
agentSwitchIntfArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 12, 1, 4), PhysAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchIntfArpMacAddress.setStatus('current')
agentSwitchIntfArpType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("local", 1), ("gateway", 2), ("static", 3), ("dynamic", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchIntfArpType.setStatus('current')
agentSwitchIntfArpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 12, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchIntfArpStatus.setStatus('current')
agentSwitchIpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2))
agentSwitchIpRoutingMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpRoutingMode.setStatus('current')
agentSwitchIpInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3), )
if mibBuilder.loadTexts: agentSwitchIpInterfaceTable.setStatus('current')
agentSwitchIpInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1), ).setIndexNames((0, "FASTPATH-ROUTING-MIB", "agentSwitchIpInterfaceIfIndex"))
if mibBuilder.loadTexts: agentSwitchIpInterfaceEntry.setStatus('current')
agentSwitchIpInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchIpInterfaceIfIndex.setStatus('current')
agentSwitchIpInterfaceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpInterfaceIpAddress.setStatus('current')
agentSwitchIpInterfaceNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpInterfaceNetMask.setStatus('current')
agentSwitchIpInterfaceClearIp = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpInterfaceClearIp.setStatus('current')
agentSwitchIpInterfaceRoutingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpInterfaceRoutingMode.setStatus('current')
agentSwitchIpInterfaceProxyARPMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpInterfaceProxyARPMode.setStatus('current')
agentSwitchIpInterfaceMtuValue = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(128, 1500), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpInterfaceMtuValue.setStatus('current')
agentSwitchIpInterfaceBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 8), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 10000000), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpInterfaceBandwidth.setStatus('current')
agentSwitchIpInterfaceUnnumberedIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 9), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchIpInterfaceUnnumberedIfIndex.setStatus('current')
agentSwitchIpInterfaceIcmpUnreachables = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpInterfaceIcmpUnreachables.setStatus('current')
agentSwitchIpInterfaceIcmpRedirects = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpInterfaceIcmpRedirects.setStatus('current')
agentSwitchIpRouterDiscoveryTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 4), )
if mibBuilder.loadTexts: agentSwitchIpRouterDiscoveryTable.setStatus('current')
agentSwitchIpRouterDiscoveryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 4, 1), ).setIndexNames((0, "FASTPATH-ROUTING-MIB", "agentSwitchIpRouterDiscoveryIfIndex"))
if mibBuilder.loadTexts: agentSwitchIpRouterDiscoveryEntry.setStatus('current')
agentSwitchIpRouterDiscoveryIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchIpRouterDiscoveryIfIndex.setStatus('current')
agentSwitchIpRouterDiscoveryAdvertiseMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpRouterDiscoveryAdvertiseMode.setStatus('current')
agentSwitchIpRouterDiscoveryMaxAdvertisementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 1800)).clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpRouterDiscoveryMaxAdvertisementInterval.setStatus('current')
agentSwitchIpRouterDiscoveryMinAdvertisementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 1800)).clone(450)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpRouterDiscoveryMinAdvertisementInterval.setStatus('current')
agentSwitchIpRouterDiscoveryAdvertisementLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 9000)).clone(1800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpRouterDiscoveryAdvertisementLifetime.setStatus('current')
agentSwitchIpRouterDiscoveryPreferenceLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpRouterDiscoveryPreferenceLevel.setStatus('current')
agentSwitchIpRouterDiscoveryAdvertisementAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 4, 1, 7), IpAddress().clone(hexValue="E0000001")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpRouterDiscoveryAdvertisementAddress.setStatus('current')
agentSwitchIpVlanTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 5), )
if mibBuilder.loadTexts: agentSwitchIpVlanTable.setStatus('current')
agentSwitchIpVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 5, 1), ).setIndexNames((0, "FASTPATH-ROUTING-MIB", "agentSwitchIpVlanId"))
if mibBuilder.loadTexts: agentSwitchIpVlanEntry.setStatus('current')
agentSwitchIpVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchIpVlanId.setStatus('current')
agentSwitchIpVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchIpVlanIfIndex.setStatus('current')
agentSwitchIpVlanRoutingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchIpVlanRoutingStatus.setStatus('current')
agentSwitchSecondaryAddressTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 6), )
if mibBuilder.loadTexts: agentSwitchSecondaryAddressTable.setStatus('current')
agentSwitchSecondaryAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 6, 1), ).setIndexNames((0, "FASTPATH-ROUTING-MIB", "agentSwitchIpInterfaceIfIndex"), (0, "FASTPATH-ROUTING-MIB", "agentSwitchSecondaryIpAddress"))
if mibBuilder.loadTexts: agentSwitchSecondaryAddressEntry.setStatus('current')
agentSwitchSecondaryIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 6, 1, 1), IpAddress())
if mibBuilder.loadTexts: agentSwitchSecondaryIpAddress.setStatus('current')
agentSwitchSecondaryNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 6, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchSecondaryNetMask.setStatus('current')
agentSwitchSecondaryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchSecondaryStatus.setStatus('current')
agentSwitchHelperAddressTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 7), )
if mibBuilder.loadTexts: agentSwitchHelperAddressTable.setStatus('obsolete')
agentSwitchHelperAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 7, 1), ).setIndexNames((0, "FASTPATH-ROUTING-MIB", "agentSwitchIpInterfaceIfIndex"), (0, "FASTPATH-ROUTING-MIB", "agentSwitchHelperIpAddress"))
if mibBuilder.loadTexts: agentSwitchHelperAddressEntry.setStatus('obsolete')
agentSwitchHelperIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 7, 1, 1), IpAddress())
if mibBuilder.loadTexts: agentSwitchHelperIpAddress.setStatus('obsolete')
agentSwitchHelperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchHelperStatus.setStatus('obsolete')
agentSwitchIpIcmpControlGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 8))
agentSwitchIpIcmpEchoReplyMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpIcmpEchoReplyMode.setStatus('current')
agentSwitchIpIcmpRedirectsMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpIcmpRedirectsMode.setStatus('current')
agentSwitchIpIcmpRateLimitInterval = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpIcmpRateLimitInterval.setStatus('current')
agentSwitchIpIcmpRateLimitBurstSize = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpIcmpRateLimitBurstSize.setStatus('current')
agentSwitchIntfIpHelperAddressTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 10), )
if mibBuilder.loadTexts: agentSwitchIntfIpHelperAddressTable.setStatus('current')
agentSwitchIntfIpHelperAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 10, 1), ).setIndexNames((0, "FASTPATH-ROUTING-MIB", "agentSwitchIpInterfaceIfIndex"), (0, "FASTPATH-ROUTING-MIB", "agentSwitchIntfIpHelperUdpPort"), (0, "FASTPATH-ROUTING-MIB", "agentSwitchIntfIpHelperIpAddress"))
if mibBuilder.loadTexts: agentSwitchIntfIpHelperAddressEntry.setStatus('current')
agentSwitchIntfIpHelperIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 10, 1, 1), IpAddress())
if mibBuilder.loadTexts: agentSwitchIntfIpHelperIpAddress.setStatus('current')
agentSwitchIntfIpHelperUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: agentSwitchIntfIpHelperUdpPort.setStatus('current')
agentSwitchIntfIpHelperDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 10, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIntfIpHelperDiscard.setStatus('obsolete')
agentSwitchIntfIpHelperHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 10, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchIntfIpHelperHitCount.setStatus('current')
agentSwitchIntfIpHelperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 10, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchIntfIpHelperStatus.setStatus('current')
agentRouterRipConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3))
agentRouterRipAdminState = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRouterRipAdminState.setStatus('current')
agentRouterRipSplitHorizonMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("simple", 2), ("poisonReverse", 3))).clone('simple')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRouterRipSplitHorizonMode.setStatus('current')
agentRouterRipAutoSummaryMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRouterRipAutoSummaryMode.setStatus('current')
agentRouterRipHostRoutesAcceptMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRouterRipHostRoutesAcceptMode.setStatus('current')
agentRouterRipDefaultMetric = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRouterRipDefaultMetric.setStatus('current')
agentRouterRipDefaultMetricConfigured = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRouterRipDefaultMetricConfigured.setStatus('current')
agentRouterRipDefaultInfoOriginate = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRouterRipDefaultInfoOriginate.setStatus('current')
agentRipRouteRedistTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8), )
if mibBuilder.loadTexts: agentRipRouteRedistTable.setStatus('current')
agentRipRouteRedistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1), ).setIndexNames((0, "FASTPATH-ROUTING-MIB", "agentRipRouteRedistSource"))
if mibBuilder.loadTexts: agentRipRouteRedistEntry.setStatus('current')
agentRipRouteRedistSource = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("connected", 1), ("static", 2), ("ospf", 3), ("bgp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentRipRouteRedistSource.setStatus('current')
agentRipRouteRedistMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRipRouteRedistMode.setStatus('current')
agentRipRouteRedistMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRipRouteRedistMetric.setStatus('current')
agentRipRouteRedistMetricConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRipRouteRedistMetricConfigured.setStatus('current')
agentRipRouteRedistMatchInternal = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("true", 1), ("false", 2), ("not-applicable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRipRouteRedistMatchInternal.setStatus('current')
agentRipRouteRedistMatchExternal1 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("true", 1), ("false", 2), ("not-applicable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRipRouteRedistMatchExternal1.setStatus('current')
agentRipRouteRedistMatchExternal2 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("true", 1), ("false", 2), ("not-applicable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRipRouteRedistMatchExternal2.setStatus('current')
agentRipRouteRedistMatchNSSAExternal1 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("true", 1), ("false", 2), ("not-applicable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRipRouteRedistMatchNSSAExternal1.setStatus('current')
agentRipRouteRedistMatchNSSAExternal2 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("true", 1), ("false", 2), ("not-applicable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRipRouteRedistMatchNSSAExternal2.setStatus('current')
agentRipRouteRedistDistList = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRipRouteRedistDistList.setStatus('current')
agentRipRouteRedistDistListConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRipRouteRedistDistListConfigured.setStatus('current')
agentRip2IfConfTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 9), )
if mibBuilder.loadTexts: agentRip2IfConfTable.setStatus('current')
agentRip2IfConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 9, 1), )
rip2IfConfEntry.registerAugmentions(("FASTPATH-ROUTING-MIB", "agentRip2IfConfEntry"))
agentRip2IfConfEntry.setIndexNames(*rip2IfConfEntry.getIndexNames())
if mibBuilder.loadTexts: agentRip2IfConfEntry.setStatus('current')
agentRip2IfConfAuthKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRip2IfConfAuthKeyId.setStatus('current')
agentRouterRipRoutePref = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(120)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRouterRipRoutePref.setStatus('current')
agentRouterOspfConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4))
agentOspfDefaultMetric = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777214))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfDefaultMetric.setStatus('current')
agentOspfDefaultMetricConfigured = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfDefaultMetricConfigured.setStatus('current')
agentOspfDefaultInfoOriginate = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfDefaultInfoOriginate.setStatus('current')
agentOspfDefaultInfoOriginateAlways = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfDefaultInfoOriginateAlways.setStatus('current')
agentOspfDefaultInfoOriginateMetric = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 16777214), )).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfDefaultInfoOriginateMetric.setStatus('current')
agentOspfDefaultInfoOriginateMetricConfigured = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfDefaultInfoOriginateMetricConfigured.setStatus('current')
agentOspfDefaultInfoOriginateMetricType = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("externalType1", 1), ("externalType2", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfDefaultInfoOriginateMetricType.setStatus('current')
agentOspfRouteRedistTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8), )
if mibBuilder.loadTexts: agentOspfRouteRedistTable.setStatus('current')
agentOspfRouteRedistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1), ).setIndexNames((0, "FASTPATH-ROUTING-MIB", "agentOspfRouteRedistSource"))
if mibBuilder.loadTexts: agentOspfRouteRedistEntry.setStatus('current')
agentOspfRouteRedistSource = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("connected", 1), ("static", 2), ("rip", 3), ("bgp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfRouteRedistSource.setStatus('current')
agentOspfRouteRedistMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfRouteRedistMode.setStatus('current')
agentOspfRouteRedistMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777214))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfRouteRedistMetric.setStatus('current')
agentOspfRouteRedistMetricConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfRouteRedistMetricConfigured.setStatus('current')
agentOspfRouteRedistMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("externalType1", 1), ("externalType2", 2))).clone('externalType2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfRouteRedistMetricType.setStatus('current')
agentOspfRouteRedistTag = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfRouteRedistTag.setStatus('current')
agentOspfRouteRedistSubnets = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfRouteRedistSubnets.setStatus('current')
agentOspfRouteRedistDistList = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfRouteRedistDistList.setStatus('current')
agentOspfRouteRedistDistListConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfRouteRedistDistListConfigured.setStatus('current')
agentOspfIfTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 9), )
if mibBuilder.loadTexts: agentOspfIfTable.setStatus('current')
agentOspfIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 9, 1), )
ospfIfEntry.registerAugmentions(("FASTPATH-ROUTING-MIB", "agentOspfIfEntry"))
agentOspfIfEntry.setIndexNames(*ospfIfEntry.getIndexNames())
if mibBuilder.loadTexts: agentOspfIfEntry.setStatus('current')
agentOspfIfAuthKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentOspfIfAuthKeyId.setStatus('current')
agentOspfIfIpMtuIgnoreFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfIfIpMtuIgnoreFlag.setStatus('current')
agentOspfIfPassiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 9, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfIfPassiveMode.setStatus('current')
agentOspfIfAdvertiseSecondaries = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfIfAdvertiseSecondaries.setStatus('current')
agentOspfVirtIfTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 10), )
if mibBuilder.loadTexts: agentOspfVirtIfTable.setStatus('current')
agentOspfVirtIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 10, 1), )
ospfVirtIfEntry.registerAugmentions(("FASTPATH-ROUTING-MIB", "agentOspfVirtIfEntry"))
agentOspfVirtIfEntry.setIndexNames(*ospfVirtIfEntry.getIndexNames())
if mibBuilder.loadTexts: agentOspfVirtIfEntry.setStatus('current')
agentOspfVirtIfAuthKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentOspfVirtIfAuthKeyId.setStatus('current')
agentRouterOspfRFC1583CompatibilityMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRouterOspfRFC1583CompatibilityMode.setStatus('current')
agentOspfSpfDelayTime = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 12), SpfTimerRange().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfSpfDelayTime.setStatus('current')
agentOspfSpfHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 13), SpfTimerRange().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfSpfHoldTime.setStatus('current')
agentOspfAutoCostRefBw = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 14), AutoCostRefBw().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfAutoCostRefBw.setStatus('current')
agentOspfOpaqueLsaSupport = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfOpaqueLsaSupport.setStatus('current')
agentOspfAreaOpaqueLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 16), )
if mibBuilder.loadTexts: agentOspfAreaOpaqueLsdbTable.setStatus('current')
agentOspfAreaOpaqueLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 16, 1), ).setIndexNames((0, "FASTPATH-ROUTING-MIB", "agentOspfAreaOpaqueLsdbAreaId"), (0, "FASTPATH-ROUTING-MIB", "agentOspfAreaOpaqueLsdbType"), (0, "FASTPATH-ROUTING-MIB", "agentOspfAreaOpaqueLsdbLsid"), (0, "FASTPATH-ROUTING-MIB", "agentOspfAreaOpaqueLsdbRouterId"))
if mibBuilder.loadTexts: agentOspfAreaOpaqueLsdbEntry.setStatus('current')
agentOspfAreaOpaqueLsdbAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 16, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfAreaOpaqueLsdbAreaId.setStatus('current')
agentOspfAreaOpaqueLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(10))).clone(namedValues=NamedValues(("areaOpaqueLink", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfAreaOpaqueLsdbType.setStatus('current')
agentOspfAreaOpaqueLsdbLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 16, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfAreaOpaqueLsdbLsid.setStatus('current')
agentOspfAreaOpaqueLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 16, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfAreaOpaqueLsdbRouterId.setStatus('current')
agentOspfAreaOpaqueLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 16, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfAreaOpaqueLsdbSequence.setStatus('current')
agentOspfAreaOpaqueLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 16, 1, 6), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfAreaOpaqueLsdbAge.setStatus('current')
agentOspfAreaOpaqueLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 16, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfAreaOpaqueLsdbChecksum.setStatus('current')
agentOspfAreaOpaqueLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 16, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfAreaOpaqueLsdbAdvertisement.setStatus('current')
agentOspfLocalLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 17), )
if mibBuilder.loadTexts: agentOspfLocalLsdbTable.setStatus('current')
agentOspfLocalLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 17, 1), ).setIndexNames((0, "FASTPATH-ROUTING-MIB", "agentOspfLocalLsdbIpAddress"), (0, "FASTPATH-ROUTING-MIB", "agentOspfLocalLsdbAddressLessIf"), (0, "FASTPATH-ROUTING-MIB", "agentOspfLocalLsdbType"), (0, "FASTPATH-ROUTING-MIB", "agentOspfLocalLsdbLsid"), (0, "FASTPATH-ROUTING-MIB", "agentOspfLocalLsdbRouterId"))
if mibBuilder.loadTexts: agentOspfLocalLsdbEntry.setStatus('current')
agentOspfLocalLsdbIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 17, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfLocalLsdbIpAddress.setStatus('current')
agentOspfLocalLsdbAddressLessIf = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 17, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfLocalLsdbAddressLessIf.setStatus('current')
agentOspfLocalLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(9))).clone(namedValues=NamedValues(("localOpaqueLink", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfLocalLsdbType.setStatus('current')
agentOspfLocalLsdbLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 17, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfLocalLsdbLsid.setStatus('current')
agentOspfLocalLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 17, 1, 5), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfLocalLsdbRouterId.setStatus('current')
agentOspfLocalLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 17, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfLocalLsdbSequence.setStatus('current')
agentOspfLocalLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 17, 1, 7), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfLocalLsdbAge.setStatus('current')
agentOspfLocalLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 17, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfLocalLsdbChecksum.setStatus('current')
agentOspfLocalLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 17, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfLocalLsdbAdvertisement.setStatus('current')
agentOspfAsLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 18), )
if mibBuilder.loadTexts: agentOspfAsLsdbTable.setStatus('current')
agentOspfAsLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 18, 1), ).setIndexNames((0, "FASTPATH-ROUTING-MIB", "agentOspfAsLsdbType"), (0, "FASTPATH-ROUTING-MIB", "agentOspfAsLsdbLsid"), (0, "FASTPATH-ROUTING-MIB", "agentOspfAsLsdbRouterId"))
if mibBuilder.loadTexts: agentOspfAsLsdbEntry.setStatus('current')
agentOspfAsLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(11))).clone(namedValues=NamedValues(("asOpaqueLink", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfAsLsdbType.setStatus('current')
agentOspfAsLsdbLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 18, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfAsLsdbLsid.setStatus('current')
agentOspfAsLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 18, 1, 3), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfAsLsdbRouterId.setStatus('current')
agentOspfAsLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 18, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfAsLsdbSequence.setStatus('current')
agentOspfAsLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 18, 1, 5), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfAsLsdbAge.setStatus('current')
agentOspfAsLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 18, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfAsLsdbChecksum.setStatus('current')
agentOspfAsLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 18, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOspfAsLsdbAdvertisement.setStatus('current')
agentOspfDefaultPassiveMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 19), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfDefaultPassiveMode.setStatus('current')
agentOspfRoutePrefIntraArea = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(110)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfRoutePrefIntraArea.setStatus('current')
agentOspfRoutePrefInterArea = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(110)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfRoutePrefInterArea.setStatus('current')
agentOspfRoutePrefExternal = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(110)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOspfRoutePrefExternal.setStatus('current')
agentSnmpTrapFlagsConfigGroupLayer3 = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 5))
agentSnmpVRRPNewMasterTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpVRRPNewMasterTrapFlag.setStatus('current')
agentSnmpVRRPAuthFailureTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpVRRPAuthFailureTrapFlag.setStatus('current')
agentBootpDhcpRelayGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6))
agentBootpDhcpRelayMaxHopCount = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBootpDhcpRelayMaxHopCount.setStatus('current')
agentBootpDhcpRelayForwardingIp = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBootpDhcpRelayForwardingIp.setStatus('obsolete')
agentBootpDhcpRelayForwardMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBootpDhcpRelayForwardMode.setStatus('obsolete')
agentBootpDhcpRelayMinWaitTime = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBootpDhcpRelayMinWaitTime.setStatus('current')
agentBootpDhcpRelayCircuitIdOptionMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBootpDhcpRelayCircuitIdOptionMode.setStatus('current')
agentBootpDhcpRelayNumOfRequestsReceived = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBootpDhcpRelayNumOfRequestsReceived.setStatus('obsolete')
agentBootpDhcpRelayNumOfRequestsForwarded = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBootpDhcpRelayNumOfRequestsForwarded.setStatus('obsolete')
agentBootpDhcpRelayNumOfDiscards = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBootpDhcpRelayNumOfDiscards.setStatus('obsolete')
agentECMPGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 7))
agentECMPOspfMaxPaths = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 7, 1), Integer32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentECMPOspfMaxPaths.setStatus('current')
agentRouterVrrpConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 8))
agentRouterVrrpAdminState = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRouterVrrpAdminState.setStatus('current')
agentRouterVrrpConfiguredTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 8, 2), )
if mibBuilder.loadTexts: agentRouterVrrpConfiguredTable.setStatus('current')
agentRouterVrrpConfiguredEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 8, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VRRP-MIB", "vrrpOperVrId"))
if mibBuilder.loadTexts: agentRouterVrrpConfiguredEntry.setStatus('current')
agentRouterVrrpConfiguredPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentRouterVrrpConfiguredPriority.setStatus('current')
agentVrrpOperations = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 9))
agentRouterVrrpOperTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 9, 1), )
if mibBuilder.loadTexts: agentRouterVrrpOperTable.setStatus('obsolete')
agentRouterVrrpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 9, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VRRP-MIB", "vrrpOperVrId"))
if mibBuilder.loadTexts: agentRouterVrrpOperEntry.setStatus('obsolete')
agentRouterVrrpOperPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentRouterVrrpOperPriority.setStatus('obsolete')
agentRouterVrrpTrackGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 10))
agentRouterVrrpTrackIntfTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 10, 1), )
if mibBuilder.loadTexts: agentRouterVrrpTrackIntfTable.setStatus('current')
agentRouterVrrpTrackIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 10, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VRRP-MIB", "vrrpOperVrId"), (0, "FASTPATH-ROUTING-MIB", "agentRouterVrrpTrackIntf"))
if mibBuilder.loadTexts: agentRouterVrrpTrackIntfEntry.setStatus('current')
agentRouterVrrpTrackIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 10, 1, 1, 1), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRouterVrrpTrackIntf.setStatus('current')
agentRouterVrrpTrackIfPrioDec = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRouterVrrpTrackIfPrioDec.setStatus('current')
agentRouterVrrpTrackIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 10, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentRouterVrrpTrackIfState.setStatus('current')
agentRouterVrrpTrackIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 10, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRouterVrrpTrackIfStatus.setStatus('current')
agentRouterVrrpTrackRouteTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 10, 2), )
if mibBuilder.loadTexts: agentRouterVrrpTrackRouteTable.setStatus('current')
agentRouterVrrpTrackRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 10, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VRRP-MIB", "vrrpOperVrId"), (0, "FASTPATH-ROUTING-MIB", "agentRouterVrrpTrackRtPfx"), (0, "FASTPATH-ROUTING-MIB", "agentRouterVrrpTrackRtPfxLen"))
if mibBuilder.loadTexts: agentRouterVrrpTrackRouteEntry.setStatus('current')
agentRouterVrrpTrackRtPfx = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 10, 2, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRouterVrrpTrackRtPfx.setStatus('current')
agentRouterVrrpTrackRtPfxLen = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRouterVrrpTrackRtPfxLen.setStatus('current')
agentRouterVrrpTrackRtPrioDec = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 10, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRouterVrrpTrackRtPrioDec.setStatus('current')
agentRouterVrrpTrackRtReachable = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 10, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentRouterVrrpTrackRtReachable.setStatus('current')
agentRouterVrrpTrackRtStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 10, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRouterVrrpTrackRtStatus.setStatus('current')
agentIpHelperGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 11))
agentIpHelperAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpHelperAdminMode.setStatus('current')
agentDhcpClientMsgsReceived = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 11, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpClientMsgsReceived.setStatus('current')
agentDhcpClientMsgsRelayed = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 11, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpClientMsgsRelayed.setStatus('current')
agentDhcpServerMsgsReceived = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 11, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpServerMsgsReceived.setStatus('current')
agentDhcpServerMsgsRelayed = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 11, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpServerMsgsRelayed.setStatus('current')
agentUdpClientMsgsReceived = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 11, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentUdpClientMsgsReceived.setStatus('current')
agentUdpClientMsgsRelayed = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 11, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentUdpClientMsgsRelayed.setStatus('current')
agentSwitchIpHelperAddressTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 11, 8), )
if mibBuilder.loadTexts: agentSwitchIpHelperAddressTable.setStatus('current')
agentSwitchIpHelperAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 11, 8, 1), ).setIndexNames((0, "FASTPATH-ROUTING-MIB", "agentSwitchIpHelperAddress"), (0, "FASTPATH-ROUTING-MIB", "agentSwitchIpHelperUdpPort"))
if mibBuilder.loadTexts: agentSwitchIpHelperAddressEntry.setStatus('current')
agentSwitchIpHelperAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 11, 8, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpHelperAddress.setStatus('current')
agentSwitchIpHelperUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 11, 8, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIpHelperUdpPort.setStatus('current')
agentSwitchIpHelperHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 11, 8, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchIpHelperHitCount.setStatus('current')
agentSwitchIpHelperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 11, 8, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchIpHelperStatus.setStatus('current')
agentUdpClientMsgsTtlExpired = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 11, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentUdpClientMsgsTtlExpired.setStatus('current')
agentUdpClientMsgsDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 11, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentUdpClientMsgsDiscarded.setStatus('current')
agentInternalVlanGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 12))
agentInternalVlanBase = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 12, 1), Integer32().clone(4093)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInternalVlanBase.setStatus('current')
agentInternalVlanPolicy = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 12, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ascending", 0), ("descending", 1))).clone('descending')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInternalVlanPolicy.setStatus('current')
agentSwitchInternalVlanTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 12, 3), )
if mibBuilder.loadTexts: agentSwitchInternalVlanTable.setStatus('current')
agentSwitchInternalVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 12, 3, 1), ).setIndexNames((0, "FASTPATH-ROUTING-MIB", "agentSwitchInternalVlanId"))
if mibBuilder.loadTexts: agentSwitchInternalVlanEntry.setStatus('current')
agentSwitchInternalVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 12, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentSwitchInternalVlanId.setStatus('current')
agentSwitchInternalVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 12, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchInternalVlanIfIndex.setStatus('current')
mibBuilder.exportSymbols("FASTPATH-ROUTING-MIB", agentRipRouteRedistDistList=agentRipRouteRedistDistList, agentOspfVirtIfAuthKeyId=agentOspfVirtIfAuthKeyId, agentSwitchArpResponseTime=agentSwitchArpResponseTime, agentSwitchIpInterfaceRoutingMode=agentSwitchIpInterfaceRoutingMode, agentOspfAsLsdbChecksum=agentOspfAsLsdbChecksum, agentOspfAsLsdbType=agentOspfAsLsdbType, agentSwitchIpInterfaceProxyARPMode=agentSwitchIpInterfaceProxyARPMode, agentOspfDefaultMetric=agentOspfDefaultMetric, agentRip2IfConfEntry=agentRip2IfConfEntry, agentInternalVlanGroup=agentInternalVlanGroup, agentSwitchIpRoutingMode=agentSwitchIpRoutingMode, agentOspfRouteRedistTag=agentOspfRouteRedistTag, agentOspfRoutePrefExternal=agentOspfRoutePrefExternal, agentOspfLocalLsdbChecksum=agentOspfLocalLsdbChecksum, agentSwitchIpHelperStatus=agentSwitchIpHelperStatus, agentSwitchIntfArpType=agentSwitchIntfArpType, agentRouterVrrpOperEntry=agentRouterVrrpOperEntry, agentSwitchIpVlanTable=agentSwitchIpVlanTable, agentSwitchArpTotalEntryCountPeak=agentSwitchArpTotalEntryCountPeak, agentRipRouteRedistEntry=agentRipRouteRedistEntry, agentOspfLocalLsdbRouterId=agentOspfLocalLsdbRouterId, agentRouterVrrpConfiguredPriority=agentRouterVrrpConfiguredPriority, agentRouterVrrpTrackIfState=agentRouterVrrpTrackIfState, agentSwitchIpInterfaceIcmpRedirects=agentSwitchIpInterfaceIcmpRedirects, agentRouterVrrpConfiguredEntry=agentRouterVrrpConfiguredEntry, agentOspfVirtIfTable=agentOspfVirtIfTable, agentRouterVrrpOperPriority=agentRouterVrrpOperPriority, agentSwitchIpRouterDiscoveryEntry=agentSwitchIpRouterDiscoveryEntry, agentInternalVlanPolicy=agentInternalVlanPolicy, agentSwitchArpEntry=agentSwitchArpEntry, agentRouterVrrpOperTable=agentRouterVrrpOperTable, agentSwitchIpHelperAddress=agentSwitchIpHelperAddress, agentIpHelperAdminMode=agentIpHelperAdminMode, agentRipRouteRedistMatchExternal2=agentRipRouteRedistMatchExternal2, agentOspfAutoCostRefBw=agentOspfAutoCostRefBw, fastPathRouting=fastPathRouting, agentSwitchIntfIpHelperAddressEntry=agentSwitchIntfIpHelperAddressEntry, agentSwitchLocalProxyArpTable=agentSwitchLocalProxyArpTable, agentOspfAsLsdbSequence=agentOspfAsLsdbSequence, agentOspfOpaqueLsaSupport=agentOspfOpaqueLsaSupport, agentRip2IfConfAuthKeyId=agentRip2IfConfAuthKeyId, agentOspfLocalLsdbEntry=agentOspfLocalLsdbEntry, agentOspfSpfHoldTime=agentOspfSpfHoldTime, agentOspfDefaultInfoOriginateMetric=agentOspfDefaultInfoOriginateMetric, agentSwitchIpInterfaceNetMask=agentSwitchIpInterfaceNetMask, agentBootpDhcpRelayForwardingIp=agentBootpDhcpRelayForwardingIp, agentSwitchIpInterfaceClearIp=agentSwitchIpInterfaceClearIp, agentOspfSpfDelayTime=agentOspfSpfDelayTime, agentOspfAreaOpaqueLsdbAdvertisement=agentOspfAreaOpaqueLsdbAdvertisement, agentOspfAreaOpaqueLsdbSequence=agentOspfAreaOpaqueLsdbSequence, agentOspfLocalLsdbIpAddress=agentOspfLocalLsdbIpAddress, agentSwitchSecondaryStatus=agentSwitchSecondaryStatus, agentSwitchIpRouterDiscoveryMinAdvertisementInterval=agentSwitchIpRouterDiscoveryMinAdvertisementInterval, agentDhcpServerMsgsRelayed=agentDhcpServerMsgsRelayed, agentOspfLocalLsdbAdvertisement=agentOspfLocalLsdbAdvertisement, agentSwitchArpInterface=agentSwitchArpInterface, agentSwitchIntfIpHelperAddressTable=agentSwitchIntfIpHelperAddressTable, agentUdpClientMsgsRelayed=agentUdpClientMsgsRelayed, agentSwitchIpVlanIfIndex=agentSwitchIpVlanIfIndex, agentRouterRipDefaultMetric=agentRouterRipDefaultMetric, agentOspfRouteRedistTable=agentOspfRouteRedistTable, agentOspfRouteRedistMetric=agentOspfRouteRedistMetric, agentRouterVrrpTrackIntf=agentRouterVrrpTrackIntf, agentSwitchIpHelperUdpPort=agentSwitchIpHelperUdpPort, agentRouterOspfConfigGroup=agentRouterOspfConfigGroup, agentSwitchArpAgeoutTime=agentSwitchArpAgeoutTime, agentSwitchIpRouterDiscoveryIfIndex=agentSwitchIpRouterDiscoveryIfIndex, agentRouterOspfRFC1583CompatibilityMode=agentRouterOspfRFC1583CompatibilityMode, agentSwitchIpIcmpRateLimitInterval=agentSwitchIpIcmpRateLimitInterval, agentOspfAsLsdbTable=agentOspfAsLsdbTable, agentOspfRouteRedistMetricType=agentOspfRouteRedistMetricType, agentSwitchArpStatus=agentSwitchArpStatus, agentSwitchSecondaryAddressEntry=agentSwitchSecondaryAddressEntry, agentSwitchIpHelperAddressTable=agentSwitchIpHelperAddressTable, agentSwitchIpHelperAddressEntry=agentSwitchIpHelperAddressEntry, agentSwitchSecondaryIpAddress=agentSwitchSecondaryIpAddress, agentSwitchIpIcmpEchoReplyMode=agentSwitchIpIcmpEchoReplyMode, agentOspfAreaOpaqueLsdbTable=agentOspfAreaOpaqueLsdbTable, agentSwitchArpTotalEntryCountCurrent=agentSwitchArpTotalEntryCountCurrent, agentOspfLocalLsdbType=agentOspfLocalLsdbType, agentSwitchIpIcmpRedirectsMode=agentSwitchIpIcmpRedirectsMode, agentRipRouteRedistMatchExternal1=agentRipRouteRedistMatchExternal1, agentSwitchIntfArpIfIndex=agentSwitchIntfArpIfIndex, agentOspfDefaultInfoOriginateMetricType=agentOspfDefaultInfoOriginateMetricType, agentOspfAreaOpaqueLsdbRouterId=agentOspfAreaOpaqueLsdbRouterId, agentDhcpClientMsgsRelayed=agentDhcpClientMsgsRelayed, agentSnmpVRRPAuthFailureTrapFlag=agentSnmpVRRPAuthFailureTrapFlag, agentSwitchIntfArpTable=agentSwitchIntfArpTable, agentOspfRouteRedistDistList=agentOspfRouteRedistDistList, agentSwitchIpRouterDiscoveryMaxAdvertisementInterval=agentSwitchIpRouterDiscoveryMaxAdvertisementInterval, agentRouterRipDefaultMetricConfigured=agentRouterRipDefaultMetricConfigured, agentOspfAreaOpaqueLsdbChecksum=agentOspfAreaOpaqueLsdbChecksum, agentRipRouteRedistSource=agentRipRouteRedistSource, agentRouterRipConfigGroup=agentRouterRipConfigGroup, agentOspfAreaOpaqueLsdbLsid=agentOspfAreaOpaqueLsdbLsid, agentRipRouteRedistMetric=agentRipRouteRedistMetric, AutoCostRefBw=AutoCostRefBw, agentOspfAsLsdbEntry=agentOspfAsLsdbEntry, agentOspfAreaOpaqueLsdbEntry=agentOspfAreaOpaqueLsdbEntry, agentSwitchIntfIpHelperStatus=agentSwitchIntfIpHelperStatus, agentSwitchLocalProxyArpEntry=agentSwitchLocalProxyArpEntry, agentSwitchArpGroup=agentSwitchArpGroup, agentSwitchIpRouterDiscoveryAdvertisementLifetime=agentSwitchIpRouterDiscoveryAdvertisementLifetime, agentSwitchIntfArpAge=agentSwitchIntfArpAge, agentRipRouteRedistTable=agentRipRouteRedistTable, agentSnmpTrapFlagsConfigGroupLayer3=agentSnmpTrapFlagsConfigGroupLayer3, agentUdpClientMsgsDiscarded=agentUdpClientMsgsDiscarded, agentOspfLocalLsdbLsid=agentOspfLocalLsdbLsid, agentSwitchInternalVlanIfIndex=agentSwitchInternalVlanIfIndex, agentBootpDhcpRelayNumOfRequestsReceived=agentBootpDhcpRelayNumOfRequestsReceived, agentRouterVrrpTrackRtStatus=agentRouterVrrpTrackRtStatus, agentRouterVrrpTrackIntfTable=agentRouterVrrpTrackIntfTable, agentSwitchIntfIpHelperDiscard=agentSwitchIntfIpHelperDiscard, agentRouterRipAutoSummaryMode=agentRouterRipAutoSummaryMode, agentSwitchInternalVlanTable=agentSwitchInternalVlanTable, agentIpHelperGroup=agentIpHelperGroup, agentOspfDefaultInfoOriginate=agentOspfDefaultInfoOriginate, agentECMPGroup=agentECMPGroup, agentBootpDhcpRelayMinWaitTime=agentBootpDhcpRelayMinWaitTime, agentOspfRouteRedistSource=agentOspfRouteRedistSource, agentRouterVrrpConfigGroup=agentRouterVrrpConfigGroup, SpfTimerRange=SpfTimerRange, agentSwitchIpInterfaceMtuValue=agentSwitchIpInterfaceMtuValue, agentSwitchIpVlanId=agentSwitchIpVlanId, agentRipRouteRedistMatchNSSAExternal1=agentRipRouteRedistMatchNSSAExternal1, agentSwitchHelperStatus=agentSwitchHelperStatus, agentBootpDhcpRelayGroup=agentBootpDhcpRelayGroup, agentBootpDhcpRelayForwardMode=agentBootpDhcpRelayForwardMode, agentOspfLocalLsdbAge=agentOspfLocalLsdbAge, agentBootpDhcpRelayMaxHopCount=agentBootpDhcpRelayMaxHopCount, agentOspfDefaultInfoOriginateMetricConfigured=agentOspfDefaultInfoOriginateMetricConfigured, agentSwitchIpIcmpControlGroup=agentSwitchIpIcmpControlGroup, agentOspfLocalLsdbSequence=agentOspfLocalLsdbSequence, agentSwitchIntfIpHelperUdpPort=agentSwitchIntfIpHelperUdpPort, agentSwitchArpTable=agentSwitchArpTable, agentSwitchArpAge=agentSwitchArpAge, agentSwitchIpGroup=agentSwitchIpGroup, agentSwitchIpInterfaceIfIndex=agentSwitchIpInterfaceIfIndex, agentOspfRouteRedistMode=agentOspfRouteRedistMode, agentOspfIfAuthKeyId=agentOspfIfAuthKeyId, agentOspfAsLsdbAdvertisement=agentOspfAsLsdbAdvertisement, agentRouterVrrpTrackIfPrioDec=agentRouterVrrpTrackIfPrioDec, agentSwitchInternalVlanId=agentSwitchInternalVlanId, agentSwitchIpRouterDiscoveryAdvertisementAddress=agentSwitchIpRouterDiscoveryAdvertisementAddress, agentRouterVrrpConfiguredTable=agentRouterVrrpConfiguredTable, agentDhcpServerMsgsReceived=agentDhcpServerMsgsReceived, agentRipRouteRedistMetricConfigured=agentRipRouteRedistMetricConfigured, agentOspfIfTable=agentOspfIfTable, agentOspfIfIpMtuIgnoreFlag=agentOspfIfIpMtuIgnoreFlag, agentRouterVrrpTrackRouteEntry=agentRouterVrrpTrackRouteEntry, agentRouterVrrpTrackRtReachable=agentRouterVrrpTrackRtReachable, agentOspfAreaOpaqueLsdbAge=agentOspfAreaOpaqueLsdbAge, agentRouterRipHostRoutesAcceptMode=agentRouterRipHostRoutesAcceptMode, agentOspfVirtIfEntry=agentOspfVirtIfEntry, agentSwitchInternalVlanEntry=agentSwitchInternalVlanEntry, agentOspfLocalLsdbTable=agentOspfLocalLsdbTable, agentOspfAreaOpaqueLsdbAreaId=agentOspfAreaOpaqueLsdbAreaId, agentVrrpOperations=agentVrrpOperations, agentRouterVrrpTrackGroup=agentRouterVrrpTrackGroup, agentSwitchIpInterfaceEntry=agentSwitchIpInterfaceEntry, agentDhcpClientMsgsReceived=agentDhcpClientMsgsReceived, agentOspfDefaultPassiveMode=agentOspfDefaultPassiveMode, agentRouterRipAdminState=agentRouterRipAdminState, PYSNMP_MODULE_ID=fastPathRouting, agentSwitchIpInterfaceTable=agentSwitchIpInterfaceTable, agentSwitchIntfArpMacAddress=agentSwitchIntfArpMacAddress, agentSwitchHelperIpAddress=agentSwitchHelperIpAddress, agentOspfDefaultMetricConfigured=agentOspfDefaultMetricConfigured, agentOspfAsLsdbRouterId=agentOspfAsLsdbRouterId, agentOspfAsLsdbLsid=agentOspfAsLsdbLsid, agentRouterVrrpTrackRtPfxLen=agentRouterVrrpTrackRtPfxLen, agentRouterVrrpTrackRouteTable=agentRouterVrrpTrackRouteTable, agentSwitchArpIpAddress=agentSwitchArpIpAddress, agentRipRouteRedistMatchInternal=agentRipRouteRedistMatchInternal, agentSwitchArpDynamicRenew=agentSwitchArpDynamicRenew, agentSwitchIpRouterDiscoveryPreferenceLevel=agentSwitchIpRouterDiscoveryPreferenceLevel, agentRouterRipSplitHorizonMode=agentRouterRipSplitHorizonMode, agentRouterRipDefaultInfoOriginate=agentRouterRipDefaultInfoOriginate, agentSwitchIntfArpEntry=agentSwitchIntfArpEntry, agentOspfRouteRedistDistListConfigured=agentOspfRouteRedistDistListConfigured, agentBootpDhcpRelayCircuitIdOptionMode=agentBootpDhcpRelayCircuitIdOptionMode, agentOspfRoutePrefInterArea=agentOspfRoutePrefInterArea, agentBootpDhcpRelayNumOfDiscards=agentBootpDhcpRelayNumOfDiscards, agentOspfIfPassiveMode=agentOspfIfPassiveMode, agentOspfAsLsdbAge=agentOspfAsLsdbAge, agentSwitchIpHelperHitCount=agentSwitchIpHelperHitCount, agentSwitchIpInterfaceIpAddress=agentSwitchIpInterfaceIpAddress, agentUdpClientMsgsReceived=agentUdpClientMsgsReceived, agentSwitchArpType=agentSwitchArpType, agentSwitchIpInterfaceBandwidth=agentSwitchIpInterfaceBandwidth, agentOspfRouteRedistEntry=agentOspfRouteRedistEntry, agentRipRouteRedistDistListConfigured=agentRipRouteRedistDistListConfigured, agentSwitchIpInterfaceUnnumberedIfIndex=agentSwitchIpInterfaceUnnumberedIfIndex, agentRip2IfConfTable=agentRip2IfConfTable, agentRouterVrrpTrackIntfEntry=agentRouterVrrpTrackIntfEntry, agentRipRouteRedistMode=agentRipRouteRedistMode, agentRouterRipRoutePref=agentRouterRipRoutePref, agentSwitchArpStaticEntryCountCurrent=agentSwitchArpStaticEntryCountCurrent, agentRouterVrrpAdminState=agentRouterVrrpAdminState, agentSwitchArpStaticEntryCountMax=agentSwitchArpStaticEntryCountMax, agentRouterVrrpTrackRtPfx=agentRouterVrrpTrackRtPfx, agentSwitchIpRouterDiscoveryAdvertiseMode=agentSwitchIpRouterDiscoveryAdvertiseMode, agentOspfIfEntry=agentOspfIfEntry, agentBootpDhcpRelayNumOfRequestsForwarded=agentBootpDhcpRelayNumOfRequestsForwarded, agentSwitchArpMacAddress=agentSwitchArpMacAddress, agentSwitchIntfArpStatus=agentSwitchIntfArpStatus, agentSnmpVRRPNewMasterTrapFlag=agentSnmpVRRPNewMasterTrapFlag, agentSwitchArpMaxRetries=agentSwitchArpMaxRetries, agentSwitchSecondaryAddressTable=agentSwitchSecondaryAddressTable, agentOspfRoutePrefIntraArea=agentOspfRoutePrefIntraArea, agentSwitchSecondaryNetMask=agentSwitchSecondaryNetMask, agentSwitchIpInterfaceIcmpUnreachables=agentSwitchIpInterfaceIcmpUnreachables, agentOspfLocalLsdbAddressLessIf=agentOspfLocalLsdbAddressLessIf, agentSwitchIntfIpHelperIpAddress=agentSwitchIntfIpHelperIpAddress, agentSwitchHelperAddressTable=agentSwitchHelperAddressTable, agentECMPOspfMaxPaths=agentECMPOspfMaxPaths, agentSwitchLocalProxyArpMode=agentSwitchLocalProxyArpMode, agentOspfRouteRedistMetricConfigured=agentOspfRouteRedistMetricConfigured, agentOspfIfAdvertiseSecondaries=agentOspfIfAdvertiseSecondaries, agentSwitchIpRouterDiscoveryTable=agentSwitchIpRouterDiscoveryTable, agentInternalVlanBase=agentInternalVlanBase, agentSwitchIpVlanEntry=agentSwitchIpVlanEntry, agentOspfAreaOpaqueLsdbType=agentOspfAreaOpaqueLsdbType, agentSwitchIntfIpHelperHitCount=agentSwitchIntfIpHelperHitCount, agentOspfRouteRedistSubnets=agentOspfRouteRedistSubnets, agentSwitchHelperAddressEntry=agentSwitchHelperAddressEntry, agentRouterVrrpTrackRtPrioDec=agentRouterVrrpTrackRtPrioDec, agentSwitchIntfArpIpAddress=agentSwitchIntfArpIpAddress, agentSwitchArpCacheSize=agentSwitchArpCacheSize, agentRipRouteRedistMatchNSSAExternal2=agentRipRouteRedistMatchNSSAExternal2, agentRouterVrrpTrackIfStatus=agentRouterVrrpTrackIfStatus, agentUdpClientMsgsTtlExpired=agentUdpClientMsgsTtlExpired, agentSwitchIpIcmpRateLimitBurstSize=agentSwitchIpIcmpRateLimitBurstSize, agentOspfDefaultInfoOriginateAlways=agentOspfDefaultInfoOriginateAlways, agentSwitchIpVlanRoutingStatus=agentSwitchIpVlanRoutingStatus)
