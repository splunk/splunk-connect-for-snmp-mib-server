#
# PySNMP MIB module AVAYA-SAA-TRACK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AVAYA-SAA-TRACK-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:16:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
avGatewayMibs, = mibBuilder.importSymbols("AVAYAGEN-MIB", "avGatewayMibs")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
IpAddress, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, TimeTicks, Unsigned32, iso, Bits, Integer32, ObjectIdentity, MibIdentifier, Gauge32, ModuleIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "TimeTicks", "Unsigned32", "iso", "Bits", "Integer32", "ObjectIdentity", "MibIdentifier", "Gauge32", "ModuleIdentity", "Counter32")
MacAddress, TextualConvention, RowStatus, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "RowStatus", "TruthValue", "DisplayString")
avayaSaaTrackMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2))
avayaSaaTrackMib.setRevisions(('2007-01-08 16:57',))
if mibBuilder.loadTexts: avayaSaaTrackMib.setLastUpdated('200701081657Z')
if mibBuilder.loadTexts: avayaSaaTrackMib.setOrganization('Avaya, Inc.')
avstrMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1))
avstrRtrMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1))
avstrRtrTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1), )
if mibBuilder.loadTexts: avstrRtrTable.setStatus('current')
avstrRtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1), ).setIndexNames((0, "AVAYA-SAA-TRACK-MIB", "avstrRtrId"))
if mibBuilder.loadTexts: avstrRtrEntry.setStatus('current')
avstrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: avstrRtrId.setStatus('current')
avstrRtrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("ipIcmpEcho", 2), ("tcpConnect", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrRtrType.setStatus('current')
avstrRtrDestIp = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrRtrDestIp.setStatus('current')
avstrRtrDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrRtrDestPort.setStatus('current')
avstrRtrFrequencyMs = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 5), Unsigned32().clone(5000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrRtrFrequencyMs.setStatus('current')
avstrRtrWaitIntervalMs = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 6), Unsigned32().clone(5000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrRtrWaitIntervalMs.setStatus('current')
avstrRtrFailRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 7), Unsigned32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrRtrFailRetries.setStatus('current')
avstrRtrSuccessRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 8), Unsigned32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrRtrSuccessRetries.setStatus('current')
avstrRtrProbeDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrRtrProbeDscp.setStatus('current')
avstrRtrProbeSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 10), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrRtrProbeSrcIpAddr.setStatus('current')
avstrRtrProbeNextHopIf = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 11), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrRtrProbeNextHopIf.setStatus('current')
avstrRtrProbeNextHopMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 12), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrRtrProbeNextHopMac.setStatus('current')
avstrRtrSchedule = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2))).clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrRtrSchedule.setStatus('current')
avstrRtrOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("up", 2), ("down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avstrRtrOperState.setStatus('current')
avstrRtrOperStateLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avstrRtrOperStateLastChange.setStatus('current')
avstrRtrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 16), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrRtrRowStatus.setStatus('current')
avstrRtrProbeNextHopIp = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 17), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrRtrProbeNextHopIp.setStatus('current')
avstrRtrIfKpaliveBypass = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 18), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrRtrIfKpaliveBypass.setStatus('current')
avstrRtrDestHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrRtrDestHostName.setStatus('current')
avstrRtrResolvedIp = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 1, 1, 1, 20), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avstrRtrResolvedIp.setStatus('current')
avstrTrackerMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2))
avstrTrackerTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 1), )
if mibBuilder.loadTexts: avstrTrackerTable.setStatus('current')
avstrTrackerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 1, 1), ).setIndexNames((0, "AVAYA-SAA-TRACK-MIB", "avstrTrackerId"))
if mibBuilder.loadTexts: avstrTrackerEntry.setStatus('current')
avstrTrackerId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: avstrTrackerId.setStatus('current')
avstrTrackerDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 1, 1, 2), DisplayString().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrTrackerDescription.setStatus('current')
avstrTrackerType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("list", 1), ("rtr", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrTrackerType.setStatus('current')
avstrTrackerRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrTrackerRtrId.setStatus('current')
avstrTrackerListType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("boolAnd", 1), ("boolOr", 2), ("threshCount", 3))).clone('boolAnd')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrTrackerListType.setStatus('current')
avstrTrackerListThresholdUp = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrTrackerListThresholdUp.setStatus('current')
avstrTrackerListThresholdDown = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrTrackerListThresholdDown.setStatus('current')
avstrTrackerOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("reserved", 1), ("up", 2), ("down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avstrTrackerOperState.setStatus('current')
avstrTrackerOperStateLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 1, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avstrTrackerOperStateLastChange.setStatus('current')
avstrTrackerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 1, 1, 10), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrTrackerRowStatus.setStatus('current')
avstrTrackerPermanentTrackState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrTrackerPermanentTrackState.setStatus('current')
avstrTrackerListObjsTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 2), )
if mibBuilder.loadTexts: avstrTrackerListObjsTable.setStatus('current')
avstrTrackerListObjsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 2, 1), ).setIndexNames((0, "AVAYA-SAA-TRACK-MIB", "avstrTrackerListObjsParentTrackId"), (0, "AVAYA-SAA-TRACK-MIB", "avstrTrackerListObjsChildTrackId"))
if mibBuilder.loadTexts: avstrTrackerListObjsEntry.setStatus('current')
avstrTrackerListObjsParentTrackId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: avstrTrackerListObjsParentTrackId.setStatus('current')
avstrTrackerListObjsChildTrackId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: avstrTrackerListObjsChildTrackId.setStatus('current')
avstrTrackerListObjsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrTrackerListObjsRowStatus.setStatus('current')
avstrTrackerListObjsReverseState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 2, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avstrTrackerListObjsReverseState.setStatus('current')
avstrTrackerPtrsTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 3), )
if mibBuilder.loadTexts: avstrTrackerPtrsTable.setStatus('current')
avstrTrackerPtrsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 3, 1), ).setIndexNames((0, "AVAYA-SAA-TRACK-MIB", "avstrTrackerPtrsTrackId"), (0, "AVAYA-SAA-TRACK-MIB", "avstrTrackerPtrsIndex"))
if mibBuilder.loadTexts: avstrTrackerPtrsEntry.setStatus('current')
avstrTrackerPtrsTrackId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: avstrTrackerPtrsTrackId.setStatus('current')
avstrTrackerPtrsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: avstrTrackerPtrsIndex.setStatus('current')
avstrTrackerPtrsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avstrTrackerPtrsDescription.setStatus('current')
avstrTrackerPtrsType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("trackerList", 2), ("ifIndex", 3), ("isakmpPeer", 4), ("ipStaticRoute", 5), ("ipPbrNhListEntry", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avstrTrackerPtrsType.setStatus('current')
avstrTrackerPtrsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 1, 2, 3, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avstrTrackerPtrsValue.setStatus('current')
avstrMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 2))
avstrMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 2, 0))
avstrTrackerOperStateChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 2, 0, 1)).setObjects(("AVAYA-SAA-TRACK-MIB", "avstrTrackerOperState"), ("AVAYA-SAA-TRACK-MIB", "avstrTrackerDescription"))
if mibBuilder.loadTexts: avstrTrackerOperStateChangeNotification.setStatus('current')
avstrMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 3))
avstrMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 3, 1))
avstrRtrConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 3, 1, 1)).setObjects(("AVAYA-SAA-TRACK-MIB", "avstrRtrType"), ("AVAYA-SAA-TRACK-MIB", "avstrRtrFrequencyMs"), ("AVAYA-SAA-TRACK-MIB", "avstrRtrWaitIntervalMs"), ("AVAYA-SAA-TRACK-MIB", "avstrRtrFailRetries"), ("AVAYA-SAA-TRACK-MIB", "avstrRtrSuccessRetries"), ("AVAYA-SAA-TRACK-MIB", "avstrRtrProbeDscp"), ("AVAYA-SAA-TRACK-MIB", "avstrRtrProbeSrcIpAddr"), ("AVAYA-SAA-TRACK-MIB", "avstrRtrProbeNextHopIf"), ("AVAYA-SAA-TRACK-MIB", "avstrRtrProbeNextHopMac"), ("AVAYA-SAA-TRACK-MIB", "avstrRtrSchedule"), ("AVAYA-SAA-TRACK-MIB", "avstrRtrDestPort"), ("AVAYA-SAA-TRACK-MIB", "avstrRtrIfKpaliveBypass"), ("AVAYA-SAA-TRACK-MIB", "avstrRtrProbeNextHopIp"), ("AVAYA-SAA-TRACK-MIB", "avstrRtrRowStatus"), ("AVAYA-SAA-TRACK-MIB", "avstrRtrDestIp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    avstrRtrConfigGroup = avstrRtrConfigGroup.setStatus('current')
avstrRtrMonitoringGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 3, 1, 2)).setObjects(("AVAYA-SAA-TRACK-MIB", "avstrRtrOperState"), ("AVAYA-SAA-TRACK-MIB", "avstrRtrOperStateLastChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    avstrRtrMonitoringGroup = avstrRtrMonitoringGroup.setStatus('current')
avstrTrackerConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 3, 1, 3)).setObjects(("AVAYA-SAA-TRACK-MIB", "avstrTrackerType"), ("AVAYA-SAA-TRACK-MIB", "avstrTrackerRtrId"), ("AVAYA-SAA-TRACK-MIB", "avstrTrackerListType"), ("AVAYA-SAA-TRACK-MIB", "avstrTrackerRowStatus"), ("AVAYA-SAA-TRACK-MIB", "avstrTrackerListObjsRowStatus"), ("AVAYA-SAA-TRACK-MIB", "avstrTrackerListObjsReverseState"), ("AVAYA-SAA-TRACK-MIB", "avstrTrackerListThresholdUp"), ("AVAYA-SAA-TRACK-MIB", "avstrTrackerDescription"), ("AVAYA-SAA-TRACK-MIB", "avstrTrackerListThresholdDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    avstrTrackerConfigGroup = avstrTrackerConfigGroup.setStatus('current')
avstrTrackerMonitoringGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 3, 1, 4)).setObjects(("AVAYA-SAA-TRACK-MIB", "avstrTrackerOperState"), ("AVAYA-SAA-TRACK-MIB", "avstrTrackerOperStateLastChange"), ("AVAYA-SAA-TRACK-MIB", "avstrTrackerPtrsDescription"), ("AVAYA-SAA-TRACK-MIB", "avstrTrackerPtrsType"), ("AVAYA-SAA-TRACK-MIB", "avstrTrackerPtrsValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    avstrTrackerMonitoringGroup = avstrTrackerMonitoringGroup.setStatus('current')
avstrMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 3, 2))
avstrMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6889, 2, 6, 2, 3, 2, 1)).setObjects(("AVAYA-SAA-TRACK-MIB", "avstrRtrConfigGroup"), ("AVAYA-SAA-TRACK-MIB", "avstrTrackerConfigGroup"), ("AVAYA-SAA-TRACK-MIB", "avstrRtrMonitoringGroup"), ("AVAYA-SAA-TRACK-MIB", "avstrTrackerMonitoringGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    avstrMIBCompliance = avstrMIBCompliance.setStatus('current')
mibBuilder.exportSymbols("AVAYA-SAA-TRACK-MIB", avstrRtrId=avstrRtrId, avstrRtrRowStatus=avstrRtrRowStatus, avstrMIBConformance=avstrMIBConformance, avstrRtrSuccessRetries=avstrRtrSuccessRetries, avstrTrackerListThresholdDown=avstrTrackerListThresholdDown, avstrTrackerListObjsRowStatus=avstrTrackerListObjsRowStatus, avstrTrackerPermanentTrackState=avstrTrackerPermanentTrackState, avstrTrackerEntry=avstrTrackerEntry, avstrRtrWaitIntervalMs=avstrRtrWaitIntervalMs, avstrTrackerPtrsType=avstrTrackerPtrsType, avstrRtrEntry=avstrRtrEntry, avstrTrackerListType=avstrTrackerListType, avstrRtrDestHostName=avstrRtrDestHostName, avstrRtrIfKpaliveBypass=avstrRtrIfKpaliveBypass, avstrMIBCompliances=avstrMIBCompliances, avstrTrackerPtrsEntry=avstrTrackerPtrsEntry, avstrTrackerConfigGroup=avstrTrackerConfigGroup, avstrTrackerId=avstrTrackerId, avstrMIBNotificationPrefix=avstrMIBNotificationPrefix, avstrRtrSchedule=avstrRtrSchedule, avstrTrackerTable=avstrTrackerTable, avstrTrackerMIBObjects=avstrTrackerMIBObjects, avstrRtrResolvedIp=avstrRtrResolvedIp, avstrRtrType=avstrRtrType, avstrMIBGroups=avstrMIBGroups, avstrRtrProbeNextHopIp=avstrRtrProbeNextHopIp, avstrMIBCompliance=avstrMIBCompliance, avstrTrackerMonitoringGroup=avstrTrackerMonitoringGroup, PYSNMP_MODULE_ID=avayaSaaTrackMib, avstrTrackerRowStatus=avstrTrackerRowStatus, avstrTrackerListObjsReverseState=avstrTrackerListObjsReverseState, avstrTrackerOperStateChangeNotification=avstrTrackerOperStateChangeNotification, avstrRtrMIBObjects=avstrRtrMIBObjects, avstrTrackerRtrId=avstrTrackerRtrId, avstrRtrFailRetries=avstrRtrFailRetries, avstrTrackerListThresholdUp=avstrTrackerListThresholdUp, avstrTrackerPtrsDescription=avstrTrackerPtrsDescription, avstrRtrProbeNextHopIf=avstrRtrProbeNextHopIf, avstrRtrProbeSrcIpAddr=avstrRtrProbeSrcIpAddr, avstrRtrDestIp=avstrRtrDestIp, avstrTrackerListObjsEntry=avstrTrackerListObjsEntry, avstrRtrFrequencyMs=avstrRtrFrequencyMs, avstrTrackerPtrsTable=avstrTrackerPtrsTable, avstrRtrProbeDscp=avstrRtrProbeDscp, avstrTrackerPtrsTrackId=avstrTrackerPtrsTrackId, avstrTrackerListObjsParentTrackId=avstrTrackerListObjsParentTrackId, avstrTrackerOperStateLastChange=avstrTrackerOperStateLastChange, avstrTrackerType=avstrTrackerType, avstrRtrOperState=avstrRtrOperState, avstrTrackerListObjsChildTrackId=avstrTrackerListObjsChildTrackId, avstrTrackerDescription=avstrTrackerDescription, avstrTrackerPtrsIndex=avstrTrackerPtrsIndex, avstrMIBNotifications=avstrMIBNotifications, avstrRtrMonitoringGroup=avstrRtrMonitoringGroup, avstrTrackerPtrsValue=avstrTrackerPtrsValue, avstrRtrTable=avstrRtrTable, avstrRtrOperStateLastChange=avstrRtrOperStateLastChange, avayaSaaTrackMib=avayaSaaTrackMib, avstrRtrProbeNextHopMac=avstrRtrProbeNextHopMac, avstrTrackerListObjsTable=avstrTrackerListObjsTable, avstrRtrConfigGroup=avstrRtrConfigGroup, avstrRtrDestPort=avstrRtrDestPort, avstrMIBObjects=avstrMIBObjects, avstrTrackerOperState=avstrTrackerOperState)
