#
# PySNMP MIB module HPN-ICF-QOS-CAPABILITY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-QOS-CAPABILITY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
hpnicfSNMPAgCpb, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfSNMPAgCpb")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, Counter64, Gauge32, Bits, ModuleIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, NotificationType, IpAddress, Unsigned32, TimeTicks, MibIdentifier, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Counter64", "Gauge32", "Bits", "ModuleIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "NotificationType", "IpAddress", "Unsigned32", "TimeTicks", "MibIdentifier", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hpnicfQosCapability = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1))
if mibBuilder.loadTexts: hpnicfQosCapability.setLastUpdated('201302220000Z')
if mibBuilder.loadTexts: hpnicfQosCapability.setOrganization('')
hpnicfQoSCapabilityMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1))
class CapabilityPhysicalType(TextualConvention, Integer32):
    reference = 'rfc2737 ENTITY-MIB '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("stack", 1), ("chassis", 2), ("module", 3), ("port", 4))

hpnicfQoSCapabilityGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1))
hpnicfQoSCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 1), )
if mibBuilder.loadTexts: hpnicfQoSCapabilityTable.setStatus('current')
hpnicfQoSCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-QOS-CAPABILITY-MIB", "hpnicfQoSCapabilityPhysicalType"), (0, "HPN-ICF-QOS-CAPABILITY-MIB", "hpnicfQoSCapabilityPhysicalIndex"), (0, "HPN-ICF-QOS-CAPABILITY-MIB", "hpnicfQoSModuleIndex"), (0, "HPN-ICF-QOS-CAPABILITY-MIB", "hpnicfQoSCharacteristicsIndex"))
if mibBuilder.loadTexts: hpnicfQoSCapabilityEntry.setStatus('current')
hpnicfQoSCapabilityPhysicalType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 1, 1, 1), CapabilityPhysicalType())
if mibBuilder.loadTexts: hpnicfQoSCapabilityPhysicalType.setStatus('current')
hpnicfQoSCapabilityPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: hpnicfQoSCapabilityPhysicalIndex.setStatus('current')
hpnicfQoSModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 1, 1, 3), Integer32())
if mibBuilder.loadTexts: hpnicfQoSModuleIndex.setStatus('current')
hpnicfQoSCharacteristicsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 1, 1, 4), Integer32())
if mibBuilder.loadTexts: hpnicfQoSCharacteristicsIndex.setStatus('current')
hpnicfQoSCharacteristicsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfQoSCharacteristicsValue.setStatus('current')
hpnicfQoSSysCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 2), )
if mibBuilder.loadTexts: hpnicfQoSSysCapabilityTable.setStatus('current')
hpnicfQoSSysCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-QOS-CAPABILITY-MIB", "hpnicfQoSSysCapModuleIndex"), (0, "HPN-ICF-QOS-CAPABILITY-MIB", "hpnicfQoSSysCapCharacteristicsIndex"))
if mibBuilder.loadTexts: hpnicfQoSSysCapabilityEntry.setStatus('current')
hpnicfQoSSysCapModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfQoSSysCapModuleIndex.setStatus('current')
hpnicfQoSSysCapCharacteristicsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfQoSSysCapCharacteristicsIndex.setStatus('current')
hpnicfQoSSysCapCharacteristicsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfQoSSysCapCharacteristicsValue.setStatus('current')
hpnicfQoSIfCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 3), )
if mibBuilder.loadTexts: hpnicfQoSIfCapabilityTable.setStatus('current')
hpnicfQoSIfCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-QOS-CAPABILITY-MIB", "hpnicfQoSIfCapIfIndex"), (0, "HPN-ICF-QOS-CAPABILITY-MIB", "hpnicfQoSIfCapModuleIndex"), (0, "HPN-ICF-QOS-CAPABILITY-MIB", "hpnicfQoSIfCapCharacteristicsIndex"))
if mibBuilder.loadTexts: hpnicfQoSIfCapabilityEntry.setStatus('current')
hpnicfQoSIfCapIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfQoSIfCapIfIndex.setStatus('current')
hpnicfQoSIfCapModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfQoSIfCapModuleIndex.setStatus('current')
hpnicfQoSIfCapCharacteristicsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfQoSIfCapCharacteristicsIndex.setStatus('current')
hpnicfQoSIfCapCharacteristicsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 7, 1, 1, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfQoSIfCapCharacteristicsValue.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-QOS-CAPABILITY-MIB", hpnicfQoSIfCapModuleIndex=hpnicfQoSIfCapModuleIndex, hpnicfQoSIfCapCharacteristicsValue=hpnicfQoSIfCapCharacteristicsValue, hpnicfQoSSysCapabilityEntry=hpnicfQoSSysCapabilityEntry, hpnicfQoSCapabilityPhysicalType=hpnicfQoSCapabilityPhysicalType, hpnicfQoSIfCapIfIndex=hpnicfQoSIfCapIfIndex, hpnicfQoSIfCapabilityTable=hpnicfQoSIfCapabilityTable, hpnicfQoSCapabilityGroup=hpnicfQoSCapabilityGroup, hpnicfQoSIfCapabilityEntry=hpnicfQoSIfCapabilityEntry, hpnicfQoSIfCapCharacteristicsIndex=hpnicfQoSIfCapCharacteristicsIndex, hpnicfQoSSysCapModuleIndex=hpnicfQoSSysCapModuleIndex, hpnicfQoSCharacteristicsValue=hpnicfQoSCharacteristicsValue, hpnicfQoSCapabilityPhysicalIndex=hpnicfQoSCapabilityPhysicalIndex, hpnicfQoSSysCapCharacteristicsIndex=hpnicfQoSSysCapCharacteristicsIndex, PYSNMP_MODULE_ID=hpnicfQosCapability, hpnicfQoSCapabilityMibObjects=hpnicfQoSCapabilityMibObjects, hpnicfQoSModuleIndex=hpnicfQoSModuleIndex, CapabilityPhysicalType=CapabilityPhysicalType, hpnicfQosCapability=hpnicfQosCapability, hpnicfQoSCapabilityEntry=hpnicfQoSCapabilityEntry, hpnicfQoSCharacteristicsIndex=hpnicfQoSCharacteristicsIndex, hpnicfQoSCapabilityTable=hpnicfQoSCapabilityTable, hpnicfQoSSysCapabilityTable=hpnicfQoSSysCapabilityTable, hpnicfQoSSysCapCharacteristicsValue=hpnicfQoSSysCapCharacteristicsValue)
