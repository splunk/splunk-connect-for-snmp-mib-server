#
# PySNMP MIB module BRWAVE-RADIO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BRWAVE-RADIO-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:24:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter64, ObjectIdentity, NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Gauge32, MibIdentifier, IpAddress, Bits, iso, enterprises, Counter32, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ObjectIdentity", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Gauge32", "MibIdentifier", "IpAddress", "Bits", "iso", "enterprises", "Counter32", "ModuleIdentity", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
brwaveRadioMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6080, 1, 1, 3))
brwaveRadioMibModule.setRevisions(('2006-07-06 11:00', '2005-05-26 11:30',))
if mibBuilder.loadTexts: brwaveRadioMibModule.setLastUpdated('200607061100Z')
if mibBuilder.loadTexts: brwaveRadioMibModule.setOrganization('BridgeWave Communications')
bridgeWave = ObjectIdentity((1, 3, 6, 1, 4, 1, 6080))
if mibBuilder.loadTexts: bridgeWave.setStatus('current')
brwaveReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 6080, 1))
if mibBuilder.loadTexts: brwaveReg.setStatus('current')
brwaveMibs = ObjectIdentity((1, 3, 6, 1, 4, 1, 6080, 1, 1))
if mibBuilder.loadTexts: brwaveMibs.setStatus('current')
brwaveModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 6080, 1, 2))
if mibBuilder.loadTexts: brwaveModules.setStatus('current')
brwaveRadioFE60 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6080, 1, 2, 1))
if mibBuilder.loadTexts: brwaveRadioFE60.setStatus('current')
brwaveRadioGE60 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6080, 1, 2, 2))
if mibBuilder.loadTexts: brwaveRadioGE60.setStatus('current')
brwaveRadioAR60 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6080, 1, 2, 3))
if mibBuilder.loadTexts: brwaveRadioAR60.setStatus('current')
brwaveCommon = ObjectIdentity((1, 3, 6, 1, 4, 1, 6080, 2))
if mibBuilder.loadTexts: brwaveCommon.setStatus('current')
brwaveRadioSn = MibScalar((1, 3, 6, 1, 4, 1, 6080, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveRadioSn.setStatus('current')
brwaveUnitModel = MibScalar((1, 3, 6, 1, 4, 1, 6080, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveUnitModel.setStatus('current')
brwaveBbSn = MibScalar((1, 3, 6, 1, 4, 1, 6080, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveBbSn.setStatus('current')
brwaveIfSn = MibScalar((1, 3, 6, 1, 4, 1, 6080, 2, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveIfSn.setStatus('current')
brwaveMmwSn = MibScalar((1, 3, 6, 1, 4, 1, 6080, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveMmwSn.setStatus('current')
brwaveTrapCount = MibScalar((1, 3, 6, 1, 4, 1, 6080, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveTrapCount.setStatus('current')
brwaveProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 6080, 3))
if mibBuilder.loadTexts: brwaveProducts.setStatus('current')
brwaveRadio = ObjectIdentity((1, 3, 6, 1, 4, 1, 6080, 3, 1))
if mibBuilder.loadTexts: brwaveRadio.setStatus('current')
brwaveRadioFactorySetup = ObjectIdentity((1, 3, 6, 1, 4, 1, 6080, 3, 1, 2))
if mibBuilder.loadTexts: brwaveRadioFactorySetup.setStatus('current')
brwaveRadioTxBand = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("low", 1), ("high", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveRadioTxBand.setStatus('current')
brwaveRadioFactoryRate = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("adaptRate", 1), ("mbps1000", 2), ("mbps100", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveRadioFactoryRate.setStatus('current')
brwaveRadioClearStats = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brwaveRadioClearStats.setStatus('current')
brwaveRadioStatus = ObjectIdentity((1, 3, 6, 1, 4, 1, 6080, 3, 1, 3))
if mibBuilder.loadTexts: brwaveRadioStatus.setStatus('current')
brwaveRadioInVoltage = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveRadioInVoltage.setStatus('current')
brwaveRadioUnitTemperature = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveRadioUnitTemperature.setStatus('current')
brwaveRadioTxTemperature = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveRadioTxTemperature.setStatus('current')
brwaveRadioRSL = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveRadioRSL.setStatus('current')
brwaveRadioRSLVoltage = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 3, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveRadioRSLVoltage.setStatus('current')
brwaveRadioAbsRSL = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveRadioAbsRSL.setStatus('current')
brwaveRadioRSLVoltageInt = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveRadioRSLVoltageInt.setStatus('current')
brwaveCopperUtilization = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveCopperUtilization.setStatus('current')
brwaveFiberUtilization = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveFiberUtilization.setStatus('current')
brwaveRadioUtilization = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveRadioUtilization.setStatus('current')
brwaveRadioFecError = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noError", 0), ("preFec", 1), ("postFec", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveRadioFecError.setStatus('current')
brwaveRadioPreFecFlag = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 3, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveRadioPreFecFlag.setStatus('current')
brwaveRadioPostFecFlag = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 3, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveRadioPostFecFlag.setStatus('current')
brwaveRadioLinkRate = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brwaveRadioLinkRate.setStatus('current')
brwaveRadioEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9))
brwaveRadioEventsV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 0))
brwaveRadioTrapObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 1))
managerIP = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: managerIP.setStatus('current')
userName = MibScalar((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: userName.setStatus('current')
brwaveConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6080, 3, 1, 10))
brwaveRadioGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6080, 3, 1, 10, 1))
brwaveCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6080, 3, 1, 10, 2))
brwaveErrorsOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("BRWAVE-RADIO-MIB", "brwaveRadioUnitTemperature"), ("BRWAVE-RADIO-MIB", "brwaveRadioTxTemperature"), ("BRWAVE-RADIO-MIB", "brwaveRadioRSL"))
if mibBuilder.loadTexts: brwaveErrorsOverThreshold.setStatus('current')
brwaveErrorsUnderThreshold = NotificationType((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 0, 2)).setObjects(("IF-MIB", "ifIndex"), ("BRWAVE-RADIO-MIB", "brwaveRadioUnitTemperature"), ("BRWAVE-RADIO-MIB", "brwaveRadioTxTemperature"), ("BRWAVE-RADIO-MIB", "brwaveRadioRSL"))
if mibBuilder.loadTexts: brwaveErrorsUnderThreshold.setStatus('current')
brwaveUnitTemperatureAbnormal = NotificationType((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 0, 3)).setObjects(("BRWAVE-RADIO-MIB", "brwaveRadioUnitTemperature"))
if mibBuilder.loadTexts: brwaveUnitTemperatureAbnormal.setStatus('current')
brwaveUnitTemperatureNormal = NotificationType((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 0, 4)).setObjects(("BRWAVE-RADIO-MIB", "brwaveRadioUnitTemperature"))
if mibBuilder.loadTexts: brwaveUnitTemperatureNormal.setStatus('current')
brwaveTxTemperatureAbnormal = NotificationType((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 0, 5)).setObjects(("BRWAVE-RADIO-MIB", "brwaveRadioTxTemperature"))
if mibBuilder.loadTexts: brwaveTxTemperatureAbnormal.setStatus('current')
brwaveTxTemperatureNormal = NotificationType((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 0, 6)).setObjects(("BRWAVE-RADIO-MIB", "brwaveRadioTxTemperature"))
if mibBuilder.loadTexts: brwaveTxTemperatureNormal.setStatus('current')
brwaveInputVoltageAbnormal = NotificationType((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 0, 7)).setObjects(("BRWAVE-RADIO-MIB", "brwaveRadioInVoltage"))
if mibBuilder.loadTexts: brwaveInputVoltageAbnormal.setStatus('current')
brwaveInputVoltageNormal = NotificationType((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 0, 8)).setObjects(("BRWAVE-RADIO-MIB", "brwaveRadioInVoltage"))
if mibBuilder.loadTexts: brwaveInputVoltageNormal.setStatus('current')
brwaveRslNormal = NotificationType((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 0, 10)).setObjects(("BRWAVE-RADIO-MIB", "brwaveRadioRSL"))
if mibBuilder.loadTexts: brwaveRslNormal.setStatus('current')
brwaveRslMinor = NotificationType((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 0, 11)).setObjects(("BRWAVE-RADIO-MIB", "brwaveRadioRSL"))
if mibBuilder.loadTexts: brwaveRslMinor.setStatus('current')
brwaveRslMajor = NotificationType((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 0, 13)).setObjects(("BRWAVE-RADIO-MIB", "brwaveRadioRSL"))
if mibBuilder.loadTexts: brwaveRslMajor.setStatus('current')
brwaveConfigChange = NotificationType((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 0, 26))
if mibBuilder.loadTexts: brwaveConfigChange.setStatus('current')
brwaveLoginSuccessfull = NotificationType((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 0, 27))
if mibBuilder.loadTexts: brwaveLoginSuccessfull.setStatus('current')
brwaveGeToFeSwitch = NotificationType((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 0, 28)).setObjects(("BRWAVE-RADIO-MIB", "brwaveRadioRSL"))
if mibBuilder.loadTexts: brwaveGeToFeSwitch.setStatus('current')
brwaveFeToGeSwitch = NotificationType((1, 3, 6, 1, 4, 1, 6080, 3, 1, 9, 0, 29)).setObjects(("BRWAVE-RADIO-MIB", "brwaveRadioRSL"))
if mibBuilder.loadTexts: brwaveFeToGeSwitch.setStatus('current')
brwaveCommonGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6080, 3, 1, 10, 1, 1)).setObjects(("BRWAVE-RADIO-MIB", "brwaveRadioSn"), ("BRWAVE-RADIO-MIB", "brwaveUnitModel"), ("BRWAVE-RADIO-MIB", "brwaveTrapCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    brwaveCommonGroup = brwaveCommonGroup.setStatus('current')
brwaveFactoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6080, 3, 1, 10, 1, 2)).setObjects(("BRWAVE-RADIO-MIB", "brwaveRadioTxBand"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    brwaveFactoryGroup = brwaveFactoryGroup.setStatus('current')
brwaveStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6080, 3, 1, 10, 1, 3)).setObjects(("BRWAVE-RADIO-MIB", "brwaveRadioInVoltage"), ("BRWAVE-RADIO-MIB", "brwaveRadioUnitTemperature"), ("BRWAVE-RADIO-MIB", "brwaveRadioTxTemperature"), ("BRWAVE-RADIO-MIB", "brwaveRadioRSL"), ("BRWAVE-RADIO-MIB", "brwaveRadioRSLVoltage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    brwaveStatusGroup = brwaveStatusGroup.setStatus('current')
mibBuilder.exportSymbols("BRWAVE-RADIO-MIB", brwaveConfigChange=brwaveConfigChange, brwaveErrorsOverThreshold=brwaveErrorsOverThreshold, brwaveRadioInVoltage=brwaveRadioInVoltage, PYSNMP_MODULE_ID=brwaveRadioMibModule, brwaveRadioFactorySetup=brwaveRadioFactorySetup, brwaveRadioRSLVoltageInt=brwaveRadioRSLVoltageInt, brwaveFeToGeSwitch=brwaveFeToGeSwitch, brwaveRadioPostFecFlag=brwaveRadioPostFecFlag, brwaveCommonGroup=brwaveCommonGroup, brwaveBbSn=brwaveBbSn, brwaveTrapCount=brwaveTrapCount, brwaveRadioAbsRSL=brwaveRadioAbsRSL, bridgeWave=bridgeWave, brwaveRadioAR60=brwaveRadioAR60, brwaveInputVoltageAbnormal=brwaveInputVoltageAbnormal, brwaveRadioUnitTemperature=brwaveRadioUnitTemperature, brwaveMibs=brwaveMibs, brwaveCompliances=brwaveCompliances, brwaveRslMajor=brwaveRslMajor, brwaveRadioClearStats=brwaveRadioClearStats, brwaveRadioStatus=brwaveRadioStatus, brwaveRadioMibModule=brwaveRadioMibModule, brwaveRadioUtilization=brwaveRadioUtilization, brwaveRadioLinkRate=brwaveRadioLinkRate, brwaveRslNormal=brwaveRslNormal, userName=userName, brwaveRadioEvents=brwaveRadioEvents, managerIP=managerIP, brwaveRadio=brwaveRadio, brwaveModules=brwaveModules, brwaveRadioFactoryRate=brwaveRadioFactoryRate, brwaveUnitModel=brwaveUnitModel, brwaveFiberUtilization=brwaveFiberUtilization, brwaveInputVoltageNormal=brwaveInputVoltageNormal, brwaveUnitTemperatureNormal=brwaveUnitTemperatureNormal, brwaveRadioTxBand=brwaveRadioTxBand, brwaveRadioRSLVoltage=brwaveRadioRSLVoltage, brwaveRadioPreFecFlag=brwaveRadioPreFecFlag, brwaveCopperUtilization=brwaveCopperUtilization, brwaveUnitTemperatureAbnormal=brwaveUnitTemperatureAbnormal, brwaveReg=brwaveReg, brwaveRslMinor=brwaveRslMinor, brwaveLoginSuccessfull=brwaveLoginSuccessfull, brwaveStatusGroup=brwaveStatusGroup, brwaveRadioGE60=brwaveRadioGE60, brwaveCommon=brwaveCommon, brwaveRadioFecError=brwaveRadioFecError, brwaveRadioFE60=brwaveRadioFE60, brwaveConformance=brwaveConformance, brwaveFactoryGroup=brwaveFactoryGroup, brwaveTxTemperatureAbnormal=brwaveTxTemperatureAbnormal, brwaveRadioSn=brwaveRadioSn, brwaveRadioEventsV2=brwaveRadioEventsV2, brwaveRadioGroups=brwaveRadioGroups, brwaveErrorsUnderThreshold=brwaveErrorsUnderThreshold, brwaveMmwSn=brwaveMmwSn, brwaveRadioRSL=brwaveRadioRSL, brwaveGeToFeSwitch=brwaveGeToFeSwitch, brwaveProducts=brwaveProducts, brwaveIfSn=brwaveIfSn, brwaveRadioTrapObjs=brwaveRadioTrapObjs, brwaveTxTemperatureNormal=brwaveTxTemperatureNormal, brwaveRadioTxTemperature=brwaveRadioTxTemperature)
