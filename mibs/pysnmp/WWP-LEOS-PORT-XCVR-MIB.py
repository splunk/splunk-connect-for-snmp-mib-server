#
# PySNMP MIB module WWP-LEOS-PORT-XCVR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-PORT-XCVR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ModuleIdentity, Counter64, Unsigned32, Integer32, iso, Bits, MibIdentifier, IpAddress, ObjectIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ModuleIdentity", "Counter64", "Unsigned32", "Integer32", "iso", "Bits", "MibIdentifier", "IpAddress", "ObjectIdentity", "Gauge32")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
wwpModules, wwpModulesLeos = mibBuilder.importSymbols("WWP-SMI", "wwpModules", "wwpModulesLeos")
wwpLeosPortXcvrMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4))
wwpLeosPortXcvrMIB.setRevisions(('2011-07-06 00:00', '2011-05-24 00:00', '2011-03-08 00:00', '2010-02-01 00:00', '2006-03-15 00:00', '2001-04-03 17:00',))
if mibBuilder.loadTexts: wwpLeosPortXcvrMIB.setLastUpdated('201107060000Z')
if mibBuilder.loadTexts: wwpLeosPortXcvrMIB.setOrganization('Ciena, Inc')
wwpLeosPortXcvrMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1))
wwpLeosPortXcvr = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1))
wwpLeosPortXcvrNotif = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 2))
wwpLeosPortXcvrMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2))
wwpLeosPortXcvrMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0))
wwpLeosPortXcvrMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 3))
wwpLeosPortXcvrMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 3, 1))
wwpLeosPortXcvrMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 3, 2))
wwpLeosPortXcvrTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1), )
if mibBuilder.loadTexts: wwpLeosPortXcvrTable.setStatus('current')
wwpLeosPortXcvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1), ).setIndexNames((0, "WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrEntry.setStatus('current')
wwpLeosPortXcvrId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrId.setStatus('current')
wwpLeosPortXcvrOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("loopback", 3), ("notPresent", 4), ("faulted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrOperState.setStatus('current')
wwpLeosPortXcvrIdentiferType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("unknown", 1), ("gbic", 2), ("solderedType", 3), ("sfp", 4), ("reserved", 5), ("vendorSpecific", 6), ("xbi", 7), ("xenpak", 8), ("xfp", 9), ("xff", 10), ("xfpe", 11), ("xpak", 12), ("x2", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrIdentiferType.setStatus('current')
wwpLeosPortXcvrExtIdentiferType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unknown", 1), ("sfp-gbic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrExtIdentiferType.setStatus('current')
wwpLeosPortXcvrConnectorType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrConnectorType.setStatus('current')
wwpLeosPortXcvrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrType.setStatus('current')
wwpLeosPortXcvrVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrVendorName.setStatus('current')
wwpLeosPortXcvrVendorOUI = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrVendorOUI.setStatus('current')
wwpLeosPortXcvrVendorPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrVendorPN.setStatus('current')
wwpLeosPortXcvrRevNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrRevNum.setStatus('current')
wwpLeosPortXcvrSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrSerialNum.setStatus('current')
wwpLeosPortXcvrEncodingType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrEncodingType.setStatus('current')
wwpLeosPortXcvrMfgDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrMfgDate.setStatus('current')
wwpLeosPortXcvrComplianceVer = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrComplianceVer.setStatus('current')
wwpLeosPortXcvrWaveLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrWaveLength.setStatus('current')
wwpLeosPortXcvrTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrTemperature.setStatus('current')
wwpLeosPortXcvrVcc = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrVcc.setStatus('current')
wwpLeosPortXcvrBias = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrBias.setStatus('current')
wwpLeosPortXcvrRxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('uW').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrRxPower.setStatus('current')
wwpLeosPortXcvrTxState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrTxState.setStatus('current')
wwpLeosPortXcvrTxFaultStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fault", 1), ("noFault", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrTxFaultStatus.setStatus('current')
wwpLeosPortXcvrRxRateStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrRxRateStatus.setStatus('current')
wwpLeosPortXcvr9by125um = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvr9by125um.setStatus('current')
wwpLeosPortXcvr50by125um = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvr50by125um.setStatus('current')
wwpLeosPortXcvr62dot5by125um = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvr62dot5by125um.setStatus('current')
wwpLeosPortXcvrCu = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrCu.setStatus('current')
wwpLeosPortXcvrTxOutputPw = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('uW').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrTxOutputPw.setStatus('current')
wwpLeosPortXcvrLosState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 28), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrLosState.setStatus('current')
wwpLeosPortXcvrDiagSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 29), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrDiagSupported.setStatus('current')
wwpLeosPortXcvrEnhDiagAlarmSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 30), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrEnhDiagAlarmSupported.setStatus('current')
wwpLeosPortXcvrEnhDiagSoftTxDisableSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 31), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrEnhDiagSoftTxDisableSupported.setStatus('current')
wwpLeosPortXcvrEnhDiagSoftTxFaultSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 32), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrEnhDiagSoftTxFaultSupported.setStatus('current')
wwpLeosPortXcvrEnhDiagRxLosSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 33), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrEnhDiagRxLosSupported.setStatus('current')
wwpLeosPortXcvrHighTempAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrHighTempAlarmThreshold.setStatus('current')
wwpLeosPortXcvrLowTempAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrLowTempAlarmThreshold.setStatus('current')
wwpLeosPortXcvrHighVccAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrHighVccAlarmThreshold.setStatus('current')
wwpLeosPortXcvrLowVccAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrLowVccAlarmThreshold.setStatus('current')
wwpLeosPortXcvrHighBiasAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrHighBiasAlarmThreshold.setStatus('current')
wwpLeosPortXcvrLowBiasAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrLowBiasAlarmThreshold.setStatus('current')
wwpLeosPortXcvrHighTxPwAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 40), Integer32()).setUnits('uW').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrHighTxPwAlarmThreshold.setStatus('current')
wwpLeosPortXcvrLowTxPwAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 41), Integer32()).setUnits('uW').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrLowTxPwAlarmThreshold.setStatus('current')
wwpLeosPortXcvrHighRxPwAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 42), Integer32()).setUnits('uW').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrHighRxPwAlarmThreshold.setStatus('current')
wwpLeosPortXcvrLowRxPwAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 43), Integer32()).setUnits('uW').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrLowRxPwAlarmThreshold.setStatus('current')
wwpLeosPortXcvrEnhDiagRateSelectSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 44), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrEnhDiagRateSelectSupported.setStatus('current')
wwpLeosPortXcvrAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("loopback", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPortXcvrAdminState.setStatus('current')
wwpLeosPortXcvrXfpMinBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 70), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpMinBitRate.setStatus('current')
wwpLeosPortXcvrXfpMaxBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 71), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpMaxBitRate.setStatus('current')
wwpLeosPortXcvrXfpLinkLenSmf1km = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 72), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpLinkLenSmf1km.setStatus('current')
wwpLeosPortXcvrXfpLinkLenE50u2m = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 73), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpLinkLenE50u2m.setStatus('current')
wwpLeosPortXcvrXfpLinkLen50u1m = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 74), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpLinkLen50u1m.setStatus('current')
wwpLeosPortXcvrXfpLinkLen62dot5u1m = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 75), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpLinkLen62dot5u1m.setStatus('current')
wwpLeosPortXcvrXfpLinkLenCopper1m = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 76), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpLinkLenCopper1m.setStatus('current')
wwpLeosPortXcvrXfpDevTech = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 77), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("vcsel850nm", 1), ("vcsel1310nm", 2), ("vcsel1550nm", 3), ("fp1310nm", 4), ("dfb1310nm", 5), ("dfb1550nm", 6), ("eml1310nm", 7), ("eml1550nm", 8), ("copperOrOther", 9), ("tunable1550nm", 10), ("reserved", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpDevTech.setStatus('current')
wwpLeosPortXcvrXfpTransmitterTech = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 78), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpTransmitterTech.setStatus('current')
wwpLeosPortXcvrXfpCdrSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 79), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpCdrSupport.setStatus('current')
wwpLeosPortXcvrXfpWaveLengthTol = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 80), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpWaveLengthTol.setStatus('current')
wwpLeosPortXcvrXfpMaxCaseTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 81), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpMaxCaseTemp.setStatus('current')
wwpLeosPortXcvrXfpMaxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 82), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpMaxPower.setStatus('current')
wwpLeosPortXcvrXfpMax5vCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 83), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpMax5vCurrent.setStatus('current')
wwpLeosPortXcvrXfpMax3p3vCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 84), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpMax3p3vCurrent.setStatus('current')
wwpLeosPortXcvrXfpMax1p8vCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 85), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpMax1p8vCurrent.setStatus('current')
wwpLeosPortXcvrXfpMaxNeg5p2vCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 86), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpMaxNeg5p2vCurrent.setStatus('current')
wwpLeosPortXcvrXfpDiagMonitorType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 87), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpDiagMonitorType.setStatus('current')
wwpLeosPortXcvrXfpEnhancedOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 88), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpEnhancedOptions.setStatus('current')
wwpLeosPortXcvrXfpAuxMonitoringInput1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 89), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("none", 1), ("aPDBiasVoltage", 2), ("reserved", 3), ("tECCurrentMa", 4), ("laserTemp", 5), ("laserWavelength", 6), ("voltage5V", 7), ("voltage3p3V", 8), ("voltage1p8V", 9), ("voltageNeg5p2V", 10), ("voltage5VCurrent", 11), ("voltage3p3VCurrent", 12), ("voltage1p8VCurrent", 13), ("voltageNeg5p2VCurrent", 14), ("unknown", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpAuxMonitoringInput1.setStatus('current')
wwpLeosPortXcvrXfpAuxMonitoringInput2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 90), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("none", 1), ("aPDBiasVoltage", 2), ("reserved", 3), ("tECCurrentMa", 4), ("laserTemp", 5), ("laserWavelength", 6), ("voltage5V", 7), ("voltage3p3V", 8), ("voltage1p8V", 9), ("voltageNeg5p2V", 10), ("voltage5VCurrent", 11), ("voltage3p3VCurrent", 12), ("voltage1p8VCurrent", 13), ("voltageNeg5p2VCurrent", 14), ("unknown", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpAuxMonitoringInput2.setStatus('current')
wwpLeosPortXcvrAdminFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 91), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPortXcvrAdminFrequency.setStatus('current')
wwpLeosPortXcvrXfpLaserFirstFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 92), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpLaserFirstFrequency.setStatus('current')
wwpLeosPortXcvrXfpLaserLastFrquency = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 93), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpLaserLastFrquency.setStatus('current')
wwpLeosPortXcvrXfpMaxGridScacing = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 94), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpMaxGridScacing.setStatus('current')
wwpLeosPortXcvrXfpChannelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 95), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpChannelNum.setStatus('current')
wwpLeosPortXcvrXfpFrequencyError = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 96), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpFrequencyError.setStatus('current')
wwpLeosPortXcvrAdminWavelength = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 97), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPortXcvrAdminWavelength.setStatus('current')
wwpLeosPortXcvrAdminChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 98), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPortXcvrAdminChannel.setStatus('current')
wwpLeosPortXcvrXfpLaserFirstWavelenth = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 99), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpLaserFirstWavelenth.setStatus('current')
wwpLeosPortXcvrXfpLaserLastWavelength = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 100), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpLaserLastWavelength.setStatus('current')
wwpLeosPortXcvrXfpLaserFirstChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 101), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpLaserFirstChannel.setStatus('current')
wwpLeosPortXcvrXfpLaserLastChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 102), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrXfpLaserLastChannel.setStatus('current')
wwpLeosPortXcvrOperFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 103), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrOperFrequency.setStatus('current')
wwpLeosPortXcvrOperWavelength = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 104), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrOperWavelength.setStatus('current')
wwpLeosPortXcvrRxDbmPower = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 105), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrRxDbmPower.setStatus('current')
wwpLeosPortXcvrTxDbmPower = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 106), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrTxDbmPower.setStatus('current')
wwpLeosPortXcvrHighTxDbmPwAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 107), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrHighTxDbmPwAlarmThreshold.setStatus('current')
wwpLeosPortXcvrLowTxDbmPwAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 108), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrLowTxDbmPwAlarmThreshold.setStatus('current')
wwpLeosPortXcvrHighRxDbmPwAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 109), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrHighRxDbmPwAlarmThreshold.setStatus('current')
wwpLeosPortXcvrLowRxDbmPwAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 1, 1, 1, 110), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrLowRxDbmPwAlarmThreshold.setStatus('current')
wwpLeosPortXcvrEventType = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inserted", 1), ("removed", 2), ("enabled", 3), ("disabled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrEventType.setStatus('current')
wwpLeosPortXcvrErrorType = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("chksumFailed", 1), ("opticalFault", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPortXcvrErrorType.setStatus('current')
wwpLeosPortXcvrLinkStateChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 4)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"), ("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrEventType"))
if mibBuilder.loadTexts: wwpLeosPortXcvrLinkStateChangeNotification.setStatus('current')
wwpLeosPortXcvrErrorTypeNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 5)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"), ("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrErrorType"))
if mibBuilder.loadTexts: wwpLeosPortXcvrErrorTypeNotification.setStatus('current')
wwpLeosPortXcvrTempHighNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 6)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrTempHighNotification.setStatus('current')
wwpLeosPortXcvrTempLowNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 7)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrTempLowNotification.setStatus('current')
wwpLeosPortXcvrTempNormalNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 8)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrTempNormalNotification.setStatus('current')
wwpLeosPortXcvrVoltageHighNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 9)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrVoltageHighNotification.setStatus('current')
wwpLeosPortXcvrVoltageLowNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 10)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrVoltageLowNotification.setStatus('current')
wwpLeosPortXcvrVoltageNormalNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 11)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrVoltageNormalNotification.setStatus('current')
wwpLeosPortXcvrBiasHighNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 12)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrBiasHighNotification.setStatus('current')
wwpLeosPortXcvrBiasLowNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 13)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrBiasLowNotification.setStatus('current')
wwpLeosPortXcvrBiasNormalNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 14)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrBiasNormalNotification.setStatus('current')
wwpLeosPortXcvrTxPowerHighNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 15)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrTxPowerHighNotification.setStatus('current')
wwpLeosPortXcvrTxPowerLowNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 16)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrTxPowerLowNotification.setStatus('current')
wwpLeosPortXcvrTxPowerNormalNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 17)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrTxPowerNormalNotification.setStatus('current')
wwpLeosPortXcvrRxPowerHighNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 18)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrRxPowerHighNotification.setStatus('current')
wwpLeosPortXcvrRxPowerLowNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 19)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrRxPowerLowNotification.setStatus('current')
wwpLeosPortXcvrRxPowerNormalNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 20)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrRxPowerNormalNotification.setStatus('current')
wwpLeosPortXcvrSpeedInfoMissingNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 21)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrSpeedInfoMissingNotification.setStatus('current')
wwpLeosPortXcvrBiasHighWarningNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 22)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrBiasHighWarningNotification.setStatus('current')
wwpLeosPortXcvrBiasLowWarningNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 23)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrBiasLowWarningNotification.setStatus('current')
wwpLeosPortXcvrTempHighWarningNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 24)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrTempHighWarningNotification.setStatus('current')
wwpLeosPortXcvrTempLowWarningNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 25)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrTempLowWarningNotification.setStatus('current')
wwpLeosPortXcvrVoltageHighWarningNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 26)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrVoltageHighWarningNotification.setStatus('current')
wwpLeosPortXcvrVoltageLowWarningNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 27)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrVoltageLowWarningNotification.setStatus('current')
wwpLeosPortXcvrTxPowerHighWarningNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 28)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrTxPowerHighWarningNotification.setStatus('current')
wwpLeosPortXcvrTxPowerLowWarningNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 29)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrTxPowerLowWarningNotification.setStatus('current')
wwpLeosPortXcvrRxPowerHighWarningNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 30)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrRxPowerHighWarningNotification.setStatus('current')
wwpLeosPortXcvrRxPowerLowWarningNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 4, 2, 0, 31)).setObjects(("WWP-LEOS-PORT-XCVR-MIB", "wwpLeosPortXcvrId"))
if mibBuilder.loadTexts: wwpLeosPortXcvrRxPowerLowWarningNotification.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-PORT-XCVR-MIB", wwpLeosPortXcvrVcc=wwpLeosPortXcvrVcc, wwpLeosPortXcvrConnectorType=wwpLeosPortXcvrConnectorType, wwpLeosPortXcvrMIB=wwpLeosPortXcvrMIB, wwpLeosPortXcvrTxState=wwpLeosPortXcvrTxState, wwpLeosPortXcvrTxPowerLowNotification=wwpLeosPortXcvrTxPowerLowNotification, wwpLeosPortXcvrTempHighNotification=wwpLeosPortXcvrTempHighNotification, wwpLeosPortXcvrLowBiasAlarmThreshold=wwpLeosPortXcvrLowBiasAlarmThreshold, wwpLeosPortXcvrLowTxPwAlarmThreshold=wwpLeosPortXcvrLowTxPwAlarmThreshold, wwpLeosPortXcvrEventType=wwpLeosPortXcvrEventType, wwpLeosPortXcvr62dot5by125um=wwpLeosPortXcvr62dot5by125um, wwpLeosPortXcvrMIBNotificationPrefix=wwpLeosPortXcvrMIBNotificationPrefix, wwpLeosPortXcvrXfpDevTech=wwpLeosPortXcvrXfpDevTech, wwpLeosPortXcvrEnhDiagRxLosSupported=wwpLeosPortXcvrEnhDiagRxLosSupported, wwpLeosPortXcvrVendorOUI=wwpLeosPortXcvrVendorOUI, wwpLeosPortXcvrXfpLinkLenE50u2m=wwpLeosPortXcvrXfpLinkLenE50u2m, wwpLeosPortXcvrTxDbmPower=wwpLeosPortXcvrTxDbmPower, wwpLeosPortXcvrBias=wwpLeosPortXcvrBias, wwpLeosPortXcvrRxPowerHighWarningNotification=wwpLeosPortXcvrRxPowerHighWarningNotification, wwpLeosPortXcvrHighTxPwAlarmThreshold=wwpLeosPortXcvrHighTxPwAlarmThreshold, wwpLeosPortXcvrVoltageLowWarningNotification=wwpLeosPortXcvrVoltageLowWarningNotification, wwpLeosPortXcvrVoltageHighWarningNotification=wwpLeosPortXcvrVoltageHighWarningNotification, wwpLeosPortXcvrId=wwpLeosPortXcvrId, wwpLeosPortXcvrLowTxDbmPwAlarmThreshold=wwpLeosPortXcvrLowTxDbmPwAlarmThreshold, wwpLeosPortXcvrXfpTransmitterTech=wwpLeosPortXcvrXfpTransmitterTech, wwpLeosPortXcvrErrorTypeNotification=wwpLeosPortXcvrErrorTypeNotification, wwpLeosPortXcvrRxPower=wwpLeosPortXcvrRxPower, wwpLeosPortXcvrXfpDiagMonitorType=wwpLeosPortXcvrXfpDiagMonitorType, wwpLeosPortXcvrVendorName=wwpLeosPortXcvrVendorName, wwpLeosPortXcvrTxPowerNormalNotification=wwpLeosPortXcvrTxPowerNormalNotification, wwpLeosPortXcvrXfpMaxBitRate=wwpLeosPortXcvrXfpMaxBitRate, wwpLeosPortXcvrTxPowerLowWarningNotification=wwpLeosPortXcvrTxPowerLowWarningNotification, wwpLeosPortXcvrOperWavelength=wwpLeosPortXcvrOperWavelength, wwpLeosPortXcvrEntry=wwpLeosPortXcvrEntry, wwpLeosPortXcvrXfpWaveLengthTol=wwpLeosPortXcvrXfpWaveLengthTol, wwpLeosPortXcvrType=wwpLeosPortXcvrType, wwpLeosPortXcvrXfpLaserFirstWavelenth=wwpLeosPortXcvrXfpLaserFirstWavelenth, wwpLeosPortXcvrIdentiferType=wwpLeosPortXcvrIdentiferType, wwpLeosPortXcvrXfpMaxGridScacing=wwpLeosPortXcvrXfpMaxGridScacing, wwpLeosPortXcvrTxOutputPw=wwpLeosPortXcvrTxOutputPw, wwpLeosPortXcvrEnhDiagSoftTxDisableSupported=wwpLeosPortXcvrEnhDiagSoftTxDisableSupported, wwpLeosPortXcvrXfpLinkLenSmf1km=wwpLeosPortXcvrXfpLinkLenSmf1km, wwpLeosPortXcvrVoltageLowNotification=wwpLeosPortXcvrVoltageLowNotification, wwpLeosPortXcvrXfpLaserFirstFrequency=wwpLeosPortXcvrXfpLaserFirstFrequency, wwpLeosPortXcvrAdminState=wwpLeosPortXcvrAdminState, wwpLeosPortXcvrDiagSupported=wwpLeosPortXcvrDiagSupported, wwpLeosPortXcvrNotif=wwpLeosPortXcvrNotif, wwpLeosPortXcvrEnhDiagAlarmSupported=wwpLeosPortXcvrEnhDiagAlarmSupported, wwpLeosPortXcvrEnhDiagRateSelectSupported=wwpLeosPortXcvrEnhDiagRateSelectSupported, wwpLeosPortXcvrWaveLength=wwpLeosPortXcvrWaveLength, wwpLeosPortXcvrXfpLinkLenCopper1m=wwpLeosPortXcvrXfpLinkLenCopper1m, wwpLeosPortXcvrAdminFrequency=wwpLeosPortXcvrAdminFrequency, wwpLeosPortXcvrSerialNum=wwpLeosPortXcvrSerialNum, wwpLeosPortXcvrXfpMaxPower=wwpLeosPortXcvrXfpMaxPower, wwpLeosPortXcvrMIBNotifications=wwpLeosPortXcvrMIBNotifications, wwpLeosPortXcvrXfpMinBitRate=wwpLeosPortXcvrXfpMinBitRate, wwpLeosPortXcvrExtIdentiferType=wwpLeosPortXcvrExtIdentiferType, wwpLeosPortXcvr50by125um=wwpLeosPortXcvr50by125um, wwpLeosPortXcvrMIBGroups=wwpLeosPortXcvrMIBGroups, wwpLeosPortXcvrXfpFrequencyError=wwpLeosPortXcvrXfpFrequencyError, wwpLeosPortXcvrXfpAuxMonitoringInput1=wwpLeosPortXcvrXfpAuxMonitoringInput1, wwpLeosPortXcvrLowVccAlarmThreshold=wwpLeosPortXcvrLowVccAlarmThreshold, wwpLeosPortXcvrLowRxDbmPwAlarmThreshold=wwpLeosPortXcvrLowRxDbmPwAlarmThreshold, wwpLeosPortXcvrTempHighWarningNotification=wwpLeosPortXcvrTempHighWarningNotification, wwpLeosPortXcvrLowRxPwAlarmThreshold=wwpLeosPortXcvrLowRxPwAlarmThreshold, wwpLeosPortXcvrXfpMax3p3vCurrent=wwpLeosPortXcvrXfpMax3p3vCurrent, wwpLeosPortXcvrTable=wwpLeosPortXcvrTable, wwpLeosPortXcvrXfpMaxCaseTemp=wwpLeosPortXcvrXfpMaxCaseTemp, wwpLeosPortXcvrSpeedInfoMissingNotification=wwpLeosPortXcvrSpeedInfoMissingNotification, wwpLeosPortXcvrHighTempAlarmThreshold=wwpLeosPortXcvrHighTempAlarmThreshold, wwpLeosPortXcvrHighTxDbmPwAlarmThreshold=wwpLeosPortXcvrHighTxDbmPwAlarmThreshold, wwpLeosPortXcvrOperState=wwpLeosPortXcvrOperState, wwpLeosPortXcvrXfpLaserLastWavelength=wwpLeosPortXcvrXfpLaserLastWavelength, wwpLeosPortXcvrRxPowerNormalNotification=wwpLeosPortXcvrRxPowerNormalNotification, wwpLeosPortXcvrTempLowNotification=wwpLeosPortXcvrTempLowNotification, wwpLeosPortXcvrBiasHighNotification=wwpLeosPortXcvrBiasHighNotification, wwpLeosPortXcvrTxPowerHighNotification=wwpLeosPortXcvrTxPowerHighNotification, wwpLeosPortXcvrLosState=wwpLeosPortXcvrLosState, wwpLeosPortXcvrXfpCdrSupport=wwpLeosPortXcvrXfpCdrSupport, wwpLeosPortXcvrBiasLowWarningNotification=wwpLeosPortXcvrBiasLowWarningNotification, wwpLeosPortXcvrMfgDate=wwpLeosPortXcvrMfgDate, wwpLeosPortXcvrEnhDiagSoftTxFaultSupported=wwpLeosPortXcvrEnhDiagSoftTxFaultSupported, wwpLeosPortXcvrErrorType=wwpLeosPortXcvrErrorType, wwpLeosPortXcvrRxPowerHighNotification=wwpLeosPortXcvrRxPowerHighNotification, wwpLeosPortXcvrAdminWavelength=wwpLeosPortXcvrAdminWavelength, wwpLeosPortXcvrVoltageNormalNotification=wwpLeosPortXcvrVoltageNormalNotification, wwpLeosPortXcvrHighVccAlarmThreshold=wwpLeosPortXcvrHighVccAlarmThreshold, wwpLeosPortXcvrRxRateStatus=wwpLeosPortXcvrRxRateStatus, wwpLeosPortXcvrXfpLaserLastFrquency=wwpLeosPortXcvrXfpLaserLastFrquency, wwpLeosPortXcvrVoltageHighNotification=wwpLeosPortXcvrVoltageHighNotification, wwpLeosPortXcvrEncodingType=wwpLeosPortXcvrEncodingType, wwpLeosPortXcvrVendorPN=wwpLeosPortXcvrVendorPN, PYSNMP_MODULE_ID=wwpLeosPortXcvrMIB, wwpLeosPortXcvrTemperature=wwpLeosPortXcvrTemperature, wwpLeosPortXcvrCu=wwpLeosPortXcvrCu, wwpLeosPortXcvrHighBiasAlarmThreshold=wwpLeosPortXcvrHighBiasAlarmThreshold, wwpLeosPortXcvrMIBConformance=wwpLeosPortXcvrMIBConformance, wwpLeosPortXcvrXfpMaxNeg5p2vCurrent=wwpLeosPortXcvrXfpMaxNeg5p2vCurrent, wwpLeosPortXcvrXfpAuxMonitoringInput2=wwpLeosPortXcvrXfpAuxMonitoringInput2, wwpLeosPortXcvrHighRxPwAlarmThreshold=wwpLeosPortXcvrHighRxPwAlarmThreshold, wwpLeosPortXcvrAdminChannel=wwpLeosPortXcvrAdminChannel, wwpLeosPortXcvrBiasNormalNotification=wwpLeosPortXcvrBiasNormalNotification, wwpLeosPortXcvr9by125um=wwpLeosPortXcvr9by125um, wwpLeosPortXcvrTempNormalNotification=wwpLeosPortXcvrTempNormalNotification, wwpLeosPortXcvrLowTempAlarmThreshold=wwpLeosPortXcvrLowTempAlarmThreshold, wwpLeosPortXcvrMIBObjects=wwpLeosPortXcvrMIBObjects, wwpLeosPortXcvrOperFrequency=wwpLeosPortXcvrOperFrequency, wwpLeosPortXcvrLinkStateChangeNotification=wwpLeosPortXcvrLinkStateChangeNotification, wwpLeosPortXcvrMIBCompliances=wwpLeosPortXcvrMIBCompliances, wwpLeosPortXcvrXfpMax1p8vCurrent=wwpLeosPortXcvrXfpMax1p8vCurrent, wwpLeosPortXcvrTxPowerHighWarningNotification=wwpLeosPortXcvrTxPowerHighWarningNotification, wwpLeosPortXcvrRxPowerLowNotification=wwpLeosPortXcvrRxPowerLowNotification, wwpLeosPortXcvr=wwpLeosPortXcvr, wwpLeosPortXcvrHighRxDbmPwAlarmThreshold=wwpLeosPortXcvrHighRxDbmPwAlarmThreshold, wwpLeosPortXcvrRevNum=wwpLeosPortXcvrRevNum, wwpLeosPortXcvrXfpMax5vCurrent=wwpLeosPortXcvrXfpMax5vCurrent, wwpLeosPortXcvrBiasHighWarningNotification=wwpLeosPortXcvrBiasHighWarningNotification, wwpLeosPortXcvrXfpLaserLastChannel=wwpLeosPortXcvrXfpLaserLastChannel, wwpLeosPortXcvrRxDbmPower=wwpLeosPortXcvrRxDbmPower, wwpLeosPortXcvrComplianceVer=wwpLeosPortXcvrComplianceVer, wwpLeosPortXcvrXfpChannelNum=wwpLeosPortXcvrXfpChannelNum, wwpLeosPortXcvrTxFaultStatus=wwpLeosPortXcvrTxFaultStatus, wwpLeosPortXcvrRxPowerLowWarningNotification=wwpLeosPortXcvrRxPowerLowWarningNotification, wwpLeosPortXcvrXfpEnhancedOptions=wwpLeosPortXcvrXfpEnhancedOptions, wwpLeosPortXcvrXfpLinkLen62dot5u1m=wwpLeosPortXcvrXfpLinkLen62dot5u1m, wwpLeosPortXcvrTempLowWarningNotification=wwpLeosPortXcvrTempLowWarningNotification, wwpLeosPortXcvrBiasLowNotification=wwpLeosPortXcvrBiasLowNotification, wwpLeosPortXcvrXfpLinkLen50u1m=wwpLeosPortXcvrXfpLinkLen50u1m, wwpLeosPortXcvrXfpLaserFirstChannel=wwpLeosPortXcvrXfpLaserFirstChannel)
