#
# PySNMP MIB module OMNI-gx2Em870-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OMNI-gx2Em870-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:24:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
gx2Em870, = mibBuilder.importSymbols("GX2HFC-MIB", "gx2Em870")
gi, motproxies = mibBuilder.importSymbols("NLS-BBNIDENT-MIB", "gi", "motproxies")
trapNetworkElemModelNumber, trapNetworkElemSerialNum, trapNetworkElemAvailStatus, trapNETrapLastTrapTimeStamp, trapChangedObjectId, trapNetworkElemAlarmStatus, trapChangedValueInteger, trapChangedValueDisplayString, trapNetworkElemOperState, trapNetworkElemAdminState, trapText, trapIdentifier, trapPerceivedSeverity = mibBuilder.importSymbols("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber", "trapNetworkElemSerialNum", "trapNetworkElemAvailStatus", "trapNETrapLastTrapTimeStamp", "trapChangedObjectId", "trapNetworkElemAlarmStatus", "trapChangedValueInteger", "trapChangedValueDisplayString", "trapNetworkElemOperState", "trapNetworkElemAdminState", "trapText", "trapIdentifier", "trapPerceivedSeverity")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
sysUpTime, = mibBuilder.importSymbols("SNMPv2-MIB", "sysUpTime")
IpAddress, iso, TimeTicks, Unsigned32, MibIdentifier, Gauge32, Counter64, Bits, ModuleIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter32, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "TimeTicks", "Unsigned32", "MibIdentifier", "Gauge32", "Counter64", "Bits", "ModuleIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter32", "NotificationType", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class Float(Counter32):
    pass

gx2Em870Descriptor = MibIdentifier((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 1))
gx2Em870AnalogTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2), )
if mibBuilder.loadTexts: gx2Em870AnalogTable.setStatus('mandatory')
gx2Em870AnalogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1), ).setIndexNames((0, "OMNI-gx2Em870-MIB", "gx2Em870AnalogTableIndex"))
if mibBuilder.loadTexts: gx2Em870AnalogEntry.setStatus('mandatory')
gx2Em870StatusTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4), )
if mibBuilder.loadTexts: gx2Em870StatusTable.setStatus('mandatory')
gx2Em870StatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4, 2), ).setIndexNames((0, "OMNI-gx2Em870-MIB", "gx2Em870StatusTableIndex"))
if mibBuilder.loadTexts: gx2Em870StatusEntry.setStatus('mandatory')
gx2Em870FactoryTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 5), )
if mibBuilder.loadTexts: gx2Em870FactoryTable.setStatus('mandatory')
gx2Em870FactoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 5, 3), ).setIndexNames((0, "OMNI-gx2Em870-MIB", "gx2Em870FactoryTableIndex"))
if mibBuilder.loadTexts: gx2Em870FactoryEntry.setStatus('mandatory')
gx2Em870DigitalTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 3), )
if mibBuilder.loadTexts: gx2Em870DigitalTable.setStatus('mandatory')
gx2Em870DigitalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 3, 4), ).setIndexNames((0, "OMNI-gx2Em870-MIB", "gx2Em870DigitalTableIndex"))
if mibBuilder.loadTexts: gx2Em870DigitalEntry.setStatus('mandatory')
gx2Em870HoldTimeTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 6), )
if mibBuilder.loadTexts: gx2Em870HoldTimeTable.setStatus('mandatory')
gx2Em870HoldTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 6, 5), ).setIndexNames((0, "OMNI-gx2Em870-MIB", "gx2Em870HoldTimeTableIndex"), (0, "OMNI-gx2Em870-MIB", "gx2Em870HoldTimeSpecIndex"))
if mibBuilder.loadTexts: gx2Em870HoldTimeEntry.setStatus('mandatory')
gx2Em870AnalogTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Em870AnalogTableIndex.setStatus('mandatory')
em870labelOpticalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870labelOpticalPower.setStatus('optional')
em870uomOpticalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870uomOpticalPower.setStatus('optional')
em870majorHighOpticalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 4), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorHighOpticalPower.setStatus('mandatory')
em870majorLowOpticalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 5), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorLowOpticalPower.setStatus('mandatory')
em870minorHighOpticalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 6), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorHighOpticalPower.setStatus('mandatory')
em870minorLowOpticalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 7), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorLowOpticalPower.setStatus('mandatory')
em870currentValueOpticalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 8), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870currentValueOpticalPower.setStatus('mandatory')
em870stateFlagOpticalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870stateFlagOpticalPower.setStatus('mandatory')
em870minValueOpticalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 10), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minValueOpticalPower.setStatus('mandatory')
em870maxValueOpticalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 11), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870maxValueOpticalPower.setStatus('mandatory')
em870alarmStateOpticalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870alarmStateOpticalPower.setStatus('mandatory')
em870labelOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870labelOmiOffset.setStatus('optional')
em870uomOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870uomOmiOffset.setStatus('optional')
em870majorHighOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 15), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorHighOmiOffset.setStatus('mandatory')
em870majorLowOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 16), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorLowOmiOffset.setStatus('mandatory')
em870minorHighOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 17), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorHighOmiOffset.setStatus('mandatory')
em870minorLowOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 18), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorLowOmiOffset.setStatus('mandatory')
em870currentValueOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 19), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870currentValueOmiOffset.setStatus('mandatory')
em870stateFlagOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870stateFlagOmiOffset.setStatus('mandatory')
em870minValueOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 21), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minValueOmiOffset.setStatus('mandatory')
em870maxValueOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 22), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870maxValueOmiOffset.setStatus('mandatory')
em870alarmStateOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870alarmStateOmiOffset.setStatus('mandatory')
em870labelDFBPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870labelDFBPower.setStatus('optional')
em870uomDFBPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870uomDFBPower.setStatus('optional')
em870majorHighDFBPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 26), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorHighDFBPower.setStatus('mandatory')
em870majorLowDFBPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 27), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorLowDFBPower.setStatus('mandatory')
em870minorHighDFBPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 28), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorHighDFBPower.setStatus('mandatory')
em870minorLowDFBPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 29), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorLowDFBPower.setStatus('mandatory')
em870currentValueDFBPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 30), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870currentValueDFBPower.setStatus('mandatory')
em870stateFlagDFBPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870stateFlagDFBPower.setStatus('mandatory')
em870minValueDFBPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 32), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minValueDFBPower.setStatus('mandatory')
em870maxValueDFBPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 33), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870maxValueDFBPower.setStatus('mandatory')
em870alarmStateDFBPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870alarmStateDFBPower.setStatus('mandatory')
em870labelLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870labelLaserBias.setStatus('optional')
em870uomLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870uomLaserBias.setStatus('optional')
em870majorHighLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 37), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorHighLaserBias.setStatus('mandatory')
em870majorLowLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 38), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorLowLaserBias.setStatus('mandatory')
em870minorHighLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 39), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorHighLaserBias.setStatus('mandatory')
em870minorLowLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 40), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorLowLaserBias.setStatus('mandatory')
em870currentValueLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 41), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870currentValueLaserBias.setStatus('mandatory')
em870stateFlagLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870stateFlagLaserBias.setStatus('mandatory')
em870minValueLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 43), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minValueLaserBias.setStatus('mandatory')
em870maxValueLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 44), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870maxValueLaserBias.setStatus('mandatory')
em870alarmStateLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870alarmStateLaserBias.setStatus('mandatory')
em870labelCoolerCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870labelCoolerCurrent.setStatus('optional')
em870uomCoolerCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 47), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870uomCoolerCurrent.setStatus('optional')
em870majorHighCoolerCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 48), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorHighCoolerCurrent.setStatus('mandatory')
em870majorLowCoolerCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 49), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorLowCoolerCurrent.setStatus('mandatory')
em870minorHighCoolerCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 50), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorHighCoolerCurrent.setStatus('mandatory')
em870minorLowCoolerCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 51), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorLowCoolerCurrent.setStatus('mandatory')
em870currentValueCoolerCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 52), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870currentValueCoolerCurrent.setStatus('mandatory')
em870stateFlagCoolerCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870stateFlagCoolerCurrent.setStatus('mandatory')
em870minValueCoolerCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 54), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minValueCoolerCurrent.setStatus('mandatory')
em870maxValueCoolerCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 55), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870maxValueCoolerCurrent.setStatus('mandatory')
em870alarmStateCoolerCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870alarmStateCoolerCurrent.setStatus('mandatory')
em870labelLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 57), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870labelLaserTemp.setStatus('optional')
em870uomLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 58), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870uomLaserTemp.setStatus('optional')
em870majorHighLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 59), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorHighLaserTemp.setStatus('mandatory')
em870majorLowLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 60), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorLowLaserTemp.setStatus('mandatory')
em870minorHighLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 61), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorHighLaserTemp.setStatus('mandatory')
em870minorLowLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 62), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorLowLaserTemp.setStatus('mandatory')
em870currentValueLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 63), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870currentValueLaserTemp.setStatus('mandatory')
em870stateFlagLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870stateFlagLaserTemp.setStatus('mandatory')
em870minValueLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 65), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minValueLaserTemp.setStatus('mandatory')
em870maxValueLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 66), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870maxValueLaserTemp.setStatus('mandatory')
em870alarmStateLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870alarmStateLaserTemp.setStatus('mandatory')
em870labelModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 68), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870labelModTemp.setStatus('optional')
em870uomModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 69), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870uomModTemp.setStatus('optional')
em870majorHighModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 70), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorHighModTemp.setStatus('mandatory')
em870majorLowModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 71), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorLowModTemp.setStatus('mandatory')
em870minorHighModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 72), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorHighModTemp.setStatus('mandatory')
em870minorLowModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 73), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorLowModTemp.setStatus('mandatory')
em870currentValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 74), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870currentValueModTemp.setStatus('mandatory')
em870stateFlagModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870stateFlagModTemp.setStatus('mandatory')
em870minValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 76), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minValueModTemp.setStatus('mandatory')
em870maxValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 77), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870maxValueModTemp.setStatus('mandatory')
em870alarmStateModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 78), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870alarmStateModTemp.setStatus('mandatory')
em870labelFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 79), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870labelFanCurrent.setStatus('optional')
em870uomFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 80), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870uomFanCurrent.setStatus('optional')
em870majorHighFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 81), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorHighFanCurrent.setStatus('mandatory')
em870majorLowFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 82), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorLowFanCurrent.setStatus('mandatory')
em870minorHighFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 83), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorHighFanCurrent.setStatus('mandatory')
em870minorLowFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 84), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorLowFanCurrent.setStatus('mandatory')
em870currentValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 85), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870currentValueFanCurrent.setStatus('mandatory')
em870stateFlagFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 86), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870stateFlagFanCurrent.setStatus('mandatory')
em870minValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 87), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minValueFanCurrent.setStatus('mandatory')
em870maxValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 88), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870maxValueFanCurrent.setStatus('mandatory')
em870alarmStateFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 89), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870alarmStateFanCurrent.setStatus('mandatory')
em870label12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 90), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870label12Volt.setStatus('optional')
em870uom12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 91), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870uom12Volt.setStatus('optional')
em870majorHigh12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 92), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorHigh12Volt.setStatus('mandatory')
em870majorLow12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 93), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870majorLow12Volt.setStatus('mandatory')
em870minorHigh12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 94), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorHigh12Volt.setStatus('mandatory')
em870minorLow12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 95), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minorLow12Volt.setStatus('mandatory')
em870currentValue12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 96), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870currentValue12Volt.setStatus('mandatory')
em870stateFlag12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 97), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870stateFlag12Volt.setStatus('mandatory')
em870minValue12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 98), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870minValue12Volt.setStatus('mandatory')
em870maxValue12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 99), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870maxValue12Volt.setStatus('mandatory')
em870alarmState12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 2, 1, 100), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870alarmState12Volt.setStatus('mandatory')
gx2Em870DigitalTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 3, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Em870DigitalTableIndex.setStatus('mandatory')
em870labelOpticalAlarmSetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 3, 4, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870labelOpticalAlarmSetpoint.setStatus('optional')
em870enumOpticalAlarmSetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 3, 4, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870enumOpticalAlarmSetpoint.setStatus('optional')
em870valueOpticalAlarmSetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 3, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: em870valueOpticalAlarmSetpoint.setStatus('mandatory')
em870stateFlagOpticalAlarmSetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 3, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870stateFlagOpticalAlarmSetpoint.setStatus('mandatory')
gx2Em870StatusTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Em870StatusTableIndex.setStatus('mandatory')
em870labelBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870labelBoot.setStatus('optional')
em870valueBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870valueBoot.setStatus('mandatory')
em870stateflagBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870stateflagBoot.setStatus('mandatory')
em870labelFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870labelFlash.setStatus('optional')
em870valueFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870valueFlash.setStatus('mandatory')
em870stateflagFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870stateflagFlash.setStatus('mandatory')
em870labelFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4, 2, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870labelFactoryDataCRC.setStatus('optional')
em870valueFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870valueFactoryDataCRC.setStatus('mandatory')
em870stateflagFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870stateflagFactoryDataCRC.setStatus('mandatory')
em870labelAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870labelAlarmDataCrc.setStatus('optional')
em870valueAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870valueAlarmDataCrc.setStatus('mandatory')
em870stateflagAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870stateflagAlarmDataCrc.setStatus('mandatory')
em870labelCsoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4, 2, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870labelCsoStatus.setStatus('optional')
em870valueCsoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4, 2, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870valueCsoStatus.setStatus('mandatory')
em870stateflagCsoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 4, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870stateflagCsoStatus.setStatus('mandatory')
gx2Em870FactoryTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 5, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Em870FactoryTableIndex.setStatus('mandatory')
em870bootControlByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 5, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870bootControlByte.setStatus('mandatory')
em870bootStatusByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 5, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870bootStatusByte.setStatus('mandatory')
em870bank1CRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 5, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870bank1CRC.setStatus('mandatory')
em870bank2CRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 5, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870bank2CRC.setStatus('mandatory')
em870prgEEPROMByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 5, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870prgEEPROMByte.setStatus('mandatory')
em870factoryCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 5, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870factoryCRC.setStatus('mandatory')
em870calculateCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 5, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("factory", 1), ("na", 2), ("alarm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870calculateCRC.setStatus('mandatory')
em870hourMeter = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 5, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870hourMeter.setStatus('mandatory')
em870flashPrgCntA = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 5, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870flashPrgCntA.setStatus('mandatory')
em870flashPrgCntB = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 5, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870flashPrgCntB.setStatus('mandatory')
em870flashBankARev = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 5, 3, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870flashBankARev.setStatus('mandatory')
em870flashBankBRev = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 5, 3, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: em870flashBankBRev.setStatus('mandatory')
gx2Em870HoldTimeTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 6, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Em870HoldTimeTableIndex.setStatus('mandatory')
gx2Em870HoldTimeSpecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 6, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Em870HoldTimeSpecIndex.setStatus('mandatory')
gx2Em870HoldTimeData = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12, 6, 5, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gx2Em870HoldTimeData.setStatus('mandatory')
trapEM870ConfigChangeInteger = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12) + (0,1)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapEM870ConfigChangeDisplayString = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12) + (0,2)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueDisplayString"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapEM870FanCurrentAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12) + (0,3)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapEM87012vAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12) + (0,4)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapEM870ModuleTempAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12) + (0,5)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapEM870OmiOffsetAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12) + (0,6)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapEM870OpticalOutputPowerAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12) + (0,7)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapEM870FlashAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12) + (0,8)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapEM870BankBootAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12) + (0,9)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapEM870AlarmDataCRCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12) + (0,10)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapEM870FactoryDataCRCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 12) + (0,11)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
mibBuilder.exportSymbols("OMNI-gx2Em870-MIB", em870majorLowLaserBias=em870majorLowLaserBias, trapEM870ConfigChangeDisplayString=trapEM870ConfigChangeDisplayString, em870maxValueCoolerCurrent=em870maxValueCoolerCurrent, em870alarmStateDFBPower=em870alarmStateDFBPower, trapEM870OmiOffsetAlarm=trapEM870OmiOffsetAlarm, em870maxValueFanCurrent=em870maxValueFanCurrent, em870alarmStateFanCurrent=em870alarmStateFanCurrent, em870alarmStateModTemp=em870alarmStateModTemp, em870minorLowLaserTemp=em870minorLowLaserTemp, em870minValueOpticalPower=em870minValueOpticalPower, em870uomDFBPower=em870uomDFBPower, em870maxValueDFBPower=em870maxValueDFBPower, trapEM870ConfigChangeInteger=trapEM870ConfigChangeInteger, gx2Em870AnalogTableIndex=gx2Em870AnalogTableIndex, em870minorLow12Volt=em870minorLow12Volt, em870enumOpticalAlarmSetpoint=em870enumOpticalAlarmSetpoint, em870majorLowDFBPower=em870majorLowDFBPower, em870labelDFBPower=em870labelDFBPower, gx2Em870DigitalEntry=gx2Em870DigitalEntry, em870currentValueDFBPower=em870currentValueDFBPower, em870stateflagAlarmDataCrc=em870stateflagAlarmDataCrc, em870stateflagCsoStatus=em870stateflagCsoStatus, em870majorLowOmiOffset=em870majorLowOmiOffset, trapEM870AlarmDataCRCAlarm=trapEM870AlarmDataCRCAlarm, em870minValueDFBPower=em870minValueDFBPower, em870labelOpticalAlarmSetpoint=em870labelOpticalAlarmSetpoint, Float=Float, em870alarmStateLaserTemp=em870alarmStateLaserTemp, em870stateFlagLaserTemp=em870stateFlagLaserTemp, em870majorHighFanCurrent=em870majorHighFanCurrent, em870minorLowModTemp=em870minorLowModTemp, em870labelLaserBias=em870labelLaserBias, em870majorLowFanCurrent=em870majorLowFanCurrent, em870stateFlagFanCurrent=em870stateFlagFanCurrent, em870flashPrgCntA=em870flashPrgCntA, em870minValue12Volt=em870minValue12Volt, gx2Em870DigitalTable=gx2Em870DigitalTable, em870labelCoolerCurrent=em870labelCoolerCurrent, em870valueCsoStatus=em870valueCsoStatus, em870minorHighLaserBias=em870minorHighLaserBias, trapEM870FactoryDataCRCAlarm=trapEM870FactoryDataCRCAlarm, em870bank2CRC=em870bank2CRC, em870labelCsoStatus=em870labelCsoStatus, em870stateFlagDFBPower=em870stateFlagDFBPower, em870maxValue12Volt=em870maxValue12Volt, em870minorHigh12Volt=em870minorHigh12Volt, em870majorHighOpticalPower=em870majorHighOpticalPower, em870alarmStateOmiOffset=em870alarmStateOmiOffset, em870labelFanCurrent=em870labelFanCurrent, gx2Em870HoldTimeTable=gx2Em870HoldTimeTable, em870minorLowDFBPower=em870minorLowDFBPower, em870minValueCoolerCurrent=em870minValueCoolerCurrent, em870flashBankARev=em870flashBankARev, gx2Em870Descriptor=gx2Em870Descriptor, em870valueBoot=em870valueBoot, em870uomModTemp=em870uomModTemp, em870labelAlarmDataCrc=em870labelAlarmDataCrc, em870uomOmiOffset=em870uomOmiOffset, em870calculateCRC=em870calculateCRC, em870alarmState12Volt=em870alarmState12Volt, em870valueOpticalAlarmSetpoint=em870valueOpticalAlarmSetpoint, em870valueFactoryDataCRC=em870valueFactoryDataCRC, em870minorHighCoolerCurrent=em870minorHighCoolerCurrent, trapEM870ModuleTempAlarm=trapEM870ModuleTempAlarm, em870flashPrgCntB=em870flashPrgCntB, gx2Em870StatusEntry=gx2Em870StatusEntry, em870stateFlagOmiOffset=em870stateFlagOmiOffset, em870bank1CRC=em870bank1CRC, trapEM87012vAlarm=trapEM87012vAlarm, em870flashBankBRev=em870flashBankBRev, em870minorHighOpticalPower=em870minorHighOpticalPower, em870minorLowFanCurrent=em870minorLowFanCurrent, em870minorHighOmiOffset=em870minorHighOmiOffset, em870uomFanCurrent=em870uomFanCurrent, em870currentValueCoolerCurrent=em870currentValueCoolerCurrent, em870majorHighLaserTemp=em870majorHighLaserTemp, em870minValueLaserBias=em870minValueLaserBias, em870currentValueLaserBias=em870currentValueLaserBias, em870currentValueFanCurrent=em870currentValueFanCurrent, gx2Em870AnalogEntry=gx2Em870AnalogEntry, em870stateFlagCoolerCurrent=em870stateFlagCoolerCurrent, em870uomCoolerCurrent=em870uomCoolerCurrent, em870maxValueOmiOffset=em870maxValueOmiOffset, em870alarmStateLaserBias=em870alarmStateLaserBias, gx2Em870HoldTimeSpecIndex=gx2Em870HoldTimeSpecIndex, em870majorHighDFBPower=em870majorHighDFBPower, em870stateFlagLaserBias=em870stateFlagLaserBias, em870minorLowOpticalPower=em870minorLowOpticalPower, em870stateFlagModTemp=em870stateFlagModTemp, em870factoryCRC=em870factoryCRC, em870minValueLaserTemp=em870minValueLaserTemp, gx2Em870HoldTimeEntry=gx2Em870HoldTimeEntry, em870maxValueLaserBias=em870maxValueLaserBias, em870majorHighModTemp=em870majorHighModTemp, em870majorHighLaserBias=em870majorHighLaserBias, em870labelFactoryDataCRC=em870labelFactoryDataCRC, gx2Em870StatusTableIndex=gx2Em870StatusTableIndex, em870maxValueOpticalPower=em870maxValueOpticalPower, em870minorLowCoolerCurrent=em870minorLowCoolerCurrent, em870labelBoot=em870labelBoot, em870minorHighModTemp=em870minorHighModTemp, em870labelOmiOffset=em870labelOmiOffset, em870uomLaserBias=em870uomLaserBias, em870label12Volt=em870label12Volt, em870uom12Volt=em870uom12Volt, em870bootControlByte=em870bootControlByte, em870maxValueLaserTemp=em870maxValueLaserTemp, em870prgEEPROMByte=em870prgEEPROMByte, em870stateFlagOpticalAlarmSetpoint=em870stateFlagOpticalAlarmSetpoint, em870minorHighDFBPower=em870minorHighDFBPower, em870labelLaserTemp=em870labelLaserTemp, em870currentValueModTemp=em870currentValueModTemp, em870majorHigh12Volt=em870majorHigh12Volt, em870minValueOmiOffset=em870minValueOmiOffset, em870currentValue12Volt=em870currentValue12Volt, em870stateflagFlash=em870stateflagFlash, em870labelFlash=em870labelFlash, trapEM870BankBootAlarm=trapEM870BankBootAlarm, gx2Em870StatusTable=gx2Em870StatusTable, gx2Em870DigitalTableIndex=gx2Em870DigitalTableIndex, em870minorLowOmiOffset=em870minorLowOmiOffset, em870hourMeter=em870hourMeter, em870majorLowCoolerCurrent=em870majorLowCoolerCurrent, em870majorHighOmiOffset=em870majorHighOmiOffset, em870minorLowLaserBias=em870minorLowLaserBias, trapEM870OpticalOutputPowerAlarm=trapEM870OpticalOutputPowerAlarm, em870majorHighCoolerCurrent=em870majorHighCoolerCurrent, em870stateFlag12Volt=em870stateFlag12Volt, em870minorHighLaserTemp=em870minorHighLaserTemp, em870uomLaserTemp=em870uomLaserTemp, em870valueFlash=em870valueFlash, em870alarmStateCoolerCurrent=em870alarmStateCoolerCurrent, em870labelOpticalPower=em870labelOpticalPower, trapEM870FanCurrentAlarm=trapEM870FanCurrentAlarm, em870currentValueOpticalPower=em870currentValueOpticalPower, em870majorLowOpticalPower=em870majorLowOpticalPower, em870stateflagFactoryDataCRC=em870stateflagFactoryDataCRC, trapEM870FlashAlarm=trapEM870FlashAlarm, em870alarmStateOpticalPower=em870alarmStateOpticalPower, em870stateflagBoot=em870stateflagBoot, em870majorLowLaserTemp=em870majorLowLaserTemp, em870minValueFanCurrent=em870minValueFanCurrent, gx2Em870FactoryTableIndex=gx2Em870FactoryTableIndex, em870minValueModTemp=em870minValueModTemp, em870valueAlarmDataCrc=em870valueAlarmDataCrc, em870labelModTemp=em870labelModTemp, gx2Em870FactoryTable=gx2Em870FactoryTable, em870stateFlagOpticalPower=em870stateFlagOpticalPower, em870maxValueModTemp=em870maxValueModTemp, gx2Em870AnalogTable=gx2Em870AnalogTable, em870currentValueOmiOffset=em870currentValueOmiOffset, em870minorHighFanCurrent=em870minorHighFanCurrent, em870bootStatusByte=em870bootStatusByte, gx2Em870HoldTimeData=gx2Em870HoldTimeData, em870majorLowModTemp=em870majorLowModTemp, em870currentValueLaserTemp=em870currentValueLaserTemp, gx2Em870HoldTimeTableIndex=gx2Em870HoldTimeTableIndex, em870uomOpticalPower=em870uomOpticalPower, em870majorLow12Volt=em870majorLow12Volt, gx2Em870FactoryEntry=gx2Em870FactoryEntry)
