#
# PySNMP MIB module HPN-ICF-AFC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-AFC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:25:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Counter64, ModuleIdentity, IpAddress, MibIdentifier, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, NotificationType, Counter32, Integer32, Bits, TimeTicks, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "ModuleIdentity", "IpAddress", "MibIdentifier", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "NotificationType", "Counter32", "Integer32", "Bits", "TimeTicks", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hpnicfAFC = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 85))
hpnicfAFC.setRevisions(('2008-07-23 00:00',))
if mibBuilder.loadTexts: hpnicfAFC.setLastUpdated('200807230000Z')
if mibBuilder.loadTexts: hpnicfAFC.setOrganization('')
hpnicfAFCLeaf = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 85, 1))
hpnicfDDosAttackTargetIP = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 85, 1, 1), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDDosAttackTargetIP.setStatus('current')
hpnicfDDosAttackType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 85, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 24, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 1024))).clone(namedValues=NamedValues(("land", 1), ("smurf", 2), ("fraggle", 3), ("winnuke", 4), ("synflood", 5), ("icmpflood", 6), ("udpflood", 7), ("icmpredirect", 8), ("icmpunreachable", 9), ("tracert", 11), ("tcpflag", 12), ("pingofdeath", 13), ("teardrop", 14), ("ipfragment", 15), ("largeicmp", 18), ("sourceroute", 19), ("routerecord", 20), ("fragflood", 24), ("scan", 27), ("appstreamalarm", 29), ("sessionstreamalarm", 30), ("tcpabnormal", 32), ("ipfragabnormal", 33), ("tftpabnormal", 34), ("dnsabnormal", 35), ("httpabnormal", 36), ("telnetabnormal", 37), ("ftpabnormal", 38), ("smtpabnormal", 39), ("pop3abnormal", 40), ("snmpabnormal", 41), ("ackabnormal", 42), ("cc", 43), ("otherabnormal", 1024)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDDosAttackType.setStatus('current')
hpnicfDDosAttackPolicy = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 85, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDDosAttackPolicy.setStatus('current')
hpnicfDDosAttackThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 85, 1, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDDosAttackThreshold.setStatus('current')
hpnicfDDosAttackSpeed = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 85, 1, 5), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDDosAttackSpeed.setStatus('current')
hpnicfAFCNotify = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 85, 2))
hpnicfAFCNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 85, 2, 0))
hpnicfDDosAttackStart = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 85, 2, 0, 1)).setObjects(("HPN-ICF-AFC-MIB", "hpnicfDDosAttackTargetIP"), ("HPN-ICF-AFC-MIB", "hpnicfDDosAttackType"), ("HPN-ICF-AFC-MIB", "hpnicfDDosAttackPolicy"), ("HPN-ICF-AFC-MIB", "hpnicfDDosAttackThreshold"), ("HPN-ICF-AFC-MIB", "hpnicfDDosAttackSpeed"))
if mibBuilder.loadTexts: hpnicfDDosAttackStart.setStatus('current')
hpnicfDDosAttackEnd = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 85, 2, 0, 2)).setObjects(("HPN-ICF-AFC-MIB", "hpnicfDDosAttackTargetIP"))
if mibBuilder.loadTexts: hpnicfDDosAttackEnd.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-AFC-MIB", hpnicfAFCNotify=hpnicfAFCNotify, hpnicfDDosAttackEnd=hpnicfDDosAttackEnd, PYSNMP_MODULE_ID=hpnicfAFC, hpnicfDDosAttackType=hpnicfDDosAttackType, hpnicfDDosAttackPolicy=hpnicfDDosAttackPolicy, hpnicfDDosAttackThreshold=hpnicfDDosAttackThreshold, hpnicfDDosAttackSpeed=hpnicfDDosAttackSpeed, hpnicfDDosAttackTargetIP=hpnicfDDosAttackTargetIP, hpnicfAFCLeaf=hpnicfAFCLeaf, hpnicfDDosAttackStart=hpnicfDDosAttackStart, hpnicfAFC=hpnicfAFC, hpnicfAFCNotifyPrefix=hpnicfAFCNotifyPrefix)
