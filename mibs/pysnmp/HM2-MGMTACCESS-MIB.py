#
# PySNMP MIB module HM2-MGMTACCESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HM2-MGMTACCESS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:18:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
HmLargeDisplayString, HmEnabledStatus, hm2ConfigurationMibs = mibBuilder.importSymbols("HM2-TC-MIB", "HmLargeDisplayString", "HmEnabledStatus", "hm2ConfigurationMibs")
InetPortNumber, InetAddressType, InetAddressPrefixLength, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddressType", "InetAddressPrefixLength", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, MibIdentifier, Counter64, iso, TimeTicks, Integer32, Counter32, ObjectIdentity, NotificationType, Unsigned32, IpAddress, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "MibIdentifier", "Counter64", "iso", "TimeTicks", "Integer32", "Counter32", "ObjectIdentity", "NotificationType", "Unsigned32", "IpAddress", "Bits")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
hm2MgmtAccessMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 248, 11, 25))
hm2MgmtAccessMib.setRevisions(('2011-03-16 00:00',))
if mibBuilder.loadTexts: hm2MgmtAccessMib.setLastUpdated('201103160000Z')
if mibBuilder.loadTexts: hm2MgmtAccessMib.setOrganization('Hirschmann Automation and Control GmbH')
class Hm2RestartAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("other", 1), ("restart", 2))

class Hm2TlsVersions(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("tlsv1-0", 0), ("tlsv1-1", 1), ("tlsv1-2", 2))

class Hm2TlsCipherSuites(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("tls-rsa-with-rc4-128-sha", 0), ("tls-rsa-with-aes-128-cbc-sha", 1), ("tls-dhe-rsa-with-aes-128-cbc-sha", 2), ("tls-dhe-rsa-with-aes-256-cbc-sha", 3), ("tls-ecdhe-rsa-with-aes-128-cbc-sha", 4), ("tls-ecdhe-rsa-with-aes-256-cbc-sha", 5), ("tls-ecdhe-rsa-with-aes-128-gcm-sha256", 6), ("tls-ecdhe-rsa-with-aes-256-gcm-sha384", 7))

hm2MgmtAccessMibNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 25, 0))
hm2MgmtAccessMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 25, 1))
hm2MgmtAccessMibSNMPExtensionGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 25, 3))
hm2MgmtAccessSnmpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 1))
hm2MgmtAccessWebGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2))
hm2MgmtAccessTelnetGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 3))
hm2MgmtAccessSshGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4))
hm2MgmtAccessPreLoginBannerGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 5))
hm2MgmtAccessCliGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 6))
hm2RestrictedMgmtAccessGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7))
hm2SnmpV1AdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 1, 1), HmEnabledStatus().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2SnmpV1AdminStatus.setStatus('current')
hm2SnmpV2AdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 1, 2), HmEnabledStatus().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2SnmpV2AdminStatus.setStatus('current')
hm2SnmpV3AdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 1, 3), HmEnabledStatus().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2SnmpV3AdminStatus.setStatus('current')
hm2SnmpPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 1, 4), InetPortNumber().clone(161)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2SnmpPortNumber.setStatus('current')
hm2SnmpOver802AdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 1, 5), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2SnmpOver802AdminStatus.setStatus('current')
hm2SnmpTrapServiceAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 1, 6), HmEnabledStatus().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2SnmpTrapServiceAdminStatus.setStatus('current')
hm2WebHttpAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 1), HmEnabledStatus().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2WebHttpAdminStatus.setStatus('current')
hm2WebHttpsAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 2), HmEnabledStatus().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2WebHttpsAdminStatus.setStatus('current')
hm2WebHttpPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 3), InetPortNumber().clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2WebHttpPortNumber.setStatus('current')
hm2WebHttpsPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 4), InetPortNumber().clone(443)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2WebHttpsPortNumber.setStatus('current')
hm2WebHttpsCertPresent = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pem", 1), ("none", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2WebHttpsCertPresent.setStatus('current')
hm2WebHttpsCertControl = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noop", 1), ("generate", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2WebHttpsCertControl.setStatus('current')
hm2WebHttpsCertOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("generate", 1), ("delete", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2WebHttpsCertOperStatus.setStatus('current')
hm2WebIntfTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 160)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2WebIntfTimeOut.setStatus('current')
hm2WebTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 9), HmEnabledStatus().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2WebTrapEnable.setStatus('current')
hm2WebLastLogoutUserName = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2WebLastLogoutUserName.setStatus('current')
hm2WebLastLoginUserName = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2WebLastLoginUserName.setStatus('current')
hm2WebLastLoginInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 12), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2WebLastLoginInetAddressType.setStatus('current')
hm2WebLastLoginInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 13), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2WebLastLoginInetAddress.setStatus('current')
hm2WebHttpsCertFingerPrintType = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sha1", 1), ("sha256", 2))).clone('sha256')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2WebHttpsCertFingerPrintType.setStatus('current')
hm2WebHttpsCertFingerPrint = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2WebHttpsCertFingerPrint.setStatus('current')
hm2WebHttpsServerRestart = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 16), Hm2RestartAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2WebHttpsServerRestart.setStatus('current')
hm2WebHttpsServerTlsVersions = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 17), Hm2TlsVersions().clone(namedValues=NamedValues(("tlsv1-0", 0), ("tlsv1-2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2WebHttpsServerTlsVersions.setStatus('current')
hm2WebHttpsServerTlsCipherSuites = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 2, 18), Hm2TlsCipherSuites().clone(namedValues=NamedValues(("tls-rsa-with-rc4-128-sha", 0), ("tls-dhe-rsa-with-aes-128-cbc-sha", 2), ("tls-ecdhe-rsa-with-aes-128-cbc-sha", 4), ("tls-ecdhe-rsa-with-aes-128-gcm-sha256", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2WebHttpsServerTlsCipherSuites.setStatus('current')
hm2TelnetServerAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 3, 1), HmEnabledStatus().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2TelnetServerAdminStatus.setStatus('current')
hm2TelnetServerPort = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 3, 2), InetPortNumber().clone(23)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2TelnetServerPort.setStatus('current')
hm2TelnetServerSessionsCount = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2TelnetServerSessionsCount.setStatus('current')
hm2TelnetServerMaxSessions = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2TelnetServerMaxSessions.setStatus('current')
hm2TelnetServerSessionsTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 160)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2TelnetServerSessionsTimeOut.setStatus('current')
hm2TelnetTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 3, 6), HmEnabledStatus().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2TelnetTrapEnable.setStatus('current')
hm2TelnetLastLogoutUserName = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 3, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2TelnetLastLogoutUserName.setStatus('current')
hm2TelnetLastLoginUserName = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 3, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2TelnetLastLoginUserName.setStatus('current')
hm2TelnetLastLoginInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 3, 9), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2TelnetLastLoginInetAddressType.setStatus('current')
hm2TelnetLastLoginInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 3, 10), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2TelnetLastLoginInetAddress.setStatus('current')
hm2SshAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 1), HmEnabledStatus().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2SshAdminStatus.setStatus('current')
hm2SshProtocolLevel = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("ssh20", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2SshProtocolLevel.setStatus('current')
hm2SshPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 3), InetPortNumber().clone(22)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2SshPortNumber.setStatus('current')
hm2SshSessionsCount = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2SshSessionsCount.setStatus('current')
hm2SshMaxSessionsCount = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2SshMaxSessionsCount.setStatus('current')
hm2SshSessionTimeout = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 160)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2SshSessionTimeout.setStatus('current')
hm2SshKeysPresent = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dsa", 1), ("rsa", 2), ("both", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2SshKeysPresent.setStatus('current')
hm2SshKeyOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dsa", 1), ("rsa", 2), ("both", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2SshKeyOperStatus.setStatus('current')
hm2SshRSAKeyControl = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noop", 1), ("generate", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2SshRSAKeyControl.setStatus('current')
hm2SshDSAKeyControl = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noop", 1), ("generate", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2SshDSAKeyControl.setStatus('current')
hm2SshFingerPrintDSA = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2SshFingerPrintDSA.setStatus('current')
hm2SshFingerPrintRSA = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2SshFingerPrintRSA.setStatus('current')
hm2SshTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 13), HmEnabledStatus().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2SshTrapEnable.setStatus('current')
hm2SshLastLogoutUserName = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2SshLastLogoutUserName.setStatus('current')
hm2SshLastLoginUserName = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2SshLastLoginUserName.setStatus('current')
hm2SshLastLoginInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 16), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2SshLastLoginInetAddressType.setStatus('current')
hm2SshLastLoginInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 17), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2SshLastLoginInetAddress.setStatus('current')
hm2SshOutboundSessionsCount = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2SshOutboundSessionsCount.setStatus('current')
hm2SshOutboundMaxSessionsCount = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2SshOutboundMaxSessionsCount.setStatus('current')
hm2SshOutboundSessionTimeout = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 4, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 160)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2SshOutboundSessionTimeout.setStatus('current')
hm2PreLoginBannerAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 5, 1), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2PreLoginBannerAdminStatus.setStatus('current')
hm2PreLoginBannerText = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 5, 2), HmLargeDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2PreLoginBannerText.setStatus('current')
hm2CliLoginPrompt = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 6, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2CliLoginPrompt.setStatus('current')
hm2CliLoginTimeoutSerial = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 160)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2CliLoginTimeoutSerial.setStatus('current')
hm2CliLoginBannerAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 6, 10), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2CliLoginBannerAdminStatus.setStatus('current')
hm2CliLoginBannerText = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 6, 11), HmLargeDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2CliLoginBannerText.setStatus('current')
hm2ConsoleTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 6, 12), HmEnabledStatus().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2ConsoleTrapEnable.setStatus('current')
hm2ConsoleLastLogoutUserName = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 6, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2ConsoleLastLogoutUserName.setStatus('current')
hm2ConsoleLastLoginUserName = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 6, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2ConsoleLastLoginUserName.setStatus('current')
hm2ConsoleServiceShellAdminState = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 6, 15), HmEnabledStatus().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2ConsoleServiceShellAdminState.setStatus('current')
hm2RmaTable = MibTable((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7, 1), )
if mibBuilder.loadTexts: hm2RmaTable.setStatus('current')
hm2RmaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7, 1, 1), ).setIndexNames((0, "HM2-MGMTACCESS-MIB", "hm2RmaIndex"))
if mibBuilder.loadTexts: hm2RmaEntry.setStatus('current')
hm2RmaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2RmaIndex.setStatus('current')
hm2RmaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2RmaRowStatus.setStatus('current')
hm2RmaIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7, 1, 1, 3), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2RmaIpAddrType.setStatus('current')
hm2RmaIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7, 1, 1, 4), InetAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2RmaIpAddr.setStatus('current')
hm2RmaPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7, 1, 1, 5), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2RmaPrefixLength.setStatus('current')
hm2RmaSrvHttp = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7, 1, 1, 6), HmEnabledStatus().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2RmaSrvHttp.setStatus('current')
hm2RmaSrvHttps = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7, 1, 1, 7), HmEnabledStatus().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2RmaSrvHttps.setStatus('current')
hm2RmaSrvSnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7, 1, 1, 8), HmEnabledStatus().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2RmaSrvSnmp.setStatus('current')
hm2RmaSrvTelnet = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7, 1, 1, 9), HmEnabledStatus().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2RmaSrvTelnet.setStatus('current')
hm2RmaSrvSsh = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7, 1, 1, 10), HmEnabledStatus().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2RmaSrvSsh.setStatus('current')
hm2RmaSrvIEC61850 = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7, 1, 1, 11), HmEnabledStatus().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2RmaSrvIEC61850.setStatus('current')
hm2RmaSrvModbusTcp = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7, 1, 1, 12), HmEnabledStatus().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2RmaSrvModbusTcp.setStatus('current')
hm2RmaSrvEthernetIP = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7, 1, 1, 13), HmEnabledStatus().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2RmaSrvEthernetIP.setStatus('current')
hm2RmaSrvProfinetIO = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7, 1, 1, 14), HmEnabledStatus().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2RmaSrvProfinetIO.setStatus('current')
hm2RmaOperation = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 25, 1, 7, 2), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2RmaOperation.setStatus('current')
hm2WebLoginSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 248, 11, 25, 0, 1)).setObjects(("HM2-MGMTACCESS-MIB", "hm2WebLastLoginUserName"), ("HM2-MGMTACCESS-MIB", "hm2WebLastLoginInetAddressType"), ("HM2-MGMTACCESS-MIB", "hm2WebLastLoginInetAddress"))
if mibBuilder.loadTexts: hm2WebLoginSuccessTrap.setStatus('current')
hm2WebLoginFailedTrap = NotificationType((1, 3, 6, 1, 4, 1, 248, 11, 25, 0, 2)).setObjects(("HM2-MGMTACCESS-MIB", "hm2WebLastLoginUserName"), ("HM2-MGMTACCESS-MIB", "hm2WebLastLoginInetAddressType"), ("HM2-MGMTACCESS-MIB", "hm2WebLastLoginInetAddress"))
if mibBuilder.loadTexts: hm2WebLoginFailedTrap.setStatus('current')
hm2WebLogoutTrap = NotificationType((1, 3, 6, 1, 4, 1, 248, 11, 25, 0, 3)).setObjects(("HM2-MGMTACCESS-MIB", "hm2WebLastLogoutUserName"))
if mibBuilder.loadTexts: hm2WebLogoutTrap.setStatus('current')
hm2TelnetLoginSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 248, 11, 25, 0, 4)).setObjects(("HM2-MGMTACCESS-MIB", "hm2TelnetLastLoginUserName"), ("HM2-MGMTACCESS-MIB", "hm2TelnetLastLoginInetAddressType"), ("HM2-MGMTACCESS-MIB", "hm2TelnetLastLoginInetAddress"))
if mibBuilder.loadTexts: hm2TelnetLoginSuccessTrap.setStatus('current')
hm2TelnetLoginFailedTrap = NotificationType((1, 3, 6, 1, 4, 1, 248, 11, 25, 0, 5)).setObjects(("HM2-MGMTACCESS-MIB", "hm2TelnetLastLoginUserName"), ("HM2-MGMTACCESS-MIB", "hm2TelnetLastLoginInetAddressType"), ("HM2-MGMTACCESS-MIB", "hm2TelnetLastLoginInetAddress"))
if mibBuilder.loadTexts: hm2TelnetLoginFailedTrap.setStatus('current')
hm2TelnetLogoutTrap = NotificationType((1, 3, 6, 1, 4, 1, 248, 11, 25, 0, 6)).setObjects(("HM2-MGMTACCESS-MIB", "hm2TelnetLastLogoutUserName"))
if mibBuilder.loadTexts: hm2TelnetLogoutTrap.setStatus('current')
hm2SshLoginSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 248, 11, 25, 0, 7)).setObjects(("HM2-MGMTACCESS-MIB", "hm2SshLastLoginUserName"), ("HM2-MGMTACCESS-MIB", "hm2SshLastLoginInetAddressType"), ("HM2-MGMTACCESS-MIB", "hm2SshLastLoginInetAddress"))
if mibBuilder.loadTexts: hm2SshLoginSuccessTrap.setStatus('current')
hm2SshLoginFailedTrap = NotificationType((1, 3, 6, 1, 4, 1, 248, 11, 25, 0, 8)).setObjects(("HM2-MGMTACCESS-MIB", "hm2SshLastLoginUserName"), ("HM2-MGMTACCESS-MIB", "hm2SshLastLoginInetAddressType"), ("HM2-MGMTACCESS-MIB", "hm2SshLastLoginInetAddress"))
if mibBuilder.loadTexts: hm2SshLoginFailedTrap.setStatus('current')
hm2SshLogoutTrap = NotificationType((1, 3, 6, 1, 4, 1, 248, 11, 25, 0, 9)).setObjects(("HM2-MGMTACCESS-MIB", "hm2SshLastLogoutUserName"))
if mibBuilder.loadTexts: hm2SshLogoutTrap.setStatus('current')
hm2ConsoleLoginSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 248, 11, 25, 0, 10)).setObjects(("HM2-MGMTACCESS-MIB", "hm2ConsoleLastLoginUserName"))
if mibBuilder.loadTexts: hm2ConsoleLoginSuccessTrap.setStatus('current')
hm2ConsoleLoginFailedTrap = NotificationType((1, 3, 6, 1, 4, 1, 248, 11, 25, 0, 11)).setObjects(("HM2-MGMTACCESS-MIB", "hm2ConsoleLastLoginUserName"))
if mibBuilder.loadTexts: hm2ConsoleLoginFailedTrap.setStatus('current')
hm2ConsoleLogoutTrap = NotificationType((1, 3, 6, 1, 4, 1, 248, 11, 25, 0, 12)).setObjects(("HM2-MGMTACCESS-MIB", "hm2ConsoleLastLogoutUserName"))
if mibBuilder.loadTexts: hm2ConsoleLogoutTrap.setStatus('current')
hm2MgmtAccessSnmpSESGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 25, 3, 1))
hm2MgmtAccessWebSESGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 25, 3, 2))
hm2MgmtAccessTelnetSESGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 25, 3, 3))
hm2MgmtAccessSshSESGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 25, 3, 4))
hm2MgmtAccessPreLoginBannerSESGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 25, 3, 5))
hm2MgmtAccessCliSESGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 25, 3, 6))
hm2RestrictedMgmtAccessSESGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 25, 3, 7))
hm2MgmtAccessWebSESCertGenInProgress = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 11, 25, 3, 2, 1))
if mibBuilder.loadTexts: hm2MgmtAccessWebSESCertGenInProgress.setStatus('current')
hm2MgmtAccessWebSESCertNotPresent = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 11, 25, 3, 2, 2))
if mibBuilder.loadTexts: hm2MgmtAccessWebSESCertNotPresent.setStatus('current')
hm2MgmtAccessSshSESServerEnabled = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 11, 25, 3, 4, 1))
if mibBuilder.loadTexts: hm2MgmtAccessSshSESServerEnabled.setStatus('current')
hm2MgmtAccessSshSESKeyGenInProgress = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 11, 25, 3, 4, 2))
if mibBuilder.loadTexts: hm2MgmtAccessSshSESKeyGenInProgress.setStatus('current')
hm2MgmtAccessSshSESKeyNotAvailable = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 11, 25, 3, 4, 3))
if mibBuilder.loadTexts: hm2MgmtAccessSshSESKeyNotAvailable.setStatus('current')
mibBuilder.exportSymbols("HM2-MGMTACCESS-MIB", hm2SshLastLoginUserName=hm2SshLastLoginUserName, hm2SshSessionTimeout=hm2SshSessionTimeout, hm2RmaPrefixLength=hm2RmaPrefixLength, Hm2TlsVersions=Hm2TlsVersions, hm2WebHttpsCertControl=hm2WebHttpsCertControl, hm2TelnetLastLoginUserName=hm2TelnetLastLoginUserName, hm2MgmtAccessWebSESCertGenInProgress=hm2MgmtAccessWebSESCertGenInProgress, hm2PreLoginBannerAdminStatus=hm2PreLoginBannerAdminStatus, hm2WebHttpsCertFingerPrint=hm2WebHttpsCertFingerPrint, hm2SnmpV2AdminStatus=hm2SnmpV2AdminStatus, hm2SshDSAKeyControl=hm2SshDSAKeyControl, hm2RmaSrvEthernetIP=hm2RmaSrvEthernetIP, hm2RmaIndex=hm2RmaIndex, hm2CliLoginTimeoutSerial=hm2CliLoginTimeoutSerial, hm2TelnetServerMaxSessions=hm2TelnetServerMaxSessions, hm2WebLoginFailedTrap=hm2WebLoginFailedTrap, hm2TelnetLogoutTrap=hm2TelnetLogoutTrap, hm2SshPortNumber=hm2SshPortNumber, hm2SshMaxSessionsCount=hm2SshMaxSessionsCount, hm2RmaSrvIEC61850=hm2RmaSrvIEC61850, hm2TelnetLoginFailedTrap=hm2TelnetLoginFailedTrap, hm2SshLogoutTrap=hm2SshLogoutTrap, Hm2RestartAction=Hm2RestartAction, hm2RmaOperation=hm2RmaOperation, hm2MgmtAccessPreLoginBannerSESGroup=hm2MgmtAccessPreLoginBannerSESGroup, hm2RmaSrvModbusTcp=hm2RmaSrvModbusTcp, hm2SnmpOver802AdminStatus=hm2SnmpOver802AdminStatus, hm2RmaSrvTelnet=hm2RmaSrvTelnet, hm2SshProtocolLevel=hm2SshProtocolLevel, hm2CliLoginBannerText=hm2CliLoginBannerText, hm2TelnetServerSessionsCount=hm2TelnetServerSessionsCount, hm2TelnetLastLoginInetAddress=hm2TelnetLastLoginInetAddress, hm2ConsoleLoginFailedTrap=hm2ConsoleLoginFailedTrap, hm2WebHttpsServerTlsCipherSuites=hm2WebHttpsServerTlsCipherSuites, hm2TelnetTrapEnable=hm2TelnetTrapEnable, hm2WebHttpAdminStatus=hm2WebHttpAdminStatus, hm2MgmtAccessMibNotifications=hm2MgmtAccessMibNotifications, hm2MgmtAccessCliSESGroup=hm2MgmtAccessCliSESGroup, hm2ConsoleLogoutTrap=hm2ConsoleLogoutTrap, hm2MgmtAccessMib=hm2MgmtAccessMib, hm2SshLastLoginInetAddress=hm2SshLastLoginInetAddress, hm2SshOutboundSessionsCount=hm2SshOutboundSessionsCount, hm2RmaTable=hm2RmaTable, hm2RmaIpAddrType=hm2RmaIpAddrType, hm2WebHttpsServerRestart=hm2WebHttpsServerRestart, hm2WebLastLoginInetAddressType=hm2WebLastLoginInetAddressType, hm2TelnetServerPort=hm2TelnetServerPort, hm2SshLastLoginInetAddressType=hm2SshLastLoginInetAddressType, hm2CliLoginBannerAdminStatus=hm2CliLoginBannerAdminStatus, hm2ConsoleTrapEnable=hm2ConsoleTrapEnable, hm2MgmtAccessMibObjects=hm2MgmtAccessMibObjects, hm2WebHttpsCertFingerPrintType=hm2WebHttpsCertFingerPrintType, hm2WebHttpsPortNumber=hm2WebHttpsPortNumber, PYSNMP_MODULE_ID=hm2MgmtAccessMib, hm2SshFingerPrintDSA=hm2SshFingerPrintDSA, hm2RmaSrvHttps=hm2RmaSrvHttps, hm2WebIntfTimeOut=hm2WebIntfTimeOut, hm2WebHttpsServerTlsVersions=hm2WebHttpsServerTlsVersions, hm2MgmtAccessSshSESKeyNotAvailable=hm2MgmtAccessSshSESKeyNotAvailable, hm2RestrictedMgmtAccessGroup=hm2RestrictedMgmtAccessGroup, hm2MgmtAccessSshGroup=hm2MgmtAccessSshGroup, hm2SshAdminStatus=hm2SshAdminStatus, hm2SshLoginFailedTrap=hm2SshLoginFailedTrap, hm2ConsoleLastLoginUserName=hm2ConsoleLastLoginUserName, hm2MgmtAccessWebGroup=hm2MgmtAccessWebGroup, hm2SshTrapEnable=hm2SshTrapEnable, hm2MgmtAccessPreLoginBannerGroup=hm2MgmtAccessPreLoginBannerGroup, hm2TelnetLastLoginInetAddressType=hm2TelnetLastLoginInetAddressType, hm2RmaSrvHttp=hm2RmaSrvHttp, hm2RmaSrvSnmp=hm2RmaSrvSnmp, hm2MgmtAccessWebSESCertNotPresent=hm2MgmtAccessWebSESCertNotPresent, hm2SshLastLogoutUserName=hm2SshLastLogoutUserName, hm2SshOutboundMaxSessionsCount=hm2SshOutboundMaxSessionsCount, hm2WebHttpsAdminStatus=hm2WebHttpsAdminStatus, Hm2TlsCipherSuites=Hm2TlsCipherSuites, hm2SshOutboundSessionTimeout=hm2SshOutboundSessionTimeout, hm2SnmpV1AdminStatus=hm2SnmpV1AdminStatus, hm2RestrictedMgmtAccessSESGroup=hm2RestrictedMgmtAccessSESGroup, hm2SnmpV3AdminStatus=hm2SnmpV3AdminStatus, hm2RmaSrvSsh=hm2RmaSrvSsh, hm2WebHttpsCertOperStatus=hm2WebHttpsCertOperStatus, hm2ConsoleLoginSuccessTrap=hm2ConsoleLoginSuccessTrap, hm2RmaRowStatus=hm2RmaRowStatus, hm2MgmtAccessCliGroup=hm2MgmtAccessCliGroup, hm2WebLoginSuccessTrap=hm2WebLoginSuccessTrap, hm2ConsoleServiceShellAdminState=hm2ConsoleServiceShellAdminState, hm2PreLoginBannerText=hm2PreLoginBannerText, hm2TelnetLastLogoutUserName=hm2TelnetLastLogoutUserName, hm2SshLoginSuccessTrap=hm2SshLoginSuccessTrap, hm2WebLastLoginInetAddress=hm2WebLastLoginInetAddress, hm2SshRSAKeyControl=hm2SshRSAKeyControl, hm2CliLoginPrompt=hm2CliLoginPrompt, hm2WebLogoutTrap=hm2WebLogoutTrap, hm2MgmtAccessMibSNMPExtensionGroup=hm2MgmtAccessMibSNMPExtensionGroup, hm2TelnetLoginSuccessTrap=hm2TelnetLoginSuccessTrap, hm2WebHttpsCertPresent=hm2WebHttpsCertPresent, hm2MgmtAccessWebSESGroup=hm2MgmtAccessWebSESGroup, hm2MgmtAccessSnmpGroup=hm2MgmtAccessSnmpGroup, hm2MgmtAccessTelnetGroup=hm2MgmtAccessTelnetGroup, hm2SnmpTrapServiceAdminStatus=hm2SnmpTrapServiceAdminStatus, hm2RmaSrvProfinetIO=hm2RmaSrvProfinetIO, hm2RmaEntry=hm2RmaEntry, hm2ConsoleLastLogoutUserName=hm2ConsoleLastLogoutUserName, hm2WebLastLogoutUserName=hm2WebLastLogoutUserName, hm2MgmtAccessSshSESServerEnabled=hm2MgmtAccessSshSESServerEnabled, hm2MgmtAccessSshSESKeyGenInProgress=hm2MgmtAccessSshSESKeyGenInProgress, hm2MgmtAccessSshSESGroup=hm2MgmtAccessSshSESGroup, hm2SshKeysPresent=hm2SshKeysPresent, hm2TelnetServerSessionsTimeOut=hm2TelnetServerSessionsTimeOut, hm2WebHttpPortNumber=hm2WebHttpPortNumber, hm2RmaIpAddr=hm2RmaIpAddr, hm2MgmtAccessSnmpSESGroup=hm2MgmtAccessSnmpSESGroup, hm2MgmtAccessTelnetSESGroup=hm2MgmtAccessTelnetSESGroup, hm2WebTrapEnable=hm2WebTrapEnable, hm2WebLastLoginUserName=hm2WebLastLoginUserName, hm2TelnetServerAdminStatus=hm2TelnetServerAdminStatus, hm2SshKeyOperStatus=hm2SshKeyOperStatus, hm2SshSessionsCount=hm2SshSessionsCount, hm2SnmpPortNumber=hm2SnmpPortNumber, hm2SshFingerPrintRSA=hm2SshFingerPrintRSA)
