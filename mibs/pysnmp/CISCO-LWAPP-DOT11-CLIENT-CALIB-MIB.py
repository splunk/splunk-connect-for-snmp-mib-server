#
# PySNMP MIB module CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:48:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
cLApSysMacAddress, cLApDot11IfSlotId = mibBuilder.importSymbols("CISCO-LWAPP-AP-MIB", "cLApSysMacAddress", "cLApDot11IfSlotId")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter64, Gauge32, Integer32, Bits, ObjectIdentity, Unsigned32, Counter32, MibIdentifier, ModuleIdentity, IpAddress, TimeTicks, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter64", "Gauge32", "Integer32", "Bits", "ObjectIdentity", "Unsigned32", "Counter32", "MibIdentifier", "ModuleIdentity", "IpAddress", "TimeTicks", "NotificationType")
TimeStamp, TruthValue, RowStatus, TimeInterval, DisplayString, TextualConvention, StorageType, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TruthValue", "RowStatus", "TimeInterval", "DisplayString", "TextualConvention", "StorageType", "MacAddress")
ciscoLwappDot11ClientCalibMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 522))
ciscoLwappDot11ClientCalibMIB.setRevisions(('2011-11-25 00:00', '2007-02-12 00:00', '2006-04-11 00:00',))
if mibBuilder.loadTexts: ciscoLwappDot11ClientCalibMIB.setLastUpdated('201111250000Z')
if mibBuilder.loadTexts: ciscoLwappDot11ClientCalibMIB.setOrganization('Cisco Systems Inc.')
ciscoLwappDot11ClientCalibMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 522, 0))
ciscoLwappDot11ClientCalibMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 522, 1))
ciscoLwappDot11ClientCalibMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 522, 2))
cldccConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1))
cldccStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 2))
cldccRssiSamples = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 2, 1))
cLD11ClientCalibTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 1), )
if mibBuilder.loadTexts: cLD11ClientCalibTable.setStatus('current')
cLD11ClientCalibEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibMacAddress"))
if mibBuilder.loadTexts: cLD11ClientCalibEntry.setStatus('current')
cLD11ClientCalibMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: cLD11ClientCalibMacAddress.setStatus('current')
cLD11ClientCalibBeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 1, 1, 2), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(400, 3240000)).clone(60000)).setUnits('hundredths-seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLD11ClientCalibBeaconInterval.setStatus('deprecated')
cLD11ClientCalibRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLD11ClientCalibRowStatus.setStatus('current')
cLD11ClientCalibNumberOfRadios = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLD11ClientCalibNumberOfRadios.setStatus('current')
cLD11ClientCalibNumberOfSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLD11ClientCalibNumberOfSamples.setStatus('current')
cLD11ClientCalibSamplesCollected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLD11ClientCalibSamplesCollected.setStatus('current')
cLD11ClientCalibBeaconIntervalExt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 1, 1, 7), TimeInterval().clone(60000)).setUnits('hundredths-seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLD11ClientCalibBeaconIntervalExt.setStatus('current')
cLD11ClientCalibStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 1, 1, 8), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLD11ClientCalibStorageType.setStatus('current')
cLD11ClientCalibTableMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibTableMaxEntries.setStatus('current')
cLD11ClientCalibDataTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 2, 1, 1), )
if mibBuilder.loadTexts: cLD11ClientCalibDataTable.setStatus('current')
cLD11ClientCalibDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 2, 1, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibMacAddress"), (0, "CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"), (0, "CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId"), (0, "CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "clD11ClientCalibDataTimeStamp"), (0, "CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "clD11ClientCalibDataAntennaIndex"))
if mibBuilder.loadTexts: cLD11ClientCalibDataEntry.setStatus('current')
clD11ClientCalibDataTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 2, 1, 1, 1, 1), TimeStamp()).setUnits('milliseconds')
if mibBuilder.loadTexts: clD11ClientCalibDataTimeStamp.setStatus('current')
clD11ClientCalibDataAntennaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("antenna1", 1), ("antenna2", 2))))
if mibBuilder.loadTexts: clD11ClientCalibDataAntennaIndex.setStatus('current')
clD11ClientCalibDataRssiValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 2, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clD11ClientCalibDataRssiValue.setStatus('current')
clD11ClientCalibDataTransmitPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 2, 1, 1, 1, 4), Integer32()).setUnits('dbm').setMaxAccess("readonly")
if mibBuilder.loadTexts: clD11ClientCalibDataTransmitPower.setStatus('current')
cLD11ClientCalibRssiAlgorithm = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("simple", 2), ("average", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibRssiAlgorithm.setStatus('current')
cLD11ClientCalibRssiClientExpiryTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 4), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibRssiClientExpiryTimeout.setStatus('current')
cLD11ClientCalibRssiCalibClientExpiryTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibRssiCalibClientExpiryTimeout.setStatus('current')
cLD11ClientCalibRssiRfidTagExpiryTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 6), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibRssiRfidTagExpiryTimeout.setStatus('current')
cLD11ClientCalibRssiRogueApExpiryTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 7), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibRssiRogueApExpiryTimeout.setStatus('current')
cLD11ClientCalibRssiClientHalflifeTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 2), ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(20, 20), ValueRangeConstraint(30, 30), ValueRangeConstraint(60, 60), ValueRangeConstraint(90, 90), ValueRangeConstraint(120, 120), ValueRangeConstraint(180, 180), ValueRangeConstraint(300, 300), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibRssiClientHalflifeTimeout.setStatus('current')
cLD11ClientCalibRssiCalibClientHalflifeTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 2), ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(20, 20), ValueRangeConstraint(30, 30), ValueRangeConstraint(60, 60), ValueRangeConstraint(90, 90), ValueRangeConstraint(120, 120), ValueRangeConstraint(180, 180), ValueRangeConstraint(300, 300), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibRssiCalibClientHalflifeTimeout.setStatus('current')
cLD11ClientCalibRssiRfidTagHalflifeTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 2), ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(20, 20), ValueRangeConstraint(30, 30), ValueRangeConstraint(60, 60), ValueRangeConstraint(90, 90), ValueRangeConstraint(120, 120), ValueRangeConstraint(180, 180), ValueRangeConstraint(300, 300), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibRssiRfidTagHalflifeTimeout.setStatus('current')
cLD11ClientCalibRssiRogueApHalflifeTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 2), ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(20, 20), ValueRangeConstraint(30, 30), ValueRangeConstraint(60, 60), ValueRangeConstraint(90, 90), ValueRangeConstraint(120, 120), ValueRangeConstraint(180, 180), ValueRangeConstraint(300, 300), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibRssiRogueApHalflifeTimeout.setStatus('current')
cLD11ClientCalibRfidDataEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibRfidDataEnable.setStatus('current')
cLD11ClientCalibRfidTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 13), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibRfidTimeout.setStatus('current')
cLD11ClientCalibClientMultiBandEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibClientMultiBandEnable.setStatus('current')
cLD11ClientCalibClientRequestEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibClientRequestEnable.setStatus('current')
cLD11ClientCalibClientBurstIntervalEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibClientBurstIntervalEnable.setStatus('current')
cLD11ClientCalibClientBurstInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 17), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibClientBurstInterval.setStatus('current')
cLD11ClientCalibClientInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 18), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibClientInterval.setStatus('current')
cLD11ClientCalibRfidInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 19), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibRfidInterval.setStatus('current')
cLD11ClientCalibRogueInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 522, 1, 1, 20), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLD11ClientCalibRogueInterval.setStatus('current')
ciscoLwappDot11ClientCalibMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 522, 2, 1))
ciscoLwappDot11ClientCalibMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 522, 2, 2))
ciscoLwappDot11ClientCalibMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 522, 2, 1, 1)).setObjects(("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "ciscoLwappDot11ClientCalibMIBConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappDot11ClientCalibMIBCompliance = ciscoLwappDot11ClientCalibMIBCompliance.setStatus('deprecated')
ciscoLwappDot11ClientCalibMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 522, 2, 1, 2)).setObjects(("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibClientConfigGroup"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibGlobalConfigGroup"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibRssiDataSampleGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappDot11ClientCalibMIBComplianceRev1 = ciscoLwappDot11ClientCalibMIBComplianceRev1.setStatus('current')
ciscoLwappDot11ClientCalibMIBConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 522, 2, 2, 1)).setObjects(("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibBeaconInterval"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibRowStatus"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibTableMaxEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappDot11ClientCalibMIBConfigGroup = ciscoLwappDot11ClientCalibMIBConfigGroup.setStatus('deprecated')
cLD11ClientCalibClientConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 522, 2, 2, 2)).setObjects(("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibRowStatus"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibBeaconIntervalExt"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibNumberOfRadios"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibNumberOfSamples"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibSamplesCollected"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibStorageType"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibTableMaxEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLD11ClientCalibClientConfigGroup = cLD11ClientCalibClientConfigGroup.setStatus('current')
cLD11ClientCalibGlobalConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 522, 2, 2, 3)).setObjects(("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibRssiAlgorithm"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibRssiClientExpiryTimeout"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibRssiCalibClientExpiryTimeout"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibRssiRfidTagExpiryTimeout"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibRssiRogueApExpiryTimeout"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibRssiClientHalflifeTimeout"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibRssiCalibClientHalflifeTimeout"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibRssiRfidTagHalflifeTimeout"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibRssiRogueApHalflifeTimeout"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibRfidDataEnable"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibRfidTimeout"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibClientMultiBandEnable"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibClientRequestEnable"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibClientBurstIntervalEnable"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibClientBurstInterval"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibClientInterval"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibRfidInterval"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "cLD11ClientCalibRogueInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLD11ClientCalibGlobalConfigGroup = cLD11ClientCalibGlobalConfigGroup.setStatus('current')
cLD11ClientCalibRssiDataSampleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 522, 2, 2, 4)).setObjects(("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "clD11ClientCalibDataRssiValue"), ("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", "clD11ClientCalibDataTransmitPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLD11ClientCalibRssiDataSampleGroup = cLD11ClientCalibRssiDataSampleGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-LWAPP-DOT11-CLIENT-CALIB-MIB", cLD11ClientCalibClientRequestEnable=cLD11ClientCalibClientRequestEnable, cLD11ClientCalibBeaconInterval=cLD11ClientCalibBeaconInterval, cLD11ClientCalibNumberOfRadios=cLD11ClientCalibNumberOfRadios, cLD11ClientCalibNumberOfSamples=cLD11ClientCalibNumberOfSamples, cLD11ClientCalibRssiCalibClientHalflifeTimeout=cLD11ClientCalibRssiCalibClientHalflifeTimeout, cLD11ClientCalibClientMultiBandEnable=cLD11ClientCalibClientMultiBandEnable, ciscoLwappDot11ClientCalibMIBObjects=ciscoLwappDot11ClientCalibMIBObjects, cLD11ClientCalibTable=cLD11ClientCalibTable, cLD11ClientCalibDataTable=cLD11ClientCalibDataTable, cldccStatus=cldccStatus, cldccRssiSamples=cldccRssiSamples, clD11ClientCalibDataRssiValue=clD11ClientCalibDataRssiValue, ciscoLwappDot11ClientCalibMIB=ciscoLwappDot11ClientCalibMIB, cLD11ClientCalibRssiCalibClientExpiryTimeout=cLD11ClientCalibRssiCalibClientExpiryTimeout, cLD11ClientCalibClientBurstIntervalEnable=cLD11ClientCalibClientBurstIntervalEnable, cLD11ClientCalibRssiDataSampleGroup=cLD11ClientCalibRssiDataSampleGroup, clD11ClientCalibDataTransmitPower=clD11ClientCalibDataTransmitPower, ciscoLwappDot11ClientCalibMIBNotifs=ciscoLwappDot11ClientCalibMIBNotifs, cLD11ClientCalibRogueInterval=cLD11ClientCalibRogueInterval, clD11ClientCalibDataTimeStamp=clD11ClientCalibDataTimeStamp, ciscoLwappDot11ClientCalibMIBConform=ciscoLwappDot11ClientCalibMIBConform, cLD11ClientCalibRssiRfidTagExpiryTimeout=cLD11ClientCalibRssiRfidTagExpiryTimeout, ciscoLwappDot11ClientCalibMIBGroups=ciscoLwappDot11ClientCalibMIBGroups, ciscoLwappDot11ClientCalibMIBConfigGroup=ciscoLwappDot11ClientCalibMIBConfigGroup, cldccConfig=cldccConfig, clD11ClientCalibDataAntennaIndex=clD11ClientCalibDataAntennaIndex, cLD11ClientCalibRfidInterval=cLD11ClientCalibRfidInterval, cLD11ClientCalibMacAddress=cLD11ClientCalibMacAddress, cLD11ClientCalibDataEntry=cLD11ClientCalibDataEntry, cLD11ClientCalibClientInterval=cLD11ClientCalibClientInterval, cLD11ClientCalibEntry=cLD11ClientCalibEntry, cLD11ClientCalibRssiRogueApExpiryTimeout=cLD11ClientCalibRssiRogueApExpiryTimeout, PYSNMP_MODULE_ID=ciscoLwappDot11ClientCalibMIB, cLD11ClientCalibRfidDataEnable=cLD11ClientCalibRfidDataEnable, cLD11ClientCalibRssiAlgorithm=cLD11ClientCalibRssiAlgorithm, cLD11ClientCalibRfidTimeout=cLD11ClientCalibRfidTimeout, cLD11ClientCalibRssiClientExpiryTimeout=cLD11ClientCalibRssiClientExpiryTimeout, cLD11ClientCalibRssiClientHalflifeTimeout=cLD11ClientCalibRssiClientHalflifeTimeout, ciscoLwappDot11ClientCalibMIBCompliances=ciscoLwappDot11ClientCalibMIBCompliances, ciscoLwappDot11ClientCalibMIBComplianceRev1=ciscoLwappDot11ClientCalibMIBComplianceRev1, cLD11ClientCalibRowStatus=cLD11ClientCalibRowStatus, cLD11ClientCalibTableMaxEntries=cLD11ClientCalibTableMaxEntries, cLD11ClientCalibClientBurstInterval=cLD11ClientCalibClientBurstInterval, ciscoLwappDot11ClientCalibMIBCompliance=ciscoLwappDot11ClientCalibMIBCompliance, cLD11ClientCalibRssiRfidTagHalflifeTimeout=cLD11ClientCalibRssiRfidTagHalflifeTimeout, cLD11ClientCalibRssiRogueApHalflifeTimeout=cLD11ClientCalibRssiRogueApHalflifeTimeout, cLD11ClientCalibGlobalConfigGroup=cLD11ClientCalibGlobalConfigGroup, cLD11ClientCalibStorageType=cLD11ClientCalibStorageType, cLD11ClientCalibBeaconIntervalExt=cLD11ClientCalibBeaconIntervalExt, cLD11ClientCalibSamplesCollected=cLD11ClientCalibSamplesCollected, cLD11ClientCalibClientConfigGroup=cLD11ClientCalibClientConfigGroup)
