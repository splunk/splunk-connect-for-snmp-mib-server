#
# PySNMP MIB module Wellfleet-HWF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-HWF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:33:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, MibIdentifier, iso, Gauge32, TimeTicks, Counter64, IpAddress, ModuleIdentity, ObjectIdentity, NotificationType, Bits, Integer32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibIdentifier", "iso", "Gauge32", "TimeTicks", "Counter64", "IpAddress", "ModuleIdentity", "ObjectIdentity", "NotificationType", "Bits", "Integer32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfHwFGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfHwFGroup")
wfHwfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 1), )
if mibBuilder.loadTexts: wfHwfTable.setStatus('mandatory')
wfHwfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 1, 1), ).setIndexNames((0, "Wellfleet-HWF-MIB", "wfHwfSlot"))
if mibBuilder.loadTexts: wfHwfEntry.setStatus('mandatory')
wfHwfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHwfDelete.setStatus('mandatory')
wfHwfEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHwfEnable.setStatus('mandatory')
wfHwfState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfState.setStatus('mandatory')
wfHwfSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfSlot.setStatus('mandatory')
wfHwfAvailableLines = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfAvailableLines.setStatus('mandatory')
wfHwfLineTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2), )
if mibBuilder.loadTexts: wfHwfLineTable.setStatus('mandatory')
wfHwfLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1), ).setIndexNames((0, "Wellfleet-HWF-MIB", "wfHwfLineSlot"), (0, "Wellfleet-HWF-MIB", "wfHwfLineNumber"))
if mibBuilder.loadTexts: wfHwfLineEntry.setStatus('mandatory')
wfHwfLineState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("disabled", 2), ("full", 3))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfLineState.setStatus('mandatory')
wfHwfLineSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfLineSlot.setStatus('mandatory')
wfHwfLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4), ("five", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfLineNumber.setStatus('mandatory')
wfHwfLineCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfLineCct.setStatus('mandatory')
wfHwfLineCapableMaxTblSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfLineCapableMaxTblSize.setStatus('mandatory')
wfHwfLineCurrentTblSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfLineCurrentTblSize.setStatus('mandatory')
wfHwfLineCurrentUsedEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfLineCurrentUsedEntries.setStatus('mandatory')
wfHwfLineDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfLineDroppedFrames.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-HWF-MIB", wfHwfLineEntry=wfHwfLineEntry, wfHwfEnable=wfHwfEnable, wfHwfLineState=wfHwfLineState, wfHwfLineTable=wfHwfLineTable, wfHwfTable=wfHwfTable, wfHwfEntry=wfHwfEntry, wfHwfAvailableLines=wfHwfAvailableLines, wfHwfLineCct=wfHwfLineCct, wfHwfLineCapableMaxTblSize=wfHwfLineCapableMaxTblSize, wfHwfSlot=wfHwfSlot, wfHwfLineDroppedFrames=wfHwfLineDroppedFrames, wfHwfLineCurrentUsedEntries=wfHwfLineCurrentUsedEntries, wfHwfDelete=wfHwfDelete, wfHwfLineSlot=wfHwfLineSlot, wfHwfLineCurrentTblSize=wfHwfLineCurrentTblSize, wfHwfLineNumber=wfHwfLineNumber, wfHwfState=wfHwfState)
