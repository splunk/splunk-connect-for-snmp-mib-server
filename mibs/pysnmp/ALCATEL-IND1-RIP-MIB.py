#
# PySNMP MIB module ALCATEL-IND1-RIP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-RIP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:03:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
routingIND1Rip, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "routingIND1Rip")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
rip2IfConfEntry, = mibBuilder.importSymbols("RIPv2-MIB", "rip2IfConfEntry")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Unsigned32, ModuleIdentity, Counter32, ObjectIdentity, TimeTicks, Bits, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, NotificationType, Counter64, IpAddress, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ModuleIdentity", "Counter32", "ObjectIdentity", "TimeTicks", "Bits", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "NotificationType", "Counter64", "IpAddress", "iso", "Integer32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
alcatelIND1RIPMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1))
alcatelIND1RIPMIB.setRevisions(('2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1RIPMIB.setLastUpdated('200704030000Z')
if mibBuilder.loadTexts: alcatelIND1RIPMIB.setOrganization('Alcatel-Lucent')
alcatelIND1RIPMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1))
if mibBuilder.loadTexts: alcatelIND1RIPMIBObjects.setStatus('current')
alcatelIND1RIPMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2))
if mibBuilder.loadTexts: alcatelIND1RIPMIBConformance.setStatus('current')
alcatelIND1RIPMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1RIPMIBGroups.setStatus('current')
alcatelIND1RIPMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1RIPMIBCompliances.setStatus('current')
class AlaAuthenticationEncryptKey(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(16, 16)
    fixedLength = 16

alaProtocolRip = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1))
alaRipProtoStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipProtoStatus.setStatus('current')
alaRipHostRouteSupport = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipHostRouteSupport.setStatus('current')
alaRipRedistAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipRedistAdminStatus.setStatus('obsolete')
alaRipRedistRouteTag = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipRedistRouteTag.setStatus('current')
alaRipForceHolddownTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipForceHolddownTimer.setStatus('current')
alaRipRouteNumber = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipRouteNumber.setStatus('current')
alaRipUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipUpdateInterval.setStatus('current')
alaRipInvalidTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 360)).clone(180)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipInvalidTimer.setStatus('current')
alaRipHolddownTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipHolddownTimer.setStatus('current')
alaRipGarbageTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 180)).clone(120)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipGarbageTimer.setStatus('current')
alaRipRedistProtoTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 7), )
if mibBuilder.loadTexts: alaRipRedistProtoTable.setStatus('obsolete')
alaRipRedistProtoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-RIP-MIB", "alaRipRedistProtoId"))
if mibBuilder.loadTexts: alaRipRedistProtoEntry.setStatus('obsolete')
alaRipRedistProtoId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("directHost", 3), ("netmgmt", 4), ("rip", 5), ("ospf", 6), ("isis", 7), ("bgp", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipRedistProtoId.setStatus('obsolete')
alaRipRedistProtoMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipRedistProtoMetric.setStatus('obsolete')
alaRipRedistProtoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 7, 1, 3), RowStatus().clone('notInService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipRedistProtoStatus.setStatus('obsolete')
alaRipDebug = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 2))
alaRipDebugLevel = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipDebugLevel.setStatus('deprecated')
alaRipDebugError = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipDebugError.setStatus('deprecated')
alaRipDebugWarn = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipDebugWarn.setStatus('deprecated')
alaRipDebugRecv = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipDebugRecv.setStatus('deprecated')
alaRipDebugSend = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipDebugSend.setStatus('deprecated')
alaRipDebugRdb = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipDebugRdb.setStatus('deprecated')
alaRipDebugAge = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipDebugAge.setStatus('deprecated')
alaRipDebugConfig = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipDebugConfig.setStatus('deprecated')
alaRipDebugRedist = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipDebugRedist.setStatus('deprecated')
alaRipDebugInfo = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipDebugInfo.setStatus('deprecated')
alaRipDebugSetup = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipDebugSetup.setStatus('deprecated')
alaRipDebugTime = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipDebugTime.setStatus('deprecated')
alaRipDebugAll = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipDebugAll.setStatus('deprecated')
alaRipRouteTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 9), )
if mibBuilder.loadTexts: alaRipRouteTable.setStatus('deprecated')
alaRipRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 9, 1), ).setIndexNames((0, "ALCATEL-IND1-RIP-MIB", "alaRipRouteDest"), (0, "ALCATEL-IND1-RIP-MIB", "alaRipRouteMask"))
if mibBuilder.loadTexts: alaRipRouteEntry.setStatus('deprecated')
alaRipRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 9, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipRouteDest.setStatus('deprecated')
alaRipRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 9, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipRouteMask.setStatus('deprecated')
alaRipRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 9, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipRouteNextHop.setStatus('deprecated')
alaRipRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("remote", 2), ("redistribute", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipRouteType.setStatus('deprecated')
alaRipRouteAge = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 9, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipRouteAge.setStatus('deprecated')
alaRipRouteTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipRouteTag.setStatus('deprecated')
alaRipRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipRouteMetric.setStatus('deprecated')
alaRipRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 9, 1, 8), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipRouteStatus.setStatus('deprecated')
alaRipRedistRouteTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 10), )
if mibBuilder.loadTexts: alaRipRedistRouteTable.setStatus('obsolete')
alaRipRedistRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 10, 1), ).setIndexNames((0, "ALCATEL-IND1-RIP-MIB", "alaRipRedistRouteProto"), (0, "ALCATEL-IND1-RIP-MIB", "alaRipRedistRouteDest"), (0, "ALCATEL-IND1-RIP-MIB", "alaRipRedistRouteMask"))
if mibBuilder.loadTexts: alaRipRedistRouteEntry.setStatus('obsolete')
alaRipRedistRouteProto = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("directHost", 3), ("netmgmt", 4), ("ospf", 6), ("isis", 7), ("bgp", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipRedistRouteProto.setStatus('obsolete')
alaRipRedistRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 10, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipRedistRouteDest.setStatus('obsolete')
alaRipRedistRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 10, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipRedistRouteMask.setStatus('obsolete')
alaRipRedistRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipRedistRouteMetric.setStatus('obsolete')
alaRipRedistRouteControl = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("redistributeAllSubnets", 1), ("redistributeAsAggregate", 2), ("redistributeExactMatch", 3))).clone('redistributeAllSubnets')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipRedistRouteControl.setStatus('obsolete')
alaRipRedistRouteTagMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 10, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipRedistRouteTagMatch.setStatus('obsolete')
alaRipRedistRouteEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("redistribute", 1), ("doNotRedistribute", 2))).clone('redistribute')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipRedistRouteEffect.setStatus('obsolete')
alaRipRedistRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 10, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipRedistRouteStatus.setStatus('obsolete')
alaRip2IfConfAugTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11), )
if mibBuilder.loadTexts: alaRip2IfConfAugTable.setStatus('current')
alaRip2IfConfAugEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11, 1), )
rip2IfConfEntry.registerAugmentions(("ALCATEL-IND1-RIP-MIB", "alaRip2IfConfAugEntry"))
alaRip2IfConfAugEntry.setIndexNames(*rip2IfConfEntry.getIndexNames())
if mibBuilder.loadTexts: alaRip2IfConfAugEntry.setStatus('current')
alaRip2IfConfEncryptKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11, 1, 1), AlaAuthenticationEncryptKey()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRip2IfConfEncryptKey.setStatus('current')
alaRip2IfIpConfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRip2IfIpConfStatus.setStatus('current')
alaRip2IfRecvPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRip2IfRecvPkts.setStatus('current')
alaRip2IfConfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRip2IfConfName.setStatus('current')
alaRip2IfConfType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("broadcast", 1), ("point2point", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRip2IfConfType.setStatus('current')
alaRip2IfConfPtoPPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRip2IfConfPtoPPeer.setStatus('current')
alaRipEcmpRouteTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12), )
if mibBuilder.loadTexts: alaRipEcmpRouteTable.setStatus('current')
alaRipEcmpRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1), ).setIndexNames((0, "ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteDest"), (0, "ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteMask"), (0, "ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteNextHop"))
if mibBuilder.loadTexts: alaRipEcmpRouteEntry.setStatus('current')
alaRipEcmpRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 1), IpAddress())
if mibBuilder.loadTexts: alaRipEcmpRouteDest.setStatus('current')
alaRipEcmpRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 2), IpAddress())
if mibBuilder.loadTexts: alaRipEcmpRouteMask.setStatus('current')
alaRipEcmpRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 3), IpAddress())
if mibBuilder.loadTexts: alaRipEcmpRouteNextHop.setStatus('current')
alaRipEcmpRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("remote", 2), ("redistribute", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipEcmpRouteType.setStatus('current')
alaRipEcmpRouteAge = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipEcmpRouteAge.setStatus('current')
alaRipEcmpRouteTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipEcmpRouteTag.setStatus('current')
alaRipEcmpRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipEcmpRouteMetric.setStatus('current')
alaRipEcmpRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 8), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipEcmpRouteStatus.setStatus('current')
alaRipEcmpRouteState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("garbage", 2), ("holddown", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipEcmpRouteState.setStatus('current')
alcatelIND1RIPMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-RIP-MIB", "alaRipMiscellaneousGroup"), ("ALCATEL-IND1-RIP-MIB", "alaRipRedistProtoGroup"), ("ALCATEL-IND1-RIP-MIB", "alaRipDebugGroup"), ("ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteGroup"), ("ALCATEL-IND1-RIP-MIB", "alaRipRedistRouteGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1RIPMIBCompliance = alcatelIND1RIPMIBCompliance.setStatus('current')
alaRipMiscellaneousGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-RIP-MIB", "alaRipRedistAdminStatus"), ("ALCATEL-IND1-RIP-MIB", "alaRipRedistRouteTag"), ("ALCATEL-IND1-RIP-MIB", "alaRipForceHolddownTimer"), ("ALCATEL-IND1-RIP-MIB", "alaRipRouteNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaRipMiscellaneousGroup = alaRipMiscellaneousGroup.setStatus('current')
alaRipRedistProtoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-RIP-MIB", "alaRipRedistProtoId"), ("ALCATEL-IND1-RIP-MIB", "alaRipRedistProtoMetric"), ("ALCATEL-IND1-RIP-MIB", "alaRipRedistProtoStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaRipRedistProtoGroup = alaRipRedistProtoGroup.setStatus('obsolete')
alaRipDebugGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-RIP-MIB", "alaRipDebugLevel"), ("ALCATEL-IND1-RIP-MIB", "alaRipDebugError"), ("ALCATEL-IND1-RIP-MIB", "alaRipDebugWarn"), ("ALCATEL-IND1-RIP-MIB", "alaRipDebugRecv"), ("ALCATEL-IND1-RIP-MIB", "alaRipDebugSend"), ("ALCATEL-IND1-RIP-MIB", "alaRipDebugRdb"), ("ALCATEL-IND1-RIP-MIB", "alaRipDebugAge"), ("ALCATEL-IND1-RIP-MIB", "alaRipDebugConfig"), ("ALCATEL-IND1-RIP-MIB", "alaRipDebugRedist"), ("ALCATEL-IND1-RIP-MIB", "alaRipDebugInfo"), ("ALCATEL-IND1-RIP-MIB", "alaRipDebugSetup"), ("ALCATEL-IND1-RIP-MIB", "alaRipDebugTime"), ("ALCATEL-IND1-RIP-MIB", "alaRipDebugAll"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaRipDebugGroup = alaRipDebugGroup.setStatus('deprecated')
alaRipRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-RIP-MIB", "alaRipRouteNumber"), ("ALCATEL-IND1-RIP-MIB", "alaRipRouteDest"), ("ALCATEL-IND1-RIP-MIB", "alaRipRouteMask"), ("ALCATEL-IND1-RIP-MIB", "alaRipRouteNextHop"), ("ALCATEL-IND1-RIP-MIB", "alaRipRouteType"), ("ALCATEL-IND1-RIP-MIB", "alaRipRouteAge"), ("ALCATEL-IND1-RIP-MIB", "alaRipRouteTag"), ("ALCATEL-IND1-RIP-MIB", "alaRipRouteMetric"), ("ALCATEL-IND1-RIP-MIB", "alaRipRouteStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaRipRouteGroup = alaRipRouteGroup.setStatus('deprecated')
alaRipRedistRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-RIP-MIB", "alaRipRedistRouteTag"), ("ALCATEL-IND1-RIP-MIB", "alaRipRedistRouteProto"), ("ALCATEL-IND1-RIP-MIB", "alaRipRedistRouteDest"), ("ALCATEL-IND1-RIP-MIB", "alaRipRedistRouteMask"), ("ALCATEL-IND1-RIP-MIB", "alaRipRedistRouteMetric"), ("ALCATEL-IND1-RIP-MIB", "alaRipRedistRouteControl"), ("ALCATEL-IND1-RIP-MIB", "alaRipRedistRouteTagMatch"), ("ALCATEL-IND1-RIP-MIB", "alaRipRedistRouteEffect"), ("ALCATEL-IND1-RIP-MIB", "alaRipRedistRouteStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaRipRedistRouteGroup = alaRipRedistRouteGroup.setStatus('obsolete')
alaRipEcmpRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-RIP-MIB", "alaRipRouteNumber"), ("ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteType"), ("ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteAge"), ("ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteTag"), ("ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteMetric"), ("ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteStatus"), ("ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaRipEcmpRouteGroup = alaRipEcmpRouteGroup.setStatus('current')
alcatelIND1RIPTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 3))
alcatelIND1RIPTrapsRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 3, 0))
ripRouteMaxLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 3, 0, 1))
if mibBuilder.loadTexts: ripRouteMaxLimitReached.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-RIP-MIB", alaRipRedistProtoEntry=alaRipRedistProtoEntry, alaRip2IfIpConfStatus=alaRip2IfIpConfStatus, alaRipEcmpRouteDest=alaRipEcmpRouteDest, alaRipRouteType=alaRipRouteType, alcatelIND1RIPTraps=alcatelIND1RIPTraps, alaRipEcmpRouteAge=alaRipEcmpRouteAge, alaRipDebug=alaRipDebug, alaRipRedistRouteTag=alaRipRedistRouteTag, alaRipHolddownTimer=alaRipHolddownTimer, alaRip2IfRecvPkts=alaRip2IfRecvPkts, alaRipRouteDest=alaRipRouteDest, AlaAuthenticationEncryptKey=AlaAuthenticationEncryptKey, alaRipRouteEntry=alaRipRouteEntry, alaRipRedistRouteTable=alaRipRedistRouteTable, alaRip2IfConfAugEntry=alaRip2IfConfAugEntry, alaRipRedistProtoTable=alaRipRedistProtoTable, alaRipDebugRedist=alaRipDebugRedist, alcatelIND1RIPMIBConformance=alcatelIND1RIPMIBConformance, alaRipEcmpRouteGroup=alaRipEcmpRouteGroup, alaRipDebugConfig=alaRipDebugConfig, alaRipRouteNumber=alaRipRouteNumber, alaRipRedistRouteDest=alaRipRedistRouteDest, alaRipRedistRouteTagMatch=alaRipRedistRouteTagMatch, alaRipEcmpRouteEntry=alaRipEcmpRouteEntry, alaRipForceHolddownTimer=alaRipForceHolddownTimer, alaRipEcmpRouteType=alaRipEcmpRouteType, alaRipRouteStatus=alaRipRouteStatus, alaRipRedistRouteMetric=alaRipRedistRouteMetric, alaRipRedistRouteEntry=alaRipRedistRouteEntry, alaProtocolRip=alaProtocolRip, alaRipDebugWarn=alaRipDebugWarn, alaRipRouteGroup=alaRipRouteGroup, alaRipRouteAge=alaRipRouteAge, ripRouteMaxLimitReached=ripRouteMaxLimitReached, alaRipRouteTable=alaRipRouteTable, alcatelIND1RIPMIB=alcatelIND1RIPMIB, PYSNMP_MODULE_ID=alcatelIND1RIPMIB, alaRipRedistProtoStatus=alaRipRedistProtoStatus, alaRipDebugLevel=alaRipDebugLevel, alaRipDebugRdb=alaRipDebugRdb, alaRipRouteNextHop=alaRipRouteNextHop, alaRipRedistRouteStatus=alaRipRedistRouteStatus, alaRip2IfConfType=alaRip2IfConfType, alaRipRouteMask=alaRipRouteMask, alaRipEcmpRouteNextHop=alaRipEcmpRouteNextHop, alaRipRouteTag=alaRipRouteTag, alaRipDebugSetup=alaRipDebugSetup, alaRipRedistRouteProto=alaRipRedistRouteProto, alaRipDebugInfo=alaRipDebugInfo, alaRipEcmpRouteMask=alaRipEcmpRouteMask, alaRipEcmpRouteState=alaRipEcmpRouteState, alaRipRedistProtoMetric=alaRipRedistProtoMetric, alcatelIND1RIPTrapsRoot=alcatelIND1RIPTrapsRoot, alaRip2IfConfAugTable=alaRip2IfConfAugTable, alaRipEcmpRouteTable=alaRipEcmpRouteTable, alcatelIND1RIPMIBObjects=alcatelIND1RIPMIBObjects, alaRip2IfConfName=alaRip2IfConfName, alaRipEcmpRouteTag=alaRipEcmpRouteTag, alaRipHostRouteSupport=alaRipHostRouteSupport, alaRipDebugSend=alaRipDebugSend, alaRipRedistProtoGroup=alaRipRedistProtoGroup, alaRipRedistProtoId=alaRipRedistProtoId, alaRipInvalidTimer=alaRipInvalidTimer, alcatelIND1RIPMIBGroups=alcatelIND1RIPMIBGroups, alaRipDebugRecv=alaRipDebugRecv, alaRip2IfConfPtoPPeer=alaRip2IfConfPtoPPeer, alaRipDebugError=alaRipDebugError, alaRipDebugTime=alaRipDebugTime, alaRipRedistRouteMask=alaRipRedistRouteMask, alaRipDebugGroup=alaRipDebugGroup, alaRipDebugAll=alaRipDebugAll, alaRipProtoStatus=alaRipProtoStatus, alaRipDebugAge=alaRipDebugAge, alcatelIND1RIPMIBCompliances=alcatelIND1RIPMIBCompliances, alaRipMiscellaneousGroup=alaRipMiscellaneousGroup, alaRipRedistRouteControl=alaRipRedistRouteControl, alaRipUpdateInterval=alaRipUpdateInterval, alaRipRouteMetric=alaRipRouteMetric, alaRip2IfConfEncryptKey=alaRip2IfConfEncryptKey, alcatelIND1RIPMIBCompliance=alcatelIND1RIPMIBCompliance, alaRipGarbageTimer=alaRipGarbageTimer, alaRipRedistRouteEffect=alaRipRedistRouteEffect, alaRipRedistAdminStatus=alaRipRedistAdminStatus, alaRipEcmpRouteMetric=alaRipEcmpRouteMetric, alaRipEcmpRouteStatus=alaRipEcmpRouteStatus, alaRipRedistRouteGroup=alaRipRedistRouteGroup)
