#
# PySNMP MIB module CXBOPIO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CXBOPIO-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:16:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
cxBOPIO, Alias = mibBuilder.importSymbols("CXProduct-SMI", "cxBOPIO", "Alias")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, NotificationType, Counter64, iso, NotificationType, ModuleIdentity, IpAddress, TimeTicks, Counter32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Gauge32, MibIdentifier, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "Counter64", "iso", "NotificationType", "ModuleIdentity", "IpAddress", "TimeTicks", "Counter32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Gauge32", "MibIdentifier", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
bopSapOprTable = MibTable((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1), )
if mibBuilder.loadTexts: bopSapOprTable.setStatus('mandatory')
bopSapOprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1), ).setIndexNames((0, "CXBOPIO-MIB", "bopSapOprNumber"))
if mibBuilder.loadTexts: bopSapOprEntry.setStatus('mandatory')
bopSapOprNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprNumber.setStatus('mandatory')
bopSapOprAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 2), Alias()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprAlias.setStatus('mandatory')
bopSapOprProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("hdlc", 1), ("bsc3270", 2), ("borroughs", 3), ("sperry", 4), ("bsc3780", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprProtocol.setStatus('mandatory')
bopSapOprPortClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("internal", 1), ("external", 2), ("split", 3), ("slave", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortClockSource.setStatus('mandatory')
bopSapOprPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(375, 2048000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortSpeed.setStatus('mandatory')
bopSapOprPortDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("half", 1), ("full", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortDuplex.setStatus('mandatory')
bopSapOprPortMaxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortMaxFrameSize.setStatus('mandatory')
bopSapOprPortDataEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nrz", 1), ("nrzi-mark", 2), ("nrzi-space", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortDataEncoding.setStatus('mandatory')
bopSapOprPortIdleCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("flags", 1), ("marks", 2), ("as400", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortIdleCondition.setStatus('mandatory')
bopSapOprPortPreAmbleLength = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortPreAmbleLength.setStatus('mandatory')
bopSapOprPortFlagSharing = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortFlagSharing.setStatus('obsolete')
bopSapOprPortFilterMask = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortFilterMask.setStatus('obsolete')
bopSapOprPortFilterAddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortFilterAddress1.setStatus('obsolete')
bopSapOprPortFilterAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortFilterAddress2.setStatus('obsolete')
bopSapOprPortFilterAddress3 = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortFilterAddress3.setStatus('obsolete')
bopSapOprPortFilterAddress4 = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortFilterAddress4.setStatus('obsolete')
bopSapOprPortCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("crc-ccitt", 1), ("crc-32", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortCrc.setStatus('obsolete')
bopSapOprPortDtrUpTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortDtrUpTimer.setStatus('mandatory')
bopSapOprPortTxWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortTxWindow.setStatus('mandatory')
bopSapOprPortDialMode = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dial-in-only", 1), ("dial-out-only", 2), ("dial-in-out", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortDialMode.setStatus('mandatory')
bopSapOprPortLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 1), ("local", 2), ("remote", 3), ("both", 4), ("isdn-uif-uif", 5), ("isdn-uif-idl2", 6), ("isdn-uif-framer", 7), ("isdn-uif-external", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortLoopback.setStatus('mandatory')
bopSapOprPortSignalSamplingPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapOprPortSignalSamplingPeriod.setStatus('mandatory')
bopSapOprPortDcdDtrSignalSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapOprPortDcdDtrSignalSamples.setStatus('mandatory')
bopSapOprPortCtsRtsSignalSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapOprPortCtsRtsSignalSamples.setStatus('mandatory')
bopSapOprPortDsrDrsSignalSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapOprPortDsrDrsSignalSamples.setStatus('mandatory')
bopSapOprPortTmLlSignalSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapOprPortTmLlSignalSamples.setStatus('mandatory')
bopSapOprPortRiRlSignalSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapOprPortRiRlSignalSamples.setStatus('mandatory')
bopSapOprPortStatisticsTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortStatisticsTimer.setStatus('mandatory')
bopSapOprPortCarrierAction = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapOprPortCarrierAction.setStatus('mandatory')
bopSapOprPortDataGenerator = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("enabled-verify", 3), ("retrigger", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapOprPortDataGenerator.setStatus('mandatory')
bopSapOprPortGenFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapOprPortGenFrames.setStatus('mandatory')
bopSapOprPortGenFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapOprPortGenFrameSize.setStatus('mandatory')
bopSapOprPortGenFrameHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapOprPortGenFrameHeader.setStatus('mandatory')
bopSapOprPortThreshBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortThreshBandwidth.setStatus('mandatory')
bopSapOprPortActualSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(375, 2048000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprPortActualSpeed.setStatus('mandatory')
bopSapOprCodeSet = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ebcdic", 1), ("ascii", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprCodeSet.setStatus('mandatory')
bopSapOprParity = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3), ("space", 4), ("mark", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapOprParity.setStatus('mandatory')
bopOprPortTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopOprPortTrap.setStatus('mandatory')
bopOprTxClockTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopOprTxClockTrap.setStatus('mandatory')
bopOprControlLine = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forceDown", 1), ("forceUp", 2), ("forceReset", 3)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: bopOprControlLine.setStatus('mandatory')
bopOprControlStats = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clearSapStats", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: bopOprControlStats.setStatus('mandatory')
bopStatOprPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("dte", 2), ("dce", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprPortType.setStatus('mandatory')
bopStatOprPortInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("rs232d", 2), ("v35", 3), ("x21", 4), ("v34", 5), ("dds", 6), ("uif", 7), ("v36", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprPortInterfaceType.setStatus('mandatory')
bopStatOprPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("portUp", 1), ("portDown", 2), ("portShutDown", 3), ("portDownBadConfiguration", 4), ("portOutOfOrder", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprPortState.setStatus('mandatory')
bopStatOprTxClockState = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("txClockDown", 1), ("txClockUp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprTxClockState.setStatus('mandatory')
bopStatOprDCDState = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("inactive", 2), ("active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprDCDState.setStatus('mandatory')
bopStatOprDTRState = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("inactive", 2), ("active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprDTRState.setStatus('mandatory')
bopStatOprRTSState = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("inactive", 2), ("active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRTSState.setStatus('mandatory')
bopStatOprCTSState = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("inactive", 2), ("active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprCTSState.setStatus('mandatory')
bopStatOprDSRState = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("inactive", 2), ("active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprDSRState.setStatus('mandatory')
bopStatOprDRSState = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("inactive", 2), ("active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprDRSState.setStatus('mandatory')
bopStatOprTMState = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("inactive", 2), ("active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprTMState.setStatus('mandatory')
bopStatOprLLState = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("inactive", 2), ("active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprLLState.setStatus('mandatory')
bopStatOprRIState = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("inactive", 2), ("active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRIState.setStatus('mandatory')
bopStatOprRLState = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 71), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("inactive", 2), ("active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRLState.setStatus('mandatory')
bopStatOprTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 75), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprTxFrames.setStatus('mandatory')
bopStatOprRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 76), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRxFrames.setStatus('mandatory')
bopStatOprLocalLoopbackFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 77), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprLocalLoopbackFrames.setStatus('mandatory')
bopStatOprTxBps = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 78), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprTxBps.setStatus('mandatory')
bopStatOprRxBps = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 79), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRxBps.setStatus('mandatory')
bopStatOprTxBpsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 80), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprTxBpsMax.setStatus('mandatory')
bopStatOprRxBpsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 81), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRxBpsMax.setStatus('mandatory')
bopStatOprTxFps = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 82), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprTxFps.setStatus('mandatory')
bopStatOprRxFps = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 83), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRxFps.setStatus('mandatory')
bopStatOprTxFpsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 84), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprTxFpsMax.setStatus('mandatory')
bopStatOprRxFpsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 85), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRxFpsMax.setStatus('mandatory')
bopStatOprTxUnderrunFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 86), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprTxUnderrunFrames.setStatus('mandatory')
bopStatOprTxCtsLostFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 87), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprTxCtsLostFrames.setStatus('mandatory')
bopStatOprTxBadStateDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 88), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprTxBadStateDiscards.setStatus('mandatory')
bopStatOprTxResetDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 89), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprTxResetDiscards.setStatus('mandatory')
bopStatOprTxSysCongestionDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 90), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprTxSysCongestionDiscards.setStatus('mandatory')
bopStatOprTxInvWinDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 91), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprTxInvWinDiscards.setStatus('mandatory')
bopStatOprTxInvRLpbkWinDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 92), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprTxInvRLpbkWinDiscards.setStatus('mandatory')
bopStatOprRxBadCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 98), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRxBadCrcFrames.setStatus('mandatory')
bopStatOprRxAbortedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 99), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRxAbortedFrames.setStatus('mandatory')
bopStatOprRxNonIntegralBitFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 100), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRxNonIntegralBitFrames.setStatus('mandatory')
bopStatOprRxLongFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 101), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRxLongFrames.setStatus('mandatory')
bopStatOprRxOverrunFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 102), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRxOverrunFrames.setStatus('mandatory')
bopStatOprRxCdLostFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 103), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRxCdLostFrames.setStatus('mandatory')
bopStatOprRxBadStateDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 104), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRxBadStateDiscards.setStatus('mandatory')
bopStatOprRxBusyDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 105), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRxBusyDiscards.setStatus('mandatory')
bopStatOprPortStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 109), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprPortStateChanges.setStatus('mandatory')
bopStatOprTxClockStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 110), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprTxClockStateChanges.setStatus('mandatory')
bopStatOprDCDStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 111), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprDCDStateChanges.setStatus('mandatory')
bopStatOprDTRStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 112), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprDTRStateChanges.setStatus('mandatory')
bopStatOprRTSStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 113), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRTSStateChanges.setStatus('mandatory')
bopStatOprCTSStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 114), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprCTSStateChanges.setStatus('mandatory')
bopStatOprDSRStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 115), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprDSRStateChanges.setStatus('mandatory')
bopStatOprDRSStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 116), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprDRSStateChanges.setStatus('mandatory')
bopStatOprTMStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 117), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprTMStateChanges.setStatus('mandatory')
bopStatOprLLStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 118), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprLLStateChanges.setStatus('mandatory')
bopStatOprRIStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 119), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRIStateChanges.setStatus('mandatory')
bopStatOprRLStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 120), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRLStateChanges.setStatus('mandatory')
bopStatOprPortResets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 121), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprPortResets.setStatus('mandatory')
bopStatOprRxGenError = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 1, 1, 123), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopStatOprRxGenError.setStatus('mandatory')
bopSapAdmTable = MibTable((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2), )
if mibBuilder.loadTexts: bopSapAdmTable.setStatus('mandatory')
bopSapAdmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1), ).setIndexNames((0, "CXBOPIO-MIB", "bopSapAdmNumber"))
if mibBuilder.loadTexts: bopSapAdmEntry.setStatus('mandatory')
bopSapAdmNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopSapAdmNumber.setStatus('mandatory')
bopSapAdmAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 2), Alias()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmAlias.setStatus('mandatory')
bopSapAdmProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("hdlc", 1), ("bsc3270", 2), ("borroughs", 3), ("sperry", 4), ("bsc3780", 5), ("aircat", 6))).clone('hdlc')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmProtocol.setStatus('mandatory')
bopSapAdmPortClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("internal", 1), ("external", 2), ("split", 3), ("slave", 4))).clone('external')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortClockSource.setStatus('mandatory')
bopSapAdmPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(375, 2048000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortSpeed.setStatus('mandatory')
bopSapAdmPortDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("half", 1), ("full", 2))).clone('full')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortDuplex.setStatus('mandatory')
bopSapAdmPortMaxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 9000)).clone(1600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortMaxFrameSize.setStatus('mandatory')
bopSapAdmPortDataEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nrz", 1), ("nrzi-mark", 2), ("nrzi-space", 3))).clone('nrz')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortDataEncoding.setStatus('mandatory')
bopSapAdmPortIdleCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("flags", 1), ("marks", 2), ("as400", 3))).clone('flags')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortIdleCondition.setStatus('mandatory')
bopSapAdmPortPreAmbleLength = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortPreAmbleLength.setStatus('mandatory')
bopSapAdmPortFlagSharing = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortFlagSharing.setStatus('obsolete')
bopSapAdmPortFilterMask = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortFilterMask.setStatus('obsolete')
bopSapAdmPortFilterAddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(126)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortFilterAddress1.setStatus('obsolete')
bopSapAdmPortFilterAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(126)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortFilterAddress2.setStatus('obsolete')
bopSapAdmPortFilterAddress3 = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(126)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortFilterAddress3.setStatus('obsolete')
bopSapAdmPortFilterAddress4 = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(126)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortFilterAddress4.setStatus('obsolete')
bopSapAdmPortCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("crc-ccitt", 1), ("crc-32", 2))).clone('crc-ccitt')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortCrc.setStatus('obsolete')
bopSapAdmPortDtrUpTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortDtrUpTimer.setStatus('mandatory')
bopSapAdmPortTxWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortTxWindow.setStatus('mandatory')
bopSapAdmPortThreshBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortThreshBandwidth.setStatus('mandatory')
bopSapAdmPortDialMode = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dial-in-only", 1), ("dial-out-only", 2), ("dial-in-out", 3))).clone('dial-in-out')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortDialMode.setStatus('mandatory')
bopSapAdmPortLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 1), ("local", 2), ("remote", 3), ("both", 4), ("isdn-uif-uif", 5), ("isdn-uif-idl2", 6), ("isdn-uif-framer", 7), ("isdn-uif-external", 8))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortLoopback.setStatus('mandatory')
bopSapAdmPortSignalSamplingPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 100)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortSignalSamplingPeriod.setStatus('mandatory')
bopSapAdmPortDcdDtrSignalSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortDcdDtrSignalSamples.setStatus('mandatory')
bopSapAdmPortCtsRtsSignalSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortCtsRtsSignalSamples.setStatus('mandatory')
bopSapAdmPortDsrDrsSignalSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortDsrDrsSignalSamples.setStatus('mandatory')
bopSapAdmPortTmLlSignalSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortTmLlSignalSamples.setStatus('mandatory')
bopSapAdmPortRiRlSignalSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortRiRlSignalSamples.setStatus('mandatory')
bopSapAdmPortStatisticsTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortStatisticsTimer.setStatus('mandatory')
bopSapAdmPortCarrierAction = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortCarrierAction.setStatus('mandatory')
bopSapAdmPortDataGenerator = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("enabled-verify", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortDataGenerator.setStatus('mandatory')
bopSapAdmPortGenFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortGenFrames.setStatus('mandatory')
bopSapAdmPortGenFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortGenFrameSize.setStatus('mandatory')
bopSapAdmPortGenFrameHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmPortGenFrameHeader.setStatus('mandatory')
bopSapAdmCodeSet = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("ebcdic", 2), ("ascii", 3))).clone('ebcdic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmCodeSet.setStatus('mandatory')
bopSapAdmParity = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3), ("space", 4), ("mark", 5))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopSapAdmParity.setStatus('mandatory')
bopAdmPortTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopAdmPortTrap.setStatus('mandatory')
bopAdmTxClockTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 2, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bopAdmTxClockTrap.setStatus('mandatory')
bopMibLevel = MibScalar((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bopMibLevel.setStatus('mandatory')
bopPortStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36) + (0,1)).setObjects(("CXBOPIO-MIB", "bopSapOprNumber"), ("CXBOPIO-MIB", "bopStatOprPortState"))
bopTxClockStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 36) + (0,2)).setObjects(("CXBOPIO-MIB", "bopSapOprNumber"), ("CXBOPIO-MIB", "bopStatOprTxClockState"))
mibBuilder.exportSymbols("CXBOPIO-MIB", bopPortStatusChange=bopPortStatusChange, bopSapAdmAlias=bopSapAdmAlias, bopSapOprPortDataEncoding=bopSapOprPortDataEncoding, bopStatOprRIState=bopStatOprRIState, bopSapOprTable=bopSapOprTable, bopSapOprPortGenFrames=bopSapOprPortGenFrames, bopStatOprDTRState=bopStatOprDTRState, bopSapOprPortFilterAddress4=bopSapOprPortFilterAddress4, bopStatOprTxResetDiscards=bopStatOprTxResetDiscards, bopSapAdmPortDuplex=bopSapAdmPortDuplex, bopSapOprPortStatisticsTimer=bopSapOprPortStatisticsTimer, bopStatOprTxFrames=bopStatOprTxFrames, bopStatOprTxClockStateChanges=bopStatOprTxClockStateChanges, bopSapOprPortMaxFrameSize=bopSapOprPortMaxFrameSize, bopSapOprPortThreshBandwidth=bopSapOprPortThreshBandwidth, bopSapAdmPortSignalSamplingPeriod=bopSapAdmPortSignalSamplingPeriod, bopStatOprLocalLoopbackFrames=bopStatOprLocalLoopbackFrames, bopSapAdmPortDialMode=bopSapAdmPortDialMode, bopStatOprTxClockState=bopStatOprTxClockState, bopSapOprPortSpeed=bopSapOprPortSpeed, bopStatOprPortResets=bopStatOprPortResets, bopSapAdmEntry=bopSapAdmEntry, bopStatOprTxBps=bopStatOprTxBps, bopStatOprRIStateChanges=bopStatOprRIStateChanges, bopStatOprDRSStateChanges=bopStatOprDRSStateChanges, bopSapAdmPortIdleCondition=bopSapAdmPortIdleCondition, bopSapAdmPortCrc=bopSapAdmPortCrc, bopSapOprPortDsrDrsSignalSamples=bopSapOprPortDsrDrsSignalSamples, bopStatOprTMState=bopStatOprTMState, bopSapAdmPortTmLlSignalSamples=bopSapAdmPortTmLlSignalSamples, bopStatOprDCDState=bopStatOprDCDState, bopSapOprPortPreAmbleLength=bopSapOprPortPreAmbleLength, bopSapOprPortFilterAddress3=bopSapOprPortFilterAddress3, bopStatOprLLStateChanges=bopStatOprLLStateChanges, bopStatOprTxUnderrunFrames=bopStatOprTxUnderrunFrames, bopOprControlLine=bopOprControlLine, bopStatOprRxBusyDiscards=bopStatOprRxBusyDiscards, bopStatOprLLState=bopStatOprLLState, bopSapOprPortDtrUpTimer=bopSapOprPortDtrUpTimer, bopSapAdmPortDcdDtrSignalSamples=bopSapAdmPortDcdDtrSignalSamples, bopStatOprPortStateChanges=bopStatOprPortStateChanges, bopSapOprPortFilterAddress1=bopSapOprPortFilterAddress1, bopSapAdmNumber=bopSapAdmNumber, bopSapOprPortDataGenerator=bopSapOprPortDataGenerator, bopStatOprTxBpsMax=bopStatOprTxBpsMax, bopSapAdmPortFilterAddress1=bopSapAdmPortFilterAddress1, bopSapOprCodeSet=bopSapOprCodeSet, bopStatOprPortState=bopStatOprPortState, bopSapOprPortFilterAddress2=bopSapOprPortFilterAddress2, bopSapAdmPortStatisticsTimer=bopSapAdmPortStatisticsTimer, bopSapOprPortDuplex=bopSapOprPortDuplex, bopStatOprRLStateChanges=bopStatOprRLStateChanges, bopOprTxClockTrap=bopOprTxClockTrap, bopOprPortTrap=bopOprPortTrap, bopSapAdmPortFilterMask=bopSapAdmPortFilterMask, bopOprControlStats=bopOprControlStats, bopSapOprPortClockSource=bopSapOprPortClockSource, bopStatOprRxNonIntegralBitFrames=bopStatOprRxNonIntegralBitFrames, bopStatOprPortType=bopStatOprPortType, bopSapAdmCodeSet=bopSapAdmCodeSet, bopStatOprRxCdLostFrames=bopStatOprRxCdLostFrames, bopStatOprRxBpsMax=bopStatOprRxBpsMax, bopStatOprCTSState=bopStatOprCTSState, bopStatOprRTSStateChanges=bopStatOprRTSStateChanges, bopStatOprRxOverrunFrames=bopStatOprRxOverrunFrames, bopStatOprTxCtsLostFrames=bopStatOprTxCtsLostFrames, bopStatOprTxFps=bopStatOprTxFps, bopStatOprRxBps=bopStatOprRxBps, bopSapOprParity=bopSapOprParity, bopSapAdmPortGenFrameHeader=bopSapAdmPortGenFrameHeader, bopSapOprPortActualSpeed=bopSapOprPortActualSpeed, bopSapOprProtocol=bopSapOprProtocol, bopSapAdmPortFilterAddress3=bopSapAdmPortFilterAddress3, bopSapOprPortSignalSamplingPeriod=bopSapOprPortSignalSamplingPeriod, bopSapOprPortIdleCondition=bopSapOprPortIdleCondition, bopMibLevel=bopMibLevel, bopStatOprRxBadCrcFrames=bopStatOprRxBadCrcFrames, bopSapAdmPortGenFrameSize=bopSapAdmPortGenFrameSize, bopStatOprPortInterfaceType=bopStatOprPortInterfaceType, bopSapOprPortCrc=bopSapOprPortCrc, bopSapAdmPortCtsRtsSignalSamples=bopSapAdmPortCtsRtsSignalSamples, bopSapOprPortGenFrameSize=bopSapOprPortGenFrameSize, bopStatOprRxFpsMax=bopStatOprRxFpsMax, bopStatOprDTRStateChanges=bopStatOprDTRStateChanges, bopSapOprPortCarrierAction=bopSapOprPortCarrierAction, bopSapOprPortTxWindow=bopSapOprPortTxWindow, bopStatOprRxLongFrames=bopStatOprRxLongFrames, bopSapAdmPortRiRlSignalSamples=bopSapAdmPortRiRlSignalSamples, bopSapOprPortFlagSharing=bopSapOprPortFlagSharing, bopSapOprPortLoopback=bopSapOprPortLoopback, bopStatOprDCDStateChanges=bopStatOprDCDStateChanges, bopStatOprTxInvWinDiscards=bopStatOprTxInvWinDiscards, bopSapAdmPortDtrUpTimer=bopSapAdmPortDtrUpTimer, bopTxClockStatusChange=bopTxClockStatusChange, bopSapOprPortRiRlSignalSamples=bopSapOprPortRiRlSignalSamples, bopSapAdmPortPreAmbleLength=bopSapAdmPortPreAmbleLength, bopSapAdmPortFilterAddress4=bopSapAdmPortFilterAddress4, bopStatOprRTSState=bopStatOprRTSState, bopSapAdmPortTxWindow=bopSapAdmPortTxWindow, bopSapOprAlias=bopSapOprAlias, bopSapOprPortCtsRtsSignalSamples=bopSapOprPortCtsRtsSignalSamples, bopSapOprPortGenFrameHeader=bopSapOprPortGenFrameHeader, bopSapAdmPortSpeed=bopSapAdmPortSpeed, bopSapOprEntry=bopSapOprEntry, bopStatOprDSRState=bopStatOprDSRState, bopSapAdmPortClockSource=bopSapAdmPortClockSource, bopSapAdmPortGenFrames=bopSapAdmPortGenFrames, bopStatOprTxInvRLpbkWinDiscards=bopStatOprTxInvRLpbkWinDiscards, bopSapAdmPortDataEncoding=bopSapAdmPortDataEncoding, bopStatOprRxBadStateDiscards=bopStatOprRxBadStateDiscards, bopAdmTxClockTrap=bopAdmTxClockTrap, bopStatOprRLState=bopStatOprRLState, bopSapAdmPortCarrierAction=bopSapAdmPortCarrierAction, bopSapOprPortDcdDtrSignalSamples=bopSapOprPortDcdDtrSignalSamples, bopAdmPortTrap=bopAdmPortTrap, bopSapAdmPortFilterAddress2=bopSapAdmPortFilterAddress2, bopStatOprCTSStateChanges=bopStatOprCTSStateChanges, bopStatOprTxSysCongestionDiscards=bopStatOprTxSysCongestionDiscards, bopSapAdmPortFlagSharing=bopSapAdmPortFlagSharing, bopStatOprRxGenError=bopStatOprRxGenError, bopSapAdmPortDataGenerator=bopSapAdmPortDataGenerator, bopStatOprRxFps=bopStatOprRxFps, bopStatOprDRSState=bopStatOprDRSState, bopStatOprDSRStateChanges=bopStatOprDSRStateChanges, bopStatOprTxFpsMax=bopStatOprTxFpsMax, bopSapAdmPortMaxFrameSize=bopSapAdmPortMaxFrameSize, bopStatOprTMStateChanges=bopStatOprTMStateChanges, bopSapOprPortDialMode=bopSapOprPortDialMode, bopSapOprPortFilterMask=bopSapOprPortFilterMask, bopStatOprTxBadStateDiscards=bopStatOprTxBadStateDiscards, bopSapAdmParity=bopSapAdmParity, bopSapAdmProtocol=bopSapAdmProtocol, bopStatOprRxAbortedFrames=bopStatOprRxAbortedFrames, bopSapOprPortTmLlSignalSamples=bopSapOprPortTmLlSignalSamples, bopSapAdmPortDsrDrsSignalSamples=bopSapAdmPortDsrDrsSignalSamples, bopSapAdmTable=bopSapAdmTable, bopStatOprRxFrames=bopStatOprRxFrames, bopSapOprNumber=bopSapOprNumber, bopSapAdmPortLoopback=bopSapAdmPortLoopback, bopSapAdmPortThreshBandwidth=bopSapAdmPortThreshBandwidth)
