#
# PySNMP MIB module Wellfleet-DLS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-DLS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:33:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter32, Bits, Counter64, MibIdentifier, Integer32, TimeTicks, NotificationType, IpAddress, iso, Gauge32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter32", "Bits", "Counter64", "MibIdentifier", "Integer32", "TimeTicks", "NotificationType", "IpAddress", "iso", "Gauge32", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfDlsGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfDlsGroup")
wfDls = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1))
wfDlsDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsDelete.setStatus('mandatory')
wfDlsDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsDisable.setStatus('mandatory')
wfDlsState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsState.setStatus('mandatory')
wfDlsTcpWindowSize = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5000, 64000)).clone(8000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsTcpWindowSize.setStatus('mandatory')
wfDlsVirtualRing = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsVirtualRing.setStatus('mandatory')
wfDlsInternalLanId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsInternalLanId.setStatus('mandatory')
wfDlsBridgeId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsBridgeId.setStatus('mandatory')
wfDlsMaxSlotSessions = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsMaxSlotSessions.setStatus('mandatory')
wfDlsTotalCircuits = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsTotalCircuits.setStatus('mandatory')
wfDlsVirtualRingMtu = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsVirtualRingMtu.setStatus('mandatory')
wfDlsMacAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsMacAgeTime.setStatus('mandatory')
wfDlsNbAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 12), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(21, 4294967295)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsNbAgeTime.setStatus('mandatory')
wfDlsUnconfPeerReject = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("accepted", 1), ("rejected", 2))).clone('accepted')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsUnconfPeerReject.setStatus('mandatory')
wfDlsDebugLevel1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 14), Gauge32().clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsDebugLevel1.setStatus('mandatory')
wfDlsDebugLevel2 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 15), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsDebugLevel2.setStatus('mandatory')
wfDlsWanKeepaliveTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsWanKeepaliveTime.setStatus('mandatory')
wfDlsPPriDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPPriDisable.setStatus('mandatory')
wfDlsPPriDefaultNumQueues = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPPriDefaultNumQueues.setStatus('mandatory')
wfDlsPPriDefaultQBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 19), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPPriDefaultQBandwidth.setStatus('mandatory')
wfDlsPPriUnconfPeerDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPPriUnconfPeerDisable.setStatus('mandatory')
wfDlsPPriUnconfPeerMaxQBuf = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(50))).clone(namedValues=NamedValues(("default", 50))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPPriUnconfPeerMaxQBuf.setStatus('mandatory')
wfDlsPPriUnconfPeerMaxQSize = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16000))).clone(namedValues=NamedValues(("default", 16000))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPPriUnconfPeerMaxQSize.setStatus('mandatory')
wfDlsPkgMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(1532)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPkgMaxSize.setStatus('mandatory')
wfDlsPkgTO = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPkgTO.setStatus('mandatory')
wfDlsPkgWinPercent = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPkgWinPercent.setStatus('mandatory')
wfDlsMultislotBcasts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsMultislotBcasts.setStatus('mandatory')
wfDlsInitialPacingWindow = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 100)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsInitialPacingWindow.setStatus('mandatory')
wfDlsRfc = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("rfc1434", 1), ("rfc1795", 2), ("v20unicast", 3), ("rfc2166", 4))).clone('rfc1434')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsRfc.setStatus('mandatory')
wfDlsNetbiosSessionAliveFilter = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsNetbiosSessionAliveFilter.setStatus('mandatory')
wfDlsWanKeepaliveRetryTimer = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsWanKeepaliveRetryTimer.setStatus('mandatory')
wfDlsWanKeepaliveRetries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsWanKeepaliveRetries.setStatus('mandatory')
wfDlsSnaFallbackAttempts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsSnaFallbackAttempts.setStatus('mandatory')
wfDlsNetbiosFallbackTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsNetbiosFallbackTime.setStatus('mandatory')
wfDlsTcpInactTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsTcpInactTime.setStatus('mandatory')
wfDlsTcpInactMethod = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("never", 1), ("circuits", 2), ("data", 3))).clone('circuits')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsTcpInactMethod.setStatus('mandatory')
wfDlsMslotDLCBcasts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsMslotDLCBcasts.setStatus('mandatory')
wfDlsRsvpSupport = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsRsvpSupport.setStatus('mandatory')
wfDlsOutBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsOutBandwidth.setStatus('mandatory')
wfDlsOutBurstSize = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsOutBurstSize.setStatus('mandatory')
wfDlsInBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsInBandwidth.setStatus('mandatory')
wfDlsInBurstSize = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsInBurstSize.setStatus('mandatory')
wfDlsNonPeakOutBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsNonPeakOutBandwidth.setStatus('mandatory')
wfDlsNonPeakOutBurstSize = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsNonPeakOutBurstSize.setStatus('mandatory')
wfDlsNonPeakInBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsNonPeakInBandwidth.setStatus('mandatory')
wfDlsNonPeakInBurstSize = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsNonPeakInBurstSize.setStatus('mandatory')
wfDlsNonPeakStartTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsNonPeakStartTime.setStatus('mandatory')
wfDlsNonPeakEndTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsNonPeakEndTime.setStatus('mandatory')
wfDlsNonPeakStartDays = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 48), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsNonPeakStartDays.setStatus('mandatory')
wfDlsMultislotCacheUpdate = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsMultislotCacheUpdate.setStatus('mandatory')
wfDlsMacAddrTranslation = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsMacAddrTranslation.setStatus('mandatory')
wfDlsBan2Support = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsBan2Support.setStatus('mandatory')
wfDlsVirtualRingBridgeCheck = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsVirtualRingBridgeCheck.setStatus('mandatory')
wfDlsAcceptBadVendorSpecificCapex = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsAcceptBadVendorSpecificCapex.setStatus('mandatory')
wfDlsDiagSwitch = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsDiagSwitch.setStatus('mandatory')
wfDlsAllowSpecAddrNbDatagram = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsAllowSpecAddrNbDatagram.setStatus('mandatory')
wfDlsInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 2), )
if mibBuilder.loadTexts: wfDlsInterfaceTable.setStatus('mandatory')
wfDlsInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 2, 1), ).setIndexNames((0, "Wellfleet-DLS-MIB", "wfDlsInterfaceCircuit"))
if mibBuilder.loadTexts: wfDlsInterfaceEntry.setStatus('mandatory')
wfDlsInterfaceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsInterfaceDelete.setStatus('mandatory')
wfDlsInterfaceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsInterfaceDisable.setStatus('mandatory')
wfDlsInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsInterfaceState.setStatus('mandatory')
wfDlsInterfaceCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsInterfaceCircuit.setStatus('mandatory')
wfDlsInterfaceBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsInterfaceBridgeId.setStatus('mandatory')
wfDlsInterfaceLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsInterfaceLanId.setStatus('mandatory')
wfDlsInterfaceDlcType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("sync", 1), ("srb", 2), ("tb", 3), ("encaps", 4), ("fr", 5), ("token", 6))).clone('srb')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsInterfaceDlcType.setStatus('mandatory')
wfDlsInterfaceSdlcMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("primary", 1), ("pp", 2), ("mp", 3), ("negot", 4))).clone('primary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsInterfaceSdlcMode.setStatus('mandatory')
wfDlsInterfaceNbBcastDgramReduce = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsInterfaceNbBcastDgramReduce.setStatus('mandatory')
wfDlsInterfaceExplorerType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ste", 1), ("are", 2))).clone('ste')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsInterfaceExplorerType.setStatus('mandatory')
wfDlsInterfaceNbBcastDgramCache = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("forward", 2), ("drop", 3))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsInterfaceNbBcastDgramCache.setStatus('mandatory')
wfDlsInterfaceClrCallEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsInterfaceClrCallEnable.setStatus('mandatory')
wfDlsSlotTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 3), )
if mibBuilder.loadTexts: wfDlsSlotTable.setStatus('mandatory')
wfDlsSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 3, 1), ).setIndexNames((0, "Wellfleet-DLS-MIB", "wfDlsSlotNumber"))
if mibBuilder.loadTexts: wfDlsSlotEntry.setStatus('mandatory')
wfDlsSlotDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsSlotDelete.setStatus('mandatory')
wfDlsSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsSlotNumber.setStatus('mandatory')
wfDlsSlotIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 3, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsSlotIpAddr.setStatus('mandatory')
wfDlsCurrentMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsCurrentMemory.setStatus('mandatory')
wfDlsMaxAllowedMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 3, 1, 5), Gauge32().clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsMaxAllowedMemory.setStatus('mandatory')
wfDlsHiWaterMark = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsHiWaterMark.setStatus('mandatory')
wfDlsSlotGenDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsSlotGenDestination.setStatus('mandatory')
wfDlsSlotGenSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsSlotGenSessions.setStatus('mandatory')
wfDlsSlotGenUpperMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147418112))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsSlotGenUpperMAC.setStatus('mandatory')
wfDlsSlotCurrentSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsSlotCurrentSessions.setStatus('mandatory')
wfDlsSlotHiWaterSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsSlotHiWaterSessions.setStatus('mandatory')
wfDlsSlotHiWaterReset = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("reset", 2))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsSlotHiWaterReset.setStatus('mandatory')
wfDlsSapTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 4), )
if mibBuilder.loadTexts: wfDlsSapTable.setStatus('mandatory')
wfDlsSapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 4, 1), ).setIndexNames((0, "Wellfleet-DLS-MIB", "wfDlsSapAddr"))
if mibBuilder.loadTexts: wfDlsSapEntry.setStatus('mandatory')
wfDlsSapDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsSapDelete.setStatus('mandatory')
wfDlsSapAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsSapAddr.setStatus('mandatory')
wfDlsSapCredit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6, 200)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsSapCredit.setStatus('mandatory')
wfDlsPeerTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5), )
if mibBuilder.loadTexts: wfDlsPeerTable.setStatus('mandatory')
wfDlsPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1), ).setIndexNames((0, "Wellfleet-DLS-MIB", "wfDlsPeerIpAddr"))
if mibBuilder.loadTexts: wfDlsPeerEntry.setStatus('mandatory')
wfDlsPeerDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerDelete.setStatus('mandatory')
wfDlsPeerState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("connect", 1), ("backup", 2), ("notconn", 3), ("invalid", 4))).clone('notconn')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsPeerState.setStatus('mandatory')
wfDlsPeerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsPeerIpAddr.setStatus('mandatory')
wfDlsPeerDefinedBy = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("configured", 1), ("learned", 2))).clone('configured')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsPeerDefinedBy.setStatus('mandatory')
wfDlsPeerPPriDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerPPriDisable.setStatus('mandatory')
wfDlsPeerPPriMaxQBuf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(50))).clone(namedValues=NamedValues(("default", 50))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerPPriMaxQBuf.setStatus('mandatory')
wfDlsPeerPPriMaxQSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16000))).clone(namedValues=NamedValues(("default", 16000))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerPPriMaxQSize.setStatus('mandatory')
wfDlsPeerPPriClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerPPriClearStats.setStatus('mandatory')
wfDlsPeerType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("rfc1795", 1), ("rfc1434", 2), ("local", 3), ("v20unicast", 4), ("rfc2166", 5), ("unknown", 6))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsPeerType.setStatus('mandatory')
wfDlsPeerTransportType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("unknown", 3))).clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerTransportType.setStatus('mandatory')
wfDlsPeerBackupConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerBackupConfig.setStatus('mandatory')
wfDlsPeerBackupIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerBackupIpAddr.setStatus('mandatory')
wfDlsPeerBackupMaxUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerBackupMaxUpTime.setStatus('mandatory')
wfDlsPeerBackupHoldDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerBackupHoldDownTime.setStatus('mandatory')
wfDlsPeerBackupStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2400)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerBackupStartTime.setStatus('mandatory')
wfDlsPeerBackupEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2400)).clone(2400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerBackupEndTime.setStatus('mandatory')
wfDlsPeerInteroperability = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerInteroperability.setStatus('mandatory')
wfDlsPeerBackupType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("multicast", 1), ("v20udp", 2), ("v20unknown", 3), ("v20tcp", 4), ("tcp1795", 5))).clone('v20unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerBackupType.setStatus('mandatory')
wfDlsPeerRsvpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("usePeerCfgParams", 1), ("noRsvpForPeer", 2), ("useGlobalCfgParams", 3))).clone('useGlobalCfgParams')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerRsvpMode.setStatus('mandatory')
wfDlsPeerRsvpSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 20), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerRsvpSlots.setStatus('mandatory')
wfDlsPeerOutBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerOutBandwidth.setStatus('mandatory')
wfDlsPeerOutBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerOutBurstSize.setStatus('mandatory')
wfDlsPeerInBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerInBandwidth.setStatus('mandatory')
wfDlsPeerInBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerInBurstSize.setStatus('mandatory')
wfDlsPeerNonPeakOutBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerNonPeakOutBandwidth.setStatus('mandatory')
wfDlsPeerNonPeakOutBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerNonPeakOutBurstSize.setStatus('mandatory')
wfDlsPeerNonPeakInBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 27), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerNonPeakInBandwidth.setStatus('mandatory')
wfDlsPeerNonPeakInBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 28), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerNonPeakInBurstSize.setStatus('mandatory')
wfDlsPeerNonPeakStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 29), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerNonPeakStartTime.setStatus('mandatory')
wfDlsPeerNonPeakEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 30), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerNonPeakEndTime.setStatus('mandatory')
wfDlsPeerNonPeakStartDays = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 31), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerNonPeakStartDays.setStatus('mandatory')
wfDlsPeerBackupOutBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerBackupOutBandwidth.setStatus('mandatory')
wfDlsPeerBackupOutBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerBackupOutBurstSize.setStatus('mandatory')
wfDlsPeerBackupInBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerBackupInBandwidth.setStatus('mandatory')
wfDlsPeerBackupInBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 5, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsPeerBackupInBurstSize.setStatus('mandatory')
wfDlsConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6), )
if mibBuilder.loadTexts: wfDlsConnectionTable.setStatus('mandatory')
wfDlsConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1), ).setIndexNames((0, "Wellfleet-DLS-MIB", "wfDlsConnectionCct"), (0, "Wellfleet-DLS-MIB", "wfDlsConnectionDstMac"), (0, "Wellfleet-DLS-MIB", "wfDlsConnectionSrcMac"), (0, "Wellfleet-DLS-MIB", "wfDlsConnectionSaps"))
if mibBuilder.loadTexts: wfDlsConnectionEntry.setStatus('mandatory')
wfDlsConnectionCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionCct.setStatus('mandatory')
wfDlsConnectionDstMac = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionDstMac.setStatus('mandatory')
wfDlsConnectionSrcMac = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionSrcMac.setStatus('mandatory')
wfDlsConnectionSaps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionSaps.setStatus('mandatory')
wfDlsConnectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("connect", 1), ("ccestab", 2), ("notconn", 3))).clone('notconn')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionState.setStatus('mandatory')
wfDlsConnectionRemoteIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionRemoteIpAddr.setStatus('mandatory')
wfDlsConnectionRemoteRxPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionRemoteRxPort.setStatus('mandatory')
wfDlsConnectionLocalIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionLocalIpAddr.setStatus('mandatory')
wfDlsConnectionLocalTxPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionLocalTxPort.setStatus('mandatory')
wfDlsConnectionTxIFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionTxIFrames.setStatus('mandatory')
wfDlsConnectionRxIFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionRxIFrames.setStatus('mandatory')
wfDlsConnectionTxRnrs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionTxRnrs.setStatus('mandatory')
wfDlsConnectionRxRnrs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionRxRnrs.setStatus('mandatory')
wfDlsConnectionLocalBlockNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionLocalBlockNum.setStatus('mandatory')
wfDlsConnectionLocalIdNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionLocalIdNum.setStatus('mandatory')
wfDlsConnectionLocalCpName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionLocalCpName.setStatus('mandatory')
wfDlsConnectionRif = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 17), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionRif.setStatus('mandatory')
wfDlsConnectionRemoteBlockNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionRemoteBlockNum.setStatus('mandatory')
wfDlsConnectionRemoteIdNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionRemoteIdNum.setStatus('mandatory')
wfDlsConnectionRemoteCpName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionRemoteCpName.setStatus('mandatory')
wfDlsConnectionLocalDLCorr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionLocalDLCorr.setStatus('mandatory')
wfDlsConnectionKilled = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("alive", 1), ("dead", 2))).clone('alive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsConnectionKilled.setStatus('mandatory')
wfDlsConnectionRemoteDLCorr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 6, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsConnectionRemoteDLCorr.setStatus('mandatory')
wfDlsNbTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 7), )
if mibBuilder.loadTexts: wfDlsNbTable.setStatus('mandatory')
wfDlsNbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 7, 1), ).setIndexNames((0, "Wellfleet-DLS-MIB", "wfDlsNbName"))
if mibBuilder.loadTexts: wfDlsNbEntry.setStatus('mandatory')
wfDlsNbName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 7, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsNbName.setStatus('mandatory')
wfDlsNbPeerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 7, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsNbPeerIpAddr.setStatus('mandatory')
wfDlsNbCapablePeerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 7, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsNbCapablePeerIpAddr.setStatus('mandatory')
wfDlsNbQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsNbQueries.setStatus('mandatory')
wfDlsMacTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 8), )
if mibBuilder.loadTexts: wfDlsMacTable.setStatus('mandatory')
wfDlsMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 8, 1), ).setIndexNames((0, "Wellfleet-DLS-MIB", "wfDlsMacAddr"))
if mibBuilder.loadTexts: wfDlsMacEntry.setStatus('mandatory')
wfDlsMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 8, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsMacAddr.setStatus('mandatory')
wfDlsMacPeerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsMacPeerIpAddr.setStatus('mandatory')
wfDlsMacCapablePeerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 8, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsMacCapablePeerIpAddr.setStatus('mandatory')
wfDlsMacQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsMacQueries.setStatus('mandatory')
wfDlsTrafficFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 9), )
if mibBuilder.loadTexts: wfDlsTrafficFilterTable.setStatus('mandatory')
wfDlsTrafficFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 9, 1), ).setIndexNames((0, "Wellfleet-DLS-MIB", "wfDlsTrafficFilterCircuit"), (0, "Wellfleet-DLS-MIB", "wfDlsTrafficFilterRuleNumber"), (0, "Wellfleet-DLS-MIB", "wfDlsTrafficFilterFragment"))
if mibBuilder.loadTexts: wfDlsTrafficFilterEntry.setStatus('mandatory')
wfDlsTrafficFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsTrafficFilterCreate.setStatus('mandatory')
wfDlsTrafficFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsTrafficFilterEnable.setStatus('mandatory')
wfDlsTrafficFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsTrafficFilterStatus.setStatus('mandatory')
wfDlsTrafficFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsTrafficFilterCounter.setStatus('mandatory')
wfDlsTrafficFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 9, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsTrafficFilterDefinition.setStatus('mandatory')
wfDlsTrafficFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsTrafficFilterReserved.setStatus('mandatory')
wfDlsTrafficFilterCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsTrafficFilterCircuit.setStatus('mandatory')
wfDlsTrafficFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 9, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsTrafficFilterRuleNumber.setStatus('mandatory')
wfDlsTrafficFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 9, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsTrafficFilterFragment.setStatus('mandatory')
wfDlsTrafficFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 9, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsTrafficFilterName.setStatus('mandatory')
wfDlsDefaultMacTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 10), )
if mibBuilder.loadTexts: wfDlsDefaultMacTable.setStatus('mandatory')
wfDlsDefaultMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 10, 1), ).setIndexNames((0, "Wellfleet-DLS-MIB", "wfDlsDefaultMacAddr"))
if mibBuilder.loadTexts: wfDlsDefaultMacEntry.setStatus('mandatory')
wfDlsDefaultMacDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsDefaultMacDelete.setStatus('mandatory')
wfDlsDefaultMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 10, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsDefaultMacAddr.setStatus('mandatory')
wfDlsDefaultMacPeerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 10, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsDefaultMacPeerIp.setStatus('mandatory')
wfDlsDefaultNbTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 11), )
if mibBuilder.loadTexts: wfDlsDefaultNbTable.setStatus('mandatory')
wfDlsDefaultNbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 11, 1), ).setIndexNames((0, "Wellfleet-DLS-MIB", "wfDlsDefaultNbName"))
if mibBuilder.loadTexts: wfDlsDefaultNbEntry.setStatus('mandatory')
wfDlsDefaultNbDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsDefaultNbDelete.setStatus('mandatory')
wfDlsDefaultNbName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsDefaultNbName.setStatus('mandatory')
wfDlsDefaultNbPeerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 11, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsDefaultNbPeerIp.setStatus('mandatory')
wfDlsLocalDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12), )
if mibBuilder.loadTexts: wfDlsLocalDeviceTable.setStatus('mandatory')
wfDlsLocalDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1), ).setIndexNames((0, "Wellfleet-DLS-MIB", "wfDlsLocalDeviceCct"), (0, "Wellfleet-DLS-MIB", "wfDlsLocalDeviceAddr"))
if mibBuilder.loadTexts: wfDlsLocalDeviceEntry.setStatus('mandatory')
wfDlsLocalDeviceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalDeviceDelete.setStatus('mandatory')
wfDlsLocalDeviceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalDeviceDisable.setStatus('mandatory')
wfDlsLocalDeviceState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsLocalDeviceState.setStatus('mandatory')
wfDlsLocalDeviceCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsLocalDeviceCct.setStatus('mandatory')
wfDlsLocalDeviceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsLocalDeviceAddr.setStatus('mandatory')
wfDlsLocalDeviceSourceMac = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalDeviceSourceMac.setStatus('mandatory')
wfDlsLocalDeviceSourceSap = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalDeviceSourceSap.setStatus('mandatory')
wfDlsLocalDeviceDestMac = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 8), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalDeviceDestMac.setStatus('mandatory')
wfDlsLocalDeviceDestSap = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalDeviceDestSap.setStatus('mandatory')
wfDlsLocalDeviceXidValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalDeviceXidValue.setStatus('mandatory')
wfDlsLocalDeviceCanureachTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalDeviceCanureachTimer.setStatus('mandatory')
wfDlsLocalDeviceCanureachRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 12), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalDeviceCanureachRetries.setStatus('mandatory')
wfDlsLocalDeviceLSTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalDeviceLSTimer.setStatus('mandatory')
wfDlsLocalDeviceLSRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 14), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalDeviceLSRetries.setStatus('mandatory')
wfDlsLocalDeviceRcvCredit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalDeviceRcvCredit.setStatus('mandatory')
wfDlsLocalDeviceTxCredit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalDeviceTxCredit.setStatus('mandatory')
wfDlsLocalDeviceCurTimer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalDeviceCurTimer2.setStatus('mandatory')
wfDlsLocalDeviceCurRetries2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 18), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalDeviceCurRetries2.setStatus('mandatory')
wfDlsLocalDeviceEnableXidPassthru = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalDeviceEnableXidPassthru.setStatus('mandatory')
wfDlsLocalDeviceActivationSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 12, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("localdevicefirst", 1), ("peerfirst", 2))).clone('localdevicefirst')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalDeviceActivationSequence.setStatus('mandatory')
wfDlsLocalCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 13), )
if mibBuilder.loadTexts: wfDlsLocalCircuitTable.setStatus('mandatory')
wfDlsLocalCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 13, 1), ).setIndexNames((0, "Wellfleet-DLS-MIB", "wfDlsLocalCircuitCct"))
if mibBuilder.loadTexts: wfDlsLocalCircuitEntry.setStatus('mandatory')
wfDlsLocalCircuitDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalCircuitDelete.setStatus('mandatory')
wfDlsLocalCircuitDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalCircuitDisable.setStatus('mandatory')
wfDlsLocalCircuitState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsLocalCircuitState.setStatus('mandatory')
wfDlsLocalCircuitCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 13, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalCircuitCct.setStatus('mandatory')
wfDlsLocalCircuitClientCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 13, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsLocalCircuitClientCount.setStatus('mandatory')
wfDlsLocalCircuitFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 13, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsLocalCircuitFrameCount.setStatus('mandatory')
wfDlsLocalCircuitSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 13, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalCircuitSlot.setStatus('mandatory')
wfDlsLocalCctDefaultMac = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 13, 1, 8), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsLocalCctDefaultMac.setStatus('mandatory')
wfDlsGenToolTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 14), )
if mibBuilder.loadTexts: wfDlsGenToolTable.setStatus('mandatory')
wfDlsGenToolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 14, 1), ).setIndexNames((0, "Wellfleet-DLS-MIB", "wfDlsSlotNumber"))
if mibBuilder.loadTexts: wfDlsGenToolEntry.setStatus('mandatory')
wfDlsGenDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsGenDelete.setStatus('mandatory')
wfDlsGenDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsGenDisable.setStatus('mandatory')
wfDlsGenDefaultSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 14, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 10000)).clone(250)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsGenDefaultSessions.setStatus('mandatory')
wfDlsGenStartupTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 14, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 100000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsGenStartupTime.setStatus('mandatory')
wfDlsGenIFramePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 14, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000)).clone(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsGenIFramePerSec.setStatus('mandatory')
wfDlsGenMacAddrOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsGenMacAddrOffset.setStatus('mandatory')
wfDlsGenVariableDstMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsGenVariableDstMAC.setStatus('mandatory')
wfDlsGenDefaultUpperMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 14, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147418112)).clone(1079705600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsGenDefaultUpperMAC.setStatus('mandatory')
wfDlsGenDataLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 14, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2052)).clone(250)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsGenDataLength.setStatus('mandatory')
wfDlsGenNumSapPerMac = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 14, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsGenNumSapPerMac.setStatus('mandatory')
wfDlsGenSapIncrement = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 14, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsGenSapIncrement.setStatus('mandatory')
wfDlsMcastIpTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 15), )
if mibBuilder.loadTexts: wfDlsMcastIpTable.setStatus('mandatory')
wfDlsMcastIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 15, 1), ).setIndexNames((0, "Wellfleet-DLS-MIB", "wfDlsMcastIpAddr"))
if mibBuilder.loadTexts: wfDlsMcastIpEntry.setStatus('mandatory')
wfDlsMcastIpDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsMcastIpDelete.setStatus('mandatory')
wfDlsMcastIpState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("notpresent", 3))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsMcastIpState.setStatus('mandatory')
wfDlsMcastIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 15, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsMcastIpAddr.setStatus('mandatory')
wfDlsMcastIpSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 15, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(4294705152)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsMcastIpSlots.setStatus('mandatory')
wfDlsMcastIpBackupConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsMcastIpBackupConfig.setStatus('mandatory')
wfDlsMcastIpBackupIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 15, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsMcastIpBackupIpAddr.setStatus('mandatory')
wfDlsMcastIpBackupMaxUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 15, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsMcastIpBackupMaxUpTime.setStatus('mandatory')
wfDlsMcastIpBackupHoldDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 15, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsMcastIpBackupHoldDownTime.setStatus('mandatory')
wfDlsMcastIpBackupStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 15, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2400)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsMcastIpBackupStartTime.setStatus('mandatory')
wfDlsMcastIpBackupEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 15, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2400)).clone(2400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsMcastIpBackupEndTime.setStatus('mandatory')
wfDlsMcastIpBackupType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 15, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("multicast", 1), ("v20udp", 2), ("v20unknown", 3), ("v20tcp", 4), ("tcp1795", 5))).clone('v20unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsMcastIpBackupType.setStatus('mandatory')
wfDlsTranslateMacTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 16), )
if mibBuilder.loadTexts: wfDlsTranslateMacTable.setStatus('mandatory')
wfDlsTranslateMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 16, 1), ).setIndexNames((0, "Wellfleet-DLS-MIB", "wfDlsOriginDestMacAddr"))
if mibBuilder.loadTexts: wfDlsTranslateMacEntry.setStatus('mandatory')
wfDlsTranslateMacDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsTranslateMacDelete.setStatus('mandatory')
wfDlsOriginDestMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 16, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDlsOriginDestMacAddr.setStatus('mandatory')
wfDlsTranslateDestMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 5, 16, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDlsTranslateDestMacAddr.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-DLS-MIB", wfDlsInterfaceNbBcastDgramCache=wfDlsInterfaceNbBcastDgramCache, wfDlsGenNumSapPerMac=wfDlsGenNumSapPerMac, wfDlsDefaultMacAddr=wfDlsDefaultMacAddr, wfDlsPeerEntry=wfDlsPeerEntry, wfDlsState=wfDlsState, wfDlsMultislotCacheUpdate=wfDlsMultislotCacheUpdate, wfDlsBan2Support=wfDlsBan2Support, wfDlsGenDelete=wfDlsGenDelete, wfDlsConnectionTxIFrames=wfDlsConnectionTxIFrames, wfDlsTrafficFilterFragment=wfDlsTrafficFilterFragment, wfDlsInBurstSize=wfDlsInBurstSize, wfDlsPPriUnconfPeerMaxQBuf=wfDlsPPriUnconfPeerMaxQBuf, wfDlsLocalDeviceActivationSequence=wfDlsLocalDeviceActivationSequence, wfDlsSapDelete=wfDlsSapDelete, wfDlsTrafficFilterCreate=wfDlsTrafficFilterCreate, wfDlsPeerBackupConfig=wfDlsPeerBackupConfig, wfDlsPkgMaxSize=wfDlsPkgMaxSize, wfDlsInterfaceTable=wfDlsInterfaceTable, wfDlsMultislotBcasts=wfDlsMultislotBcasts, wfDls=wfDls, wfDlsConnectionTxRnrs=wfDlsConnectionTxRnrs, wfDlsSlotEntry=wfDlsSlotEntry, wfDlsMaxSlotSessions=wfDlsMaxSlotSessions, wfDlsInterfaceClrCallEnable=wfDlsInterfaceClrCallEnable, wfDlsPeerBackupType=wfDlsPeerBackupType, wfDlsLocalDeviceSourceMac=wfDlsLocalDeviceSourceMac, wfDlsLocalDeviceEntry=wfDlsLocalDeviceEntry, wfDlsSapTable=wfDlsSapTable, wfDlsInterfaceEntry=wfDlsInterfaceEntry, wfDlsLocalCircuitEntry=wfDlsLocalCircuitEntry, wfDlsConnectionState=wfDlsConnectionState, wfDlsTrafficFilterReserved=wfDlsTrafficFilterReserved, wfDlsWanKeepaliveTime=wfDlsWanKeepaliveTime, wfDlsSlotHiWaterReset=wfDlsSlotHiWaterReset, wfDlsMacPeerIpAddr=wfDlsMacPeerIpAddr, wfDlsLocalCircuitClientCount=wfDlsLocalCircuitClientCount, wfDlsLocalDeviceCurTimer2=wfDlsLocalDeviceCurTimer2, wfDlsPeerNonPeakInBurstSize=wfDlsPeerNonPeakInBurstSize, wfDlsPeerInBandwidth=wfDlsPeerInBandwidth, wfDlsConnectionRemoteCpName=wfDlsConnectionRemoteCpName, wfDlsMacAddr=wfDlsMacAddr, wfDlsMcastIpBackupConfig=wfDlsMcastIpBackupConfig, wfDlsPeerBackupOutBandwidth=wfDlsPeerBackupOutBandwidth, wfDlsMcastIpBackupHoldDownTime=wfDlsMcastIpBackupHoldDownTime, wfDlsNbTable=wfDlsNbTable, wfDlsTranslateMacDelete=wfDlsTranslateMacDelete, wfDlsLocalCircuitFrameCount=wfDlsLocalCircuitFrameCount, wfDlsPeerNonPeakInBandwidth=wfDlsPeerNonPeakInBandwidth, wfDlsDefaultMacEntry=wfDlsDefaultMacEntry, wfDlsMcastIpTable=wfDlsMcastIpTable, wfDlsPeerNonPeakStartTime=wfDlsPeerNonPeakStartTime, wfDlsLocalCctDefaultMac=wfDlsLocalCctDefaultMac, wfDlsConnectionLocalCpName=wfDlsConnectionLocalCpName, wfDlsNetbiosSessionAliveFilter=wfDlsNetbiosSessionAliveFilter, wfDlsDefaultNbEntry=wfDlsDefaultNbEntry, wfDlsPPriDefaultQBandwidth=wfDlsPPriDefaultQBandwidth, wfDlsConnectionRemoteDLCorr=wfDlsConnectionRemoteDLCorr, wfDlsVirtualRingMtu=wfDlsVirtualRingMtu, wfDlsSapAddr=wfDlsSapAddr, wfDlsSapCredit=wfDlsSapCredit, wfDlsInterfaceLanId=wfDlsInterfaceLanId, wfDlsInternalLanId=wfDlsInternalLanId, wfDlsOutBandwidth=wfDlsOutBandwidth, wfDlsConnectionRemoteIpAddr=wfDlsConnectionRemoteIpAddr, wfDlsTrafficFilterCounter=wfDlsTrafficFilterCounter, wfDlsNonPeakStartDays=wfDlsNonPeakStartDays, wfDlsLocalCircuitSlot=wfDlsLocalCircuitSlot, wfDlsHiWaterMark=wfDlsHiWaterMark, wfDlsSlotGenUpperMAC=wfDlsSlotGenUpperMAC, wfDlsGenDataLength=wfDlsGenDataLength, wfDlsPeerOutBandwidth=wfDlsPeerOutBandwidth, wfDlsConnectionKilled=wfDlsConnectionKilled, wfDlsLocalDeviceTxCredit=wfDlsLocalDeviceTxCredit, wfDlsConnectionTable=wfDlsConnectionTable, wfDlsLocalDeviceCanureachRetries=wfDlsLocalDeviceCanureachRetries, wfDlsTcpInactTime=wfDlsTcpInactTime, wfDlsNonPeakInBurstSize=wfDlsNonPeakInBurstSize, wfDlsTrafficFilterCircuit=wfDlsTrafficFilterCircuit, wfDlsVirtualRing=wfDlsVirtualRing, wfDlsMacEntry=wfDlsMacEntry, wfDlsConnectionLocalIdNum=wfDlsConnectionLocalIdNum, wfDlsDebugLevel2=wfDlsDebugLevel2, wfDlsMacCapablePeerIpAddr=wfDlsMacCapablePeerIpAddr, wfDlsPeerNonPeakEndTime=wfDlsPeerNonPeakEndTime, wfDlsMacAddrTranslation=wfDlsMacAddrTranslation, wfDlsPPriDefaultNumQueues=wfDlsPPriDefaultNumQueues, wfDlsAcceptBadVendorSpecificCapex=wfDlsAcceptBadVendorSpecificCapex, wfDlsLocalDeviceDelete=wfDlsLocalDeviceDelete, wfDlsPeerBackupEndTime=wfDlsPeerBackupEndTime, wfDlsLocalDeviceEnableXidPassthru=wfDlsLocalDeviceEnableXidPassthru, wfDlsVirtualRingBridgeCheck=wfDlsVirtualRingBridgeCheck, wfDlsLocalDeviceCurRetries2=wfDlsLocalDeviceCurRetries2, wfDlsPeerBackupIpAddr=wfDlsPeerBackupIpAddr, wfDlsMcastIpState=wfDlsMcastIpState, wfDlsInterfaceState=wfDlsInterfaceState, wfDlsPeerPPriMaxQBuf=wfDlsPeerPPriMaxQBuf, wfDlsPeerIpAddr=wfDlsPeerIpAddr, wfDlsConnectionDstMac=wfDlsConnectionDstMac, wfDlsConnectionRemoteRxPort=wfDlsConnectionRemoteRxPort, wfDlsConnectionSaps=wfDlsConnectionSaps, wfDlsPkgTO=wfDlsPkgTO, wfDlsLocalDeviceRcvCredit=wfDlsLocalDeviceRcvCredit, wfDlsTrafficFilterEnable=wfDlsTrafficFilterEnable, wfDlsPeerState=wfDlsPeerState, wfDlsSnaFallbackAttempts=wfDlsSnaFallbackAttempts, wfDlsMcastIpBackupType=wfDlsMcastIpBackupType, wfDlsSlotCurrentSessions=wfDlsSlotCurrentSessions, wfDlsPkgWinPercent=wfDlsPkgWinPercent, wfDlsNbName=wfDlsNbName, wfDlsPeerRsvpMode=wfDlsPeerRsvpMode, wfDlsPeerBackupInBurstSize=wfDlsPeerBackupInBurstSize, wfDlsLocalDeviceCanureachTimer=wfDlsLocalDeviceCanureachTimer, wfDlsConnectionSrcMac=wfDlsConnectionSrcMac, wfDlsDebugLevel1=wfDlsDebugLevel1, wfDlsDefaultMacTable=wfDlsDefaultMacTable, wfDlsTranslateDestMacAddr=wfDlsTranslateDestMacAddr, wfDlsPeerDefinedBy=wfDlsPeerDefinedBy, wfDlsTotalCircuits=wfDlsTotalCircuits, wfDlsNonPeakOutBandwidth=wfDlsNonPeakOutBandwidth, wfDlsConnectionRxIFrames=wfDlsConnectionRxIFrames, wfDlsSlotTable=wfDlsSlotTable, wfDlsUnconfPeerReject=wfDlsUnconfPeerReject, wfDlsNonPeakEndTime=wfDlsNonPeakEndTime, wfDlsLocalCircuitDisable=wfDlsLocalCircuitDisable, wfDlsDefaultNbPeerIp=wfDlsDefaultNbPeerIp, wfDlsGenSapIncrement=wfDlsGenSapIncrement, wfDlsLocalDeviceXidValue=wfDlsLocalDeviceXidValue, wfDlsNonPeakInBandwidth=wfDlsNonPeakInBandwidth, wfDlsSlotDelete=wfDlsSlotDelete, wfDlsConnectionRif=wfDlsConnectionRif, wfDlsPeerDelete=wfDlsPeerDelete, wfDlsDefaultMacDelete=wfDlsDefaultMacDelete, wfDlsGenStartupTime=wfDlsGenStartupTime, wfDlsPeerNonPeakStartDays=wfDlsPeerNonPeakStartDays, wfDlsInterfaceDisable=wfDlsInterfaceDisable, wfDlsNonPeakOutBurstSize=wfDlsNonPeakOutBurstSize, wfDlsAllowSpecAddrNbDatagram=wfDlsAllowSpecAddrNbDatagram, wfDlsPPriUnconfPeerDisable=wfDlsPPriUnconfPeerDisable, wfDlsSlotGenDestination=wfDlsSlotGenDestination, wfDlsPeerBackupOutBurstSize=wfDlsPeerBackupOutBurstSize, wfDlsMacQueries=wfDlsMacQueries, wfDlsTcpWindowSize=wfDlsTcpWindowSize, wfDlsTrafficFilterDefinition=wfDlsTrafficFilterDefinition, wfDlsGenIFramePerSec=wfDlsGenIFramePerSec, wfDlsPeerBackupStartTime=wfDlsPeerBackupStartTime, wfDlsLocalDeviceState=wfDlsLocalDeviceState, wfDlsGenVariableDstMAC=wfDlsGenVariableDstMAC, wfDlsNbQueries=wfDlsNbQueries, wfDlsPeerTransportType=wfDlsPeerTransportType, wfDlsDefaultNbTable=wfDlsDefaultNbTable, wfDlsPeerTable=wfDlsPeerTable, wfDlsPPriUnconfPeerMaxQSize=wfDlsPPriUnconfPeerMaxQSize, wfDlsMcastIpBackupIpAddr=wfDlsMcastIpBackupIpAddr, wfDlsDefaultNbName=wfDlsDefaultNbName, wfDlsLocalCircuitTable=wfDlsLocalCircuitTable, wfDlsSlotGenSessions=wfDlsSlotGenSessions, wfDlsNbAgeTime=wfDlsNbAgeTime, wfDlsLocalDeviceLSTimer=wfDlsLocalDeviceLSTimer, wfDlsGenMacAddrOffset=wfDlsGenMacAddrOffset, wfDlsTrafficFilterRuleNumber=wfDlsTrafficFilterRuleNumber, wfDlsMcastIpBackupEndTime=wfDlsMcastIpBackupEndTime, wfDlsPeerPPriClearStats=wfDlsPeerPPriClearStats, wfDlsNbEntry=wfDlsNbEntry, wfDlsSlotNumber=wfDlsSlotNumber, wfDlsMcastIpDelete=wfDlsMcastIpDelete, wfDlsLocalCircuitCct=wfDlsLocalCircuitCct, wfDlsConnectionLocalTxPort=wfDlsConnectionLocalTxPort, wfDlsLocalDeviceDestSap=wfDlsLocalDeviceDestSap, wfDlsMcastIpSlots=wfDlsMcastIpSlots, wfDlsOriginDestMacAddr=wfDlsOriginDestMacAddr, wfDlsLocalDeviceAddr=wfDlsLocalDeviceAddr, wfDlsNonPeakStartTime=wfDlsNonPeakStartTime, wfDlsPPriDisable=wfDlsPPriDisable, wfDlsSlotHiWaterSessions=wfDlsSlotHiWaterSessions, wfDlsInterfaceDelete=wfDlsInterfaceDelete, wfDlsRfc=wfDlsRfc, wfDlsMcastIpEntry=wfDlsMcastIpEntry, wfDlsTrafficFilterTable=wfDlsTrafficFilterTable, wfDlsInterfaceDlcType=wfDlsInterfaceDlcType, wfDlsInBandwidth=wfDlsInBandwidth, wfDlsRsvpSupport=wfDlsRsvpSupport, wfDlsConnectionCct=wfDlsConnectionCct, wfDlsLocalDeviceLSRetries=wfDlsLocalDeviceLSRetries, wfDlsPeerType=wfDlsPeerType, wfDlsPeerBackupInBandwidth=wfDlsPeerBackupInBandwidth, wfDlsPeerBackupHoldDownTime=wfDlsPeerBackupHoldDownTime, wfDlsConnectionRxRnrs=wfDlsConnectionRxRnrs, wfDlsTrafficFilterName=wfDlsTrafficFilterName, wfDlsTrafficFilterStatus=wfDlsTrafficFilterStatus, wfDlsDefaultNbDelete=wfDlsDefaultNbDelete, wfDlsConnectionRemoteBlockNum=wfDlsConnectionRemoteBlockNum, wfDlsGenToolTable=wfDlsGenToolTable, wfDlsTranslateMacTable=wfDlsTranslateMacTable, wfDlsDelete=wfDlsDelete, wfDlsInterfaceBridgeId=wfDlsInterfaceBridgeId, wfDlsConnectionRemoteIdNum=wfDlsConnectionRemoteIdNum, wfDlsLocalDeviceDisable=wfDlsLocalDeviceDisable, wfDlsCurrentMemory=wfDlsCurrentMemory, wfDlsNbPeerIpAddr=wfDlsNbPeerIpAddr, wfDlsDefaultMacPeerIp=wfDlsDefaultMacPeerIp, wfDlsBridgeId=wfDlsBridgeId, wfDlsSapEntry=wfDlsSapEntry, wfDlsPeerNonPeakOutBandwidth=wfDlsPeerNonPeakOutBandwidth, wfDlsConnectionLocalIpAddr=wfDlsConnectionLocalIpAddr, wfDlsNetbiosFallbackTime=wfDlsNetbiosFallbackTime, wfDlsMcastIpAddr=wfDlsMcastIpAddr, wfDlsInterfaceExplorerType=wfDlsInterfaceExplorerType, wfDlsLocalDeviceCct=wfDlsLocalDeviceCct, wfDlsInterfaceSdlcMode=wfDlsInterfaceSdlcMode, wfDlsMacAgeTime=wfDlsMacAgeTime, wfDlsDiagSwitch=wfDlsDiagSwitch, wfDlsInterfaceNbBcastDgramReduce=wfDlsInterfaceNbBcastDgramReduce, wfDlsPeerInteroperability=wfDlsPeerInteroperability, wfDlsLocalDeviceTable=wfDlsLocalDeviceTable, wfDlsGenToolEntry=wfDlsGenToolEntry, wfDlsGenDefaultUpperMAC=wfDlsGenDefaultUpperMAC, wfDlsPeerPPriDisable=wfDlsPeerPPriDisable, wfDlsPeerInBurstSize=wfDlsPeerInBurstSize, wfDlsConnectionLocalDLCorr=wfDlsConnectionLocalDLCorr, wfDlsOutBurstSize=wfDlsOutBurstSize, wfDlsLocalCircuitState=wfDlsLocalCircuitState, wfDlsInitialPacingWindow=wfDlsInitialPacingWindow, wfDlsSlotIpAddr=wfDlsSlotIpAddr, wfDlsTcpInactMethod=wfDlsTcpInactMethod, wfDlsMcastIpBackupStartTime=wfDlsMcastIpBackupStartTime, wfDlsGenDefaultSessions=wfDlsGenDefaultSessions, wfDlsConnectionLocalBlockNum=wfDlsConnectionLocalBlockNum, wfDlsGenDisable=wfDlsGenDisable, wfDlsMslotDLCBcasts=wfDlsMslotDLCBcasts, wfDlsTranslateMacEntry=wfDlsTranslateMacEntry, wfDlsWanKeepaliveRetries=wfDlsWanKeepaliveRetries, wfDlsPeerBackupMaxUpTime=wfDlsPeerBackupMaxUpTime, wfDlsPeerNonPeakOutBurstSize=wfDlsPeerNonPeakOutBurstSize, wfDlsNbCapablePeerIpAddr=wfDlsNbCapablePeerIpAddr, wfDlsLocalCircuitDelete=wfDlsLocalCircuitDelete, wfDlsMaxAllowedMemory=wfDlsMaxAllowedMemory, wfDlsDisable=wfDlsDisable, wfDlsInterfaceCircuit=wfDlsInterfaceCircuit, wfDlsWanKeepaliveRetryTimer=wfDlsWanKeepaliveRetryTimer, wfDlsPeerOutBurstSize=wfDlsPeerOutBurstSize, wfDlsLocalDeviceDestMac=wfDlsLocalDeviceDestMac, wfDlsConnectionEntry=wfDlsConnectionEntry, wfDlsPeerRsvpSlots=wfDlsPeerRsvpSlots, wfDlsLocalDeviceSourceSap=wfDlsLocalDeviceSourceSap, wfDlsPeerPPriMaxQSize=wfDlsPeerPPriMaxQSize, wfDlsTrafficFilterEntry=wfDlsTrafficFilterEntry, wfDlsMacTable=wfDlsMacTable, wfDlsMcastIpBackupMaxUpTime=wfDlsMcastIpBackupMaxUpTime)
