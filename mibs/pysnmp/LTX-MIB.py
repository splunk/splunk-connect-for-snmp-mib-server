#
# PySNMP MIB module LTX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LTX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:58:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, ModuleIdentity, enterprises, Integer32, Counter32, MibIdentifier, Unsigned32, iso, Bits, mib_2, TimeTicks, IpAddress, ObjectIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ModuleIdentity", "enterprises", "Integer32", "Counter32", "MibIdentifier", "Unsigned32", "iso", "Bits", "mib-2", "TimeTicks", "IpAddress", "ObjectIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ltx = MibIdentifier((1, 3, 6, 1, 4, 1, 244))
ltxlna = MibIdentifier((1, 3, 6, 1, 4, 1, 244, 10))
ltxlrp = MibIdentifier((1, 3, 6, 1, 4, 1, 244, 11))
ltxlsw = MibIdentifier((1, 3, 6, 1, 4, 1, 244, 12))
class OwnerString(DisplayString):
    pass

ltxLRPCommInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 244, 11, 1))
ltxLRPHostInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 244, 11, 2))
ltxLRPGroupInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 244, 11, 3))
ltxLRPMaxInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 244, 11, 4))
ltxLRPRoverInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 244, 11, 5))
ltxLRPMiscInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 244, 11, 6))
ltxLRPBadPkt = MibIdentifier((1, 3, 6, 1, 4, 1, 244, 11, 7))
ltxLRPEnetIPMap = MibIdentifier((1, 3, 6, 1, 4, 1, 244, 11, 8))
ltxLRPTopNProt = MibIdentifier((1, 3, 6, 1, 4, 1, 244, 11, 9))
ltxLRPDupIPDet = MibIdentifier((1, 3, 6, 1, 4, 1, 244, 11, 10))
ltxLRPNewIPDet = MibIdentifier((1, 3, 6, 1, 4, 1, 244, 11, 11))
ltxLRPIPChgDet = MibIdentifier((1, 3, 6, 1, 4, 1, 244, 11, 12))
commInfoTable = MibTable((1, 3, 6, 1, 4, 1, 244, 11, 1, 1), )
if mibBuilder.loadTexts: commInfoTable.setStatus('mandatory')
commInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 244, 11, 1, 1, 1), ).setIndexNames((0, "LTX-MIB", "commInfoIndex"))
if mibBuilder.loadTexts: commInfoEntry.setStatus('mandatory')
commInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 244, 11, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commInfoIndex.setStatus('mandatory')
commInfoName = MibTableColumn((1, 3, 6, 1, 4, 1, 244, 11, 1, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commInfoName.setStatus('mandatory')
commInfoGet = MibTableColumn((1, 3, 6, 1, 4, 1, 244, 11, 1, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commInfoGet.setStatus('mandatory')
commInfoSet = MibTableColumn((1, 3, 6, 1, 4, 1, 244, 11, 1, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commInfoSet.setStatus('mandatory')
commInfoTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 244, 11, 1, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commInfoTrap.setStatus('mandatory')
hostInfoTable = MibTable((1, 3, 6, 1, 4, 1, 244, 11, 2, 1), )
if mibBuilder.loadTexts: hostInfoTable.setStatus('mandatory')
hostInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 244, 11, 2, 1, 1), ).setIndexNames((0, "LTX-MIB", "hostInfoIndex"))
if mibBuilder.loadTexts: hostInfoEntry.setStatus('mandatory')
hostInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 244, 11, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostInfoIndex.setStatus('mandatory')
hostInfoName = MibTableColumn((1, 3, 6, 1, 4, 1, 244, 11, 2, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostInfoName.setStatus('mandatory')
hostInfoIP = MibTableColumn((1, 3, 6, 1, 4, 1, 244, 11, 2, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostInfoIP.setStatus('mandatory')
hostInfoComm = MibTableColumn((1, 3, 6, 1, 4, 1, 244, 11, 2, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostInfoComm.setStatus('mandatory')
groupInfoTable = MibTable((1, 3, 6, 1, 4, 1, 244, 11, 3, 1), )
if mibBuilder.loadTexts: groupInfoTable.setStatus('mandatory')
groupInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 244, 11, 3, 1, 1), ).setIndexNames((0, "LTX-MIB", "groupInfoIndex"))
if mibBuilder.loadTexts: groupInfoEntry.setStatus('mandatory')
groupInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 244, 11, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: groupInfoIndex.setStatus('mandatory')
groupInfoCapFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 244, 11, 3, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: groupInfoCapFilt.setStatus('mandatory')
groupInfoHostTopN = MibTableColumn((1, 3, 6, 1, 4, 1, 244, 11, 3, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: groupInfoHostTopN.setStatus('mandatory')
groupInfoMatrix = MibTableColumn((1, 3, 6, 1, 4, 1, 244, 11, 3, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: groupInfoMatrix.setStatus('mandatory')
maxHTS = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: maxHTS.setStatus('mandatory')
maxMTS = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: maxMTS.setStatus('mandatory')
maxBuckets = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: maxBuckets.setStatus('mandatory')
maxLogs = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: maxLogs.setStatus('mandatory')
maxTopN = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: maxTopN.setStatus('mandatory')
maxBuff = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: maxBuff.setStatus('mandatory')
roverControl = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roverControl.setStatus('mandatory')
roverSeconds = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 5, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roverSeconds.setStatus('mandatory')
roverTErrs = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 5, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roverTErrs.setStatus('mandatory')
roverBPS = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 5, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roverBPS.setStatus('mandatory')
roverEPS = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 5, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roverEPS.setStatus('mandatory')
roverPPS = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 5, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roverPPS.setStatus('mandatory')
roverUtil = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 5, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roverUtil.setStatus('mandatory')
roverTCRC = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 5, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roverTCRC.setStatus('mandatory')
roverTRunt = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 5, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roverTRunt.setStatus('mandatory')
roverTGiant = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 5, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roverTGiant.setStatus('mandatory')
roverTColl = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 5, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roverTColl.setStatus('mandatory')
roverTJabb = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 5, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roverTJabb.setStatus('mandatory')
miscInfoPortTable = MibTable((1, 3, 6, 1, 4, 1, 244, 11, 6, 1), )
if mibBuilder.loadTexts: miscInfoPortTable.setStatus('mandatory')
miscInfoPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 244, 11, 6, 1, 1), ).setIndexNames((0, "LTX-MIB", "miscInfoPortIndex"))
if mibBuilder.loadTexts: miscInfoPortEntry.setStatus('mandatory')
miscInfoPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 244, 11, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscInfoPortIndex.setStatus('mandatory')
miscInfoPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 244, 11, 6, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscInfoPortName.setStatus('mandatory')
miscInfoPortIP = MibTableColumn((1, 3, 6, 1, 4, 1, 244, 11, 6, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscInfoPortIP.setStatus('mandatory')
miscInfoPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 244, 11, 6, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscInfoPortMask.setStatus('mandatory')
miscInfoDate = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 6, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscInfoDate.setStatus('mandatory')
miscInfoTMO = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 6, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscInfoTMO.setStatus('mandatory')
miscInfoRefresh = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 6, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscInfoRefresh.setStatus('mandatory')
miscInfoBaud = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 6, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscInfoBaud.setStatus('mandatory')
miscInfoTelnetControl = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 6, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscInfoTelnetControl.setStatus('mandatory')
miscInfoSNMPPort = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 6, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscInfoSNMPPort.setStatus('mandatory')
miscInfoAuthenTrap = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 6, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscInfoAuthenTrap.setStatus('mandatory')
miscInfoColdstartTrap = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 6, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscInfoColdstartTrap.setStatus('mandatory')
miscInfoLRPName = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 6, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscInfoLRPName.setStatus('mandatory')
miscInfoGateway = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 6, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscInfoGateway.setStatus('mandatory')
miscInfoRoverPort = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 6, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: miscInfoRoverPort.setStatus('mandatory')
miscInfoReset = MibScalar((1, 3, 6, 1, 4, 1, 244, 11, 6, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscInfoReset.setStatus('mandatory')
mibBuilder.exportSymbols("LTX-MIB", roverTGiant=roverTGiant, roverSeconds=roverSeconds, groupInfoCapFilt=groupInfoCapFilt, roverTJabb=roverTJabb, ltxlsw=ltxlsw, miscInfoBaud=miscInfoBaud, groupInfoTable=groupInfoTable, roverEPS=roverEPS, miscInfoColdstartTrap=miscInfoColdstartTrap, miscInfoReset=miscInfoReset, ltxlna=ltxlna, ltxLRPIPChgDet=ltxLRPIPChgDet, commInfoEntry=commInfoEntry, hostInfoComm=hostInfoComm, ltxLRPMaxInfo=ltxLRPMaxInfo, groupInfoIndex=groupInfoIndex, roverControl=roverControl, miscInfoRefresh=miscInfoRefresh, miscInfoLRPName=miscInfoLRPName, ltxLRPTopNProt=ltxLRPTopNProt, miscInfoDate=miscInfoDate, miscInfoTMO=miscInfoTMO, ltxLRPNewIPDet=ltxLRPNewIPDet, commInfoTrap=commInfoTrap, commInfoIndex=commInfoIndex, ltxLRPCommInfo=ltxLRPCommInfo, ltxLRPEnetIPMap=ltxLRPEnetIPMap, commInfoName=commInfoName, roverTRunt=roverTRunt, miscInfoPortIndex=miscInfoPortIndex, miscInfoSNMPPort=miscInfoSNMPPort, roverTCRC=roverTCRC, commInfoGet=commInfoGet, groupInfoEntry=groupInfoEntry, maxBuckets=maxBuckets, ltxLRPGroupInfo=ltxLRPGroupInfo, groupInfoMatrix=groupInfoMatrix, maxBuff=maxBuff, ltxLRPRoverInfo=ltxLRPRoverInfo, miscInfoPortEntry=miscInfoPortEntry, miscInfoPortTable=miscInfoPortTable, miscInfoPortIP=miscInfoPortIP, ltx=ltx, groupInfoHostTopN=groupInfoHostTopN, commInfoTable=commInfoTable, OwnerString=OwnerString, miscInfoPortMask=miscInfoPortMask, ltxLRPDupIPDet=ltxLRPDupIPDet, miscInfoGateway=miscInfoGateway, commInfoSet=commInfoSet, maxLogs=maxLogs, roverTColl=roverTColl, roverPPS=roverPPS, hostInfoIP=hostInfoIP, miscInfoRoverPort=miscInfoRoverPort, hostInfoTable=hostInfoTable, hostInfoEntry=hostInfoEntry, hostInfoIndex=hostInfoIndex, roverTErrs=roverTErrs, miscInfoPortName=miscInfoPortName, ltxlrp=ltxlrp, ltxLRPBadPkt=ltxLRPBadPkt, hostInfoName=hostInfoName, roverUtil=roverUtil, ltxLRPHostInfo=ltxLRPHostInfo, ltxLRPMiscInfo=ltxLRPMiscInfo, maxHTS=maxHTS, miscInfoAuthenTrap=miscInfoAuthenTrap, miscInfoTelnetControl=miscInfoTelnetControl, maxTopN=maxTopN, maxMTS=maxMTS, roverBPS=roverBPS)
