#
# PySNMP MIB module TERAWAVE-teraSonet-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TERAWAVE-teraSonet-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:08:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, NotificationType, Bits, Counter64, Gauge32, ObjectIdentity, enterprises, Counter32, Unsigned32, IpAddress, MibIdentifier, TimeTicks, Integer32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "NotificationType", "Bits", "Counter64", "Gauge32", "ObjectIdentity", "enterprises", "Counter32", "Unsigned32", "IpAddress", "MibIdentifier", "TimeTicks", "Integer32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
terawave = MibIdentifier((1, 3, 6, 1, 4, 1, 4513))
teraSonetGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 10))
teraSonetMediumTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 1), )
if mibBuilder.loadTexts: teraSonetMediumTable.setStatus('mandatory')
teraSonetMediumTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 1, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"))
if mibBuilder.loadTexts: teraSonetMediumTableEntry.setStatus('mandatory')
teraSonetMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("sts1STM0", 1), ("sts3STM1", 2), ("sts3cSTM1", 3), ("sts12STM4", 4), ("sts12cSTM4", 5), ("sts48cSTM16", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetMode.setStatus('mandatory')
teraSonetStm1Mapping = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("au3", 1), ("au4", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraSonetStm1Mapping.setStatus('mandatory')
teraSonetSDThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraSonetSDThreshold.setStatus('mandatory')
teraSonetSFThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraSonetSFThreshold.setStatus('mandatory')
teraSonetMediumTotalTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetMediumTotalTimeElapsed.setStatus('mandatory')
teraSonetMediumValidTotalIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetMediumValidTotalIntervals.setStatus('mandatory')
teraSonetMediumInvalidTotalIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetMediumInvalidTotalIntervals.setStatus('mandatory')
teraSonetSectionTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 2), )
if mibBuilder.loadTexts: teraSonetSectionTable.setStatus('mandatory')
teraSonetSectionTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 2, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"))
if mibBuilder.loadTexts: teraSonetSectionTableEntry.setStatus('mandatory')
teraSonetSectionTraceLenTx = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("number-16", 1), ("number-64", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraSonetSectionTraceLenTx.setStatus('mandatory')
teraSonetSectionTraceTx = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 2, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraSonetSectionTraceTx.setStatus('mandatory')
teraSonetSectionTraceLenRx = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("number-16", 1), ("number-64", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetSectionTraceLenRx.setStatus('mandatory')
teraSonetSectionTraceRx = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetSectionTraceRx.setStatus('mandatory')
teraSonetPathOverheadTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 3), )
if mibBuilder.loadTexts: teraSonetPathOverheadTable.setStatus('mandatory')
teraSonetPathOverheadTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 3, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"))
if mibBuilder.loadTexts: teraSonetPathOverheadTableEntry.setStatus('mandatory')
teraSonetPathSigLabelTx = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraSonetPathSigLabelTx.setStatus('mandatory')
teraSonetPathTraceLenTx = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("number-16", 1), ("number-64", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraSonetPathTraceLenTx.setStatus('mandatory')
teraSonetPathTraceTx = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 3, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraSonetPathTraceTx.setStatus('mandatory')
teraSonetPathSigLabelRx = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetPathSigLabelRx.setStatus('mandatory')
teraSonetPathTraceLenRx = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("number-16", 1), ("number-64", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetPathTraceLenRx.setStatus('mandatory')
teraSonetPathTraceRx = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 3, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetPathTraceRx.setStatus('mandatory')
teraSonetMapperConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 4), )
if mibBuilder.loadTexts: teraSonetMapperConfigTable.setStatus('mandatory')
teraSonetMapperConfigTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 4, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"))
if mibBuilder.loadTexts: teraSonetMapperConfigTableEntry.setStatus('mandatory')
teraSonetMapperType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("ds3", 1), ("vc12", 2), ("vt1-5", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraSonetMapperType.setStatus('mandatory')
teraSonetMapperLoopbackConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraSonetMapperLoopbackConfig.setStatus('mandatory')
teraSonetPathIdTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 5), )
if mibBuilder.loadTexts: teraSonetPathIdTable.setStatus('mandatory')
teraSonetPathIdTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 5, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"), (0, "TERAWAVE-teraSonet-MIB", "teraSonetPathIdSTS1"))
if mibBuilder.loadTexts: teraSonetPathIdTableEntry.setStatus('mandatory')
teraSonetPathIdSTS1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetPathIdSTS1.setStatus('mandatory')
teraSonetPathIdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetPathIdIfIndex.setStatus('mandatory')
teraSonetVTIdTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 6), )
if mibBuilder.loadTexts: teraSonetVTIdTable.setStatus('mandatory')
teraSonetVTIdTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 6, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"), (0, "TERAWAVE-teraSonet-MIB", "teraSonetVTIdSTS1"), (0, "TERAWAVE-teraSonet-MIB", "teraSonetVTIdVTG"), (0, "TERAWAVE-teraSonet-MIB", "teraSonetVTIdVT"))
if mibBuilder.loadTexts: teraSonetVTIdTableEntry.setStatus('mandatory')
teraSonetVTIdSTS1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraSonetVTIdSTS1.setStatus('mandatory')
teraSonetVTIdVTG = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraSonetVTIdVTG.setStatus('mandatory')
teraSonetVTIdVT = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraSonetVTIdVT.setStatus('mandatory')
teraSonetVTIdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetVTIdIfIndex.setStatus('mandatory')
teraSonetSectionCurrTotalTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 7), )
if mibBuilder.loadTexts: teraSonetSectionCurrTotalTable.setStatus('mandatory')
teraSonetSectionCurrTotalTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 7, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"))
if mibBuilder.loadTexts: teraSonetSectionCurrTotalTableEntry.setStatus('mandatory')
teraSonetSectionCurrTotalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetSectionCurrTotalStatus.setStatus('mandatory')
teraSonetSectionCurrTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 7, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetSectionCurrTotalESs.setStatus('mandatory')
teraSonetSectionCurrTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 7, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetSectionCurrTotalSESs.setStatus('mandatory')
teraSonetSectionCurrTotalSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 7, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetSectionCurrTotalSEFSs.setStatus('mandatory')
teraSonetSectionCurrTotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 7, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetSectionCurrTotalCVs.setStatus('mandatory')
teraSonetTotalPerfStat = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraSonetTotalPerfStat.setStatus('mandatory')
teraSonetSectionTotalTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 8), )
if mibBuilder.loadTexts: teraSonetSectionTotalTable.setStatus('mandatory')
teraSonetSectionTotalTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 8, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"), (0, "TERAWAVE-teraSonet-MIB", "teraSonetSectionTotalNumber"))
if mibBuilder.loadTexts: teraSonetSectionTotalTableEntry.setStatus('mandatory')
teraSonetSectionTotalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetSectionTotalNumber.setStatus('mandatory')
teraSonetSectionTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 8, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetSectionTotalESs.setStatus('mandatory')
teraSonetSectionTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 8, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetSectionTotalSESs.setStatus('mandatory')
teraSonetSectionTotalSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 8, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetSectionTotalSEFSs.setStatus('mandatory')
teraSonetSectionTotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 8, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetSectionTotalCVs.setStatus('mandatory')
teraSonetSectionTotalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetSectionTotalValidData.setStatus('mandatory')
teraSonetLineCurrTotalTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 9), )
if mibBuilder.loadTexts: teraSonetLineCurrTotalTable.setStatus('mandatory')
teraSonetLineCurrTotalTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 9, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"))
if mibBuilder.loadTexts: teraSonetLineCurrTotalTableEntry.setStatus('mandatory')
teraSonetLineCurrTotalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetLineCurrTotalStatus.setStatus('mandatory')
teraSonetLineCurrTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 9, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetLineCurrTotalESs.setStatus('mandatory')
teraSonetLineCurrTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 9, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetLineCurrTotalSESs.setStatus('mandatory')
teraSonetLineCurrTotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 9, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetLineCurrTotalCVs.setStatus('mandatory')
teraSonetLineCurrTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 9, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetLineCurrTotalUASs.setStatus('mandatory')
teraSonetLineTotalTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 10), )
if mibBuilder.loadTexts: teraSonetLineTotalTable.setStatus('mandatory')
teraSonetLineTotalTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 10, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"), (0, "TERAWAVE-teraSonet-MIB", "teraSonetLineTotalNumber"))
if mibBuilder.loadTexts: teraSonetLineTotalTableEntry.setStatus('mandatory')
teraSonetLineTotalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetLineTotalNumber.setStatus('mandatory')
teraSonetLineTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 10, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetLineTotalESs.setStatus('mandatory')
teraSonetLineTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 10, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetLineTotalSESs.setStatus('mandatory')
teraSonetLineTotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 10, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetLineTotalCVs.setStatus('mandatory')
teraSonetLineTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 10, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetLineTotalUASs.setStatus('mandatory')
teraSonetLineTotalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetLineTotalValidData.setStatus('mandatory')
teraSonetFarEndLineCurrTotalTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 11), )
if mibBuilder.loadTexts: teraSonetFarEndLineCurrTotalTable.setStatus('mandatory')
teraSonetFarEndLineCurrTotalTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 11, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"))
if mibBuilder.loadTexts: teraSonetFarEndLineCurrTotalTableEntry.setStatus('mandatory')
teraSonetFarEndLineCurrTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 11, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndLineCurrTotalESs.setStatus('mandatory')
teraSonetFarEndLineCurrTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 11, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndLineCurrTotalSESs.setStatus('mandatory')
teraSonetFarEndLineCurrTotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 11, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndLineCurrTotalCVs.setStatus('mandatory')
teraSonetFarEndLineCurrTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 11, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndLineCurrTotalUASs.setStatus('mandatory')
teraSonetFarEndLineTotalTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 12), )
if mibBuilder.loadTexts: teraSonetFarEndLineTotalTable.setStatus('mandatory')
teraSonetFarEndLineTotalTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 12, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"), (0, "TERAWAVE-teraSonet-MIB", "teraSonetFarEndLineTotalNumber"))
if mibBuilder.loadTexts: teraSonetFarEndLineTotalTableEntry.setStatus('mandatory')
teraSonetFarEndLineTotalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndLineTotalNumber.setStatus('mandatory')
teraSonetFarEndLineTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 12, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndLineTotalESs.setStatus('mandatory')
teraSonetFarEndLineTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 12, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndLineTotalSESs.setStatus('mandatory')
teraSonetFarEndLineTotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 12, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndLineTotalCVs.setStatus('mandatory')
teraSonetFarEndLineTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 12, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndLineTotalUASs.setStatus('mandatory')
teraSonetFarEndLineTotalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 12, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndLineTotalValidData.setStatus('mandatory')
teraSonetPathCurrTotalTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 13), )
if mibBuilder.loadTexts: teraSonetPathCurrTotalTable.setStatus('mandatory')
teraSonetPathCurrTotalTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 13, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"))
if mibBuilder.loadTexts: teraSonetPathCurrTotalTableEntry.setStatus('mandatory')
teraSonetPathCurrTotalWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5))).clone(namedValues=NamedValues(("sts1", 1), ("sts3cSTM1", 2), ("sts12cSTM4", 3), ("sts48cSTM16", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetPathCurrTotalWidth.setStatus('mandatory')
teraSonetPathCurrTotalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 62))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetPathCurrTotalStatus.setStatus('mandatory')
teraSonetPathCurrTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 13, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetPathCurrTotalESs.setStatus('mandatory')
teraSonetPathCurrTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 13, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetPathCurrTotalSESs.setStatus('mandatory')
teraSonetPathCurrTotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 13, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetPathCurrTotalCVs.setStatus('mandatory')
teraSonetPathCurrTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 13, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetPathCurrTotalUASs.setStatus('mandatory')
teraSonetPathTotalTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 14), )
if mibBuilder.loadTexts: teraSonetPathTotalTable.setStatus('mandatory')
teraSonetPathTotalTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 14, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"), (0, "TERAWAVE-teraSonet-MIB", "teraSonetPathTotalNumber"))
if mibBuilder.loadTexts: teraSonetPathTotalTableEntry.setStatus('mandatory')
teraSonetPathTotalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetPathTotalNumber.setStatus('mandatory')
teraSonetPathTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 14, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetPathTotalESs.setStatus('mandatory')
teraSonetPathTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 14, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetPathTotalSESs.setStatus('mandatory')
teraSonetPathTotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 14, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetPathTotalCVs.setStatus('mandatory')
teraSonetPathTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 14, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetPathTotalUASs.setStatus('mandatory')
teraSonetPathTotalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 14, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetPathTotalValidData.setStatus('mandatory')
teraSonetFarEndPathCurrTotalTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 15), )
if mibBuilder.loadTexts: teraSonetFarEndPathCurrTotalTable.setStatus('mandatory')
teraSonetFarEndPathCurrTotalTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 15, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"))
if mibBuilder.loadTexts: teraSonetFarEndPathCurrTotalTableEntry.setStatus('mandatory')
teraSonetFarEndPathCurrTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 15, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndPathCurrTotalESs.setStatus('mandatory')
teraSonetFarEndPathCurrTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 15, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndPathCurrTotalSESs.setStatus('mandatory')
teraSonetFarEndPathCurrTotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 15, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndPathCurrTotalCVs.setStatus('mandatory')
teraSonetFarEndPathCurrTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 15, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndPathCurrTotalUASs.setStatus('mandatory')
teraSonetFarEndPathTotalTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 16), )
if mibBuilder.loadTexts: teraSonetFarEndPathTotalTable.setStatus('mandatory')
teraSonetFarEndPathTotalTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 16, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"), (0, "TERAWAVE-teraSonet-MIB", "teraSonetFarEndPathTotalNumber"))
if mibBuilder.loadTexts: teraSonetFarEndPathTotalTableEntry.setStatus('mandatory')
teraSonetFarEndPathTotalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndPathTotalNumber.setStatus('mandatory')
teraSonetFarEndPathTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 16, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndPathTotalESs.setStatus('mandatory')
teraSonetFarEndPathTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 16, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndPathTotalSESs.setStatus('mandatory')
teraSonetFarEndPathTotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 16, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndPathTotalCVs.setStatus('mandatory')
teraSonetFarEndPathTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 16, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndPathTotalUASs.setStatus('mandatory')
teraSonetFarEndPathTotalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 16, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndPathTotalValidData.setStatus('mandatory')
teraSonetVTCurrTotalTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 17), )
if mibBuilder.loadTexts: teraSonetVTCurrTotalTable.setStatus('mandatory')
teraSonetVTCurrTotalTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 17, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"))
if mibBuilder.loadTexts: teraSonetVTCurrTotalTableEntry.setStatus('mandatory')
teraSonetVTCurrTotalWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("vtWidth15VC11", 1), ("vtWidth2VC12", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetVTCurrTotalWidth.setStatus('mandatory')
teraSonetVTCurrTotalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 17, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 126))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetVTCurrTotalStatus.setStatus('mandatory')
teraSonetVTCurrTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 17, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetVTCurrTotalESs.setStatus('mandatory')
teraSonetVTCurrTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 17, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetVTCurrTotalSESs.setStatus('mandatory')
teraSonetVTCurrTotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 17, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetVTCurrTotalCVs.setStatus('mandatory')
teraSonetVTCurrTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 17, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetVTCurrTotalUASs.setStatus('mandatory')
teraSonetVTCurrTotalPerfStat = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 17, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("clear", 2), ("clrall", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraSonetVTCurrTotalPerfStat.setStatus('mandatory')
teraSonetVTTotalTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 18), )
if mibBuilder.loadTexts: teraSonetVTTotalTable.setStatus('mandatory')
teraSonetVTTotalTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 18, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"), (0, "TERAWAVE-teraSonet-MIB", "teraSonetVTTotalNumber"))
if mibBuilder.loadTexts: teraSonetVTTotalTableEntry.setStatus('mandatory')
teraSonetVTTotalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetVTTotalNumber.setStatus('mandatory')
teraSonetVTTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 18, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetVTTotalESs.setStatus('mandatory')
teraSonetVTTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 18, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetVTTotalSESs.setStatus('mandatory')
teraSonetVTTotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 18, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetVTTotalCVs.setStatus('mandatory')
teraSonetVTTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 18, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetVTTotalUASs.setStatus('mandatory')
teraSonetVTTotalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 18, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetVTTotalValidData.setStatus('mandatory')
teraSonetFarEndVTCurrTotalTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 19), )
if mibBuilder.loadTexts: teraSonetFarEndVTCurrTotalTable.setStatus('mandatory')
teraSonetFarEndVTCurrTotalTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 19, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"))
if mibBuilder.loadTexts: teraSonetFarEndVTCurrTotalTableEntry.setStatus('mandatory')
teraSonetFarEndVTCurrTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 19, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndVTCurrTotalESs.setStatus('mandatory')
teraSonetFarEndVTCurrTotalSES = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 19, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndVTCurrTotalSES.setStatus('mandatory')
teraSonetFarEndVTCurrTotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 19, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndVTCurrTotalCVs.setStatus('mandatory')
teraSonetFarEndVTCurrTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 19, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndVTCurrTotalUASs.setStatus('mandatory')
teraSonetFarEndVTTotalTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 20), )
if mibBuilder.loadTexts: teraSonetFarEndVTTotalTable.setStatus('mandatory')
teraSonetFarEndVTTotalTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 20, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"), (0, "TERAWAVE-teraSonet-MIB", "teraSonetFarEndVTTotalNumber"))
if mibBuilder.loadTexts: teraSonetFarEndVTTotalTableEntry.setStatus('mandatory')
teraSonetFarEndVTTotalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndVTTotalNumber.setStatus('mandatory')
teraSonetFarEndVTTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 20, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndVTTotalESs.setStatus('mandatory')
teraSonetFarEndVTTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 20, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndVTTotalSESs.setStatus('mandatory')
teraSonetFarEndVTTotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 20, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndVTTotalCVs.setStatus('mandatory')
teraSonetFarEndVTTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 20, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndVTTotalUASs.setStatus('mandatory')
teraSonetFarEndVTTotalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 20, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSonetFarEndVTTotalValidData.setStatus('mandatory')
teraSonetVTConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 10, 21), )
if mibBuilder.loadTexts: teraSonetVTConfigTable.setStatus('mandatory')
teraSonetVTConfigTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 10, 21, 1), ).setIndexNames((0, "TERAWAVE-teraSonet-MIB", "ifIndex"))
if mibBuilder.loadTexts: teraSonetVTConfigTableEntry.setStatus('mandatory')
teraSonetVTConfigERDIEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 21, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraSonetVTConfigERDIEnable.setStatus('mandatory')
teraSonetVTLoopbackConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 10, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noLoop", 1), ("lineLoop", 2), ("diagLoop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraSonetVTLoopbackConfig.setStatus('mandatory')
mibBuilder.exportSymbols("TERAWAVE-teraSonet-MIB", teraSonetVTTotalSESs=teraSonetVTTotalSESs, teraSonetPathIdSTS1=teraSonetPathIdSTS1, teraSonetSectionTotalSEFSs=teraSonetSectionTotalSEFSs, teraSonetVTConfigTableEntry=teraSonetVTConfigTableEntry, teraSonetLineCurrTotalESs=teraSonetLineCurrTotalESs, teraSonetFarEndPathTotalTable=teraSonetFarEndPathTotalTable, teraSonetMapperType=teraSonetMapperType, teraSonetPathSigLabelRx=teraSonetPathSigLabelRx, teraSonetLineTotalTableEntry=teraSonetLineTotalTableEntry, teraSonetVTCurrTotalWidth=teraSonetVTCurrTotalWidth, teraSonetFarEndPathCurrTotalESs=teraSonetFarEndPathCurrTotalESs, teraSonetPathTotalValidData=teraSonetPathTotalValidData, teraSonetFarEndVTCurrTotalESs=teraSonetFarEndVTCurrTotalESs, teraSonetPathTotalSESs=teraSonetPathTotalSESs, teraSonetFarEndLineTotalCVs=teraSonetFarEndLineTotalCVs, teraSonetFarEndVTTotalUASs=teraSonetFarEndVTTotalUASs, teraSonetMapperLoopbackConfig=teraSonetMapperLoopbackConfig, teraSonetPathCurrTotalUASs=teraSonetPathCurrTotalUASs, teraSonetMediumTableEntry=teraSonetMediumTableEntry, teraSonetLineCurrTotalUASs=teraSonetLineCurrTotalUASs, teraSonetFarEndVTCurrTotalCVs=teraSonetFarEndVTCurrTotalCVs, teraSonetFarEndVTTotalSESs=teraSonetFarEndVTTotalSESs, teraSonetPathCurrTotalWidth=teraSonetPathCurrTotalWidth, teraSonetVTTotalTableEntry=teraSonetVTTotalTableEntry, teraSonetVTTotalValidData=teraSonetVTTotalValidData, teraSonetLineTotalNumber=teraSonetLineTotalNumber, teraSonetFarEndPathTotalCVs=teraSonetFarEndPathTotalCVs, teraSonetPathCurrTotalTable=teraSonetPathCurrTotalTable, teraSonetPathCurrTotalStatus=teraSonetPathCurrTotalStatus, teraSonetSectionTable=teraSonetSectionTable, teraSonetVTTotalTable=teraSonetVTTotalTable, teraSonetVTCurrTotalSESs=teraSonetVTCurrTotalSESs, teraSonetSectionCurrTotalSESs=teraSonetSectionCurrTotalSESs, teraSonetLineTotalSESs=teraSonetLineTotalSESs, teraSonetFarEndVTCurrTotalSES=teraSonetFarEndVTCurrTotalSES, teraSonetSectionTraceLenTx=teraSonetSectionTraceLenTx, teraSonetPathIdTable=teraSonetPathIdTable, teraSonetFarEndLineCurrTotalCVs=teraSonetFarEndLineCurrTotalCVs, teraSonetSFThreshold=teraSonetSFThreshold, teraSonetLineTotalUASs=teraSonetLineTotalUASs, teraSonetFarEndLineCurrTotalTableEntry=teraSonetFarEndLineCurrTotalTableEntry, teraSonetFarEndVTCurrTotalTable=teraSonetFarEndVTCurrTotalTable, teraSonetFarEndPathTotalValidData=teraSonetFarEndPathTotalValidData, teraSonetVTCurrTotalStatus=teraSonetVTCurrTotalStatus, teraSonetPathTotalTableEntry=teraSonetPathTotalTableEntry, teraSonetMediumTotalTimeElapsed=teraSonetMediumTotalTimeElapsed, teraSonetFarEndLineCurrTotalUASs=teraSonetFarEndLineCurrTotalUASs, teraSonetSectionTraceLenRx=teraSonetSectionTraceLenRx, teraSonetFarEndPathTotalESs=teraSonetFarEndPathTotalESs, teraSonetMapperConfigTable=teraSonetMapperConfigTable, teraSonetSectionCurrTotalTable=teraSonetSectionCurrTotalTable, teraSonetPathTraceRx=teraSonetPathTraceRx, teraSonetVTIdVT=teraSonetVTIdVT, teraSonetLineTotalValidData=teraSonetLineTotalValidData, teraSonetFarEndLineTotalValidData=teraSonetFarEndLineTotalValidData, teraSonetFarEndLineTotalESs=teraSonetFarEndLineTotalESs, teraSonetPathOverheadTable=teraSonetPathOverheadTable, teraSonetVTIdSTS1=teraSonetVTIdSTS1, teraSonetVTLoopbackConfig=teraSonetVTLoopbackConfig, teraSonetVTIdTableEntry=teraSonetVTIdTableEntry, teraSonetSectionTotalCVs=teraSonetSectionTotalCVs, teraSonetFarEndLineTotalSESs=teraSonetFarEndLineTotalSESs, teraSonetSectionCurrTotalCVs=teraSonetSectionCurrTotalCVs, terawave=terawave, teraSonetPathTraceLenRx=teraSonetPathTraceLenRx, teraSonetFarEndPathTotalTableEntry=teraSonetFarEndPathTotalTableEntry, teraSonetPathCurrTotalTableEntry=teraSonetPathCurrTotalTableEntry, teraSonetSectionCurrTotalTableEntry=teraSonetSectionCurrTotalTableEntry, teraSonetFarEndVTTotalCVs=teraSonetFarEndVTTotalCVs, teraSonetPathOverheadTableEntry=teraSonetPathOverheadTableEntry, teraSonetVTCurrTotalTable=teraSonetVTCurrTotalTable, teraSonetSDThreshold=teraSonetSDThreshold, teraSonetVTIdIfIndex=teraSonetVTIdIfIndex, teraSonetFarEndVTTotalTable=teraSonetFarEndVTTotalTable, teraSonetVTConfigTable=teraSonetVTConfigTable, teraSonetVTIdVTG=teraSonetVTIdVTG, teraSonetSectionTotalESs=teraSonetSectionTotalESs, teraSonetFarEndVTTotalESs=teraSonetFarEndVTTotalESs, teraSonetMediumValidTotalIntervals=teraSonetMediumValidTotalIntervals, teraSonetSectionCurrTotalSEFSs=teraSonetSectionCurrTotalSEFSs, teraSonetVTCurrTotalTableEntry=teraSonetVTCurrTotalTableEntry, teraSonetFarEndLineCurrTotalSESs=teraSonetFarEndLineCurrTotalSESs, teraSonetFarEndLineTotalTableEntry=teraSonetFarEndLineTotalTableEntry, teraSonetGroup=teraSonetGroup, teraSonetFarEndPathTotalNumber=teraSonetFarEndPathTotalNumber, teraSonetVTCurrTotalESs=teraSonetVTCurrTotalESs, teraSonetLineCurrTotalTableEntry=teraSonetLineCurrTotalTableEntry, teraSonetPathIdTableEntry=teraSonetPathIdTableEntry, teraSonetFarEndPathCurrTotalCVs=teraSonetFarEndPathCurrTotalCVs, teraSonetVTTotalUASs=teraSonetVTTotalUASs, teraSonetPathCurrTotalCVs=teraSonetPathCurrTotalCVs, teraSonetFarEndLineTotalTable=teraSonetFarEndLineTotalTable, teraSonetPathTotalCVs=teraSonetPathTotalCVs, teraSonetPathTotalUASs=teraSonetPathTotalUASs, teraSonetMapperConfigTableEntry=teraSonetMapperConfigTableEntry, teraSonetSectionTotalNumber=teraSonetSectionTotalNumber, teraSonetPathIdIfIndex=teraSonetPathIdIfIndex, teraSonetVTCurrTotalPerfStat=teraSonetVTCurrTotalPerfStat, teraSonetSectionTotalValidData=teraSonetSectionTotalValidData, teraSonetLineCurrTotalStatus=teraSonetLineCurrTotalStatus, teraSonetVTTotalCVs=teraSonetVTTotalCVs, teraSonetSectionTraceRx=teraSonetSectionTraceRx, teraSonetLineTotalTable=teraSonetLineTotalTable, teraSonetPathTotalTable=teraSonetPathTotalTable, teraSonetLineCurrTotalTable=teraSonetLineCurrTotalTable, teraSonetFarEndLineCurrTotalTable=teraSonetFarEndLineCurrTotalTable, teraSonetSectionCurrTotalESs=teraSonetSectionCurrTotalESs, teraSonetVTIdTable=teraSonetVTIdTable, teraSonetVTConfigERDIEnable=teraSonetVTConfigERDIEnable, teraSonetPathTraceLenTx=teraSonetPathTraceLenTx, teraSonetTotalPerfStat=teraSonetTotalPerfStat, teraSonetVTCurrTotalCVs=teraSonetVTCurrTotalCVs, teraSonetFarEndVTTotalValidData=teraSonetFarEndVTTotalValidData, teraSonetVTCurrTotalUASs=teraSonetVTCurrTotalUASs, teraSonetFarEndLineCurrTotalESs=teraSonetFarEndLineCurrTotalESs, teraSonetFarEndPathCurrTotalUASs=teraSonetFarEndPathCurrTotalUASs, teraSonetPathCurrTotalSESs=teraSonetPathCurrTotalSESs, teraSonetPathSigLabelTx=teraSonetPathSigLabelTx, teraSonetLineCurrTotalCVs=teraSonetLineCurrTotalCVs, teraSonetLineCurrTotalSESs=teraSonetLineCurrTotalSESs, teraSonetFarEndLineTotalUASs=teraSonetFarEndLineTotalUASs, teraSonetVTTotalESs=teraSonetVTTotalESs, teraSonetPathTraceTx=teraSonetPathTraceTx, teraSonetFarEndPathCurrTotalTable=teraSonetFarEndPathCurrTotalTable, teraSonetSectionTotalTable=teraSonetSectionTotalTable, teraSonetFarEndPathCurrTotalTableEntry=teraSonetFarEndPathCurrTotalTableEntry, teraSonetFarEndPathTotalSESs=teraSonetFarEndPathTotalSESs, teraSonetVTTotalNumber=teraSonetVTTotalNumber, teraSonetMediumTable=teraSonetMediumTable, teraSonetFarEndVTTotalNumber=teraSonetFarEndVTTotalNumber, teraSonetMediumInvalidTotalIntervals=teraSonetMediumInvalidTotalIntervals, teraSonetSectionTotalTableEntry=teraSonetSectionTotalTableEntry, teraSonetPathCurrTotalESs=teraSonetPathCurrTotalESs, teraSonetFarEndVTCurrTotalTableEntry=teraSonetFarEndVTCurrTotalTableEntry, teraSonetFarEndLineTotalNumber=teraSonetFarEndLineTotalNumber, teraSonetStm1Mapping=teraSonetStm1Mapping, teraSonetMode=teraSonetMode, teraSonetFarEndVTTotalTableEntry=teraSonetFarEndVTTotalTableEntry, teraSonetSectionCurrTotalStatus=teraSonetSectionCurrTotalStatus, teraSonetSectionTraceTx=teraSonetSectionTraceTx, teraSonetSectionTotalSESs=teraSonetSectionTotalSESs, teraSonetLineTotalESs=teraSonetLineTotalESs, teraSonetPathTotalESs=teraSonetPathTotalESs, teraSonetLineTotalCVs=teraSonetLineTotalCVs, teraSonetFarEndPathCurrTotalSESs=teraSonetFarEndPathCurrTotalSESs, teraSonetFarEndPathTotalUASs=teraSonetFarEndPathTotalUASs, teraSonetFarEndVTCurrTotalUASs=teraSonetFarEndVTCurrTotalUASs, teraSonetPathTotalNumber=teraSonetPathTotalNumber, teraSonetSectionTableEntry=teraSonetSectionTableEntry)
