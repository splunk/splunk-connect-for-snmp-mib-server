#
# PySNMP MIB module CISCO-ENHANCED-MEMPOOL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ENHANCED-MEMPOOL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:39:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
IpAddress, Bits, NotificationType, MibIdentifier, ModuleIdentity, Integer32, iso, Gauge32, ObjectIdentity, Counter64, Unsigned32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Bits", "NotificationType", "MibIdentifier", "ModuleIdentity", "Integer32", "iso", "Gauge32", "ObjectIdentity", "Counter64", "Unsigned32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32")
AutonomousType, DisplayString, TruthValue, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "AutonomousType", "DisplayString", "TruthValue", "TextualConvention", "TimeStamp")
ciscoEnhancedMemPoolMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 221))
ciscoEnhancedMemPoolMIB.setRevisions(('2008-12-05 00:00', '2008-05-07 00:00', '2003-02-24 00:00', '2001-06-05 00:00',))
if mibBuilder.loadTexts: ciscoEnhancedMemPoolMIB.setLastUpdated('200812050000Z')
if mibBuilder.loadTexts: ciscoEnhancedMemPoolMIB.setOrganization('Cisco Systems, Inc.')
cempMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 221, 0))
cempMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 221, 1))
cempMemPool = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1))
cempNotificationConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 2))
class CempMemPoolIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class CempMemPoolIndexOrNone(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class CempMemPoolTypes(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
    namedValues = NamedValues(("other", 1), ("processorMemory", 2), ("ioMemory", 3), ("pciMemory", 4), ("fastMemory", 5), ("multibusMemory", 6), ("interruptStackMemory", 7), ("processStackMemory", 8), ("localExceptionMemory", 9), ("virtualMemory", 10), ("reservedMemory", 11), ("imageMemory", 12), ("asicMemory", 13), ("posixMemory", 14))

class CempMemBufferPoolIndex(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

cempMemPoolTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1), )
if mibBuilder.loadTexts: cempMemPoolTable.setStatus('current')
cempMemPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolIndex"))
if mibBuilder.loadTexts: cempMemPoolEntry.setStatus('current')
cempMemPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 1), CempMemPoolIndex())
if mibBuilder.loadTexts: cempMemPoolIndex.setStatus('current')
cempMemPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 2), CempMemPoolTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolType.setStatus('current')
cempMemPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolName.setStatus('current')
cempMemPoolPlatformMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 4), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolPlatformMemory.setStatus('current')
cempMemPoolAlternate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 5), CempMemPoolIndexOrNone()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolAlternate.setStatus('current')
cempMemPoolValid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolValid.setStatus('current')
cempMemPoolUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 7), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolUsed.setStatus('current')
cempMemPoolFree = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 8), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolFree.setStatus('current')
cempMemPoolLargestFree = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 9), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolLargestFree.setStatus('current')
cempMemPoolLowestFree = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 10), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolLowestFree.setStatus('current')
cempMemPoolUsedLowWaterMark = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolUsedLowWaterMark.setStatus('current')
cempMemPoolAllocHit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolAllocHit.setStatus('current')
cempMemPoolAllocMiss = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolAllocMiss.setStatus('current')
cempMemPoolFreeHit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolFreeHit.setStatus('current')
cempMemPoolFreeMiss = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolFreeMiss.setStatus('current')
cempMemPoolShared = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 16), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolShared.setStatus('current')
cempMemPoolUsedOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 17), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolUsedOvrflw.setStatus('current')
cempMemPoolHCUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 18), CounterBasedGauge64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolHCUsed.setStatus('current')
cempMemPoolFreeOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 19), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolFreeOvrflw.setStatus('current')
cempMemPoolHCFree = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 20), CounterBasedGauge64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolHCFree.setStatus('current')
cempMemPoolLargestFreeOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 21), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolLargestFreeOvrflw.setStatus('current')
cempMemPoolHCLargestFree = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 22), CounterBasedGauge64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolHCLargestFree.setStatus('current')
cempMemPoolLowestFreeOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 23), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolLowestFreeOvrflw.setStatus('current')
cempMemPoolHCLowestFree = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 24), CounterBasedGauge64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolHCLowestFree.setStatus('current')
cempMemPoolUsedLowWaterMarkOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 25), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolUsedLowWaterMarkOvrflw.setStatus('current')
cempMemPoolHCUsedLowWaterMark = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 26), CounterBasedGauge64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolHCUsedLowWaterMark.setStatus('current')
cempMemPoolSharedOvrflw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 27), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolSharedOvrflw.setStatus('current')
cempMemPoolHCShared = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 1, 1, 28), CounterBasedGauge64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemPoolHCShared.setStatus('current')
cempMemBufferPoolTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2), )
if mibBuilder.loadTexts: cempMemBufferPoolTable.setStatus('current')
cempMemBufferPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferPoolIndex"))
if mibBuilder.loadTexts: cempMemBufferPoolEntry.setStatus('current')
cempMemBufferPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 1), CempMemBufferPoolIndex())
if mibBuilder.loadTexts: cempMemBufferPoolIndex.setStatus('current')
cempMemBufferMemPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 2), CempMemPoolIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferMemPoolIndex.setStatus('current')
cempMemBufferName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferName.setStatus('current')
cempMemBufferDynamic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferDynamic.setStatus('current')
cempMemBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 5), Unsigned32()).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cempMemBufferSize.setStatus('current')
cempMemBufferMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cempMemBufferMin.setStatus('current')
cempMemBufferMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cempMemBufferMax.setStatus('current')
cempMemBufferPermanent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cempMemBufferPermanent.setStatus('current')
cempMemBufferTransient = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cempMemBufferTransient.setStatus('current')
cempMemBufferTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferTotal.setStatus('current')
cempMemBufferFree = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferFree.setStatus('current')
cempMemBufferHit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferHit.setStatus('current')
cempMemBufferMiss = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferMiss.setStatus('current')
cempMemBufferFreeHit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferFreeHit.setStatus('current')
cempMemBufferFreeMiss = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferFreeMiss.setStatus('current')
cempMemBufferPermChange = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferPermChange.setStatus('current')
cempMemBufferPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferPeak.setStatus('current')
cempMemBufferPeakTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 18), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferPeakTime.setStatus('current')
cempMemBufferTrim = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferTrim.setStatus('current')
cempMemBufferGrow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferGrow.setStatus('current')
cempMemBufferFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferFailures.setStatus('current')
cempMemBufferNoStorage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferNoStorage.setStatus('current')
cempMemBufferCachePoolTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 3), )
if mibBuilder.loadTexts: cempMemBufferCachePoolTable.setStatus('current')
cempMemBufferCachePoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferPoolIndex"))
if mibBuilder.loadTexts: cempMemBufferCachePoolEntry.setStatus('current')
cempMemBufferCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferCacheSize.setStatus('current')
cempMemBufferCacheTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferCacheTotal.setStatus('current')
cempMemBufferCacheUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferCacheUsed.setStatus('current')
cempMemBufferCacheHit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferCacheHit.setStatus('current')
cempMemBufferCacheMiss = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferCacheMiss.setStatus('current')
cempMemBufferCacheThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferCacheThreshold.setStatus('current')
cempMemBufferCacheThresholdCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cempMemBufferCacheThresholdCount.setStatus('current')
cempMemBufferNotifyEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 221, 1, 2, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cempMemBufferNotifyEnabled.setStatus('current')
cempMemBufferNotify = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 221, 0, 1)).setObjects(("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferName"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferPeak"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferPeakTime"))
if mibBuilder.loadTexts: cempMemBufferNotify.setStatus('current')
cempMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 221, 3))
cempMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 221, 3, 1))
cempMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 221, 3, 2))
cempMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 221, 3, 1, 1)).setObjects(("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolGroup"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolExtGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cempMIBCompliance = cempMIBCompliance.setStatus('deprecated')
cempMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 221, 3, 1, 2)).setObjects(("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolGroup"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferGroup"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolExtGroupRev1"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferExtGroup"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferNotifyEnableGroup"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cempMIBComplianceRev1 = cempMIBComplianceRev1.setStatus('deprecated')
cempMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 221, 3, 1, 3)).setObjects(("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolGroupRev1"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferGroup"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolExtGroupRev1"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferExtGroup"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferNotifyEnableGroup"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cempMIBComplianceRev2 = cempMIBComplianceRev2.setStatus('deprecated')
cempMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 221, 3, 1, 4)).setObjects(("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolGroupRev1"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferGroup"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolExtGroupRev1"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferExtGroup"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferNotifyEnableGroup"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferNotifyGroup"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolHCGroup"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolOvrflwGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cempMIBComplianceRev3 = cempMIBComplianceRev3.setStatus('current')
cempMemPoolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 221, 3, 2, 1)).setObjects(("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolType"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolName"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolValid"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolUsed"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolFree"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cempMemPoolGroup = cempMemPoolGroup.setStatus('deprecated')
cempMemPoolExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 221, 3, 2, 2)).setObjects(("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolPlatformMemory"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolAlternate"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolLargestFree"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolLowestFree"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cempMemPoolExtGroup = cempMemPoolExtGroup.setStatus('deprecated')
cempMemBufferGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 221, 3, 2, 3)).setObjects(("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferMemPoolIndex"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferName"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferDynamic"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferSize"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferMin"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferMax"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferPermanent"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferTransient"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferTotal"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferFree"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferHit"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferMiss"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferFreeHit"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferFreeMiss"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferPermChange"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferPeak"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferPeakTime"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferTrim"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferGrow"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferFailures"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferNoStorage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cempMemBufferGroup = cempMemBufferGroup.setStatus('current')
cempMemBufferExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 221, 3, 2, 4)).setObjects(("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferCacheSize"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferCacheTotal"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferCacheUsed"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferCacheHit"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferCacheMiss"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferCacheThreshold"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferCacheThresholdCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cempMemBufferExtGroup = cempMemBufferExtGroup.setStatus('current')
cempMemBufferNotifyEnableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 221, 3, 2, 5)).setObjects(("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferNotifyEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cempMemBufferNotifyEnableGroup = cempMemBufferNotifyEnableGroup.setStatus('current')
cempMemBufferNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 221, 3, 2, 6)).setObjects(("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemBufferNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cempMemBufferNotifyGroup = cempMemBufferNotifyGroup.setStatus('current')
cempMemPoolExtGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 221, 3, 2, 7)).setObjects(("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolPlatformMemory"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolAlternate"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolLargestFree"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolLowestFree"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolUsedLowWaterMark"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolAllocHit"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolAllocMiss"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolFreeHit"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolFreeMiss"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cempMemPoolExtGroupRev1 = cempMemPoolExtGroupRev1.setStatus('current')
cempMemPoolGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 221, 3, 2, 8)).setObjects(("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolType"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolName"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolValid"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolUsed"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolFree"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolShared"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cempMemPoolGroupRev1 = cempMemPoolGroupRev1.setStatus('current')
cempMemPoolHCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 221, 3, 2, 9)).setObjects(("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolHCUsed"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolHCFree"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolHCLargestFree"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolHCLowestFree"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolHCUsedLowWaterMark"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolHCShared"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cempMemPoolHCGroup = cempMemPoolHCGroup.setStatus('current')
cempMemPoolOvrflwGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 221, 3, 2, 10)).setObjects(("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolUsedOvrflw"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolFreeOvrflw"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolLargestFreeOvrflw"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolLowestFreeOvrflw"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolUsedLowWaterMarkOvrflw"), ("CISCO-ENHANCED-MEMPOOL-MIB", "cempMemPoolSharedOvrflw"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cempMemPoolOvrflwGroup = cempMemPoolOvrflwGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-ENHANCED-MEMPOOL-MIB", cempMemPoolShared=cempMemPoolShared, cempMemPoolHCUsedLowWaterMark=cempMemPoolHCUsedLowWaterMark, cempMemPoolAllocHit=cempMemPoolAllocHit, cempMemBufferPeak=cempMemBufferPeak, cempMIBConformance=cempMIBConformance, cempMemPoolLargestFreeOvrflw=cempMemPoolLargestFreeOvrflw, cempMemPoolHCFree=cempMemPoolHCFree, cempMemBufferPeakTime=cempMemBufferPeakTime, cempMemPool=cempMemPool, cempMemBufferPoolIndex=cempMemBufferPoolIndex, cempMIBComplianceRev3=cempMIBComplianceRev3, cempMemPoolValid=cempMemPoolValid, cempMemBufferNotifyGroup=cempMemBufferNotifyGroup, cempMemPoolFreeMiss=cempMemPoolFreeMiss, cempMemPoolFree=cempMemPoolFree, cempMemBufferPoolEntry=cempMemBufferPoolEntry, cempMemPoolExtGroupRev1=cempMemPoolExtGroupRev1, ciscoEnhancedMemPoolMIB=ciscoEnhancedMemPoolMIB, cempMemBufferCachePoolTable=cempMemBufferCachePoolTable, cempMemPoolUsedLowWaterMarkOvrflw=cempMemPoolUsedLowWaterMarkOvrflw, cempMemBufferTrim=cempMemBufferTrim, cempMemBufferDynamic=cempMemBufferDynamic, cempMemPoolExtGroup=cempMemPoolExtGroup, cempMemPoolGroup=cempMemPoolGroup, cempMemBufferCachePoolEntry=cempMemBufferCachePoolEntry, cempMemBufferPoolTable=cempMemBufferPoolTable, cempMIBComplianceRev1=cempMIBComplianceRev1, cempMemBufferCacheUsed=cempMemBufferCacheUsed, cempMemPoolLowestFreeOvrflw=cempMemPoolLowestFreeOvrflw, cempMemBufferHit=cempMemBufferHit, PYSNMP_MODULE_ID=ciscoEnhancedMemPoolMIB, cempMemPoolEntry=cempMemPoolEntry, cempMemBufferGroup=cempMemBufferGroup, cempMemPoolFreeOvrflw=cempMemPoolFreeOvrflw, cempMemBufferFailures=cempMemBufferFailures, cempMemPoolLargestFree=cempMemPoolLargestFree, cempMemPoolUsedOvrflw=cempMemPoolUsedOvrflw, cempMIBGroups=cempMIBGroups, cempMemBufferNotifyEnableGroup=cempMemBufferNotifyEnableGroup, cempMemPoolLowestFree=cempMemPoolLowestFree, cempMIBNotifications=cempMIBNotifications, cempMemBufferCacheThresholdCount=cempMemBufferCacheThresholdCount, cempMemBufferTransient=cempMemBufferTransient, cempMemBufferCacheTotal=cempMemBufferCacheTotal, cempMemPoolPlatformMemory=cempMemPoolPlatformMemory, cempMemPoolHCUsed=cempMemPoolHCUsed, cempMemPoolTable=cempMemPoolTable, cempMemBufferFreeMiss=cempMemBufferFreeMiss, CempMemPoolTypes=CempMemPoolTypes, cempMemBufferGrow=cempMemBufferGrow, cempMemBufferSize=cempMemBufferSize, cempMemPoolType=cempMemPoolType, cempMemBufferMiss=cempMemBufferMiss, cempNotificationConfig=cempNotificationConfig, cempMemBufferPermanent=cempMemBufferPermanent, cempMemBufferMax=cempMemBufferMax, cempMemBufferCacheMiss=cempMemBufferCacheMiss, cempMemBufferCacheHit=cempMemBufferCacheHit, cempMemBufferMemPoolIndex=cempMemBufferMemPoolIndex, cempMemBufferNotifyEnabled=cempMemBufferNotifyEnabled, cempMIBComplianceRev2=cempMIBComplianceRev2, cempMemBufferNoStorage=cempMemBufferNoStorage, cempMemBufferCacheSize=cempMemBufferCacheSize, cempMemBufferTotal=cempMemBufferTotal, cempMemPoolOvrflwGroup=cempMemPoolOvrflwGroup, cempMIBObjects=cempMIBObjects, CempMemPoolIndexOrNone=CempMemPoolIndexOrNone, cempMemBufferCacheThreshold=cempMemBufferCacheThreshold, cempMemPoolHCGroup=cempMemPoolHCGroup, cempMemPoolUsedLowWaterMark=cempMemPoolUsedLowWaterMark, cempMemBufferFree=cempMemBufferFree, cempMemBufferFreeHit=cempMemBufferFreeHit, CempMemBufferPoolIndex=CempMemBufferPoolIndex, cempMIBCompliance=cempMIBCompliance, cempMemPoolFreeHit=cempMemPoolFreeHit, cempMemPoolHCLowestFree=cempMemPoolHCLowestFree, cempMemPoolName=cempMemPoolName, CempMemPoolIndex=CempMemPoolIndex, cempMemPoolAlternate=cempMemPoolAlternate, cempMemPoolHCLargestFree=cempMemPoolHCLargestFree, cempMemBufferNotify=cempMemBufferNotify, cempMemPoolGroupRev1=cempMemPoolGroupRev1, cempMemBufferName=cempMemBufferName, cempMemPoolIndex=cempMemPoolIndex, cempMemPoolSharedOvrflw=cempMemPoolSharedOvrflw, cempMemBufferPermChange=cempMemBufferPermChange, cempMemPoolAllocMiss=cempMemPoolAllocMiss, cempMIBCompliances=cempMIBCompliances, cempMemPoolHCShared=cempMemPoolHCShared, cempMemBufferMin=cempMemBufferMin, cempMemBufferExtGroup=cempMemBufferExtGroup, cempMemPoolUsed=cempMemPoolUsed)
