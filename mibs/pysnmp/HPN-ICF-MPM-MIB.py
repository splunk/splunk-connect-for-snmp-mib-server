#
# PySNMP MIB module HPN-ICF-MPM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-MPM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, ModuleIdentity, Unsigned32, NotificationType, Counter64, iso, mib_2, ObjectIdentity, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Gauge32, Integer32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ModuleIdentity", "Unsigned32", "NotificationType", "Counter64", "iso", "mib-2", "ObjectIdentity", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Gauge32", "Integer32", "Bits")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
hpnicfMpm = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51))
hpnicfMpm.setRevisions(('2005-03-22 00:00',))
if mibBuilder.loadTexts: hpnicfMpm.setLastUpdated('200503220000Z')
if mibBuilder.loadTexts: hpnicfMpm.setOrganization('')
class EnabledStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

hpnicfMPMObject = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 1))
hpnicfMPortGroupLimitMinNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMPortGroupLimitMinNumber.setStatus('current')
hpnicfMPortGroupLimitMaxNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMPortGroupLimitMaxNumber.setStatus('current')
hpnicfMPMTable = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2))
hpnicfMPortGroupJoinTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 1), )
if mibBuilder.loadTexts: hpnicfMPortGroupJoinTable.setStatus('current')
hpnicfMPortGroupJoinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-MPM-MIB", "hpnicfMPortGroupJoinVlanID"), (0, "HPN-ICF-MPM-MIB", "hpnicfMPortGroupJoinAddressType"), (0, "HPN-ICF-MPM-MIB", "hpnicfMPortGroupJoinAddress"))
if mibBuilder.loadTexts: hpnicfMPortGroupJoinEntry.setStatus('current')
hpnicfMPortGroupJoinVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfMPortGroupJoinVlanID.setStatus('current')
hpnicfMPortGroupJoinAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 1, 1, 2), InetAddressType())
if mibBuilder.loadTexts: hpnicfMPortGroupJoinAddressType.setStatus('current')
hpnicfMPortGroupJoinAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 1, 1, 3), InetAddress())
if mibBuilder.loadTexts: hpnicfMPortGroupJoinAddress.setStatus('current')
hpnicfMPortGroupJoinStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMPortGroupJoinStatus.setStatus('current')
hpnicfMPortGroupTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 2), )
if mibBuilder.loadTexts: hpnicfMPortGroupTable.setStatus('current')
hpnicfMPortGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-MPM-MIB", "hpnicfMPortGroupVlanID"), (0, "HPN-ICF-MPM-MIB", "hpnicfMPortGroupAddressType"), (0, "HPN-ICF-MPM-MIB", "hpnicfMPortGroupAddress"))
if mibBuilder.loadTexts: hpnicfMPortGroupEntry.setStatus('current')
hpnicfMPortGroupVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfMPortGroupVlanID.setStatus('current')
hpnicfMPortGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMPortGroupAddressType.setStatus('current')
hpnicfMPortGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMPortGroupAddress.setStatus('current')
hpnicfMPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 3), )
if mibBuilder.loadTexts: hpnicfMPortConfigTable.setStatus('current')
hpnicfMPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-MPM-MIB", "hpnicfMPortConfigVlanID"))
if mibBuilder.loadTexts: hpnicfMPortConfigEntry.setStatus('current')
hpnicfMPortConfigVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfMPortConfigVlanID.setStatus('current')
hpnicfMPortGroupLimitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 3, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMPortGroupLimitNumber.setStatus('current')
hpnicfMPortFastLeaveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 3, 1, 3), EnabledStatus().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMPortFastLeaveStatus.setStatus('current')
hpnicfMPortGroupPolicyParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 2999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMPortGroupPolicyParameter.setStatus('current')
hpnicfMPortConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMPortConfigRowStatus.setStatus('current')
hpnicfMPortGroupLimitReplace = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 3, 1, 6), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMPortGroupLimitReplace.setStatus('current')
hpnicfHostStaticJoinTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 4), )
if mibBuilder.loadTexts: hpnicfHostStaticJoinTable.setStatus('current')
hpnicfHostStaticJoinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-MPM-MIB", "hpnicfHostStaticJoinVlanID"), (0, "HPN-ICF-MPM-MIB", "hpnicfHostStaticJoinAddressType"), (0, "HPN-ICF-MPM-MIB", "hpnicfHostStaticJoinAddress"))
if mibBuilder.loadTexts: hpnicfHostStaticJoinEntry.setStatus('current')
hpnicfHostStaticJoinVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfHostStaticJoinVlanID.setStatus('current')
hpnicfHostStaticJoinAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 4, 1, 2), InetAddressType())
if mibBuilder.loadTexts: hpnicfHostStaticJoinAddressType.setStatus('current')
hpnicfHostStaticJoinAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 4, 1, 3), InetAddress())
if mibBuilder.loadTexts: hpnicfHostStaticJoinAddress.setStatus('current')
hpnicfHostStaticJoinStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 51, 2, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfHostStaticJoinStatus.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-MPM-MIB", hpnicfHostStaticJoinStatus=hpnicfHostStaticJoinStatus, hpnicfMPortConfigTable=hpnicfMPortConfigTable, hpnicfMPortConfigRowStatus=hpnicfMPortConfigRowStatus, hpnicfMPortConfigVlanID=hpnicfMPortConfigVlanID, hpnicfMPortGroupLimitReplace=hpnicfMPortGroupLimitReplace, hpnicfMPortGroupJoinEntry=hpnicfMPortGroupJoinEntry, hpnicfMPortGroupJoinVlanID=hpnicfMPortGroupJoinVlanID, EnabledStatus=EnabledStatus, hpnicfMPortFastLeaveStatus=hpnicfMPortFastLeaveStatus, hpnicfMPortGroupLimitNumber=hpnicfMPortGroupLimitNumber, hpnicfMPortGroupLimitMaxNumber=hpnicfMPortGroupLimitMaxNumber, hpnicfMPortGroupVlanID=hpnicfMPortGroupVlanID, hpnicfHostStaticJoinEntry=hpnicfHostStaticJoinEntry, hpnicfHostStaticJoinAddressType=hpnicfHostStaticJoinAddressType, hpnicfMPortGroupAddressType=hpnicfMPortGroupAddressType, hpnicfMPortGroupPolicyParameter=hpnicfMPortGroupPolicyParameter, hpnicfMPortGroupJoinAddress=hpnicfMPortGroupJoinAddress, hpnicfMPortGroupJoinTable=hpnicfMPortGroupJoinTable, hpnicfMPMObject=hpnicfMPMObject, hpnicfMPortGroupJoinStatus=hpnicfMPortGroupJoinStatus, hpnicfHostStaticJoinAddress=hpnicfHostStaticJoinAddress, hpnicfMPortGroupLimitMinNumber=hpnicfMPortGroupLimitMinNumber, hpnicfMPortGroupTable=hpnicfMPortGroupTable, hpnicfHostStaticJoinTable=hpnicfHostStaticJoinTable, hpnicfMPortConfigEntry=hpnicfMPortConfigEntry, hpnicfMpm=hpnicfMpm, hpnicfMPMTable=hpnicfMPMTable, hpnicfMPortGroupJoinAddressType=hpnicfMPortGroupJoinAddressType, hpnicfMPortGroupEntry=hpnicfMPortGroupEntry, PYSNMP_MODULE_ID=hpnicfMpm, hpnicfHostStaticJoinVlanID=hpnicfHostStaticJoinVlanID, hpnicfMPortGroupAddress=hpnicfMPortGroupAddress)
