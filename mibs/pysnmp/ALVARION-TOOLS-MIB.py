#
# PySNMP MIB module ALVARION-TOOLS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALVARION-TOOLS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:06:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
alvarionMgmtV2, = mibBuilder.importSymbols("ALVARION-SMI", "alvarionMgmtV2")
AlvarionNotificationEnable, = mibBuilder.importSymbols("ALVARION-TC", "AlvarionNotificationEnable")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Gauge32, Counter64, iso, NotificationType, Unsigned32, TimeTicks, ObjectIdentity, MibIdentifier, IpAddress, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Gauge32", "Counter64", "iso", "NotificationType", "Unsigned32", "TimeTicks", "ObjectIdentity", "MibIdentifier", "IpAddress", "Integer32", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
alvarionToolsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12))
if mibBuilder.loadTexts: alvarionToolsMIB.setLastUpdated('200710310000Z')
if mibBuilder.loadTexts: alvarionToolsMIB.setOrganization('Alvarion Ltd.')
alvarionToolsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 1))
traceToolConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 1, 1))
traceInterface = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 1, 1, 1), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceInterface.setStatus('current')
traceCaptureDestination = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceCaptureDestination.setStatus('current')
traceCaptureDestinationURL = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceCaptureDestinationURL.setStatus('current')
traceTimeout = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99999)).clone(600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceTimeout.setStatus('current')
traceNumberOfPackets = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99999)).clone(100)).setUnits('packets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceNumberOfPackets.setStatus('current')
tracePacketSize = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(68, 4096)).clone(128)).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tracePacketSize.setStatus('current')
traceCaptureFilter = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceCaptureFilter.setStatus('current')
traceCaptureStatus = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stop", 1), ("start", 2))).clone('stop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceCaptureStatus.setStatus('current')
traceNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 1, 1, 9), AlvarionNotificationEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceNotificationEnabled.setStatus('current')
alvarionToolsMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 2))
alvarionToolsMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 2, 0))
traceStatusNotification = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 2, 0, 1)).setObjects(("ALVARION-TOOLS-MIB", "traceCaptureStatus"))
if mibBuilder.loadTexts: traceStatusNotification.setStatus('current')
alvarionToolsMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 3))
alvarionToolsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 3, 1))
alvarionToolsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 3, 2))
alvarionToolsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 3, 1, 1)).setObjects(("ALVARION-TOOLS-MIB", "alvarionToolsMIBGroup"), ("ALVARION-TOOLS-MIB", "alvarionToolsNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionToolsMIBCompliance = alvarionToolsMIBCompliance.setStatus('current')
alvarionToolsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 3, 2, 1)).setObjects(("ALVARION-TOOLS-MIB", "traceInterface"), ("ALVARION-TOOLS-MIB", "traceCaptureDestination"), ("ALVARION-TOOLS-MIB", "traceCaptureDestinationURL"), ("ALVARION-TOOLS-MIB", "traceTimeout"), ("ALVARION-TOOLS-MIB", "traceNumberOfPackets"), ("ALVARION-TOOLS-MIB", "tracePacketSize"), ("ALVARION-TOOLS-MIB", "traceCaptureFilter"), ("ALVARION-TOOLS-MIB", "traceCaptureStatus"), ("ALVARION-TOOLS-MIB", "traceNotificationEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionToolsMIBGroup = alvarionToolsMIBGroup.setStatus('current')
alvarionToolsNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 12, 3, 2, 2)).setObjects(("ALVARION-TOOLS-MIB", "traceStatusNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionToolsNotificationGroup = alvarionToolsNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("ALVARION-TOOLS-MIB", traceNumberOfPackets=traceNumberOfPackets, alvarionToolsMIBCompliance=alvarionToolsMIBCompliance, alvarionToolsMIBObjects=alvarionToolsMIBObjects, alvarionToolsMIB=alvarionToolsMIB, traceInterface=traceInterface, alvarionToolsMIBGroups=alvarionToolsMIBGroups, alvarionToolsMIBNotifications=alvarionToolsMIBNotifications, traceTimeout=traceTimeout, traceCaptureFilter=traceCaptureFilter, traceCaptureDestination=traceCaptureDestination, alvarionToolsMIBCompliances=alvarionToolsMIBCompliances, PYSNMP_MODULE_ID=alvarionToolsMIB, alvarionToolsNotificationGroup=alvarionToolsNotificationGroup, alvarionToolsMIBNotificationPrefix=alvarionToolsMIBNotificationPrefix, alvarionToolsMIBGroup=alvarionToolsMIBGroup, traceCaptureStatus=traceCaptureStatus, traceNotificationEnabled=traceNotificationEnabled, traceToolConfig=traceToolConfig, tracePacketSize=tracePacketSize, alvarionToolsMIBConformance=alvarionToolsMIBConformance, traceStatusNotification=traceStatusNotification, traceCaptureDestinationURL=traceCaptureDestinationURL)
