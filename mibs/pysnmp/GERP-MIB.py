#
# PySNMP MIB module GERP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GERP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:06:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
gbnL2, = mibBuilder.importSymbols("GREENTECH-MASTER-MIB", "gbnL2")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibIdentifier, Counter32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, NotificationType, Bits, ModuleIdentity, IpAddress, ObjectIdentity, Integer32, Counter64, iso, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "NotificationType", "Bits", "ModuleIdentity", "IpAddress", "ObjectIdentity", "Integer32", "Counter64", "iso", "Gauge32")
TruthValue, RowStatus, DisplayString, TimeInterval, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "DisplayString", "TimeInterval", "MacAddress", "TextualConvention")
gerpMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7))
gerpMib.setRevisions(('1908-04-01 00:00',))
if mibBuilder.loadTexts: gerpMib.setLastUpdated('200804010000Z')
if mibBuilder.loadTexts: gerpMib.setOrganization('Greentech MIB Working Group')
gerpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1))
gerp = MibIdentifier((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1))
gerpOnoff = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gerpOnoff.setStatus('current')
gerpHealthTime = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gerpHealthTime.setStatus('current')
gerpHealthTimeout = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gerpHealthTimeout.setStatus('current')
gerpMajorFaultTime = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gerpMajorFaultTime.setStatus('current')
gerpPrefwdTimeout = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gerpPrefwdTimeout.setStatus('current')
gerpDomainTable = MibTable((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1, 6), )
if mibBuilder.loadTexts: gerpDomainTable.setStatus('current')
gerpDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1, 6, 1), ).setIndexNames((0, "GERP-MIB", "gerpDomainId"))
if mibBuilder.loadTexts: gerpDomainEntry.setStatus('current')
gerpDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: gerpDomainId.setStatus('current')
gerpMVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4093))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gerpMVlanId.setStatus('current')
gerpRingTable = MibTable((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1, 7), )
if mibBuilder.loadTexts: gerpRingTable.setStatus('current')
gerpRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1, 7, 1), ).setIndexNames((0, "GERP-MIB", "gerpDomainId"), (0, "GERP-MIB", "gerpRingId"))
if mibBuilder.loadTexts: gerpRingEntry.setStatus('current')
gerpRingId = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: gerpRingId.setStatus('current')
gerpRingLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gerpRingLevel.setStatus('current')
gerpBrdgRole = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("master", 1), ("trans", 2), ("edge", 3), ("assEdge", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gerpBrdgRole.setStatus('current')
gerpPriComPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gerpPriComPortId.setStatus('current')
gerpSecEdgePortId = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gerpSecEdgePortId.setStatus('current')
gerpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 7, 1, 1, 7, 1, 6), RowStatus().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gerpRowStatus.setStatus('current')
mibBuilder.exportSymbols("GERP-MIB", gerpMib=gerpMib, gerpOnoff=gerpOnoff, gerpRingId=gerpRingId, gerpRingEntry=gerpRingEntry, gerpSecEdgePortId=gerpSecEdgePortId, gerpBrdgRole=gerpBrdgRole, gerp=gerp, gerpDomainId=gerpDomainId, gerpMajorFaultTime=gerpMajorFaultTime, gerpMVlanId=gerpMVlanId, gerpDomainEntry=gerpDomainEntry, gerpRingTable=gerpRingTable, gerpRowStatus=gerpRowStatus, gerpPriComPortId=gerpPriComPortId, gerpMIBObjects=gerpMIBObjects, gerpHealthTime=gerpHealthTime, gerpPrefwdTimeout=gerpPrefwdTimeout, gerpHealthTimeout=gerpHealthTimeout, PYSNMP_MODULE_ID=gerpMib, gerpRingLevel=gerpRingLevel, gerpDomainTable=gerpDomainTable)
