#
# PySNMP MIB module GENERIC-3COM-TRUNK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GENERIC-3COM-TRUNK-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:05:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Unsigned32, MibIdentifier, enterprises, Bits, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter64, NotificationType, Counter32, ModuleIdentity, ObjectIdentity, IpAddress, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Unsigned32", "MibIdentifier", "enterprises", "Bits", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter64", "NotificationType", "Counter32", "ModuleIdentity", "ObjectIdentity", "IpAddress", "Integer32")
TextualConvention, DisplayString, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "PhysAddress")
a3Com = MibIdentifier((1, 3, 6, 1, 4, 1, 43))
generic = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10))
genExperimental = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 1))
genTrunk = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 1, 15))
a3ComTrunkGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1))
class RowStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6))

a3ComTrunkIfTable = MibTable((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1, 1), )
if mibBuilder.loadTexts: a3ComTrunkIfTable.setStatus('mandatory')
a3ComTrunkIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1, 1, 1), ).setIndexNames((0, "GENERIC-3COM-TRUNK-MIB", "a3ComTrunkIfIndex"))
if mibBuilder.loadTexts: a3ComTrunkIfEntry.setStatus('mandatory')
a3ComTrunkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: a3ComTrunkIfIndex.setStatus('mandatory')
a3ComTrunkIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComTrunkIfName.setStatus('mandatory')
a3ComTrunkTcmpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notAvailable", 1), ("tcmpDisable", 2), ("tcmpEnable", 3))).clone('tcmpEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComTrunkTcmpEnable.setStatus('mandatory')
a3ComTrunkMacMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("half10", 1), ("full10", 2), ("half100", 3), ("full100", 4), ("half1000", 5), ("full1000", 6))).clone('full100')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComTrunkMacMode.setStatus('mandatory')
a3ComTrunkIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1, 1, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComTrunkIfStatus.setStatus('mandatory')
a3ComTrunkMacTable = MibTable((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1, 2), )
if mibBuilder.loadTexts: a3ComTrunkMacTable.setStatus('mandatory')
a3ComTrunkMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1, 2, 1), ).setIndexNames((0, "GENERIC-3COM-TRUNK-MIB", "a3ComTrunkMacTrunkIfIndex"), (0, "GENERIC-3COM-TRUNK-MIB", "a3ComTrunkMacIndex"))
if mibBuilder.loadTexts: a3ComTrunkMacEntry.setStatus('mandatory')
a3ComTrunkMacTrunkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: a3ComTrunkMacTrunkIfIndex.setStatus('mandatory')
a3ComTrunkMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: a3ComTrunkMacIndex.setStatus('mandatory')
a3ComTrunkTcmpMacState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notInUse", 1), ("selected", 2), ("inUse", 3), ("undefined", 4), ("down", 5), ("up", 6), ("configured", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComTrunkTcmpMacState.setStatus('mandatory')
a3ComTrunkTcmpPeersTable = MibTable((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1, 3), )
if mibBuilder.loadTexts: a3ComTrunkTcmpPeersTable.setStatus('mandatory')
a3ComTrunkTcmpPeersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1, 3, 1), ).setIndexNames((0, "GENERIC-3COM-TRUNK-MIB", "a3ComTrunkPeerTrunkIfIndex"), (0, "GENERIC-3COM-TRUNK-MIB", "a3ComTrunkPeerMacIndex"), (0, "GENERIC-3COM-TRUNK-MIB", "a3ComTrunkPeersMacAddress"))
if mibBuilder.loadTexts: a3ComTrunkTcmpPeersEntry.setStatus('mandatory')
a3ComTrunkPeerTrunkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: a3ComTrunkPeerTrunkIfIndex.setStatus('mandatory')
a3ComTrunkPeerMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1, 3, 1, 2), Integer32())
if mibBuilder.loadTexts: a3ComTrunkPeerMacIndex.setStatus('mandatory')
a3ComTrunkPeersMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 1, 15, 1, 3, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComTrunkPeersMacAddress.setStatus('mandatory')
mibBuilder.exportSymbols("GENERIC-3COM-TRUNK-MIB", RowStatus=RowStatus, a3ComTrunkIfStatus=a3ComTrunkIfStatus, generic=generic, a3ComTrunkMacIndex=a3ComTrunkMacIndex, a3ComTrunkPeersMacAddress=a3ComTrunkPeersMacAddress, genTrunk=genTrunk, genExperimental=genExperimental, a3ComTrunkTcmpPeersEntry=a3ComTrunkTcmpPeersEntry, a3ComTrunkMacEntry=a3ComTrunkMacEntry, a3Com=a3Com, a3ComTrunkMacTable=a3ComTrunkMacTable, a3ComTrunkPeerMacIndex=a3ComTrunkPeerMacIndex, a3ComTrunkPeerTrunkIfIndex=a3ComTrunkPeerTrunkIfIndex, a3ComTrunkTcmpEnable=a3ComTrunkTcmpEnable, a3ComTrunkTcmpMacState=a3ComTrunkTcmpMacState, a3ComTrunkTcmpPeersTable=a3ComTrunkTcmpPeersTable, a3ComTrunkMacTrunkIfIndex=a3ComTrunkMacTrunkIfIndex, a3ComTrunkMacMode=a3ComTrunkMacMode, a3ComTrunkIfName=a3ComTrunkIfName, a3ComTrunkIfTable=a3ComTrunkIfTable, a3ComTrunkGroup=a3ComTrunkGroup, a3ComTrunkIfIndex=a3ComTrunkIfIndex, a3ComTrunkIfEntry=a3ComTrunkIfEntry)
