#
# PySNMP MIB module CISCO-DOCS-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DOCS-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:38:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
docsIfCmtsCmStatusIndex, docsIfCmtsCmStatusUpChannelIfIndex, TenthdBmV, docsIfCmtsCmStatusDownChannelIfIndex, docsIfCmtsServiceEntry, docsIfCmtsMacEntry, docsIfCmtsCmStatusIpAddress, docsIfUpstreamChannelEntry, docsIfCmtsCmStatusMacAddress, docsIfCmtsCmStatusEntry = mibBuilder.importSymbols("DOCS-IF-MIB", "docsIfCmtsCmStatusIndex", "docsIfCmtsCmStatusUpChannelIfIndex", "TenthdBmV", "docsIfCmtsCmStatusDownChannelIfIndex", "docsIfCmtsServiceEntry", "docsIfCmtsMacEntry", "docsIfCmtsCmStatusIpAddress", "docsIfUpstreamChannelEntry", "docsIfCmtsCmStatusMacAddress", "docsIfCmtsCmStatusEntry")
ChSetId, = mibBuilder.importSymbols("DOCS-IF3-MIB", "ChSetId")
ifDescr, InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifDescr", "InterfaceIndex", "ifIndex")
InetAddress, InetAddressPrefixLength, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressPrefixLength", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, MibIdentifier, IpAddress, Integer32, iso, ObjectIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Unsigned32, ModuleIdentity, Counter64, TimeTicks, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibIdentifier", "IpAddress", "Integer32", "iso", "ObjectIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Unsigned32", "ModuleIdentity", "Counter64", "TimeTicks", "Counter32")
TimeInterval, TimeStamp, MacAddress, TextualConvention, DateAndTime, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval", "TimeStamp", "MacAddress", "TextualConvention", "DateAndTime", "DisplayString", "RowStatus", "TruthValue")
ciscoDocsExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 116))
ciscoDocsExtMIB.setRevisions(('2013-03-27 00:00', '2012-11-21 00:00', '2010-06-09 00:00', '2006-03-06 00:00', '2005-07-01 00:00', '2005-04-25 00:00', '2003-07-30 00:00', '2003-02-20 00:00', '2001-10-07 00:00', '2001-08-06 00:00', '2001-04-01 00:00', '2000-07-19 00:00', '2000-05-17 00:00', '1999-12-28 00:00', '1999-01-21 00:00',))
if mibBuilder.loadTexts: ciscoDocsExtMIB.setLastUpdated('201303270000Z')
if mibBuilder.loadTexts: ciscoDocsExtMIB.setOrganization('Cisco Systems, Inc.')
class CdxResettableCounter32(TextualConvention, Gauge32):
    status = 'current'

class CdxUpstreamBondGrpList(TextualConvention, OctetString):
    status = 'current'
    displayHint = '320a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 320)

ciscoDocsExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 116, 1))
cdxQosCtrlObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1))
cdxQosQueueObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 2))
cdxCmtsCmCpeObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3))
cdxSpecMgmtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4))
cdxWBResilObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 5))
cdxDownstreamObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 6))
cdxCmtsMtcCmSfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7))
cdxQosCtrlUpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 1), )
if mibBuilder.loadTexts: cdxQosCtrlUpTable.setStatus('current')
cdxQosCtrlUpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cdxQosCtrlUpEntry.setStatus('current')
cdxQosCtrlUpAdmissionCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxQosCtrlUpAdmissionCtrl.setStatus('current')
cdxQosCtrlUpMaxRsvdBWPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxQosCtrlUpMaxRsvdBWPercent.setStatus('current')
cdxQosCtrlUpAdmissionRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxQosCtrlUpAdmissionRejects.setStatus('current')
cdxQosCtrlUpReservedBW = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 102400000))).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxQosCtrlUpReservedBW.setStatus('current')
cdxQosCtrlUpMaxVirtualBW = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 102400000))).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxQosCtrlUpMaxVirtualBW.setStatus('current')
cdxQosIfRateLimitTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 2), )
if mibBuilder.loadTexts: cdxQosIfRateLimitTable.setStatus('current')
cdxQosIfRateLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cdxQosIfRateLimitEntry.setStatus('current')
cdxQosIfRateLimitAlgm = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noRateLimit", 1), ("oneSecBurst", 2), ("carLike", 3), ("wtExPacketDiscard", 4), ("shaping", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxQosIfRateLimitAlgm.setStatus('current')
cdxQosIfRateLimitExpWt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxQosIfRateLimitExpWt.setStatus('current')
cdxQosIfRateLimitShpMaxDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("na", 1), ("msec128", 2), ("msec256", 3), ("msec512", 4), ("msec1024", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxQosIfRateLimitShpMaxDelay.setStatus('current')
cdxQosIfRateLimitShpGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("na", 1), ("msec1", 2), ("msec2", 3), ("msec4", 4), ("msec8", 5), ("msec16", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxQosIfRateLimitShpGranularity.setStatus('current')
cdxCmtsServiceExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 3), )
if mibBuilder.loadTexts: cdxCmtsServiceExtTable.setStatus('current')
cdxCmtsServiceExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 3, 1), )
docsIfCmtsServiceEntry.registerAugmentions(("CISCO-DOCS-EXT-MIB", "cdxCmtsServiceExtEntry"))
cdxCmtsServiceExtEntry.setIndexNames(*docsIfCmtsServiceEntry.getIndexNames())
if mibBuilder.loadTexts: cdxCmtsServiceExtEntry.setStatus('current')
cdxIfCmtsServiceOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsServiceOutOctets.setStatus('current')
cdxIfCmtsServiceOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsServiceOutPackets.setStatus('current')
cdxQosMaxUpBWExcessRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxQosMaxUpBWExcessRequests.setStatus('current')
cdxQosMaxDownBWExcessPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxQosMaxDownBWExcessPackets.setStatus('current')
cdxIfCmtsServiceHCInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsServiceHCInOctets.setStatus('current')
cdxIfCmtsServiceHCInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsServiceHCInPackets.setStatus('current')
cdxIfCmtsServiceHCOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsServiceHCOutOctets.setStatus('current')
cdxIfCmtsServiceHCOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsServiceHCOutPackets.setStatus('current')
cdxUpInfoElemStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 4), )
if mibBuilder.loadTexts: cdxUpInfoElemStatsTable.setStatus('current')
cdxUpInfoElemStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-DOCS-EXT-MIB", "cdxUpInfoElemStatsNameCode"))
if mibBuilder.loadTexts: cdxUpInfoElemStatsEntry.setStatus('current')
cdxUpInfoElemStatsNameCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("reqIE", 1), ("reqOrDataIE", 2), ("initMtnIE", 3), ("stnMtnIE", 4), ("shortGrantIE", 5), ("longGrantIE", 6))))
if mibBuilder.loadTexts: cdxUpInfoElemStatsNameCode.setStatus('current')
cdxUpInfoElemStatsIEType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxUpInfoElemStatsIEType.setStatus('current')
cdxBWQueueTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 2, 1), )
if mibBuilder.loadTexts: cdxBWQueueTable.setStatus('current')
cdxBWQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-DOCS-EXT-MIB", "cdxBWQueueNameCode"))
if mibBuilder.loadTexts: cdxBWQueueEntry.setStatus('current')
cdxBWQueueNameCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("cirQ", 1), ("tbeQ", 2), ("p0BEGrantQ", 3), ("p1BEGrantQ", 4), ("p2BEGrantQ", 5), ("p3BEGrantQ", 6), ("p4BEGrantQ", 7), ("p5BEGrantQ", 8), ("p6BEGrantQ", 9), ("p7BEGrantQ", 10), ("rngPollQ", 11))))
if mibBuilder.loadTexts: cdxBWQueueNameCode.setStatus('current')
cdxBWQueueOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxBWQueueOrder.setStatus('current')
cdxBWQueueNumServedBeforeYield = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxBWQueueNumServedBeforeYield.setStatus('current')
cdxBWQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("fifo", 3), ("priority", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxBWQueueType.setStatus('current')
cdxBWQueueMaxDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxBWQueueMaxDepth.setStatus('current')
cdxBWQueueDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxBWQueueDepth.setStatus('current')
cdxBWQueueDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxBWQueueDiscards.setStatus('current')
cdxCmCpeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 1), )
if mibBuilder.loadTexts: cdxCmCpeTable.setStatus('current')
cdxCmCpeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-DOCS-EXT-MIB", "cdxCmCpeMacAddress"))
if mibBuilder.loadTexts: cdxCmCpeEntry.setStatus('current')
cdxCmCpeMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: cdxCmCpeMacAddress.setStatus('current')
cdxCmCpeType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cm", 1), ("cpe", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmCpeType.setStatus('current')
cdxCmCpeIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmCpeIpAddress.setStatus('current')
cdxCmCpeIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 1, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmCpeIfIndex.setStatus('current')
cdxCmCpeCmtsServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmCpeCmtsServiceId.setStatus('current')
cdxCmCpeCmStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmCpeCmStatusIndex.setStatus('current')
cdxCmCpeAccessGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxCmCpeAccessGroup.setStatus('current')
cdxCmCpeResetNow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxCmCpeResetNow.setStatus('current')
cdxCmCpeDeleteNow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxCmCpeDeleteNow.setStatus('current')
cdxCmtsCmStatusExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 2), )
if mibBuilder.loadTexts: cdxCmtsCmStatusExtTable.setStatus('current')
cdxCmtsCmStatusExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 2, 1), )
docsIfCmtsCmStatusEntry.registerAugmentions(("CISCO-DOCS-EXT-MIB", "cdxCmtsCmStatusExtEntry"))
cdxCmtsCmStatusExtEntry.setIndexNames(*docsIfCmtsCmStatusEntry.getIndexNames())
if mibBuilder.loadTexts: cdxCmtsCmStatusExtEntry.setStatus('current')
cdxCmtsCmStatusValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("offline", 1), ("others", 2), ("initRangingRcvd", 3), ("initDhcpReqRcvd", 4), ("onlineNetAccessDisabled", 5), ("onlineKekAssigned", 6), ("onlineTekAssigned", 7), ("rejectBadMic", 8), ("rejectBadCos", 9), ("kekRejected", 10), ("tekRejected", 11), ("online", 12), ("initTftpPacketRcvd", 13), ("initTodRequestRcvd", 14), ("reset", 15), ("rangingInProgress", 16), ("rangingCompleted", 17), ("dhcpGotIpAddr", 18), ("rejStaleConfig", 19), ("rejIpSpoof", 20), ("rejClassFail", 21), ("rejRegNack", 22), ("bpiKekExpired", 23), ("bpiTekExpired", 24), ("shutdown", 25), ("channelChgInitRangingRcvd", 26), ("channelChgRangingInProgress", 27)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsCmStatusValue.setStatus('current')
cdxIfCmtsCmStatusOnlineTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsCmStatusOnlineTimes.setStatus('current')
cdxIfCmtsCmStatusPercentOnline = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsCmStatusPercentOnline.setStatus('current')
cdxIfCmtsCmStatusMinOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 2, 1, 4), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsCmStatusMinOnlineTime.setStatus('current')
cdxIfCmtsCmStatusAvgOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 2, 1, 5), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsCmStatusAvgOnlineTime.setStatus('current')
cdxIfCmtsCmStatusMaxOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 2, 1, 6), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsCmStatusMaxOnlineTime.setStatus('current')
cdxIfCmtsCmStatusMinOfflineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 2, 1, 7), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsCmStatusMinOfflineTime.setStatus('current')
cdxIfCmtsCmStatusAvgOfflineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 2, 1, 8), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsCmStatusAvgOfflineTime.setStatus('current')
cdxIfCmtsCmStatusMaxOfflineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 2, 1, 9), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsCmStatusMaxOfflineTime.setStatus('current')
cdxIfCmtsCmStatusDynSidCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsCmStatusDynSidCount.setStatus('current')
cdxIfCmtsCmStatusAddlInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 2, 1, 11), Bits().clone(namedValues=NamedValues(("noisyPlant", 0), ("modemPowerMaxOut", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsCmStatusAddlInfo.setStatus('current')
cdxIfCmtsCmStatusOnlineTimesNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 2, 1, 12), CdxResettableCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsCmStatusOnlineTimesNum.setStatus('current')
cdxIfCmtsCmStatusLastResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 2, 1, 13), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfCmtsCmStatusLastResetTime.setStatus('current')
cdxCmtsMacExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 3), )
if mibBuilder.loadTexts: cdxCmtsMacExtTable.setStatus('current')
cdxCmtsMacExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 3, 1), )
docsIfCmtsMacEntry.registerAugmentions(("CISCO-DOCS-EXT-MIB", "cdxCmtsMacExtEntry"))
cdxCmtsMacExtEntry.setIndexNames(*docsIfCmtsMacEntry.getIndexNames())
if mibBuilder.loadTexts: cdxCmtsMacExtEntry.setStatus('current')
cdxCmtsCmOnOffTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 3, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxCmtsCmOnOffTrapEnable.setStatus('current')
cdxCmtsCmOnOffTrapInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxCmtsCmOnOffTrapInterval.setStatus('current')
cdxCmtsCmDefaultMaxCpes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxCmtsCmDefaultMaxCpes.setStatus('current')
cdxCmtsCmTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsCmTotal.setStatus('current')
cdxCmtsCmActive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsCmActive.setStatus('current')
cdxCmtsCmRegistered = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsCmRegistered.setStatus('current')
cdxCmtsCmDMICMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notConfigured", 1), ("mark", 2), ("lock", 3), ("reject", 4))).clone('mark')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxCmtsCmDMICMode.setStatus('current')
cdxCmtsCmDMICLockQos = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxCmtsCmDMICLockQos.setStatus('current')
cdxCmtsCmChOverTimeExpiration = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 86400))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxCmtsCmChOverTimeExpiration.setStatus('current')
cdxCmtsCmChOverTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 5), )
if mibBuilder.loadTexts: cdxCmtsCmChOverTable.setStatus('current')
cdxCmtsCmChOverEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 5, 1), ).setIndexNames((0, "CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverSerialNumber"))
if mibBuilder.loadTexts: cdxCmtsCmChOverEntry.setStatus('current')
cdxCmtsCmChOverSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cdxCmtsCmChOverSerialNumber.setStatus('current')
cdxCmtsCmChOverMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 5, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdxCmtsCmChOverMacAddress.setStatus('current')
cdxCmtsCmChOverDownFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000000))).setUnits('hertz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdxCmtsCmChOverDownFrequency.setStatus('current')
cdxCmtsCmChOverUpChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdxCmtsCmChOverUpChannelId.setStatus('current')
cdxCmtsCmChOverTrapOnCompletion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 5, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdxCmtsCmChOverTrapOnCompletion.setStatus('current')
cdxCmtsCmChOverOpInitiatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 5, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsCmChOverOpInitiatedTime.setStatus('current')
cdxCmtsCmChOverState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("messageSent", 1), ("commandNotActive", 2), ("noOpNeeded", 3), ("modemNotFound", 4), ("waitToSendMessage", 5), ("timeOut", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsCmChOverState.setStatus('current')
cdxCmtsCmChOverRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 5, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdxCmtsCmChOverRowStatus.setStatus('current')
cdxCmtsCmTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 6), )
if mibBuilder.loadTexts: cdxCmtsCmTable.setStatus('current')
cdxCmtsCmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 6, 1), ).setIndexNames((0, "DOCS-IF-MIB", "docsIfCmtsCmStatusIndex"))
if mibBuilder.loadTexts: cdxCmtsCmEntry.setStatus('current')
cdxCmtsCmMaxCpeNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxCmtsCmMaxCpeNumber.setStatus('current')
cdxCmtsCmCurrCpeNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsCmCurrCpeNumber.setStatus('current')
cdxCmtsCmQosProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxCmtsCmQosProfile.setStatus('current')
cdxCmtsCmStatusDMICTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 7), )
if mibBuilder.loadTexts: cdxCmtsCmStatusDMICTable.setStatus('current')
cdxCmtsCmStatusDMICEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 7, 1), ).setIndexNames((0, "DOCS-IF-MIB", "docsIfCmtsCmStatusIndex"))
if mibBuilder.loadTexts: cdxCmtsCmStatusDMICEntry.setStatus('current')
cdxCmtsCmStatusDMICMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mark", 1), ("lock", 2), ("reject", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsCmStatusDMICMode.setStatus('current')
cdxCmtsCmStatusDMICUnLock = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 7, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxCmtsCmStatusDMICUnLock.setStatus('current')
cdxCmToCpeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 8), )
if mibBuilder.loadTexts: cdxCmToCpeTable.setStatus('current')
cdxCmToCpeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 8, 1), ).setIndexNames((0, "CISCO-DOCS-EXT-MIB", "cdxCmToCpeCmMacAddress"), (0, "CISCO-DOCS-EXT-MIB", "cdxCmToCpeInetAddressType"), (0, "CISCO-DOCS-EXT-MIB", "cdxCmToCpeInetAddress"))
if mibBuilder.loadTexts: cdxCmToCpeEntry.setStatus('current')
cdxCmToCpeCmMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 8, 1, 1), MacAddress())
if mibBuilder.loadTexts: cdxCmToCpeCmMacAddress.setStatus('current')
cdxCmToCpeInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 8, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmToCpeInetAddressType.setStatus('current')
cdxCmToCpeInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 8, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmToCpeInetAddress.setStatus('current')
cdxCpeToCmTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 9), )
if mibBuilder.loadTexts: cdxCpeToCmTable.setStatus('current')
cdxCpeToCmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 9, 1), ).setIndexNames((0, "CISCO-DOCS-EXT-MIB", "cdxCpeToCmCpeMacAddress"))
if mibBuilder.loadTexts: cdxCpeToCmEntry.setStatus('current')
cdxCpeToCmCpeMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 9, 1, 1), MacAddress())
if mibBuilder.loadTexts: cdxCpeToCmCpeMacAddress.setStatus('current')
cdxCpeToCmMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 9, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCpeToCmMacAddress.setStatus('current')
cdxCpeToCmInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 9, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCpeToCmInetAddressType.setStatus('current')
cdxCpeToCmInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 9, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCpeToCmInetAddress.setStatus('current')
cdxCpeToCmStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCpeToCmStatusIndex.setStatus('current')
cdxCpeIpPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 10), )
if mibBuilder.loadTexts: cdxCpeIpPrefixTable.setStatus('current')
cdxCpeIpPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 10, 1), ).setIndexNames((0, "CISCO-DOCS-EXT-MIB", "cdxCpeIpPrefixCmMacAddress"), (0, "CISCO-DOCS-EXT-MIB", "cdxCpeIpPrefixType"), (0, "CISCO-DOCS-EXT-MIB", "cdxCpeIpPrefixAddress"), (0, "CISCO-DOCS-EXT-MIB", "cdxCpeIpPrefixLen"))
if mibBuilder.loadTexts: cdxCpeIpPrefixEntry.setStatus('current')
cdxCpeIpPrefixCmMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 10, 1, 1), MacAddress())
if mibBuilder.loadTexts: cdxCpeIpPrefixCmMacAddress.setStatus('current')
cdxCpeIpPrefixType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 10, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cdxCpeIpPrefixType.setStatus('current')
cdxCpeIpPrefixAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 10, 1, 3), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 96)))
if mibBuilder.loadTexts: cdxCpeIpPrefixAddress.setStatus('current')
cdxCpeIpPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 10, 1, 4), InetAddressPrefixLength())
if mibBuilder.loadTexts: cdxCpeIpPrefixLen.setStatus('current')
cdxCpeIpPrefixCpeMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 10, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCpeIpPrefixCpeMacAddress.setStatus('current')
cdxCpeIpPrefixCpeType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 3, 10, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCpeIpPrefixCpeType.setStatus('current')
cdxIfUpstreamChannelExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1), )
if mibBuilder.loadTexts: cdxIfUpstreamChannelExtTable.setStatus('current')
cdxIfUpstreamChannelExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1, 1), )
docsIfUpstreamChannelEntry.registerAugmentions(("CISCO-DOCS-EXT-MIB", "cdxIfUpstreamChannelExtEntry"))
cdxIfUpstreamChannelExtEntry.setIndexNames(*docsIfUpstreamChannelEntry.getIndexNames())
if mibBuilder.loadTexts: cdxIfUpstreamChannelExtEntry.setStatus('current')
cdxIfUpChannelWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16000000))).setUnits('hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxIfUpChannelWidth.setStatus('current')
cdxIfUpChannelModulationProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxIfUpChannelModulationProfile.setStatus('current')
cdxIfUpChannelCmTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfUpChannelCmTotal.setStatus('current')
cdxIfUpChannelCmActive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfUpChannelCmActive.setStatus('current')
cdxIfUpChannelCmRegistered = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfUpChannelCmRegistered.setStatus('current')
cdxIfUpChannelInputPowerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1, 1, 6), TenthdBmV().subtype(subtypeSpec=ValueRangeConstraint(-100, 250))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxIfUpChannelInputPowerLevel.setStatus('current')
cdxIfUpChannelAvgUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfUpChannelAvgUtil.setStatus('current')
cdxIfUpChannelAvgContSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfUpChannelAvgContSlots.setStatus('current')
cdxIfUpChannelRangeSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfUpChannelRangeSlots.setStatus('current')
cdxIfUpChannelNumActiveUGS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfUpChannelNumActiveUGS.setStatus('current')
cdxIfUpChannelMaxUGSLastOneHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfUpChannelMaxUGSLastOneHour.setStatus('current')
cdxIfUpChannelMinUGSLastOneHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfUpChannelMinUGSLastOneHour.setStatus('current')
cdxIfUpChannelAvgUGSLastOneHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfUpChannelAvgUGSLastOneHour.setStatus('current')
cdxIfUpChannelMaxUGSLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfUpChannelMaxUGSLastFiveMins.setStatus('current')
cdxIfUpChannelMinUGSLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfUpChannelMinUGSLastFiveMins.setStatus('current')
cdxIfUpChannelAvgUGSLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 4, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxIfUpChannelAvgUGSLastFiveMins.setStatus('current')
cdxWBResilRFChangeDampenTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setUnits('Second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxWBResilRFChangeDampenTime.setStatus('current')
cdxWBResilRFChangeTriggerPercentage = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('Percentage').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxWBResilRFChangeTriggerPercentage.setStatus('current')
cdxWBResilRFChangeTriggerCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxWBResilRFChangeTriggerCount.setStatus('current')
cdxWBResilRFChangeTriggerMoveSecondary = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 5, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxWBResilRFChangeTriggerMoveSecondary.setStatus('current')
cdxWBResilNotificationEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 5, 5), Bits().clone(namedValues=NamedValues(("event", 0), ("cm-recover", 1), ("cm-pmode", 2), ("rf-up", 3), ("rf-down", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxWBResilNotificationEnable.setStatus('current')
cdxWBResilNotificationsInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 5, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400)).clone(1)).setUnits('Second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxWBResilNotificationsInterval.setStatus('current')
cdxWBResilEventLevel = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 5, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("info", 1), ("warning", 2), ("error", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cdxWBResilEventLevel.setStatus('current')
cdxWBResilEventType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 5, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("cmEventMddTimeout", 1), ("cmEventQamFecFailure", 2), ("cmEventMddRecovery", 3), ("cmEventQamFecRecovery", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cdxWBResilEventType.setStatus('current')
cdxWBResilUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 5, 9), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cdxWBResilUpdateTime.setStatus('current')
cdxWBResilEventTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 5, 10), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cdxWBResilEventTotalCount.setStatus('current')
cdxWBResilEventTotalDupCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 5, 11), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cdxWBResilEventTotalDupCount.setStatus('current')
cdxRFtoPrimaryChannelMappingTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 6, 1), )
if mibBuilder.loadTexts: cdxRFtoPrimaryChannelMappingTable.setStatus('current')
cdxRFtoPrimaryChannelMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 6, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cdxRFtoPrimaryChannelMappingEntry.setStatus('current')
cdxPrimaryChannelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 6, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxPrimaryChannelIfIndex.setStatus('current')
cdxPrimaryChanneltoRFMappingTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 6, 2), )
if mibBuilder.loadTexts: cdxPrimaryChanneltoRFMappingTable.setStatus('current')
cdxPrimaryChanneltoRFMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 6, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cdxPrimaryChanneltoRFMappingEntry.setStatus('current')
cdxPhysicalRFIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 6, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxPhysicalRFIfIndex.setStatus('current')
cdxCmtsMtcCmTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 1), )
if mibBuilder.loadTexts: cdxCmtsMtcCmTable.setStatus('current')
cdxCmtsMtcCmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-DOCS-EXT-MIB", "cdxCmtsMtcTcsId"))
if mibBuilder.loadTexts: cdxCmtsMtcCmEntry.setStatus('current')
cdxCmtsMtcTcsId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 1, 1, 1), ChSetId())
if mibBuilder.loadTexts: cdxCmtsMtcTcsId.setStatus('current')
cdxCmtsMtcCmTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsMtcCmTotal.setStatus('current')
cdxCMtsMtcCmOperational = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCMtsMtcCmOperational.setStatus('current')
cdxCmtsMtcCmRegistered = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsMtcCmRegistered.setStatus('current')
cdxCmtsMtcCmUnregistered = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsMtcCmUnregistered.setStatus('current')
cdxCmtsMtcCmOffline = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsMtcCmOffline.setStatus('current')
cdxCmtsMtcCmWideband = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsMtcCmWideband.setStatus('current')
cdxCmtsMtcUpstreamBondGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 1, 1, 8), CdxUpstreamBondGrpList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsMtcUpstreamBondGrp.setStatus('current')
cdxCmtsUscbSflowTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 2), )
if mibBuilder.loadTexts: cdxCmtsUscbSflowTable.setStatus('current')
cdxCmtsUscbSflowEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-DOCS-EXT-MIB", "cdxCmtsUsBondingGrpId"))
if mibBuilder.loadTexts: cdxCmtsUscbSflowEntry.setStatus('current')
cdxCmtsUsBondingGrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cdxCmtsUsBondingGrpId.setStatus('current')
cdxCmtsUscbSfTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsUscbSfTotal.setStatus('current')
cdxCmtsUscbSfPri = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsUscbSfPri.setStatus('current')
cdxCmtsUscbStaticSfBe = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsUscbStaticSfBe.setStatus('current')
cdxCmtsUscbStaticSfUgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsUscbStaticSfUgs.setStatus('current')
cdxCmtsUscbStaticSfUgsad = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsUscbStaticSfUgsad.setStatus('current')
cdxCmtsUscbStaticSfRtps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsUscbStaticSfRtps.setStatus('current')
cdxCmtsUscbStaticSfNrtps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsUscbStaticSfNrtps.setStatus('current')
cdxCmtsUscbDynSfBe = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsUscbDynSfBe.setStatus('current')
cdxCmtsUscbDynSfUgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsUscbDynSfUgs.setStatus('current')
cdxCmtsUscbDynSfUgsad = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsUscbDynSfUgsad.setStatus('current')
cdxCmtsUscbDynSfRtps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsUscbDynSfRtps.setStatus('current')
cdxCmtsUscbDynSfNrtps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsUscbDynSfNrtps.setStatus('current')
cdxCmtsUscbDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 116, 1, 7, 2, 1, 14), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdxCmtsUscbDescr.setStatus('current')
ciscoDocsExtNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 116, 2))
ciscoDocsExtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 116, 2, 0))
cdxCmtsCmOnOffNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 116, 2, 0, 1)).setObjects(("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusIpAddress"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusDownChannelIfIndex"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusUpChannelIfIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmtsServiceId"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmStatusValue"))
if mibBuilder.loadTexts: cdxCmtsCmOnOffNotification.setStatus('current')
cdxCmtsCmChOverNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 116, 2, 0, 2)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverMacAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverDownFrequency"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverUpChannelId"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverOpInitiatedTime"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverState"))
if mibBuilder.loadTexts: cdxCmtsCmChOverNotification.setStatus('current')
cdxCmtsCmDMICLockNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 116, 2, 0, 3)).setObjects(("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"))
if mibBuilder.loadTexts: cdxCmtsCmDMICLockNotification.setStatus('current')
cdxWBResilRFDown = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 116, 2, 0, 4)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilEventLevel"))
if mibBuilder.loadTexts: cdxWBResilRFDown.setStatus('current')
cdxWBResilRFUp = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 116, 2, 0, 5)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilEventLevel"))
if mibBuilder.loadTexts: cdxWBResilRFUp.setStatus('current')
cdxWBResilCMPartialServiceNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 116, 2, 0, 6)).setObjects(("IF-MIB", "ifIndex"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusDownChannelIfIndex"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilEventLevel"))
if mibBuilder.loadTexts: cdxWBResilCMPartialServiceNotif.setStatus('current')
cdxWBResilCMFullServiceNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 116, 2, 0, 7)).setObjects(("IF-MIB", "ifIndex"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusDownChannelIfIndex"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilEventLevel"))
if mibBuilder.loadTexts: cdxWBResilCMFullServiceNotif.setStatus('current')
cdxWBResilEvent = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 116, 2, 0, 8)).setObjects(("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilEventType"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilUpdateTime"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilEventTotalCount"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilEventTotalDupCount"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilEventLevel"))
if mibBuilder.loadTexts: cdxWBResilEvent.setStatus('current')
ciscoDocsExtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 116, 3))
cdxDocsExtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 1))
cdxDocsExtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2))
cdxDocsExtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 1, 1)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxQosCtrlGroup"), ("CISCO-DOCS-EXT-MIB", "cdxQosQueueGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCpeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxDocsExtCompliance = cdxDocsExtCompliance.setStatus('obsolete')
cdxDocsExtComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 1, 2)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxQosCtrlGroupRev1"), ("CISCO-DOCS-EXT-MIB", "cdxQosQueueGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCpeGroupRev1"), ("CISCO-DOCS-EXT-MIB", "cdxSpecMgmtGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxDocsExtComplianceRev1 = cdxDocsExtComplianceRev1.setStatus('obsolete')
cdxDocsExtComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 1, 3)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxQosCtrlGroupRev1"), ("CISCO-DOCS-EXT-MIB", "cdxQosQueueGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCpeGroupRev2"), ("CISCO-DOCS-EXT-MIB", "cdxSpecMgmtGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxDocsExtComplianceRev2 = cdxDocsExtComplianceRev2.setStatus('obsolete')
cdxDocsExtComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 1, 4)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxQosCtrlGroupRev1"), ("CISCO-DOCS-EXT-MIB", "cdxQosQueueGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCpeGroupRev3"), ("CISCO-DOCS-EXT-MIB", "cdxSpecMgmtGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxDocsExtComplianceRev3 = cdxDocsExtComplianceRev3.setStatus('obsolete')
cdxDocsExtComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 1, 5)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxQosCtrlGroupRev2"), ("CISCO-DOCS-EXT-MIB", "cdxQosQueueGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCpeGroupRev4"), ("CISCO-DOCS-EXT-MIB", "cdxSpecMgmtGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxDocsExtComplianceRev4 = cdxDocsExtComplianceRev4.setStatus('obsolete')
cdxDocsExtComplianceRev5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 1, 6)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxQosCtrlGroupRev2"), ("CISCO-DOCS-EXT-MIB", "cdxQosQueueGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCpeGroupRev4"), ("CISCO-DOCS-EXT-MIB", "cdxSpecMgmtGroupRev2"), ("CISCO-DOCS-EXT-MIB", "cdxNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxDocsExtComplianceRev5 = cdxDocsExtComplianceRev5.setStatus('obsolete')
cdxDocsExtComplianceRev6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 1, 7)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxQosCtrlGroupRev2"), ("CISCO-DOCS-EXT-MIB", "cdxQosQueueGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCpeGroupRev4"), ("CISCO-DOCS-EXT-MIB", "cdxSpecMgmtGroupRev3"), ("CISCO-DOCS-EXT-MIB", "cdxNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxDocsExtComplianceRev6 = cdxDocsExtComplianceRev6.setStatus('obsolete')
cdxDocsExtComplianceRev7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 1, 8)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxQosCtrlGroupRev2"), ("CISCO-DOCS-EXT-MIB", "cdxQosQueueGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCpeGroupRev5"), ("CISCO-DOCS-EXT-MIB", "cdxSpecMgmtGroupRev3"), ("CISCO-DOCS-EXT-MIB", "cdxNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxDocsExtComplianceRev7 = cdxDocsExtComplianceRev7.setStatus('obsolete')
cdxDocsExtComplianceRev8 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 1, 9)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxQosCtrlGroupRev2"), ("CISCO-DOCS-EXT-MIB", "cdxQosQueueGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCpeGroupRev6"), ("CISCO-DOCS-EXT-MIB", "cdxSpecMgmtGroupRev3"), ("CISCO-DOCS-EXT-MIB", "cdxNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxDocsExtComplianceRev8 = cdxDocsExtComplianceRev8.setStatus('obsolete')
cdxDocsExtComplianceRev9 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 1, 10)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxQosCtrlGroupRev2"), ("CISCO-DOCS-EXT-MIB", "cdxQosQueueGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCpeGroupRev7"), ("CISCO-DOCS-EXT-MIB", "cdxSpecMgmtGroupRev3"), ("CISCO-DOCS-EXT-MIB", "cdxNotifGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxDocsExtComplianceRev9 = cdxDocsExtComplianceRev9.setStatus('obsolete')
cdxDocsExtComplianceRev10 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 1, 11)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxQosCtrlGroupRev2"), ("CISCO-DOCS-EXT-MIB", "cdxQosQueueGroup"), ("CISCO-DOCS-EXT-MIB", "cdxSpecMgmtGroupRev3"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCpeGroupRev8"), ("CISCO-DOCS-EXT-MIB", "cdxNotifGroupRev1"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCpeDeleteGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxDocsExtComplianceRev10 = cdxDocsExtComplianceRev10.setStatus('obsolete')
cdxDocsExtComplianceRev11 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 1, 12)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxQosCtrlGroupRev2"), ("CISCO-DOCS-EXT-MIB", "cdxQosCtrlGroupExt"), ("CISCO-DOCS-EXT-MIB", "cdxNotifGroupRev1"), ("CISCO-DOCS-EXT-MIB", "cdxQosQueueGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCpeGroupRev8"), ("CISCO-DOCS-EXT-MIB", "cdxSpecMgmtGroupRev3"), ("CISCO-DOCS-EXT-MIB", "cdxDownstreamGroup"), ("CISCO-DOCS-EXT-MIB", "cdxNotifGroupExt"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxDocsExtComplianceRev11 = cdxDocsExtComplianceRev11.setStatus('deprecated')
cdxDocsExtComplianceRev12 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 1, 13)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxQosCtrlGroupRev2"), ("CISCO-DOCS-EXT-MIB", "cdxQosCtrlGroupExt"), ("CISCO-DOCS-EXT-MIB", "cdxNotifGroupRev1"), ("CISCO-DOCS-EXT-MIB", "cdxQosQueueGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCpeGroupRev8"), ("CISCO-DOCS-EXT-MIB", "cdxSpecMgmtGroupRev3"), ("CISCO-DOCS-EXT-MIB", "cdxDownstreamGroup"), ("CISCO-DOCS-EXT-MIB", "cdxNotifGroupExt"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCpeIpPrefixGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsMtcCmGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsUscbSflowGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxDocsExtComplianceRev12 = cdxDocsExtComplianceRev12.setStatus('current')
cdxQosCtrlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 1)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxQosCtrlUpAdmissionCtrl"), ("CISCO-DOCS-EXT-MIB", "cdxQosCtrlUpMaxRsvdBWPercent"), ("CISCO-DOCS-EXT-MIB", "cdxQosCtrlUpAdmissionRejects"), ("CISCO-DOCS-EXT-MIB", "cdxQosCtrlUpReservedBW"), ("CISCO-DOCS-EXT-MIB", "cdxQosCtrlUpMaxVirtualBW"), ("CISCO-DOCS-EXT-MIB", "cdxQosIfRateLimitAlgm"), ("CISCO-DOCS-EXT-MIB", "cdxQosIfRateLimitExpWt"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsServiceOutOctets"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsServiceOutPackets"), ("CISCO-DOCS-EXT-MIB", "cdxQosMaxUpBWExcessRequests"), ("CISCO-DOCS-EXT-MIB", "cdxQosMaxDownBWExcessPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxQosCtrlGroup = cdxQosCtrlGroup.setStatus('obsolete')
cdxQosQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 2)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxBWQueueOrder"), ("CISCO-DOCS-EXT-MIB", "cdxBWQueueNumServedBeforeYield"), ("CISCO-DOCS-EXT-MIB", "cdxBWQueueType"), ("CISCO-DOCS-EXT-MIB", "cdxBWQueueMaxDepth"), ("CISCO-DOCS-EXT-MIB", "cdxBWQueueDepth"), ("CISCO-DOCS-EXT-MIB", "cdxBWQueueDiscards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxQosQueueGroup = cdxQosQueueGroup.setStatus('current')
cdxCmtsCmCpeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 3)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxCmCpeType"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeIpAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeIfIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmtsServiceId"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmStatusIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeAccessGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmStatusValue"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusOnlineTimes"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusPercentOnline"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapEnable"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapInterval"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmDefaultMaxCpes"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTimeExpiration"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverMacAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverDownFrequency"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverUpChannelId"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTrapOnCompletion"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverOpInitiatedTime"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverState"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverRowStatus"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmMaxCpeNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxCmtsCmCpeGroup = cdxCmtsCmCpeGroup.setStatus('obsolete')
cdxQosCtrlGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 4)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxQosCtrlUpAdmissionCtrl"), ("CISCO-DOCS-EXT-MIB", "cdxQosCtrlUpMaxRsvdBWPercent"), ("CISCO-DOCS-EXT-MIB", "cdxQosCtrlUpAdmissionRejects"), ("CISCO-DOCS-EXT-MIB", "cdxQosCtrlUpReservedBW"), ("CISCO-DOCS-EXT-MIB", "cdxQosCtrlUpMaxVirtualBW"), ("CISCO-DOCS-EXT-MIB", "cdxQosIfRateLimitAlgm"), ("CISCO-DOCS-EXT-MIB", "cdxQosIfRateLimitExpWt"), ("CISCO-DOCS-EXT-MIB", "cdxQosIfRateLimitShpGranularity"), ("CISCO-DOCS-EXT-MIB", "cdxQosIfRateLimitShpMaxDelay"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsServiceOutOctets"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsServiceOutPackets"), ("CISCO-DOCS-EXT-MIB", "cdxQosMaxUpBWExcessRequests"), ("CISCO-DOCS-EXT-MIB", "cdxQosMaxDownBWExcessPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxQosCtrlGroupRev1 = cdxQosCtrlGroupRev1.setStatus('obsolete')
cdxCmtsCmCpeGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 5)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxCmCpeType"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeIpAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeIfIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmtsServiceId"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmStatusIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeAccessGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmStatusValue"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusOnlineTimes"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusPercentOnline"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusDynSidCount"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapEnable"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapInterval"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmDefaultMaxCpes"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTimeExpiration"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverMacAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverDownFrequency"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverUpChannelId"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTrapOnCompletion"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverOpInitiatedTime"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverState"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverRowStatus"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmMaxCpeNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxCmtsCmCpeGroupRev1 = cdxCmtsCmCpeGroupRev1.setStatus('obsolete')
cdxSpecMgmtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 6)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelWidth"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelModulationProfile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxSpecMgmtGroup = cdxSpecMgmtGroup.setStatus('obsolete')
cdxCmtsCmCpeGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 7)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxCmCpeType"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeIpAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeIfIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmtsServiceId"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmStatusIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeAccessGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeResetNow"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmStatusValue"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusOnlineTimes"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusPercentOnline"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusDynSidCount"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapEnable"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapInterval"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmDefaultMaxCpes"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTimeExpiration"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverMacAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverDownFrequency"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverUpChannelId"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTrapOnCompletion"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverOpInitiatedTime"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverState"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverRowStatus"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmMaxCpeNumber"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCurrCpeNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxCmtsCmCpeGroupRev2 = cdxCmtsCmCpeGroupRev2.setStatus('obsolete')
cdxSpecMgmtGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 8)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelWidth"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelModulationProfile"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelCmTotal"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelCmActive"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelCmRegistered"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxSpecMgmtGroupRev1 = cdxSpecMgmtGroupRev1.setStatus('obsolete')
cdxCmtsCmCpeGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 9)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxCmCpeType"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeIpAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeIfIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmtsServiceId"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmStatusIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeAccessGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeResetNow"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmStatusValue"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusOnlineTimes"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusPercentOnline"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusDynSidCount"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapEnable"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapInterval"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmDefaultMaxCpes"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmTotal"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmActive"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmRegistered"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTimeExpiration"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverMacAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverDownFrequency"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverUpChannelId"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTrapOnCompletion"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverOpInitiatedTime"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverState"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverRowStatus"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmMaxCpeNumber"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCurrCpeNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxCmtsCmCpeGroupRev3 = cdxCmtsCmCpeGroupRev3.setStatus('obsolete')
cdxQosCtrlGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 10)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxQosCtrlUpAdmissionCtrl"), ("CISCO-DOCS-EXT-MIB", "cdxQosCtrlUpMaxRsvdBWPercent"), ("CISCO-DOCS-EXT-MIB", "cdxQosCtrlUpAdmissionRejects"), ("CISCO-DOCS-EXT-MIB", "cdxQosCtrlUpReservedBW"), ("CISCO-DOCS-EXT-MIB", "cdxQosCtrlUpMaxVirtualBW"), ("CISCO-DOCS-EXT-MIB", "cdxQosIfRateLimitAlgm"), ("CISCO-DOCS-EXT-MIB", "cdxQosIfRateLimitExpWt"), ("CISCO-DOCS-EXT-MIB", "cdxQosIfRateLimitShpGranularity"), ("CISCO-DOCS-EXT-MIB", "cdxQosIfRateLimitShpMaxDelay"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsServiceOutOctets"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsServiceOutPackets"), ("CISCO-DOCS-EXT-MIB", "cdxQosMaxUpBWExcessRequests"), ("CISCO-DOCS-EXT-MIB", "cdxQosMaxDownBWExcessPackets"), ("CISCO-DOCS-EXT-MIB", "cdxUpInfoElemStatsIEType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxQosCtrlGroupRev2 = cdxQosCtrlGroupRev2.setStatus('current')
cdxCmtsCmCpeGroupRev4 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 11)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxCmCpeType"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeIpAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeIfIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmtsServiceId"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmStatusIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeAccessGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeResetNow"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmStatusValue"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusOnlineTimes"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusPercentOnline"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusDynSidCount"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAddlInfo"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapEnable"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapInterval"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmDefaultMaxCpes"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmTotal"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmActive"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmRegistered"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTimeExpiration"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverMacAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverDownFrequency"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverUpChannelId"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTrapOnCompletion"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverOpInitiatedTime"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverState"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverRowStatus"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmMaxCpeNumber"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCurrCpeNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxCmtsCmCpeGroupRev4 = cdxCmtsCmCpeGroupRev4.setStatus('obsolete')
cdxSpecMgmtGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 12)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelWidth"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelModulationProfile"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelCmTotal"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelCmActive"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelCmRegistered"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelInputPowerLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxSpecMgmtGroupRev2 = cdxSpecMgmtGroupRev2.setStatus('obsolete')
cdxNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 13)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffNotification"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxNotifGroup = cdxNotifGroup.setStatus('obsolete')
cdxSpecMgmtGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 14)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelWidth"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelModulationProfile"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelCmTotal"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelCmActive"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelCmRegistered"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelInputPowerLevel"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelAvgUtil"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelAvgContSlots"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelRangeSlots"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelNumActiveUGS"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelMaxUGSLastOneHour"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelMinUGSLastOneHour"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelAvgUGSLastOneHour"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelMaxUGSLastFiveMins"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelMinUGSLastFiveMins"), ("CISCO-DOCS-EXT-MIB", "cdxIfUpChannelAvgUGSLastFiveMins"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxSpecMgmtGroupRev3 = cdxSpecMgmtGroupRev3.setStatus('current')
cdxCmtsCmCpeGroupRev5 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 15)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxCmCpeType"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeIfIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmtsServiceId"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmStatusIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeAccessGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeResetNow"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmStatusValue"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusOnlineTimes"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusPercentOnline"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusDynSidCount"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAddlInfo"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapEnable"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapInterval"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmDefaultMaxCpes"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmTotal"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmActive"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmRegistered"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTimeExpiration"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverMacAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverDownFrequency"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverUpChannelId"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTrapOnCompletion"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverOpInitiatedTime"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverState"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverRowStatus"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmMaxCpeNumber"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCurrCpeNumber"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusOnlineTimesNum"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusLastResetTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxCmtsCmCpeGroupRev5 = cdxCmtsCmCpeGroupRev5.setStatus('obsolete')
cdxCmtsCmCpeGroupRev6 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 16)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxCmCpeType"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeIfIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmtsServiceId"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmStatusIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeAccessGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeResetNow"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmStatusValue"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusOnlineTimes"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusPercentOnline"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusDynSidCount"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAddlInfo"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapEnable"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapInterval"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmDefaultMaxCpes"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmTotal"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmActive"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmRegistered"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTimeExpiration"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverMacAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverDownFrequency"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverUpChannelId"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTrapOnCompletion"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverOpInitiatedTime"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverState"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverRowStatus"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmMaxCpeNumber"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCurrCpeNumber"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmQosProfile"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusOnlineTimesNum"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusLastResetTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxCmtsCmCpeGroupRev6 = cdxCmtsCmCpeGroupRev6.setStatus('obsolete')
cdxCmtsCmCpeGroupRev7 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 17)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxCmCpeType"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeIpAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeIfIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmtsServiceId"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmStatusIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeAccessGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeResetNow"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmStatusValue"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusOnlineTimes"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusPercentOnline"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusDynSidCount"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAddlInfo"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapEnable"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapInterval"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmDefaultMaxCpes"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmTotal"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmActive"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmRegistered"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmDMICMode"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmDMICLockQos"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTimeExpiration"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverMacAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverDownFrequency"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverUpChannelId"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTrapOnCompletion"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverOpInitiatedTime"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverState"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverRowStatus"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmMaxCpeNumber"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCurrCpeNumber"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmQosProfile"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmStatusDMICMode"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmStatusDMICUnLock"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusOnlineTimesNum"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusLastResetTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxCmtsCmCpeGroupRev7 = cdxCmtsCmCpeGroupRev7.setStatus('obsolete')
cdxCmtsCmCpeGroupRev8 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 18)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxCmCpeType"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeIpAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeIfIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmtsServiceId"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeCmStatusIndex"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeAccessGroup"), ("CISCO-DOCS-EXT-MIB", "cdxCmCpeResetNow"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmStatusValue"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusOnlineTimes"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusPercentOnline"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOnlineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMinOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAvgOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusMaxOfflineTime"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusDynSidCount"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusAddlInfo"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapEnable"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffTrapInterval"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmDefaultMaxCpes"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmTotal"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmActive"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmRegistered"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmDMICMode"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmDMICLockQos"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTimeExpiration"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverMacAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverDownFrequency"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverUpChannelId"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverTrapOnCompletion"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverOpInitiatedTime"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverState"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverRowStatus"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmMaxCpeNumber"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmCurrCpeNumber"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmQosProfile"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmStatusDMICMode"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmStatusDMICUnLock"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusOnlineTimesNum"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsCmStatusLastResetTime"), ("CISCO-DOCS-EXT-MIB", "cdxCmToCpeInetAddressType"), ("CISCO-DOCS-EXT-MIB", "cdxCmToCpeInetAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCpeToCmMacAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCpeToCmInetAddressType"), ("CISCO-DOCS-EXT-MIB", "cdxCpeToCmInetAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCpeToCmStatusIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxCmtsCmCpeGroupRev8 = cdxCmtsCmCpeGroupRev8.setStatus('current')
cdxNotifGroupRev1 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 19)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxCmtsCmOnOffNotification"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmChOverNotification"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsCmDMICLockNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxNotifGroupRev1 = cdxNotifGroupRev1.setStatus('current')
cdxCmtsCmCpeDeleteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 20)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxCmCpeDeleteNow"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxCmtsCmCpeDeleteGroup = cdxCmtsCmCpeDeleteGroup.setStatus('current')
cdxWBResilGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 21)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxWBResilRFChangeDampenTime"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilRFChangeTriggerPercentage"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilRFChangeTriggerCount"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilRFChangeTriggerMoveSecondary"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilNotificationEnable"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilNotificationsInterval"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilEventLevel"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilEventType"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilUpdateTime"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilEventTotalCount"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilEventTotalDupCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxWBResilGroup = cdxWBResilGroup.setStatus('current')
cdxNotifGroupExt = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 22)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxWBResilRFDown"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilRFUp"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilCMPartialServiceNotif"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilCMFullServiceNotif"), ("CISCO-DOCS-EXT-MIB", "cdxWBResilEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxNotifGroupExt = cdxNotifGroupExt.setStatus('current')
cdxQosCtrlGroupExt = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 23)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxIfCmtsServiceHCInOctets"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsServiceHCInPackets"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsServiceHCOutOctets"), ("CISCO-DOCS-EXT-MIB", "cdxIfCmtsServiceHCOutPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxQosCtrlGroupExt = cdxQosCtrlGroupExt.setStatus('current')
cdxDownstreamGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 24)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxPrimaryChannelIfIndex"), ("CISCO-DOCS-EXT-MIB", "cdxPhysicalRFIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxDownstreamGroup = cdxDownstreamGroup.setStatus('current')
cdxCpeIpPrefixGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 25)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxCpeIpPrefixCpeMacAddress"), ("CISCO-DOCS-EXT-MIB", "cdxCpeIpPrefixCpeType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxCpeIpPrefixGroup = cdxCpeIpPrefixGroup.setStatus('current')
cdxCmtsMtcCmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 26)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxCmtsMtcCmTotal"), ("CISCO-DOCS-EXT-MIB", "cdxCMtsMtcCmOperational"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsMtcCmRegistered"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsMtcCmUnregistered"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsMtcCmOffline"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsMtcCmWideband"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsMtcUpstreamBondGrp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxCmtsMtcCmGroup = cdxCmtsMtcCmGroup.setStatus('current')
cdxCmtsUscbSflowGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 116, 3, 2, 27)).setObjects(("CISCO-DOCS-EXT-MIB", "cdxCmtsUscbSfTotal"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsUscbSfPri"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsUscbStaticSfBe"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsUscbStaticSfUgs"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsUscbStaticSfUgsad"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsUscbStaticSfRtps"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsUscbStaticSfNrtps"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsUscbDynSfBe"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsUscbDynSfUgs"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsUscbDynSfUgsad"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsUscbDynSfRtps"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsUscbDynSfNrtps"), ("CISCO-DOCS-EXT-MIB", "cdxCmtsUscbDescr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdxCmtsUscbSflowGroup = cdxCmtsUscbSflowGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-DOCS-EXT-MIB", cdxBWQueueDepth=cdxBWQueueDepth, cdxCmtsUscbStaticSfBe=cdxCmtsUscbStaticSfBe, cdxCmtsCmChOverTimeExpiration=cdxCmtsCmChOverTimeExpiration, cdxCmtsCmChOverState=cdxCmtsCmChOverState, cdxWBResilCMPartialServiceNotif=cdxWBResilCMPartialServiceNotif, cdxSpecMgmtGroupRev3=cdxSpecMgmtGroupRev3, PYSNMP_MODULE_ID=ciscoDocsExtMIB, cdxIfCmtsCmStatusAddlInfo=cdxIfCmtsCmStatusAddlInfo, cdxCmtsUscbStaticSfRtps=cdxCmtsUscbStaticSfRtps, cdxWBResilEvent=cdxWBResilEvent, cdxDocsExtComplianceRev5=cdxDocsExtComplianceRev5, cdxWBResilRFDown=cdxWBResilRFDown, cdxCmtsCmCpeObjects=cdxCmtsCmCpeObjects, cdxWBResilRFChangeTriggerPercentage=cdxWBResilRFChangeTriggerPercentage, cdxWBResilRFUp=cdxWBResilRFUp, cdxCmtsCmChOverTable=cdxCmtsCmChOverTable, cdxIfUpChannelMinUGSLastOneHour=cdxIfUpChannelMinUGSLastOneHour, cdxCmCpeEntry=cdxCmCpeEntry, cdxCmtsCmCpeGroupRev8=cdxCmtsCmCpeGroupRev8, cdxCmtsUscbDynSfUgsad=cdxCmtsUscbDynSfUgsad, cdxCmtsMtcCmSfObjects=cdxCmtsMtcCmSfObjects, cdxCpeToCmStatusIndex=cdxCpeToCmStatusIndex, cdxCMtsMtcCmOperational=cdxCMtsMtcCmOperational, cdxWBResilEventLevel=cdxWBResilEventLevel, cdxIfCmtsCmStatusMinOfflineTime=cdxIfCmtsCmStatusMinOfflineTime, cdxCmCpeCmtsServiceId=cdxCmCpeCmtsServiceId, cdxCmtsCmOnOffNotification=cdxCmtsCmOnOffNotification, cdxDocsExtComplianceRev11=cdxDocsExtComplianceRev11, cdxQosIfRateLimitShpGranularity=cdxQosIfRateLimitShpGranularity, cdxCmtsCmCpeGroup=cdxCmtsCmCpeGroup, cdxCmtsMacExtTable=cdxCmtsMacExtTable, CdxResettableCounter32=CdxResettableCounter32, cdxDocsExtCompliance=cdxDocsExtCompliance, cdxDocsExtComplianceRev6=cdxDocsExtComplianceRev6, cdxPhysicalRFIfIndex=cdxPhysicalRFIfIndex, cdxCmtsMtcCmTable=cdxCmtsMtcCmTable, cdxCmtsCmChOverTrapOnCompletion=cdxCmtsCmChOverTrapOnCompletion, cdxIfCmtsServiceOutPackets=cdxIfCmtsServiceOutPackets, cdxCmtsMtcCmEntry=cdxCmtsMtcCmEntry, cdxCmtsCmChOverSerialNumber=cdxCmtsCmChOverSerialNumber, cdxCmtsCmMaxCpeNumber=cdxCmtsCmMaxCpeNumber, cdxIfUpChannelAvgUGSLastOneHour=cdxIfUpChannelAvgUGSLastOneHour, cdxRFtoPrimaryChannelMappingTable=cdxRFtoPrimaryChannelMappingTable, cdxWBResilNotificationEnable=cdxWBResilNotificationEnable, cdxWBResilEventTotalCount=cdxWBResilEventTotalCount, cdxIfCmtsCmStatusAvgOnlineTime=cdxIfCmtsCmStatusAvgOnlineTime, cdxCmtsCmChOverOpInitiatedTime=cdxCmtsCmChOverOpInitiatedTime, cdxCpeToCmEntry=cdxCpeToCmEntry, cdxCmCpeIpAddress=cdxCmCpeIpAddress, cdxIfUpChannelAvgUtil=cdxIfUpChannelAvgUtil, cdxCmtsCmStatusExtEntry=cdxCmtsCmStatusExtEntry, cdxCmCpeDeleteNow=cdxCmCpeDeleteNow, cdxCmCpeTable=cdxCmCpeTable, cdxWBResilRFChangeDampenTime=cdxWBResilRFChangeDampenTime, cdxCmtsUscbStaticSfUgsad=cdxCmtsUscbStaticSfUgsad, cdxCmtsUscbSflowEntry=cdxCmtsUscbSflowEntry, cdxQosCtrlUpMaxRsvdBWPercent=cdxQosCtrlUpMaxRsvdBWPercent, cdxQosCtrlUpReservedBW=cdxQosCtrlUpReservedBW, cdxUpInfoElemStatsTable=cdxUpInfoElemStatsTable, cdxWBResilEventTotalDupCount=cdxWBResilEventTotalDupCount, cdxBWQueueNumServedBeforeYield=cdxBWQueueNumServedBeforeYield, cdxCmCpeCmStatusIndex=cdxCmCpeCmStatusIndex, cdxCmtsCmStatusDMICMode=cdxCmtsCmStatusDMICMode, cdxIfUpChannelCmActive=cdxIfUpChannelCmActive, cdxQosIfRateLimitTable=cdxQosIfRateLimitTable, cdxCmtsServiceExtTable=cdxCmtsServiceExtTable, ciscoDocsExtNotifications=ciscoDocsExtNotifications, cdxCmtsCmDMICLockQos=cdxCmtsCmDMICLockQos, cdxCmtsUscbDescr=cdxCmtsUscbDescr, cdxCmtsCmStatusExtTable=cdxCmtsCmStatusExtTable, cdxBWQueueOrder=cdxBWQueueOrder, cdxQosCtrlUpMaxVirtualBW=cdxQosCtrlUpMaxVirtualBW, cdxCmtsCmCpeGroupRev3=cdxCmtsCmCpeGroupRev3, cdxCpeIpPrefixTable=cdxCpeIpPrefixTable, cdxIfCmtsServiceOutOctets=cdxIfCmtsServiceOutOctets, cdxPrimaryChanneltoRFMappingTable=cdxPrimaryChanneltoRFMappingTable, cdxCpeIpPrefixEntry=cdxCpeIpPrefixEntry, cdxBWQueueDiscards=cdxBWQueueDiscards, cdxIfCmtsServiceHCInOctets=cdxIfCmtsServiceHCInOctets, cdxIfCmtsCmStatusOnlineTimes=cdxIfCmtsCmStatusOnlineTimes, cdxCmtsCmTotal=cdxCmtsCmTotal, cdxBWQueueTable=cdxBWQueueTable, cdxCmtsCmEntry=cdxCmtsCmEntry, cdxCmCpeMacAddress=cdxCmCpeMacAddress, cdxNotifGroupRev1=cdxNotifGroupRev1, cdxCmtsCmQosProfile=cdxCmtsCmQosProfile, cdxCpeToCmInetAddress=cdxCpeToCmInetAddress, ciscoDocsExtMIBObjects=ciscoDocsExtMIBObjects, cdxQosQueueGroup=cdxQosQueueGroup, cdxPrimaryChannelIfIndex=cdxPrimaryChannelIfIndex, cdxQosCtrlGroup=cdxQosCtrlGroup, cdxQosCtrlGroupExt=cdxQosCtrlGroupExt, ciscoDocsExtMIB=ciscoDocsExtMIB, cdxCpeToCmMacAddress=cdxCpeToCmMacAddress, cdxCmtsCmStatusDMICTable=cdxCmtsCmStatusDMICTable, cdxCmtsCmRegistered=cdxCmtsCmRegistered, cdxQosQueueObjects=cdxQosQueueObjects, cdxCmtsCmTable=cdxCmtsCmTable, cdxCmtsMtcCmTotal=cdxCmtsMtcCmTotal, cdxCmtsCmCpeGroupRev6=cdxCmtsCmCpeGroupRev6, cdxQosCtrlUpAdmissionCtrl=cdxQosCtrlUpAdmissionCtrl, cdxCmtsCmCpeGroupRev4=cdxCmtsCmCpeGroupRev4, cdxIfCmtsCmStatusOnlineTimesNum=cdxIfCmtsCmStatusOnlineTimesNum, cdxSpecMgmtGroupRev1=cdxSpecMgmtGroupRev1, cdxCpeToCmInetAddressType=cdxCpeToCmInetAddressType, cdxCmtsCmStatusValue=cdxCmtsCmStatusValue, cdxCmtsCmChOverMacAddress=cdxCmtsCmChOverMacAddress, cdxCmtsCmChOverDownFrequency=cdxCmtsCmChOverDownFrequency, cdxCpeIpPrefixCpeMacAddress=cdxCpeIpPrefixCpeMacAddress, cdxIfUpChannelAvgUGSLastFiveMins=cdxIfUpChannelAvgUGSLastFiveMins, cdxIfCmtsCmStatusMinOnlineTime=cdxIfCmtsCmStatusMinOnlineTime, cdxDocsExtComplianceRev10=cdxDocsExtComplianceRev10, cdxWBResilRFChangeTriggerMoveSecondary=cdxWBResilRFChangeTriggerMoveSecondary, cdxCmtsMtcCmRegistered=cdxCmtsMtcCmRegistered, cdxCmtsUscbSfTotal=cdxCmtsUscbSfTotal, cdxCmtsUscbStaticSfNrtps=cdxCmtsUscbStaticSfNrtps, cdxQosCtrlGroupRev1=cdxQosCtrlGroupRev1, cdxCpeIpPrefixLen=cdxCpeIpPrefixLen, cdxQosCtrlUpEntry=cdxQosCtrlUpEntry, cdxDocsExtComplianceRev1=cdxDocsExtComplianceRev1, cdxCpeIpPrefixGroup=cdxCpeIpPrefixGroup, cdxIfCmtsServiceHCOutOctets=cdxIfCmtsServiceHCOutOctets, cdxIfUpChannelMinUGSLastFiveMins=cdxIfUpChannelMinUGSLastFiveMins, cdxWBResilGroup=cdxWBResilGroup, cdxDocsExtCompliances=cdxDocsExtCompliances, cdxCmtsCmOnOffTrapEnable=cdxCmtsCmOnOffTrapEnable, cdxCmtsMtcCmOffline=cdxCmtsMtcCmOffline, cdxSpecMgmtGroupRev2=cdxSpecMgmtGroupRev2, cdxNotifGroupExt=cdxNotifGroupExt, cdxQosCtrlObjects=cdxQosCtrlObjects, cdxCmtsUscbSflowTable=cdxCmtsUscbSflowTable, cdxIfCmtsCmStatusDynSidCount=cdxIfCmtsCmStatusDynSidCount, cdxCmtsCmDMICMode=cdxCmtsCmDMICMode, cdxCmtsCmCpeGroupRev1=cdxCmtsCmCpeGroupRev1, cdxUpInfoElemStatsIEType=cdxUpInfoElemStatsIEType, cdxIfUpstreamChannelExtTable=cdxIfUpstreamChannelExtTable, cdxCmtsMtcUpstreamBondGrp=cdxCmtsMtcUpstreamBondGrp, cdxWBResilCMFullServiceNotif=cdxWBResilCMFullServiceNotif, cdxCmtsUscbSflowGroup=cdxCmtsUscbSflowGroup, cdxDocsExtComplianceRev9=cdxDocsExtComplianceRev9, cdxCmtsCmCpeGroupRev2=cdxCmtsCmCpeGroupRev2, cdxCmtsCmChOverUpChannelId=cdxCmtsCmChOverUpChannelId, cdxQosCtrlUpTable=cdxQosCtrlUpTable, cdxCmtsUscbSfPri=cdxCmtsUscbSfPri, CdxUpstreamBondGrpList=CdxUpstreamBondGrpList, cdxCmtsCmChOverEntry=cdxCmtsCmChOverEntry, cdxCmtsCmStatusDMICEntry=cdxCmtsCmStatusDMICEntry, cdxQosMaxUpBWExcessRequests=cdxQosMaxUpBWExcessRequests, cdxIfUpChannelAvgContSlots=cdxIfUpChannelAvgContSlots, cdxDownstreamObjects=cdxDownstreamObjects, cdxIfCmtsCmStatusMaxOnlineTime=cdxIfCmtsCmStatusMaxOnlineTime, cdxNotifGroup=cdxNotifGroup, cdxCmtsCmChOverNotification=cdxCmtsCmChOverNotification, cdxBWQueueNameCode=cdxBWQueueNameCode, cdxQosMaxDownBWExcessPackets=cdxQosMaxDownBWExcessPackets, cdxUpInfoElemStatsNameCode=cdxUpInfoElemStatsNameCode, cdxCmCpeType=cdxCmCpeType, cdxCmCpeAccessGroup=cdxCmCpeAccessGroup, cdxBWQueueMaxDepth=cdxBWQueueMaxDepth, cdxQosIfRateLimitExpWt=cdxQosIfRateLimitExpWt, cdxIfUpChannelMaxUGSLastOneHour=cdxIfUpChannelMaxUGSLastOneHour, cdxQosIfRateLimitShpMaxDelay=cdxQosIfRateLimitShpMaxDelay, cdxCpeIpPrefixCmMacAddress=cdxCpeIpPrefixCmMacAddress, cdxCmtsServiceExtEntry=cdxCmtsServiceExtEntry, cdxCmtsUscbStaticSfUgs=cdxCmtsUscbStaticSfUgs, cdxCmCpeIfIndex=cdxCmCpeIfIndex, cdxCmtsUscbDynSfNrtps=cdxCmtsUscbDynSfNrtps, cdxCmToCpeTable=cdxCmToCpeTable, cdxCmtsCmCpeGroupRev7=cdxCmtsCmCpeGroupRev7, cdxCmtsCmDefaultMaxCpes=cdxCmtsCmDefaultMaxCpes, cdxCpeToCmCpeMacAddress=cdxCpeToCmCpeMacAddress, cdxDocsExtComplianceRev12=cdxDocsExtComplianceRev12, cdxIfCmtsCmStatusPercentOnline=cdxIfCmtsCmStatusPercentOnline, cdxSpecMgmtObjects=cdxSpecMgmtObjects, cdxQosIfRateLimitEntry=cdxQosIfRateLimitEntry, cdxCmToCpeCmMacAddress=cdxCmToCpeCmMacAddress, cdxDocsExtComplianceRev8=cdxDocsExtComplianceRev8, cdxCmtsUscbDynSfUgs=cdxCmtsUscbDynSfUgs, cdxCpeIpPrefixCpeType=cdxCpeIpPrefixCpeType, cdxCmToCpeInetAddress=cdxCmToCpeInetAddress, cdxCmtsCmCurrCpeNumber=cdxCmtsCmCurrCpeNumber, cdxWBResilEventType=cdxWBResilEventType, cdxWBResilRFChangeTriggerCount=cdxWBResilRFChangeTriggerCount, cdxDocsExtGroups=cdxDocsExtGroups, cdxCmtsMacExtEntry=cdxCmtsMacExtEntry, ciscoDocsExtNotificationsPrefix=ciscoDocsExtNotificationsPrefix, cdxBWQueueEntry=cdxBWQueueEntry, cdxCmtsCmChOverRowStatus=cdxCmtsCmChOverRowStatus, cdxWBResilObjects=cdxWBResilObjects, cdxQosCtrlUpAdmissionRejects=cdxQosCtrlUpAdmissionRejects, cdxIfUpChannelModulationProfile=cdxIfUpChannelModulationProfile, cdxCmtsCmCpeGroupRev5=cdxCmtsCmCpeGroupRev5, cdxCpeIpPrefixType=cdxCpeIpPrefixType, cdxIfUpChannelNumActiveUGS=cdxIfUpChannelNumActiveUGS, cdxSpecMgmtGroup=cdxSpecMgmtGroup, ciscoDocsExtConformance=ciscoDocsExtConformance, cdxIfCmtsCmStatusLastResetTime=cdxIfCmtsCmStatusLastResetTime, cdxIfUpChannelCmRegistered=cdxIfUpChannelCmRegistered, cdxIfUpChannelMaxUGSLastFiveMins=cdxIfUpChannelMaxUGSLastFiveMins, cdxIfUpstreamChannelExtEntry=cdxIfUpstreamChannelExtEntry, cdxCmtsUscbDynSfBe=cdxCmtsUscbDynSfBe, cdxCmtsCmCpeDeleteGroup=cdxCmtsCmCpeDeleteGroup, cdxCmtsMtcCmUnregistered=cdxCmtsMtcCmUnregistered, cdxIfUpChannelRangeSlots=cdxIfUpChannelRangeSlots, cdxDownstreamGroup=cdxDownstreamGroup, cdxCmToCpeEntry=cdxCmToCpeEntry, cdxIfCmtsServiceHCInPackets=cdxIfCmtsServiceHCInPackets, cdxCpeToCmTable=cdxCpeToCmTable, cdxQosIfRateLimitAlgm=cdxQosIfRateLimitAlgm, cdxIfCmtsCmStatusAvgOfflineTime=cdxIfCmtsCmStatusAvgOfflineTime, cdxRFtoPrimaryChannelMappingEntry=cdxRFtoPrimaryChannelMappingEntry, cdxPrimaryChanneltoRFMappingEntry=cdxPrimaryChanneltoRFMappingEntry, cdxCmtsCmDMICLockNotification=cdxCmtsCmDMICLockNotification, cdxIfUpChannelCmTotal=cdxIfUpChannelCmTotal, cdxCmtsMtcTcsId=cdxCmtsMtcTcsId, cdxCmCpeResetNow=cdxCmCpeResetNow, cdxIfUpChannelWidth=cdxIfUpChannelWidth, cdxDocsExtComplianceRev7=cdxDocsExtComplianceRev7, cdxCmtsCmStatusDMICUnLock=cdxCmtsCmStatusDMICUnLock, cdxIfUpChannelInputPowerLevel=cdxIfUpChannelInputPowerLevel, cdxDocsExtComplianceRev2=cdxDocsExtComplianceRev2, cdxCmtsCmActive=cdxCmtsCmActive, cdxUpInfoElemStatsEntry=cdxUpInfoElemStatsEntry, cdxWBResilUpdateTime=cdxWBResilUpdateTime, cdxCmtsMtcCmGroup=cdxCmtsMtcCmGroup, cdxIfCmtsServiceHCOutPackets=cdxIfCmtsServiceHCOutPackets, cdxCmtsMtcCmWideband=cdxCmtsMtcCmWideband, cdxCpeIpPrefixAddress=cdxCpeIpPrefixAddress, cdxCmtsUscbDynSfRtps=cdxCmtsUscbDynSfRtps, cdxDocsExtComplianceRev3=cdxDocsExtComplianceRev3, cdxQosCtrlGroupRev2=cdxQosCtrlGroupRev2, cdxIfCmtsCmStatusMaxOfflineTime=cdxIfCmtsCmStatusMaxOfflineTime, cdxDocsExtComplianceRev4=cdxDocsExtComplianceRev4, cdxCmtsUsBondingGrpId=cdxCmtsUsBondingGrpId, cdxCmToCpeInetAddressType=cdxCmToCpeInetAddressType, cdxWBResilNotificationsInterval=cdxWBResilNotificationsInterval, cdxBWQueueType=cdxBWQueueType, cdxCmtsCmOnOffTrapInterval=cdxCmtsCmOnOffTrapInterval)
