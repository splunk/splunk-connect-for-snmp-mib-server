#
# PySNMP MIB module RDN-MODULES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RDN-MODULES-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:46:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
rdnDefinitions, = mibBuilder.importSymbols("RDN-DEFINITIONS-MIB", "rdnDefinitions")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ModuleIdentity, ObjectIdentity, Counter32, Counter64, Gauge32, NotificationType, Unsigned32, TimeTicks, IpAddress, Integer32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ModuleIdentity", "ObjectIdentity", "Counter32", "Counter64", "Gauge32", "NotificationType", "Unsigned32", "TimeTicks", "IpAddress", "Integer32", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
rdnModules = ModuleIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4))
rdnModules.setRevisions(('2008-08-08 00:00', '2003-11-05 00:00', '2003-04-29 00:00', '2001-04-18 00:00',))
if mibBuilder.loadTexts: rdnModules.setLastUpdated('200808080000Z')
if mibBuilder.loadTexts: rdnModules.setOrganization('Motorola')
rdnModulesUnknown = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 0))
if mibBuilder.loadTexts: rdnModulesUnknown.setStatus('current')
rdnModulesSrm = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 1))
if mibBuilder.loadTexts: rdnModulesSrm.setStatus('current')
rdnModulesCmts = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 2))
if mibBuilder.loadTexts: rdnModulesCmts.setStatus('current')
rdnModulesHsim2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 3))
if mibBuilder.loadTexts: rdnModulesHsim2.setStatus('current')
rdnModulesHsim2PosEth = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 4))
if mibBuilder.loadTexts: rdnModulesHsim2PosEth.setStatus('current')
rdnModulesHsim2Pos2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 5))
if mibBuilder.loadTexts: rdnModulesHsim2Pos2.setStatus('current')
rdnModulesHsim2PosOc48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 6))
if mibBuilder.loadTexts: rdnModulesHsim2PosOc48.setStatus('current')
rdnModulesHsim2PosDoc48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 7))
if mibBuilder.loadTexts: rdnModulesHsim2PosDoc48.setStatus('current')
rdnModulesHsim2PosAtm = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 8))
if mibBuilder.loadTexts: rdnModulesHsim2PosAtm.setStatus('current')
rdnModulesHsim2Eth8 = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 9))
if mibBuilder.loadTexts: rdnModulesHsim2Eth8.setStatus('current')
rdnModulesHsim2Gige = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 10))
if mibBuilder.loadTexts: rdnModulesHsim2Gige.setStatus('current')
rdnModulesOsr = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 11))
if mibBuilder.loadTexts: rdnModulesOsr.setStatus('current')
rdnModulesBsr1000 = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 12))
if mibBuilder.loadTexts: rdnModulesBsr1000.setStatus('current')
rdnModulesHsim2GigeMM = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 13))
if mibBuilder.loadTexts: rdnModulesHsim2GigeMM.setStatus('current')
rdnModulesHsim4GigeEth8 = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 15))
if mibBuilder.loadTexts: rdnModulesHsim4GigeEth8.setStatus('current')
mibBuilder.exportSymbols("RDN-MODULES-MIB", rdnModulesHsim2PosOc48=rdnModulesHsim2PosOc48, rdnModulesHsim2Gige=rdnModulesHsim2Gige, rdnModulesBsr1000=rdnModulesBsr1000, rdnModulesHsim4GigeEth8=rdnModulesHsim4GigeEth8, rdnModulesHsim2PosDoc48=rdnModulesHsim2PosDoc48, rdnModulesHsim2PosAtm=rdnModulesHsim2PosAtm, rdnModulesOsr=rdnModulesOsr, rdnModules=rdnModules, rdnModulesHsim2=rdnModulesHsim2, PYSNMP_MODULE_ID=rdnModules, rdnModulesHsim2PosEth=rdnModulesHsim2PosEth, rdnModulesHsim2Eth8=rdnModulesHsim2Eth8, rdnModulesUnknown=rdnModulesUnknown, rdnModulesHsim2Pos2=rdnModulesHsim2Pos2, rdnModulesHsim2GigeMM=rdnModulesHsim2GigeMM, rdnModulesCmts=rdnModulesCmts, rdnModulesSrm=rdnModulesSrm)
