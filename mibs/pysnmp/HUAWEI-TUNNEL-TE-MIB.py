#
# PySNMP MIB module HUAWEI-TUNNEL-TE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-TUNNEL-TE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:37:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
MplsIndexType, = mibBuilder.importSymbols("MPLS-LSR-STD-MIB", "MplsIndexType")
MplsExtendedTunnelId, MplsTunnelIndex, MplsTunnelInstanceIndex = mibBuilder.importSymbols("MPLS-TC-STD-MIB", "MplsExtendedTunnelId", "MplsTunnelIndex", "MplsTunnelInstanceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter64, Bits, Integer32, ModuleIdentity, TimeTicks, NotificationType, Gauge32, IpAddress, ObjectIdentity, Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Bits", "Integer32", "ModuleIdentity", "TimeTicks", "NotificationType", "Gauge32", "IpAddress", "ObjectIdentity", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "iso")
DisplayString, RowStatus, TruthValue, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TruthValue", "TextualConvention", "TimeStamp")
hwTunnelTeMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151))
hwTunnelTeMib.setRevisions(('2013-08-28 17:26', '2006-06-30 15:54',))
if mibBuilder.loadTexts: hwTunnelTeMib.setLastUpdated('201308281726Z')
if mibBuilder.loadTexts: hwTunnelTeMib.setOrganization('Huawei Technologies Co.,Ltd.')
hwTunnelTeMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1))
hwTunnelDiffServTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 1), )
if mibBuilder.loadTexts: hwTunnelDiffServTable.setStatus('current')
hwTunnelDiffServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 1, 1), ).setIndexNames((0, "HUAWEI-TUNNEL-TE-MIB", "hwTunnelDiffServIndex"))
if mibBuilder.loadTexts: hwTunnelDiffServEntry.setStatus('current')
hwTunnelDiffServIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwTunnelDiffServIndex.setStatus('current')
hwTunnelDiffServMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pipe", 1), ("uniform", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelDiffServMode.setStatus('current')
hwTunnelDiffServServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 255))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8), ("invalidClass", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelDiffServServiceClass.setStatus('current')
hwTunnelDiffServColor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 255))).clone(namedValues=NamedValues(("green", 1), ("yellow", 2), ("red", 3), ("invalidColor", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelDiffServColor.setStatus('current')
hwTunnelTeFlowQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelTeFlowQueue.setStatus('current')
hwTunnelTeVsiTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 2), )
if mibBuilder.loadTexts: hwTunnelTeVsiTable.setStatus('obsolete')
hwTunnelTeVsiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 2, 1), ).setIndexNames((0, "HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeVsiIndex"), (0, "HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeVsiName"))
if mibBuilder.loadTexts: hwTunnelTeVsiEntry.setStatus('obsolete')
hwTunnelTeVsiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwTunnelTeVsiIndex.setStatus('obsolete')
hwTunnelTeVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47)))
if mibBuilder.loadTexts: hwTunnelTeVsiName.setStatus('obsolete')
hwTunnelTeVsiCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelTeVsiCir.setStatus('obsolete')
hwTunnelTeVsiPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelTeVsiPir.setStatus('obsolete')
hwTunnelTeVsiFlowQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelTeVsiFlowQueue.setStatus('obsolete')
hwTunnelTeVllTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 3), )
if mibBuilder.loadTexts: hwTunnelTeVllTable.setStatus('obsolete')
hwTunnelTeVllEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 3, 1), ).setIndexNames((0, "HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeVllIndex"), (0, "HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeVllInterfaceName"))
if mibBuilder.loadTexts: hwTunnelTeVllEntry.setStatus('obsolete')
hwTunnelTeVllIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwTunnelTeVllIndex.setStatus('obsolete')
hwTunnelTeVllInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47)))
if mibBuilder.loadTexts: hwTunnelTeVllInterfaceName.setStatus('obsolete')
hwTunnelTeVllCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelTeVllCir.setStatus('obsolete')
hwTunnelTeVllPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelTeVllPir.setStatus('obsolete')
hwTunnelTeVllFlowQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelTeVllFlowQueue.setStatus('obsolete')
hwTunnelTeL3vpnTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 4), )
if mibBuilder.loadTexts: hwTunnelTeL3vpnTable.setStatus('obsolete')
hwTunnelTeL3vpnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 4, 1), ).setIndexNames((0, "HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeL3vpnIndex"), (0, "HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeL3vpnName"))
if mibBuilder.loadTexts: hwTunnelTeL3vpnEntry.setStatus('obsolete')
hwTunnelTeL3vpnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwTunnelTeL3vpnIndex.setStatus('obsolete')
hwTunnelTeL3vpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47)))
if mibBuilder.loadTexts: hwTunnelTeL3vpnName.setStatus('obsolete')
hwTunnelTeL3vpnCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelTeL3vpnCir.setStatus('obsolete')
hwTunnelTeL3vpnPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelTeL3vpnPir.setStatus('obsolete')
hwTunnelTeL3vpnFlowQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelTeL3vpnFlowQueue.setStatus('obsolete')
hwTunnelTeStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 5), )
if mibBuilder.loadTexts: hwTunnelTeStatisticsTable.setStatus('current')
hwTunnelTeStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 5, 1), ).setIndexNames((0, "HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeStatisticsIfIndex"))
if mibBuilder.loadTexts: hwTunnelTeStatisticsEntry.setStatus('current')
hwTunnelTeStatisticsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwTunnelTeStatisticsIfIndex.setStatus('current')
hwTunnelTeUpDownStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelTeUpDownStatistics.setStatus('current')
hwTunnTeCounterDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 5, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnTeCounterDiscontinuityTime.setStatus('current')
hwCtTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 6), )
if mibBuilder.loadTexts: hwCtTemplateTable.setStatus('current')
hwCtTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 6, 1), ).setIndexNames((0, "HUAWEI-TUNNEL-TE-MIB", "hwCtTemplateIndex"))
if mibBuilder.loadTexts: hwCtTemplateEntry.setStatus('current')
hwCtTemplateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: hwCtTemplateIndex.setStatus('current')
hwCtTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 19))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCtTemplateName.setStatus('current')
hwCtTemplateCt0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 6, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCtTemplateCt0.setStatus('current')
hwCtTemplateCt1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCtTemplateCt1.setStatus('current')
hwCtTemplateCt2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 6, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCtTemplateCt2.setStatus('current')
hwCtTemplateCt3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 6, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCtTemplateCt3.setStatus('current')
hwCtTemplateCt4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 6, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCtTemplateCt4.setStatus('current')
hwCtTemplateCt5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 6, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCtTemplateCt5.setStatus('current')
hwCtTemplateCt6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 6, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCtTemplateCt6.setStatus('current')
hwCtTemplateCt7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 6, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCtTemplateCt7.setStatus('current')
hwCtTemplateCommit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 6, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notCommit", 1), ("commit", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCtTemplateCommit.setStatus('current')
hwCtTemplateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 6, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCtTemplateRowStatus.setStatus('current')
hwCtConfigTunnelCtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 7), )
if mibBuilder.loadTexts: hwCtConfigTunnelCtTable.setStatus('current')
hwCtConfigTunnelCtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 7, 1), ).setIndexNames((0, "HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTunnelCtIfIndex"))
if mibBuilder.loadTexts: hwCtConfigTunnelCtEntry.setStatus('current')
hwCtConfigTunnelCtIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 7, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwCtConfigTunnelCtIfIndex.setStatus('current')
hwCtConfigTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtConfigTunnelName.setStatus('current')
hwCtConfigTunnelCommit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notCommit", 1), ("commit", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtConfigTunnelCommit.setStatus('current')
hwCtConfigTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 7, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtConfigTemplateName.setStatus('current')
hwCtConfigTunnelCt0Band = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 7, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtConfigTunnelCt0Band.setStatus('current')
hwCtConfigTunnelCt1Band = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 7, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtConfigTunnelCt1Band.setStatus('current')
hwCtConfigTunnelCt2Band = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 7, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtConfigTunnelCt2Band.setStatus('current')
hwCtConfigTunnelCt3Band = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 7, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtConfigTunnelCt3Band.setStatus('current')
hwCtConfigTunnelCt4Band = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 7, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtConfigTunnelCt4Band.setStatus('current')
hwCtConfigTunnelCt5Band = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 7, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtConfigTunnelCt5Band.setStatus('current')
hwCtConfigTunnelCt6Band = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 7, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtConfigTunnelCt6Band.setStatus('current')
hwCtConfigTunnelCt7Band = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 7, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtConfigTunnelCt7Band.setStatus('current')
hwCtStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8), )
if mibBuilder.loadTexts: hwCtStatisticsTable.setStatus('current')
hwCtStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1), ).setIndexNames((0, "HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsIfIndex"))
if mibBuilder.loadTexts: hwCtStatisticsEntry.setStatus('current')
hwCtStatisticsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwCtStatisticsIfIndex.setStatus('current')
hwCtStatisticsTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsTunnelName.setStatus('current')
hwCtStatisticsCt0OutByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt0OutByteRate.setStatus('current')
hwCtStatisticsCt0OutPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt0OutPktRate.setStatus('current')
hwCtStatisticsCt0OutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt0OutPkt.setStatus('current')
hwCtStatisticsCt0OutPktByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt0OutPktByte.setStatus('current')
hwCtStatisticsCt0OutErrorPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt0OutErrorPkt.setStatus('current')
hwCtStatisticsCt1OutByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt1OutByteRate.setStatus('current')
hwCtStatisticsCt1OutPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt1OutPktRate.setStatus('current')
hwCtStatisticsCt1OutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt1OutPkt.setStatus('current')
hwCtStatisticsCt1OutPktByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt1OutPktByte.setStatus('current')
hwCtStatisticsCt1OutErrorPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt1OutErrorPkt.setStatus('current')
hwCtStatisticsCt2OutByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt2OutByteRate.setStatus('current')
hwCtStatisticsCt2OutPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt2OutPktRate.setStatus('current')
hwCtStatisticsCt2OutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt2OutPkt.setStatus('current')
hwCtStatisticsCt2OutPktByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt2OutPktByte.setStatus('current')
hwCtStatisticsCt2OutErrorPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt2OutErrorPkt.setStatus('current')
hwCtStatisticsCt3OutByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt3OutByteRate.setStatus('current')
hwCtStatisticsCt3OutPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt3OutPktRate.setStatus('current')
hwCtStatisticsCt3OutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt3OutPkt.setStatus('current')
hwCtStatisticsCt3OutPktByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt3OutPktByte.setStatus('current')
hwCtStatisticsCt3OutErrorPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt3OutErrorPkt.setStatus('current')
hwCtStatisticsCt4OutByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt4OutByteRate.setStatus('current')
hwCtStatisticsCt4OutPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt4OutPktRate.setStatus('current')
hwCtStatisticsCt4OutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt4OutPkt.setStatus('current')
hwCtStatisticsCt4OutPktByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt4OutPktByte.setStatus('current')
hwCtStatisticsCt4OutErrorPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt4OutErrorPkt.setStatus('current')
hwCtStatisticsCt5OutByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt5OutByteRate.setStatus('current')
hwCtStatisticsCt5OutPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt5OutPktRate.setStatus('current')
hwCtStatisticsCt5OutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt5OutPkt.setStatus('current')
hwCtStatisticsCt5OutPktByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt5OutPktByte.setStatus('current')
hwCtStatisticsCt5OutErrorPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt5OutErrorPkt.setStatus('current')
hwCtStatisticsCt6OutByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt6OutByteRate.setStatus('current')
hwCtStatisticsCt6OutPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt6OutPktRate.setStatus('current')
hwCtStatisticsCt6OutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt6OutPkt.setStatus('current')
hwCtStatisticsCt6OutPktByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt6OutPktByte.setStatus('current')
hwCtStatisticsCt6OutErrorPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt6OutErrorPkt.setStatus('current')
hwCtStatisticsCt7OutByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt7OutByteRate.setStatus('current')
hwCtStatisticsCt7OutPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt7OutPktRate.setStatus('current')
hwCtStatisticsCt7OutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt7OutPkt.setStatus('current')
hwCtStatisticsCt7OutPktByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt7OutPktByte.setStatus('current')
hwCtStatisticsCt7OutErrorPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 8, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCtStatisticsCt7OutErrorPkt.setStatus('current')
hwCtFlowTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9), )
if mibBuilder.loadTexts: hwCtFlowTemplateTable.setStatus('current')
hwCtFlowTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1), ).setIndexNames((0, "HUAWEI-TUNNEL-TE-MIB", "hwCtFlowTemplateID"))
if mibBuilder.loadTexts: hwCtFlowTemplateEntry.setStatus('current')
hwCtFlowTemplateID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: hwCtFlowTemplateID.setStatus('current')
hwCtFlowTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 60))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCtFlowTemplateName.setStatus('current')
hwCt0Cos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt0Cos.setStatus('current')
hwCt0Scheduler = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pq", 1), ("wfq", 2), ("lpq", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt0Scheduler.setStatus('current')
hwCt0Valid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt0Valid.setStatus('current')
hwCt1Cos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt1Cos.setStatus('current')
hwCt1Scheduler = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pq", 1), ("wfq", 2), ("lpq", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt1Scheduler.setStatus('current')
hwCt1Valid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt1Valid.setStatus('current')
hwCt2Cos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt2Cos.setStatus('current')
hwCt2Scheduler = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pq", 1), ("wfq", 2), ("lpq", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt2Scheduler.setStatus('current')
hwCt2Valid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt2Valid.setStatus('current')
hwCt3Cos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt3Cos.setStatus('current')
hwCt3Scheduler = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pq", 1), ("wfq", 2), ("lpq", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt3Scheduler.setStatus('current')
hwCt3Valid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt3Valid.setStatus('current')
hwCt4Cos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt4Cos.setStatus('current')
hwCt4Scheduler = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pq", 1), ("wfq", 2), ("lpq", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt4Scheduler.setStatus('current')
hwCt4Valid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt4Valid.setStatus('current')
hwCt5Cos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt5Cos.setStatus('current')
hwCt5Scheduler = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pq", 1), ("wfq", 2), ("lpq", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt5Scheduler.setStatus('current')
hwCt5Valid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt5Valid.setStatus('current')
hwCt6Cos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt6Cos.setStatus('current')
hwCt6Scheduler = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pq", 1), ("wfq", 2), ("lpq", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt6Scheduler.setStatus('current')
hwCt6Valid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt6Valid.setStatus('current')
hwCt7Cos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt7Cos.setStatus('current')
hwCt7Scheduler = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pq", 1), ("wfq", 2), ("lpq", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt7Scheduler.setStatus('current')
hwCt7Valid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCt7Valid.setStatus('current')
hwCtFlowTemplateCommit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("commit", 1), ("nocommit", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCtFlowTemplateCommit.setStatus('current')
hwCtFlowTemplateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 9, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCtFlowTemplateRowStatus.setStatus('current')
hwDsteInterfaceCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 10), )
if mibBuilder.loadTexts: hwDsteInterfaceCfgTable.setStatus('current')
hwDsteInterfaceCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 10, 1), ).setIndexNames((0, "HUAWEI-TUNNEL-TE-MIB", "hwDsteIfIndex"))
if mibBuilder.loadTexts: hwDsteInterfaceCfgEntry.setStatus('current')
hwDsteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 10, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwDsteIfIndex.setStatus('current')
hwAppliedCtFlowTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 10, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 60))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAppliedCtFlowTemplateName.setStatus('current')
hwCtBandWidthShareCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 1, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("share", 1), ("unshare", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCtBandWidthShareCfg.setStatus('current')
hwTunnelTeConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 3))
hwTunnelTeGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 3, 3))
hwTunnelTeCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 3, 1))
hwTunnelDiffServGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 3, 3, 1)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwTunnelDiffServMode"), ("HUAWEI-TUNNEL-TE-MIB", "hwTunnelDiffServServiceClass"), ("HUAWEI-TUNNEL-TE-MIB", "hwTunnelDiffServColor"), ("HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeFlowQueue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTunnelDiffServGroup = hwTunnelDiffServGroup.setStatus('current')
hwTunnelTeVsiGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 3, 3, 2)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeVsiCir"), ("HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeVsiPir"), ("HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeVsiFlowQueue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTunnelTeVsiGroup = hwTunnelTeVsiGroup.setStatus('current')
hwTunnelTeVllGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 3, 3, 3)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeVllCir"), ("HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeVllPir"), ("HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeVllFlowQueue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTunnelTeVllGroup = hwTunnelTeVllGroup.setStatus('current')
hwTunnelTeL3vpnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 3, 3, 4)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeL3vpnCir"), ("HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeL3vpnPir"), ("HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeL3vpnFlowQueue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTunnelTeL3vpnGroup = hwTunnelTeL3vpnGroup.setStatus('current')
hwTunnelTeStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 3, 3, 5)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeUpDownStatistics"), ("HUAWEI-TUNNEL-TE-MIB", "hwTunnTeCounterDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTunnelTeStatisticsGroup = hwTunnelTeStatisticsGroup.setStatus('current')
hwCtTemplateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 3, 3, 6)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwCtTemplateName"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtTemplateCt0"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtTemplateCt1"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtTemplateCt2"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtTemplateCt3"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtTemplateCt4"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtTemplateCt5"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtTemplateCt6"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtTemplateCt7"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtTemplateCommit"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtTemplateRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCtTemplateGroup = hwCtTemplateGroup.setStatus('current')
hwCtConfigCtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 3, 3, 7)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTunnelName"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTunnelCommit"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTemplateName"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTunnelCt0Band"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTunnelCt1Band"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTunnelCt2Band"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTunnelCt3Band"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTunnelCt4Band"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTunnelCt5Band"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTunnelCt6Band"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTunnelCt7Band"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCtConfigCtGroup = hwCtConfigCtGroup.setStatus('current')
hwCtStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 3, 3, 8)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsTunnelName"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt0OutByteRate"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt0OutPktRate"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt0OutPkt"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt0OutPktByte"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt0OutErrorPkt"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt1OutByteRate"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt1OutPktRate"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt1OutPkt"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt1OutPktByte"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt1OutErrorPkt"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt2OutByteRate"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt2OutPktRate"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt2OutPkt"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt2OutPktByte"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt2OutErrorPkt"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt3OutByteRate"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt3OutPktRate"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt3OutPkt"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt3OutPktByte"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt3OutErrorPkt"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt4OutByteRate"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt4OutPktRate"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt4OutPkt"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt4OutPktByte"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt4OutErrorPkt"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt5OutByteRate"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt5OutPktRate"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt5OutPkt"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt5OutPktByte"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt5OutErrorPkt"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt6OutByteRate"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt6OutPktRate"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt6OutPkt"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt6OutPktByte"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt6OutErrorPkt"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt7OutByteRate"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt7OutPktRate"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt7OutPkt"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt7OutPktByte"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsCt7OutErrorPkt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCtStatisticsGroup = hwCtStatisticsGroup.setStatus('current')
hwCtFlowTemplateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 3, 3, 10)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwCtFlowTemplateName"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt0Cos"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt0Scheduler"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt0Valid"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt1Cos"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt1Scheduler"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt1Valid"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt2Cos"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt2Scheduler"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt2Valid"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt3Cos"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt3Scheduler"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt3Valid"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt4Cos"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt4Scheduler"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt4Valid"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt5Cos"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt5Scheduler"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt5Valid"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt6Cos"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt6Scheduler"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt6Valid"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt7Cos"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt7Scheduler"), ("HUAWEI-TUNNEL-TE-MIB", "hwCt7Valid"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtFlowTemplateCommit"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtFlowTemplateRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCtFlowTemplateGroup = hwCtFlowTemplateGroup.setStatus('current')
hwDsteInterfaceCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 3, 3, 11)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwAppliedCtFlowTemplateName"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtBandWidthShareCfg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDsteInterfaceCfgGroup = hwDsteInterfaceCfgGroup.setStatus('current')
hwTunnelDsTeTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 2))
hwMplsFqShortage = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 2, 1)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTunnelName"))
if mibBuilder.loadTexts: hwMplsFqShortage.setStatus('obsolete')
hwMplsSqShortage = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 2, 2)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTunnelName"))
if mibBuilder.loadTexts: hwMplsSqShortage.setStatus('obsolete')
hwMplsSqBandwidthExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 2, 3)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTunnelName"))
if mibBuilder.loadTexts: hwMplsSqBandwidthExceed.setStatus('obsolete')
hwMplsHsbFqShortage = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 2, 4)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTunnelName"))
if mibBuilder.loadTexts: hwMplsHsbFqShortage.setStatus('obsolete')
hwMplsHsbSqShortage = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 2, 5)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTunnelName"))
if mibBuilder.loadTexts: hwMplsHsbSqShortage.setStatus('obsolete')
hwMplsHsbSqBandwidthExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 2, 6)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigTunnelName"))
if mibBuilder.loadTexts: hwMplsHsbSqBandwidthExceed.setStatus('obsolete')
hwTunnelTeTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 3, 3, 9)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwMplsHsbSqBandwidthExceed"), ("HUAWEI-TUNNEL-TE-MIB", "hwMplsHsbSqShortage"), ("HUAWEI-TUNNEL-TE-MIB", "hwMplsHsbFqShortage"), ("HUAWEI-TUNNEL-TE-MIB", "hwMplsSqBandwidthExceed"), ("HUAWEI-TUNNEL-TE-MIB", "hwMplsSqShortage"), ("HUAWEI-TUNNEL-TE-MIB", "hwMplsFqShortage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTunnelTeTrapGroup = hwTunnelTeTrapGroup.setStatus('current')
hwTunnelTeCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 151, 3, 1, 1)).setObjects(("HUAWEI-TUNNEL-TE-MIB", "hwTunnelDiffServGroup"), ("HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeVsiGroup"), ("HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeVllGroup"), ("HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeL3vpnGroup"), ("HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeStatisticsGroup"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtTemplateGroup"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtConfigCtGroup"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtStatisticsGroup"), ("HUAWEI-TUNNEL-TE-MIB", "hwTunnelTeTrapGroup"), ("HUAWEI-TUNNEL-TE-MIB", "hwCtFlowTemplateGroup"), ("HUAWEI-TUNNEL-TE-MIB", "hwDsteInterfaceCfgGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTunnelTeCompliance = hwTunnelTeCompliance.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-TUNNEL-TE-MIB", hwCt2Scheduler=hwCt2Scheduler, hwCt7Valid=hwCt7Valid, hwCt4Valid=hwCt4Valid, hwCtStatisticsCt3OutByteRate=hwCtStatisticsCt3OutByteRate, hwCtConfigTunnelCt4Band=hwCtConfigTunnelCt4Band, hwTunnelTeVllGroup=hwTunnelTeVllGroup, hwTunnelTeVsiName=hwTunnelTeVsiName, hwTunnelTeVsiGroup=hwTunnelTeVsiGroup, hwDsteInterfaceCfgEntry=hwDsteInterfaceCfgEntry, hwTunnelTeVsiFlowQueue=hwTunnelTeVsiFlowQueue, hwCtTemplateCt4=hwCtTemplateCt4, hwCtFlowTemplateRowStatus=hwCtFlowTemplateRowStatus, hwTunnelDiffServServiceClass=hwTunnelDiffServServiceClass, hwAppliedCtFlowTemplateName=hwAppliedCtFlowTemplateName, PYSNMP_MODULE_ID=hwTunnelTeMib, hwCtStatisticsCt3OutPktRate=hwCtStatisticsCt3OutPktRate, hwCtStatisticsCt6OutPkt=hwCtStatisticsCt6OutPkt, hwTunnelTeVsiEntry=hwTunnelTeVsiEntry, hwTunnelTeGroups=hwTunnelTeGroups, hwCtStatisticsCt7OutErrorPkt=hwCtStatisticsCt7OutErrorPkt, hwTunnelTeVsiIndex=hwTunnelTeVsiIndex, hwCtStatisticsCt5OutByteRate=hwCtStatisticsCt5OutByteRate, hwCt3Scheduler=hwCt3Scheduler, hwCtConfigTunnelName=hwCtConfigTunnelName, hwCtConfigTunnelCt3Band=hwCtConfigTunnelCt3Band, hwMplsSqShortage=hwMplsSqShortage, hwCt6Cos=hwCt6Cos, hwCtStatisticsCt3OutPktByte=hwCtStatisticsCt3OutPktByte, hwTunnelDiffServGroup=hwTunnelDiffServGroup, hwCtStatisticsCt2OutPkt=hwCtStatisticsCt2OutPkt, hwTunnelTeVllTable=hwTunnelTeVllTable, hwCt0Scheduler=hwCt0Scheduler, hwCt0Valid=hwCt0Valid, hwCt3Cos=hwCt3Cos, hwCt5Cos=hwCt5Cos, hwCtTemplateCt2=hwCtTemplateCt2, hwTunnelTeVsiCir=hwTunnelTeVsiCir, hwCtStatisticsIfIndex=hwCtStatisticsIfIndex, hwCtTemplateCt7=hwCtTemplateCt7, hwDsteInterfaceCfgGroup=hwDsteInterfaceCfgGroup, hwMplsHsbFqShortage=hwMplsHsbFqShortage, hwCtStatisticsCt0OutPktRate=hwCtStatisticsCt0OutPktRate, hwCtStatisticsCt1OutPktByte=hwCtStatisticsCt1OutPktByte, hwCtStatisticsGroup=hwCtStatisticsGroup, hwCt1Valid=hwCt1Valid, hwCtStatisticsCt0OutPkt=hwCtStatisticsCt0OutPkt, hwCtStatisticsCt2OutPktRate=hwCtStatisticsCt2OutPktRate, hwTunnelDiffServEntry=hwTunnelDiffServEntry, hwCtStatisticsCt6OutPktRate=hwCtStatisticsCt6OutPktRate, hwCtFlowTemplateTable=hwCtFlowTemplateTable, hwCtStatisticsCt7OutByteRate=hwCtStatisticsCt7OutByteRate, hwCtConfigTunnelCtTable=hwCtConfigTunnelCtTable, hwTunnelTeL3vpnCir=hwTunnelTeL3vpnCir, hwCtTemplateEntry=hwCtTemplateEntry, hwCtConfigCtGroup=hwCtConfigCtGroup, hwCtTemplateCt3=hwCtTemplateCt3, hwCtConfigTemplateName=hwCtConfigTemplateName, hwTunnelTeL3vpnEntry=hwTunnelTeL3vpnEntry, hwTunnelTeUpDownStatistics=hwTunnelTeUpDownStatistics, hwCtStatisticsCt6OutPktByte=hwCtStatisticsCt6OutPktByte, hwCtStatisticsCt4OutPkt=hwCtStatisticsCt4OutPkt, hwCt0Cos=hwCt0Cos, hwCt3Valid=hwCt3Valid, hwDsteIfIndex=hwDsteIfIndex, hwCt6Scheduler=hwCt6Scheduler, hwCtFlowTemplateName=hwCtFlowTemplateName, hwTunnelTeL3vpnPir=hwTunnelTeL3vpnPir, hwCtStatisticsCt1OutByteRate=hwCtStatisticsCt1OutByteRate, hwCt5Scheduler=hwCt5Scheduler, hwMplsSqBandwidthExceed=hwMplsSqBandwidthExceed, hwCtStatisticsCt5OutPktRate=hwCtStatisticsCt5OutPktRate, hwCtTemplateName=hwCtTemplateName, hwCtStatisticsCt5OutErrorPkt=hwCtStatisticsCt5OutErrorPkt, hwTunnelTeVllCir=hwTunnelTeVllCir, hwTunnelTeL3vpnGroup=hwTunnelTeL3vpnGroup, hwTunnelTeVllPir=hwTunnelTeVllPir, hwCtStatisticsCt1OutPkt=hwCtStatisticsCt1OutPkt, hwCtStatisticsCt7OutPktByte=hwCtStatisticsCt7OutPktByte, hwMplsHsbSqBandwidthExceed=hwMplsHsbSqBandwidthExceed, hwCt4Scheduler=hwCt4Scheduler, hwCtFlowTemplateGroup=hwCtFlowTemplateGroup, hwCtStatisticsTunnelName=hwCtStatisticsTunnelName, hwCtTemplateRowStatus=hwCtTemplateRowStatus, hwTunnelTeStatisticsIfIndex=hwTunnelTeStatisticsIfIndex, hwCt1Cos=hwCt1Cos, hwTunnelTeL3vpnName=hwTunnelTeL3vpnName, hwCtStatisticsCt3OutErrorPkt=hwCtStatisticsCt3OutErrorPkt, hwTunnelTeVllFlowQueue=hwTunnelTeVllFlowQueue, hwCtConfigTunnelCt6Band=hwCtConfigTunnelCt6Band, hwCtStatisticsCt5OutPkt=hwCtStatisticsCt5OutPkt, hwTunnelTeStatisticsGroup=hwTunnelTeStatisticsGroup, hwMplsHsbSqShortage=hwMplsHsbSqShortage, hwCtTemplateIndex=hwCtTemplateIndex, hwCtStatisticsCt2OutErrorPkt=hwCtStatisticsCt2OutErrorPkt, hwCtConfigTunnelCt7Band=hwCtConfigTunnelCt7Band, hwCtStatisticsCt4OutErrorPkt=hwCtStatisticsCt4OutErrorPkt, hwCtStatisticsCt0OutPktByte=hwCtStatisticsCt0OutPktByte, hwCtTemplateCt1=hwCtTemplateCt1, hwTunnelTeConformance=hwTunnelTeConformance, hwTunnelTeStatisticsEntry=hwTunnelTeStatisticsEntry, hwCt6Valid=hwCt6Valid, hwCt2Cos=hwCt2Cos, hwCtFlowTemplateEntry=hwCtFlowTemplateEntry, hwCtTemplateCommit=hwCtTemplateCommit, hwTunnelDiffServColor=hwTunnelDiffServColor, hwCtStatisticsTable=hwCtStatisticsTable, hwTunnelTeL3vpnFlowQueue=hwTunnelTeL3vpnFlowQueue, hwTunnelTeMibObject=hwTunnelTeMibObject, hwTunnelTeVllEntry=hwTunnelTeVllEntry, hwCtStatisticsCt6OutByteRate=hwCtStatisticsCt6OutByteRate, hwTunnelDiffServIndex=hwTunnelDiffServIndex, hwCtConfigTunnelCtIfIndex=hwCtConfigTunnelCtIfIndex, hwCtTemplateGroup=hwCtTemplateGroup, hwCt2Valid=hwCt2Valid, hwCtFlowTemplateCommit=hwCtFlowTemplateCommit, hwTunnelDiffServMode=hwTunnelDiffServMode, hwCtFlowTemplateID=hwCtFlowTemplateID, hwTunnelTeL3vpnIndex=hwTunnelTeL3vpnIndex, hwCtConfigTunnelCt2Band=hwCtConfigTunnelCt2Band, hwCtTemplateCt0=hwCtTemplateCt0, hwTunnelTeFlowQueue=hwTunnelTeFlowQueue, hwTunnelTeTrapGroup=hwTunnelTeTrapGroup, hwCt5Valid=hwCt5Valid, hwCtStatisticsCt5OutPktByte=hwCtStatisticsCt5OutPktByte, hwTunnelTeVsiTable=hwTunnelTeVsiTable, hwCtStatisticsCt4OutPktByte=hwCtStatisticsCt4OutPktByte, hwTunnelTeVllInterfaceName=hwTunnelTeVllInterfaceName, hwTunnelTeCompliance=hwTunnelTeCompliance, hwCtStatisticsCt4OutByteRate=hwCtStatisticsCt4OutByteRate, hwCtTemplateTable=hwCtTemplateTable, hwTunnelDiffServTable=hwTunnelDiffServTable, hwCtConfigTunnelCt0Band=hwCtConfigTunnelCt0Band, hwCtConfigTunnelCt1Band=hwCtConfigTunnelCt1Band, hwCtStatisticsCt1OutErrorPkt=hwCtStatisticsCt1OutErrorPkt, hwCtConfigTunnelCtEntry=hwCtConfigTunnelCtEntry, hwTunnelTeCompliances=hwTunnelTeCompliances, hwCtStatisticsCt0OutErrorPkt=hwCtStatisticsCt0OutErrorPkt, hwMplsFqShortage=hwMplsFqShortage, hwTunnelTeStatisticsTable=hwTunnelTeStatisticsTable, hwTunnTeCounterDiscontinuityTime=hwTunnTeCounterDiscontinuityTime, hwCtStatisticsCt7OutPkt=hwCtStatisticsCt7OutPkt, hwCtStatisticsCt6OutErrorPkt=hwCtStatisticsCt6OutErrorPkt, hwCt4Cos=hwCt4Cos, hwCtStatisticsCt0OutByteRate=hwCtStatisticsCt0OutByteRate, hwCt7Cos=hwCt7Cos, hwCtStatisticsCt2OutPktByte=hwCtStatisticsCt2OutPktByte, hwTunnelTeL3vpnTable=hwTunnelTeL3vpnTable, hwCtStatisticsEntry=hwCtStatisticsEntry, hwCtStatisticsCt3OutPkt=hwCtStatisticsCt3OutPkt, hwCtTemplateCt6=hwCtTemplateCt6, hwTunnelTeMib=hwTunnelTeMib, hwCtBandWidthShareCfg=hwCtBandWidthShareCfg, hwCt7Scheduler=hwCt7Scheduler, hwTunnelTeVsiPir=hwTunnelTeVsiPir, hwCtStatisticsCt4OutPktRate=hwCtStatisticsCt4OutPktRate, hwCtTemplateCt5=hwCtTemplateCt5, hwCtStatisticsCt7OutPktRate=hwCtStatisticsCt7OutPktRate, hwCtConfigTunnelCommit=hwCtConfigTunnelCommit, hwTunnelDsTeTrap=hwTunnelDsTeTrap, hwCtStatisticsCt2OutByteRate=hwCtStatisticsCt2OutByteRate, hwCt1Scheduler=hwCt1Scheduler, hwDsteInterfaceCfgTable=hwDsteInterfaceCfgTable, hwTunnelTeVllIndex=hwTunnelTeVllIndex, hwCtStatisticsCt1OutPktRate=hwCtStatisticsCt1OutPktRate, hwCtConfigTunnelCt5Band=hwCtConfigTunnelCt5Band)
